<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="c20ce7c612af9190f6bcf94ead500a92e2ea214d" translate="yes" xml:space="preserve">
          <source>Postgres.app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523059071cfa07b7c0f18a203eb1612067f7be33" translate="yes" xml:space="preserve">
          <source>Prefer using &lt;code&gt;dependencies&lt;/code&gt; over &lt;code&gt;run_before&lt;/code&gt; when possible. You should only use &lt;code&gt;run_before&lt;/code&gt; if it is undesirable or impractical to specify &lt;code&gt;dependencies&lt;/code&gt; in the migration which you want to run after the one you are writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97a5478b5bba7828765ab369cbe0478c04066f4" translate="yes" xml:space="preserve">
          <source>Prefetches the given lookups on an iterable of model instances. This is useful in code that receives a list of model instances as opposed to a &lt;code&gt;QuerySet&lt;/code&gt;; for example, when fetching models from a cache or instantiating them manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115927d84d6eb90b2707da9a9f235e3d14a2a76d" translate="yes" xml:space="preserve">
          <source>Prefixes (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dca0e059b22a6cfdd560c923d98583c63598a89" translate="yes" xml:space="preserve">
          <source>Prefixes for forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad118ef82fcc3c54b6d51992f8c272b56add11d6" translate="yes" xml:space="preserve">
          <source>Prepared Geometries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff321486de056243480d955524cf120c975fc0b0" translate="yes" xml:space="preserve">
          <source>Preparing the software for localization. Usually done by developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c8443407ed08814844976bdb433740cda7b90f" translate="yes" xml:space="preserve">
          <source>Prepopulated fields aren&amp;rsquo;t modified by JavaScript after a value has been saved. It&amp;rsquo;s usually undesired that slugs change (which would cause an object&amp;rsquo;s URL to change if the slug is used in it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854812af4e2b3c438cb6a06192eef07b305b60dd" translate="yes" xml:space="preserve">
          <source>Preprocesses context data that will be used for rendering a template. Accepts a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of context data. By default, returns the same &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6090228bf8ad81ac4558889d4268c8ed63d5bd4f" translate="yes" xml:space="preserve">
          <source>Preprocessing values before saving</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ecfb2b12c0053474378d6a25321470acb87657" translate="yes" xml:space="preserve">
          <source>Prerequisite: uWSGI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebe16f4fda75e7db8792297762ca8fc8c47daa2" translate="yes" xml:space="preserve">
          <source>Present date-based objects in year/month/day archive pages, associated detail, and &amp;ldquo;latest&amp;rdquo; pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9922db7f8818e55a4f63a4c438eac414d5121e" translate="yes" xml:space="preserve">
          <source>Presents a form for entering a new password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95263d920ccc7b877fb77950cfacbe298bbdc8c2" translate="yes" xml:space="preserve">
          <source>Presents a view which informs the user that the password has been successfully changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f04b4930f7ab4066429f8a65023b692cff21f6" translate="yes" xml:space="preserve">
          <source>Preserves the test database between test runs. This has the advantage of skipping both the create and destroy actions which can greatly decrease the time to run tests, especially those in a large test suite. If the test database does not exist, it will be created on the first run and then preserved for each subsequent run. Any unapplied migrations will also be applied to the test database before running the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c0d9efff4e1dd08f3a8f202f1ed9af96de27c8" translate="yes" xml:space="preserve">
          <source>Preserving the test database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027a0b03c04a3561860ebf6a28cdaa5f9495d276" translate="yes" xml:space="preserve">
          <source>Press [TAB] to see all available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e492bbbbf55bd53cc9ac57b239a141a023fbf86" translate="yes" xml:space="preserve">
          <source>Prevent deletion of the referenced object by raising &lt;a href=&quot;../exceptions#django.db.models.ProtectedError&quot;&gt;&lt;code&gt;ProtectedError&lt;/code&gt;&lt;/a&gt;, a subclass of &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;django.db.IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f9f23aa624c2de9d0358a0ae6fff5bf1557a95" translate="yes" xml:space="preserve">
          <source>Preventing clickjacking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511c81c16793858ca2ece2ae2e8234d3972a01c1" translate="yes" xml:space="preserve">
          <source>Preventing duplicate signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c644023e370d9dc7aac34e432d53b5826aaa6e" translate="yes" xml:space="preserve">
          <source>Preventing header injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165f911940c6e164a716a8fcc974dd7cb43ad967" translate="yes" xml:space="preserve">
          <source>Prevents deleting the temporary &lt;code&gt;.pot&lt;/code&gt; files generated before creating the &lt;code&gt;.po&lt;/code&gt; file. This is useful for debugging errors which may prevent the final language files from being created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba291d0888026cf59268d79dfc8b464694ef680e" translate="yes" xml:space="preserve">
          <source>Prevents specific applications or models (specified in the form of &lt;code&gt;app_label.ModelName&lt;/code&gt;) from being dumped. If you specify a model name, the output will be restricted to that model, rather than the entire application. You can also mix application names and model names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4264a4a72226a36691ccc5dac4c6de245da90be9" translate="yes" xml:space="preserve">
          <source>Previewing your changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb8f40b05c3587bf2c1a05a6668d89d83c3d4ea" translate="yes" xml:space="preserve">
          <source>Previous versions of this document recommended configuring your web server to ensure it validates incoming HTTP &lt;code&gt;Host&lt;/code&gt; headers. While this is still recommended, in many common web servers a configuration that seems to validate the &lt;code&gt;Host&lt;/code&gt; header may not in fact do so. For instance, even if Apache is configured such that your Django site is served from a non-default virtual host with the &lt;code&gt;ServerName&lt;/code&gt; set, it is still possible for an HTTP request to match this virtual host and supply a fake &lt;code&gt;Host&lt;/code&gt; header. Thus, Django now requires that you set &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; explicitly rather than relying on web server configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4b272cedf3b2a30ec92ffb3f4fe6f988f414f0" translate="yes" xml:space="preserve">
          <source>Primary key type compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ad1d57736398f642f8004c5db582207ce0e4fd" translate="yes" xml:space="preserve">
          <source>Primary key. The field itself may contain up to 40 characters. The current implementation generates a 32-character string (a random sequence of digits and lowercase ASCII letters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83b9b74713a9bc6fedf5bf52b2475564747f9a4" translate="yes" xml:space="preserve">
          <source>Primary keys (IDs) are added automatically. (You can override this, too.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fe05b86b7da452505028e1291f37fb70eb92a8" translate="yes" xml:space="preserve">
          <source>Prints the SQL for the named migration. This requires an active database connection, which it will use to resolve constraint names; this means you must generate the SQL against a copy of the database you wish to later apply it on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2445461abe594d458d1e5396533b20215a328c4b" translate="yes" xml:space="preserve">
          <source>Prints the SQL statements for resetting sequences for the given app name(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5febeb88e08835ef8f5fc78e15810ce8069e06d" translate="yes" xml:space="preserve">
          <source>Prints the SQL statements that would be executed for the &lt;a href=&quot;#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdde26164c9b8824994ca762eafe5f2b785de86" translate="yes" xml:space="preserve">
          <source>Prints the SQL that would be run without actually running it, so you can customize it or use the migrations framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29dd119e2c8b27aca03440cf36558b8e7d7bbb23" translate="yes" xml:space="preserve">
          <source>Private methods (starting with an underscore) are not copied by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dc1d824db7fefcbe324103abda6b046bd33b6a" translate="yes" xml:space="preserve">
          <source>Proceed through the following sections sequentially in order to install GeoDjango on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d016f6cb5948c7b35a01afe262153e986cf104" translate="yes" xml:space="preserve">
          <source>Proceed through the tutorial sections sequentially for step-by-step instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a942f23e9c9082b53d2c70151316fd978ffa1115" translate="yes" xml:space="preserve">
          <source>Produces one of its arguments each time this tag is encountered. The first argument is produced on the first encounter, the second argument on the second encounter, and so forth. Once all arguments are exhausted, the tag cycles to the first argument and produces it again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c5627e57d7bec52b8e244d25cd541ec4c9cbb7" translate="yes" xml:space="preserve">
          <source>Profile first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d68007b0763cb230f9034ec96f52b39d03ad630" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5214f5abf2dffdfb9c38209fec6cb15d0ff4aa" translate="yes" xml:space="preserve">
          <source>Programmatically creating permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58878042f64124bf69f272265174f4139135371" translate="yes" xml:space="preserve">
          <source>Projects and applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79ed9384f9e86f2c9c58306a052b68419b0065c" translate="yes" xml:space="preserve">
          <source>Projects that support multitenancy or otherwise alter business logic based on the request&amp;rsquo;s host and use custom host names in tests must include those hosts in &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a31e358cffb03fe05f2dbc4d4231069cedeb24" translate="yes" xml:space="preserve">
          <source>Projects vs. apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5015eaf27a2c3bf8250d743ff8fa8b5f1ad4b86" translate="yes" xml:space="preserve">
          <source>Property that may be used to retrieve or set a spatial filter for this layer. A spatial filter can only be set with an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; instance, a 4-tuple extent, or &lt;code&gt;None&lt;/code&gt;. When set with something other than &lt;code&gt;None&lt;/code&gt;, only features that intersect the filter will be returned when iterating over the layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdd9e48cb8289c624ed76251b8b66f1f1ebd5a6" translate="yes" xml:space="preserve">
          <source>Property that may be used to retrieve or set the SRID associated with the geometry. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f91f24895595d0be0e68dff39c934b00f655fff" translate="yes" xml:space="preserve">
          <source>Property that returns the &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; associated with this layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7745325509888c73a358af0046b765db273266" translate="yes" xml:space="preserve">
          <source>Protecting complex data structures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d5d48be5fd9b054d275c493f56eee39042a9a1" translate="yes" xml:space="preserve">
          <source>Protecting sensitive areas such as the user account or the admin isn&amp;rsquo;t sufficient, because the same session cookie is used for HTTP and HTTPS. Your web server must redirect all HTTP traffic to HTTPS, and only transmit HTTPS requests to Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db91616733b4b7e15646c353e9a98bf0f4ea473" translate="yes" xml:space="preserve">
          <source>Protecting the &lt;code&gt;SECRET_KEY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ac2fba3ec304ab5f17d935fd9b06f7f08805b5" translate="yes" xml:space="preserve">
          <source>Protocol downgrade: a downgrade occurs if the page containing the link is served via HTTPS, but the page being linked to is not served via HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528565edbcbb71b3ec096df647c3d688589eb6bf" translate="yes" xml:space="preserve">
          <source>Provide a descriptive error &lt;code&gt;code&lt;/code&gt; to the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27a7615da14529ecc11577700c5a39ff1ea519f" translate="yes" xml:space="preserve">
          <source>Provide an integer number of bytes to the &lt;a href=&quot;https://www.postgresql.org/docs/current/runtime-config-client.html#GUC-GIN-PENDING-LIST-LIMIT&quot;&gt;gin_pending_list_limit&lt;/a&gt; parameter to tune the maximum size of the GIN pending list which is used when &lt;code&gt;fastupdate&lt;/code&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f521a106483229aa0f9ae9885780cc1929d1204b" translate="yes" xml:space="preserve">
          <source>Provide an integer value from 10 to 100 to the &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS&quot;&gt;fillfactor&lt;/a&gt; parameter to tune how packed the index pages will be. PostgreSQL&amp;rsquo;s default is 90.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a9dbaa6a4cbd13cf1e1202225c968c6711e450" translate="yes" xml:space="preserve">
          <source>Provided test case classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83563921a64bb5a23ec520c7f1c9ad644a076b33" translate="yes" xml:space="preserve">
          <source>Provides a mechanism for looking up an object associated with the current HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d091d9b262a73f5b9087a61ee9e70f430a659f" translate="yes" xml:space="preserve">
          <source>Provides a mechanism to construct a &lt;a href=&quot;../template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt;, given suitable context. The template to use is configurable and can be further customized by subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39650b96a09f55e8ecda48574b51b40d2d21c19d" translate="yes" xml:space="preserve">
          <source>Provides the chance to do any pre-processing or validation of the expression before it&amp;rsquo;s added to the query. &lt;code&gt;resolve_expression()&lt;/code&gt; must also be called on any nested expressions. A &lt;code&gt;copy()&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt; should be returned with any necessary transformations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd9b330ec5d096fbfe3aab4b0e69575b495d59a" translate="yes" xml:space="preserve">
          <source>Provides the path to a directory with a custom app template file, or a path to an uncompressed archive (&lt;code&gt;.tar&lt;/code&gt;) or a compressed archive (&lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.tar.bz2&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.tar.lzma&lt;/code&gt;, &lt;code&gt;.tgz&lt;/code&gt;, &lt;code&gt;.tbz2&lt;/code&gt;, &lt;code&gt;.txz&lt;/code&gt;, &lt;code&gt;.tlz&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt;) containing the app template files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33550ed53a4b76c89a93f72587a138522a6d0a46" translate="yes" xml:space="preserve">
          <source>Providing a useful &lt;code&gt;context_object_name&lt;/code&gt; is always a good idea. Your coworkers who design templates will thank you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241255dc719c7fd8c6010c3454aa15997fe59662" translate="yes" xml:space="preserve">
          <source>Providing data with fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f433c914bee78855dfa641ac952c102155829f3" translate="yes" xml:space="preserve">
          <source>Providing initial data for models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d626c700019f7f9e1c6d1295aba5248dfb359d" translate="yes" xml:space="preserve">
          <source>Providing initial data with migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312dad7e87c0b4b590970f55e7bcbfdb9b50b77d" translate="yes" xml:space="preserve">
          <source>Providing initial values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c0e9dd8326d0acce61508ac7dfe0f3b182c96e" translate="yes" xml:space="preserve">
          <source>Providing one or more app names as arguments will limit the migrations created to the app(s) specified and any dependencies needed (the table at the other end of a &lt;code&gt;ForeignKey&lt;/code&gt;, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964b76551df709154f170559493bdd68ccda08d2" translate="yes" xml:space="preserve">
          <source>Proxy model inheritance might look fairly similar to creating an unmanaged model, using the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed&lt;/code&gt;&lt;/a&gt; attribute on a model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d37de63fd7824ac46ae5d4a2cd688c3d71412f9" translate="yes" xml:space="preserve">
          <source>Proxy model managers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2020dc851cb76f0e4b785c288f27da235ffad07e" translate="yes" xml:space="preserve">
          <source>Proxy models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f051748527fa7e7754343af73d5f76969084a0d" translate="yes" xml:space="preserve">
          <source>Proxy models are declared like normal models. You tell Django that it&amp;rsquo;s a proxy model by setting the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.proxy&quot;&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/a&gt; attribute of the &lt;code&gt;Meta&lt;/code&gt; class to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98076e453af6e51d57dfdd2552aaab7b420794e" translate="yes" xml:space="preserve">
          <source>Proxy models inherit &lt;code&gt;Meta&lt;/code&gt; attributes &lt;a href=&quot;#meta-and-multi-table-inheritance&quot;&gt;in the same way as regular models&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4703f9a257610de77d71c05797144d73589af4" translate="yes" xml:space="preserve">
          <source>Proxy models need their own content type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9d012e2312b562e6428b6a35777b59361bd26d" translate="yes" xml:space="preserve">
          <source>Proxy models work exactly the same way as concrete models. Permissions are created using the own content type of the proxy model. Proxy models don&amp;rsquo;t inherit the permissions of the concrete model they subclass:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aacbb36241a1ca6f72f612f18db7ea69dae8382" translate="yes" xml:space="preserve">
          <source>Public methods are copied by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c28f4af947776f8d77a5d5338903599a1de0a6" translate="yes" xml:space="preserve">
          <source>Publisher A has two books with ratings 4 and 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45d70d91077f59d49811da65ee0fa398ffda9f3" translate="yes" xml:space="preserve">
          <source>Publisher B has two books with ratings 1 and 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7db3bbd0f99e7b0edf7bd2e43df08344c70553" translate="yes" xml:space="preserve">
          <source>Publisher C has one book with rating 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dd0794c936de6d3ad4c09cb8e57df73a0945a8" translate="yes" xml:space="preserve">
          <source>Publishing Atom and RSS feeds in tandem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68487fe0cee1b6ceedccc629b38fa03159c3945c" translate="yes" xml:space="preserve">
          <source>Publishing your app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba1f9367c8e8c568022a61b9b369082b4cfd561" translate="yes" xml:space="preserve">
          <source>Push your code up to the deployment server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadb047592cfe37dd011002bf7e2639bda1fcceb" translate="yes" xml:space="preserve">
          <source>Push your local &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; up to the static file server into the directory that&amp;rsquo;s being served. &lt;a href=&quot;https://rsync.samba.org/&quot;&gt;rsync&lt;/a&gt; is a common choice for this step since it only needs to transfer the bits of static files that have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b01d9d8afd5c1419255a78b21d4c8564dfd79f1" translate="yes" xml:space="preserve">
          <source>Pushing the commit and making a pull request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d1895ad0608b1b5bbae01ca3636f2b6dc0f35b" translate="yes" xml:space="preserve">
          <source>Put a &lt;code&gt;__str__()&lt;/code&gt; method on the class you&amp;rsquo;re wrapping up as a field. There are a lot of places where the default behavior of the field code is to call &lt;code&gt;str()&lt;/code&gt; on the value. (In our examples in this document, &lt;code&gt;value&lt;/code&gt; would be a &lt;code&gt;Hand&lt;/code&gt; instance, not a &lt;code&gt;HandField&lt;/code&gt;). So if your &lt;code&gt;__str__()&lt;/code&gt; method automatically converts to the string form of your Python object, you can save yourself a lot of work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc3697fd74ad800cdb65b95ed1256b265978ffe" translate="yes" xml:space="preserve">
          <source>Put another way, these two statements are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113aa8400909bb8025f22528466cef0ded59dd97" translate="yes" xml:space="preserve">
          <source>Put the following code in that stylesheet (&lt;code&gt;polls/static/polls/style.css&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411a91560b7663acac9ce076ccc85f4c4d1c21dc" translate="yes" xml:space="preserve">
          <source>Put the following code in that template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb93e1d98a2d503a0ae31bf0a3fd07958d6299c7" translate="yes" xml:space="preserve">
          <source>Put the following in the &lt;code&gt;tests.py&lt;/code&gt; file in the &lt;code&gt;polls&lt;/code&gt; application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b503384f9953d15e50e60d91e7f9e83267b6920b" translate="yes" xml:space="preserve">
          <source>Put your code in some directory &lt;strong&gt;outside&lt;/strong&gt; of the document root, such as &lt;code&gt;/home/mycode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129940d6c9b56347fe5777f9d82e5c74abcd55d2" translate="yes" xml:space="preserve">
          <source>Putting a prefix on your URL names, perhaps derived from the application name (such as &lt;code&gt;myapp-comment&lt;/code&gt; instead of &lt;code&gt;comment&lt;/code&gt;), decreases the chance of collision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cd77981f9800d0e2d8ef2d7e04afe5159a340e" translate="yes" xml:space="preserve">
          <source>Putting it all together:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bb0163032196a7943a56c85925ce7d0c607748" translate="yes" xml:space="preserve">
          <source>Putting your data on the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e72da85f21769ca9a8ee3181ea9def0321f98f" translate="yes" xml:space="preserve">
          <source>PyPI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a8abd9c67edee408fd2abe078b7be5cc8f58b5" translate="yes" xml:space="preserve">
          <source>Python 3 required!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c66795b172fd0d01757fe62e8fe6e5cf650329a" translate="yes" xml:space="preserve">
          <source>Python 3.7 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51273002ed21b7ecefc2d0178e6808a4b6287b1" translate="yes" xml:space="preserve">
          <source>Python &lt;em&gt;packaging&lt;/em&gt; refers to preparing your app in a specific format that can be easily installed and used. Django itself is packaged very much like this. For a small app like polls, this process isn&amp;rsquo;t too difficult.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c44ed7f0b589594e5ddb71913c583217eb063c" translate="yes" xml:space="preserve">
          <source>Python Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d366800e94a11a3195a317bc4a3f1eff4b53dcb8" translate="yes" xml:space="preserve">
          <source>Python and Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a555890788b420e7f254eabb4e050cd775cac7" translate="yes" xml:space="preserve">
          <source>Python comes with a CSV library, &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;. The key to using it with Django is that the &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s CSV-creation capability acts on file-like objects, and Django&amp;rsquo;s &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are file-like objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d7ca2263f1691e91452f9c27c51c80c4de7456" translate="yes" xml:space="preserve">
          <source>Python has the ability to define functions that accept arbitrary name-value arguments whose names and values are evaluated at runtime. For more information, see &lt;a href=&quot;https://docs.python.org/3/tutorial/controlflow.html#tut-keywordargs&quot;&gt;Keyword Arguments&lt;/a&gt; in the official Python tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d5a072cff1e19cc4cd60f5e5754b02d85b8189" translate="yes" xml:space="preserve">
          <source>Python on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ce9115b32b5ef3afe9404baebb6181290dd713" translate="yes" xml:space="preserve">
          <source>Python packages without an &lt;code&gt;__init__.py&lt;/code&gt; file are known as &amp;ldquo;namespace packages&amp;rdquo; and may be spread across multiple directories at different locations on &lt;code&gt;sys.path&lt;/code&gt; (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0420&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 420&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae88734e5a2cd666ca3daddd0e40270c9dd251c" translate="yes" xml:space="preserve">
          <source>Python provides a number of tools for lazy evaluation, particularly through the &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-expression&quot;&gt;generator expression&lt;/a&gt; constructs. It&amp;rsquo;s worth reading up on laziness in Python to discover opportunities for making use of lazy patterns in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63faae04590c53c82f8c5a100d4276b9e3d9c75e" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; objects have a &lt;code&gt;tzinfo&lt;/code&gt; attribute that can be used to store time zone information, represented as an instance of a subclass of &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt;. When this attribute is set and describes an offset, a datetime object is &lt;strong&gt;aware&lt;/strong&gt;. Otherwise, it&amp;rsquo;s &lt;strong&gt;naive&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0456c6124c4fb4655ebc249cf3f323e5b2d1a6c3" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;datetime.time&lt;/code&gt;&lt;/a&gt; objects also feature a &lt;code&gt;tzinfo&lt;/code&gt; attribute, and PostgreSQL has a matching &lt;code&gt;time with time zone&lt;/code&gt; type. However, as PostgreSQL&amp;rsquo;s docs put it, this type &amp;ldquo;exhibits properties which lead to questionable usefulness&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ce56bdfe4df4b5551633626f36ed72e5572ee2" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method will not work when either the &lt;code&gt;format_string&lt;/code&gt; or any of the arguments to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; contains lazy translation objects. Instead, you can use &lt;a href=&quot;../../ref/utils#django.utils.text.format_lazy&quot;&gt;&lt;code&gt;django.utils.text.format_lazy()&lt;/code&gt;&lt;/a&gt;, which creates a lazy object that runs the &lt;code&gt;str.format()&lt;/code&gt; method only when the result is included in a string. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cda289fa0103a368b46f9e968f484f38fd47d2" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s SQLite wrapper has a default timeout value that determines how long the second thread is allowed to wait on the lock before it times out and raises the &lt;code&gt;OperationalError: database
is locked&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2733ab8036d0e7f4e3e4ecfd45f0a5f88b05d893" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s logging library provides several techniques to configure logging, ranging from a programmatic interface to configuration files. By default, Django uses the &lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging-config-dictschema&quot;&gt;dictConfig format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ee3afa06e521729fd119cd707ef680dd89b9e4" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s standard library &lt;code&gt;gettext&lt;/code&gt; module installs &lt;code&gt;_()&lt;/code&gt; into the global namespace, as an alias for &lt;code&gt;gettext()&lt;/code&gt;. In Django, we have chosen not to follow this practice, for a couple of reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba4cd2ea8501f396bfcbb27fe321f2f84528870" translate="yes" xml:space="preserve">
          <source>Queries against databases not in &lt;code&gt;databases&lt;/code&gt; will give assertion errors to prevent state leaking between tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44655b1fa5c553428d342551c2c421c536aafafe" translate="yes" xml:space="preserve">
          <source>Queries can go round in circles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4731bf6d8aafebf282a3e3dade1f842730b4a108" translate="yes" xml:space="preserve">
          <source>Queries involving related objects follow the same rules as queries involving normal value fields. When specifying the value for a query to match, you may use either an object instance itself, or the primary key value for the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212fb49028291f1f1c70f560b39ee81a05db8015" translate="yes" xml:space="preserve">
          <source>Queries over related objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e87700050ec435ea87a17702967522960ce303" translate="yes" xml:space="preserve">
          <source>Query Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473c11e88675e622d9cfcd9003597281d792f48a" translate="yes" xml:space="preserve">
          <source>Query expressions describe a value or a computation that can be used as part of an update, create, filter, order by, annotation, or aggregate. When an expression outputs a boolean value, it may be used directly in filters. There are a number of built-in expressions (documented below) that can be used to help you write queries. Expressions can be combined, or in some cases nested, to form more complex computations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497a7998b02dc74fadc391e8d23af39ca9cd6d6a" translate="yes" xml:space="preserve">
          <source>Query expressions implement the &lt;a href=&quot;lookups#query-expression&quot;&gt;query expression API&lt;/a&gt;, but also expose a number of extra methods and attributes listed below. All query expressions must inherit from &lt;code&gt;Expression()&lt;/code&gt; or a relevant subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee721f6f1413a6c01f961727164d45a4ef46144" translate="yes" xml:space="preserve">
          <source>Query the waiters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0d4771f1ddfe0e4138f1cc38f09372efe54063" translate="yes" xml:space="preserve">
          <source>Query twice over the related field. This translates to an AND condition in the WHERE clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da95f94862e13f37c0c0ff8764a058ab794fb3a" translate="yes" xml:space="preserve">
          <source>Query-related tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507982dac0c0a407f01bf53943a125c2bc6715d5" translate="yes" xml:space="preserve">
          <source>QuerySet API reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf86208e0578fb1f6839fae37450bcc0b6572941" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;ArrayField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9409813bd6aaf05d9c06ef59bb7f710d0d41847e" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;HStoreField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045ae4b0426977c5c7a9843d499c63f7234b07e5" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;JSONField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dd9b02fe3130e8e9ac516aa4bc690c99a60dff" translate="yes" xml:space="preserve">
          <source>Querying Range Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029d873faabd75383407878dcd5f138977cc1244" translate="yes" xml:space="preserve">
          <source>Querying in the opposite direction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f0b7f0b8df9e93d31729e2375d554ec08f9665" translate="yes" xml:space="preserve">
          <source>Querying using the bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8860465ae3b9ad083fec1668e42e6612aa1804" translate="yes" xml:space="preserve">
          <source>Querysets do not always cache their results. When evaluating only &lt;em&gt;part&lt;/em&gt; of the queryset, the cache is checked, but if it is not populated then the items returned by the subsequent query are not cached. Specifically, this means that &lt;a href=&quot;#limiting-querysets&quot;&gt;limiting the queryset&lt;/a&gt; using an array slice or an index will not populate the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6790c30718ed4e8fc908c43ae184a48781ef4834" translate="yes" xml:space="preserve">
          <source>Question &amp;ldquo;detail&amp;rdquo; page &amp;ndash; displays a question text, with no results but with a form to vote.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9118d91dfc55f167899afb2295629e230e62b11" translate="yes" xml:space="preserve">
          <source>Question &amp;ldquo;index&amp;rdquo; page &amp;ndash; displays the latest few questions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1468ba44381b2d39d41837efbe8b1c1f795af5" translate="yes" xml:space="preserve">
          <source>Question &amp;ldquo;results&amp;rdquo; page &amp;ndash; displays results for a particular question.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1e1ff9d000b44617e8ef8f0ce02e30146ecaef" translate="yes" xml:space="preserve">
          <source>Quick example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c01de4ee3e982a6b351e8ac7d0030c470530550" translate="yes" xml:space="preserve">
          <source>Quick install guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f962d2087e6fa3b649f147531a425d3b9a32ec80" translate="yes" xml:space="preserve">
          <source>Quick overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9cb3c23abff64abba434bcd7cfc9f890e1c8ff" translate="yes" xml:space="preserve">
          <source>Quite commonly in web applications, you need to display a one-time notification message (also known as &amp;ldquo;flash message&amp;rdquo;) to the user after processing a form or some other types of user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8afb6809cb55d199c973aba152f8c15757581ae" translate="yes" xml:space="preserve">
          <source>Quoted names can also be used with Django&amp;rsquo;s other supported database backends; except for Oracle, however, the quotes have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383257f8e6a65c71a71920945d197e9c162b6e88" translate="yes" xml:space="preserve">
          <source>Raised to prevent deletion of referenced objects when using &lt;a href=&quot;models/fields#django.db.models.PROTECT&quot;&gt;&lt;code&gt;django.db.models.PROTECT&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.ProtectedError&quot;&gt;&lt;code&gt;models.ProtectedError&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39438285dbf48724191bfe029e6417ec166a07e" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;page()&lt;/code&gt;&lt;/a&gt; is given a valid value but no objects exist on that page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79867f095a9654e94ebbd2d4c674cdb67fc0b11b" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;page()&lt;/code&gt;&lt;/a&gt; is given a value that isn&amp;rsquo;t an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f230db9e7e8de1d6826196c899489f43c17e9464" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#django.contrib.gis.geos.GEOSException&quot;&gt;&lt;code&gt;GEOSException&lt;/code&gt;&lt;/a&gt; if GDAL is not available or if the geometry&amp;rsquo;s SRID is &lt;code&gt;None&lt;/code&gt; or less than 0. It doesn&amp;rsquo;t impose any constraints on the geometry&amp;rsquo;s SRID if called with a &lt;a href=&quot;gdal#django.contrib.gis.gdal.CoordTransform&quot;&gt;&lt;code&gt;CoordTransform&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f659bbf960b6910e347b834071c181c09d51237f" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;../../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; if a model is abstract. and &lt;code&gt;django.contrib.admin.sites.AlreadyRegistered&lt;/code&gt; if a model is already registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fedb9f428a9b0ce90303a37a58495eebb2a69bd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with the following codes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b87134b19d3578fc7beb6e8fbd3e1b2ed4af51" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if no such application or model exists. Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when called with a single argument that doesn&amp;rsquo;t contain exactly one dot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38eef04a03bc1e0f873207b67fea1d8a6a730ac1" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if no such model exists in this application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdb5a4f46a36bde51f26f38a7305bab8579f262" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if nothing is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7971a2a67760d202f90683b27e699220b4993b" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid day specification can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef25c25cfb26446f34abd61eae1c1b877d53be3f" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid month specification can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649efa18a29e771511c524364f4dc70abd5766a2" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid week specification can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dec23dea64208ebea927e272c3b8ced92abc02" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid year specification can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38db0b689edecc0505589f5aa472122022302e7" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;str(value)&lt;/code&gt; contains one or more nulls characters (&lt;code&gt;'\x00'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c1ada2c7df70aec4fd0243ab804db85e3019ee" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'invalid_extension'&lt;/code&gt; if the extension of &lt;code&gt;value.name&lt;/code&gt; (&lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;) isn&amp;rsquo;t found in &lt;code&gt;allowed_extensions&lt;/code&gt;. The extension is compared case-insensitively with &lt;code&gt;allowed_extensions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a7bffce2432be91a504d7fdced39b3b28aae7c" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'max_length'&lt;/code&gt; if the length of &lt;code&gt;value&lt;/code&gt; is greater than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7812698f0072d025934ecf7b060543cfa6e91091" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'max_value'&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is greater than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f28a9211155e5f89025bedc40d8d7d8590bbae1" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'min_length'&lt;/code&gt; if the length of &lt;code&gt;value&lt;/code&gt; is less than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca1cec135750585f008ee0a9b754d0a262950d0" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'min_value'&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is less than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e197db816c81423c73c86abab2ef9616c7449393" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#django.core.paginator.EmptyPage&quot;&gt;&lt;code&gt;EmptyPage&lt;/code&gt;&lt;/a&gt; exception only if you specify &lt;code&gt;Paginator(..., allow_empty_first_page=False)&lt;/code&gt; and the &lt;code&gt;object_list&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36f9c49b1796d7a8400dc46e0a1779727aaff9e" translate="yes" xml:space="preserve">
          <source>Raising &lt;code&gt;ValidationError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8c1749ce91a95970b30e696f91a5d6ec760256" translate="yes" xml:space="preserve">
          <source>Raising a 404 error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec449d6fe8c144585e34f5fb114395c6f40c76a6" translate="yes" xml:space="preserve">
          <source>Raising multiple errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f112e1c0ba7cca4f0e6c1b8ba6e509c3cebac8" translate="yes" xml:space="preserve">
          <source>Range Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6a6b9ca40d94f48e61d5f8c3ffacdbe97b6fe9" translate="yes" xml:space="preserve">
          <source>Range fields support the standard lookups: &lt;a href=&quot;../../models/querysets#std:fieldlookup-lt&quot;&gt;&lt;code&gt;lt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/querysets#std:fieldlookup-gt&quot;&gt;&lt;code&gt;gt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/querysets#std:fieldlookup-lte&quot;&gt;&lt;code&gt;lte&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/querysets#std:fieldlookup-gte&quot;&gt;&lt;code&gt;gte&lt;/code&gt;&lt;/a&gt;. These are not particularly helpful - they compare the lower bounds first and then the upper bounds only if necessary. This is also the strategy used to order by a range field. It is better to use the specific range comparison operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e873d159d1885f4b07c2220c8cb41bb19655266b" translate="yes" xml:space="preserve">
          <source>Range operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78952f921b40a31e3a91af2b9dccfb751b218e8" translate="yes" xml:space="preserve">
          <source>Range test (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405b08374dfc6e7aeeeee19a9c1c2e740c8f9808" translate="yes" xml:space="preserve">
          <source>Range validators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005502336f497500bcb0670a263dab868e7a34a8" translate="yes" xml:space="preserve">
          <source>RangeBoundary() expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd48a1149548f0b07ddec97e040571c91978fbab" translate="yes" xml:space="preserve">
          <source>Rank</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5208946e0b1be2a3371538152a05d1233496f7a6" translate="yes" xml:space="preserve">
          <source>Raster Data Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef1ef57d994a18bfacffb776bdab1b33f4e20b8" translate="yes" xml:space="preserve">
          <source>Raster Lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c47badb7cf59b2ce34cfb0119ccdc92d59f8ae" translate="yes" xml:space="preserve">
          <source>Raster Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b43a0325aa66c5ca3506dbe7d78c6506d34130" translate="yes" xml:space="preserve">
          <source>Raster example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500faaef6575e52d000a49a0c111655fcca1467f" translate="yes" xml:space="preserve">
          <source>Raster queries work the same way by replacing the geometry field &lt;code&gt;point&lt;/code&gt; with a raster field, or the &lt;code&gt;pnt&lt;/code&gt; object with a raster object, or both. To specify the band index of a raster input on the right hand side, a 3-tuple can be passed to the lookup as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f7285acfbea0cccac185fc68fe33ee4e964164" translate="yes" xml:space="preserve">
          <source>Rather than adding &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; as a blanket protection, you can use the &lt;code&gt;csrf_protect&lt;/code&gt; decorator, which has exactly the same functionality, on particular views that need the protection. It must be used &lt;strong&gt;both&lt;/strong&gt; on views that insert the CSRF token in the output, and on those that accept the POST form data. (These are often the same view function, but not always).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242f65df6b815c78c86f006f111f9d6a8de1c45f" translate="yes" xml:space="preserve">
          <source>Rather than implementing &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt;, subclasses must implement &lt;a href=&quot;#django.core.management.AppCommand.handle_app_config&quot;&gt;&lt;code&gt;handle_app_config()&lt;/code&gt;&lt;/a&gt;, which will be called once for each application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5131e1bcf6f25659f7d4b5cc8c1f5e806ee470" translate="yes" xml:space="preserve">
          <source>Rather than implementing &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt;, subclasses must implement &lt;a href=&quot;#django.core.management.LabelCommand.handle_label&quot;&gt;&lt;code&gt;handle_label()&lt;/code&gt;&lt;/a&gt;, which will be called once for each label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b4472c459e5ea6dd92936ae2d6cadc3eac5048" translate="yes" xml:space="preserve">
          <source>Rather than retrieve a load of objects, set some values, and save them individual, use a bulk SQL UPDATE statement, via &lt;a href=&quot;queries#topics-db-queries-update&quot;&gt;QuerySet.update()&lt;/a&gt;. Similarly, do &lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;bulk deletes&lt;/a&gt; where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a65c4362f80f15c986dcb6ac6e5d9e6546fb00a" translate="yes" xml:space="preserve">
          <source>Raw SQL expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5ef9cd3f272e59c3c26c12902db3ba7d565d10" translate="yes" xml:space="preserve">
          <source>Raw queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ea065526a8ad321c70048cf3baa719811f99b3" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;../ref/forms/renderers#overriding-built-in-widget-templates&quot;&gt;Overriding built-in widget templates&lt;/a&gt; if you&amp;rsquo;re looking to do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce700edc75ecc91e22a139a6e8d305167cd1e41e" translate="yes" xml:space="preserve">
          <source>Read on for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdc0d9e694b2eaa98c7c096f7b00e0bb6395bda" translate="yes" xml:space="preserve">
          <source>Read on to find out how to add your own actions to this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed57f54e247286a3dd772aca25e863acafcf68f" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../howto/deployment/wsgi/modwsgi&quot;&gt;Django mod_wsgi documentation&lt;/a&gt; for more information and other common elements to a Django WSGI application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba94d92ea0fc0108fb5111a8778616ce9ce343be" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin documentation&lt;/a&gt; for full information on what the &lt;code&gt;manage.py&lt;/code&gt; utility can do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa61ec2d4a4a4ad9f3c5532bcc9a01eaf9b3ea6d" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/&quot;&gt;release notes&lt;/a&gt; for each &amp;lsquo;final&amp;rsquo; release from the one after your current Django version, up to and including the version to which you plan to upgrade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad0cb3cd1c5777c98648badf13385f628fcb4ed" translate="yes" xml:space="preserve">
          <source>Read the entire uploaded data from the file. Be careful with this method: if the uploaded file is huge it can overwhelm your system if you try to read it into memory. You&amp;rsquo;ll probably want to use &lt;code&gt;chunks()&lt;/code&gt; instead; see below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eea83bf0ccf3ef4c4086e96388d7810576a979a" translate="yes" xml:space="preserve">
          <source>Read-only &lt;code&gt;Meta&lt;/code&gt; attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41532e3bd7a65aef2b9a472825897a3bac62683c" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;False&lt;/code&gt;. This is a way of differentiating &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects. Generally, you should prefer using &lt;a href=&quot;#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt; to this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7a05ed8f28ec3b82aff591fe46e85b8ceb2118" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;False&lt;/code&gt;. This is a way of differentiating &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects. Generally, you should prefer using &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt; to this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914b9efb519b462eef0203b30e71768a9011e6ef" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;True&lt;/code&gt; (as opposed to &lt;code&gt;AnonymousUser.is_authenticated&lt;/code&gt; which is always &lt;code&gt;False&lt;/code&gt;). This is a way to tell if the user has been authenticated. This does not imply any permissions and doesn&amp;rsquo;t check if the user is active or has a valid session. Even though normally you will check this attribute on &lt;code&gt;request.user&lt;/code&gt; to find out whether it has been populated by the &lt;a href=&quot;../../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; (representing the currently logged-in user), you should know this attribute is &lt;code&gt;True&lt;/code&gt; for any &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e895729ad7f475f5b2bf1748aaa4fb5d2a87ed" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;True&lt;/code&gt; (as opposed to &lt;code&gt;AnonymousUser.is_authenticated&lt;/code&gt; which is always &lt;code&gt;False&lt;/code&gt;). This is a way to tell if the user has been authenticated. This does not imply any permissions and doesn&amp;rsquo;t check if the user is active or has a valid session. Even though normally you will check this attribute on &lt;code&gt;request.user&lt;/code&gt; to find out whether it has been populated by the &lt;a href=&quot;../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; (representing the currently logged-in user), you should know this attribute is &lt;code&gt;True&lt;/code&gt; for any &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56007e3139edd3163cf05ca41bfc84d5000b7f0b" translate="yes" xml:space="preserve">
          <source>Read-only attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1db1af1a77800e199d231211e0ee56c94656a50" translate="yes" xml:space="preserve">
          <source>Reader Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415b604313f8d8d16e114afcdd1371c7dcc8d397" translate="yes" xml:space="preserve">
          <source>Reading a session is not considered activity for expiration purposes. Session expiration is computed from the last time the session was &lt;em&gt;modified&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d540a305997ed8ff2cf78c613de37cd46b92ba00" translate="yes" xml:space="preserve">
          <source>Receiver functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd676dcf1b0d740d5b2ca2e8e2a7f76c69f1781" translate="yes" xml:space="preserve">
          <source>Receives a &amp;ldquo;chunk&amp;rdquo; of data from the file upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cba3e481f7f613efb8e8dd9e72a1071a82d171" translate="yes" xml:space="preserve">
          <source>Recreate the &lt;code&gt;Article&lt;/code&gt; and &lt;code&gt;Publication&lt;/code&gt; we have deleted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219d012f3326715d16934176de803d1f48e3f839" translate="yes" xml:space="preserve">
          <source>Recursive relationships using an intermediary model and defined as symmetrical (that is, with &lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt;&lt;code&gt;symmetrical=True&lt;/code&gt;&lt;/a&gt;, which is the default) can&amp;rsquo;t determine the reverse accessors names, as they would be the same. You need to set a &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; to at least one of them. If you&amp;rsquo;d prefer Django not to create a backwards relation, set &lt;code&gt;related_name&lt;/code&gt; to &lt;code&gt;'+'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdac757a55e328fce5f9ea84cb1f4c52b693ae20" translate="yes" xml:space="preserve">
          <source>Recursively takes a self-nested list and returns an HTML unordered list &amp;ndash; WITHOUT opening and closing &amp;lt;ul&amp;gt; tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0b9d25f251da505e0f259b62f97279df6c7721" translate="yes" xml:space="preserve">
          <source>Redirect to object&amp;rsquo;s page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1082c179fcf127055950f87347c117ccb88695f" translate="yes" xml:space="preserve">
          <source>Redirecting unauthorized requests in class-based views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a0f0c42b6c80fb7d4ddc5625fdef0e2634a980" translate="yes" xml:space="preserve">
          <source>Redirects are represented by a standard &lt;a href=&quot;../../topics/db/models&quot;&gt;Django model&lt;/a&gt;, which lives in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/redirects/models.py&quot;&gt;django/contrib/redirects/models.py&lt;/a&gt;. You can access redirect objects via the &lt;a href=&quot;../../topics/db/queries&quot;&gt;Django database API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635f8ba8a6b7756ce0a998b1d814136c3037b994" translate="yes" xml:space="preserve">
          <source>Redirects to &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_success_url&quot;&gt;&lt;code&gt;get_success_url()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6685e75b7bdd069645601bbf986a1036c61fc1a3" translate="yes" xml:space="preserve">
          <source>Redirects to a given URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee4d5d609c5c9337422fb70f81f259094d9abb9" translate="yes" xml:space="preserve">
          <source>Redirects to the login page, and then back to another URL after a successful login.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90773f350cdc5206a4d248f2aebd691a9d73b770" translate="yes" xml:space="preserve">
          <source>Refer &lt;a href=&quot;#mysql-spatial-limitations&quot;&gt;MySQL Spatial Limitations&lt;/a&gt; section for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0ec3a1898930aa62748f205436d3a1bae8429f" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;settings&quot;&gt;settings documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ef02ec65bb35fc151543cc3283f96c3ff66d6b" translate="yes" xml:space="preserve">
          <source>References to functions in field options such as &lt;code&gt;upload_to&lt;/code&gt; and &lt;code&gt;limit_choices_to&lt;/code&gt; and model manager declarations with managers having &lt;code&gt;use_in_migrations = True&lt;/code&gt; are serialized in migrations, so the functions and classes will need to be kept around for as long as there is a migration referencing them. Any &lt;a href=&quot;../howto/custom-model-fields&quot;&gt;custom model fields&lt;/a&gt; will also need to be kept, since these are imported directly by migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276ab3a41713a17fad1f1a0b209cbee45742aeee" translate="yes" xml:space="preserve">
          <source>Referencing built-in constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9b8d42d37f279ddf603e896c63abbad3f86c9a" translate="yes" xml:space="preserve">
          <source>Referencing built-in indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b51a7cf9d21479475aeccd50db9c14080cef2b" translate="yes" xml:space="preserve">
          <source>Referencing columns from the outer queryset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d946defa09525bc6e693928e987dffed69eb391" translate="yes" xml:space="preserve">
          <source>Referencing the &lt;code&gt;User&lt;/code&gt; model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5601323cf623f0f478b4fdf72ca5d8dc6972bd9a" translate="yes" xml:space="preserve">
          <source>Referential fields are again represented by the PK or sequence of PKs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9085bde7a7780a48ca2a79ea2ef1b8e36c397ae" translate="yes" xml:space="preserve">
          <source>Referrer Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ec56dfdbf84b16f4ab15d7a7e20276cd1c71d6" translate="yes" xml:space="preserve">
          <source>Referrer policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d2291a8b37aa0271103fe6b52cc8a23f719e80" translate="yes" xml:space="preserve">
          <source>Refreshing objects from database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4df310c061d0e7e3adb44cae53677e334ad7017" translate="yes" xml:space="preserve">
          <source>Regardless of &lt;code&gt;validate_max&lt;/code&gt;, if the number of forms in a data set exceeds &lt;code&gt;max_num&lt;/code&gt; by more than 1000, then the form will fail to validate as if &lt;code&gt;validate_max&lt;/code&gt; were set, and additionally only the first 1000 forms above &lt;code&gt;max_num&lt;/code&gt; will be validated. The remainder will be truncated entirely. This is to protect against memory exhaustion attacks using forged POST requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae0a24f6ed88591a811cce9f6a394284d521979" translate="yes" xml:space="preserve">
          <source>Regardless of the bounds specified when saving the data, PostgreSQL always returns a range in a canonical form that includes the lower bound and excludes the upper bound; that is &lt;code&gt;[)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d7c5a4bf73f7b54502ceed61f48e727412d9cb" translate="yes" xml:space="preserve">
          <source>Regardless of the number of templates used during rendering, you can retrieve context values using the &lt;code&gt;[]&lt;/code&gt; operator. For example, the context variable &lt;code&gt;name&lt;/code&gt; could be retrieved using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f83c6e8910b69f0e02c032fb512f7f8643c71ee" translate="yes" xml:space="preserve">
          <source>Regardless of the value of the &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting in your configuration file, all Django tests run with &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt;=False. This is to ensure that the observed output of your code matches what will be seen in a production setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea13858c65d8d1656c501831f13733dbd4ef8c3" translate="yes" xml:space="preserve">
          <source>Regardless of whether the tests pass or fail, the test databases are destroyed when all the tests have been executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc3facce78bf62706623b190c662b474a07e993" translate="yes" xml:space="preserve">
          <source>Regardless of whether you define a &lt;code&gt;media&lt;/code&gt; declaration, &lt;em&gt;all&lt;/em&gt; Form objects have a &lt;code&gt;media&lt;/code&gt; property. The default value for this property is the result of adding the &lt;code&gt;media&lt;/code&gt; definitions for all widgets that are part of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdb1abcfc2cccc01f8beaa1e9517a91f7ba37d2" translate="yes" xml:space="preserve">
          <source>Regardless of whether you define a primary key field yourself, or let Django supply one for you, each model will have a property called &lt;code&gt;pk&lt;/code&gt;. It behaves like a normal attribute on the model, but is actually an alias for whichever attribute is the primary key field for the model. You can read and set this value, just as you would for any other attribute, and it will update the correct field in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc51848ad0442371d20c40163eb94aafe5c0ea02" translate="yes" xml:space="preserve">
          <source>Register custom converter classes in your URLconf using &lt;a href=&quot;../../ref/urls#django.urls.register_converter&quot;&gt;&lt;code&gt;register_converter()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e27d91e3eab975e7b640fdbd934e41e8413b3d" translate="yes" xml:space="preserve">
          <source>Register with Google first!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dff0eb6797a9d6b53ff5fa684cc0436c221bf7b" translate="yes" xml:space="preserve">
          <source>Registering and fetching lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51d9cda2b0d34328b131091ec0c3ea09eac6385" translate="yes" xml:space="preserve">
          <source>Registering and labeling checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6fa09dedc7250877272e6b1b23698480dbdfc6" translate="yes" xml:space="preserve">
          <source>Registering custom filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928a16e3f50ffd8a5ae8c237f473df9f44693c2a" translate="yes" xml:space="preserve">
          <source>Registering custom path converters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af918966b14a758d09d261b9ef75259d658d2ca" translate="yes" xml:space="preserve">
          <source>Registering the tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36ce0f66d74b6c119c0a55fefdb441e3cf123cb" translate="yes" xml:space="preserve">
          <source>Registers a new lookup in the class. For example &lt;code&gt;DateField.register_lookup(YearExact)&lt;/code&gt; will register &lt;code&gt;YearExact&lt;/code&gt; lookup on &lt;code&gt;DateField&lt;/code&gt;. It overrides a lookup that already exists with the same name. &lt;code&gt;lookup_name&lt;/code&gt; will be used for this lookup if provided, otherwise &lt;code&gt;lookup.lookup_name&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d4bc4c25cdb28e029c4332704ec2908a7ffaa5" translate="yes" xml:space="preserve">
          <source>Registers the given model class (or iterable of classes) with the given &lt;code&gt;admin_class&lt;/code&gt;. &lt;code&gt;admin_class&lt;/code&gt; defaults to &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; (the default admin options). If keyword arguments are given &amp;ndash; e.g. &lt;code&gt;list_display&lt;/code&gt; &amp;ndash; they&amp;rsquo;ll be applied as options to the admin class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f169484488e44716e96ed1c45fb600472f0644ab" translate="yes" xml:space="preserve">
          <source>Registration API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727971b46e8c135e01c73b9932d62092cf2fb313" translate="yes" xml:space="preserve">
          <source>Regroups a list of alike objects by a common attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57e0217a5166194203d573ef157860b55fec143" translate="yes" xml:space="preserve">
          <source>Regular expressions allow nested arguments, and Django will resolve them and pass them to the view. When reversing, Django will try to fill in all outer captured arguments, ignoring any nested captured arguments. Consider the following URL patterns which optionally take a page argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efb7797b34f8df40e596b7b6c369800006cf5e0" translate="yes" xml:space="preserve">
          <source>Rejected requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a3e682e46e2711bab1cb0df359280bad9695e1" translate="yes" xml:space="preserve">
          <source>Related fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b119479f585d76d63b7140c5fdf6ecc37026fd0f" translate="yes" xml:space="preserve">
          <source>Related managers support field lookups as well. The API automatically follows relationships as far as you need. Use double underscores to separate relationships. This works as many levels deep as you want. There&amp;rsquo;s no limit. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e9a5d07ff63a1e4d3ac3e13ff70657fe596c34" translate="yes" xml:space="preserve">
          <source>Related objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea791d82ad3c066aab672ce1c828d7c43a2d611a" translate="yes" xml:space="preserve">
          <source>Related objects can be added, removed, or created with the field&amp;rsquo;s &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;RelatedManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f78f018ff04fc34d87112505d3493ceee5bc2d" translate="yes" xml:space="preserve">
          <source>Related objects reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec56d8720a6c99c9f90e1af0562c7c93797fbe2" translate="yes" xml:space="preserve">
          <source>Relation sets can be cleared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647f7b787282a018597eeb618e28696c2e5a1bf5" translate="yes" xml:space="preserve">
          <source>Relation sets can be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f37e30ad51df52be939ec9bc920e5d0851e4bf2" translate="yes" xml:space="preserve">
          <source>Relations between your models and &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; can also be used to enable &amp;ldquo;generic&amp;rdquo; relationships between an instance of one of your models and instances of any model you have installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f91febf44bd093f21d7a1ef8ac0c2a27a3ed8f" translate="yes" xml:space="preserve">
          <source>Relationship fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229981dd1dc44fcc3bf72493583bb63fa236cecf" translate="yes" xml:space="preserve">
          <source>Relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c57b638c2a82c2ee8a3d3c322f5a6d24592f07" translate="yes" xml:space="preserve">
          <source>Relationships defined this way on &lt;a href=&quot;../../topics/db/models#abstract-base-classes&quot;&gt;abstract models&lt;/a&gt; are resolved when the model is subclassed as a concrete model and are not relative to the abstract model&amp;rsquo;s &lt;code&gt;app_label&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1d7be2174dcdbe8837f3234b11454daf6c4b0e" translate="yes" xml:space="preserve">
          <source>Releases savepoint &lt;code&gt;sid&lt;/code&gt;. The changes performed since the savepoint was created become part of the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130a2ff9b0b315a79408d3fa4b84253fcd9e7d3f" translate="yes" xml:space="preserve">
          <source>Reload &lt;code&gt;http://localhost:8000/polls/&lt;/code&gt; and you should see that the question links are green (Django style!) which means that your stylesheet was properly loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ec2643661160eb82db76840c96c374ea9d6b7d" translate="yes" xml:space="preserve">
          <source>Reload &lt;code&gt;http://localhost:8000/polls/&lt;/code&gt; and you should see the background loaded in the top left of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed16c1e4ce77f729e040f36fb0370f8e7223bc87" translate="yes" xml:space="preserve">
          <source>Remember that the conditions are evaluated in order, so in the above example we get the correct result even though the second condition matches both Jane Doe and Jack Black. This works just like an &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; statement in &lt;code&gt;Python&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bb2ce82e24290d61cadc024c3a3401217064aa" translate="yes" xml:space="preserve">
          <source>Remember that you may be optimizing for speed or memory or both, depending on your requirements. Sometimes optimizing for one will be detrimental to the other, but sometimes they will help each other. Also, work that is done by the database process might not have the same cost (to you) as the same amount of work done in your Python process. It is up to you to decide what your priorities are, where the balance must lie, and profile all of these as required since this will depend on your application and server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07a82f1b611e9c4dee18b82042ae112b0479249" translate="yes" xml:space="preserve">
          <source>Remember that you&amp;rsquo;re allowed to change this list of arguments at any time, so getting the API right on the first try isn&amp;rsquo;t necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8a8e67e6bbe0350c124fb23567f9488608eb7c" translate="yes" xml:space="preserve">
          <source>Remember that, as always with &lt;code&gt;QuerySets&lt;/code&gt;, any subsequent chained methods which imply a different database query will ignore previously cached results, and retrieve data using a fresh database query. So, if you write the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648ad4c810dd53994bf04bf0125b62b9faf05e4" translate="yes" xml:space="preserve">
          <source>Remember, when we wrote the link to a question in the &lt;code&gt;polls/index.html&lt;/code&gt; template, the link was partially hardcoded like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5135e0a935e58bed79364ff26f03ec7ac7319276" translate="yes" xml:space="preserve">
          <source>Remove in bulk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f84bb089770ecd1f5d32438c6d4d9aab68d990" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;register()&lt;/code&gt; call for the &lt;code&gt;Choice&lt;/code&gt; model. Then, edit the &lt;code&gt;Question&lt;/code&gt; registration code to read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eeb5c1e65e4d92fb1c5f089a45d318674fcb9b1" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;constraint&lt;/code&gt; from &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768dc339cc5eead92975d666b5fa8824ffd11f06" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583cefeeb9162d5d5d6db19d9b31c527f2b06ae4" translate="yes" xml:space="preserve">
          <source>Removes a field from a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b0c05b3ca9657894ffa84e94aaa3cfabb169ca" translate="yes" xml:space="preserve">
          <source>Removes all data from the database and re-executes any post-synchronization handlers. The table of which migrations have been applied is not cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c27d007db1fb7616b6f48bae7b79d7185c690cd" translate="yes" xml:space="preserve">
          <source>Removes all objects from the related object set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e76021d47b3d0e9fa33e9e37b51a7ff2945eba" translate="yes" xml:space="preserve">
          <source>Removes all objects from the related object set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc347d2171f0c6653163f4320aab80c390f59de1" translate="yes" xml:space="preserve">
          <source>Removes all values of arg from the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef1450bb558a69cdedac1828f44599b75d1a1b6" translate="yes" xml:space="preserve">
          <source>Removes an arbitrary member of the dictionary (since there&amp;rsquo;s no concept of ordering), and returns a two value tuple containing the key and a list of all values for the key. Raises &lt;code&gt;KeyError&lt;/code&gt; when called on an empty dictionary. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1f751adff5eb905b32cb9ceefa88d716e210a1" translate="yes" xml:space="preserve">
          <source>Removes expired sessions from the session store. This class method is called by &lt;a href=&quot;../../ref/django-admin#django-admin-clearsessions&quot;&gt;&lt;code&gt;clearsessions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11607e9f71cebcb1712d012372fa17813dd472d1" translate="yes" xml:space="preserve">
          <source>Removes the column(s) representing the field from the model&amp;rsquo;s table, along with any unique constraints, foreign key constraints, or indexes caused by that field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e284ffdd0024c1c64a5b25462ced99f4bb8969" translate="yes" xml:space="preserve">
          <source>Removes the constraint named &lt;code&gt;name&lt;/code&gt; from the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71868f049dcfd4d937b3560794a32115cd1d6841" translate="yes" xml:space="preserve">
          <source>Removes the file from the model instance and deletes the underlying file. If &lt;code&gt;save&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method will be called once the file is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acab399eaeb08911cc2ded336df8defe265be5f6" translate="yes" xml:space="preserve">
          <source>Removes the index named &lt;code&gt;name&lt;/code&gt; from the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa83a3e51e27351289cefaaf6295f73f0aab2454" translate="yes" xml:space="preserve">
          <source>Removes the specified model objects from the related object set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6610881a20538353e36867a2ed9aa1f28fc5e12f" translate="yes" xml:space="preserve">
          <source>Removes the specified model objects from the related object set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1961a8967f8b64321eb56c162195eb92971034bc" translate="yes" xml:space="preserve">
          <source>Removes whitespace between HTML tags. This includes tab characters and newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d30e033b72a8383af6db3ec7bd4efc44e60ca6" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;Publication&lt;/code&gt; from an &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3d5a442a032797ad5dab1a2ddaacf74d04f5e2" translate="yes" xml:space="preserve">
          <source>Removing characters that aren&amp;rsquo;t alphanumerics, underscores, hyphens, or whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30eddecb1f5677d80a03c9dfba5fd63a8f10e58" translate="yes" xml:space="preserve">
          <source>Removing hardcoded URLs in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b672adfc502a3a7bc8c59d0116b92750211923a0" translate="yes" xml:space="preserve">
          <source>Removing leading and trailing whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032551ae5664470a7a647a557513f321a7dc28be" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;Referer&lt;/code&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824a4cd9f9aa4c63a483c0b59f733da307872142" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;replaces&lt;/code&gt; attribute in the &lt;code&gt;Migration&lt;/code&gt; class of the squashed migration (this is how Django tells that it is a squashed migration).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16c8c695b3ed89e3634a55288553edf77dd5c1e" translate="yes" xml:space="preserve">
          <source>Renames the model from an old name to a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04e0c7b4fa4bdb80660ca557601245947ce112f" translate="yes" xml:space="preserve">
          <source>Renames the model&amp;rsquo;s table from &lt;code&gt;old_db_table&lt;/code&gt; to &lt;code&gt;new_db_table&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cb124c37629d3c4a84cfbc765066350d2fe0e0" translate="yes" xml:space="preserve">
          <source>Renaming the new table to match the original name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e1a7f8c318c94539687d44fce9c7991dceee3e" translate="yes" xml:space="preserve">
          <source>Rendering a context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027bef23921d06a2497849839ca801dd4c87d805" translate="yes" xml:space="preserve">
          <source>Rendering a form in a template involves nearly the same work as rendering any other kind of object, but there are some key differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136000babdea15be499c3f212dfc94b6c5f4f283" translate="yes" xml:space="preserve">
          <source>Rendering an attractive and easy-to-use Web form requires more than just HTML - it also requires CSS stylesheets, and if you want to use fancy &amp;ldquo;Web2.0&amp;rdquo; widgets, you may also need to include some JavaScript on each page. The exact combination of CSS and JavaScript that is required for any given page will depend upon the widgets that are in use on that page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5399393e62334e4b0ed76b7b53146225e05fee5d" translate="yes" xml:space="preserve">
          <source>Rendering fields manually</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5caac98fc85fed419cf5423872151e43434e24" translate="yes" xml:space="preserve">
          <source>Rendering form error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7905759ec4065d91065c48b72c65fe38138b580c" translate="yes" xml:space="preserve">
          <source>Renders a given template, with the context containing parameters captured in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae753c436c489717d9fd3197ab51f2ea36d6fcdd" translate="yes" xml:space="preserve">
          <source>Renders a response using a context created with &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16592f143c9b46e336ff00978991b5c9912c1755" translate="yes" xml:space="preserve">
          <source>Renders a response, providing the invalid form as context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90af18eef3de255327d413547ce0410f46029052" translate="yes" xml:space="preserve">
          <source>Renders a widget to HTML using the given renderer. If &lt;code&gt;renderer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the renderer from the &lt;a href=&quot;../settings#std:setting-FORM_RENDERER&quot;&gt;&lt;code&gt;FORM_RENDERER&lt;/code&gt;&lt;/a&gt; setting is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9134b57ad3286fb14a0ccb98988a3252c1b2fb" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82973b7ac32fa2a8e47287cdd06b9580e0ed1a1" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;email&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e48ba21244665c1f446a827bbea0fa4ecce90e" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;file&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55344549fc6b061a5279a22c7ca2abed4af75d18" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;file&quot; ...&amp;gt;&lt;/code&gt; with an additional checkbox input to clear the field&amp;rsquo;s value, if the field is not required and has initial data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ef164d5bff9e43c06e0c2c1cfca531dfab120d" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;hidden&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffba107edff202d0502dea7e7ec4ed96f8c63068" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;number&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbad1dca40d839cee64f9796837dfc793ce00eb2" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;password&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fab9338cafc4508aa66ee4ea6af809ec0a44447" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;text&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0c7ef1b840a7c4e2b94ce7f468b5e525716480" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;url&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d03b2cdd83d03a4a5c974cfc3adf2c3e8839b12" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;select&amp;gt;&amp;lt;option ...&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4c7a4636bfad48ebaf7226ecf51f860c337c36" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;textarea&amp;gt;...&amp;lt;/textarea&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbeba578a21f5b5a70755568096ad08238d25355" translate="yes" xml:space="preserve">
          <source>Renders as: multiple &lt;code&gt;&amp;lt;input type=&quot;hidden&quot; ...&amp;gt;&lt;/code&gt; tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0222918833e3787b3c65b0c621307ff6076b249" translate="yes" xml:space="preserve">
          <source>Renders the field by rendering the passed widget, adding any HTML attributes passed as &lt;code&gt;attrs&lt;/code&gt;. If no widget is specified, then the field&amp;rsquo;s default widget will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8614be2b1273e22dcae1bc31f1609ad35bee133" translate="yes" xml:space="preserve">
          <source>Renders this template with a given context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9271a15cfc5fcc700b391cb86963e91246c1a9e8" translate="yes" xml:space="preserve">
          <source>Replace the set of related objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc74cf3f9dbe78eaad4942681935fa66409f0dd" translate="yes" xml:space="preserve">
          <source>Replace the set of related objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d73009aa12f5c9ccad864726c2702b9ce217c" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of &lt;code&gt;text&lt;/code&gt; with &lt;code&gt;replacement&lt;/code&gt; in &lt;code&gt;expression&lt;/code&gt;. The default replacement text is the empty string. The arguments to the function are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f672cf5e8b9f8a1ecfc7b749bdade5fc14ba9fd" translate="yes" xml:space="preserve">
          <source>Replaces line breaks in plain text with appropriate HTML; a single newline becomes an HTML line break (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;) and a new line followed by a blank line becomes a paragraph break (&lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7de53ab13c0395d4a7babbd2e27a410a6cb4d2a" translate="yes" xml:space="preserve">
          <source>Replacing any whitespace or repeated dashes with single dashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da41ef4783943cc20f027ff0b080b869ef03892" translate="yes" xml:space="preserve">
          <source>Report bugs with Django in our &lt;a href=&quot;https://code.djangoproject.com/&quot;&gt;ticket tracker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabe8b7cbd36261e537bd2f96894acc0ba19e91e" translate="yes" xml:space="preserve">
          <source>ReportLab is not thread-safe. Some of our users have reported odd issues with building PDF-generating Django views that are accessed by many people at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454bbc05efdd703764976d8e54a1b14b371e6f97" translate="yes" xml:space="preserve">
          <source>Representation of the model, returns &lt;code&gt;app_label.model_name&lt;/code&gt;, e.g. &lt;code&gt;'polls.question'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e8edfcf5f55bad8b5c8cad8279d89aa02200a9" translate="yes" xml:space="preserve">
          <source>Representation of the object, returns &lt;code&gt;app_label.object_name&lt;/code&gt;, e.g. &lt;code&gt;'polls.Question'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9e3232b59e4eda049a9874e7389108e2396b58" translate="yes" xml:space="preserve">
          <source>Represents a coordinate system transform. It is initialized with two &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt;, representing the source and target coordinate systems, respectively. These objects should be used when performing the same coordinate transformation repeatedly on different geometries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912bd34dfdba19e2c0c74db8804d0b099f03785e" translate="yes" xml:space="preserve">
          <source>Represents an OGR Envelope structure that contains the minimum and maximum X, Y coordinates for a rectangle bounding box. The naming of the variables is compatible with the OGR Envelope C structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6eaf1b4ae6a6b72685a059f396297ca22755171" translate="yes" xml:space="preserve">
          <source>Represents an RSS enclosure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db08503ac83e133821e3bcbd14353d8ec92d4c5" translate="yes" xml:space="preserve">
          <source>Represents the name of a language. Browsers send the names of the languages they accept in the &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header using this format. Examples: &lt;code&gt;it&lt;/code&gt;, &lt;code&gt;de-at&lt;/code&gt;, &lt;code&gt;es&lt;/code&gt;, &lt;code&gt;pt-br&lt;/code&gt;. Language codes are generally represented in lowercase, but the HTTP &lt;code&gt;Accept-Language&lt;/code&gt; header is case-insensitive. The separator is a dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da6b0616d139307f3ef0f7c30d257b1b3196c91" translate="yes" xml:space="preserve">
          <source>Request and response objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1c72bff89a681d6557489cf4844ca376896d28" translate="yes" xml:space="preserve">
          <source>Request/response signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189351e8eaeefafdc539f6bd7e3fb3418346b9fb" translate="yes" xml:space="preserve">
          <source>Requests beginning with &lt;code&gt;/secret/&lt;/code&gt; will now require a user to authenticate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5f5cf68c3ad7b4e7d378f07c1f993b95fec1fb" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;/secret/&lt;/code&gt; will now also require user to be a member of the &amp;ldquo;secret-agents&amp;rdquo; group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a20547ac129608d96c2abd4e71c2c3c752a1a65" translate="yes" xml:space="preserve">
          <source>Required Reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9373cb02a682b7d98a6af6ab7efc1d309c55e47e" translate="yes" xml:space="preserve">
          <source>Required argument. Needs to be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063bc1d47f6d34d8950e45fa10a77dcb9a83430a" translate="yes" xml:space="preserve">
          <source>Required arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd8ecc238687099c308060e8703f3437d058c4b" translate="yes" xml:space="preserve">
          <source>Required keyword arguments are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672ad5346d62dd6eb67f727712f3a58da5a155d2" translate="yes" xml:space="preserve">
          <source>Required methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dab952894db35e5f1aa3df870f6e3a7dc59dce" translate="yes" xml:space="preserve">
          <source>Required. 100 characters or fewer. Example: &lt;code&gt;'can_vote'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8db7e96a1366fc21d1dd698986d1c2b93fe8b6" translate="yes" xml:space="preserve">
          <source>Required. 150 characters or fewer. Any characters are permitted. Example: &lt;code&gt;'Awesome Users'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49495c2ed09a73a61954db6d00f0d62617ecf621" translate="yes" xml:space="preserve">
          <source>Required. 150 characters or fewer. Usernames may contain alphanumeric, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a597a0bce7f0a7cba1f19322f3893c98ae3f09" translate="yes" xml:space="preserve">
          <source>Required. 255 characters or fewer. Example: &lt;code&gt;'Can vote'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f57b9b99ec411ac9c3993a29d9bb2c4fd279cc8" translate="yes" xml:space="preserve">
          <source>Required. A hash of, and metadata about, the password. (Django doesn&amp;rsquo;t store the raw password.) Raw passwords can be arbitrarily long and can contain any character. See the &lt;a href=&quot;../../topics/auth/passwords&quot;&gt;password documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7898e9cfac0ed2099777c23c5aedcdf673333f28" translate="yes" xml:space="preserve">
          <source>Required. A list, tuple, &lt;code&gt;QuerySet&lt;/code&gt;, or other sliceable object with a &lt;code&gt;count()&lt;/code&gt; or &lt;code&gt;__len__()&lt;/code&gt; method. For consistent pagination, &lt;code&gt;QuerySet&lt;/code&gt;s should be ordered, e.g. with an &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; clause or with a default &lt;a href=&quot;models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94811d0096e8b0c7d398bb9f23f7b39e64b05e15" translate="yes" xml:space="preserve">
          <source>Required. A reference to the &lt;code&gt;django_content_type&lt;/code&gt; database table, which contains a record for each installed model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5445ec505863ce23d459709bb104249b07dfae2d" translate="yes" xml:space="preserve">
          <source>Required. The absolute filesystem path to a directory from which this &lt;a href=&quot;#django.db.models.FilePathField&quot;&gt;&lt;code&gt;FilePathField&lt;/code&gt;&lt;/a&gt; should get its choices. Example: &lt;code&gt;&quot;/home/images&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b14d7e4905d0b352dc758f5c4a8bb7a4a85d40" translate="yes" xml:space="preserve">
          <source>Required. The maximum number of items to include on a page, not including orphans (see the &lt;a href=&quot;#django.core.paginator.Paginator.orphans&quot;&gt;&lt;code&gt;orphans&lt;/code&gt;&lt;/a&gt; optional argument below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01479ee677c5bed4a751195a875379f475cac353" translate="yes" xml:space="preserve">
          <source>Requires &lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2&lt;/a&gt; to be installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea2019b402d30d69ea2961444c9aabfa03dd383" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;gettext&lt;/code&gt; 0.19 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61689b4cf61f94a300e95b848e1318780f5da6eb" translate="yes" xml:space="preserve">
          <source>Requires PostGIS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31477357aed10831acdc4c0ea9afc4b1767ae2b5" translate="yes" xml:space="preserve">
          <source>Requires SpatiaLite 4.3+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fda19811cc2cbc0b8d6196e7d61758a202c153" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;#auth&quot;&gt;auth&lt;/a&gt; and &lt;a href=&quot;#contenttypes&quot;&gt;contenttypes&lt;/a&gt; contrib packages to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3782dd60524c764b86c32c3f276c579c1518410a" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;#sites&quot;&gt;sites&lt;/a&gt; contrib package to be installed as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94bbd4d18cd346ada4be005be4f2729399e93fe" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;https://pillow.readthedocs.io/en/latest/&quot;&gt;Pillow&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dec7f55dc3f3c93210924451f5e5bd0cb433039" translate="yes" xml:space="preserve">
          <source>Requires the app registry to be fully populated unless the &lt;code&gt;require_ready&lt;/code&gt; argument is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0363dae913924071cb62b890c1d088b5c47599" translate="yes" xml:space="preserve">
          <source>Requires the app registry to be fully populated unless the &lt;code&gt;require_ready&lt;/code&gt; argument is set to &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;require_ready&lt;/code&gt; behaves exactly as in &lt;a href=&quot;#django.apps.apps.get_model&quot;&gt;&lt;code&gt;apps.get_model()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202974d9ba6aa4b490cf83a204e99d0d3662fdb9" translate="yes" xml:space="preserve">
          <source>Requires the app registry to be fully populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a7a23208ed2ca6b5bcda4a44cb765ab55c5f0e" translate="yes" xml:space="preserve">
          <source>Resets a previous &lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt; so that it restarts from its first item at its next encounter. Without arguments, &lt;code&gt;{% resetcycle %}&lt;/code&gt; will reset the last &lt;code&gt;{% cycle %}&lt;/code&gt; defined in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70a410f32fa60ab589188f741673774db14cbfa" translate="yes" xml:space="preserve">
          <source>Resets the counter used to generate unique savepoint IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b56a752feec47aa262bcc7283634671804beeba" translate="yes" xml:space="preserve">
          <source>Resetting the database to a known state at the beginning of each test to ease testing and using the ORM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125530f0717509e49abc4243e581e7e7b86fe61c" translate="yes" xml:space="preserve">
          <source>Resolve any deprecation warnings with your current version of Django before continuing the upgrade process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2261b50edb72eb78e13028f969cad71ee998c80" translate="yes" xml:space="preserve">
          <source>Resolves the template instance to use for rendering. Accepts a backend-dependent template object (such as those returned by &lt;a href=&quot;../topics/templates#django.template.loader.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt;), the name of a template, or a list of template names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c30e209ac2a757ff481fd44acf2d0c0d35f091" translate="yes" xml:space="preserve">
          <source>Resolving deprecation warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4554ddb33e4f5d0cc8ff3c69c9e14fd701dea6c" translate="yes" xml:space="preserve">
          <source>Responsible for producing the query string and parameters for the expression. The &lt;code&gt;compiler&lt;/code&gt; is an &lt;code&gt;SQLCompiler&lt;/code&gt; object, which has a &lt;code&gt;compile()&lt;/code&gt; method that can be used to compile other expressions. The &lt;code&gt;connection&lt;/code&gt; is the connection used to execute the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cda354481fab99d23a71ef74e49c915e603ddd" translate="yes" xml:space="preserve">
          <source>Responsible for returning the list of columns references by this expression. &lt;code&gt;get_group_by_cols()&lt;/code&gt; should be called on any nested expressions. &lt;code&gt;F()&lt;/code&gt; objects, in particular, hold a reference to a column. The &lt;code&gt;alias&lt;/code&gt; parameter will be &lt;code&gt;None&lt;/code&gt; unless the expression has been annotated and is used for grouping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16dd54844e73220400176772b3e81df81f1c5bc" translate="yes" xml:space="preserve">
          <source>Restaurant.objects.all() returns the Restaurants, not the Places. Note that there are two restaurants - Ace Hardware the Restaurant was created in the call to r.place = p2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c986890c5d7176db9450afbdeb5648bfebfdc0aa" translate="yes" xml:space="preserve">
          <source>Restores the pre-test environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2678185382b6889ba038d7918ae2f5e0aa506742" translate="yes" xml:space="preserve">
          <source>Restrictions on PostgreSQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a81964500ab947d9006dffa252591003edf269" translate="yes" xml:space="preserve">
          <source>Restrictions on SQLite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5e25c425d8bb83db2e1872ce15e7f20ecba5e3" translate="yes" xml:space="preserve">
          <source>Restrictions on operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dddb9e7eacbe3771905f0ade00ac4e71b37ba20" translate="yes" xml:space="preserve">
          <source>Result from &lt;code&gt;flatten()&lt;/code&gt; can be useful in unit tests to compare &lt;code&gt;Context&lt;/code&gt; against &lt;code&gt;dict&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34039137848b54504eb0a3fa43cc38fc03285b4" translate="yes" xml:space="preserve">
          <source>Retrieve a single field instance of a model by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac5ade0b4280c04f07f433adb98aa53f8667b29" translate="yes" xml:space="preserve">
          <source>Retrieve all field instances of a model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb15fc8bcba8a9e4be4fad291a5a5da5ee0f7ebd" translate="yes" xml:space="preserve">
          <source>Retrieve everything at once if you know you will need it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b537573b41579adb8a7e7da0366a045f04c0246" translate="yes" xml:space="preserve">
          <source>Retrieve individual objects using a unique, indexed column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a045442db3a85b73bb9f0ff19e169c752f3b12" translate="yes" xml:space="preserve">
          <source>Retrieve initial data for the form. By default, returns a copy of &lt;a href=&quot;#django.views.generic.edit.FormMixin.initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83b11fb627f0023cfb79c29c2adea58658712b7" translate="yes" xml:space="preserve">
          <source>Retrieve the form class to instantiate. By default &lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9235d63e9c2f677e55364cdced160a4f10016b84" translate="yes" xml:space="preserve">
          <source>Retrieve the form class to instantiate. If &lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; is provided, that class will be used. Otherwise, a &lt;code&gt;ModelForm&lt;/code&gt; will be instantiated using the model associated with the &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt;, or with the &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt;, depending on which attribute is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bee26f317df2d0d6e8066d0e7a67fbab7d1d8ef" translate="yes" xml:space="preserve">
          <source>Retrieves a user instance using the contents of the field nominated by &lt;code&gt;USERNAME_FIELD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93eb4e34a04c1ba17168d9f9b3967288255bc3ec" translate="yes" xml:space="preserve">
          <source>Retrieves the target object and calls its &lt;code&gt;delete()&lt;/code&gt; method, then redirects to the success URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b3e7413ea116dec7cf2aae8bc9af8715d483f9" translate="yes" xml:space="preserve">
          <source>Retrieving a single field instance of a model by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c7275ac9b596bcc4a9fb3dc7f550ecebd02c9d" translate="yes" xml:space="preserve">
          <source>Retrieving a single object with &lt;code&gt;get()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f0375bda8b13d9b12e176b9110fb61f50ee89f" translate="yes" xml:space="preserve">
          <source>Retrieving all field instances of a model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22df6c96c919d965e91c8e08d508fd3114d1912f" translate="yes" xml:space="preserve">
          <source>Retrieving all objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3d1e28b2e16520160eba770204e9d1ade821d9" translate="yes" xml:space="preserve">
          <source>Retrieving objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e4d6095c00da0d7f4134f9ed3559a7b808d12d" translate="yes" xml:space="preserve">
          <source>Retrieving specific objects with filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020879717215eb03d46aabe78b325c366a9e211f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;None&lt;/code&gt; from &lt;code&gt;receive_data_chunk&lt;/code&gt; to short-circuit remaining upload handlers from getting this chunk. This is useful if you&amp;rsquo;re storing the uploaded data yourself and don&amp;rsquo;t want future handlers to store a copy of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f646cd13a1799a748d9cea77d6d0e67a5669c2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;None&lt;/code&gt; if you want upload handling to continue, or a tuple of &lt;code&gt;(POST, FILES)&lt;/code&gt; if you want to return the new data structures suitable for the request directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b560a1b538008b47e50eacf79eff6943ef3c8355" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a relation between &lt;code&gt;obj1&lt;/code&gt; and &lt;code&gt;obj2&lt;/code&gt; should be allowed, &lt;code&gt;False&lt;/code&gt; if the relation should be prevented, or &lt;code&gt;None&lt;/code&gt; if the router has no opinion. This is purely a validation operation, used by foreign key and many to many operations to determine if a relation should be allowed between two objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6074419c85f0673cf502ba596e74538dabfb05" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;dict&lt;/code&gt; of attributes to add to each item (&lt;code&gt;item&lt;/code&gt;/&lt;code&gt;entry&lt;/code&gt;) element. The argument, &lt;code&gt;item&lt;/code&gt;, is a dictionary of all the data passed to &lt;code&gt;SyndicationFeed.add_item()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630a9ad67b707660094ca2dcb83a172b61ba1ea1" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;dict&lt;/code&gt; of attributes to add to the root feed element (&lt;code&gt;feed&lt;/code&gt;/&lt;code&gt;channel&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8b260f3e770ab44f7581128c3be0648454e6e1" translate="yes" xml:space="preserve">
          <source>Return a boolean specifying whether to display the page if no objects are available. If this method returns &lt;code&gt;False&lt;/code&gt; and no objects are available, the view will raise a 404 instead of displaying an empty page. By default, this is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef096e638a6b41f12723c0d12984666d276a0f8" translate="yes" xml:space="preserve">
          <source>Return extra attributes to place on each item (i.e. item/entry) element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa364780ba6e0f3ea03043b52597cb0fa34b82f2" translate="yes" xml:space="preserve">
          <source>Return extra attributes to place on the root (i.e. feed/channel) element. Called from &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736ec423104bfd6a8fa13c76be5315392d1defbe" translate="yes" xml:space="preserve">
          <source>Return the EWKB representation of this Geometry as a Python buffer. This is an extension of the WKB specification that includes any SRID value that are a part of this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42af9892ec38501a8937e0af546c1b60b030a53c" translate="yes" xml:space="preserve">
          <source>Return the context variable name that will be used to contain the data that this view is manipulating. If &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.context_object_name&quot;&gt;&lt;code&gt;context_object_name&lt;/code&gt;&lt;/a&gt; is not set, the context name will be constructed from the &lt;code&gt;model_name&lt;/code&gt; of the model that the queryset is composed from. For example, the model &lt;code&gt;Article&lt;/code&gt; would have context object named &lt;code&gt;'article'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe07d612b5dc8218d6f214b33a0578323ac3ba1" translate="yes" xml:space="preserve">
          <source>Return the context variable name that will be used to contain the list of data that this view is manipulating. If &lt;code&gt;object_list&lt;/code&gt; is a queryset of Django objects and &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.context_object_name&quot;&gt;&lt;code&gt;context_object_name&lt;/code&gt;&lt;/a&gt; is not set, the context name will be the &lt;code&gt;model_name&lt;/code&gt; of the model that the queryset is composed from, with postfix &lt;code&gt;'_list'&lt;/code&gt; appended. For example, the model &lt;code&gt;Article&lt;/code&gt; would have a context object named &lt;code&gt;article_list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8246453c6e901bbc2e4288b43a47949404da068a" translate="yes" xml:space="preserve">
          <source>Return type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bd1e71618b84c910837df50d00485bde4708dd" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;float&lt;/code&gt; if input is &lt;code&gt;int&lt;/code&gt;, otherwise same as input field, or &lt;code&gt;output_field&lt;/code&gt; if supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd2aef4e4644db8d3572d2b60b5474addd70554" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;int&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9d70e74c9e14b650dd5b0bfa236e3b694e8efe" translate="yes" xml:space="preserve">
          <source>Return type: same as input field, or &lt;code&gt;output_field&lt;/code&gt; if supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d144d353038e014eb72a664bb0c163a5363adfe5" translate="yes" xml:space="preserve">
          <source>Returned objects are empty ranges. Can be chained to valid lookups for a &lt;a href=&quot;../../models/fields#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bd16d77e981832b002ce119a0e884cb3b16bde" translate="yes" xml:space="preserve">
          <source>Returned objects have the given lower bound. Can be chained to valid lookups for the base field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d253a6b808941a6d5ba1a28edfc923dbb6867c" translate="yes" xml:space="preserve">
          <source>Returned objects have the given upper bound. Can be chained to valid lookups for the base field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb366d00a6a439510944a0acbdf4865e7ef3cfd" translate="yes" xml:space="preserve">
          <source>Returning errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7095e5771eaf071182623b8cf6a49a64c9eba107" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1092e63f98742ffa56c537ab72b7a40ee87c664d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.set_unusable_password&quot;&gt;&lt;code&gt;set_unusable_password()&lt;/code&gt;&lt;/a&gt; has been called for this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e677794a528a5aa8153071c3a65b95c3e25f184" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if &lt;a href=&quot;#django.contrib.auth.models.User.set_unusable_password&quot;&gt;&lt;code&gt;set_unusable_password()&lt;/code&gt;&lt;/a&gt; has been called for this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a98b310ac45a54756232d0cddc7b27f06ae41bb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if the password is a result of &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_unusable_password&quot;&gt;&lt;code&gt;User.set_unusable_password()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08487b10e572b361292fbbd2036a6fa8419a4e6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#django.contrib.auth.backends.RemoteUserBackend.create_unknown_user&quot;&gt;&lt;code&gt;create_unknown_user&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt; and a &lt;code&gt;User&lt;/code&gt; object with the given username is not found in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f92312a02b985adef5b319c8895a576823f384b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;None&lt;/code&gt; if there is no suggestion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d97ec59755d608144e34737e5bfaf6e49f62e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.disjoint&quot;&gt;&lt;code&gt;GEOSGeometry.disjoint()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9627596d0dd58d51bdb410092d5f1f3053bb8e15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.within&quot;&gt;&lt;code&gt;other.within(this)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b581b3914a5d050d69d5762d31de07c1682c3d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is aware, &lt;code&gt;False&lt;/code&gt; if it is naive. This function assumes that &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ee4077e37c02ef9a6377b3f5889cf0e80ff538" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is naive, &lt;code&gt;False&lt;/code&gt; if it is aware. This function assumes that &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e3685f44b92cdfc280453cf13c75eec24b4a73" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if a file referenced by the given name already exists in the storage system, or &lt;code&gt;False&lt;/code&gt; if the name is available for a new file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee7578ce7acc9ab5cf150f7bcbfb78b9112875b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if and only if all elements are closed. Requires GEOS 3.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b18813bc602858d4a2a0158b3e61be2a37b803" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if at least one input value is true, &lt;code&gt;None&lt;/code&gt; if all values are null or if there are no values, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc8fe08675d5a8863527050e072394b78b97133" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; contains any results, and &lt;code&gt;False&lt;/code&gt; if not. This tries to perform the query in the simplest and fastest way possible, but it &lt;em&gt;does&lt;/em&gt; execute nearly the same query as a normal &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904b4aa45e01a31d68b44d38d64e4e743dde9a2e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two Geometries is &lt;code&gt;T*T******&lt;/code&gt; (for a point and a curve,a point and an area or a line and an area) &lt;code&gt;0********&lt;/code&gt; (for two curves).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1679cbb23dcbc50cd824271aab873a88e7894184" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;FF*FF****&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b945e0e8a9cf4720bdf5e9ee506bae6a95f82f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;FT*******&lt;/code&gt;, &lt;code&gt;F**T*****&lt;/code&gt; or &lt;code&gt;F***T****&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e020c7b2dca31dbf34dba2c137fae9c9a1a3c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;T*F**F***&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c269d8bb8356ba54a83f19794a9da02bd6abdcd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;T*F**FFF*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f8d07aaf246cbf7cdb39524f0b6d55493ab6c3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the elements in the DE-9IM intersection matrix for this geometry and the other matches the given &lt;code&gt;pattern&lt;/code&gt; &amp;ndash; a string of nine characters from the alphabet: {&lt;code&gt;T&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed75482457f97c5c4474ee309fe4eac1a54c1663" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the file is large enough to require multiple chunks to access all of its content give some &lt;code&gt;chunk_size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bfd398d8d8742a6e56c146f92fa88e0237de21" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the given key is set. This lets you do, e.g., &lt;code&gt;if &quot;foo&quot;
in request.GET&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07550ce9b8cb5b05b8650e93547814bb0d52cc7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the given raw string is the correct password for the user. (This takes care of the password hashing in making the comparison.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed869c3b1a3c302d28c1efbddba6de7d4875346e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the request is secure; that is, if it was made with HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb3cafcec81e492ab732c14b9ef5770c196a41b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the request was made via an &lt;code&gt;XMLHttpRequest&lt;/code&gt;, by checking the &lt;code&gt;HTTP_X_REQUESTED_WITH&lt;/code&gt; header for the string &lt;code&gt;'XMLHttpRequest'&lt;/code&gt;. Most modern JavaScript libraries send this header. If you write your own &lt;code&gt;XMLHttpRequest&lt;/code&gt; call (on the browser side), you&amp;rsquo;ll have to set this header manually if you want &lt;code&gt;is_ajax()&lt;/code&gt; to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fea0260d6d8d66778afbc8e0f0a9ebf54961ad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the uploaded file is big enough to require reading in multiple chunks. By default this will be any file larger than 2.5 megabytes, but that&amp;rsquo;s configurable; see below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e51f52a4e503f379c996e9a7ae757c4ac53120" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user account is currently active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a6bee4c595a49da5fbd781a73432afd644d4dd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user for the given &lt;code&gt;HttpRequest&lt;/code&gt; has permission to view at least one page in the admin site. Defaults to requiring both &lt;a href=&quot;../auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;User.is_active&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../auth#django.contrib.auth.models.User.is_staff&quot;&gt;&lt;code&gt;User.is_staff&lt;/code&gt;&lt;/a&gt; to be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c422edb30f0e7bf8b998db62d6661745a9e402e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has any permissions in the given package (the Django app label). If &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;User.is_active&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; are both &lt;code&gt;True&lt;/code&gt;, this method always returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e183355b4dbe2db1d9c7df0df3ae3b6343c53fdd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has any permissions in the given package (the Django app label). If the user is inactive, this method will always return &lt;code&gt;False&lt;/code&gt;. For an active superuser, this method will always return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf86aff7369368b9b97cee053e5ee0a3b028ce55" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has each of the specified permissions, where each perm is in the format &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt;. If &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;User.is_active&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; are both &lt;code&gt;True&lt;/code&gt;, this method always returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce739125aa7d40959dfc09dd500567a237ba3d9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has each of the specified permissions, where each perm is in the format &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt;. If the user is inactive, this method will always return &lt;code&gt;False&lt;/code&gt;. For an active superuser, this method will always return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b4581a087822825c1a9286d35d51eaf872978d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has permission to access models in the given app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590c7ca3c904c042193772e50d68ac302e73932d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has the named permission. If &lt;code&gt;obj&lt;/code&gt; is provided, the permission needs to be checked against a specific object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9056e092f73b51467ae3ff0391c734b26e1dd60d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has the specified permission, where &lt;code&gt;perm&lt;/code&gt; is in the format &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (see &lt;a href=&quot;default#topic-authorization&quot;&gt;permissions&lt;/a&gt;). If &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;User.is_active&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; are both &lt;code&gt;True&lt;/code&gt;, this method always returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa0f993d65311862dc70e8f3ccc644ad0802463" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user has the specified permission, where perm is in the format &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt;. (see documentation on &lt;a href=&quot;../../topics/auth/default#topic-authorization&quot;&gt;permissions&lt;/a&gt;). If the user is inactive, this method will always return &lt;code&gt;False&lt;/code&gt;. For an active superuser, this method will always return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2998ca92dfd697c7326bb3124e1e2cb523e951" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the user is allowed to have access to the admin site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70bd9a4cab0876040135502a3b3faa712a8aeff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the value is divisible by the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd991a70117d2b96df1d9044d12bc73c9b05068" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the value&amp;rsquo;s length is the argument, or &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fbbe2f913fb1deaaa31768542d685aa99418d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if there&amp;rsquo;s a next &lt;strong&gt;or&lt;/strong&gt; previous page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655ee1dd8b0ec5082d717de44822885bc70e47d5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if there&amp;rsquo;s a next page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc935ca88b8665dc8baa03a1a044c145cb48252" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if there&amp;rsquo;s a previous page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13320c61a9cda6b7e4cc3ab0c198c3d93c51af7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s widget is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4672a2da17d17098042b702b469af09c19562ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry contains the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a910b4f1c70170bb50ba4a1e4f921f8d73ec83" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry covers the specified geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11c001ce0bc5771ec2f0a53987ce7d0b434f03d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry crosses the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e356830aa6a22399a550cc5360f2ab638063efd5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry intersects the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2a0436b46940b8aa2bfb241d6fb8f75b116165" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry is contained within the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e444cb4b71f3c42fcae02e74e81f25b0c9c502" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry is equivalent to the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe5daa4a1a8550615853a56edd1ae8b8a9fd007" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry is spatially disjoint to (i.e. does not intersect) the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26059705de09bed697c60db6ad8208d325ff75a1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry overlaps the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c8d33a9182a7e16f3e64946000b25cb7131f0c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this geometry touches the other, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa92153aa913ede4ea6aa48fe636042d27435a6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this spatial reference is a projected coordinate system (root node is &lt;code&gt;PROJCS&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a991e24a305753645eb050cca67a3657e973a2ed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this spatial reference is geographic (root node is &lt;code&gt;GEOGCS&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270a8bcc929a09f551736d5bf3819248d2247f68" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if this spatial reference is local (root node is &lt;code&gt;LOCAL_CS&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d5e246af13f048f660f02fc177c25b97d4f2ba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; based on a case-insensitive check for a header with the given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea15228b94d25127bf4a76a002092797f44e5650" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; to activate the filtering operated in the other methods. By default the filter is active if &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9096d25e47c96a6b481a457385c2bdf3696b210" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt;, if all input values are true, &lt;code&gt;None&lt;/code&gt; if all values are null or if there are no values, otherwise &lt;code&gt;False&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa03f2a2b1223878aac012bb8d18503e68d05e30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;lang_code&lt;/code&gt; if it&amp;rsquo;s in the &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting, possibly selecting a more generic variant. For example, &lt;code&gt;'es'&lt;/code&gt; is returned if &lt;code&gt;lang_code&lt;/code&gt; is &lt;code&gt;'es-ar'&lt;/code&gt; and &lt;code&gt;'es'&lt;/code&gt; is in &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; but &lt;code&gt;'es-ar'&lt;/code&gt; isn&amp;rsquo;t.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5c465f62ff24b6903b140c8b9cce42d9fec636" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;self&lt;/code&gt; with any modifications required to reverse the sort order within an &lt;code&gt;order_by&lt;/code&gt; call. As an example, an expression implementing &lt;code&gt;NULLS LAST&lt;/code&gt; would change its value to be &lt;code&gt;NULLS FIRST&lt;/code&gt;. Modifications are only required for expressions that implement sort order like &lt;code&gt;OrderBy&lt;/code&gt;. This method is called when &lt;a href=&quot;querysets#django.db.models.query.QuerySet.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; is called on a queryset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38657a0a6020f86fa9eb2647f30fe6af81920c6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;sum(x*y) - sum(x) * sum(y)/N&lt;/code&gt; (&amp;ldquo;sum of products&amp;rdquo; of independent times dependent variable) as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffdaba17999716e4b4c76f792459544e5e5aaea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;sum(x^2) - sum(x)^2/N&lt;/code&gt; (&amp;ldquo;sum of squares&amp;rdquo; of the independent variable) as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe06e046e553650c894e445bf08050f5bd2ef12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;sum(y^2) - sum(y)^2/N&lt;/code&gt; (&amp;ldquo;sum of squares&amp;rdquo; of the dependent variable) as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772beb21ff0dbb7474af916e68f6d3b9c60439ef" translate="yes" xml:space="preserve">
          <source>Returns URL-safe, sha1 signed base64 compressed JSON string. Serialized object is signed using &lt;a href=&quot;#django.core.signing.TimestampSigner&quot;&gt;&lt;code&gt;TimestampSigner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7858139a22bf624c93d989c4ffdad1bccc812e18" translate="yes" xml:space="preserve">
          <source>Returns WKB of the geometry in hexadecimal. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b28658736f37b6a1c6da105614156ba25627f72" translate="yes" xml:space="preserve">
          <source>Returns a 2-tuple of the units value and the units name and will automatically determines whether to return the linear or angular units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e3d17fc0349b9b184a6fa33a21490d424c486c" translate="yes" xml:space="preserve">
          <source>Returns a 3-tuple containing (&lt;code&gt;date_list&lt;/code&gt;, &lt;code&gt;object_list&lt;/code&gt;, &lt;code&gt;extra_context&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b15df92d057ef09ed97318ce70ac4a9aecaf8c" translate="yes" xml:space="preserve">
          <source>Returns a 4-tuple containing (&lt;code&gt;paginator&lt;/code&gt;, &lt;code&gt;page&lt;/code&gt;, &lt;code&gt;object_list&lt;/code&gt;, &lt;code&gt;is_paginated&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f16ff6f3d5122bfd87357c74273c8bb451aee0" translate="yes" xml:space="preserve">
          <source>Returns a 4-tuple with enough information to recreate the field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ab15c17d9c87fd0a162801ddf936625c19838f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.gdal.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; representing the centroid of this polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038e459c10e7d4c73c5ce1690da5f0e2445fd4ef" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; combining the points in this geometry not in other, and the points in other not in this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfb77b87a64b68721db8443556ffe36ac146bf3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; representing all the points in this geometry and the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cce787211b055e7d6005f4509f28d3b2377cf9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; representing the points making up this geometry that do not make up other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90acb441d82f0b4011c48043dc0a26735280ad42" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; representing the points shared by this geometry and other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbbac3a52191284c7bd592f15cef5e8f25aeaa7" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; that represents all points whose distance from this geometry is less than or equal to the given &lt;code&gt;width&lt;/code&gt;. The optional &lt;code&gt;quadsegs&lt;/code&gt; keyword sets the number of segments used to approximate a quarter circle (defaults is 8).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6f406c10b5b6027b83e5a8f8b94e1c4e156d59" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; representing the line merge of all the components in this &lt;code&gt;MultiLineString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f373df8a41096e77f8ce85c1f6f910351970632" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; object representing the geometric center of the geometry. The point is not guaranteed to be on the interior of the geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78179dc4e1713a9a931e44ad7d153c408aa78e90" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; that represents the bounding envelope of this geometry. Note that it can also return a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; if the input geometry is a point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014b5504203fbaf27c3485593bf6d0c7ce889cdb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.core.paginator.Page&quot;&gt;&lt;code&gt;Page&lt;/code&gt;&lt;/a&gt; object with the given 1-based index, while also handling out of range and invalid page numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8def4825c14dcb20806631ed8525fc1ea7edf737" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.core.paginator.Page&quot;&gt;&lt;code&gt;Page&lt;/code&gt;&lt;/a&gt; object with the given 1-based index. Raises &lt;a href=&quot;#django.core.paginator.InvalidPage&quot;&gt;&lt;code&gt;InvalidPage&lt;/code&gt;&lt;/a&gt; if the given page number doesn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9674d56393777c9efff4878ae76133755d5e873" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; instance that ensures a string consists of integers separated by &lt;code&gt;sep&lt;/code&gt;. It allows negative integers when &lt;code&gt;allow_negative&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd53c3c3ec806dd5bc68f035357f4f5991e71b2" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#django.db.models.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;transform_name&lt;/code&gt;. The default implementation looks recursively on all parent classes to check if any has the registered transform named &lt;code&gt;transform_name&lt;/code&gt;, returning the first match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb29317663ac83f76d64ccf4351d03f215b8412" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; class for use in the &lt;code&gt;Formset&lt;/code&gt; on the changelist page. To use a custom form, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f11b776dbfa7a9d04db7018a2c8a5b1f20b51c" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; class for use in the admin add and change views, see &lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt;&lt;code&gt;add_view()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt;&lt;code&gt;change_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce18f7ceaaf7c59dc020d8bbd65218b15cc61c1" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.models.BaseInlineFormSet&quot;&gt;&lt;code&gt;BaseInlineFormSet&lt;/code&gt;&lt;/a&gt; class for use in admin add/change views. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited or &lt;code&gt;None&lt;/code&gt; when adding a new parent. See the example for &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_formsets_with_inlines&quot;&gt;&lt;code&gt;ModelAdmin.get_formsets_with_inlines&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8437c971b2c076d2a62818b237a87e9371884843" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../../../topics/forms/modelforms#model-formsets&quot;&gt;ModelFormSet&lt;/a&gt; class for use on the changelist page if &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_editable&quot;&gt;&lt;code&gt;list_editable&lt;/code&gt;&lt;/a&gt; is used. To use a custom formset, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b37599de4a9abf96d1365022443b00374bc4cd" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; class for the given &lt;code&gt;model&lt;/code&gt;. You can optionally pass a &lt;code&gt;form&lt;/code&gt; argument to use as a starting point for constructing the &lt;code&gt;ModelForm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bfc62770282f30bfb0f55071f36017d5f83110" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; object corresponding to the SRID of the geometry or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312b18a0ffebbd5342a71f73d3fdbd1dd4a16d34" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object corresponding to this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e3669744a89136dc4fcb1901d2adcd3817c4a3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;geos#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; object corresponding to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0218937868e8b3a01ca038f01b8e0d5e84411d37" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;KML&lt;/a&gt; (Keyhole Markup Language) representation of the geometry. This should only be used for geometries with an SRID of 4326 (WGS84), but this restriction is not enforced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d77876e7c6111aa4582be6346a0079a6dc73351" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; of the creation time of the file. For storage systems unable to return the creation time this will raise &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710729d5bf945bb32c96740eab4f7fb388bead08" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; of the last accessed time of the file. For storage systems unable to return the last accessed time this will raise &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727e31ae5d756003fbd610c38795c576d4e8625a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; of the last modified time of the file. For storage systems unable to return the last modified time this will raise &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b57017274e968a44ca256d4581ed354a09dc4b7" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; of the system&amp;rsquo;s ctime, i.e. &lt;a href=&quot;https://docs.python.org/3/library/os.path.html#os.path.getctime&quot;&gt;&lt;code&gt;os.path.getctime()&lt;/code&gt;&lt;/a&gt;. On some systems (like Unix), this is the time of the last metadata change, and on others (like Windows), it&amp;rsquo;s the creation time of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629f399c1d1c704d47c2c0c9f3872fb22cdc816a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; that represents the current point in time. Exactly what&amp;rsquo;s returned depends on the value of &lt;a href=&quot;settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21d95ea1907a8a593b54df618035949a863f4f3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; instance that represents a time zone with a fixed offset from UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1ffe0dcdcf62db86ed2024be375a97d7bd26ac" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; instance that represents the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9e34bdbe0e8b53be8ec0f965c5c516cfaa9080" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; instance that represents the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;default time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c29e75a4c8896a532524439c09543c410c544ee" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;CommandParser&lt;/code&gt; instance, which is an &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; subclass with a few customizations for Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064bca64313a8070434d12da8dfd1be3baeb9a0a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;FormSet&lt;/code&gt; class for the given &lt;code&gt;form&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51939073b7b767442cbce281a58b15b497f5c7b1" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;FormSet&lt;/code&gt; class for the given &lt;code&gt;model&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84d5f8d51e219f5f8bc6e1b3afc23cf43503e88" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; or a &lt;code&gt;MULTI&lt;/code&gt; geometry object from the geometry column. This is analogous to a simplified version of the &lt;a href=&quot;#django.contrib.gis.db.models.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt; aggregate, except it can be several orders of magnitude faster than performing a union because it rolls up geometries into a collection or multi object, not caring about dissolving boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e00da3157ea6f46cab6aaa850fb58ec29d7acf3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;GenericInlineFormSet&lt;/code&gt; using &lt;a href=&quot;../forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d320e9e44d9e91537cc04c73bcec7af437301b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;LineString&lt;/code&gt; constructed from the point field geometries in the &lt;code&gt;QuerySet&lt;/code&gt;. Currently, ordering the queryset has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01c557a50a43415a62585c2e636368bee4108c3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;QuerySet&lt;/code&gt; that evaluates to a list of &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; objects representing all available dates of a particular kind within the contents of the &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48697aa61fc21a42cecd8cfff8d7d8585cc47964" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;QuerySet&lt;/code&gt; that evaluates to a list of &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; objects representing all available dates of a particular kind within the contents of the &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e01d94e897ca2d79aff6f19195776c578938d54" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;QuerySet&lt;/code&gt; that returns dictionaries, rather than model instances, when used as an iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc06a76de1f522d8b8b45f338ea770bd9b321fda" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;QuerySet&lt;/code&gt; that will &amp;ldquo;follow&amp;rdquo; foreign-key relationships, selecting additional related-object data when it executes its query. This is a performance booster which results in a single more complex query but means later use of foreign-key relationships won&amp;rsquo;t require database queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928f0873194850006358ace0c427757886e7040d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;QuerySet&lt;/code&gt; that will automatically retrieve, in a single batch, related objects for each of the specified lookups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e651d68d8193b61fe2d60d4468aab18ffa231d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Template&lt;/code&gt; object for a given &lt;code&gt;template_name&lt;/code&gt; by looping through results from &lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt;&lt;code&gt;get_template_sources()&lt;/code&gt;&lt;/a&gt; and calling &lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt;&lt;code&gt;get_contents()&lt;/code&gt;&lt;/a&gt;. This returns the first matching template. If no template is found, &lt;a href=&quot;../../topics/templates#django.template.TemplateDoesNotExist&quot;&gt;&lt;code&gt;TemplateDoesNotExist&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565146606b4508819a7b0fbb3ea13a3d40bf8fc5" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;TestSuite&lt;/code&gt; instance ready to be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbaf2c60d9c351efcd7c7c4ae86b08304f8709df" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;buffer&lt;/code&gt; containing a WKB representation of this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877d8434c682b6a38930b0b26b6bacb2bbb4e45d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;dict&lt;/code&gt; representation of &lt;code&gt;QueryDict&lt;/code&gt;. For every (key, list) pair in &lt;code&gt;QueryDict&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt; will have (key, item), where item is one element of the list, using the same logic as &lt;a href=&quot;#django.http.QueryDict.__getitem__&quot;&gt;&lt;code&gt;QueryDict.__getitem__()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd324f28f5bf357b446f699239523c70885d7ff3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;dict&lt;/code&gt; that maps fields to their original &lt;code&gt;ValidationError&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5dc162af14e115b06a1c49ac54e7f6aaa7d1ff" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;self.response_class&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7812bd2a5b5cdb22f2e94ab72c513abaed2aa0a4" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;str&lt;/code&gt; object representing arbitrary object &lt;code&gt;s&lt;/code&gt;. Treats bytestrings using the &lt;code&gt;encoding&lt;/code&gt; codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547aeb8dff40c760726ab26f575baf8739d3da56" translate="yes" xml:space="preserve">
          <source>Returns a &lt;em&gt;copy&lt;/em&gt; of the current &lt;code&gt;QuerySet&lt;/code&gt; (or &lt;code&gt;QuerySet&lt;/code&gt; subclass). This can be useful in situations where you might want to pass in either a model manager or a &lt;code&gt;QuerySet&lt;/code&gt; and do further filtering on the result. After calling &lt;code&gt;all()&lt;/code&gt; on either object, you&amp;rsquo;ll definitely have a &lt;code&gt;QuerySet&lt;/code&gt; to work with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9b4209f19f4c91343c3cf4df6ce5b70444d510" translate="yes" xml:space="preserve">
          <source>Returns a GEOS &lt;code&gt;PreparedGeometry&lt;/code&gt; for the contents of this geometry. &lt;code&gt;PreparedGeometry&lt;/code&gt; objects are optimized for the contains, intersects, covers, crosses, disjoint, overlaps, touches and within operations. Refer to the &lt;a href=&quot;#prepared-geometries&quot;&gt;Prepared Geometries&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40a3c23a420fafae8adcbdfd19e5e69e5c54be6" translate="yes" xml:space="preserve">
          <source>Returns a boolean denoting whether the current user has permission to execute the decorated view. By default, this returns the result of calling &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perms&quot;&gt;&lt;code&gt;has_perms()&lt;/code&gt;&lt;/a&gt; with the list of permissions returned by &lt;a href=&quot;#django.contrib.auth.mixins.PermissionRequiredMixin.get_permission_required&quot;&gt;&lt;code&gt;get_permission_required()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252a4052f6b621f86c721cfa356e579e16dc8dd2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the geometry is &amp;lsquo;simple&amp;rsquo;. A geometry is simple if and only if it does not intersect itself (except at boundary points). For example, a &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; object is not simple if it intersects itself. Thus, &lt;a href=&quot;#django.contrib.gis.geos.LinearRing&quot;&gt;&lt;code&gt;LinearRing&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; objects are always simple because they do cannot intersect themselves, by definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb16f5a5968ac274bd3c5d8ec92d30ca911487f4" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the geometry is a &lt;code&gt;LinearRing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4d0f2abfbda032cc37cddd104ddb9cca478a28" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the geometry is three-dimensional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f40a8874f008368f75af76c6a13ee75a81f1215" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the geometry is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd3954567b46c899bbbc9a3573b8b1b0c9bc41a" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether this layer supports the given capability (a string). Examples of valid capability strings include: &lt;code&gt;'RandomRead'&lt;/code&gt;, &lt;code&gt;'SequentialWrite'&lt;/code&gt;, &lt;code&gt;'RandomWrite'&lt;/code&gt;, &lt;code&gt;'FastSpatialFilter'&lt;/code&gt;, &lt;code&gt;'FastFeatureCount'&lt;/code&gt;, &lt;code&gt;'FastGetExtent'&lt;/code&gt;, &lt;code&gt;'CreateField'&lt;/code&gt;, &lt;code&gt;'Transactions'&lt;/code&gt;, &lt;code&gt;'DeleteFeature'&lt;/code&gt;, and &lt;code&gt;'FastSetNextByIndex'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cba6fea76cb52eca1a0b30e5c5e8e6c47593eea" translate="yes" xml:space="preserve">
          <source>Returns a bytestring version of arbitrary object &lt;code&gt;s&lt;/code&gt;, encoded as specified in &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151efa47b8c62fb64c71b9f14a635524bf11ade2" translate="yes" xml:space="preserve">
          <source>Returns a cache key based on the request path. It can be used in the request phase because it pulls the list of headers to take into account from the global path registry and uses those to build a cache key to check against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29a6bbf17f7babbd7f63263af85135f2afd58ad" translate="yes" xml:space="preserve">
          <source>Returns a callable view that takes a request and returns a response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bff0c82b2ced239e8bd3704b9aec4d639b3286" translate="yes" xml:space="preserve">
          <source>Returns a class or module which implements the storage API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834d23938812bc4cf304ae1cedb93be3bec874a6" translate="yes" xml:space="preserve">
          <source>Returns a clone (copy) of &lt;code&gt;self&lt;/code&gt;, with any column aliases relabeled. Column aliases are renamed when subqueries are created. &lt;code&gt;relabeled_clone()&lt;/code&gt; should also be called on any nested expressions and assigned to the clone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775e24d2440759c73b7b1bd579b6bf94e01a81d6" translate="yes" xml:space="preserve">
          <source>Returns a clone of this spatial reference object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0b5e082777db57ab06f0675f68fe356ad0bc53" translate="yes" xml:space="preserve">
          <source>Returns a context manager which, when entered, installs a wrapper around database query executions, and when exited, removes the wrapper. The wrapper is installed on the thread-local connection object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3201d6d2b3950c7f5e00dd208c4ba004762cf5" translate="yes" xml:space="preserve">
          <source>Returns a cookie value for a signed cookie, or raises a &lt;code&gt;django.core.signing.BadSignature&lt;/code&gt; exception if the signature is no longer valid. If you provide the &lt;code&gt;default&lt;/code&gt; argument the exception will be suppressed and that default value will be returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f94afde6c3a44347f3e6fdade37fba4c5f5846c" translate="yes" xml:space="preserve">
          <source>Returns a coordinate tuple of (latitude, longitude),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef9357125c83b8e2676d0f236f70d42ee423b88" translate="yes" xml:space="preserve">
          <source>Returns a coordinate tuple of (longitude, latitude).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77581acf2288bc4820f87ede4d8f76cd18910ca6" translate="yes" xml:space="preserve">
          <source>Returns a copy of the object using &lt;a href=&quot;https://docs.python.org/3/library/copy.html#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt;. This copy will be mutable even if the original was not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e345ddbd7f0dffc59a2c30d68a40d4547db685d" translate="yes" xml:space="preserve">
          <source>Returns a data structure that provides enough detail to undo the changes that have been made. This data will be provided to the &lt;a href=&quot;#django.test.utils.teardown_databases&quot;&gt;&lt;code&gt;teardown_databases()&lt;/code&gt;&lt;/a&gt; function at the conclusion of testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4e46033d30a4bb980c9ddf153c9625e8c3f406" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the first day of the month after the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41e0e8d7c30c2c5958add45aea818c0e45aad5b" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the first day of the month before the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8624185459ecae44675e332f2bacca1e3af7ca" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the first day of the week after the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d583201dac10ca26c6ca669eb61d72f861ff09d8" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the first day of the week before the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe396ac19ee6c523166a588f5d461c496e66787" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the first day of the year after the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd983292808f84be1ca9b03e4a752f9a49d77b4" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the first day of the year before the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1d85c28f54dfa1e7022136786a903baffc07d5" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the next valid day after the date provided. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2228970be5437363d75ded50cae3c5e99308258" translate="yes" xml:space="preserve">
          <source>Returns a date object containing the previous valid day. This function can also return &lt;code&gt;None&lt;/code&gt; or raise an &lt;a href=&quot;../../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; exception, depending on the values of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653308d3f0f698ae17ef1340c1f7f48e944c0e1e" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of aggregate values (averages, sums, etc.) calculated over the &lt;code&gt;QuerySet&lt;/code&gt;. Each argument to &lt;code&gt;aggregate()&lt;/code&gt; specifies a value that will be included in the dictionary that is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc52b96c8bce19371288a10cfe8fef71cd758aa4" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of city information for the given query. Some of the values in the dictionary may be undefined (&lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f7f0492137dcbc89b8f3f33eb17c309741b09b" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of each lookup name registered in the class mapped to the &lt;a href=&quot;#django.db.models.Lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f6c9c1132020db47fcbdc04f6833941a1cbab7" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of values to use when rendering the widget template. By default, the dictionary contains a single key, &lt;code&gt;'widget'&lt;/code&gt;, which is a dictionary representation of the widget containing the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fc164a18d56ad9c8bbfb5e87801fe269741c21" translate="yes" xml:space="preserve">
          <source>Returns a dictionary of variables to put in the template context for every page in the admin site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0c76fcdbf63f05aa54a499c7fa7f23f38c291c" translate="yes" xml:space="preserve">
          <source>Returns a dictionary representing the template context. The keyword arguments provided will make up the returned context. Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44e48b23e02740090d1d664cfeb5c9e746be382" translate="yes" xml:space="preserve">
          <source>Returns a dictionary with the country code and country for the given query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff297bed1c4ae2b5e2bc40ca9fc80dc35b5faf28" translate="yes" xml:space="preserve">
          <source>Returns a filename based on the &lt;code&gt;name&lt;/code&gt; parameter that&amp;rsquo;s free and available for new content to be written to on the target storage system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179fc4e277899df8ffe51125512a8b4996f1b451" translate="yes" xml:space="preserve">
          <source>Returns a filename based on the &lt;code&gt;name&lt;/code&gt; parameter that&amp;rsquo;s suitable for use on the target storage system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7199408c35c6b3d7d4a8d91d4b2b41dd8d39155a" translate="yes" xml:space="preserve">
          <source>Returns a filename suitable for use with the underlying storage system. The &lt;code&gt;name&lt;/code&gt; argument passed to this method is either the original filename sent to the server or, if &lt;code&gt;upload_to&lt;/code&gt; is a callable, the filename returned by that method after any path information is removed. Override this to customize how non-standard characters are converted to safe filenames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd32873db20538108784bb17b80fa3beae8bae7d" translate="yes" xml:space="preserve">
          <source>Returns a filename that is available in the storage mechanism, possibly taking the provided filename into account. The &lt;code&gt;name&lt;/code&gt; argument passed to this method will have already cleaned to a filename valid for the storage system, according to the &lt;code&gt;get_valid_name()&lt;/code&gt; method described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857159f9c02780679d99663d94907b463c25e60e" translate="yes" xml:space="preserve">
          <source>Returns a float between 0 and 1 representing the location of the closest point on &lt;code&gt;linestring&lt;/code&gt; to the given &lt;code&gt;point&lt;/code&gt;, as a fraction of the 2D line length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a258e4c21e6ef2af20279c07a4065bce32e969" translate="yes" xml:space="preserve">
          <source>Returns a list of X coordinates in this line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e175d196a7e66e278922ce29598dac7931db1a" translate="yes" xml:space="preserve">
          <source>Returns a list of Y coordinates in this line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1e6a2cc1c1af4ad4a31ffa980d38613376aeb7" translate="yes" xml:space="preserve">
          <source>Returns a list of Z coordinates in this line, or &lt;code&gt;None&lt;/code&gt; if the line does not have Z coordinates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56223644cd798068ca471fd2c315cbde23994265" translate="yes" xml:space="preserve">
          <source>Returns a list of candidate template names. Returns the following list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119d70d2a171588503df48c7919bd1adbb991a2f" translate="yes" xml:space="preserve">
          <source>Returns a list of template names to search for when rendering the template. The first template that is found will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26bb10384f12f35f3b705479bb0386a3cbbc3ab" translate="yes" xml:space="preserve">
          <source>Returns a list of the data types of each of the fields in this layer. These are subclasses of &lt;code&gt;Field&lt;/code&gt;, discussed below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5879d26dba8768996ff7645a308246a599ed633a" translate="yes" xml:space="preserve">
          <source>Returns a list of the data with the requested key. Returns an empty list if the key doesn&amp;rsquo;t exist and a default value wasn&amp;rsquo;t provided. It&amp;rsquo;s guaranteed to return a list unless the default value provided isn&amp;rsquo;t a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ba15c409c80d6c894376c8a44efba29597c190" translate="yes" xml:space="preserve">
          <source>Returns a list of the help texts of all validators. These explain the password requirements to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad11638d25c9ac2f89675ea5a06e03fb1bafb32" translate="yes" xml:space="preserve">
          <source>Returns a list of the maximum field widths for each of the fields in this layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10f843d5c4e011c969576d19bc4b1be396422ad" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of each of the fields in this layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cb512571181d6769d2e4e5ed48db4787a52559" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of the fields of data associated with the feature. This will be the same for all features in a given layer and is equivalent to the &lt;a href=&quot;#django.contrib.gis.gdal.Layer.fields&quot;&gt;&lt;code&gt;Layer.fields&lt;/code&gt;&lt;/a&gt; property of the &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; object the feature came from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8582430a0a1248033b31e9e521008f57bf7b1f" translate="yes" xml:space="preserve">
          <source>Returns a list of the numeric precisions for each of the fields in this layer. This is meaningless (and set to zero) for non-numeric fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951bbd9b7a070fe99b09fb0b5bc7dd880763be79" translate="yes" xml:space="preserve">
          <source>Returns a list of values for the given key and removes them from the dictionary. Raises &lt;code&gt;KeyError&lt;/code&gt; if the key does not exist. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db017878b31d2e037c44b310c82b8025b04b79d" translate="yes" xml:space="preserve">
          <source>Returns a list of values, including nulls, concatenated into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20566895d7471cb29e4d202ac237fbe81d55822" translate="yes" xml:space="preserve">
          <source>Returns a naive &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; that represents in &lt;code&gt;timezone&lt;/code&gt; the same point in time as &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; being an aware &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;timezone&lt;/code&gt; is set to &lt;code&gt;None&lt;/code&gt;, it defaults to the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed41725474c9d4f552a3900cf7da9c23f9323db" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; clone of this geometry object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a581587164d4279d7004ca2787364375e5349c5" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt;, simplified to the specified tolerance using the Douglas-Peucker algorithm. A higher tolerance value implies fewer points in the output. If no tolerance is provided, it defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8da7a67faf7ef315dcc5f8b4bf973eff334ba2" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; containing objects that do &lt;em&gt;not&lt;/em&gt; match the given lookup parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7789cd5cbb6078f25e6c9a3612e5f6343dcba15" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; containing objects that match the given lookup parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa99adacb0d41428634dea433256a98842e9c3d" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;QuerySet&lt;/code&gt; containing objects that do &lt;em&gt;not&lt;/em&gt; match the given lookup parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00321ba0f6daa83dabe588c63c2406a69c398423" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;QuerySet&lt;/code&gt; containing objects that match the given lookup parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c0a97898b6257a5e9e336b2d60dc2487ec6a96" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;QuerySet&lt;/code&gt; that uses &lt;code&gt;SELECT DISTINCT&lt;/code&gt; in its SQL query. This eliminates duplicate rows from the query results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e9458c5a28491035c21cb05349e3b5ab3036c2" translate="yes" xml:space="preserve">
          <source>Returns a new instance of the session model object, which represents the current session state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578f01621e6aefb6cf0e65053d630049c65ba605" translate="yes" xml:space="preserve">
          <source>Returns a plural suffix if the value is not &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;'1'&lt;/code&gt;, or an object of length 1. By default, this suffix is &lt;code&gt;'s'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125cea7761b8e6dafa29f4c752aa7313843bd1b1" translate="yes" xml:space="preserve">
          <source>Returns a polygon object from the given bounding-box, a 4-tuple comprising &lt;code&gt;(xmin, ymin, xmax, ymax)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d596a115cdf66b3de3ebe61472b4126f78dc647" translate="yes" xml:space="preserve">
          <source>Returns a positive integer corresponding to the 1-indexed position of the first occurrence of &lt;code&gt;substring&lt;/code&gt; inside &lt;code&gt;string&lt;/code&gt;, or 0 if &lt;code&gt;substring&lt;/code&gt; is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10d154c3340fc75c1907cacc8460599f45d4d2d" translate="yes" xml:space="preserve">
          <source>Returns a queryset that will lock rows until the end of the transaction, generating a &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; SQL statement on supported databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bb4298d1367a02cf737287b1b8c10604349b89" translate="yes" xml:space="preserve">
          <source>Returns a queryset, filtered using the query arguments defined by &lt;code&gt;lookup&lt;/code&gt;. Enforces any restrictions on the queryset, such as &lt;code&gt;allow_empty&lt;/code&gt; and &lt;code&gt;allow_future&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10089f19ad05b4b2e2d651f5ae34369af4a2e6e" translate="yes" xml:space="preserve">
          <source>Returns a random item from the given list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d90d423da575e32004777b930b4fa9f02952e81" translate="yes" xml:space="preserve">
          <source>Returns a random password with the given length and given string of allowed characters. Note that the default value of &lt;code&gt;allowed_chars&lt;/code&gt; doesn&amp;rsquo;t contain letters that can cause user confusion, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbc243ff52bcf4da179c9b252f5f25b58e9fe51" translate="yes" xml:space="preserve">
          <source>Returns a session store class to be used with this session model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facd1a082e348b8ea36c12ec1c0620141478bb92" translate="yes" xml:space="preserve">
          <source>Returns a set of permission strings that the user has directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34be4c1f09e00ed4856e9f39ce9b5fdca1563a79" translate="yes" xml:space="preserve">
          <source>Returns a set of permission strings that the user has, both through group and user permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28806210d9cd45956e8b9f8f41709521c5a25f77" translate="yes" xml:space="preserve">
          <source>Returns a set of permission strings that the user has, through their groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db05f18ae5ef85352e20be0908d5c70cf154912" translate="yes" xml:space="preserve">
          <source>Returns a set of validator objects based on the &lt;code&gt;validator_config&lt;/code&gt; parameter. By default, all functions use the validators defined in &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt;&lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt;&lt;/a&gt;, but by calling this function with an alternate set of validators and then passing the result into the &lt;code&gt;password_validators&lt;/code&gt; parameter of the other functions, your custom set of validators will be used instead. This is useful when you have a typical set of validators to use for most scenarios, but also have a special situation that requires a custom set. If you always use the same set of validators, there is no need to use this function, as the configuration from &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt;&lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt;&lt;/a&gt; is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efd0876d618e6c7904ab3dd4d4a90ffc2a132a2" translate="yes" xml:space="preserve">
          <source>Returns a short-hand string form of the OGR Geometry type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de731a943a4907b0861948164e9be388e644eb2" translate="yes" xml:space="preserve">
          <source>Returns a signer which uses &lt;code&gt;key&lt;/code&gt; to generate signatures and &lt;code&gt;sep&lt;/code&gt; to separate values. &lt;code&gt;sep&lt;/code&gt; cannot be in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;URL safe base64 alphabet&lt;/a&gt;. This alphabet contains alphanumeric characters, hyphens, and underscores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c38da73dacd691e017e07bf282c725563a4829" translate="yes" xml:space="preserve">
          <source>Returns a slice of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42f7b479bd2f0196f17d358a6f3673817871294" translate="yes" xml:space="preserve">
          <source>Returns a string (or iterable of strings) that defines the ordering that will be applied to the &lt;code&gt;queryset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b750f4404d8b86d9307887e470819b523d2ec40" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the type of geometry. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bbbe395d7204baa9f860616a5ccd3e2254d314" translate="yes" xml:space="preserve">
          <source>Returns a string describing the reason why a geometry is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8ef9cb19fc81dee4285bbcc2acf8c787ba4287" translate="yes" xml:space="preserve">
          <source>Returns a string naming this field for backend specific purposes. By default, it returns the class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fefc8ba6777aa7bc4f1abe0c83867131758244" translate="yes" xml:space="preserve">
          <source>Returns a string of HTML for representing this as an &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c2082de2bdd357e3bfed56087205084c458c02" translate="yes" xml:space="preserve">
          <source>Returns a string of the &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s execution plan, which details how the database would execute the query, including any indexes or joins that would be used. Knowing these details may help you improve the performance of slow queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f2816c96c383f596afb68918a23786be43a78d" translate="yes" xml:space="preserve">
          <source>Returns a string of the data in query string format. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2962152d3409b32c48b607aa97f08b3872f4951a" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this geometry in GML format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5b55e6a8b9414ade0873ed203a9509c1188a89" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this geometry in HEX WKB format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5aa6bf54c138e6327bd2407050b15be33b682c" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this geometry in JSON format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb4a9eb3c2e2f36a39835333d4297764001b1da" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this geometry in KML format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e202624eaafca3420d6f4a9bb76c0a9e9c73d6e" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this geometry in WKT format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fa07a1e5afd55f5934bf4a78af14ce9959d9cb" translate="yes" xml:space="preserve">
          <source>Returns a string with a summary of the raster. This is equivalent to the &lt;a href=&quot;https://gdal.org/programs/gdalinfo.html&quot;&gt;gdalinfo&lt;/a&gt; command line utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ec844f630687e09a96339d1dece708a7787e24" translate="yes" xml:space="preserve">
          <source>Returns a string with the name of the data type of this field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb892f8117998203d8b3506775dca3f1ec68451c" translate="yes" xml:space="preserve">
          <source>Returns a substring of length &lt;code&gt;length&lt;/code&gt; from the field or expression starting at position &lt;code&gt;pos&lt;/code&gt;. The position is 1-indexed, so the position must be greater than 0. If &lt;code&gt;length&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, then the rest of the string will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d4163c5211fb8c7d10b1347fea3bc32856f1c3" translate="yes" xml:space="preserve">
          <source>Returns a transformed version of this raster with the specified SRID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbc44f7064a95ad07e69becb4b1a3905c2abf75" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;(lhs_string, lhs_params)&lt;/code&gt;, as returned by &lt;code&gt;compiler.compile(lhs)&lt;/code&gt;. This method can be overridden to tune how the &lt;code&gt;lhs&lt;/code&gt; is processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94030703c003d2c1537306db8159c2df602e510" translate="yes" xml:space="preserve">
          <source>Returns a tuple of &lt;code&gt;(object, created)&lt;/code&gt;, where &lt;code&gt;object&lt;/code&gt; is the created or updated object and &lt;code&gt;created&lt;/code&gt; is a boolean specifying whether a new object was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca38a01f14029e45c7f8401831f176d15428776" translate="yes" xml:space="preserve">
          <source>Returns a tuple of &lt;code&gt;(object, created)&lt;/code&gt;, where &lt;code&gt;object&lt;/code&gt; is the retrieved or created object and &lt;code&gt;created&lt;/code&gt; is a boolean specifying whether a new object was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780f0cb85f8cedad9f6b4a14fb0d755a99da07a9" translate="yes" xml:space="preserve">
          <source>Returns a tuple of fields associated with a model. &lt;code&gt;get_fields()&lt;/code&gt; accepts two parameters that can be used to control which fields are returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcca0d36e78427a1a8e583c61a08c5060b48237" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the ellipsoid parameters for this spatial reference: (semimajor axis, semiminor axis, and inverse flattening).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3127a1aef39410ad8a3e78ea900b236b99fca61" translate="yes" xml:space="preserve">
          <source>Returns a version 4 UUID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4523c55cf910b4738526900cfcaeb460aa6b6c49" translate="yes" xml:space="preserve">
          <source>Returns a warped version of this raster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9341444392fa7353460ced9114f6d21642261414" translate="yes" xml:space="preserve">
          <source>Returns all active users who have the permission &lt;code&gt;perm&lt;/code&gt; either in the form of &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; or a &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; instance. Returns an empty queryset if no users who have the &lt;code&gt;perm&lt;/code&gt; found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26711288b33dce096a7ea5a16be073e10edf6a39" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; for the application with the given &lt;code&gt;app_label&lt;/code&gt;. Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if no such application exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1442cd39e7dcfed4dcf9d32b5957a1b3553df4c" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt; to the appropriate URL for the arguments passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2123437bc83b179cf6bdacdf60074b71209ee9" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;gdal#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object corresponding to the GEOS geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08b2523e6c1ade1fdf70f9ff4718a4436e92013" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;InlineFormSet&lt;/code&gt; using &lt;a href=&quot;#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; with defaults of &lt;code&gt;formset=&lt;/code&gt;&lt;a href=&quot;../../topics/forms/modelforms#django.forms.models.BaseInlineFormSet&quot;&gt;&lt;code&gt;BaseInlineFormSet&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;can_delete=True&lt;/code&gt;, and &lt;code&gt;extra=3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbeaca57501eba33db07bd7a59a7d096be9dbfa6" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;int&lt;/code&gt; of the bitwise &lt;code&gt;AND&lt;/code&gt; of all non-null input values, or &lt;code&gt;None&lt;/code&gt; if all values are null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0201e940e8e89cfc2d3975bad6c82be4d3325192" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;int&lt;/code&gt; of the bitwise &lt;code&gt;OR&lt;/code&gt; of all non-null input values, or &lt;code&gt;None&lt;/code&gt; if all values are null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82806588a5bf06fd30c99ce332c69ade763eba27" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;int&lt;/code&gt; of the number of input rows in which both expressions are not null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9671ed41c7c884901fd49edd9bf34d224f9752f4" translate="yes" xml:space="preserve">
          <source>Returns an ASCII string containing the encoded result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b533d61f3b1b507fd4b33624ab048627e6012d10" translate="yes" xml:space="preserve">
          <source>Returns an HMAC of the password field. Used for &lt;a href=&quot;default#session-invalidation-on-password-change&quot;&gt;Session invalidation on password change&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de5b6f24485c8a7ba44c96cbd1fa4f05b7457f9" translate="yes" xml:space="preserve">
          <source>Returns an HTML string with all help texts in an &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;. This is helpful when adding password validation to forms, as you can pass the output directly to the &lt;code&gt;help_text&lt;/code&gt; parameter of a form field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abc05f9aafbd6c0b0a25d5be32628197eeb3f56" translate="yes" xml:space="preserve">
          <source>Returns an absolute path reference (a URL without the domain name) matching a given view and optional parameters. Any special characters in the resulting path will be encoded using &lt;a href=&quot;../utils#django.utils.encoding.iri_to_uri&quot;&gt;&lt;code&gt;iri_to_uri()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b7ab9439e18c1e67a006c7191972bb4f8eae05" translate="yes" xml:space="preserve">
          <source>Returns an alternative filename based on the &lt;code&gt;file_root&lt;/code&gt; and &lt;code&gt;file_ext&lt;/code&gt; parameters, an underscore plus a random 7 character alphanumeric string is appended to the filename before the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8aa7d022aef7b52831cdd1a74bfda4fafa2b94d" translate="yes" xml:space="preserve">
          <source>Returns an alternative filename based on the &lt;code&gt;file_root&lt;/code&gt; and &lt;code&gt;file_ext&lt;/code&gt; parameters. By default, an underscore plus a random 7 character alphanumeric string is appended to the filename before the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c39fa14a924b140d3fb29b7f5d1d0595a375c0" translate="yes" xml:space="preserve">
          <source>Returns an aware &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; that represents the same point in time as &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;timezone&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; being a naive &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;timezone&lt;/code&gt; is set to &lt;code&gt;None&lt;/code&gt;, it defaults to the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4739de2943dfab26633018bed2f07e55ec8b4a5" translate="yes" xml:space="preserve">
          <source>Returns an element for inclusion in &lt;code&gt;urlpatterns&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1077a28bee1c67f62237f23a70f4a92147fcc68e" translate="yes" xml:space="preserve">
          <source>Returns an empty set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5987afa60b06ea6420c32483bc9463d297e060d" translate="yes" xml:space="preserve">
          <source>Returns an instance of &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; if the authentication backend stored in the session is no longer in &lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;, if a user isn&amp;rsquo;t returned by the backend&amp;rsquo;s &lt;code&gt;get_user()&lt;/code&gt; method, or if the session auth hash doesn&amp;rsquo;t validate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e95f45bd41ad31a4c59d2cc5b6fb4dda0634b7" translate="yes" xml:space="preserve">
          <source>Returns an instance of the paginator to use for this view. By default, instantiates an instance of &lt;a href=&quot;#django.contrib.admin.ModelAdmin.paginator&quot;&gt;&lt;code&gt;paginator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86aee8758a9f6889dc8cd97e20e6af8ff9d7415" translate="yes" xml:space="preserve">
          <source>Returns an instance of the paginator to use for this view. By default, instantiates an instance of &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginator_class&quot;&gt;&lt;code&gt;paginator_class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484a79d278057cdc55fefbb378107608c37aab5e" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of objects in the database matching the &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57aa1a632012e7418a71062ae2d35401107be1de" translate="yes" xml:space="preserve">
          <source>Returns an iterable of &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53fd8c227389f5e39789ea076beb3c2bb32c78c" translate="yes" xml:space="preserve">
          <source>Returns an iterable of &lt;a href=&quot;models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; classes for this application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67635f5b95e8cf8d26b7fa1e8878c5f61d75cdcc" translate="yes" xml:space="preserve">
          <source>Returns an iterable of permission names used by the mixin. Defaults to the &lt;code&gt;permission_required&lt;/code&gt; attribute, converted to a tuple if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ea890da3cfb507c5809ec96542f171a8a1f52e" translate="yes" xml:space="preserve">
          <source>Returns an ordered list of inner expressions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd1d512eeb48b1e756b1429c5aa109e3b73158d" translate="yes" xml:space="preserve">
          <source>Returns context data for displaying the list of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b077625ccb14016a1e57993e616c9c3ae03859b0" translate="yes" xml:space="preserve">
          <source>Returns context data for displaying the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f852c728caf618c3c29b679cfddf134725eba826" translate="yes" xml:space="preserve">
          <source>Returns decoded session data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c177a7d37dbc918fa47cc3450f5081d921173ae" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, depending on whether the user&amp;rsquo;s browser accepted the test cookie. Due to the way cookies work, you&amp;rsquo;ll have to call &lt;code&gt;set_test_cookie()&lt;/code&gt; on a previous, separate page request. See &lt;a href=&quot;#setting-test-cookies&quot;&gt;Setting test cookies&lt;/a&gt; below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca0b371845d8c155076aaef5269c202fb38b1ab" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, depending on whether the user&amp;rsquo;s session cookie will expire when the user&amp;rsquo;s Web browser is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b2ca75521064e55f8052b92cf30830fa363c30" translate="yes" xml:space="preserve">
          <source>Returns models where the distance to the geometry field from the lookup geometry are within the given distance from one another. Note that you can only provide &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; objects if the targeted geometries are in a projected system. For geographic geometries, you should use units of the geometry field (e.g. degrees for &lt;code&gt;WGS84&lt;/code&gt;) .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249bf682d0e80773dcdf285e7d086a7fa69b3921" translate="yes" xml:space="preserve">
          <source>Returns models where the distance to the geometry field from the lookup geometry is greater than or equal to the given distance value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccef8be2506bf5d92d053eb1ce672dc52b0d7e8a" translate="yes" xml:space="preserve">
          <source>Returns models where the distance to the geometry field from the lookup geometry is greater than the given distance value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e3d126f91b46ece075be9435a763a5c20771cc" translate="yes" xml:space="preserve">
          <source>Returns models where the distance to the geometry field from the lookup geometry is less than or equal to the given distance value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9d0207c12bda82b23ebce88ce54e77c7c9e12b" translate="yes" xml:space="preserve">
          <source>Returns models where the distance to the geometry field from the lookup geometry is less than the given distance value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76695c5eae614190d1b4d20e90e0ef79099e651f" translate="yes" xml:space="preserve">
          <source>Returns objects where all of the given keys are in the data. Uses the SQL operator &lt;code&gt;?&amp;amp;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66570d611e4be371fd6814f4a368f7d31b620e8d" translate="yes" xml:space="preserve">
          <source>Returns objects where any of the given keys are in the data. Uses the SQL operator &lt;code&gt;?|&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1b7c9668cf3953eb698c949256a961024a52e2" translate="yes" xml:space="preserve">
          <source>Returns objects where the array of keys is the given value. Note that the order is not guaranteed to be reliable, so this transform is mainly useful for using in conjunction with lookups on &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt;. Uses the SQL function &lt;code&gt;akeys()&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bff6feacc7dc56c13d51775eca0037162526cec" translate="yes" xml:space="preserve">
          <source>Returns objects where the array of values is the given value. Note that the order is not guaranteed to be reliable, so this transform is mainly useful for using in conjunction with lookups on &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt;. Uses the SQL function &lt;code&gt;avalues()&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3297f3971f57390b158fef1e04ca19f9a9b5923a" translate="yes" xml:space="preserve">
          <source>Returns objects where the data shares any results with the values passed. Uses the SQL operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa2b90c96f3d2f4ec486d82a9efcb4da156beff" translate="yes" xml:space="preserve">
          <source>Returns objects where the given key is in the data. Uses the SQL operator &lt;code&gt;?&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7914548716e5b97195b0fd184fe8766271bd20" translate="yes" xml:space="preserve">
          <source>Returns or sets the coordinate dimension of this geometry. For example, the value would be 2 for two-dimensional geometries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e220dfbb1f2a0cff731f9431aca08b80e1d422f" translate="yes" xml:space="preserve">
          <source>Returns or sets the spatial reference identifier corresponding to &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; of this geometry. Returns &lt;code&gt;None&lt;/code&gt; if there is no spatial reference information associated with this geometry, or if an SRID cannot be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2f630a54f3766e1a0f2b1e3f6f36f9cd687818" translate="yes" xml:space="preserve">
          <source>Returns selected language&amp;rsquo;s BiDi layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e968604713174929ac2a0b379b974bb360ac42c6" translate="yes" xml:space="preserve">
          <source>Returns the &amp;ldquo;extended&amp;rdquo; Well-Known Text of the geometry. This representation is specific to PostGIS and is a superset of the OGC WKT standard. &lt;a href=&quot;#fnogc&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; Essentially the SRID is prepended to the WKT representation, for example &lt;code&gt;SRID=4326;POINT(5 23)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42ec45f40f54f7d25142d0b9f0e9a4bd44ee1eb" translate="yes" xml:space="preserve">
          <source>Returns the &amp;lsquo;pretty&amp;rsquo; representation of the WKT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1d02f2671ae4243c39a6c480bdb63b771cf82e" translate="yes" xml:space="preserve">
          <source>Returns the 1-based index of the first object on the page, relative to all of the objects in the paginator&amp;rsquo;s list. For example, when paginating a list of 5 objects with 2 objects per page, the second page&amp;rsquo;s &lt;a href=&quot;#django.core.paginator.Page.start_index&quot;&gt;&lt;code&gt;start_index()&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c4eb8d0798f692ec2d9d57aeaed8d4ce3206d8" translate="yes" xml:space="preserve">
          <source>Returns the 1-based index of the last object on the page, relative to all of the objects in the paginator&amp;rsquo;s list. For example, when paginating a list of 5 objects with 2 objects per page, the second page&amp;rsquo;s &lt;a href=&quot;#django.core.paginator.Page.end_index&quot;&gt;&lt;code&gt;end_index()&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b54e3d4ea0a4b4affbf369f9d56917f2b44657" translate="yes" xml:space="preserve">
          <source>Returns the 3D extent of all &lt;code&gt;geo_field&lt;/code&gt; in the &lt;code&gt;QuerySet&lt;/code&gt; as a six-tuple, comprising the lower left coordinate and upper right coordinate (each with x, y, and z coordinates).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce572abb523020039d52b076188eafb5844987c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#django.contrib.auth.models.User.first_name&quot;&gt;&lt;code&gt;first_name&lt;/code&gt;&lt;/a&gt; plus the &lt;a href=&quot;#django.contrib.auth.models.User.last_name&quot;&gt;&lt;code&gt;last_name&lt;/code&gt;&lt;/a&gt;, with a space in between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b03b30f2d905320529f6bf24133ca7208e67c3c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#django.contrib.auth.models.User.first_name&quot;&gt;&lt;code&gt;first_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5eede1e475881a96929982dc7d57a78e6d2b58a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instance uniquely identified by the given application label and model name. The primary purpose of this method is to allow &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; objects to be referenced via a &lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;natural key&lt;/a&gt; during deserialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0439279247a34f8fb888387bf5bbe4147d4270" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#django.db.models.Lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;lookup_name&lt;/code&gt; registered in the class. The default implementation looks recursively on all parent classes and checks if any has a registered lookup named &lt;code&gt;lookup_name&lt;/code&gt;, returning the first match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df13d94f4dee223bc5b3bece5e5b96a53100ca91" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the day. Returns &lt;a href=&quot;#django.views.generic.dates.DayMixin.day_format&quot;&gt;&lt;code&gt;day_format&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b482b0acedecd13442b509ea3eabda7f724140d" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the month. Returns &lt;a href=&quot;#django.views.generic.dates.MonthMixin.month_format&quot;&gt;&lt;code&gt;month_format&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4c088a35d433d05fd52cb404045bb6b8b5bcfa" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the week. Returns &lt;a href=&quot;#django.views.generic.dates.WeekMixin.week_format&quot;&gt;&lt;code&gt;week_format&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0a8673e39f293ed3f6cdff66390e286ceceae7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the year. Returns &lt;a href=&quot;#django.views.generic.dates.YearMixin.year_format&quot;&gt;&lt;code&gt;year_format&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc33f4b4738bdec8239002dcdc914bd220e2ee43" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; with the given &lt;code&gt;app_label&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;. As a shortcut, this method also accepts a single argument in the form &lt;code&gt;app_label.model_name&lt;/code&gt;. &lt;code&gt;model_name&lt;/code&gt; is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b877fe626b5bd0f35c1bab5695ae1bd265ca0c0b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; with the given &lt;code&gt;model_name&lt;/code&gt;. &lt;code&gt;model_name&lt;/code&gt; is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866813d6c0b9f5b32b3e55e0d370bdbb90d66b2a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Changelist&lt;/code&gt; class to be used for listing. By default, &lt;code&gt;django.contrib.admin.views.main.ChangeList&lt;/code&gt; is used. By inheriting this class you can change the behavior of the listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f593ad90a24942b9083bd0d79f2d8176d6caaa7a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;path&lt;/code&gt;, plus an appended query string, if applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009b216c8b2ed036c248abe7223495dbc41af4c9" translate="yes" xml:space="preserve">
          <source>Returns the DE-9IM intersection matrix (a string) representing the topological relationship between this geometry and the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c52d0deed1bf36d8e926bf135126b72ab66390c" translate="yes" xml:space="preserve">
          <source>Returns the Django field type (a subclass of GeometryField) to use for storing this OGR type, or &lt;code&gt;None&lt;/code&gt; if there is no appropriate Django type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c58c027fae9d2cee062f9a79594b9ab35d78dd" translate="yes" xml:space="preserve">
          <source>Returns the Django version, which should be correct for all built-in Django commands. User-supplied commands can override this method to return their own version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec7b1b2dacc515b2b828f84132000cff249851e" translate="yes" xml:space="preserve">
          <source>Returns the EWKB of this Geometry in hexadecimal form. This is an extension of the WKB specification that includes the SRID value that are a part of this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab17c15c8e4858d489652183648f1dc07655071e" translate="yes" xml:space="preserve">
          <source>Returns the EWKT representation of this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea058273e4f0e3d57c2a5d60618e0692e39e681c" translate="yes" xml:space="preserve">
          <source>Returns the GEOS geometry type identification number. The following table shows the value for each geometry type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79441a52359661ed87095ab1911334e768cb6adb" translate="yes" xml:space="preserve">
          <source>Returns the GeoJSON representation of the geometry. Note that the result is not a complete GeoJSON structure but only the &lt;code&gt;geometry&lt;/code&gt; key content of a GeoJSON structure. See also &lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361b8e2d5de4554510fa35b478d41e26b2725d55" translate="yes" xml:space="preserve">
          <source>Returns the HTML ID attribute of this widget for use by a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, given the ID of the field. Returns &lt;code&gt;None&lt;/code&gt; if an ID isn&amp;rsquo;t available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092e8422d0ba67d10ded138091c04d03f2df128e" translate="yes" xml:space="preserve">
          <source>Returns the ISO-8601 week-numbering year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af4db7762a0120ec3841c626375c4169aea468e" translate="yes" xml:space="preserve">
          <source>Returns the OGR type of this field, as an integer. The &lt;code&gt;FIELD_CLASSES&lt;/code&gt; dictionary maps these values onto subclasses of &lt;code&gt;Field&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35848163f13828897559d781274dcdea61eaed6f" translate="yes" xml:space="preserve">
          <source>Returns the PROJ.4 representation for this spatial reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af24187f8dd47300572284f1c6c621426a68a185" translate="yes" xml:space="preserve">
          <source>Returns the SRID of top-level authority, or &lt;code&gt;None&lt;/code&gt; if undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e64a2cd8caf4991a4ec6ac285813493be99eaa" translate="yes" xml:space="preserve">
          <source>Returns the URL that users who don&amp;rsquo;t pass the test will be redirected to. Returns &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.login_url&quot;&gt;&lt;code&gt;login_url&lt;/code&gt;&lt;/a&gt; if set, or &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35410260c055bbc4f42f172ca8a64cd26f30e32" translate="yes" xml:space="preserve">
          <source>Returns the URL where the contents of the file referenced by &lt;code&gt;name&lt;/code&gt; can be accessed. For storage systems that don&amp;rsquo;t support access by URL this will raise &lt;code&gt;NotImplementedError&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4074015db7a04da836345e91c2189176d83573fa" translate="yes" xml:space="preserve">
          <source>Returns the WKB (Well-Known Binary) representation of this Geometry as a Python buffer. SRID value is not included, use the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.ewkb&quot;&gt;&lt;code&gt;GEOSGeometry.ewkb&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2338f57d9faaa76bf32883b06a919e8130cf97" translate="yes" xml:space="preserve">
          <source>Returns the WKB of the given geometry as a Python &lt;code&gt;buffer&lt;/code&gt; object. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5378b0f407acefae7e544b85b9f5c216a6abd319" translate="yes" xml:space="preserve">
          <source>Returns the WKB of this Geometry in hexadecimal form. Please note that the SRID value is not included in this representation because it is not a part of the OGC specification (use the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.hexewkb&quot;&gt;&lt;code&gt;GEOSGeometry.hexewkb&lt;/code&gt;&lt;/a&gt; property instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2532626c815c0f6a3bb53c3241cb219521aa9656" translate="yes" xml:space="preserve">
          <source>Returns the WKT of the given geometry. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e08b8fdb8ab639b5da69bc7c039139187b56bc9" translate="yes" xml:space="preserve">
          <source>Returns the WKT representation of this spatial reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c06c572d3bb294430f75a431cbc33a222223091" translate="yes" xml:space="preserve">
          <source>Returns the Well-Known Text of the geometry (an OGC standard).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c155db5c0f7d74ef69f2faaa188904006205f4" translate="yes" xml:space="preserve">
          <source>Returns the X coordinate of this point:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8a3e8028da9d2d118d6b174c93e653d744a3f8" translate="yes" xml:space="preserve">
          <source>Returns the XML representation of this spatial reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc8a377a177a0c6fe63a687d628e57fda58a3cb" translate="yes" xml:space="preserve">
          <source>Returns the Y coordinate of this point:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ff52a4e53913f841e49d8cbfcc02e592cf9531" translate="yes" xml:space="preserve">
          <source>Returns the Z coordinate of this point, or &lt;code&gt;None&lt;/code&gt; if the point does not have a Z coordinate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099774ce984fb5a3d47ba371217c623ae72c2965" translate="yes" xml:space="preserve">
          <source>Returns the absolute URI form of &lt;code&gt;location&lt;/code&gt;. If no location is provided, the location will be set to &lt;code&gt;request.get_full_path()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3844f4ec17e21b49bfc1cd65e88b5c2ef94a855" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099ce668e8752eb9bf603e53a5052aa5b753955c" translate="yes" xml:space="preserve">
          <source>Returns the age of session cookies, in seconds. Defaults to &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fd9151b1bc283cb3cb3169468ddc8226c67d53" translate="yes" xml:space="preserve">
          <source>Returns the aggregation period for &lt;code&gt;date_list&lt;/code&gt;. Returns &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.date_list_period&quot;&gt;&lt;code&gt;date_list_period&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648a42a884921582f6bbddfe26cca91312d3713a" translate="yes" xml:space="preserve">
          <source>Returns the arccosine of a numeric field or expression. The expression value must be within the range -1 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f60af06b64d363c90c2ccb08c0e4e4e90afc9aa" translate="yes" xml:space="preserve">
          <source>Returns the arcsine of a numeric field or expression. The expression value must be in the range -1 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e5298ad13903ab3fdfe9ee06ade7ae055ef531" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of &lt;code&gt;expression1 / expression2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1a700c640e2f1d4e62619aed74f67418a62050" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcb6dd117b4ab2ef332761f98328f36e2570c10" translate="yes" xml:space="preserve">
          <source>Returns the area of this geometry, or 0 for geometries that do not contain an area:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e04b7c0e11ba2ac99468f8b06da4712f8a7566f" translate="yes" xml:space="preserve">
          <source>Returns the area unit attribute name for the given full unit name. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3824b9f08475d00ae1a0f9d4c63829c418020bfd" translate="yes" xml:space="preserve">
          <source>Returns the area value in units corresponding to the given unit attribute. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2ee8073cba6b7cbcdc46f23055d634b07bca5b" translate="yes" xml:space="preserve">
          <source>Returns the authority code for the given string target node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6942312fd017c1219f5876a275ffbd8ece7aa2" translate="yes" xml:space="preserve">
          <source>Returns the authority name for the given string target node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be643abb20a55f74724fdc9501e4e86dc877a46" translate="yes" xml:space="preserve">
          <source>Returns the average of the dependent variable (&lt;code&gt;sum(y)/N&lt;/code&gt;) as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e195c1f455bbf31ec189c0634689fe54e12bd74" translate="yes" xml:space="preserve">
          <source>Returns the average of the independent variable (&lt;code&gt;sum(x)/N&lt;/code&gt;) as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aee8231706a2acbe7f5e913acb8ba02edfd638e" translate="yes" xml:space="preserve">
          <source>Returns the azimuth in radians of the segment defined by the given point geometries, or &lt;code&gt;None&lt;/code&gt; if the two points are coincident. The azimuth is angle referenced from north and is positive clockwise: north = &lt;code&gt;0&lt;/code&gt;; east = &lt;code&gt;&amp;pi;/2&lt;/code&gt;; south = &lt;code&gt;&amp;pi;&lt;/code&gt;; west = &lt;code&gt;3&amp;pi;/2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e8df668ac2bf6b5f005799c160e05546678a8b" translate="yes" xml:space="preserve">
          <source>Returns the backend-dependent template object instance to be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d080ca53e0fc179054908df2e40a7156f47dc38d" translate="yes" xml:space="preserve">
          <source>Returns the boundary as a newly allocated Geometry object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef7a58f91f4b235364c15e3279aae35fb2c9f93" translate="yes" xml:space="preserve">
          <source>Returns the contents for a template given a &lt;a href=&quot;#django.template.base.Origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71a65e2e0a22916e397f30fc150f5b20f760c25" translate="yes" xml:space="preserve">
          <source>Returns the coordinates of a point geometry as a tuple, the coordinates of a line geometry as a tuple of tuples, and so forth:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd50be341c5342fd75fc6d5d44ae9e630b47684" translate="yes" xml:space="preserve">
          <source>Returns the coordinates of the geometry as a tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f1175c1fd2a51ff71728d9d964cb9427b65c24" translate="yes" xml:space="preserve">
          <source>Returns the correlation coefficient as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b146a820f10adeb6fccaf6d8fa9ab400e14ed31" translate="yes" xml:space="preserve">
          <source>Returns the cosine of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d764d6e42a3af09883eae11fe03add243a07de3c" translate="yes" xml:space="preserve">
          <source>Returns the cotangent of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a59590ffaac34eef4f964f6d17f558e48e16c2d" translate="yes" xml:space="preserve">
          <source>Returns the country code corresponding to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d75aacefe0685b3d673dbcf766b574fea4985b1" translate="yes" xml:space="preserve">
          <source>Returns the country name corresponding to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffea210940ce7791e527f26e2842fb52aeaa9a01" translate="yes" xml:space="preserve">
          <source>Returns the currently selected language code. Returns &lt;code&gt;None&lt;/code&gt; if translations are temporarily deactivated (by &lt;a href=&quot;#django.utils.translation.deactivate_all&quot;&gt;&lt;code&gt;deactivate_all()&lt;/code&gt;&lt;/a&gt; or when &lt;code&gt;None&lt;/code&gt; is passed to &lt;a href=&quot;#django.utils.translation.override&quot;&gt;&lt;code&gt;override()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6dfee090f829c1f23dfdd0fd2fb59463a930a7" translate="yes" xml:space="preserve">
          <source>Returns the database column data type for fields such as &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;OneToOneField&lt;/code&gt; that point to the &lt;a href=&quot;#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;, taking into account the &lt;code&gt;connection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c312a970103a20366f4bd941f31155ce85af1821" translate="yes" xml:space="preserve">
          <source>Returns the database column data type for the &lt;a href=&quot;#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;, taking into account the &lt;code&gt;connection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8130cece3d8c0fce55f9fb04d590c601c8a3feff" translate="yes" xml:space="preserve">
          <source>Returns the database server&amp;rsquo;s current date and time when the query is executed, typically using the SQL &lt;code&gt;CURRENT_TIMESTAMP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7833ebb38e169e8f6ce59f22a566265401abf7a" translate="yes" xml:space="preserve">
          <source>Returns the date and time on the database server that the current transaction started. If you are not in a transaction it will return the date and time of the current statement. This is a complement to &lt;a href=&quot;../../models/database-functions#django.db.models.functions.Now&quot;&gt;&lt;code&gt;django.db.models.functions.Now&lt;/code&gt;&lt;/a&gt;, which returns the date and time of the current statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051ebb7c3b91baee6d3ec244715ab5ffc1a31e48" translate="yes" xml:space="preserve">
          <source>Returns the date this session will expire. For sessions with no custom expiration (or those set to expire at browser close), this will equal the date &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt; seconds from now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be342af22171feccc9bf44a44c5b9eace3dd018c" translate="yes" xml:space="preserve">
          <source>Returns the day for which this view will display data, as a string. Tries the following sources, in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bb2ae9cffe5354c70dfcff65e5d0fff12cb3ff" translate="yes" xml:space="preserve">
          <source>Returns the default &lt;a href=&quot;../forms/fields#django.forms.Field&quot;&gt;&lt;code&gt;django.forms.Field&lt;/code&gt;&lt;/a&gt; of this field for &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f559cd5512ec72f488ee82c31cf84b0cbbd5a2" translate="yes" xml:space="preserve">
          <source>Returns the dimension of the geometry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407055de6ddc52dc0faf5cc23100d3bf21ef378d" translate="yes" xml:space="preserve">
          <source>Returns the distance (float) from the origin of the geometry (&lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.gis.geos.MultiLineString&quot;&gt;&lt;code&gt;MultiLineString&lt;/code&gt;&lt;/a&gt;) to the point projected on the geometry (that is to a point of the line the closest to the given point). The normalized version returns the distance as a float between 0 (origin) and 1 (endpoint).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af823424b63aa98088fa3ad5cd5f76f96e1e528a" translate="yes" xml:space="preserve">
          <source>Returns the distance between the closest points on this geometry and the given &lt;code&gt;geom&lt;/code&gt; (another &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e78849edd37aeef12ab185c2c4ae58e72c9a77" translate="yes" xml:space="preserve">
          <source>Returns the distance unit attribute name for the given full unit name. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b190cb096cf3f3325d9332267565d3ad76ff75e" translate="yes" xml:space="preserve">
          <source>Returns the distance value in units corresponding to the given unit attribute. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7daf0a35cab2d3f1e60d8402b18aa9ceae2c17c" translate="yes" xml:space="preserve">
          <source>Returns the envelope of this geometry as a 4-tuple, instead of as an &lt;a href=&quot;#django.contrib.gis.gdal.Envelope&quot;&gt;&lt;code&gt;Envelope&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5d0a1caad37371e0830aba209281eef3ae6584" translate="yes" xml:space="preserve">
          <source>Returns the envelope of this geometry, as an &lt;a href=&quot;#django.contrib.gis.gdal.Envelope&quot;&gt;&lt;code&gt;Envelope&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ff3886923a8814d776c997842dcd50076d9806" translate="yes" xml:space="preserve">
          <source>Returns the errors as a dictionary suitable for serializing to JSON. &lt;a href=&quot;#django.forms.Form.errors.as_json&quot;&gt;&lt;code&gt;Form.errors.as_json()&lt;/code&gt;&lt;/a&gt; returns serialized JSON, while this returns the error data before it&amp;rsquo;s serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af8c0bd1e1a65de73a7f754c9abd5abf5ad4189" translate="yes" xml:space="preserve">
          <source>Returns the errors serialized as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b81355de54577972b9817ff0343bb66e83512b0" translate="yes" xml:space="preserve">
          <source>Returns the expression ready to be sorted in ascending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df732633a58ee5bb48ba502fa9bd82abc7f4dba" translate="yes" xml:space="preserve">
          <source>Returns the expression ready to be sorted in descending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c6db9d348eef1c450898056353383ca592a70e" translate="yes" xml:space="preserve">
          <source>Returns the extent of all &lt;code&gt;geo_field&lt;/code&gt; in the &lt;code&gt;QuerySet&lt;/code&gt; as a four-tuple, comprising the lower left coordinate and the upper right coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28827509164c604471900851b992f8400e0be777" translate="yes" xml:space="preserve">
          <source>Returns the feature identifier within the layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8583ac5815095ab8def67cce7210e06c5c3c7e" translate="yes" xml:space="preserve">
          <source>Returns the feed as a string in the given encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffad1a927b9f36ac1afe85d23c85cad32a79ea6" translate="yes" xml:space="preserve">
          <source>Returns the feed in the given encoding as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1873a91f856b31ccbcfe7ed5b373d61175e583c5" translate="yes" xml:space="preserve">
          <source>Returns the field instance given a name of a field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736a534c132ece702eced566e0276ef1fd961abe" translate="yes" xml:space="preserve">
          <source>Returns the field&amp;rsquo;s value for the given model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529c8919d98065445c0e54bf26991d1720f4aab9" translate="yes" xml:space="preserve">
          <source>Returns the filtered dictionary of POST parameters. By default it replaces the values of sensitive parameters with stars (&lt;code&gt;**********&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe0504c0bc91588e9cb9ada01e8e916f3d680ee" translate="yes" xml:space="preserve">
          <source>Returns the filtered dictionary of local variables for the given traceback frame. By default it replaces the values of sensitive variables with stars (&lt;code&gt;**********&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8105447260ade9383b4922546aff2636cf824b80" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;length&lt;/code&gt; characters of the given text field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d916e81130d9b93137abefcd5fc32db4f3e70fcf" translate="yes" xml:space="preserve">
          <source>Returns the first item in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34623fb6b438264b4289b2fba1222c08ef33d448" translate="yes" xml:space="preserve">
          <source>Returns the first object matched by the queryset, or &lt;code&gt;None&lt;/code&gt; if there is no matching object. If the &lt;code&gt;QuerySet&lt;/code&gt; has no ordering defined, then the queryset is automatically ordered by the primary key. This can affect aggregation results as described in &lt;a href=&quot;../../topics/db/aggregation#aggregation-ordering-interaction&quot;&gt;Interaction with default ordering or order_by()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0dd3ab7adafa418efb3c32871a2765615b9fbb" translate="yes" xml:space="preserve">
          <source>Returns the full path to the temporary uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c92ca6c47af98631f05f62efe9ea110a907506" translate="yes" xml:space="preserve">
          <source>Returns the geometry for this feature, as an &lt;code&gt;OGRGeometry&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfb391540699a86da7fb35048e52e1be1f45cd3" translate="yes" xml:space="preserve">
          <source>Returns the geometry type of the layer, as an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeomType&quot;&gt;&lt;code&gt;OGRGeomType&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00e55f8f28d5056d08f9582dfc9522c567040ac" translate="yes" xml:space="preserve">
          <source>Returns the given session dictionary serialized and encoded as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8d843f7e5da1e9269f3a40ffd891a017ec048d" translate="yes" xml:space="preserve">
          <source>Returns the given text with ampersands, quotes and angle brackets encoded for use in HTML. The input is first coerced to a string and the output has &lt;a href=&quot;#django.utils.safestring.mark_safe&quot;&gt;&lt;code&gt;mark_safe()&lt;/code&gt;&lt;/a&gt; applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc068d20578d77a7fdeb34dec65bc396abc63f98" translate="yes" xml:space="preserve">
          <source>Returns the input values as a &lt;code&gt;JSON&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c5f9f65def996798f0b5ff45a8a3aab15a3c6d" translate="yes" xml:space="preserve">
          <source>Returns the input values concatenated into a string, separated by the &lt;code&gt;delimiter&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185eb11f3103065961baf6ae55e17950362e5694" translate="yes" xml:space="preserve">
          <source>Returns the inverse flattening of the ellipsoid for this spatial reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd40e3c88cde31345c9044d702814251eda96a" translate="yes" xml:space="preserve">
          <source>Returns the keyword arguments to instantiate the &lt;code&gt;DiscoverRunner.test_runner&lt;/code&gt; with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c8f366baff019248bc4246e9bc3aa33fc89565" translate="yes" xml:space="preserve">
          <source>Returns the largest integer value not greater than a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4239a1ccd3d17f4a51f27347c47f86e7ff4109" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;length&lt;/code&gt; characters of the given text field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a94049245d03042caac34bdfb95d3b25c1aeba" translate="yes" xml:space="preserve">
          <source>Returns the last item in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d9a0ea5b3c133d867fc3f2c85b3033e3622402" translate="yes" xml:space="preserve">
          <source>Returns the latest &lt;code&gt;pubdate&lt;/code&gt; or &lt;code&gt;updateddate&lt;/code&gt; for all items in the feed. If no items have either of these attributes this returns the current UTC date/time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c3e635ba8e4c526a8090059279aa23bd802a71" translate="yes" xml:space="preserve">
          <source>Returns the latest object in the table based on the given field(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e04bc4a8024cfe02597596d4d6f5555e4c0477" translate="yes" xml:space="preserve">
          <source>Returns the length of the array. The lookups available afterwards are those available for &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24c84623a32e791d11e643484e854e2ef31efc5" translate="yes" xml:space="preserve">
          <source>Returns the length of the value. This works for both strings and lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ceece22f573cb557830d470b416be1155bb11b" translate="yes" xml:space="preserve">
          <source>Returns the length of the value. This works for both strings and lists. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770a3512e2705350939013ed3f0818f4ffbf9ef5" translate="yes" xml:space="preserve">
          <source>Returns the length of this geometry (e.g., 0 for a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;, the length of a &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, or the circumference of a &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed7f4e509943c1e098f2373287432d3896b8bf1" translate="yes" xml:space="preserve">
          <source>Returns the list of dates of type &lt;code&gt;date_type&lt;/code&gt; for which &lt;code&gt;queryset&lt;/code&gt; contains entries. For example, &lt;code&gt;get_date_list(qs, 'year')&lt;/code&gt; will return the list of years for which &lt;code&gt;qs&lt;/code&gt; has entries. If &lt;code&gt;date_type&lt;/code&gt; isn&amp;rsquo;t provided, the result of &lt;a href=&quot;#django.views.generic.dates.BaseDateListView.get_date_list_period&quot;&gt;&lt;code&gt;get_date_list_period()&lt;/code&gt;&lt;/a&gt; is used. &lt;code&gt;date_type&lt;/code&gt; and &lt;code&gt;ordering&lt;/code&gt; are passed to &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet.dates&quot;&gt;&lt;code&gt;QuerySet.dates()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb10182517610965fb47b87983f03913bbdce909" translate="yes" xml:space="preserve">
          <source>Returns the max-age from the response Cache-Control header as an integer (or &lt;code&gt;None&lt;/code&gt; if it wasn&amp;rsquo;t found or wasn&amp;rsquo;t an integer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8937d86a7e640936b26f97daca46e66d09f92ff4" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of extra inline forms to use. By default, returns the &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin.max_num&quot;&gt;&lt;code&gt;InlineModelAdmin.max_num&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf670be0ccd97d02aba4bf406032b4ab2e63f9c9" translate="yes" xml:space="preserve">
          <source>Returns the maximum value of the given expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a693209b724e4bd08a578e88dda6f0a7e123b21" translate="yes" xml:space="preserve">
          <source>Returns the mean value of the given expression, which must be numeric unless you specify a different &lt;code&gt;output_field&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f92dc78d786acece43aca98564a7b58ec72036b" translate="yes" xml:space="preserve">
          <source>Returns the minimum number of inline forms to use. By default, returns the &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin.min_num&quot;&gt;&lt;code&gt;InlineModelAdmin.min_num&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9516a9b6c5b5075d54c6939e5647c32ad38bbdc" translate="yes" xml:space="preserve">
          <source>Returns the minimum value of the given expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1cd8b584a35ed3959a532804de778144ba2075" translate="yes" xml:space="preserve">
          <source>Returns the model class represented by this &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7428cee6482aebb0289a61b32f18ca034d0424" translate="yes" xml:space="preserve">
          <source>Returns the model on which the field is defined. If a field is defined on a superclass of a model, &lt;code&gt;model&lt;/code&gt; will refer to the superclass, not the class of the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5493da8bd700442734a331b3e6eff21bacd400b" translate="yes" xml:space="preserve">
          <source>Returns the month for which this view will display data, as a string. Tries the following sources, in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d9d7565b82a1c218c32f86a81a9c964752cd4d" translate="yes" xml:space="preserve">
          <source>Returns the name of a slug field to be used to look up by slug. By default this returns the value of &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.slug_field&quot;&gt;&lt;code&gt;slug_field&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb67a0eebcdb369b983f208914f629714e264f1c" translate="yes" xml:space="preserve">
          <source>Returns the name of the &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; that the feature came from. This will be the same for all features in a given layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5609075f73970259bec252b3ee765adffb0f02" translate="yes" xml:space="preserve">
          <source>Returns the name of the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2be4681a55fb2a704367c8edf9ac61c2a880eb8" translate="yes" xml:space="preserve">
          <source>Returns the name of the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;default time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40844336189049232a58b170d710736fce2615ce" translate="yes" xml:space="preserve">
          <source>Returns the name of the angular units.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a186bd353e463d782af5a9f51362ee8b28760aa" translate="yes" xml:space="preserve">
          <source>Returns the name of the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc731e5137f76ce751d87830753366801aab6c0" translate="yes" xml:space="preserve">
          <source>Returns the name of the email field specified by the &lt;a href=&quot;#django.contrib.auth.models.CustomUser.EMAIL_FIELD&quot;&gt;&lt;code&gt;EMAIL_FIELD&lt;/code&gt;&lt;/a&gt; attribute. Defaults to &lt;code&gt;'email'&lt;/code&gt; if &lt;code&gt;EMAIL_FIELD&lt;/code&gt; isn&amp;rsquo;t specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6b690cd74042c39d439ebcb9913997e6400744" translate="yes" xml:space="preserve">
          <source>Returns the name of the field that contains the date data that this view will operate on. Returns &lt;a href=&quot;#django.views.generic.dates.DateMixin.date_field&quot;&gt;&lt;code&gt;date_field&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6a493a7829ffcdd73855f92914d405418f6d6f" translate="yes" xml:space="preserve">
          <source>Returns the name of the linear units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd4951238317d87b62f009f1e4b8dc1ca4a7544" translate="yes" xml:space="preserve">
          <source>Returns the name of the query parameter that will contain the URL the user should be redirected to after a successful login. If you set this to &lt;code&gt;None&lt;/code&gt;, a query parameter won&amp;rsquo;t be added. Returns the &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.redirect_field_name&quot;&gt;&lt;code&gt;redirect_field_name&lt;/code&gt;&lt;/a&gt; attribute by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8f9774a3cd6967fe4fa9341b8d50554436924d" translate="yes" xml:space="preserve">
          <source>Returns the name of the test database that it created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a50e2ff25c8efc8ec7d8ad0587460cf798ae1a" translate="yes" xml:space="preserve">
          <source>Returns the name of the type of this geometry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0905f958573fe762ca0cb93ee5d9aa7ad04064" translate="yes" xml:space="preserve">
          <source>Returns the name of this Spatial Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26e5130b642b98f384f83e54a774700acabb3a7" translate="yes" xml:space="preserve">
          <source>Returns the name of this field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e4488b39eb0dadc8bf79a0bdf06df869db0b5a" translate="yes" xml:space="preserve">
          <source>Returns the name of this layer in the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea37fa2fe842aed61c1e0854f1db471881bd4cda" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b76b49be9dc5f8ed7551d9492cd01843f6886c" translate="yes" xml:space="preserve">
          <source>Returns the next page number. Raises &lt;a href=&quot;#django.core.paginator.InvalidPage&quot;&gt;&lt;code&gt;InvalidPage&lt;/code&gt;&lt;/a&gt; if next page doesn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b91ec4db58a10741d21243d060e683f000d9363" translate="yes" xml:space="preserve">
          <source>Returns the number corresponding to the OGR geometry type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe420502d1eef600c8109d15bc6433bf4619cd3" translate="yes" xml:space="preserve">
          <source>Returns the number of OGR vector drivers currently registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6afd4f5ed0ee4669c30267e2001bdb6a0d0f533" translate="yes" xml:space="preserve">
          <source>Returns the number of coordinated dimensions of the geometry, i.e. 0 for points, 1 for lines, and so forth:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d5a80d0b64b7b15829da7ba622e7fe6c4a243c" translate="yes" xml:space="preserve">
          <source>Returns the number of coordinates in the geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d9441e88624f3eca65ac19217a9d55254ef1f9" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in this geometry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce799fa140e69562e932b14f2faf3f7287698be" translate="yes" xml:space="preserve">
          <source>Returns the number of extra inline forms to use. By default, returns the &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin.extra&quot;&gt;&lt;code&gt;InlineModelAdmin.extra&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165af082c963d391eca5fe990020a2d9bc4bda2d" translate="yes" xml:space="preserve">
          <source>Returns the number of features in the layer. Same as &lt;code&gt;len(layer)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a184849b6a2fde24593de72729c1a36c363725c" translate="yes" xml:space="preserve">
          <source>Returns the number of fields in the layer, i.e the number of fields of data associated with each feature in the layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d998002b206488f7722f116d84deeca595d6b74d" translate="yes" xml:space="preserve">
          <source>Returns the number of fields of data associated with the feature. This will be the same for all features in a given layer and is equivalent to the &lt;a href=&quot;#django.contrib.gis.gdal.Layer.num_fields&quot;&gt;&lt;code&gt;Layer.num_fields&lt;/code&gt;&lt;/a&gt; property of the &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; object the feature came from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34de0fa03f1915e756e89139170bc2b85d07ece4" translate="yes" xml:space="preserve">
          <source>Returns the number of geometries in this geometry. In other words, will return 1 on anything but geometry collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0edb2913106b879039fca1637109a13c55bb58d" translate="yes" xml:space="preserve">
          <source>Returns the number of interior rings in this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be84b84366d9b4c00c833e34a1883eb9f7f2b0ba" translate="yes" xml:space="preserve">
          <source>Returns the number of items to paginate by, or &lt;code&gt;None&lt;/code&gt; for no pagination. By default this returns the value of &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.paginate_by&quot;&gt;&lt;code&gt;paginate_by&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b1c484c5265b523dbe3bf93e91cdb34d2356bd" translate="yes" xml:space="preserve">
          <source>Returns the number of layers in the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bf63fd8f6dce93c9d495b57c2ea96697c9c4d5" translate="yes" xml:space="preserve">
          <source>Returns the number of objects that are related through the provided expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddd514c31eee205a267a3808a9d5d0102da623a" translate="yes" xml:space="preserve">
          <source>Returns the number of points in a &lt;a href=&quot;#django.contrib.gis.gdal.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, the number of rings in a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;, or the number of geometries in a &lt;a href=&quot;#django.contrib.gis.gdal.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;. Not applicable to other geometry types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6b1eacd5890a67d2b6c09a69c806c04619d1c0" translate="yes" xml:space="preserve">
          <source>Returns the number of points used to describe this geometry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b02437b5f7dedf601c053340c94d89bacf1043" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds until this session expires. For sessions with no custom expiration (or those set to expire at browser close), this will equal &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb879640cfd661a48ba528cabeccd1d6a8e759f5" translate="yes" xml:space="preserve">
          <source>Returns the number of words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c327e5602ebab0f875b8926e82866cb3e97932" translate="yes" xml:space="preserve">
          <source>Returns the numeric precision of this field. This is meaningless (and set to zero) for non-numeric fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada8b0e87770a2a9b49b618e5e123042460e5732" translate="yes" xml:space="preserve">
          <source>Returns the object matching the given lookup parameters, which should be in the format described in &lt;a href=&quot;#id4&quot;&gt;Field lookups&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e66add145b78fe6be312eb2dab96b9e67f98c3" translate="yes" xml:space="preserve">
          <source>Returns the originating host of the request using information from the &lt;code&gt;HTTP_X_FORWARDED_HOST&lt;/code&gt; (if &lt;a href=&quot;settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; is enabled) and &lt;code&gt;HTTP_HOST&lt;/code&gt; headers, in that order. If they don&amp;rsquo;t provide a value, the method uses a combination of &lt;code&gt;SERVER_NAME&lt;/code&gt; and &lt;code&gt;SERVER_PORT&lt;/code&gt; as detailed in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92c7a6762e46861c630f091658bca676837a2dd" translate="yes" xml:space="preserve">
          <source>Returns the originating port of the request using information from the &lt;code&gt;HTTP_X_FORWARDED_PORT&lt;/code&gt; (if &lt;a href=&quot;settings#std:setting-USE_X_FORWARDED_PORT&quot;&gt;&lt;code&gt;USE_X_FORWARDED_PORT&lt;/code&gt;&lt;/a&gt; is enabled) and &lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;code&gt;META&lt;/code&gt; variables, in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a1bf6ea1d833e818c00aac89ff05cd16e60c91" translate="yes" xml:space="preserve">
          <source>Returns the point at the specified index for a &lt;a href=&quot;#django.contrib.gis.gdal.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, the interior ring at the specified index for a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;, or the geometry at the specified index in a &lt;a href=&quot;#django.contrib.gis.gdal.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;. Not applicable to other geometry types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5f8ee474c676837537ff4fb137831c8d1ca6ad" translate="yes" xml:space="preserve">
          <source>Returns the population covariance as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5391100d3d0bbe7a0ae9a33a0cecad58a8b0dc3b" translate="yes" xml:space="preserve">
          <source>Returns the previous page number. Raises &lt;a href=&quot;#django.core.paginator.InvalidPage&quot;&gt;&lt;code&gt;InvalidPage&lt;/code&gt;&lt;/a&gt; if previous page doesn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fb892594967f6c786bd4faaffe4e0f26a35dc7" translate="yes" xml:space="preserve">
          <source>Returns the queryset that will be used to retrieve the object that this view will display. By default, &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_queryset&quot;&gt;&lt;code&gt;get_queryset()&lt;/code&gt;&lt;/a&gt; returns the value of the &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt; attribute if it is set, otherwise it constructs a &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; by calling the &lt;code&gt;all()&lt;/code&gt; method on the &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; attribute&amp;rsquo;s default manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d5a5179bb250a89da9193bb3a37b9e1a7fcaed" translate="yes" xml:space="preserve">
          <source>Returns the region consisting of the difference of this geometry and the other, as a new &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35a2b0fa793d76f6c3ce1353e1e8a34bbe08ccb" translate="yes" xml:space="preserve">
          <source>Returns the region consisting of the intersection of this geometry and the other, as a new &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694adeffe5ddfdbfe69be6c0fb79f887cb5c5110" translate="yes" xml:space="preserve">
          <source>Returns the region consisting of the symmetric difference of this geometry and the other, as a new &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b017ccc218948d2112204408911581c1620385f" translate="yes" xml:space="preserve">
          <source>Returns the region consisting of the union of this geometry and the other, as a new &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a17add8532caab5a7130feaa91ff02cb963f36" translate="yes" xml:space="preserve">
          <source>Returns the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b1e715af274443b3aae10db3428bfa83cc344b" translate="yes" xml:space="preserve">
          <source>Returns the result of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; on a given model manager cast to a list, raising &lt;a href=&quot;views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; if the resulting list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e591309d20cfa4e20ff5cbefe7f399f938b2a2" translate="yes" xml:space="preserve">
          <source>Returns the result produced by the running the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef8b32be13d22066459a9cda123b71669660715" translate="yes" xml:space="preserve">
          <source>Returns the semi major axis of the ellipsoid for this spatial reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b2a67ac4d9c7c6f756b268ad14191d5de46c25" translate="yes" xml:space="preserve">
          <source>Returns the semi minor axis of the ellipsoid for this spatial reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43043f37e99103d06f2d9263f0ae39cc66f56c6" translate="yes" xml:space="preserve">
          <source>Returns the set of permission strings the &lt;code&gt;user_obj&lt;/code&gt; has from the permissions of the groups they belong. Returns an empty set if &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.is_anonymous&quot;&gt;&lt;code&gt;is_anonymous&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ab6ab83d5f9d80b427b1a6f41079c5f6ab3c7a" translate="yes" xml:space="preserve">
          <source>Returns the set of permission strings the &lt;code&gt;user_obj&lt;/code&gt; has from their own user permissions. Returns an empty set if &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.is_anonymous&quot;&gt;&lt;code&gt;is_anonymous&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d7ab6d14a58934878b553bfe980385a8dfec72" translate="yes" xml:space="preserve">
          <source>Returns the set of permission strings the &lt;code&gt;user_obj&lt;/code&gt; has, including both user permissions and group permissions. Returns an empty set if &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.is_anonymous&quot;&gt;&lt;code&gt;is_anonymous&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132ee4dde704b159d60f53c3e08faac64a35356b" translate="yes" xml:space="preserve">
          <source>Returns the shell or exterior ring of this polygon, as a &lt;code&gt;LinearRing&lt;/code&gt; geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4042533dafd5462cee8e3ecb80b4bd5fe2685237" translate="yes" xml:space="preserve">
          <source>Returns the sign (-1, 0, 1) of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402f09a7dd362ae949a4bd5b602750e9473b95fe" translate="yes" xml:space="preserve">
          <source>Returns the sine of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d419b2eca687df3d2a3687c257040029d07dfac0" translate="yes" xml:space="preserve">
          <source>Returns the single object that this view will display. If &lt;code&gt;queryset&lt;/code&gt; is provided, that queryset will be used as the source of objects; otherwise, &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.get_queryset&quot;&gt;&lt;code&gt;get_queryset()&lt;/code&gt;&lt;/a&gt; will be used. &lt;code&gt;get_object()&lt;/code&gt; looks for a &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.pk_url_kwarg&quot;&gt;&lt;code&gt;pk_url_kwarg&lt;/code&gt;&lt;/a&gt; argument in the arguments to the view; if this argument is found, this method performs a primary-key based lookup using that value. If this argument is not found, it looks for a &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.slug_url_kwarg&quot;&gt;&lt;code&gt;slug_url_kwarg&lt;/code&gt;&lt;/a&gt; argument, and performs a slug lookup using the &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.slug_field&quot;&gt;&lt;code&gt;slug_field&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e069707aed748236606d614bdd46cd8686518441" translate="yes" xml:space="preserve">
          <source>Returns the size of the WKB buffer needed to hold a WKB representation of this geometry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0af84f051f9ae746819ee284c1e880475b15968" translate="yes" xml:space="preserve">
          <source>Returns the slope of the least-squares-fit linear equation determined by the &lt;code&gt;(x, y)&lt;/code&gt; pairs as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b776273171c8b12e31b435c01e3bc8f30b801f" translate="yes" xml:space="preserve">
          <source>Returns the smallest &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; that contains all the points in the geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77147166a5e82bd4ab597d5a3d9646e6400c7e6" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d3649ac031b220ce26a0c4ecbfa27cb9b17c4f" translate="yes" xml:space="preserve">
          <source>Returns the spatial extent of this layer, as an &lt;a href=&quot;#django.contrib.gis.gdal.Envelope&quot;&gt;&lt;code&gt;Envelope&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8cef5dbb8c7c887b5dd53c1c91190911d55e1c" translate="yes" xml:space="preserve">
          <source>Returns the square of the correlation coefficient as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886ecb276ed4ce027f693a7ca3be8aa4b310a1f0" translate="yes" xml:space="preserve">
          <source>Returns the square root of a nonnegative numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1ad767f9aae1243e32c71f9c251c83d2f4b2cf" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation of the data in the provided expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa320ab227078193b17eeebf25cfadcb91ac14c" translate="yes" xml:space="preserve">
          <source>Returns the tangent of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18cba1a4f1e022eb06789aa03c20055a051ca32" translate="yes" xml:space="preserve">
          <source>Returns the total size, in bytes, of the file referenced by &lt;code&gt;name&lt;/code&gt;. For storage systems that aren&amp;rsquo;t able to return the file size this will raise &lt;code&gt;NotImplementedError&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e5ce0b30ac8bedff2f3af2dad78a69faa18302" translate="yes" xml:space="preserve">
          <source>Returns the type of geometry for this feature, as an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeomType&quot;&gt;&lt;code&gt;OGRGeomType&lt;/code&gt;&lt;/a&gt; object. This will be the same for all features in a given layer and is equivalent to the &lt;a href=&quot;#django.contrib.gis.gdal.Layer.geom_type&quot;&gt;&lt;code&gt;Layer.geom_type&lt;/code&gt;&lt;/a&gt; property of the &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; object the feature came from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f833e98d50911c04734a42ad459740e9b358bcd" translate="yes" xml:space="preserve">
          <source>Returns the type of this geometry, as an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeomType&quot;&gt;&lt;code&gt;OGRGeomType&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df88649cb4f5b54bf0cc20f650e0a2c5c73722c" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; from the first configured &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine. Raises &lt;a href=&quot;../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; if no engines are configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f88f6d0b820463b7ebdda28e985df2a64786fb" translate="yes" xml:space="preserve">
          <source>Returns the url to redirect to when the nominated object has been successfully deleted. Returns &lt;a href=&quot;#django.views.generic.edit.DeletionMixin.success_url&quot;&gt;&lt;code&gt;success_url&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fbb4c4809fbc061383109f6dfd7f7fbaf955b5" translate="yes" xml:space="preserve">
          <source>Returns the user model instance associated with the given &lt;code&gt;request&lt;/code&gt;&amp;rsquo;s session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57354c7dd007596248fd6d91fa6cb844ee335bd8" translate="yes" xml:space="preserve">
          <source>Returns the username for the user. Since the &lt;code&gt;User&lt;/code&gt; model can be swapped out, you should use this method instead of referencing the username attribute directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efcfb11257ba295f4e387c18fd8a515e176ab15" translate="yes" xml:space="preserve">
          <source>Returns the value evaluated at the row that&amp;rsquo;s the first row of the window frame, or &lt;code&gt;None&lt;/code&gt; if no such value exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9af95f914355b96a6ffff3ef0217a092f8eac3" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is in the context, else returns &lt;code&gt;otherwise&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925964757ae3248c29822f820f8ac018fbd1602e" translate="yes" xml:space="preserve">
          <source>Returns the value for the given header name. Case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b7e9c18e5b9a9d5aa8529c4a9ba723c7b48111" translate="yes" xml:space="preserve">
          <source>Returns the value for the given key. If the key has more than one value, it returns the last value. Raises &lt;code&gt;django.utils.datastructures.MultiValueDictKeyError&lt;/code&gt; if the key does not exist. (This is a subclass of Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;, so you can stick to catching &lt;code&gt;KeyError&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa326027e7250c22c5194e675cd473e0a6e4411" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;a href=&quot;#django.http.HttpResponse.content&quot;&gt;&lt;code&gt;HttpResponse.content&lt;/code&gt;&lt;/a&gt;. This method makes an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; instance a stream-like object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde6b21b6e90d83b298022ce1794c96372000503" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;e&lt;/code&gt; (the natural logarithm base) raised to the power of a numeric field or expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6dba06319b224bdee92dd9a816d8f8833011ee" translate="yes" xml:space="preserve">
          <source>Returns the value of the angular units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015fad645f38d25a853e4431fe6313d39c6bf368" translate="yes" xml:space="preserve">
          <source>Returns the value of the field as a double (float):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd3796ad9ad26378b269bee25e732b5f274ca13" translate="yes" xml:space="preserve">
          <source>Returns the value of the field as a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db09d3ebc7d0106bd6e34b0feedf690a63a31573" translate="yes" xml:space="preserve">
          <source>Returns the value of the field as a tuple of date and time components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f1edbe7ed73fb51666c4a636fa8d0be37f2d76" translate="yes" xml:space="preserve">
          <source>Returns the value of the field as an integer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a5c918a02b02e6f8bfcfb3a2049de9b23e01bf" translate="yes" xml:space="preserve">
          <source>Returns the value of the field nominated by &lt;code&gt;USERNAME_FIELD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba030e240b5e937ef6ecff086ade2a3640041468" translate="yes" xml:space="preserve">
          <source>Returns the value of the given string attribute node, &lt;code&gt;None&lt;/code&gt; if the node doesn&amp;rsquo;t exist. Can also take a tuple as a parameter, (target, child), where child is the index of the attribute in the WKT. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc2844c0d623ea2e412b7b15959b894e32ac379" translate="yes" xml:space="preserve">
          <source>Returns the value of the given text field or expression padded on the left side with &lt;code&gt;fill_text&lt;/code&gt; so that the resulting value is &lt;code&gt;length&lt;/code&gt; characters long. The default &lt;code&gt;fill_text&lt;/code&gt; is a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df59355ac05890686ac3e44b4d8f9673be71674" translate="yes" xml:space="preserve">
          <source>Returns the value of the given text field or expression repeated &lt;code&gt;number&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9f39662d4e06f34586289400148831235ded44" translate="yes" xml:space="preserve">
          <source>Returns the value of the given text field or expression with leading and trailing spaces removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226cad3a8eab39c5bb0af6d2e2237c5c4e07deb1" translate="yes" xml:space="preserve">
          <source>Returns the value of the linear units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfdfddad1116cff017973dfcbf1ca2934cfa72d" translate="yes" xml:space="preserve">
          <source>Returns the value of the mathematical constant &lt;code&gt;&amp;pi;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e3d40778338b1ed67a14fc2118553af3460d70" translate="yes" xml:space="preserve">
          <source>Returns the value of this field. The &lt;code&gt;Field&lt;/code&gt; class itself returns the value as a string, but each subclass returns the value in the most appropriate form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed70a1121b9b82d1ca97b20998cb0369c08c3a8" translate="yes" xml:space="preserve">
          <source>Returns the value turned into a list. For a string, it&amp;rsquo;s a list of characters. For an integer, the argument is cast to a string before creating a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65497e5b7f4655b945a3e3bd8aac6ee1b562270b" translate="yes" xml:space="preserve">
          <source>Returns the variance of the data in the provided expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7b7b31fc8aca428bed5999d2dbb3486813fdc2" translate="yes" xml:space="preserve">
          <source>Returns the week for which this view will display data, as a string. Tries the following sources, in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e113b1800762e4e8a066212dc7e60481063176" translate="yes" xml:space="preserve">
          <source>Returns the width of this field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1201f9174ec266b367e2c49892f9e0aa4b90430b" translate="yes" xml:space="preserve">
          <source>Returns the y-intercept of the least-squares-fit linear equation determined by the &lt;code&gt;(x, y)&lt;/code&gt; pairs as a &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if there aren&amp;rsquo;t any matching rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2eeec42ec2a9a25070a482fc2f4e13b7dc16ee" translate="yes" xml:space="preserve">
          <source>Returns the year for which this view will display data, as a string. Tries the following sources, in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc554c8e6789245932557c0963869461cca990d" translate="yes" xml:space="preserve">
          <source>Returns true if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;T*T***T**&lt;/code&gt; (for two points or two surfaces) &lt;code&gt;1*T***T**&lt;/code&gt; (for two curves).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d61f225e3c3f8acdba2a517d0b5aa73368d1db5" translate="yes" xml:space="preserve">
          <source>Returns true if the lookup geometry intersects the interior of the geometry field, but not the boundary (or exterior).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1d7639c399830f2a1c44d1ab29e4ffdc2751f0" translate="yes" xml:space="preserve">
          <source>Returns true if the two geometries are exactly equal, up to a specified tolerance. The &lt;code&gt;tolerance&lt;/code&gt; value should be a floating point number representing the error tolerance in the comparison, e.g., &lt;code&gt;poly1.equals_exact(poly2, 0.001)&lt;/code&gt; will compare equality to within one thousandth of a unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b228211c375a20bab1896e5926c8bbf7c96afb0f" translate="yes" xml:space="preserve">
          <source>Returns users that have the given permission &lt;code&gt;perm&lt;/code&gt; either in the &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; format or as a &lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; instance. Returns an empty queryset if no users who have the &lt;code&gt;perm&lt;/code&gt; found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982d04bab6509466f84445a8f3d612addc7bae61" translate="yes" xml:space="preserve">
          <source>Returns whether or not the set of points in the geometry is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3fe05557d2155c76efb2540cbd4e444877479d" translate="yes" xml:space="preserve">
          <source>Returns whether or not this &lt;code&gt;LineString&lt;/code&gt; is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c9565318dbcae5ed117a940ba94c8fb0235466" translate="yes" xml:space="preserve">
          <source>Returns whether the &lt;code&gt;user_obj&lt;/code&gt; has any permissions on the app &lt;code&gt;app_label&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbf015beaa77e8baa7a04329eaa279c3d31e685" translate="yes" xml:space="preserve">
          <source>Returns whether the user is allowed to authenticate. This method returns &lt;code&gt;False&lt;/code&gt; for users with &lt;a href=&quot;#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active=False&lt;/code&gt;&lt;/a&gt;. Custom user models that don&amp;rsquo;t have an &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; field are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19df2eeaad38b5744ae15d9283ba5259b28b616" translate="yes" xml:space="preserve">
          <source>Returns whether the user is allowed to authenticate. To match the behavior of &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm&quot;&gt;&lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/a&gt; which &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed&quot;&gt;&lt;code&gt;prohibits inactive users from logging in&lt;/code&gt;&lt;/a&gt;, this method returns &lt;code&gt;False&lt;/code&gt; for users with &lt;a href=&quot;#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active=False&lt;/code&gt;&lt;/a&gt;. Custom user models that don&amp;rsquo;t have an &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.CustomUser.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; field are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e2c8d9175c7cde5eb13534737ce5130b5bed13" translate="yes" xml:space="preserve">
          <source>Reusability is the way of life in Python. &lt;a href=&quot;https://pypi.org/&quot;&gt;The Python Package Index (PyPI)&lt;/a&gt; has a vast range of packages you can use in your own Python programs. Check out &lt;a href=&quot;https://djangopackages.org&quot;&gt;Django Packages&lt;/a&gt; for existing reusable apps you could incorporate in your project. Django itself is also a normal Python package. This means that you can take existing Python packages or Django apps and compose them into your own web project. You only need to write the parts that make your project unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3ff9cdb9fdb66c42ac97fb0f0cc7176549c9a2" translate="yes" xml:space="preserve">
          <source>Reusability matters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39da7e4f4da591e9500de9bee80289aba73b10c" translate="yes" xml:space="preserve">
          <source>Reusable apps and &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8ccef9151327b0453209242c11eaac660d3e58" translate="yes" xml:space="preserve">
          <source>Reusable apps shouldn&amp;rsquo;t implement a custom user model. A project may use many apps, and two reusable apps that implemented a custom user model couldn&amp;rsquo;t be used together. If you need to store per user information in your app, use a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854b40052b5a68e33d034b37054df44b8a16de61" translate="yes" xml:space="preserve">
          <source>Reusable form templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2435cb49e807414009f3e6ad86dda03bb7abf244" translate="yes" xml:space="preserve">
          <source>Reverse URL lookups cannot be carried out within the &lt;code&gt;blocktrans&lt;/code&gt; and should be retrieved (and stored) beforehand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a935c6a5d7b453a5cb037e6db25f564d853bb83" translate="yes" xml:space="preserve">
          <source>Reverse generic relations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab50a05232c59f156348cb803e994cf156465821" translate="yes" xml:space="preserve">
          <source>Reverse m2m queries are supported (i.e., starting at the table that doesn&amp;rsquo;t have a &lt;a href=&quot;../../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d0817156ef1e866ff16b929c4c7ebf660b3004" translate="yes" xml:space="preserve">
          <source>Reverse of &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.interpolate&quot;&gt;&lt;code&gt;GEOSGeometry.interpolate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed0a40b7a7c3b9c56d5ee96e601482926e041c0" translate="yes" xml:space="preserve">
          <source>Reverse of &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.project&quot;&gt;&lt;code&gt;GEOSGeometry.project()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1172de520337c488546d04292b3f8804d488376" translate="yes" xml:space="preserve">
          <source>Reverse of &lt;code&gt;dumps()&lt;/code&gt;, raises &lt;code&gt;BadSignature&lt;/code&gt; if signature fails. Checks &lt;code&gt;max_age&lt;/code&gt; (in seconds) if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a460612daebc8f75c4054059b671c6a824cd43f" translate="yes" xml:space="preserve">
          <source>Reverse resolution of URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f1a7ef1158d3118b90d4a12b558fd4dc4b40ac" translate="yes" xml:space="preserve">
          <source>Reversing admin URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef5870c00b0cf62d4fe848d9537c00e6caf0fc9" translate="yes" xml:space="preserve">
          <source>Reversing in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56a7d7ad75596737600e5f07b42f010544dd17b" translate="yes" xml:space="preserve">
          <source>Reversing namespaced URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa7a2b7b33531dc7dba5746694771a47f8ded97" translate="yes" xml:space="preserve">
          <source>Reverting migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00acdd9a21d90cdce19bc9bf778eb969070c662b" translate="yes" xml:space="preserve">
          <source>Review your logging configuration before putting your website in production, and check that it works as expected as soon as you have received some traffic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c46c72488553ade5cb3b663db54c3d0c54365b" translate="yes" xml:space="preserve">
          <source>Rewriting your code to reduce concurrency and ensure that database transactions are short-lived.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c6c08d6efa300969f602ac4f7291e8179842b3" translate="yes" xml:space="preserve">
          <source>Right-aligns the value in a field of a given width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a66afb9fe0626fcd42104bd65f6c452dd9fc7a" translate="yes" xml:space="preserve">
          <source>Robustly testing two &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;HTML fragments&lt;/code&gt;&lt;/a&gt; for equality/inequality or &lt;a href=&quot;#django.test.SimpleTestCase.assertInHTML&quot;&gt;&lt;code&gt;containment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12cc2556de5b4fd4cf770423bd702ff13c8506b" translate="yes" xml:space="preserve">
          <source>Robustly testing two &lt;a href=&quot;#django.test.SimpleTestCase.assertJSONEqual&quot;&gt;&lt;code&gt;JSON fragments&lt;/code&gt;&lt;/a&gt; for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf69fd14682665bce9fdb89d49d9511eba1f541" translate="yes" xml:space="preserve">
          <source>Robustly testing two &lt;a href=&quot;#django.test.SimpleTestCase.assertXMLEqual&quot;&gt;&lt;code&gt;XML fragments&lt;/code&gt;&lt;/a&gt; for equality/inequality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbc6c38e74d089d842b11e6e2f6aae9152d82f2" translate="yes" xml:space="preserve">
          <source>Rod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5463d5fd5aaae106243106e1fdd754310e5728e2" translate="yes" xml:space="preserve">
          <source>Rollback emulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e86c25b7b8a1b597829432da307f3b98358360" translate="yes" xml:space="preserve">
          <source>Rolls back the transaction to savepoint &lt;code&gt;sid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3781c17e19b0f9827998e79620c0913f334588be" translate="yes" xml:space="preserve">
          <source>Root and login templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a598d00a02caaac5ed22f162f0954d715a28927" translate="yes" xml:space="preserve">
          <source>Root module for the application, e.g. &lt;code&gt;&amp;lt;module 'django.contrib.admin' from
'django/contrib/admin/__init__.py'&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0886f05f1e3578dbbe8246e98fbd00c1730d8140" translate="yes" xml:space="preserve">
          <source>Roughly translates to this SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e438978227aaa6c50efdfd59a7ae66cd7bfeda" translate="yes" xml:space="preserve">
          <source>Rounds a numeric field or expression to the nearest integer. Whether half values are rounded up or down depends on the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494689dc067df42ddf4bdb6d6f04aca7dc6ce2cb" translate="yes" xml:space="preserve">
          <source>Row #</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea59bd569fa76d74c3cf77da9f7c94d75e2cd36" translate="yes" xml:space="preserve">
          <source>Row locking with &lt;code&gt;QuerySet.select_for_update()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4e2cc0553c37ea10a9fb58409ce21ad7058ac9" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d4fa56cfae586064b1c93c790b3504a5768dcf" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;python manage.py makemigrations&lt;/code&gt;&lt;/a&gt; to create migrations for those changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ceabd297a59bc38216e48a31eae9ef4e7f0a00" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;python manage.py migrate&lt;/code&gt;&lt;/a&gt; to apply those changes to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87beff56509f8179148f9f410b29bf1a837494a7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;django-admin help &amp;lt;command&amp;gt;&lt;/code&gt; to display a description of the given command and a list of its available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5db6ac56c8cbee76a6bcfec0a8ee32e4e5ec4d3" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;django-admin help --commands&lt;/code&gt; to display a list of all available commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa48772a45ac8357b53fc579a10a80a0edf375c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;django-admin help&lt;/code&gt; to display usage information and a list of the commands provided by each application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd12ca42fd51f60a4d3958002eac875c8a84d714" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;django-admin version&lt;/code&gt; to display the current Django version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beb1ff58c92a226481582f40fe644d1f9767969" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;manage.py check --deploy&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbce9ad9d55d55258b076dedf2892f42a89088c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;migrate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0ec2452e48e4c3018feaa9c8af1422234a99ca" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5727114dc18ae1bca5ac69a704b88b5125ca4319" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AddField&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bf5398565d2c7bd84e008cafe44c6cc54ed134" translate="yes" xml:space="preserve">
          <source>Run the command &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;manage.py migrate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbb0fcbd436fba3149206397f6e55101ccb8eb9" translate="yes" xml:space="preserve">
          <source>Run the server, and use your new polling app based on generic views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de74cf684bede66154f8e57fb7f1e6d21d892b94" translate="yes" xml:space="preserve">
          <source>Run the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31a5549ac0a4a32f03688a368413c3658fb6142" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;migrate&lt;/code&gt; to install models and initial data into the test databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d541461e1f38f8fef8ea7b26948853b48338a0" translate="yes" xml:space="preserve">
          <source>Running Django in Daphne</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44f19828fb3662d9ee61c7ba18a11abdbf08b88" translate="yes" xml:space="preserve">
          <source>Running Django in Gunicorn as a generic WSGI application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a998482a53975d06a6590297dfc2f5062813f5" translate="yes" xml:space="preserve">
          <source>Running Django in Uvicorn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863b4f330e18c20c2d5baf373437441af0346876" translate="yes" xml:space="preserve">
          <source>Running Django with a known &lt;a href=&quot;#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; defeats many of Django&amp;rsquo;s security protections, and can lead to privilege escalation and remote code execution vulnerabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59561d4ff22729d56020a6b990c0bb2048c7682" translate="yes" xml:space="preserve">
          <source>Running Django&amp;rsquo;s test suite for the first time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9386d3b841cd46393336faee20763c8b52077304" translate="yes" xml:space="preserve">
          <source>Running Django&amp;rsquo;s test suite for the second time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d165827f02e8ab5dda70081d844b35d90f0e3d" translate="yes" xml:space="preserve">
          <source>Running Django&amp;rsquo;s test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a86b5bf6c30a96b2b59211ec5aa40bacd572aae" translate="yes" xml:space="preserve">
          <source>Running management commands from your code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75936f6c7c1cbae29d2fa7924a52cbc4c953e1f1" translate="yes" xml:space="preserve">
          <source>Running out of memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58160cb4a4e65c82ce3c0a6f2ce5a7908775fa9c" translate="yes" xml:space="preserve">
          <source>Running tests in parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f75a51578a2ab57cba30baa1718b6a32389710" translate="yes" xml:space="preserve">
          <source>Running the &lt;a href=&quot;../checks&quot;&gt;system checks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e64711e4e7b1b9848add37aa26093013cd5ef9" translate="yes" xml:space="preserve">
          <source>Running the tests that were found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6152ce04c34d3c90270b2441e083b5bdbc2b6868" translate="yes" xml:space="preserve">
          <source>Running your new test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe63a92b5c81d9525ccbb6a7bbd37883af12b54d" translate="yes" xml:space="preserve">
          <source>Runs a Django development server (as in &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt;) using data from the given fixture(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267a3146b79e190d8b1838c2b1619c0e7eacfe3f" translate="yes" xml:space="preserve">
          <source>Runs custom Python code in a historical context. &lt;code&gt;code&lt;/code&gt; (and &lt;code&gt;reverse_code&lt;/code&gt; if supplied) should be callable objects that accept two arguments; the first is an instance of &lt;code&gt;django.apps.registry.Apps&lt;/code&gt; containing historical models that match the operation&amp;rsquo;s place in the project history, and the second is an instance of &lt;a href=&quot;schema-editor#django.db.backends.base.schema.BaseDatabaseSchemaEditor&quot;&gt;&lt;code&gt;SchemaEditor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7618779b199521df25186065b15b2dec2faafe0d" translate="yes" xml:space="preserve">
          <source>Runs only tests &lt;a href=&quot;../topics/testing/tools#topics-tagging-tests&quot;&gt;marked with the specified tags&lt;/a&gt;. May be specified multiple times and combined with &lt;a href=&quot;#cmdoption-test-exclude-tag&quot;&gt;&lt;code&gt;test --exclude-tag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25836017663a4118acb06d8720f38f65c9aa923" translate="yes" xml:space="preserve">
          <source>Runs over the entire source tree of the current directory and pulls out all strings marked for translation. It creates (or updates) a message file in the conf/locale (in the Django tree) or locale (for project and application) directory. After making changes to the messages files you need to compile them with &lt;a href=&quot;#django-admin-compilemessages&quot;&gt;&lt;code&gt;compilemessages&lt;/code&gt;&lt;/a&gt; for use with the builtin gettext support. See the &lt;a href=&quot;../topics/i18n/translation#how-to-create-language-files&quot;&gt;i18n documentation&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607df5dfbf0cd0f172dc6741a5861d2ca6453bf6" translate="yes" xml:space="preserve">
          <source>Runs test methods and classes matching test name patterns, in the same way as &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#cmdoption-unittest-k&quot;&gt;&lt;code&gt;unittest's -k option&lt;/code&gt;&lt;/a&gt;. Can be specified multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df10b7ea81401dcd22b2fdad95d63f769e1e4d89" translate="yes" xml:space="preserve">
          <source>Runs tests for all installed apps. See &lt;a href=&quot;../topics/testing/index&quot;&gt;Testing in Django&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d99e50cacd000425b9692c9d5932a505ab25b5" translate="yes" xml:space="preserve">
          <source>Runs tests in separate parallel processes. Since modern processors have multiple cores, this allows running tests significantly faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0c0c8990a0e2fd4f03b110ebefbc415c837db4" translate="yes" xml:space="preserve">
          <source>Runs the &lt;a href=&quot;../checks&quot;&gt;system checks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96458dc9a0ef82d1561f1da65cec5ae73abc425f" translate="yes" xml:space="preserve">
          <source>Runs the Django development server (as in &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt;), pointed at this newly created test database instead of your production database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98c6fbc1f204db0b11d5e69bbbda1fd9da354c1" translate="yes" xml:space="preserve">
          <source>Runs the command-line client for the database engine specified in your &lt;a href=&quot;settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;ENGINE&lt;/code&gt;&lt;/a&gt; setting, with the connection parameters specified in your &lt;a href=&quot;settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-PASSWORD&quot;&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/a&gt;, etc., settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ff3c729d48a0504025fa9dc90076260215b0d3" translate="yes" xml:space="preserve">
          <source>Runs the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa36f794e55181618c0d7592e24962e7f174929" translate="yes" xml:space="preserve">
          <source>SERIALIZATION_MODULES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b54bb0c5d9fb2061149199954795cf3f5739658" translate="yes" xml:space="preserve">
          <source>SMTP backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee33b886e22242b802f258424416e80ed4b364d" translate="yes" xml:space="preserve">
          <source>SQL Equivalent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26f296370cb21ccf15c375695fcf09f2406d4b7" translate="yes" xml:space="preserve">
          <source>SQL equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d3523f02200dfb45769ea650d01a57fa80c362" translate="yes" xml:space="preserve">
          <source>SQL equivalents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7530d6cdd8b6c91d92e4aa70035d88f85cd4506" translate="yes" xml:space="preserve">
          <source>SQL injection is a type of attack where a malicious user is able to execute arbitrary SQL code on a database. This can result in records being deleted or data leakage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387dc60397ed4474d7b1986f43fe6867a90d2b0c" translate="yes" xml:space="preserve">
          <source>SQL injection protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f772a46346fcef0d2e0b6e1b53ff0bc74d6543" translate="yes" xml:space="preserve">
          <source>SQL reserved words, such as &lt;code&gt;join&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt; or &lt;code&gt;select&lt;/code&gt;, &lt;em&gt;are&lt;/em&gt; allowed as model field names, because Django escapes all database table names and column names in every underlying SQL query. It uses the quoting syntax of your particular database engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f09ccbd1cfb65aced3eb531305e671e40b95dd3" translate="yes" xml:space="preserve">
          <source>SQLite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c9298f34c35e55122fe54bf3f69b9fc5e8d7b1" translate="yes" xml:space="preserve">
          <source>SQLite &lt;a href=&quot;https://www.sqlite.org/partialindex.html&quot;&gt;imposes restrictions&lt;/a&gt; on how a partial index can be constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f43f5fa71596f59eb042983d5a640bf5e8c578" translate="yes" xml:space="preserve">
          <source>SQLite can fetch results in batches using &lt;code&gt;fetchmany()&lt;/code&gt;, but since SQLite doesn&amp;rsquo;t provide isolation between queries within a connection, be careful when writing to the table being iterated over. See &lt;a href=&quot;../databases#sqlite-isolation&quot;&gt;Isolation when using QuerySet.iterator()&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd8f9a2006fe1ae7d1ec58d3c665ef1c4f68e1d" translate="yes" xml:space="preserve">
          <source>SQLite can&amp;rsquo;t handle aggregation on date/time fields out of the box. This is because there are no native date/time fields in SQLite and Django currently emulates these features using a text field. Attempts to use aggregation on date/time fields in SQLite will raise &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1249f94900295784f42b2f99e3163215737a3d" translate="yes" xml:space="preserve">
          <source>SQLite does not support the &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; syntax. Calling it will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736fe4db43fe71e5b9a06a9bd12f02a5485288b9" translate="yes" xml:space="preserve">
          <source>SQLite doesn&amp;rsquo;t support case-sensitive &lt;code&gt;LIKE&lt;/code&gt; statements; &lt;code&gt;contains&lt;/code&gt; acts like &lt;code&gt;icontains&lt;/code&gt; for SQLite. See the &lt;a href=&quot;../databases#sqlite-string-matching&quot;&gt;database note&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165bcb4b235768089e4dd899356934d5cb7cc7e2" translate="yes" xml:space="preserve">
          <source>SQLite doesn&amp;rsquo;t support case-sensitive &lt;code&gt;LIKE&lt;/code&gt; statements; &lt;code&gt;endswith&lt;/code&gt; acts like &lt;code&gt;iendswith&lt;/code&gt; for SQLite. Refer to the &lt;a href=&quot;../databases#sqlite-string-matching&quot;&gt;database note&lt;/a&gt; documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578f6b7be614d2b67c5118134ef069575ef494bd" translate="yes" xml:space="preserve">
          <source>SQLite doesn&amp;rsquo;t support case-sensitive &lt;code&gt;LIKE&lt;/code&gt; statements; &lt;code&gt;startswith&lt;/code&gt; acts like &lt;code&gt;istartswith&lt;/code&gt; for SQLite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0ac297362cb2b160e8d9cde3f3ec6f6d7d1b34" translate="yes" xml:space="preserve">
          <source>SQLite has no real decimal internal type. Decimal values are internally converted to the &lt;code&gt;REAL&lt;/code&gt; data type (8-byte IEEE floating point number), as explained in the &lt;a href=&quot;https://www.sqlite.org/datatype3.html#storage_classes_and_datatypes&quot;&gt;SQLite datatypes documentation&lt;/a&gt;, so they don&amp;rsquo;t support correctly-rounded decimal floating point arithmetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b22a632f4fe3bbb027774a8e1840abd4c6bc45" translate="yes" xml:space="preserve">
          <source>SQLite has very little built-in schema alteration support, and so Django attempts to emulate it by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc438ac4f8f5c10c03f7936b7f6061c9e7095542" translate="yes" xml:space="preserve">
          <source>SQLite is meant to be a lightweight database, and thus can&amp;rsquo;t support a high level of concurrency. &lt;code&gt;OperationalError: database is locked&lt;/code&gt; errors indicate that your application is experiencing more concurrency than &lt;code&gt;sqlite&lt;/code&gt; can handle in default configuration. This error means that one thread or process has an exclusive lock on the database connection and another thread timed out waiting for the lock the be released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493cb4f431243f8c18ab777ba205c51a1fe25e9e" translate="yes" xml:space="preserve">
          <source>SQLite notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95938d92f58b653057a020957b2c329023c017b" translate="yes" xml:space="preserve">
          <source>SQLite support was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afa5a68c5ff228b47984d46e0d415d5e366dd56" translate="yes" xml:space="preserve">
          <source>SQLite users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5052ab16d00d0d4cc67d3fd5760469e824eb28b" translate="yes" xml:space="preserve">
          <source>SQLite users, there is nothing you need to do. SQLite always uses UTF-8 for internal encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2580afdcdedad0871bbffc7bfe46e55c9699fa5" translate="yes" xml:space="preserve">
          <source>SQLite, Oracle, and MySQL: If any expression is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;Greatest&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11541be06e83e9609e85c05e0df48455d0b27626" translate="yes" xml:space="preserve">
          <source>SQLite, Oracle, and MySQL: If any expression is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;Least&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5be19b1611244c64974d1bcc686b663957a7fdf" translate="yes" xml:space="preserve">
          <source>SQLite3 (includes the SpatiaLite library)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abd3f4c4b194e8a72919177513618d93e887fff" translate="yes" xml:space="preserve">
          <source>SQLite: no requirements. Conversions are performed in Python with &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; (installed when you install Django).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c30bc65e83da317352c006830d8bab2f7d6a0a" translate="yes" xml:space="preserve">
          <source>SRID code used by the map (default is 4326).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5adb942b7efa266db9b64f249e145615e7ec8f" translate="yes" xml:space="preserve">
          <source>SSL Redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55ecd94f690e82b609bd60c449c8844353d1029" translate="yes" xml:space="preserve">
          <source>SSL/HTTPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081a2bfeb22c8f1e49d8e806252bed81109792ca" translate="yes" xml:space="preserve">
          <source>Safari 4+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfcb9b9aeac01afd96ad68e77e2b9d590025bf8" translate="yes" xml:space="preserve">
          <source>Safely outputs a Python object as JSON, wrapped in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, ready for use with JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7680524c0868f4879141cc09e9e9747564b0a7f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.contrib.admin.ModelAdmin.filter_horizontal&quot;&gt;&lt;code&gt;filter_horizontal&lt;/code&gt;&lt;/a&gt;, but uses a vertical display of the filter interface with the box of unselected options appearing above the box of selected options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1d09959d2dcbe4acc5039c8e5bdbfe306d89a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; except that it doesn&amp;rsquo;t reject inactive users because &lt;a href=&quot;#django.contrib.auth.backends.ModelBackend.user_can_authenticate&quot;&gt;&lt;code&gt;user_can_authenticate()&lt;/code&gt;&lt;/a&gt; always returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42042ed1bcfb92aa3291eb755747eece5db1b53a" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.contrib.auth.backends.RemoteUserBackend&quot;&gt;&lt;code&gt;RemoteUserBackend&lt;/code&gt;&lt;/a&gt; except that it doesn&amp;rsquo;t reject inactive users because &lt;a href=&quot;#django.contrib.auth.backends.RemoteUserBackend.user_can_authenticate&quot;&gt;&lt;code&gt;user_can_authenticate&lt;/code&gt;&lt;/a&gt; always returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dbbd5a5d2eff0828553c7ef3aeacce53588e4c" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.contrib.auth.models.UserManager.create_user&quot;&gt;&lt;code&gt;create_user()&lt;/code&gt;&lt;/a&gt;, but sets &lt;a href=&quot;#django.contrib.auth.models.User.is_staff&quot;&gt;&lt;code&gt;is_staff&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
