<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="css">
    <body>
      <group id="css">
        <trans-unit id="2939fdc2157956b388dd2759b86f8544271defaf" translate="yes" xml:space="preserve">
          <source>The size of the gap between columns, defined as a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; property's value must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6761f7ce82b449c8a9c5c8478961aca720209490" translate="yes" xml:space="preserve">
          <source>The size of the gap between columns, defined as a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; property's value must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4931d5407c5205ef4ffb26f12b6e1b9c156f7ca4" translate="yes" xml:space="preserve">
          <source>The size of the margin area is determined by the &lt;a href=&quot;../margin-top&quot;&gt;&lt;code&gt;margin-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../margin-right&quot;&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../margin-bottom&quot;&gt;&lt;code&gt;margin-bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt;, and shorthand &lt;a href=&quot;../margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; properties. When &lt;a href=&quot;https://developer.mozilla.org/en/CSS/margin_collapsing&quot;&gt;margin collapsing&lt;/a&gt; occurs, the margin area is not clearly defined since margins are shared between boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd48748d02daf411fc5db50b5381c14270efe447" translate="yes" xml:space="preserve">
          <source>The size of the margin area is determined by the &lt;a href=&quot;margin-top&quot;&gt;&lt;code&gt;margin-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-right&quot;&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-bottom&quot;&gt;&lt;code&gt;margin-bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt;, and shorthand &lt;a href=&quot;margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; properties. When &lt;a href=&quot;https://developer.mozilla.org/en/CSS/margin_collapsing&quot;&gt;margin collapsing&lt;/a&gt; occurs, the margin area is not clearly defined since margins are shared between boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54af5be5bfaa76c988e691e4abb3911757759b1" translate="yes" xml:space="preserve">
          <source>The size of the margin as a fixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850cfedc6c64a6609b0a6ecf3d41d59cadb16682" translate="yes" xml:space="preserve">
          <source>The size of the margin as a percentage, relative to the &lt;em&gt;width&lt;/em&gt; of the containing block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933aaf4b0f6e695678b50756aa173bfe9ed34cf0" translate="yes" xml:space="preserve">
          <source>The size of the mask border outset as a dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf932bcdc6aff7b37c8cd46d6f461895e452ce64" translate="yes" xml:space="preserve">
          <source>The size of the mask border outset as a multiple of the corresponding &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2ce37fdb3ee7f150a4e102661bce7ca0c7a77b" translate="yes" xml:space="preserve">
          <source>The size of the padding as a fixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05ec8f3cb95e15eaab00f77e7081058672094aa" translate="yes" xml:space="preserve">
          <source>The size of the padding as a fixed value. Must be nonnegative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df29cc1b049d352d648db9ede50c3a4b424374e5" translate="yes" xml:space="preserve">
          <source>The size of the padding as a percentage, relative to the &lt;em&gt;width&lt;/em&gt; of the containing block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cf165a269cdad1853ca66110b0bf12b29be6c0" translate="yes" xml:space="preserve">
          <source>The size of the padding as a percentage, relative to the &lt;em&gt;width&lt;/em&gt; of the containing block. Must be nonnegative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a10b3cff3e8c3002524af1403b1d14864171a6a" translate="yes" xml:space="preserve">
          <source>The size of the padding as a percentage, relative to the width of the containing block. Must be nonnegative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61adc8a4c6b62b0cecc754585240a644b3fa12fc" translate="yes" xml:space="preserve">
          <source>The size of the spacing as a fixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e633e5aa8e65ec22f59ef6d0102cadc37adbb9c" translate="yes" xml:space="preserve">
          <source>The slicing process creates nine regions in total: four corners, four edges, and a middle region. Four slice lines, set a given distance from their respective sides, control the size of the regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c7861290579d2deb4f4a4da2227bd1b3a9ac67" translate="yes" xml:space="preserve">
          <source>The smallest allowed zoom factor. A zoom factor of 100% corresponds to no zooming. Larger values zoom in. Smaller values zoom out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65551fb8bb1d43dcfc477b89536352f1561c5906" translate="yes" xml:space="preserve">
          <source>The source image's edge regions are stretched to fill the gap between each border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303fe19dadffceb30e23a5d8611888b3ada4404d" translate="yes" xml:space="preserve">
          <source>The source image's edge regions are tiled (repeated) to fill the gap between each border. Extra space will be distributed in between tiles to achieve the proper fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5975e36904629d9cea4ef740f79c3186e5fef8" translate="yes" xml:space="preserve">
          <source>The source image's edge regions are tiled (repeated) to fill the gap between each border. Tiles may be clipped to achieve the proper fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2a37867119494fa3025c907de23b5926380add" translate="yes" xml:space="preserve">
          <source>The source image's edge regions are tiled (repeated) to fill the gap between each border. Tiles may be stretched to achieve the proper fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6654af6b3088b9b9e8d00c4223b6061ca5bb538d" translate="yes" xml:space="preserve">
          <source>The source image. See &lt;a href=&quot;border-image-source&quot;&gt;&lt;code&gt;border-image-source&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa19dbfa51d46fe06b886af32edfb8f5d4a42b0" translate="yes" xml:space="preserve">
          <source>The source image. See &lt;a href=&quot;mask-border-source&quot;&gt;&lt;code&gt;mask-border-source&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d81f0336dfb173c99dd021d2c29dfd2d68812b" translate="yes" xml:space="preserve">
          <source>The source is placed over the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75ea702b65843bacd43a6190ee1f3976de3a539" translate="yes" xml:space="preserve">
          <source>The source is placed, where it falls outside of the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a49388cfc3375cd50b517b63c0643b56f6cf860" translate="yes" xml:space="preserve">
          <source>The spec explains that margins between block elements &lt;em&gt;collapse&lt;/em&gt;. This means that if you have an element with a top margin immediately after an element with a bottom margin, rather than the total space being the sum of these two margins, the margin collapses, and so will essentially become as large as the larger of the two margins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7096ba598776c4f4aab083760ebbd5a1457bb835" translate="yes" xml:space="preserve">
          <source>The specific case of &lt;code&gt;inherit&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;unset&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd04c1bccf0d3a3a678aee1baa7ac6df26ff0b3" translate="yes" xml:space="preserve">
          <source>The specification defines &lt;code&gt;column-rule-width&lt;/code&gt;, &lt;code&gt;column-rule-style&lt;/code&gt; and &lt;code&gt;column-rule-color&lt;/code&gt;, providing a shorthand &lt;code&gt;column-rule&lt;/code&gt;. These properties work in exactly the same way as the &lt;code&gt;border&lt;/code&gt; properties: any valid &lt;code&gt;border-style&lt;/code&gt; can be used as a &lt;code&gt;column-rule-style&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68f3fa1f221ddb344f9b6150abd77246c4f0f4e" translate="yes" xml:space="preserve">
          <source>The specification defines the &lt;em&gt;inline base direction&lt;/em&gt; as the direction in which content is ordered on a line. This defines the start and end of the inline direction. The start is where sentences start and the end is where a line of text ends before it would begin to wrap onto a new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34da0dfca54f5409036e44ee29edfcf3c727ab3" translate="yes" xml:space="preserve">
          <source>The specification defines three new properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3de39d07b2ae16de0551fa2cf3796e5cd98bab" translate="yes" xml:space="preserve">
          <source>The specification details mappings for each logical value to a physical counterpart. In the table below I have given these mapped values assuming that the &lt;a href=&quot;../writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt; in use is &lt;code&gt;horizontal-tb&lt;/code&gt; &amp;mdash; with a left to right direction. The inline direction therefore runs horizontally &amp;mdash; left to right &amp;mdash; and &lt;a href=&quot;../margin-inline-start&quot;&gt;&lt;code&gt;margin-inline-start&lt;/code&gt;&lt;/a&gt; would be equivalent to &lt;a href=&quot;../margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86959258926784c57756952b2662f4284665d1b1" translate="yes" xml:space="preserve">
          <source>The specification details some alignment terminology to make it easier to discuss these alignment properties outside of their implementation within a particular layout method. There are also some key concepts which are common to all layout methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb89c8e161a09c60be6dcdc1ba01090dab917b6" translate="yes" xml:space="preserve">
          <source>The specification details that the default behavior in &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; is to stretch, except for items which have an intrinsic aspect ratio, in this case they behave as &lt;code&gt;start&lt;/code&gt;. The reason for this, is that if items with an aspect ratio are set to stretch, this default would distort them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fd3327313f1fbf151a21c17834e36c1febce30" translate="yes" xml:space="preserve">
          <source>The specification has fairly recently added flow-relative values for the &lt;a href=&quot;../border-radius&quot;&gt;&lt;code&gt;border-radius&lt;/code&gt;&lt;/a&gt; longhands. These have not yet been implemented by any browser. The below example, in a horizontal &lt;code&gt;writing-mode&lt;/code&gt;, would set the top-right border radius to 1em, the bottom-right to 0, the bottom-left to 20px and the top-left to 40px.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8b845921829312d57846828351783702af7f31" translate="yes" xml:space="preserve">
          <source>The specification makes a suggestion for the four-value shorthands such as the &lt;code&gt;margin&lt;/code&gt; property, however the final decision on how this should be indicated is as yet unresolved, and is discussed in &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/1282&quot;&gt;this issue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347570769003144f00e2d0dcd6c7a0011e58484d" translate="yes" xml:space="preserve">
          <source>The specification says that in this scenario, if box 1 really makes sense logically in that position, we should go back to our source and make the change there rather than reordering using grid layout. This is what is meant by visual versus logical reordering, logical ordering is important for the meaning and structure of our document, and we should make sure that we preserve that structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a82af5e74359e98654ee4f6597ce54e3834416" translate="yes" xml:space="preserve">
          <source>The specification warns authors (the CSSWG term for web developers) not to do this reordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c68e0075fe7551ecaab4bd04d1ece04f14c4016" translate="yes" xml:space="preserve">
          <source>The specified &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; is used in the calculation of the line box height. Values given in &lt;strong&gt;em&lt;/strong&gt; units may produce unexpected results (see example below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfdd9b8ed7f6dc94761199e6a95e58fa9dd45e8" translate="yes" xml:space="preserve">
          <source>The specified behavior of the &lt;code&gt;-ms-scroll-limit-x-max&lt;/code&gt; property is only applicable at a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/msContentZoomFactor&quot;&gt;&lt;code&gt;mscontentzoomfactor&lt;/code&gt;&lt;/a&gt; of 1; the behavior of this property is undefined at other zoom factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c040b16c03262d157ed6d0669da8b131220667bc" translate="yes" xml:space="preserve">
          <source>The specified behavior of the &lt;code&gt;-ms-scroll-limit-x-min&lt;/code&gt; property is only applicable at a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/msContentZoomFactor&quot;&gt;&lt;code&gt;mscontentzoomfactor&lt;/code&gt;&lt;/a&gt; of 1; the behavior of this property is undefined at other zoom factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee309bf78ef96ae705ee1e8af5e498f77a6fe8" translate="yes" xml:space="preserve">
          <source>The specified behavior of the &lt;code&gt;-ms-scroll-limit-y-max&lt;/code&gt; property is only applicable at a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/msContentZoomFactor&quot;&gt;&lt;code&gt;mscontentzoomfactor&lt;/code&gt;&lt;/a&gt; of 1; the behavior of this property is undefined at other zoom factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2724a6381fe8f6167002098be5433f3e221e8d34" translate="yes" xml:space="preserve">
          <source>The specified behavior of the &lt;code&gt;-ms-scroll-limit-y-min&lt;/code&gt; property is only applicable at a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/msContentZoomFactor&quot;&gt;&lt;code&gt;mscontentzoomfactor&lt;/code&gt;&lt;/a&gt; of 1; the behavior of this property is undefined at other zoom factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94848c98c7c028368e44619b4dff8ae6dc79f18" translate="yes" xml:space="preserve">
          <source>The specified behavior of the &lt;code&gt;-ms-scroll-limit&lt;/code&gt; property is only applicable at a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/msContentZoomFactor&quot;&gt;&lt;code&gt;mscontentzoomfactor&lt;/code&gt;&lt;/a&gt; of 1; the behavior of this property is undefined at other zoom factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dda7560bf2b92fde68165daa09099588459d03" translate="yes" xml:space="preserve">
          <source>The specified string will be used as the item's marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0f93350ee78a67d387c0dfd0f32fa0d940fe31" translate="yes" xml:space="preserve">
          <source>The specified value will impact the appearance of the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8349be72c525ecf43f4c0e5fb9d973937dc95c36" translate="yes" xml:space="preserve">
          <source>The stack level of the box in the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context&quot;&gt;stacking context&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7442e60522e1acad36c0882554b1977994e452d4" translate="yes" xml:space="preserve">
          <source>The stack won't consider this child when calculating its size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283ece71fd9017601992d1c57c122425da83735e" translate="yes" xml:space="preserve">
          <source>The stacking context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d60831d80ad0d19ead4e6b9e0d39fca967e93dd" translate="yes" xml:space="preserve">
          <source>The standard-compatible way to center a block itself without centering its inline content is setting the left and right &lt;a href=&quot;margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;auto&lt;/code&gt;, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b613e1fc34761f8778236e325f3c45a304ba19e" translate="yes" xml:space="preserve">
          <source>The start alignment of this box's scroll snap area, within the scroll container's snapport is a snap position in this axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e733aba89b2e59179ff6d823c20a19a589fcd15" translate="yes" xml:space="preserve">
          <source>The start and end of the text decoration is inset slightly (e.g., by half of the line thickness) from the content edge of the decorating box. Thus, adjacent elements receive separate underlines. (This is important in Chinese, where underlining is a form of punctuation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634c4a117c7d3a89bbd9d1e6d3c002b8909cf991" translate="yes" xml:space="preserve">
          <source>The start line will also change if you change the &lt;code&gt;flex-direction&lt;/code&gt; property &amp;mdash; for example using &lt;code&gt;row-reverse&lt;/code&gt; instead of &lt;code&gt;row&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe6fb6c73651b26b10039c2b2eacd2765eaf4f9" translate="yes" xml:space="preserve">
          <source>The steps() class of timing functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca1b5ff68f401458950167805f68080cc07a263" translate="yes" xml:space="preserve">
          <source>The strange order of values in the &lt;code&gt;grid-area&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46758abd1fab257de50364570cf45a54bf09f4d8" translate="yes" xml:space="preserve">
          <source>The sub-properties of the &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;animation&lt;/code&gt;&lt;/a&gt; property are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0294bed7dc9742350d80bc5a512b0edbce129d33" translate="yes" xml:space="preserve">
          <source>The supporting browsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0bd1618798804e42856815f90ae4b1ed661294" translate="yes" xml:space="preserve">
          <source>The syntax for loading variable fonts is very similar to any other web font, with a few notable differences, which are provided via upgrades to the traditional &lt;a href=&quot;../@font-face&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; syntax now available in modern browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a017df1556545f6f0f2dd3b1403d327e09ac1ea" translate="yes" xml:space="preserve">
          <source>The syntax for the rectangle is similar to the &lt;a href=&quot;shape#Syntax&quot;&gt;&lt;code&gt;rect()&lt;/code&gt;&lt;/a&gt; function generating a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;shape&amp;gt;()&amp;gt;&lt;/code&gt;&lt;/a&gt; CSS type. All four values are relative to the upper left corner of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75604d5b643eaa521c3391bf5c1b300c55798ecf" translate="yes" xml:space="preserve">
          <source>The syntax is similar to the &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;clip&lt;/code&gt;&lt;/a&gt; property. All four values are relative to the upper left corner of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aebc04dd78b619901158b206f81181b7e268f97" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt; is similar to CSS identifiers (such as property names), except that it is &lt;a href=&quot;http://en.wikipedia.org/wiki/Case_sensitivity&quot;&gt;case-sensitive&lt;/a&gt;. It consists of one or more characters, where characters can be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b4c66b51e73c69de146b9d1c1baee4220e46bd" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; extends the syntax of &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt;. A fractional value is represented by a &lt;code&gt;.&lt;/code&gt; followed by one or more decimal digits, and may be appended to an integer. There is no unit associated with numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add939f923f5c170d7d5d5d40c65c61b479d6673" translate="yes" xml:space="preserve">
          <source>The syntax of each layer is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c64b5b2fc8b1a7020afd6a1acce7850e4720f8" translate="yes" xml:space="preserve">
          <source>The system font used for captioned controls (e.g., buttons, drop-downs, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc60a75d3352b830c4d4c741541cc35e7e8f2c0" translate="yes" xml:space="preserve">
          <source>The system font used for labeling small controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15661824912bba0249bf49d6fa590a3c84955b59" translate="yes" xml:space="preserve">
          <source>The system font used in dialog boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd4c0d856694de606c10c9bf5af8f2480ad0660" translate="yes" xml:space="preserve">
          <source>The system font used in menus (e.g., dropdown menus and menu lists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff36bb24cc5a0c8b90583d07d6670b2b5fc816d0" translate="yes" xml:space="preserve">
          <source>The system font used in window status bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ad10aac396aedc729ba30001cb182c48cf26a0" translate="yes" xml:space="preserve">
          <source>The system font used to label icons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af05c5bd84f705fc6bd2fe918d3175cc7e551142" translate="yes" xml:space="preserve">
          <source>The table below demonstrates the effect of supplying various different percentage values of &lt;code&gt;font-stretch&lt;/code&gt; on two different fonts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65f070af5d5c1601b120107e598882a4cf953ae" translate="yes" xml:space="preserve">
          <source>The table below details the properties and values discussed in this guide along with their physical mappings. They assume a horizontal &lt;a href=&quot;../writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, with a left-to-right direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0d91a9a01ced5bccde2beb1e72a7f77fd81491" translate="yes" xml:space="preserve">
          <source>The table below provides mappings between logical and physical properties. These mappings assume that you are in a &lt;code&gt;horizontal-tb&lt;/code&gt; writing mode, such as English or Arabic, in which case &lt;a href=&quot;../width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; would be mapped to &lt;a href=&quot;../inline-size&quot;&gt;&lt;code&gt;inline-size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af0cb0ec8bacb4d0585a10f0d897bb0238b409d" translate="yes" xml:space="preserve">
          <source>The table below shows the mapping between keyword values and numeric percentages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c526013c8aa6eec9cb9241c9c90ebd2caeb43caf" translate="yes" xml:space="preserve">
          <source>The table cell or set of cells can be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f656a48e6fd5998c727e087c9300ce48b40b8620" translate="yes" xml:space="preserve">
          <source>The target will retain the computed values set by the last &lt;a href=&quot;@keyframes&quot;&gt;keyframe&lt;/a&gt; encountered during execution. The last keyframe depends on the value of &lt;a href=&quot;animation-direction&quot;&gt;&lt;code&gt;animation-direction&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;animation-iteration-count&quot;&gt;&lt;code&gt;animation-iteration-count&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc67fc565525f59d60d43232b89d433b76dd4648" translate="yes" xml:space="preserve">
          <source>The text blinks (alternates between visible and invisible). Conforming user agents may simply not blink the text. This value is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;a href=&quot;animation&quot;&gt;CSS animations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40679bd66a0c89a15da8eebf058007cc896efd7d" translate="yes" xml:space="preserve">
          <source>The text can be selected by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d25f00d7afd85f1d813bdaf97cfdb8696618223" translate="yes" xml:space="preserve">
          <source>The text can be selected. Typically the shape of an I-beam.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e4f8d9f6241e8c4361d2c1de549085ca0f5dc5" translate="yes" xml:space="preserve">
          <source>The text color of a button that the mouse pointer is over (which would be ButtonText when the mouse pointer is not over it). Should be used with the &lt;code&gt;-moz-ButtonHoverFace background&lt;/code&gt; color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7249db2f012f44f0637f42cd17a3a1f65d5d7a" translate="yes" xml:space="preserve">
          <source>The text decoration is skipped over the box's margin, border, and padding areas. This only has an effect on decorations imposed by an ancestor; a &lt;em&gt;decorating box&lt;/em&gt; never draws over its own box decoration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f361ac2a118a40b1de9f488b0dab7d0f8c0d5cb" translate="yes" xml:space="preserve">
          <source>The text in the span can be split into several lines as it is an inline box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104eff88a362c036d43dbf18e6683ee1129ff6c1" translate="yes" xml:space="preserve">
          <source>The text in the span cannot be split into several lines as it is an inline-block box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85deaf833aa69d1ff387c4f2623dc1724aa6bba0" translate="yes" xml:space="preserve">
          <source>The text is justified by adding space between characters (effectively varying &lt;a href=&quot;letter-spacing&quot;&gt;&lt;code&gt;letter-spacing&lt;/code&gt;&lt;/a&gt;), which is most appropriate for languages like Japanese.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a71cb71bca728d76a80b2cdc4010faad136214c" translate="yes" xml:space="preserve">
          <source>The text is justified by adding space between words (effectively varying &lt;a href=&quot;word-spacing&quot;&gt;&lt;code&gt;word-spacing&lt;/code&gt;&lt;/a&gt;), which is most appropriate for languages that separate words using spaces, like English or Korean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6e9f2fad3b31b38df5c1c4cc212316bd804c61" translate="yes" xml:space="preserve">
          <source>The text is justified. Text should line up their left and right edges to the left and right content edges of the paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d677af335c66343a3247a714d7d601f4571f47b" translate="yes" xml:space="preserve">
          <source>The text justification is turned off. This has the same effect as not setting &lt;a href=&quot;text-align&quot;&gt;&lt;code&gt;text-align&lt;/code&gt;&lt;/a&gt; at all, although it is useful if you need to turn justification on and off for some reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79a663ec294045b50bd16bbb29fd10c77e7604b" translate="yes" xml:space="preserve">
          <source>The text of the element and its sub-elements is not selectable. Note that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; object can contain these elements. Starting with Firefox 21, &lt;code&gt;none&lt;/code&gt; behaves like &lt;code&gt;-moz-none&lt;/code&gt;, so selection can be re-enabled on sub-elements using &lt;code&gt;-moz-user-select: text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0685904778908c0fb01bf431742f236330076f37" translate="yes" xml:space="preserve">
          <source>The text of the element and sub-elements will appear as if they cannot be selected. Note that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; object can contain these elements. Selection can be re-enabled on sub-elements using &lt;code&gt;-moz-user-select: text&lt;/code&gt;. Starting with Firefox 21, &lt;code&gt;none&lt;/code&gt; behaves like &lt;code&gt;-moz-none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1a83b3b8ed72dcd36a1c53f69e7d28578e6e52" translate="yes" xml:space="preserve">
          <source>The text that provides the interactive control's accessible name can be hidden using &lt;a href=&quot;https://gomakethings.com/hidden-content-for-better-a11y/#hiding-the-link&quot;&gt;a combination of properties&lt;/a&gt; that remove it visually from the screen but keep it parseable by assistive technology. This is commonly used for buttons that rely solely on an icon to convey purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0347d8451665813af719eee0074f5544dc719277" translate="yes" xml:space="preserve">
          <source>The thickness of the borders are determined by the &lt;a href=&quot;../border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt; and shorthand &lt;a href=&quot;../border&quot;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/a&gt; properties. If the &lt;a href=&quot;../box-sizing&quot;&gt;&lt;code&gt;box-sizing&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;border-box&lt;/code&gt;, the border area's size can be explicitly defined with the &lt;a href=&quot;../width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../max-width&quot;&gt;&lt;code&gt;max-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../max-height&quot;&gt;&lt;code&gt;max-height&lt;/code&gt;&lt;/a&gt; properties. When there is a background (&lt;a href=&quot;../background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;) set on a box, it extends to the outer edge of the border (i.e. extends underneath the border in z-ordering). This default behavior can be altered with the &lt;a href=&quot;../background-clip&quot;&gt;&lt;code&gt;background-clip&lt;/code&gt;&lt;/a&gt; css property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8597d67377b5c47b81f00a8840f01209f370af3" translate="yes" xml:space="preserve">
          <source>The thickness of the borders are determined by the &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt; and shorthand &lt;a href=&quot;border&quot;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/a&gt; properties. If the &lt;a href=&quot;box-sizing&quot;&gt;&lt;code&gt;box-sizing&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;border-box&lt;/code&gt;, the border area's size can be explicitly defined with the &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;max-width&quot;&gt;&lt;code&gt;max-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;max-height&quot;&gt;&lt;code&gt;max-height&lt;/code&gt;&lt;/a&gt; properties. When there is a background (&lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;) set on a box, it extends to the outer edge of the border (i.e. extends underneath the border in z-ordering). This default behavior can be altered with the &lt;a href=&quot;background-clip&quot;&gt;&lt;code&gt;background-clip&lt;/code&gt;&lt;/a&gt; css property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0b57917925cd4d391b8742e37b6d1a9b0d2bca" translate="yes" xml:space="preserve">
          <source>The thickness of the padding is determined by the &lt;a href=&quot;../padding-top&quot;&gt;&lt;code&gt;padding-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../padding-right&quot;&gt;&lt;code&gt;padding-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../padding-bottom&quot;&gt;&lt;code&gt;padding-bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../padding-left&quot;&gt;&lt;code&gt;padding-left&lt;/code&gt;&lt;/a&gt;, and shorthand &lt;a href=&quot;../padding&quot;&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dc6821a4e72c408fe442c27a757aba23e4364d" translate="yes" xml:space="preserve">
          <source>The thickness of the padding is determined by the &lt;a href=&quot;padding-top&quot;&gt;&lt;code&gt;padding-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-right&quot;&gt;&lt;code&gt;padding-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-bottom&quot;&gt;&lt;code&gt;padding-bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-left&quot;&gt;&lt;code&gt;padding-left&lt;/code&gt;&lt;/a&gt;, and shorthand &lt;a href=&quot;padding&quot;&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb76143046efc94e84bfd8201678a023dcb198d3" translate="yes" xml:space="preserve">
          <source>The third rule selects any links within an element with the class &lt;code&gt;my-class-2&lt;/code&gt; and sets their color to &lt;code&gt;initial&lt;/code&gt;. Usually, the initial value set by browsers for the text color is black, so this link is set to black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9e6f92d642efb4870554a371ee6547878d5fc1" translate="yes" xml:space="preserve">
          <source>The third value must be a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;. It always represents the Z offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee5f338c498e464e9bf185091e0520bdcf0da81" translate="yes" xml:space="preserve">
          <source>The three values of the shorthand property can be specified in any order, and one or two of them may be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0291e3eb2f1ecc738c8f38bab19ecf3e6709c47c" translate="yes" xml:space="preserve">
          <source>The three-column layout has two &lt;code&gt;1fr&lt;/code&gt; unit side columns and a middle column that has &lt;code&gt;4fr&lt;/code&gt; as the track size. This means that the available space in the container is split into 6 and assigned in proportion to our three tracks &amp;ndash; one part each to the side columns and 4 parts to the center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2fb48eb31616c3951d92d9f869bc238625cf25" translate="yes" xml:space="preserve">
          <source>The time offset, from the moment at which the animation is applied to the element, at which the animation should begin. This may be specified in either seconds (&lt;code&gt;s&lt;/code&gt;) or milliseconds (&lt;code&gt;ms&lt;/code&gt;). The unit is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cce45fc8cacc7235e82ae1ec6332b027def402" translate="yes" xml:space="preserve">
          <source>The timing function that corresponds to a given animation, as determined by &lt;a href=&quot;animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f0cec452f373a52f4293771b6e7bd8aed0fb1c" translate="yes" xml:space="preserve">
          <source>The top and bottom halves of the scissors would appear in the top left of the canvas were they not positioned along the starting point of the motion path defined by &lt;code&gt;offset-path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5720fb8867d5fa6f0b1d9411352444fff45fc05" translate="yes" xml:space="preserve">
          <source>The top and bottom margins have no effect on &lt;em&gt;non-&lt;a href=&quot;replaced_element&quot;&gt;replaced&lt;/a&gt;&lt;/em&gt; inline elements, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code&quot;&gt;&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587621fe963908f3f54a7ed37de355dc7351ebdc" translate="yes" xml:space="preserve">
          <source>The top edge, specified as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;, of the sub-image within the specified image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70095d605aba78dc1cc4ad4362f7629dadefbfb5" translate="yes" xml:space="preserve">
          <source>The track is the element of a scroll bar on which the scroll box can slide either up and down or left and right. The scroll box is the rectangular box within a scroll bar that can be moved either up and down or left and right on a track to change the position of the content on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e31dfd2e9544b6ba384abf06c96261a1b78446" translate="yes" xml:space="preserve">
          <source>The transformation origin is the point around which a transformation is applied. For example, the transformation origin of the &lt;code&gt;&lt;a href=&quot;transform-function/rotate&quot;&gt;rotate()&lt;/a&gt;&lt;/code&gt; function is the center of rotation. (This property is applied by first translating the element by the negated value of the property, then applying the element's transform, then translating by the property value.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c164b2edaa333fd5ba9a60763506b6b10603036" translate="yes" xml:space="preserve">
          <source>The two CSS declarations &lt;code&gt;column-width:8em&lt;/code&gt; and &lt;code&gt;column-count:12&lt;/code&gt; can be replaced by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254aa1e92ebbe2f44943af7f5b94208b411b0685" translate="yes" xml:space="preserve">
          <source>The two axes of a grid layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562737ddc4946c8a2cb2ceae70aa100ee055a11b" translate="yes" xml:space="preserve">
          <source>The two axes of flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079278e044602cdbad3c0cd2af9111cef36fcb3a" translate="yes" xml:space="preserve">
          <source>The two boxes look like this in the end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadb508ef6ed040e4b006f6214e8fa2a7b7417e5" translate="yes" xml:space="preserve">
          <source>The two properties can also be expressed as a shorthand, &lt;a href=&quot;../grid-gap&quot;&gt;&lt;code&gt;grid-gap&lt;/code&gt;&lt;/a&gt;. If you only give one value for &lt;code&gt;grid-gap&lt;/code&gt; it will apply to both column and row gaps. If you specify two values, the first is used for &lt;code&gt;grid-row-gap&lt;/code&gt; and the second for &lt;code&gt;grid-column-gap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f96dedcb105c0fd75eee790f4b5ff48c8ca4fd" translate="yes" xml:space="preserve">
          <source>The two shorthands for the grid container are the Explicit Grid Shorthand &lt;code&gt;grid-template&lt;/code&gt; and the Grid Definition Shorthand &lt;code&gt;grid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f728c4dedc7044e501e9eef7a0b71215b78e05" translate="yes" xml:space="preserve">
          <source>The type of box: inline, inline-level, atomic inline-level, block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1e712211ea964825af943eb99be490e3a80149" translate="yes" xml:space="preserve">
          <source>The uniform color of the background. It is rendered behind any &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt; that is specified, although the color will still be visible through any transparency in the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de11abcc71e2742527ce967bda89c546c9c4b1e3" translate="yes" xml:space="preserve">
          <source>The universal shorthand property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec398e8ec001049a8e59d3e95ae385d8d96033f8" translate="yes" xml:space="preserve">
          <source>The url &lt;code&gt;about:invalid&lt;/code&gt; that points to a non-existent document with a generic error condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c235f8cf200acaf68ef92675c71d056fef85f164" translate="yes" xml:space="preserve">
          <source>The use of this property is not recommended. A proper &lt;code&gt;alt&lt;/code&gt; attribute should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff607c935c4169711d24cdd868565acb2364355" translate="yes" xml:space="preserve">
          <source>The used value is calculated from the other CSS descriptors' values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83383ed7396bc0327fe735be49a071e65ac6c842" translate="yes" xml:space="preserve">
          <source>The used value is this unitless &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; multiplied by the element's own font size. The computed value is the same as the specified &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;. In most cases, &lt;strong&gt;this is the preferred way&lt;/strong&gt; to set &lt;code&gt;line-height&lt;/code&gt; and avoid unexpected results due to inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a815d80c7beba20161d6bdf34e95acdddaad2039" translate="yes" xml:space="preserve">
          <source>The user (or reader) of the web site can choose to override styles in many browsers using a custom &lt;strong&gt;user stylesheet&lt;/strong&gt; designed to tailor the experience to the user's wishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0449d5a122d2c113fd3f49626613429509b64f8b" translate="yes" xml:space="preserve">
          <source>The user agent decides the size of the page. In most cases, the dimensions and orientation of the target sheet are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b43fe967b8cb718620f83115a9322ea0365860" translate="yes" xml:space="preserve">
          <source>The user agent is allowed to make adjustments to the element as it deems appropriate and prudent in order to optimize the output for the device it's being rendered for. For example, when printing, a browser might opt to leave out all background images and to adjust text colors to be sure the contrast is optimized for reading on white paper. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00013cc9a05fd634d8538236662c90f3978d3a2f" translate="yes" xml:space="preserve">
          <source>The user agent selects an appropriate color for the caret. This is generally &lt;a href=&quot;color_value#currentcolor_keyword&quot;&gt;&lt;code&gt;currentcolor&lt;/code&gt;&lt;/a&gt;, but the user agent may choose a different color to ensure good visibility and contrast with the surrounding content, taking into account the value of &lt;code&gt;currentcolor&lt;/code&gt;, the background, shadows, and other factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0b0852d1e4b6fbda0f867b9a1e5f9a3dd51388" translate="yes" xml:space="preserve">
          <source>The user agent selects the appropriate special styling based on the element. Acts as &lt;code&gt;none&lt;/code&gt; on elements with no special styling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2099ce1dc5d0efe4f2d73e50e323e3ce39bb95" translate="yes" xml:space="preserve">
          <source>The user agent will generate a counter representation as normal and would read it out letter by letter. If the user agent doesn't know how to read out a partiular counter symbol, the user agent might read it out as if the value of &lt;code&gt;speak-as&lt;/code&gt; was &lt;code&gt;numbers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8528479bc487afc0b88f00c036554e0c21c35fe1" translate="yes" xml:space="preserve">
          <source>The user agent will generate a counter value as normal and read it out as a word in the document language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1447630a0381c9b29b904c6b6982265282ee097" translate="yes" xml:space="preserve">
          <source>The user agent will set the document's orientation automatically, typically based on the device's orientation as determined by an accelerometer (if the device has such a hardware sensor), although there is often a user-controlled, OS-level &quot;Lock orientation&quot; setting that will trump the accelerometer reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f6205217a3c01a7f76d7f0c467e60e291ef99a" translate="yes" xml:space="preserve">
          <source>The user can engage this state by checking/selecting an element, or disengage it by unchecking/deselecting the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796b651a734629f12ee4861096499f993e0133c1" translate="yes" xml:space="preserve">
          <source>The user can zoom in or out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15e477f2afa2bce5c3641cfb95ca7e2254f01de" translate="yes" xml:space="preserve">
          <source>The user cannot zoom in or out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ea51af71fdd42ca2cf9a8df8a19cb63635fc20" translate="yes" xml:space="preserve">
          <source>The user is able to edit the content, but not to read it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d34d7535b2ae9cb25f498b22db70d3ad42d738" translate="yes" xml:space="preserve">
          <source>The user is able to read and write contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5494d94f383573e360aa2a51ed970ce726dfb62" translate="yes" xml:space="preserve">
          <source>The user is on the Windows 10 operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de1247816de1b0c102cf9e1e96e110a082f94d9" translate="yes" xml:space="preserve">
          <source>The user is on the Windows 7 operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fad748c5a90cc39d9375de0c744880fb432b73" translate="yes" xml:space="preserve">
          <source>The user is on the Windows 8 operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c13cc89b2f8873262abdfdc5d638acb7289be5" translate="yes" xml:space="preserve">
          <source>The user prefers less motion on the page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29109a45b352fb3c092d43435ab6a5d4cd947cbc" translate="yes" xml:space="preserve">
          <source>The user prefers reduced transparency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95481b6ad5150af1ad4724b18a599243b6bf199b" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;circle(50%)&lt;/code&gt; is an example of a Basic Shape. The specification defines four &lt;code&gt;&amp;lt;basic-shape&amp;gt;&lt;/code&gt; values, which are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcd52ad553b56cdbf2c1f0d993607f23a0f2459" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;horizontal-tb&lt;/code&gt; is the default for text on the web. It is the direction in which you are reading this guide. The other properties will change the way that text flows in our document, matching the different writing modes found around the world. Again, for full details of these see &lt;a href=&quot;https://24ways.org/2016/css-writing-modes/&quot;&gt;Jen&amp;rsquo;s article&lt;/a&gt;. As a simple example, I have two paragraphs below. The first uses the default &lt;code&gt;horizontal-tb&lt;/code&gt;, and the second uses &lt;code&gt;vertical-rl&lt;/code&gt;. In the mode text still runs left to right, however the direction of the text is vertical - inline text now runs down the page, from top to bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a00a5dad065bc1469cff3ba016861a2019f0a66" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;vertical-rl&lt;/code&gt; gives you a right-to-left block flow direction with a vertical inline direction, as shown in the next example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522ad9da1e5df7becd46bfa46846d3c222c2eb9f" translate="yes" xml:space="preserve">
          <source>The value can now be negative, in which case it computes to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe3680441b7741572a65f8acc8352243fb445e7" translate="yes" xml:space="preserve">
          <source>The value given by the &lt;code&gt;charset&lt;/code&gt; attribute of the &lt;code&gt;Content-Type:&lt;/code&gt; HTTP header or the equivalent in the protocol used to serve the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610999dfb94029d234ff5e47d568f95c929cabf0" translate="yes" xml:space="preserve">
          <source>The value is a positive integer. The two keywords &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;off&lt;/code&gt; are synonyms for &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; respectively. If no value is set, the default is &lt;code&gt;1&lt;/code&gt;. For non-Boolean OpenType features (e.g. &lt;a href=&quot;http://www.microsoft.com/typography/otspec/features_pt.htm#salt&quot;&gt;stylistic alternates&lt;/a&gt;), the value implies a particular glyph to be selected; for Boolean values, it is a switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a62fd5bb9735698b39377ba9e8e2ca77129e27" translate="yes" xml:space="preserve">
          <source>The value must be a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;, or one of the keywords &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, and &lt;code&gt;bottom&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffbf4ca128680b459a5e8a7f5e1d741165f01f9" translate="yes" xml:space="preserve">
          <source>The value name of &lt;code&gt;flow-root&lt;/code&gt; makes sense when you understand you are creating something that acts like the &lt;code&gt;root&lt;/code&gt; element (&lt;code&gt;html&lt;/code&gt;) in terms of how it creates a new context for the flow layout inside it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df82f803b93bf779656f9b8dc8a3da7bf4932211" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;../grid-template-areas&quot;&gt;&lt;code&gt;grid-template-areas&lt;/code&gt;&lt;/a&gt; must show a complete grid, otherwise it is invalid (and the property is ignored). This means that you must have the same number of cells for each row, if empty with a full stop character demonstrating that the cell is to be left empty. You will also create an invalid grid if your areas are not rectangular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d57277c1fc301970ebd235fb464887caaad2664" translate="yes" xml:space="preserve">
          <source>The value of a &lt;a href=&quot;css_lists_and_counters/using_css_counters&quot;&gt;CSS counter&lt;/a&gt;, generally a number. It can be displayed using either the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counter()&quot;&gt;&lt;code&gt;counter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counters()&quot;&gt;&lt;code&gt;counters()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9415ff428b53b487841318175ce35ca389d989" translate="yes" xml:space="preserve">
          <source>The value of a counter can be displayed using either the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counter()&quot;&gt;&lt;code&gt;counter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counters()&quot;&gt;&lt;code&gt;counters()&lt;/code&gt;&lt;/a&gt; function in a &lt;a href=&quot;../content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa426648896098f051f4cf3c48908a2375eab87" translate="yes" xml:space="preserve">
          <source>The value of a counter can be displayed using either the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counter()&quot;&gt;&lt;code&gt;counter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counters()&quot;&gt;&lt;code&gt;counters()&lt;/code&gt;&lt;/a&gt; function in a &lt;a href=&quot;content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b070a8bd172e85659a33eb1a8b71ceb19ba3de41" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-limit-x-max&quot;&gt;&lt;code&gt;-ms-scroll-limit-x-max&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cd1c044ed6404715898caf0624e253eb3f8abb" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-limit-x-min&quot;&gt;&lt;code&gt;-ms-scroll-limit-x-min&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afc056f50470a4d6accf0f896334197cd170a69" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-limit-y-max&quot;&gt;&lt;code&gt;-ms-scroll-limit-y-max&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9068e4e7529df0c7d570e1a3ee2e30a1e8bb73" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-limit-y-min&quot;&gt;&lt;code&gt;-ms-scroll-limit-y-min&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce0172d050a72e51bd22289db426633c2557e3d" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-snap-points-x&quot;&gt;&lt;code&gt;-ms-scroll-snap-points-x&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8487f73266f9174893b005115b85824d8f13f3" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-snap-points-y&quot;&gt;&lt;code&gt;-ms-scroll-snap-points-y&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f983efd00a5150e63d963addbb88377c00ff3fe" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;-ms-scroll-snap-type&quot;&gt;&lt;code&gt;-ms-scroll-snap-type&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f38252cead2606a336e063028614f3f3d662f6" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Unicode byte-order&lt;/a&gt; character placed at the beginning of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194b3d32bee5296a2e0c38da733943c122cadc89" translate="yes" xml:space="preserve">
          <source>The value of the element's attribute &lt;code&gt;x&lt;/code&gt; as a string. If there is no attribute &lt;code&gt;x&lt;/code&gt;, an empty string is returned. The case-sensitivity of attribute names depends on the document language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b59cd6475e95ce01fe52e1466b02826aecc20e" translate="yes" xml:space="preserve">
          <source>The value of this property is overridden by any declaration of the &lt;a href=&quot;background&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;background-position&quot;&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt; shorthand properties applied to the element after it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c569a2a3beacdfdae4e591d1a4e18a08f87b8fa" translate="yes" xml:space="preserve">
          <source>The value to add to the counter. Defaults to &lt;code&gt;1&lt;/code&gt; if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ee4c365154d8518b07f6c7eeb8169e4521e924" translate="yes" xml:space="preserve">
          <source>The value to be used if the associated attribute is missing or contains an invalid value. The fallback value must be valid where &lt;code&gt;attr()&lt;/code&gt; is used, even if it is not used, and must not contain another &lt;code&gt;attr()&lt;/code&gt; expression. If &lt;code&gt;attr()&lt;/code&gt; is not the sole component value of a property, its &lt;code&gt;&amp;lt;fallback&amp;gt;&lt;/code&gt; value must be of the type defined by &lt;code&gt;&amp;lt;type-or-unit&amp;gt;&lt;/code&gt;. If not set, CSS will use the default value defined for each &lt;code&gt;&amp;lt;type-or-unit&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503ae5f64c9bf846100a9fa7a248fc5f50c1ef6b" translate="yes" xml:space="preserve">
          <source>The value to reset the counter to on each occurrence of the element. Defaults to &lt;code&gt;0&lt;/code&gt; if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c451b1015e23ba4d9ffba09225ce796f97d7eb6e" translate="yes" xml:space="preserve">
          <source>The value used is the value of the &lt;code&gt;justify-items&lt;/code&gt; property of the parents box, unless the box has no parent, or is absolutely positioned, in these cases, &lt;code&gt;auto&lt;/code&gt; represents &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04578079f6ad7765e3309c5d855365744c6fa2f5" translate="yes" xml:space="preserve">
          <source>The values &lt;code&gt;avoid&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, and &lt;code&gt;right&lt;/code&gt; are unsupported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad4d414032138a8076ad8405ddcd65d20a38cd5" translate="yes" xml:space="preserve">
          <source>The values &lt;code&gt;to top&lt;/code&gt;, &lt;code&gt;to bottom&lt;/code&gt;, &lt;code&gt;to left&lt;/code&gt;, and &lt;code&gt;to right&lt;/code&gt; are equivalent to the angles &lt;code&gt;0deg&lt;/code&gt;, &lt;code&gt;180deg&lt;/code&gt;, &lt;code&gt;270deg&lt;/code&gt;, and &lt;code&gt;90deg&lt;/code&gt; respectively. The other values are translated into an angle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1384bba098cebb6a48a5ba93b9dfa2305fc0391a" translate="yes" xml:space="preserve">
          <source>The values can be set individually as &lt;a href=&quot;margin-block-start&quot;&gt;&lt;code&gt;margin-block-start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;margin-block-end&quot;&gt;&lt;code&gt;margin-block-end&lt;/code&gt;&lt;/a&gt;. The inline direction property is &lt;a href=&quot;margin-inline&quot;&gt;&lt;code&gt;margin-inline&lt;/code&gt;&lt;/a&gt; which sets &lt;a href=&quot;margin-inline-start&quot;&gt;&lt;code&gt;margin-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-inline-end&quot;&gt;&lt;code&gt;margin-inline-end&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc45aa0f3f336909616470ed18ed3f85bffcc3af" translate="yes" xml:space="preserve">
          <source>The values can be set individually as &lt;a href=&quot;margin-inline-start&quot;&gt;&lt;code&gt;margin-inline-start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;margin-inline-end&quot;&gt;&lt;code&gt;margin-inline-end&lt;/code&gt;&lt;/a&gt;. The block direction property is &lt;a href=&quot;margin-block&quot;&gt;&lt;code&gt;margin-block&lt;/code&gt;&lt;/a&gt; which sets &lt;a href=&quot;margin-block-start&quot;&gt;&lt;code&gt;margin-block-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-block-end&quot;&gt;&lt;code&gt;margin-block-end&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751629cc8c01a344278fbeaf1218f2fa77b6de46" translate="yes" xml:space="preserve">
          <source>The values can be set individually as &lt;a href=&quot;padding-block-start&quot;&gt;&lt;code&gt;padding-block-start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;padding-block-end&quot;&gt;&lt;code&gt;padding-block-end&lt;/code&gt;&lt;/a&gt;. The inline direction property is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline&quot;&gt;&lt;code&gt;padding-inline&lt;/code&gt;&lt;/a&gt; which sets &lt;a href=&quot;padding-inline-start&quot;&gt;&lt;code&gt;padding-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-inline-end&quot;&gt;&lt;code&gt;padding-inline-end&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64be3fae6ea8996494a3a09282d2b0e8fcb30242" translate="yes" xml:space="preserve">
          <source>The values can be set individually as &lt;a href=&quot;padding-inline-start&quot;&gt;&lt;code&gt;padding-inline-start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;padding-inline-end&quot;&gt;&lt;code&gt;padding-inline-end&lt;/code&gt;&lt;/a&gt;. The block direction property is &lt;a href=&quot;padding-block&quot;&gt;&lt;code&gt;padding-block&lt;/code&gt;&lt;/a&gt; which sets &lt;a href=&quot;padding-block-start&quot;&gt;&lt;code&gt;padding-block-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-block-end&quot;&gt;&lt;code&gt;padding-block-end&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2fdfd13d046a0975750dc0f1c4986eefc2d75d" translate="yes" xml:space="preserve">
          <source>The values in a &lt;code&gt;&amp;lt;basic-shape&amp;gt;&lt;/code&gt; function are computed as specified, with these exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76d4b26dc289c67be6601bde027586ed04476b7" translate="yes" xml:space="preserve">
          <source>The values listed above correspond to the various parts of the CSS Box Model. A box in CSS has content, padding, border, and margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdbf7227bd146e545c881d9df0ee080386eb578" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;writing-mode&lt;/code&gt; affect the mapping of &lt;code&gt;max-block-size&lt;/code&gt; to &lt;code&gt;max-width&lt;/code&gt; or &lt;code&gt;max-height&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dc20398ee4a352631bea57dfcf9489b7dc7fff" translate="yes" xml:space="preserve">
          <source>The values provided to the &lt;code&gt;url()&lt;/code&gt;, &lt;code&gt;url-prefix()&lt;/code&gt;, &lt;code&gt;domain()&lt;/code&gt;, and &lt;code&gt;media-document()&lt;/code&gt; functions can be optionally enclosed by single or double quotes. The values provided to the &lt;code&gt;regexp()&lt;/code&gt; function &lt;em&gt;must&lt;/em&gt; be enclosed in quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1068b0cd9c2d4cf65e90bc4ba29d3330c6726b6" translate="yes" xml:space="preserve">
          <source>The vertical margins of two adjacent boxes may fuse. This is called &lt;a href=&quot;margin_collapsing&quot;&gt;&lt;em&gt;margin collapsing&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983a6685c8cf9de9d55b339c14d051590dc14b29" translate="yes" xml:space="preserve">
          <source>The vertical text can be selected. Typically the shape of a sideways I-beam.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dbe64da994ec27da77767e0dc1725351de78ee" translate="yes" xml:space="preserve">
          <source>The vertical-align property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af84e4ed475e30862988ba5a35b13bacbb3b6b2a" translate="yes" xml:space="preserve">
          <source>The vertical-align property can be used in two contexts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a2eb170a545f7c07bf28fe815c76e9d7348d64" translate="yes" xml:space="preserve">
          <source>The viewport is in a landscape orientation, i.e., the width is greater than the height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c4d770d6ba5f5d15067ebd44bc8bfdfdf34ab8" translate="yes" xml:space="preserve">
          <source>The viewport is in a portrait orientation, i.e., the height is greater than or equal to the width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fc8e8d3885776956977db9ae081a2e8dff8225" translate="yes" xml:space="preserve">
          <source>The viewport was originally 1200 x 800 pixles. Upon zooming in, the viewport became 800 x 533 pixels. This is the &lt;em&gt;layout viewport&lt;/em&gt;. Sticky headers or footers, with the follwing styles, will stick to the top and bottom of the &lt;em&gt;layout viewport&lt;/em&gt; respecitvely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602c0531cd27b1534b5c0ac7d3739ee1e56002cf" translate="yes" xml:space="preserve">
          <source>The visual formatting model transforms each element of the document and generates zero, one, or several boxes that conform to the &lt;a href=&quot;css_box_model/introduction_to_the_css_box_model&quot;&gt;CSS box model&lt;/a&gt;. The layout of each box is defined by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dc22a4658567d55a4c8547d27fc1fce8273eee" translate="yes" xml:space="preserve">
          <source>The visual viewport is the visual portion of a screen not including on-screen keyboards, areas outside of a pinch-zoom area, or other feature that doesn't scale with the dimensions of a page. The visual viewport is the same size as the layout viewport or smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750b00359d9eec9195f3b1a99b2a5314e4bacaff" translate="yes" xml:space="preserve">
          <source>The visual viewport of this scroll container may come to rest on a snap point if it isn't currently scrolled considering the user agent's scroll parameters. If content is added, moved, deleted or resized the scroll offset may be adjusted to maintain the resting on that snap point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fce0ed9b0b93d51e840cffe1c20a8ac9b704670" translate="yes" xml:space="preserve">
          <source>The visual viewport of this scroll container may come to rest on a snap point if it isn't currently scrolled horizontally considering the user agent's scroll parameters. If content is added, moved, deleted or resized the scroll offset may be adjusted to maintain the resting on that snap point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66731733edeade0ed5e91699e89f53b04566d87b" translate="yes" xml:space="preserve">
          <source>The visual viewport of this scroll container may come to rest on a snap point if it isn't currently scrolled vertically considering the user agent's scroll parameters. If content is added, moved, deleted or resized the scroll offset may be adjusted to maintain the resting on that snap point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c838f9fea2b779331fd886110eb7f06a65cc527" translate="yes" xml:space="preserve">
          <source>The visual viewport of this scroll container will rest on a snap point if it isn't currently scrolled horizontally. That means it snaps on that point when the scroll action finished, if possible. If content is added, moved, deleted or resized the scroll offset will be adjusted to maintain the resting on that snap point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f2afe4b0c5cd313af4cc0d17111e32534d2850" translate="yes" xml:space="preserve">
          <source>The visual viewport of this scroll container will rest on a snap point if it isn't currently scrolled vertically. That means it snaps on that point when the scroll action finished, if possible. If content is added, moved, deleted or resized the scroll offset will be adjusted to maintain the resting on that snap point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1050d7b93b4d875f1141ffad57ccde08b2701b54" translate="yes" xml:space="preserve">
          <source>The visual viewport of this scroll container will rest on a snap point if it isn't currently scrolled. That means it snaps on that point when the scroll action finished, if possible. If content is added, moved, deleted or resized the scroll offset will be adjusted to maintain the resting on that snap point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73166b3814800352ef3d112b3e46996bf3d78246" translate="yes" xml:space="preserve">
          <source>The web contains two viewports, the &lt;em&gt;layout viewport&lt;/em&gt; and the &lt;em&gt;visual viewport&lt;/em&gt;. The visual viewport is the part of the web page that is currently visible in browser, and can change. When the user pinch-zooms the page, pops open a dynamic keyboard, or when a previously hidden address bar becomes visible, the visual viewport shrinks but the layout viewport is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbfe439c014acebf1fef2e251835530c7d9d602" translate="yes" xml:space="preserve">
          <source>The width has no maximum value. (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc3b1739cdfcf78999bf0bd2502a734e22fe0a5" translate="yes" xml:space="preserve">
          <source>The width is set by the CSS to 150px. The &lt;code&gt;auto&lt;/code&gt; value for the height is computed using that width and the 1:1 aspect ratio to be 150px as well, resulting in the image above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c0fdc090f08f5f0c9471cb695e35ba3de870d" translate="yes" xml:space="preserve">
          <source>The width of a tab. Must be nonnegative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9589a5c8df337b5cb4ec1ad631318f65b50c1f" translate="yes" xml:space="preserve">
          <source>The width of the border image. Up to four values may be specified. See &lt;a href=&quot;border-image-width&quot;&gt;&lt;code&gt;border-image-width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5142dc55ef8bc696234df10a291d70de745c28" translate="yes" xml:space="preserve">
          <source>The width of the border is made equal to the intrinsic width or height (whichever is applicable) of the corresponding &lt;a href=&quot;border-image-slice&quot;&gt;&lt;code&gt;border-image-slice&lt;/code&gt;&lt;/a&gt;. If the image does not have the required intrinsic dimension, the corresponding &lt;code&gt;border-width&lt;/code&gt; is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5234769bcc18065c9d873fe0daf361836c0233d0" translate="yes" xml:space="preserve">
          <source>The width of the border mask. Up to four values may be specified. See &lt;a href=&quot;mask-border-width&quot;&gt;&lt;code&gt;mask-border-width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254c81ac93317c12d47f170f47a37bdc2f5b5b01" translate="yes" xml:space="preserve">
          <source>The width of the border, specified as a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;. Percentages are relative to the &lt;em&gt;width&lt;/em&gt; of the border image area for horizontal offsets and the &lt;em&gt;height&lt;/em&gt; of the border image area for vertical offsets. Must not be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e47f80730f1e0b898142c28f9535e8914a687e6" translate="yes" xml:space="preserve">
          <source>The width of the border, specified as a multiple of the corresponding &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt;. Must not be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2124619ed1bd4851cffb9c554f9139cb62d396" translate="yes" xml:space="preserve">
          <source>The width of the border. See &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b461c8e71109c58b26445856c082ce10c52f921" translate="yes" xml:space="preserve">
          <source>The width of the column is determined by other CSS properties, such as &lt;a href=&quot;column-count&quot;&gt;&lt;code&gt;column-count&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f189bf905e7a4f34a44c4ccf531b91496f1b24" translate="yes" xml:space="preserve">
          <source>The width of the mask border is made equal to the intrinsic width or height (whichever is applicable) of the corresponding &lt;a href=&quot;mask-border-slice&quot;&gt;&lt;code&gt;mask-border-slice&lt;/code&gt;&lt;/a&gt;. If the image does not have the required intrinsic dimension, the corresponding &lt;code&gt;border-width&lt;/code&gt; is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e8a262ad29d921b8cf6c7f15b4983ab3254cbb" translate="yes" xml:space="preserve">
          <source>The width of the mask border, specified as a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;. Percentages are relative to the &lt;em&gt;width&lt;/em&gt; of the border area for horizontal offsets and the &lt;em&gt;height&lt;/em&gt; of the border area for vertical offsets. Must not be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38344714a57bced1bc39a3b7245d90059981e31e" translate="yes" xml:space="preserve">
          <source>The width of the mask border, specified as a multiple of the corresponding &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt;. Must not be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac6a54f0585df6b7b89e35583e56bb04beba40e" translate="yes" xml:space="preserve">
          <source>The width of the outline specified as a &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0feca629ee89d816c4a14cf31340fdb93ef31b7c" translate="yes" xml:space="preserve">
          <source>The width of the space between the element and its outline. A negative value places the outline inside the element. A value of &lt;code&gt;0&lt;/code&gt; places the outline so that there is no space between it and the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3014aa8f297ce2d19f82f95191e68fcdb65ccd9" translate="yes" xml:space="preserve">
          <source>The width of the stroke.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb3b0f4a24f4d9943f7e10c4afbe3a8b3b42910" translate="yes" xml:space="preserve">
          <source>The width of the viewport is not always the width of the window. If you query the width or height of the window and document in Chrome or Firefox, you may get:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c955d45948c9b6770876a8a72165a007f497eca3" translate="yes" xml:space="preserve">
          <source>The window will have a shadow with the default window shadow style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128f224dfa0d36f0d77cc9a6670cf85c3e1e8757" translate="yes" xml:space="preserve">
          <source>The window will have the shadow style that's appropriate for menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cda108e4b32757ec089af3c1f45383315e568a" translate="yes" xml:space="preserve">
          <source>The window will have the shadow style that's appropriate for sheet windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce00ffd6137f1fd3272d7d781c3aab09ca6e458d" translate="yes" xml:space="preserve">
          <source>The window will have the shadow style that's appropriate for tooltips.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458309dd6dcf932e6a63d182a7a0e0027cd925fd" translate="yes" xml:space="preserve">
          <source>The window won't have a shadow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26afef633e566ba53dd7c3ade3be20972502820" translate="yes" xml:space="preserve">
          <source>The wrapping context of a box is a collection of exclusion areas contributed by its associated exclusion boxes. The inline flow content of a box is placed in the area that corresponds to the subtraction of its wrapping context from its own content area. For more information about exclusion elements' impact on content flow, see the &lt;a href=&quot;https://drafts.csswg.org/css-exclusions-1/#terms&quot;&gt;Terminology&lt;/a&gt; section of the CSS Exclusions Module Level 1 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b185de67c6d07e4d5d52703a5193b66207da98c0" translate="yes" xml:space="preserve">
          <source>The writing modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df03c5222f7f506cf4ae5737d2cb5fff5b74f27e" translate="yes" xml:space="preserve">
          <source>The writing modes &lt;code&gt;lr&lt;/code&gt;, &lt;code&gt;lr-tb&lt;/code&gt;, &lt;code&gt;rl&lt;/code&gt;, &lt;code&gt;rb&lt;/code&gt;, and &lt;code&gt;rb-tl&lt;/code&gt; are no longer allowed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML&quot;&gt;HTML&lt;/a&gt; contexts; they may only be used in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SVG&quot;&gt;SVG&lt;/a&gt; 1.x contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f02ade70ee149e95eb8ce16fdc158bca70ddf5" translate="yes" xml:space="preserve">
          <source>The writing modes specification defines the following values of the &lt;a href=&quot;../writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt; property, which serve to change the direction that blocks are laid out on the page, to match the direction that blocks lay out when content is formatted in that particular writing mode. You can change the live example below to these modes in order to see what happens to the flex layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d143b86e1cfa8cd2f7ca4c8932c65e50c2c831c" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;@counter-style&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en/CSS/At-rule&quot;&gt;at-rule&lt;/a&gt; lets you define counter styles that are not part of the predefined set of styles. A &lt;code&gt;@counter-style&lt;/code&gt; rule defines how to convert a counter value into a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1ac07d180e689b58b47468f8752a44c9cdb811" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;@viewport&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/CSS&quot;&gt;CSS&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en/CSS/At-rule&quot;&gt;at-rule&lt;/a&gt; lets you configure the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt; through which the document is viewed. It's primarily used for mobile devices, but is also used by desktop browsers that support features like &quot;snap to edge&quot; (such as Microsoft Edge).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9ba960a9c5bf3671112d40a1306b294e498f14" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-block-end-style&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the style of the logical block end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the &lt;a href=&quot;border-top-style&quot;&gt;&lt;code&gt;border-top-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-style&quot;&gt;&lt;code&gt;border-right-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-style&quot;&gt;&lt;code&gt;border-bottom-style&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-style&quot;&gt;&lt;code&gt;border-left-style&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aca1b406c219bb30da50c0248e254a154898fae" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-block-end&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; for setting the individual logical block-end border property values in a single place in the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffd81e700d14b7a9ffad2e2bf9987d37befe52a" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-block-start&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; for setting the individual logical block-start border property values in a single place in the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab06c09911535dc7d34f34ab96cfdbc37637a0e" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-block-style&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the &lt;a href=&quot;border-top-style&quot;&gt;&lt;code&gt;border-top-style&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;border-bottom-style&quot;&gt;&lt;code&gt;border-bottom-style&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-style&quot;&gt;&lt;code&gt;border-left-style&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;border-right-style&quot;&gt;&lt;code&gt;border-right-style&lt;/code&gt;&lt;/a&gt; properties depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6761c7d086c27f3943f4580f251eed370e346cda" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-block&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; for setting the individual logical block border property values in a single place in the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed4d8900b4f507fcd1e96c9c08128ff736cc5e7" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-bottom-left-radius&lt;/code&gt; CSS property rounds the bottom-left corner of an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697f0c4bc241ff20b83841d4a8cbb9ebb175d29e" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-inline-end-width&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the &lt;a href=&quot;border-top-width&quot;&gt;&lt;code&gt;border-top-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-width&quot;&gt;&lt;code&gt;border-right-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-width&quot;&gt;&lt;code&gt;border-bottom-width&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-width&quot;&gt;&lt;code&gt;border-left-width&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8089bdb27856ff778642c4babdb54e1726d5ceb2" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-inline-start&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; for setting the individual logical inline-start border property values in a single place in the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d1ac42b02dd5511cb21343c415e6448311bcb1" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-inline-style&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the &lt;a href=&quot;border-top-style&quot;&gt;&lt;code&gt;border-top-style&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;border-bottom-style&quot;&gt;&lt;code&gt;border-bottom-style&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-style&quot;&gt;&lt;code&gt;border-left-style&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;border-right-style&quot;&gt;&lt;code&gt;border-right-style&lt;/code&gt;&lt;/a&gt; properties depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9665686ee78c5d9a987cb5546aab376419efca" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;border-inline&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; for setting the individual logical inline border property values in a single place in the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17127e503df44b340761267c77fc42ba0fe1e4ce" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;break-before&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS&quot;&gt;CSS&lt;/a&gt; property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dce4ee032135fb60670eb1db1b0ba1db5526534" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;column-rule-color&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property sets the color of the rule (line) drawn between columns in a multi-column layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d6e002001fb21416adfbc494ad094a325e161e" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;font-style&lt;/code&gt; CSS property sets whether a font should be styled with a normal, italic, or oblique face from its &lt;a href=&quot;font-family&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98cb510c6b375214956987a3e92e91dadd31cbc" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;inset-block-end&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the logical block end offset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the &lt;a href=&quot;top&quot;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;right&quot;&gt;&lt;code&gt;right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bottom&quot;&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;left&quot;&gt;&lt;code&gt;left&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b59fad592f59c111c988b28c5c49f6cf8071f2" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;list-style-type&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property sets the marker (such as a disc, character, or custom counter style) of a list item element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb53ba63cfa3f88a4b2597e5a2ab4eb0dd73749" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;margin-inline-end&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the &lt;a href=&quot;margin-top&quot;&gt;&lt;code&gt;margin-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-right&quot;&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-bottom&quot;&gt;&lt;code&gt;margin-bottom&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae131ebd22d7bb6b6428932a9c3bf940620f856" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;min-height&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS&quot;&gt;CSS&lt;/a&gt; property sets the minimum height of an element. It prevents the &lt;a href=&quot;used_value&quot;&gt;used value&lt;/a&gt; of the &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; property from becoming smaller than the value specified for &lt;code&gt;min-height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3b1515f8a75551fa1bf9fe23341bc296cc7d04" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;overflow-x&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6084b7a8b1cd5ddfd7eec454f0e53db5ad30730c" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;padding-inline-start&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation. It corresponds to the &lt;a href=&quot;padding-top&quot;&gt;&lt;code&gt;padding-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-right&quot;&gt;&lt;code&gt;padding-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-bottom&quot;&gt;&lt;code&gt;padding-bottom&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;padding-left&quot;&gt;&lt;code&gt;padding-left&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aeef3bf14612f10ab261ad723fb5eafb4f2420d" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;padding-right&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/CSS&quot;&gt;CSS&lt;/a&gt; property sets the width of the &lt;a href=&quot;https://developer.mozilla.org/en/CSS/box_model#padding-area&quot;&gt;padding area&lt;/a&gt; on the right side of an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eccd3152615e356337caa105c385be1dcb01d33" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;page-break-inside&lt;/code&gt; CSS property adjusts page breaks &lt;em&gt;inside&lt;/em&gt; the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123fc854512d859d361da5c643e5819d606f0d5b" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;scroll-snap-coordinate&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container's &lt;a href=&quot;scroll-snap-destination&quot;&gt;&lt;code&gt;scroll-snap-destination&lt;/code&gt;&lt;/a&gt; for each respective axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9997b6112862a52e09dab79ee240aa6b3526b49f" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;shape-margin&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property specifies a margin for a CSS shape created using &lt;a href=&quot;shape-outside&quot;&gt;&lt;code&gt;shape-outside&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cc229c012bc47f4499aee42b6ab37e339d4148" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;text-align-last&lt;/code&gt; CSS property describes how the last line of a block or a line, right before a forced line break, is aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d80bc46c0cc615e40066dc65b51c4fadb8ff78" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;word-break&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property sets whether line breaks appear wherever the text would otherwise overflow its content box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d392bec2d1bd3ea7a54aa8b1cb9efb0c0cf3dbc9" translate="yes" xml:space="preserve">
          <source>The&lt;strong&gt; animation&lt;/strong&gt; is currently &lt;strong&gt;playing&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020bd6115d0021af1843dbef659ef8513028cb16" translate="yes" xml:space="preserve">
          <source>Then after &lt;code&gt;grid-template-areas&lt;/code&gt; we have a forward slash, after that is an explicit track listing of column tracks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6e8d93ad98ae628cae0af033600cba1565450c" translate="yes" xml:space="preserve">
          <source>Then it sorts these rules according to their importance, that is, whether or not they are followed by &lt;code&gt;!important&lt;/code&gt;, and by their origin. The cascade is in ascending order, which means that &lt;code&gt;!important&lt;/code&gt; values from a user-defined style sheet have precedence over normal values originated from a user-agent style sheet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee8e370d0d538ecfbb206e07c38d395d445480c" translate="yes" xml:space="preserve">
          <source>Then the four boxes defining the segments of the image are defined. Let's look at them one at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c447da0996322d897cd3b06c4c16ea5210d40de7" translate="yes" xml:space="preserve">
          <source>Then we apply this CSS to the same HTML, which looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61984efc9556cb5096e3bab1495882b04561ef96" translate="yes" xml:space="preserve">
          <source>Then we build the CSS to implement the look and feel of our menu. The relevant portions are shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca81a2c583d56a20eb0650b4e605255178ed0e23" translate="yes" xml:space="preserve">
          <source>Then we check if the CSS &lt;a href=&quot;../animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt; property on the style collection for the element specified by the variable &lt;code&gt;elem &lt;/code&gt;is set. This means the browser supports CSS animation without any prefix, which, to date, none of them do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10cf316071926c677a1a322f11363b47603321b" translate="yes" xml:space="preserve">
          <source>Then, &lt;code&gt;flex-basis:auto&lt;/code&gt; was changed to mean automatic sizing, and &quot;main-size&quot; was introduced as the &quot;look at my &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; property&quot; keyword. It was implemented in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1032922&quot;&gt;bug 1032922&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0436e752c2ffa7e24530efd52938046822504a" translate="yes" xml:space="preserve">
          <source>Then, layout is calculated, resulting in the &lt;a href=&quot;used_value&quot;&gt;used value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95b46086f63e7f01c787324a28fc4b387b4ee51" translate="yes" xml:space="preserve">
          <source>Then, that change was reverted in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1093316&quot;&gt;bug 1093316&lt;/a&gt;, so &lt;code&gt;auto&lt;/code&gt; once again means &quot;look at my &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; property&quot;; and a new &lt;code&gt;content&lt;/code&gt; keyword is being introduced to trigger automatic sizing. (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1105111&quot;&gt;bug 1105111&lt;/a&gt; covers adding that keyword).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d55649a94b18b653639db7aa25f850d52f61303" translate="yes" xml:space="preserve">
          <source>Then, the &lt;code&gt;translateZ()&lt;/code&gt; function moves the element 200 pixels &quot;outward&quot; from the screen, toward the user. This has the effect of making the element appear larger when viewed on a 2D display, or closer when viewed using a VR headset or other 3D display device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765bc5f59f6d75e02869fb93561d4b5ddc449057" translate="yes" xml:space="preserve">
          <source>There a huge number of possible features. You can see examples of a number of them above, and there are several resources available for finding more of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79bf09ec56ff2efaefa4a292857895b72d349de" translate="yes" xml:space="preserve">
          <source>There are a couple of things that often come up as questions. Currently we can&amp;rsquo;t do things like target every other cell of the grid with our items. A related issue may have already come to mind if you followed the last guide about named lines on the grid. It would be to define a rule that said &amp;ldquo;auto-place items against the next line named &amp;ldquo;n&amp;rdquo;, and grid would then skip other lines.There is &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/796&quot;&gt;an issue raised about this&lt;/a&gt; on the CSSWG GitHub repository, and you would be welcome to add your own use cases to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e25c3b178edab80d2fe16726462598a52af1f2" translate="yes" xml:space="preserve">
          <source>There are a few caveats to consider when using color keywords:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdeeac4e7051759cb1b4f7e6a3d99b480b78ce7" translate="yes" xml:space="preserve">
          <source>There are a few concepts worth digging into before looking at how the flex properties work to control ratios along the main axis. These relate to the &lt;em&gt;natural&lt;/em&gt; size of flex items before any growing or shrinking takes place, and to the concept of free space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938f76e31734a894435abe7b87e48e09bdf8518a" translate="yes" xml:space="preserve">
          <source>There are a few old articles in existence that refer to the older versions of flexbox, which are pretty easy to identify due to the change in the way that a flex container is created. If you find something referring to &lt;code&gt;display: box&lt;/code&gt; or &lt;code&gt;display: flexbox&lt;/code&gt; this is outdated information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f6d0a30355e0beee114ac6c59108330fbbb04d" translate="yes" xml:space="preserve">
          <source>There are a number of different features to consider. They are grouped and explained here according to the main attributes and options covered in the W3C specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578729250119efe6f59574249657d809511ff989" translate="yes" xml:space="preserve">
          <source>There are a number of reasons a browser might wish to deviate from the specified appearance, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e3c4cfa060ef6b496ee88f623050c15c457803" translate="yes" xml:space="preserve">
          <source>There are a number of ways to create these Shapes and in these guides we will find out how CSS Shapes work, and consider some ways you might like to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9507e59b22dd2f391b2a2748024a44d5e7fc15b" translate="yes" xml:space="preserve">
          <source>There are also mappings for &lt;a href=&quot;../min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt; &amp;mdash; these are &lt;a href=&quot;../min-inline-size&quot;&gt;&lt;code&gt;min-inline-size&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../min-block-size&quot;&gt;&lt;code&gt;min-block-size&lt;/code&gt;&lt;/a&gt;. These work in the same way as the &lt;code&gt;inline-size&lt;/code&gt; and &lt;code&gt;block-size&lt;/code&gt; properties, but setting a minimum rather than a fixed size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff04f9336cf6b2d922d1280e6ee58fed8b5f5f8e" translate="yes" xml:space="preserve">
          <source>There are also some additional shorthands, made possible because we have the ability to target both block or both inline edges of the box simultaneously. These shorthands have no physical equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f55eea05129464de31c659d2e46af967b1af22" translate="yes" xml:space="preserve">
          <source>There are also some predefined shorthand values which cover most of the use cases. You will often see these used in tutorials, and in many cases these are all you will need to use. The predefined values are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75154af22ad875800570f83a3e204fd9cf78c165" translate="yes" xml:space="preserve">
          <source>There are four standard coordinate systems used by the CSS object model, as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3343e9614a63add810d4dba3430b7fab0970c771" translate="yes" xml:space="preserve">
          <source>There are more than &lt;a href=&quot;index&quot;&gt;100 different properties&lt;/a&gt; in CSS and a nearly infinite number of different values. Not all pairs of properties and values are allowed and each property defines what are the valid values. When a value is not valid for a given property, the declaration is deemed &lt;em&gt;invalid&lt;/em&gt; and is wholly ignored by the CSS engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadf6455add95dcc367ca34a1e7bc835ff16c773" translate="yes" xml:space="preserve">
          <source>There are other values that control how overflow content behaves. To hide overflowing content use a value of &lt;code&gt;hidden&lt;/code&gt;. This may cause some of your content to not be visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cece39c6b421c6bb56502d81837abea135812715" translate="yes" xml:space="preserve">
          <source>There are several at-rules, designated by their identifiers, each with a different syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b311055c21b5ed98f37274b4e1a208a74810ba" translate="yes" xml:space="preserve">
          <source>There are several different styles of numerals commonly included in fonts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b5d430d456a2aac4194be1fa7a4c484cddc272" translate="yes" xml:space="preserve">
          <source>There are several examples of CSS transitions included in the main &lt;a href=&quot;css_transitions/using_css_transitions&quot;&gt;CSS transitions&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae362d2696a65d61800167810bd6c0592894f651" translate="yes" xml:space="preserve">
          <source>There are several more examples of CSS transitions included in the &lt;a href=&quot;css_transitions/using_css_transitions&quot;&gt;Using CSS transitions&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b65a6c73553345a46a92834dcd45a62c639cbf" translate="yes" xml:space="preserve">
          <source>There are several ways to specify the font size, including with keywords or numerical values for pixels or ems. Choose the appropriate method based on the needs for the particular web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52f365ba60aebdabfc398aacf604f3be79020a9" translate="yes" xml:space="preserve">
          <source>There are some cases &amp;mdash; like with &lt;a href=&quot;../font-variant-east-asian&quot;&gt;&lt;code&gt;font-variant-east-asian&lt;/code&gt;&lt;/a&gt; &amp;mdash; that OpenType features are directly tied to using different forms of certain glyphs, which can impact meaning and readability. In cases such as these it's more than just a nicety, but rather an integral part of the content itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfdc73a27b2dc63714b0d8ea3e7a7784bc06396" translate="yes" xml:space="preserve">
          <source>There are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elements popping up into the row above. With CSS Grid Layout, we can place things into rows, with no danger of them rising up into the row above if it is left empty. Due to this &lt;em&gt;strict&lt;/em&gt; column and row placement we can also easily leave white space in our layout. We also don&amp;rsquo;t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a388bc7b62b5830ab34b6dbda79a4e07daab40c" translate="yes" xml:space="preserve">
          <source>There are sometimes places where the fact that the logical and therefore reading order of flex items is separate from the visual order, is helpful. Used carefully the &lt;code&gt;order&lt;/code&gt; property can allow for some useful common patterns to be easily implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada81ffc001ea1f1106a41de24cca0aa43d5adf2" translate="yes" xml:space="preserve">
          <source>There are then a group of properties which do not have a direct mapping in terms of existing physical properties. These are shorthands made possible by the fact that we can refer to both edges of the block or inline dimension at once. An example would be &lt;a href=&quot;../margin-block&quot;&gt;&lt;code&gt;margin-block&lt;/code&gt;&lt;/a&gt;, which is a shorthand setting for &lt;a href=&quot;../margin-block-start&quot;&gt;&lt;code&gt;margin-block-start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../margin-block-end&quot;&gt;&lt;code&gt;margin-block-end&lt;/code&gt;&lt;/a&gt;. These currently have no browser support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620bf3762bd48ae3ee75b1af0bc126c86e923099" translate="yes" xml:space="preserve">
          <source>There are three different types of alignment that the specification details; these use keyword values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4503c8ccf590cd0aaabb58b5e4f805970040d48f" translate="yes" xml:space="preserve">
          <source>There are three key advantages to CSS animations over traditional script-driven animation techniques:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75dea8d79641cbb5d48735e20e1573d02fa64bf" translate="yes" xml:space="preserve">
          <source>There are two Unicode characters that can be used to manually specify potential line break points within text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2acd87dffcbb68267f3297d046f34954b9184f" translate="yes" xml:space="preserve">
          <source>There are two classes here. The &lt;code&gt;&quot;box&quot;&lt;/code&gt; class is the basic description of the box's appearance, without any animation information included. The animation details are included in the &lt;code&gt;&quot;changing&quot;&lt;/code&gt; class, which says that the &lt;a href=&quot;../@keyframes&quot;&gt;&lt;code&gt;@keyframes&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;&quot;colorchange&quot;&lt;/code&gt; should be used over the course of two seconds to animate the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcea35ad7fd35d384a6d1177978b46a5079ab6b8" translate="yes" xml:space="preserve">
          <source>There are two kinds of statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7565c656e3d70e46dfcb155eb937f26cee9beb49" translate="yes" xml:space="preserve">
          <source>There are two sub-cases of the normal flow: static positioning and relative positioning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c2ba0b8825d54e2722e8f6c5a641c3e5d44c71" translate="yes" xml:space="preserve">
          <source>There are two types of fractions supported through this property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbdcd72107a7b3d7d7abdcb43e616227ec6d03d" translate="yes" xml:space="preserve">
          <source>There are two-value shorthands to set the width, style and, color of the block or inline dimension, and two-value shorthands to set all three values in the block or inline dimension. The below code, in a horizontal writing mode, would give you a 2px green solid border on the top and bottom of the box, and a 4px dotted purple border on the left and right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1dbbc4587689fbaf9547c49bbfd722c246c1dc" translate="yes" xml:space="preserve">
          <source>There are various places we might want to control our breaks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15491adee46cd6b2466c2df302882ea7530f766a" translate="yes" xml:space="preserve">
          <source>There is a concept in CSS of &lt;a href=&quot;../width#min-content&quot;&gt;&lt;code&gt;min-content&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../width#max-content&quot;&gt;&lt;code&gt;max-content&lt;/code&gt;&lt;/a&gt; &amp;mdash; these keywords are &lt;a href=&quot;https://drafts.csswg.org/css-sizing-3/#width-height-keywords&quot;&gt;defined in the CSS Intrinsic and Extrinsic Sizing Specification&lt;/a&gt;, and can be used in place of a &lt;a href=&quot;../length&quot;&gt;length unit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62564f0fbca95fe287bfbeeb1132365c29ba04bd" translate="yes" xml:space="preserve">
          <source>There is a gap between columns. The recommended default is &lt;code&gt;1em&lt;/code&gt;. This size can be changed by applying the &lt;a href=&quot;../column-gap&quot;&gt;&lt;code&gt;column-gap&lt;/code&gt;&lt;/a&gt; property to the multi-column block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6be4c7606e0cd9fa17438fd43f0539fa1002f3" translate="yes" xml:space="preserve">
          <source>There is a mention in the specification of anonymous grid items. These are created if you have a string of text inside your grid container, that is not wrapped in any other element. In the example below we have three grid items, assuming you had set the parent with a class of &lt;code&gt;grid&lt;/code&gt; to &lt;code&gt;display: grid&lt;/code&gt;. The first is an anonymous item as it has no enclosing markup, this item will always be dealt with via the auto-placement rules. The other two are grid items enclosed in a div, they might be auto-placed or you could place these with a positioning method onto your grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f92daf4d08ba5e0e0d678f29dba8a96ffcf7f82" translate="yes" xml:space="preserve">
          <source>There is a new attribute, &lt;a href=&quot;../font-optical-sizing&quot;&gt;&lt;code&gt;font-optical-sizing&lt;/code&gt;&lt;/a&gt;, created to support variable fonts in CSS. When using &lt;code&gt;font-optical-sizing&lt;/code&gt;, the only allowed values are &lt;code&gt;auto&lt;/code&gt; or &lt;code&gt;none&lt;/code&gt; &amp;mdash; so this attribute only allows for turning optical sizing on or off. However when using &lt;code&gt;font-variation-settings: 'opsz'&amp;nbsp;&amp;lt;num&amp;gt;&lt;/code&gt;, you can supply a numeric value. In most cases you would want to match the &lt;code&gt;font-size&lt;/code&gt; (the physical size the type is being rendered) with the &lt;code&gt;opsz&lt;/code&gt; value (which is how optical sizing is intended to be applied when using &lt;code&gt;auto&lt;/code&gt;). The option to provide a specific value is provided so that should it be necessary to override the default &amp;mdash; for legibility, aesthetic, or some other reason &amp;mdash; a specific value can be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ef18ea76e4f145291777ec0a21ea019be1bf4f" translate="yes" xml:space="preserve">
          <source>There is a second value for balancing, &lt;code&gt;balance-all&lt;/code&gt;, which attempts to balance all columns in fragmented contexts and not just the columns on the final fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87d46076052f141ac6534be4add919951bec404" translate="yes" xml:space="preserve">
          <source>There is a specific use case in Flexbox where we might think that a &lt;code&gt;justify-self&lt;/code&gt; property is what we need, and this is when we want to split a set of flex items, perhaps to create a split navigation pattern. For this use case we can use an &lt;code&gt;auto&lt;/code&gt; margin. A margin set to &lt;code&gt;auto&lt;/code&gt; will absorb all available space in its dimension. This is how centering a block with auto margins works. By setting the left and right margin to &lt;code&gt;auto&lt;/code&gt;, both sides of our block try to take up all of the available space and so push the box into the centre.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d820861c314d391e876d0b294207a8a4f4c38e" translate="yes" xml:space="preserve">
          <source>There is also a proposal for a &lt;code&gt;block-overflow&lt;/code&gt; property, although at the time of writing the name is still up for discussion. This proposal would enable the adding of an ellipsis when text overflows in the block dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4331bba2c5af086b3ad6c6be09335fe7533c31ea" translate="yes" xml:space="preserve">
          <source>There is also the notion of spacing. Proportional spacing is the normal setting, whereas tabular spacing lines up numerals evenly regardless of character width, making it more appropriate for lining up tables of numbers in financial tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e09c251b460aaef67ebd7e2c10b659c78d6c58" translate="yes" xml:space="preserve">
          <source>There is another group of statements &amp;ndash; the &lt;strong&gt;nested statements&lt;/strong&gt;. These are statements that can be used in a specific subset of at-rules &amp;ndash; the &lt;em&gt;conditional group rules&lt;/em&gt;. These statements only apply if a specific condition is matched: the &lt;code&gt;@media&lt;/code&gt; at-rule content is applied only if the device on which the browser runs matches the expressed condition; the &lt;code&gt;@document&lt;/code&gt; at-rule content is applied only if the current page matches some conditions, and so on. In CSS1 and CSS2.1, only &lt;em&gt;rulesets&lt;/em&gt; could be used inside conditional group rules. That was very restrictive and this restriction was lifted in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS3#Conditionals&quot;&gt;&lt;em&gt;CSS Conditionals Level 3&lt;/em&gt;&lt;/a&gt;. Now, though still experimental and not supported by every browser, conditional group rules can contain a wider range of content: rulesets but also some, but not all, at-rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df73e7e96b1c2016ff9d9b2ba22e2907da0a435" translate="yes" xml:space="preserve">
          <source>There is no justify-self in Flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7baa5b496c70bc64da363f72130719990e13fb" translate="yes" xml:space="preserve">
          <source>There is no method in flexbox to tell items in one row to line up with items in the row above &amp;mdash; each flex line acts like a new flex container. It deals with space distribution across the main axis. If there is only one item, and that item is allowed to grow, it will fill the axis just as if you had a single item flex container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19029e7a041ad5baab7cde6deacc534c6b94f4f7" translate="yes" xml:space="preserve">
          <source>There is no practical initial value for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7ea2ca83c83a896d63dfd07eb98fa2b9360841" translate="yes" xml:space="preserve">
          <source>There is no practical media for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5246b3b1b60adbdceb65c4ce3db632cfb8946bf0" translate="yes" xml:space="preserve">
          <source>There is no special processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dcd0b9a628dcb77b803f7218e6fdf80487d7f3" translate="yes" xml:space="preserve">
          <source>There is not a lot of existing material regarding accessibility and CSS Grid Layout. Many of the issues are similar to those raised regarding CSS Flexbox, which also gives methods of reordering content with &lt;a href=&quot;../flex-direction&quot;&gt;&lt;code&gt;flex-direction&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../order&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f4f07f61802b52335a250c3cf2915517ac75a7" translate="yes" xml:space="preserve">
          <source>There needs to be space available in the dimension you wish to align the items in, in order for these keywords to take effect. With no space, there is nothing to distribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9586c4a8ac90989495110850967d7520110e2b" translate="yes" xml:space="preserve">
          <source>There was an &lt;a href=&quot;https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/&quot;&gt;update to the spec&lt;/a&gt; that updated the syntax to &lt;code&gt;display: flexbox&lt;/code&gt; &amp;mdash; this was again vendor-prefixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75df7f8baa6298502c071329380b741c24f403bd" translate="yes" xml:space="preserve">
          <source>Therefore &lt;code&gt;inset()&lt;/code&gt; takes four values for the top, right, bottom and left values plus a final value for &lt;code&gt;border-radius&lt;/code&gt;. The below CSS creates a rectangular shape inset from the reference box of the floated element 20 pixels from the top and bottom and 10 pixels from the left and right, with a border-radius value of 10 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf06b142a7dbd51591c2e440aa063b3aac81e020" translate="yes" xml:space="preserve">
          <source>Therefore you can think of every box in CSS working in this way. The box itself has an outer display type, so it knows how to behave alongside other boxes. It then has an inner display type which changes the way its children behave. Those children then have an outer and inner display type too. The flex items in the previous example become flex level boxes, so their outer display type is dictated by way of them being part of the flex formatting context. They have an inner display type of &lt;em&gt;flow&lt;/em&gt; however, meaning that their children participate in normal flow. Items nested inside our flex item lay themselves out as block and inline elements unless something changes their display type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572ec70396a834ec227eca6759cccf407d85eac2" translate="yes" xml:space="preserve">
          <source>Therefore, we have new properties of &lt;a href=&quot;../block-size&quot;&gt;&lt;code&gt;block-size&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../inline-size&quot;&gt;&lt;code&gt;inline-size&lt;/code&gt;&lt;/a&gt;. If we give our block an &lt;code&gt;inline-size&lt;/code&gt; of 100px, it doesn&amp;rsquo;t matter whether we are in a horizontal or a vertical writing mode, &lt;code&gt;inline-size&lt;/code&gt; will always mean the size in the inline direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42604bbfd38da67c7ad6028a1bdaffe5d40c8c08" translate="yes" xml:space="preserve">
          <source>These alternate glyphs share the same em-box and the same baseline as the rest of the font. They are merely graphically enhanced, and have no effect on the line-height and other box characteristics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db25d2b10523bc6b100f1420beadedc9a7c0f1f6" translate="yes" xml:space="preserve">
          <source>These are two &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; values to set the shadow offset. &lt;code&gt;&amp;lt;offset-x&amp;gt;&lt;/code&gt; specifies the horizontal distance. Negative values place the shadow to the left of the element. &lt;code&gt;&amp;lt;offset-y&amp;gt;&lt;/code&gt; specifies the vertical distance. Negative values place the shadow above the element. See &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; for possible units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fde774c11bbaea980c0511dba5c70cdebc9ec06" translate="yes" xml:space="preserve">
          <source>These boxes are technical, and Web authors do not usually have to bother with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf20a4eb93f75bf1bb1418d4a642d13dd535c5fa" translate="yes" xml:space="preserve">
          <source>These can quickly become difficult to read for other developers, or even your future self. However they are part of the specification and it is likely you will come across them in examples or in use by other developers, even if you choose not to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22de5377eacd01e208820785f1d0c901f8662ff" translate="yes" xml:space="preserve">
          <source>These cubic B&amp;eacute;zier curves are valid for use in CSS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af72706531b93a156e89228fbd1a7e0216c9b12" translate="yes" xml:space="preserve">
          <source>These cubic B&amp;eacute;zier curves definitions are invalid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc7789a15bfdcd2ce28a3af2e2de8b06465a3fd" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption&quot;&gt;&lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fa7bfecef737030bb0642f5d7e0bcbb6ace056" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col&quot;&gt;&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc741772a892e651e6a6d0054a660b268aa0435" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup&quot;&gt;&lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81009316e818544e1fc773af2656369e69722ab9" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb&quot;&gt;&lt;code&gt;&amp;lt;rb&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdf9b48326351e7648080025497d5d46aca98e4" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rbc&quot;&gt;&lt;code&gt;&amp;lt;rbc&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements generated as anonymous boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d887f1ed964964d6ca1ec6ae169533d29d7fed9c" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt&quot;&gt;&lt;code&gt;&amp;lt;rt&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a9034473f70d8853f11795ca2227d65ae07d8f" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc&quot;&gt;&lt;code&gt;&amp;lt;rtc&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df416dceadbe677afd2e51f58ed48e416cea8b4f" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody&quot;&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb878d85e6d2071a1da3a75b26bf95b8052bfbe" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bb7b29d2bd0ba3b69e5e67d1fb9bd5aa5ec697" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot&quot;&gt;&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfa79e73b5c6bea2e468bb65a56af9b1abb816b" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead&quot;&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45feaaa09bda607e9ed681377861d032141ffa5b" translate="yes" xml:space="preserve">
          <source>These elements behave like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr&quot;&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d24eb5f3361749d2d8d6eef14ec99664df894a4" translate="yes" xml:space="preserve">
          <source>These elements behave like HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table&quot;&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. It defines a block-level box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e125a8bb9a5b91983cfec44b42f3ff126009ec" translate="yes" xml:space="preserve">
          <source>These elements don't produce a specific box by themselves. They are replaced by their pseudo-box and their child boxes. Please note that the CSS Display Level 3 spec defines how the &lt;code&gt;contents&lt;/code&gt; value should affect &quot;unusual elements&quot; &amp;mdash; elements that aren&amp;rsquo;t rendered purely by CSS box concepts such as replaced elements. See &lt;a href=&quot;https://drafts.csswg.org/css-display/#unbox&quot;&gt;Appendix B: Effects of display: contents on Unusual Elements&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda3b9dfaef4a4dde84c67f49c1cb4bba150c2cb" translate="yes" xml:space="preserve">
          <source>These examples can be &lt;a href=&quot;https://developer.mozilla.org/samples/cssref/moz-element.html&quot;&gt;viewed live&lt;/a&gt; in builds of Firefox that support &lt;code&gt;-moz-element()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cfe7bdee06dba8f6d80bdfb225ca33e8bfbae7" translate="yes" xml:space="preserve">
          <source>These examples point to another key difference between these layout methods. In Grid Layout you do the majority of sizing specification on the container, setting up tracks and then placing items into them. In flexbox, while you create a flex container and set the direction at that level, any control over item sizing needs to happen on the items themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9e20955cf94f822d9c490a6ec06e0ddc7cd7a1" translate="yes" xml:space="preserve">
          <source>These items would be displayed on the page in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fec2b4616d8fc5b4bc53a2d22afc86f6141b1b5" translate="yes" xml:space="preserve">
          <source>These keywords define whether an element generates display boxes at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd30b18abd2bab2f6a4916f79464e188203fa41" translate="yes" xml:space="preserve">
          <source>These keywords specify the element&amp;rsquo;s inner &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; type, which defines the type of formatting context that lays out its contents (assuming it is a non-replaced element). These keywords are used as values of the &lt;code&gt;display&lt;/code&gt; property, and can be used for legacy purposes as a single keyword, or as defined in the Level 3 specification alongside a value from the &lt;a href=&quot;display-outside&quot;&gt;&lt;code&gt;&amp;lt;display-outside&amp;gt;&lt;/code&gt;&lt;/a&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03bc5eaa70bff8d68c0d96e7bed8dbd59b026b4" translate="yes" xml:space="preserve">
          <source>These keywords specify the element&amp;rsquo;s inner display type, which defines the type of formatting context that its contents are laid out in (assuming it is a non-replaced element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8cecb95679265454b14b72c1a8efb45f1e24d1" translate="yes" xml:space="preserve">
          <source>These keywords specify the element&amp;rsquo;s outer display type, which is essentially its role in flow layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7031a21d4df50246aac286d17cf28474f50c5f63" translate="yes" xml:space="preserve">
          <source>These lead to more effective, predictable, understandable results than &lt;code&gt;font-feature-settings&lt;/code&gt;, which is a low-level feature designed to handle special cases where no other way exists to enable or access an OpenType font feature. In particular, &lt;code&gt;font-feature-settings&lt;/code&gt; shouldn't be used to enable small caps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1b8703b0b10a79a1c7fc5bf12efa6432179446" translate="yes" xml:space="preserve">
          <source>These may then be followed by position values as with &lt;code&gt;circle()&lt;/code&gt; to move the centre of the ellipse around. In the example below we have an ellipse with an x radius of 40%, a y radius of 50% and the position being left. This means that the centre of the ellipse is on the left edge of the box giving us a half ellipse shape to wrap our text around. You can change these values to see how the ellipse changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210f34caed0f9aef3ac94877950ae08178b237e2" translate="yes" xml:space="preserve">
          <source>These pages contain CSS properties that are highly experimental or don't fit in any other categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac0dd43d0e71d510e56053b4a9e62c575e4e0bb" translate="yes" xml:space="preserve">
          <source>These properties are applied to the element which is the multicol container and therefore all columns will have the same rule. Rules are only drawn between columns and not on the outer edges. Rules should also only be drawn between columns which have content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f672f6af19943eaf331cbe3c4bd8bed71e45a9e" translate="yes" xml:space="preserve">
          <source>These properties currently do not have implementations in browsers, so you will need to use the physical properties at the present time and adjust for your writing mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daa1bc16bba85d4f063714c406d3eceded6735d" translate="yes" xml:space="preserve">
          <source>These properties deal with aligning the item inside the grid area it is placed into. The properties &lt;code&gt;align-items&lt;/code&gt; and &lt;code&gt;justify-items&lt;/code&gt; are applied to the grid container and set the &lt;code&gt;align-self&lt;/code&gt; and &lt;code&gt;justify-self&lt;/code&gt; properties as a group. This means that you can set alignment for all of your grid Items at once, then override any items that need a different alignment by applying the &lt;code&gt;align-self&lt;/code&gt; or &lt;code&gt;justify-self&lt;/code&gt; property to the rules for the individual grid Items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf2be24b46cac9884ce5041cd1506f6944c90c6" translate="yes" xml:space="preserve">
          <source>These properties deal with aligning the tracks of the grid when there is extra space to distribute. This scenario will occur if the tracks that you have defined total less than the total width of the grid container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00e56b9b7ce26633987e09f38f6fc85afd57745" translate="yes" xml:space="preserve">
          <source>These properties started life in the flexbox specification, but are now also part of the &lt;a href=&quot;https://www.w3.org/TR/css-align-3/&quot;&gt;Box Alignment Specification&lt;/a&gt;. This specification details how alignment works in all layout &amp;mdash; not just flexbox. Box alignment deals with alignment and justification, and also distribution of space along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67efa8f3962d8204fca5a589a42c1a199e1d7908" translate="yes" xml:space="preserve">
          <source>These properties take a length or a percentage as a value, and relate to the user's screen dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1284e5041a2771a9c7006a419131cb30376eef" translate="yes" xml:space="preserve">
          <source>These rules apply even to margins that are zero, so the margin of a first/last child ends up outside its parent (according to the rules above) whether or not the parent's margin is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35153f76da66f7e1ebbda0d87570b3680c3d8bee" translate="yes" xml:space="preserve">
          <source>These small tweaks are the sort of cases where the &lt;code&gt;order&lt;/code&gt; property makes sense. Keep the logical order as the reading and tab order of the document, and maintain that in the most accessible and structured fashion. Then use &lt;code&gt;order&lt;/code&gt; for purely visual design tweaks. When doing so take care that you are not reordering items that could be accessed by the keyboard as a user is tabbing around. Especially when using newer layout methods you should ensure that your browser testing includes testing the site using keyboard only, rather than a mouse or touchscreen. You will quickly see if your development choices make getting around the content difficult.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5ed27a8925d732d9c92061d232fa22fe62178f" translate="yes" xml:space="preserve">
          <source>These ticks are not shown by default. To show them, set the control's &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664ffec44e0b0a32c4bdbbcfb091957029c4b881" translate="yes" xml:space="preserve">
          <source>These timing function are invalid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5418ed18c5b88db4c0dc20a35700b0d7322534b3" translate="yes" xml:space="preserve">
          <source>These timing functions are valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1d8b8770b0cf100a65d9a38974c8af00b92324" translate="yes" xml:space="preserve">
          <source>These values are replaced by the appropriate string from the &lt;a href=&quot;quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7589d0a4285194831c362a6d1f0485d39409f376" translate="yes" xml:space="preserve">
          <source>These values control specific ligatures, specific to the font and defined by the type designer. They correspond to the OpenType values &lt;code&gt;dlig&lt;/code&gt;. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b3724836e2ec69fa0f89f51847d9fa1520f51a" translate="yes" xml:space="preserve">
          <source>These values control the figures used for numbers. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb587ae0cdd48b709b2fdcbae36d305d1a5d2f05" translate="yes" xml:space="preserve">
          <source>These values control the ligatures used historically, in old books, like the German tz digraph being displayed &amp;szlig;. They correspond to the OpenType values &lt;code&gt;hlig&lt;/code&gt;. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc30d553ed7b922e4d5d7d106c82d1fd4313b65" translate="yes" xml:space="preserve">
          <source>These values control the most common ligatures, like for &lt;code&gt;fi&lt;/code&gt;, &lt;code&gt;ffi&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt; or similar. They correspond to the OpenType values &lt;code&gt;liga&lt;/code&gt; and &lt;code&gt;clig&lt;/code&gt;. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cab03715765a260bc3115503fa28ffee1c75f17" translate="yes" xml:space="preserve">
          <source>These values control the sizing of figures used for East Asian characters. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344c77fee1205b3db18a6cc19cbebdb3fe5ea742" translate="yes" xml:space="preserve">
          <source>These values control whether letters adapt to their context&amp;mdash;that is, whether they adapt to the surrounding letters. These values correspond to the OpenType values &lt;code&gt;calt&lt;/code&gt;. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a2466690d270c9b36b6e388c7b7f23ce2762b2" translate="yes" xml:space="preserve">
          <source>These values controls the glyphs used to display fractions. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f792f6ebcbf8da287c040b28d568c5137fa51bf4" translate="yes" xml:space="preserve">
          <source>These values controls the sizing of figures used for numbers. Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d3eeff4a1e900c7fa32c09c3bf7ec336797c7b" translate="yes" xml:space="preserve">
          <source>These values corresponds to the &lt;a href=&quot;margin-top&quot;&gt;&lt;code&gt;margin-top&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;margin-bottom&quot;&gt;&lt;code&gt;margin-bottom&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;margin-right&quot;&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c866f1bc07218505befe72a221d0f6385451e11d" translate="yes" xml:space="preserve">
          <source>These values corresponds to the &lt;a href=&quot;padding-top&quot;&gt;&lt;code&gt;padding-top&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;padding-bottom&quot;&gt;&lt;code&gt;padding-bottom&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;padding-right&quot;&gt;&lt;code&gt;padding-right&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-left&quot;&gt;&lt;code&gt;padding-left&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a086b3123d3264732c0171b62e4ac93696bd54db" translate="yes" xml:space="preserve">
          <source>These values define whether an element generates display boxes at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc5b7aac682df68aaa9bd5aa01da1251d87f101" translate="yes" xml:space="preserve">
          <source>These values specify a set of logographic glyph variants which should be used for display. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bfa7fd8b5d58280eb88c64d4668c5ae2e9ef05" translate="yes" xml:space="preserve">
          <source>These values vertically align the element relative to its parent element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda6bda72f097b584a622facf54082756513786c" translate="yes" xml:space="preserve">
          <source>They are a key component of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Apps/Progressive/Responsive&quot;&gt;responsive design&lt;/a&gt;. For example, a media query can shrink the font size on small devices, increase the padding between paragraphs when a page is viewed in portrait mode, or bump up the size of buttons on touchscreens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f084e8545f300341c73e0c264956a511e73770" translate="yes" xml:space="preserve">
          <source>They&amp;rsquo;re easy to use for simple animations; you can create them without even having to know JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2b014c271b594307b5cd70b4a3f8ef66105e97" translate="yes" xml:space="preserve">
          <source>Thin (Hairline)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2145174ff4df3abc7c8b0be850f2f8f66262c9" translate="yes" xml:space="preserve">
          <source>Things can get confusing in terms of how &lt;code&gt;flex-grow&lt;/code&gt; and &lt;code&gt;flex-basis&lt;/code&gt; interact. Let's consider the case of three flex items of differing content lengths and the following &lt;code&gt;flex&lt;/code&gt; rules applied to them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c917e5d946803ea4c12387c4e3df98c30c86d034" translate="yes" xml:space="preserve">
          <source>Things change when you specify an intrinsic ratio. In this case, rule 1 isn't relevant, so rule 2 is applied: we try to preserve any intrinsic ratio (while respecting &lt;code&gt;contain&lt;/code&gt; or &lt;code&gt;cover&lt;/code&gt;). For example, preserving a 3:4 intrinsic aspect ratio for a 300x200 box with &lt;code&gt;contain&lt;/code&gt; means drawing a 150x200 background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d24cc5d6278e2106d36ea352348b2b7b7a91b7c" translate="yes" xml:space="preserve">
          <source>Things to watch out for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b383c21d43e810505d412efbd60d5a83d977f4" translate="yes" xml:space="preserve">
          <source>Think about the best way to present the content that you have and then see how flexbox or other layout methods can help you achieve it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecfbb801e619352aff418cfe0f0efdf3b9c5e9f" translate="yes" xml:space="preserve">
          <source>Think of the &lt;code&gt;clamp()&lt;/code&gt; function as defining a range of value allowed for a property, with a fixed ceiling and floor. Once supported, you will generally want to use &lt;code&gt;clamp()&lt;/code&gt; instead of &lt;code&gt;min()&lt;/code&gt; or &lt;code&gt;max()&lt;/code&gt; in most scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63f179156950eac2e046ce4008ff5d15dfac778" translate="yes" xml:space="preserve">
          <source>Think of the &lt;code&gt;max()&lt;/code&gt; function as finding the minimum value allowed for a property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20116d793a0e76fba530f52affcb74d73453ea5a" translate="yes" xml:space="preserve">
          <source>Think of the &lt;code&gt;min()&lt;/code&gt; function as finding the maximum value allowed for a property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d04939ff0461e2ca03255baea0917e8502f685" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt; is the stack level of the generated box in the current stacking context. The box also establishes a local stacking context in which its stack level is &lt;code&gt;0&lt;/code&gt;. This means that the z-indexes of descendants are not compared to the z-indexes of elements outside this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96672121d097544b312b26e2179593eccd59d46" translate="yes" xml:space="preserve">
          <source>This CSS establishes the look of the menu, with the background and text colors both changing when the element is in its &lt;a href=&quot;../:hover&quot;&gt;&lt;code&gt;:hover&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../:focus&quot;&gt;&lt;code&gt;:focus&lt;/code&gt;&lt;/a&gt; states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebd20784fb0aea5a6716b24e3b40e26ecc90a5d" translate="yes" xml:space="preserve">
          <source>This CSS property was initially proposed in CSS Level 2, but was dropped from CSS Level 2 (Revision 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f10a615372fcde9adaee4586cad37d4a0aef08f" translate="yes" xml:space="preserve">
          <source>This CSS would give the same result as example 1, &lt;code&gt;column-count&lt;/code&gt; set to 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58ed05de0e7fe9bee68201595b7edca0cba5900" translate="yes" xml:space="preserve">
          <source>This CSS would give the same result as example 2, with &lt;code&gt;column-width&lt;/code&gt; of 200px.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78c1f66074ccb643ace47f54f1f229f9994d2c3" translate="yes" xml:space="preserve">
          <source>This CSS would give the same result as example 3, with both &lt;code&gt;column-count&lt;/code&gt; and &lt;code&gt;column-width&lt;/code&gt; set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9246c64631c13a5ef3b7d98be516dd768384b6fc" translate="yes" xml:space="preserve">
          <source>This HTML applies a special stylesheet for devices that are narrower than 800 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ea3de9fecf966f76c4363c3bb3eb648c0739c5" translate="yes" xml:space="preserve">
          <source>This HTML applies a special stylesheet for devices that are shorter than 800 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9c40c185da3cd12cf554595b8d6af6dcdcf2ca" translate="yes" xml:space="preserve">
          <source>This HTML will apply a special stylesheet for devices that have at least 256 colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484ca258c9c021b16d11ef716c26a82ff986f12f" translate="yes" xml:space="preserve">
          <source>This HTML will render differently with each value of &lt;code&gt;ruby-align&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8041e7517f24eddeb3931bc05c8f3fc53f32e778" translate="yes" xml:space="preserve">
          <source>This HTML will render differently with each value of &lt;code&gt;ruby-position&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceee6e70db0168b82c8b79ce49691100a09bd08d" translate="yes" xml:space="preserve">
          <source>This acceleration curve is defined using one &lt;a href=&quot;timing-function&quot;&gt;&lt;code&gt;&amp;lt;timing-function&amp;gt;&lt;/code&gt;&lt;/a&gt; for each property to be transitioned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed35e5d38eaae8ec87962fb7d32c026cbd2464b" translate="yes" xml:space="preserve">
          <source>This allows access to various alternate forms of glyphs within a font. The example below shows a string of glyphs with only the OpenType set 'jis78' enabled. Uncheck the box below and you'll see more characters displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03a441b01114c2994cf769c6a1bdce4884a86a3" translate="yes" xml:space="preserve">
          <source>This allows for common typographic techniques such as setting different size headings in different weights for better readability at each size, or using a slightly narrower width for data-dense displays. For comparison, it is typical in a typographic system for a magazine to use 10&amp;ndash;15 or more different weight and width combinations throughout the publication &amp;mdash; giving a much wider range of styles than currently typical on the web (or indeed practical for performance reasons alone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ecda120450ba4d8c3341d0864aeab67654f512" translate="yes" xml:space="preserve">
          <source>This article explains the concept a the viewport, differentiating between the visual viewport and the layout viewport, and understanding what viewport means and it's impact in terms of CSS, SVG and mobile devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115594e48068001b7df9fb86d34b14668921ff4a" translate="yes" xml:space="preserve">
          <source>This article explains the flex-grow, flex-shrink and flex-basis properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5972d13e6fb6a4ef6be82d9aa79275af3d49a3d0" translate="yes" xml:space="preserve">
          <source>This article is the English translation of an article I wrote in Italian for &lt;a href=&quot;http://www.yappy.it&quot;&gt;YappY&lt;/a&gt;. I grant the right to share all the content under the &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/2.0/&quot;&gt;Creative Commons: Attribution-Sharealike license&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f738142a74aad28c7b8fe120381ac08bc57bbd7b" translate="yes" xml:space="preserve">
          <source>This article provides a set of mixins for those who want to create cross-browser flexbox experiences that even work in older browser that don't support the modern flexbox syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615396e895ac194ecb3c0af6c2f703044d5ff91d" translate="yes" xml:space="preserve">
          <source>This article provides a set of mixins for those who want to mess around with flexbox using the native support of current browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67730e8cbb27cad124780c7822e65fdf27dfde39" translate="yes" xml:space="preserve">
          <source>This article seeks to document the difference between CSS Selectors and XPath for web developers to be able to better choose the right tool for the right job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec00da78f07ac115d67026d672935539d22ecd1" translate="yes" xml:space="preserve">
          <source>This article will try to explain those rules, with some simplification and several examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f65eed37f9709981857134347bae00277e0b94" translate="yes" xml:space="preserve">
          <source>This at-rule is useful when using non-ASCII characters in some CSS properties, like &lt;a href=&quot;content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f213d7de0d476261dac5a1c0f8f85664b460c7b" translate="yes" xml:space="preserve">
          <source>This behavior has now been clarified in the specification, with browsers yet to implement the correct behavior. Until that happens, you can ensure that items do not stretch, such as images, which are direct children of the grid, by setting &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../justify-self&quot;&gt;&lt;code&gt;justify-self&lt;/code&gt;&lt;/a&gt; to start. This will mimic the correct behavior once implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33f4075afec67c91c8cad25d8e0893a02fad56c" translate="yes" xml:space="preserve">
          <source>This behaviour is useful if you want to target flex items using JavaScript to show and hide content for example. The example in the specification demonstrates one such pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ed3a3e664950c60720e1adc27430bfffed70b" translate="yes" xml:space="preserve">
          <source>This blend mode behaves similar to &lt;code&gt;hard-light&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb4b7346de804e2292584e950866b3039da34d8" translate="yes" xml:space="preserve">
          <source>This blend mode is equivalent to &lt;code&gt;color&lt;/code&gt;, but with the layers swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5e855d3b8ec299fc02d7f2ca97de885dd50db0" translate="yes" xml:space="preserve">
          <source>This blend mode is equivalent to &lt;code&gt;hard-light&lt;/code&gt; but with the layers swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeeb0bf8bc247e43d91ae31228dccb2e33f34d0c" translate="yes" xml:space="preserve">
          <source>This blend mode is equivalent to &lt;code&gt;overlay&lt;/code&gt; but with the layers swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99afc8ddbb94f11c75559cfdd057d879f940052" translate="yes" xml:space="preserve">
          <source>This blend mode is similar to &lt;code&gt;multiply&lt;/code&gt;, but the foreground need only be as dark as the inverse of the backdrop to make the final image black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6837d2e649a61fcc9e7e1495eff3ca7a67e99483" translate="yes" xml:space="preserve">
          <source>This blend mode is similar to &lt;code&gt;screen&lt;/code&gt;, but the foreground need only be as light as the inverse of the backdrop to create a fully lit color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b1024b629e80bbb549666ac7781a1dfff128d3" translate="yes" xml:space="preserve">
          <source>This can be a way to get items nested into the grid to act as if they are part of the grid, and is a way around some of the issues that would be solved by subgrids once they are implemented. You can also use &lt;code&gt;display:&lt;/code&gt;&lt;code&gt;contents&lt;/code&gt; in a similar way with flexbox to enable nested items to become flex items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba4d30b1b7e0fe9c7151780c1c0851d4a557e13" translate="yes" xml:space="preserve">
          <source>This can become an issue when developing a site that has to work in multiple languages, including languages that have text starting on the right, rather than the left. Browsers are pretty good at dealing with text direction, and you don&amp;rsquo;t even need to be working in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/rtl&quot;&gt;rtl&lt;/a&gt; language to take a look. In the example below, I have two paragraphs. One has no &lt;a href=&quot;../text-align&quot;&gt;&lt;code&gt;text-align&lt;/code&gt;&lt;/a&gt; property set, the second has &lt;code&gt;text-align&lt;/code&gt; set to left. I have added &lt;code&gt;dir=&quot;rtl&quot;&lt;/code&gt; to the &lt;code&gt;html&lt;/code&gt; element, which switches the writing mode from the default for an English language document of &lt;code&gt;ltr&lt;/code&gt;. You can see that the first paragraph remains left to right, due to the &lt;code&gt;text-align&lt;/code&gt; value being &lt;code&gt;left&lt;/code&gt; . The second however, switches direction and the text runs from right to left .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7108a79042ca82a7f6d5334cac9d2e9c5439bde3" translate="yes" xml:space="preserve">
          <source>This can currently be specified using a single value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd5f606f87e33e98f1705431c8ca4b0bc5dcdbc" translate="yes" xml:space="preserve">
          <source>This can seem like a neat way to display things in reverse order however you should be mindful that the items are only &lt;em&gt;visually&lt;/em&gt; displayed in reverse order. The specification says the following on this matter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03e7738c3accce91e15036877c12a0d956b230b" translate="yes" xml:space="preserve">
          <source>This chunk of CSS ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6223a37af90936f1700e5de185cadb9705f2d251" translate="yes" xml:space="preserve">
          <source>This code creates the orientation-testing media query list, then adds an event listener to it. After adding the listener, we also call the listener directly. This makes our listener perform adjustments based on the current device orientation; otherwise, our code might assume the device is in portrait mode at startup, even if it's actually in landscape mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c28d310fe10d90073976c8045bdf1190c60165e" translate="yes" xml:space="preserve">
          <source>This code handles the click event when the container receives a mouse click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f2e85deaea55fb1e9426cf95b621f6c816b5c1" translate="yes" xml:space="preserve">
          <source>This code looks at the value of &lt;code&gt;animation&lt;/code&gt;; if it's &lt;code&gt;false&lt;/code&gt;, we know we need to use our JavaScript fallback code to perform our animation. Otherwise, we can use JavaScript to create the desired CSS animation effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2465145fe8eb18a1b9ba57a6edbd392ba9caffb1" translate="yes" xml:space="preserve">
          <source>This code will check to see if CSS animation support is available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002a04a3e4577f9bb12dab53d1b68ffe6283f584" translate="yes" xml:space="preserve">
          <source>This code will likely not work on any devices (device compatablility is low).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60415b972c0445a8fab2e5f103eca4e64dcb0423" translate="yes" xml:space="preserve">
          <source>This code, too, is very simple. It simply looks at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/type&quot;&gt;&lt;code&gt;event.type&lt;/code&gt;&lt;/a&gt; to determine which kind of animation event occurred, then adds an appropriate note to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; (unordered list) we&amp;rsquo;re using to log these events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4647f6ebb2cd4b3f4cd1811d82fc2cd1e2d63dfa" translate="yes" xml:space="preserve">
          <source>This concept of the outer and inner display type is important as this tells us that a container using a layout method such as Flexbox (&lt;code&gt;display: flex&lt;/code&gt;) and Grid Layout (&lt;code&gt;display: grid&lt;/code&gt;) is still participating in block and inline layout, due to the outer display type of those methods being &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce36d55701105ebb955e96e40033332145f30ffe" translate="yes" xml:space="preserve">
          <source>This correspond to the JIS standard dimensions: 182mm x 257mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53354666ea7f960bd31b565ddd3430d4bf366821" translate="yes" xml:space="preserve">
          <source>This correspond to the JIS standard dimensions: 257mm x 364mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d78d703330885049360e975130140926feb9ca" translate="yes" xml:space="preserve">
          <source>This cursor is only supported on macOS and Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a22e79b8ff554f2304d1b0b4f77a45a229d3eac" translate="yes" xml:space="preserve">
          <source>This defines the top-right corner of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e036a8425441fabc7a9a0cfb771a25807754ee" translate="yes" xml:space="preserve">
          <source>This demonstrates how &lt;code&gt;optimizeLegibility&lt;/code&gt; is used by browsers automatically when the &lt;code&gt;font-size&lt;/code&gt; is smaller than &lt;code&gt;20px&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1521cd5b1b3273fd7186e3514e6b2d1afc75e474" translate="yes" xml:space="preserve">
          <source>This demonstrates how Greek vowels except disjunctive &lt;em&gt;eta&lt;/em&gt; should have no accent, and the accent on the first vowel of a vowel pair becomes a diaeresis on the second vowel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cca9928db7099aec12b0d2c3c45cd487b1ab134" translate="yes" xml:space="preserve">
          <source>This demonstrates how initial symbols are ignored. The keyword target the first letter, that is the first Unicode character part of the Letter or Number general category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168be26229c934cd19560f4d40d787f2fb0aa2f6" translate="yes" xml:space="preserve">
          <source>This demonstrates how the Dutch &lt;em&gt;ij&lt;/em&gt; digraph must be handled like one single letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0623dfe7e1385d5aa78a3ac71dd62414da55c0" translate="yes" xml:space="preserve">
          <source>This demonstrates how the Greek character sigma (&lt;code&gt;&amp;Sigma;&lt;/code&gt;) is transformed into the regular lowercase sigma (&lt;code&gt;&amp;sigma;&lt;/code&gt;) or the word-final variant (&lt;code&gt;&amp;sigmaf;&lt;/code&gt;), according the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e46f03dec982df42e14af73c9be70e7b7311a4" translate="yes" xml:space="preserve">
          <source>This demonstrates no text transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fab6477bb8eec7713e044697b7e96de9009dbf6" translate="yes" xml:space="preserve">
          <source>This demonstrates text capitalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898bf204463b93169eac8cca1b8b944fd47ea887" translate="yes" xml:space="preserve">
          <source>This demonstrates transforming the text to lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d9f39afadffa2160249c138e2db8ef1bd3d42d" translate="yes" xml:space="preserve">
          <source>This demonstrates transforming the text to uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a78829aa7b580106fb6030454ba4eaebd838e09" translate="yes" xml:space="preserve">
          <source>This demostrates how initial punctuations of a word are ignored. The keyword target the first letter, that is the first Unicode character part of the Letter or Number general category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccd06ede7f4a9dfb4e27eba2644ccf0e552f974" translate="yes" xml:space="preserve">
          <source>This details all the current ways in which column boxes can be styled. In the next guide we will take a look at making elements inside a container &lt;a href=&quot;spanning_columns&quot;&gt;span across all columns&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a42b612fe4006a939c15eed8de7c60c5e0a0b6" translate="yes" xml:space="preserve">
          <source>This diagram shows block and inline in a vertical writing mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0b81b20b6910b81332c1d8bbef01b8b5cacc9c" translate="yes" xml:space="preserve">
          <source>This diagram uses outdated terminology; see note below. Besides that, it is incorrect because the yellow ellipse on the right side is per definition either identical to the one on the left side, or bigger than that (it could be a mathematical superset), because the spec says &quot;Inline-level elements generate inline-level boxes, which are boxes that participate in an inline formatting context&quot;, see CSS 2.2, chapter 9.2.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d163b3de7531c73da78a2dfa045c71d2472e09" translate="yes" xml:space="preserve">
          <source>This ensures a minimum size of &lt;em&gt;1rem&lt;/em&gt;, with a text size that will scale if the page is zoomed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c042028811766c19bd75407d3a84c9705c7667b6" translate="yes" xml:space="preserve">
          <source>This ensures that text size will scale if the page is zoomed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885e01621b08a702c14202505238bd6525be4866" translate="yes" xml:space="preserve">
          <source>This event object also includes the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent/media&quot;&gt;&lt;code&gt;media&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent/matches&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; properties, so you can query these features of the &lt;code&gt;MediaQueryList&lt;/code&gt; by directly accessing it, or accessing the event object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498c24fbedf2df516abffd943b47d963099876cb" translate="yes" xml:space="preserve">
          <source>This example adds &quot;Section [the value of the counter]:&quot; to the beginning of each heading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd232a1a66873882cfe6c2a0783f0f916db1743" translate="yes" xml:space="preserve">
          <source>This example applies a spacing of &lt;code&gt;.5em&lt;/code&gt; vertically and &lt;code&gt;1em&lt;/code&gt; horizontally between a table's cells. Note how, along its outside edges, the table's &lt;code&gt;padding&lt;/code&gt; values are added to its &lt;code&gt;border-spacing&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d14066eee875e658ec9c985fd9ad01af0e8416d" translate="yes" xml:space="preserve">
          <source>This example applies special styles to the labels associated with indeterminate form fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c74ac2b9ead045b1a8c5fb2b4f038b148b05d5e" translate="yes" xml:space="preserve">
          <source>This example compares the results of &lt;code&gt;overflow-wrap&lt;/code&gt;, &lt;code&gt;word-break&lt;/code&gt;, and &lt;code&gt;hyphens&lt;/code&gt; when breaking up a long word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a0b8ce8ba7aabc80c31766630fb6cb095b9b63" translate="yes" xml:space="preserve">
          <source>This example computes and displays the used &lt;code&gt;width&lt;/code&gt; value of three elements (updates on resize):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7b8a3d8ba437fcdb1df04622ec26c0b5d7fbfa" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block with a gradient background image. The gradient is established as a CSS shape using &lt;code&gt;shape-outside&lt;/code&gt;, so that pixels within the gradient which are at least 20% opaque (that is, those pixels with an alpha component greater than 0.2) are considered part of the shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d395b5bbb23f54f138150ecd2eb899729a6cccb4" translate="yes" xml:space="preserve">
          <source>This example creates a border image using the following &quot;.png&quot; file, which is 90 by 90 pixels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f0536a945e9b8c821cbe35a16a05c95bfe6aa7" translate="yes" xml:space="preserve">
          <source>This example creates a small checkbox for users with fine pointers and a large checkbox for users with coarse pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca3ec23ecee11c626095c7908a7a8c49805a521" translate="yes" xml:space="preserve">
          <source>This example creates a small checkbox for users with fine primary pointers and a large checkbox for users with coarse primary pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa33d93c78284a724caa26840420de5d4dace34" translate="yes" xml:space="preserve">
          <source>This example demonstrates all of the writing modes, showing each with text in various languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a62f7b5ebddacc7ba8f78352065b8cb8d547b1" translate="yes" xml:space="preserve">
          <source>This example demonstrates both types of values for the &lt;code&gt;-ms-content-zoom-snap-points&lt;/code&gt; property. In the first selector, the first snap-point is at 0%, and the interval is set to 100%. In the second selector, each snap-point is listed separately&amp;mdash;100%, 200%, 300%, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d306f5b954e129e64e36b6b77c12919c1a21c95" translate="yes" xml:space="preserve">
          <source>This example demonstrates both types of values for the &lt;code&gt;-ms-scroll-snap-points-x&lt;/code&gt; property. In the first selector, the first snap-point is at 0%, and the interval is set to 100%. In the second selector, each snap-point is listed separately &amp;mdash; 100%, 200%, 300%, and so on. (The &lt;code&gt;-ms-scroll-snap-points-x&lt;/code&gt; property behaves identically to the &lt;a href=&quot;-ms-scroll-snap-points-y&quot;&gt;&lt;code&gt;-ms-scroll-snap-points-y&lt;/code&gt;&lt;/a&gt; property, but along the x-axis.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f66e24b0ccfa91edea8c8affc235b3a72fb0b34" translate="yes" xml:space="preserve">
          <source>This example demonstrates both types of values for the &lt;code&gt;-ms-scroll-snap-points-y&lt;/code&gt; property. In the first selector, the first snap-point is at 0%, and the interval is set to 100%. In the second selector, each snap-point is listed separately &amp;mdash; 100%, 200%, 300%, and so on. (The &lt;code&gt;-ms-scroll-snap-points-y&lt;/code&gt; property behaves identically to the &lt;a href=&quot;-ms-scroll-snap-points-x&quot;&gt;&lt;code&gt;-ms-scroll-snap-points-x&lt;/code&gt;&lt;/a&gt; property, but along the y-axis.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704cc27e3348b1ad03556c0ab0da991f72fb5940" translate="yes" xml:space="preserve">
          <source>This example demonstrates the difference in behavior of the &lt;code&gt;bottom&lt;/code&gt; property, when &lt;a href=&quot;position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;absolute&lt;/code&gt; versus &lt;code&gt;fixed&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b1697ff9c0a520f5dfe357098cabd9292140ec" translate="yes" xml:space="preserve">
          <source>This example disables input method support for a form field. In the past, this was commonly used on fields that entered data into databases which didn't support extended character sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2df4f8140dc30003c9bebb1b9597e77e861f06" translate="yes" xml:space="preserve">
          <source>This example disables mouse events (clicking, dragging, hovering, etc.) on all images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9181e4fc2be9c72e633da77759ba59371523fd" translate="yes" xml:space="preserve">
          <source>This example disables mouse events on the link to http://example.com.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3731e8337e50fb3b8c90a6a4c88985b5f92a7d38" translate="yes" xml:space="preserve">
          <source>This example draws a heading with triangles used to emphasize each character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca36d435c07aedc291bfd91323bff026be47223e" translate="yes" xml:space="preserve">
          <source>This example first includes a script defining a &lt;code&gt;&amp;lt;simple-custom&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;custom element&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b7e1ece360417eed83ba2c5d913d9505587f16" translate="yes" xml:space="preserve">
          <source>This example has an annoying animation unless you turn on Reduce Motion in your accessibility preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a497c0fd3324fa1a498682ffb895c5d922235f23" translate="yes" xml:space="preserve">
          <source>This example inserts additional text after special items in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b904cc30d6d01e1359837e106ee353c13b778e" translate="yes" xml:space="preserve">
          <source>This example inserts an image before each link, and adds its &lt;code&gt;id&lt;/code&gt; attribute after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef572d3bb04606a9f8951eed4a2fd26212254b2" translate="yes" xml:space="preserve">
          <source>This example inserts an image before the link. If the image is not found, it inserts text instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231b69dc14942474bf6709921937121a63f7bc59" translate="yes" xml:space="preserve">
          <source>This example inserts quotation marks around quotes, and adds the word &quot;Chapter&quot; before headings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4674373244981fd831407a9177976bbf9fd6ebef" translate="yes" xml:space="preserve">
          <source>This example is duplicated from &lt;a href=&quot;scroll-snap-type&quot;&gt;&lt;code&gt;scroll-snap-type&lt;/code&gt;&lt;/a&gt; with minor variances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fb7e0e2bf4d1289ec2bb0b0a9dc363c35e8d7a" translate="yes" xml:space="preserve">
          <source>This example is similar to the previous one, except that its size is specified as &lt;code&gt;farthest-corner&lt;/code&gt;, which sets the size of the gradient by the distance from the starting point to the farthest corner of the enclosing box from the starting point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d69af3a91224ad58e92565140eeff50ad2cd210" translate="yes" xml:space="preserve">
          <source>This example loads an image and uses it in four segments to draw the Firefox logo in four &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; blocks. Clicking on their container causes the four segments to rotate around by swapping the &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt; property values among the four &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a94cf56bb5c0ccabc4858c2bad4ec373863799c" translate="yes" xml:space="preserve">
          <source>This example matches the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36632a4c9d24db16b54cf8f6f0abccd37cf046a7" translate="yes" xml:space="preserve">
          <source>This example performs a four-second font size transition with a two-second delay between the time the user mouses over the element and the beginning of the animation effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a759656880516e43e76b35b9ce7a4c9a9d060af4" translate="yes" xml:space="preserve">
          <source>This example presents a simple form that colors elements green when they validate and red when they don't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d26d1f0197511e5f46866206b56ea0752770cd8" translate="yes" xml:space="preserve">
          <source>This example renders a list using Roman numerals. Notice that a &lt;code&gt;range&lt;/code&gt; is specified. This is because the representation will produce correct Roman numerals only until the counter value of &lt;code&gt;3999&lt;/code&gt;. Once outside of the range, the rest of the counter representations will be based on the &lt;code&gt;decimal&lt;/code&gt; style, which is the fall back. If you need to represent counter values as Roman numerals, you could use either one of the predefined counter styles, &lt;code&gt;upper-roman&lt;/code&gt; or &lt;code&gt;lower-roman&lt;/code&gt;, rather than recreating the rule yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e71451e23493684a0e45f02841d6490724a250e" translate="yes" xml:space="preserve">
          <source>This example replaces an element content with an image. You can replace the contents of an element with either an &amp;lt;url&amp;gt; or other &amp;lt;image&amp;gt; value. Content added with ::before or ::after will not be generated as the contents of the element are replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc95e5423857869481caba58d0f623c59670d11" translate="yes" xml:space="preserve">
          <source>This example reproduces the previous example using SVG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184abd59dfce31c502fa0c62b9f40d403eb0f639" translate="yes" xml:space="preserve">
          <source>This example shows a basic shipping form. It uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; event to let the user enable/disable the billing fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4ca5d47969a37a52c5ba7349717ac83e51e4f4" translate="yes" xml:space="preserve">
          <source>This example shows a cube with the perspective set at different positions. How quick the cube shrinks is defined by the &lt;a href=&quot;../perspective&quot;&gt;&lt;code&gt;perspective&lt;/code&gt;&lt;/a&gt; property. The smaller its value is, the deeper the perspective is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803ab53c78c86f18629dbad8b0354369e4b1637d" translate="yes" xml:space="preserve">
          <source>This example shows a cube with the perspective set at different positions. How quick the cube shrinks is defined by the &lt;a href=&quot;perspective&quot;&gt;&lt;code&gt;perspective&lt;/code&gt;&lt;/a&gt; property. The smaller its value is, the deeper the perspective is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc92ebd4ae0c7cad1c4dedaf0ee998347ac7037" translate="yes" xml:space="preserve">
          <source>This example shows a cube with transparent faces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d74df4033dd2cbe8299adb27fef7e142cb9434" translate="yes" xml:space="preserve">
          <source>This example shows cubes with popular &lt;code&gt;perspective-origin&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d35cfdcbad2320bd834f99fb03973f587ce0e7d" translate="yes" xml:space="preserve">
          <source>This example shows how different &lt;code&gt;box-sizing&lt;/code&gt; values alter the rendered size of two otherwise identical elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e64522da52c7955600688ac5608e431210c0a1" translate="yes" xml:space="preserve">
          <source>This example shows how nested elements can also be targeted. Note that the &lt;a href=&quot;universal_selectors&quot;&gt;universal selector&lt;/a&gt; (&lt;code&gt;*&lt;/code&gt;) is implied when no simple selector is written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbbd824eb6982d30ae238cd7377dff4963020bf" translate="yes" xml:space="preserve">
          <source>This example shows the difference between the appearance of &lt;code&gt;optimizeSpeed&lt;/code&gt; and &lt;code&gt;optimizeLegibility&lt;/code&gt; (in your browser; other browsers may vary).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8103535bed2ae3a0f047da19cefb9314157823d" translate="yes" xml:space="preserve">
          <source>This example shows the many ways in which a single color can be created with the various RGB color syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d936e3f49167fe5c34304cf42d41d2ddce5293" translate="yes" xml:space="preserve">
          <source>This example shows why it is better to use &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; values instead of &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; values. We will use two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. The first, with the green border, uses a unitless &lt;code&gt;line-height&lt;/code&gt; value. The second, with the red border, uses a &lt;code&gt;line-height&lt;/code&gt; value defined in &lt;code&gt;em&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a8505f0d9c9d7c1c142d9dcf0d90ac80eabbbe" translate="yes" xml:space="preserve">
          <source>This example simply specifies a downloadable font to use, applying it to the entire body of the document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c6c08ee57430cac71673bfc2228f44c8198e3b" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../repeating-linear-gradient&quot;&gt;&lt;code&gt;repeating-linear-gradient()&lt;/code&gt;&lt;/a&gt; to create a gradient that progresses repeatedly in a straight line. The colors get cycled over and over as the gradient repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46425d874689ec1ae5cfa555a7ae54891773ea68" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../repeating-radial-gradient&quot;&gt;&lt;code&gt;repeating-radial-gradient()&lt;/code&gt;&lt;/a&gt; to create a gradient that radiates repeatedly from a central point. The colors get cycled over and over as the gradient repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58da82c7da8581c1df31cddac5209027fe066434" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;-ms-scrollbar-base-color&lt;/code&gt; and &lt;a href=&quot;-ms-scrollbar-arrow-color&quot;&gt;&lt;code&gt;-ms-scrollbar-arrow-color&lt;/code&gt;&lt;/a&gt; to create two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; objects with different scroll bar color schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721708a873654597f0e05788b8e102e356127429" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;-ms-scrollbar-face-color&lt;/code&gt; and &lt;a href=&quot;-ms-scrollbar-arrow-color&quot;&gt;&lt;code&gt;-ms-scrollbar-arrow-color&lt;/code&gt;&lt;/a&gt; to display a scroll bar with a blue scroll box and arrows, and a scroll bar with a green scroll box and arrows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2d38ee7888fa7ca24c4634835aac77c7a452f4" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;-ms-scrollbar-highlight-color&lt;/code&gt;, &lt;a href=&quot;-ms-scrollbar-face-color&quot;&gt;&lt;code&gt;-ms-scrollbar-face-color&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;-ms-scrollbar-arrow-color&quot;&gt;&lt;code&gt;-ms-scrollbar-arrow-color&lt;/code&gt;&lt;/a&gt; to create two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; objects with different scroll bar color schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4bb7c1d78b85dd46bf6e08dfa8cf1347fba33c" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;-ms-scrollbar-track-color&lt;/code&gt;, &lt;a href=&quot;-ms-scrollbar-face-color&quot;&gt;&lt;code&gt;-ms-scrollbar-face-color&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;-ms-scrollbar-arrow-color&quot;&gt;&lt;code&gt;-ms-scrollbar-arrow-color&lt;/code&gt;&lt;/a&gt; to create two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements with different scroll bar color schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba2cee92710c3a3c6d852b6540c640c2d96a273" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;::after&lt;/code&gt;, in conjunction with the &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;attr()&lt;/code&gt;&lt;/a&gt; CSS expression and a &lt;code&gt;data-descr&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*&quot;&gt;custom data attribute&lt;/a&gt;, to create tooltips. No JavaScript is required!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce050e4c18ceef18c29cae23f9dd97113a62055" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;closest-side&lt;/code&gt;, which makes the circle's size to be the distance between the starting point (the center) and the closest side. The circle's radius is half the height of the box, since the top and bottom edges are equidistant from the starting point and are closer than the left and right edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93325f0d2fffceb464fe8c53a836a32a4c46df0c" translate="yes" xml:space="preserve">
          <source>This example uses a fixed table layout, combined with the &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; property, to restrict the table's width. The &lt;a href=&quot;text-overflow&quot;&gt;&lt;code&gt;text-overflow&lt;/code&gt;&lt;/a&gt; property is used to apply an ellipsis to words that are too long to fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d3b209e29a4f55a9d2c8bfa0a29227c6650342" translate="yes" xml:space="preserve">
          <source>This example uses a hidden &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element in a repeating pattern as its background. This demonstrates that you can use arbitrary elements as background, but doesn't necessarily demonstrate good design practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b37d75368156e750e0176c0bf2279d5efcbafff" translate="yes" xml:space="preserve">
          <source>This example uses a hidden &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; as a background. The background element uses a gradient, but also includes text that is rendered as part of the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51d4e0870a6786dee272d396fc7cc8a9eddd3c8" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;-ms-accelerator&lt;/code&gt; attribute in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u&quot;&gt;&lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;&lt;/a&gt; element to specify that the &quot;N&quot; in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt; element is a keyboard shortcut. When the option to &quot;Hide keyboard navigation indicators until I use the Alt key&quot; is enabled in the user's Display Properties, the &quot;N&quot; is not underlined until the user presses the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c639a4d78c2cc7f7932133a91383111255a94047" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;closest-side&lt;/code&gt; size value, which means the size is set by the distance from the starting point (the center) to the closest side of the enclosing box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3851ea73e2924c383079886b90dd55d9573dfbb2" translate="yes" xml:space="preserve">
          <source>This example uses three classes, one for each possible configuration of the &lt;code&gt;hyphens&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48832cb2d61c07a6885c2f1bc32762fb17b6cb92" translate="yes" xml:space="preserve">
          <source>This example utilizes the &lt;code&gt;:checked&lt;/code&gt; pseudo-class to let the user toggle content based on the state of a checkbox, all without using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e98a779564114a19d4e13df0070444895efb8e" translate="yes" xml:space="preserve">
          <source>This example will use the algorithm, symbols, and other properties of the &lt;code&gt;lower-alpha&lt;/code&gt; counter style, but will remove the period (&lt;code&gt;'.'&lt;/code&gt;) after the counter representation, and enclose the characters in paranthesis; like &lt;code&gt;(a)&lt;/code&gt;, &lt;code&gt;(b)&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939bc499ca9c1c136a7f878ddc19d8c8124bf3d2" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric(scrollbar-start-backward)&quot;&gt;&lt;code&gt;:-moz-system-metric(scrollbar-start-backward)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5936f90a384c35bb403c9bb2dea8f914e5fa9507" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric(windows-default-theme)&quot;&gt;&lt;code&gt;:-moz-system-metric(windows-default-theme)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7eb1bff6a193f3ea4f9ad96de484245d21d315a" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/mac-graphite-theme&quot;&gt;&lt;code&gt;:-moz-system-metric(mac-graphite-theme)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8c6820c9ee89a1e58c18e886dda6a51cf25e92" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/maemo-classic&quot;&gt;&lt;code&gt;:-moz-system-metric(maemo-classic)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f215cdcf201f6558414a8092c8c3bd65b296f1" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/scrollbar-end-backward&quot;&gt;&lt;code&gt;:-moz-system-metric(scrollbar-end-backward)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c398d7a20aadb73d090bf3bad415e5fc0fa8f17" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/scrollbar-end-forward&quot;&gt;&lt;code&gt;:-moz-system-metric(scrollbar-end-forward)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1376ebed2ff33539dfd63a882a0325bb0cda1566" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/scrollbar-start-forward&quot;&gt;&lt;code&gt;:-moz-system-metric(scrollbar-start-forward)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ace35f3c4cd75d2905ef5a4de826c08883b8df5" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/scrollbar-thumb-proportional&quot;&gt;&lt;code&gt;:-moz-system-metric(scrollbar-thumb-proportional)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1f6fb16d02768956500ee2c97f5a120c3f64e1" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/touch-enabled&quot;&gt;&lt;code&gt;:-moz-system-metric(touch-enabled)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d5bff3aa14ee847b84845999c114d4b6f9af91" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/windows-classic&quot;&gt;&lt;code&gt;:-moz-system-metric(windows-classic)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b5dd9778a501fe842e5bf95359276f97ff3ee6" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-system-metric/windows-compositor&quot;&gt;&lt;code&gt;:-moz-system-metric(windows-compositor)&lt;/code&gt;&lt;/a&gt; CSS &lt;a href=&quot;../pseudo-classes&quot;&gt;pseudo-class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a104f3bcef0b750fbb2ee7d395f3b5b43c995f6" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the Web app manifest's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Manifest#display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; member. Both apply to the top-level browsing context and any child browsing contexts. The feature query applies regardless of whether a web app manifest is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60964c2acb63a5e80056aab53d36efc81e0dae97" translate="yes" xml:space="preserve">
          <source>This feature has been removed from the Web standards. Though some browsers may still support it, it is in the process of being dropped. Avoid using it and update existing code if possible; see the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compatibility table&lt;/a&gt; at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9759a72c23d4540f9749c3c81eeacaa69051b0fb" translate="yes" xml:space="preserve">
          <source>This feature is closely related to the Mozilla-specific &lt;a href=&quot;../color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt; values &lt;code&gt;-moz-win-accentcolor&lt;/code&gt; and &lt;code&gt;-moz-win-accentcolortext&lt;/code&gt;, which allow you to access the Windows accent and overlaid text accent colors from CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad63cac1625affd2a84d66756a720def351fb2b3" translate="yes" xml:space="preserve">
          <source>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</source>
          <target state="translated">Эта функция является нестандартной и не находится на стандартной дорожке.Не используйте ее на производственных сайтах,обращенных к Сети:она будет работать не для каждого пользователя.Также могут быть большие несовместимости между реализациями и поведение может измениться в будущем.</target>
        </trans-unit>
        <trans-unit id="2ce9bfc7d8702c953d4eae54997347189a9d0893" translate="yes" xml:space="preserve">
          <source>This feature is not defined in any specification yet, though it was &lt;a href=&quot;https://lists.w3.org/Archives/Public/www-style/2015Sep/0226.html&quot;&gt;discussed in the working group&lt;/a&gt; and it was &lt;a href=&quot;https://lists.w3.org/Archives/Public/www-style/2015Oct/0012.html&quot;&gt;decided to add it to Selectors 4 or 5&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1940375a1d4181ff95eb72cfb7558807b9c66eba" translate="yes" xml:space="preserve">
          <source>This feature is not implemented. See &lt;a href=&quot;https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/11725071-implement-focus-within-from-selectors-4&quot;&gt;the enhancement request&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea48cf98141e347d3bded5c3759f3e5a637e2f9" translate="yes" xml:space="preserve">
          <source>This feature is not implemented. See &lt;a href=&quot;https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/12435951--placeholder-shown-css-pseudo-class&quot;&gt;this enhancement request&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59314e7aec66910164f6914bdc2ab1c6bad7e1f6" translate="yes" xml:space="preserve">
          <source>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a338c30b62b7b9edc30c8371e737b8c33475392" translate="yes" xml:space="preserve">
          <source>This feature was never implemented outside of Gecko, where it was only ever used for the non-standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XBL&quot;&gt;XBL stylesheets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed87ed109afc4e43fd4c67f14f2bbbae859edd3" translate="yes" xml:space="preserve">
          <source>This function can be used in the CSS Grid properties &lt;a href=&quot;grid-template-columns&quot;&gt;&lt;code&gt;grid-template-columns&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;grid-template-rows&quot;&gt;&lt;code&gt;grid-template-rows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd5bc92a63f0eaea84b751b67585a945fc1953f" translate="yes" xml:space="preserve">
          <source>This function clips the overflowing inline content and applies a fade-out effect near the edge of the line box with complete transparency at the edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb27def9bf092105f82ad5a125db22ba04b32781" translate="yes" xml:space="preserve">
          <source>This function enables &lt;a href=&quot;http://en.wikipedia.org/wiki/Swash_%28typography%29&quot;&gt;swash&lt;/a&gt; glyphs. The parameter is a font-specific name mapped to a number. It corresponds to the OpenType values &lt;code&gt;swsh&lt;/code&gt; and &lt;code&gt;cswh&lt;/code&gt;, like &lt;code&gt;swsh 2&lt;/code&gt; and &lt;code&gt;cswh 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff21322b9f67e1adbb6172808c10ec96b3f6088" translate="yes" xml:space="preserve">
          <source>This function enables annotations, like circled digits or inverted characters. The parameter is a font-specific name mapped to a number. It corresponds to the OpenType value &lt;code&gt;nalt&lt;/code&gt;, like &lt;code&gt;nalt 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2d49ef8b037c358ad160ea9fee885c20b4b749" translate="yes" xml:space="preserve">
          <source>This function enables ornaments, like &lt;a href=&quot;http://en.wikipedia.org/wiki/Fleuron_%28typography%29&quot;&gt;fleurons&lt;/a&gt; and other dingbat glyphs. The parameter is a font-specific name mapped to a number. It corresponds to the OpenType value &lt;code&gt;ornm&lt;/code&gt;, like &lt;code&gt;ornm 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69e3449ffec5677729f16d50e09189f62e9313e" translate="yes" xml:space="preserve">
          <source>This function enables specific stylistic alternatives for characters. It is similar to &lt;code&gt;styleset()&lt;/code&gt;, but doesn't create coherent glyphs for a set of characters; individual characters will have independent and not necessarily coherent styles. The parameter is a font-specific name mapped to a number. It corresponds to the OpenType value &lt;code&gt;cvXY&lt;/code&gt;, like &lt;code&gt;cv02&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e66a818f2f28a217be270422b450c6c1c13177" translate="yes" xml:space="preserve">
          <source>This function enables stylistic alternates for individual characters. The parameter is a font-specific name mapped to a number. It corresponds to the OpenType value &lt;code&gt;salt&lt;/code&gt;, like &lt;code&gt;salt 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4292690a7e929e4c1ecb5d86613874345f31c3" translate="yes" xml:space="preserve">
          <source>This function enables stylistic alternatives for sets of characters. The parameter is a font-specific name mapped to a number. It corresponds to the OpenType value &lt;code&gt;ssXY&lt;/code&gt;, like &lt;code&gt;ss02&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0f601577dbb5896904df9ff737e1fa0298974a" translate="yes" xml:space="preserve">
          <source>This gets interpreted as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761f83da7654b0d1cc874f5f4da5437611d89ae2" translate="yes" xml:space="preserve">
          <source>This gives the following result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a38bb57d18c29ffbe071b583aab1e233d95a9e" translate="yes" xml:space="preserve">
          <source>This gives us column and row lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5940f67bb4620e8259d62571854c1d9361475919" translate="yes" xml:space="preserve">
          <source>This guide covers flow layout and is therefore not referring to other possible formatting contexts. As such, it is useful to understand that creating any kind of formatting context will change the way elements inside that formatting context behave. This behaviour is always described in the specification and also here on MDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3c11f34b9121dd506f6347f3831457d402060f" translate="yes" xml:space="preserve">
          <source>This guide describes the standard coordinate systems used by the CSS object model. These are generally only different in terms of where their origin is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12714a0fce3f3aa18e4d5a507708225ac248a5b" translate="yes" xml:space="preserve">
          <source>This guide often referrs to &quot;Block and Inline formatting contexts&quot; and how elements behave when part of these contexts. This guide details what formatting contexts are and how we can make use of the way they behave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90593c53563a2130c1c13f830b05e8d33d7851f3" translate="yes" xml:space="preserve">
          <source>This guide presents demonstrations of how box alignment in grid layout works. You will see many similarities in how these properties and values work in flexbox. Due to grid being two-dimensional and flexbox one-dimensional there are some small differences that you should watch out for. So we will start by looking at the two axes that we deal with when aligning things in a grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e97307bf772ad3aad478b29fdcdf9fe69027884" translate="yes" xml:space="preserve">
          <source>This image doesn't specify either a width or a height; instead, it specifies an intrinsic ratio of 1:1. Think of this like a program icon. It's always square, and is usable at any size, such as 32x32, 128x128, or 512x512, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36e3df5ae9d18a41d744d62d015a3c112593699" translate="yes" xml:space="preserve">
          <source>This image is both dimensionless and proportionless. It doesn't care what size it is, nor does it care about remaining at a particular aspect ratio. This would make a good gradient desktop background that would work regardless of your screen size and its aspect ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24c7bb453757afeb9fb9c83cafbc816ca6b3b18" translate="yes" xml:space="preserve">
          <source>This image shows the result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0ad5a3919bc1082345b45092e8f0d22a7e14c1" translate="yes" xml:space="preserve">
          <source>This image shows what the output should look like, in case your browser's support for &lt;code&gt;writing-mode&lt;/code&gt; is incomplete:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c823c5f652a20139c63272bc84787c032598a72" translate="yes" xml:space="preserve">
          <source>This image specifies a 100 pixel height but no width. It also specifies an intrinsic aspect ratio of 3:4. This ensures that its width:height ratio is always 3:4, unless it's deliberately scaled to a disproportionate size (that is, by explicitly specifying both width and height that aren't of that ratio).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e172fde25572574bdd9a2e70b34b2c367db811" translate="yes" xml:space="preserve">
          <source>This image specifies a width of 100 pixels but no height or intrinsic ratio. This is, basically, a thin strip of wallpaper that could be stretched across the entire height of a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb19f32f0b71b0a9128b57674776f232dd7aaab" translate="yes" xml:space="preserve">
          <source>This interactive tool lets you visually create border images (the &lt;a href=&quot;border-image&quot;&gt;&lt;code&gt;border-image&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fdaaa551cc715869c0f164805ee585769f9ac7" translate="yes" xml:space="preserve">
          <source>This interactive tool lets you visually create rounded corners (the &lt;a href=&quot;border-radius&quot;&gt;&lt;code&gt;border-radius&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d817c73c5fff1f98db71572758c5c9d3b612f5b5" translate="yes" xml:space="preserve">
          <source>This interactive tool lets you visually create shadows behind elements (the &lt;a href=&quot;box-shadow&quot;&gt;&lt;code&gt;box-shadow&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ee3dc9656c82839dec8b473ebf67b31005d5ca" translate="yes" xml:space="preserve">
          <source>This is a fourth &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; value. Positive values will cause the shadow to expand and grow bigger, and negative values will cause the shadow to shrink. If not specified, it will be &lt;code&gt;0&lt;/code&gt; (the shadow will be the same size as the element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9afff323a7c8730a22a5ce38a195def0e40323a" translate="yes" xml:space="preserve">
          <source>This is a fourth &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; value. Positive values will cause the shadow to expand and grow bigger, negative values will cause the shadow to shrink. If not specified, it will be &lt;code&gt;0&lt;/code&gt; (the shadow will be the same size as the element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3984560ff3b654a679177bb178b1de6def4610f" translate="yes" xml:space="preserve">
          <source>This is a simple example but demonstrates how we can use a grid layout to rearrange our layout for different breakpoints. In particular I am changing the location of that &lt;code&gt;ad&lt;/code&gt; block, as appropriate in my different column setups. I find this named areas method very helpful at a prototyping stage, it is easy to play around with the location of elements. You could always begin to use grid in this way for prototyping, even if you can&amp;rsquo;t rely on it fully in production due to the browsers that visit your site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec75b47eacd27d6c826b76fdd28024178b20f104" translate="yes" xml:space="preserve">
          <source>This is a third &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; value. The larger this value, the bigger the blur, so the shadow becomes bigger and lighter. Negative values are not allowed. If not specified, it will be &lt;code&gt;0&lt;/code&gt; (the shadow's edge is sharp).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19014462900e60ea6472334a3ec121402a23d4e" translate="yes" xml:space="preserve">
          <source>This is a third &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; value. The larger this value, the bigger the blur, so the shadow becomes bigger and lighter. Negative values are not allowed. If not specified, it will be &lt;code&gt;0&lt;/code&gt; (the shadow's edge is sharp). The specification does not include an exact algorithm for how the blur radius should be calculated, however, it does elaborate as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4422676602413136910fceb566fd65c57fa25b4c" translate="yes" xml:space="preserve">
          <source>This is a very simple example of the problem with physical values and properties being used in CSS. They prevent the browser being able to do the work to switch writing mode, as they make the assumption that the text is flowing left to right and top to bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233234febe1157d1c10e8e45d25f9ba180f26580" translate="yes" xml:space="preserve">
          <source>This is all looking fairly complete now, however we sometimes have these cards which contain far more content than the others. It might be nice to cause those to span two tracks, and then they won&amp;rsquo;t be so tall. I have a class of &lt;code&gt;wide&lt;/code&gt; on my larger item, and I add a rule &lt;a href=&quot;../grid-column-end&quot;&gt;&lt;code&gt;grid-column-end&lt;/code&gt;&lt;/a&gt; with a value of &lt;code&gt;span 2&lt;/code&gt;. Now when grid encounters this item, it will assign it two tracks. At some breakpoints, this means that we'll get a gap in the grid &amp;ndash; where there isn&amp;rsquo;t space to lay out a two-track item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c327c999643a1e871643847e0a8070403acab7f" translate="yes" xml:space="preserve">
          <source>This is anti-clockwise! So the reverse of what we do for margins and padding. Once you realize that &lt;code&gt;grid-area&lt;/code&gt; sees the world as &quot;block and inline&quot;, you can remember that we are setting the two starts, then the two ends. It becomes much more logical once you know!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f9e0f507013fca4006cf2624e463279941d1c3" translate="yes" xml:space="preserve">
          <source>This is because it matches the same element but the ID selector has a higher specificity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068b0c242456a5a691e44c4f52ed4be9e3b731dc" translate="yes" xml:space="preserve">
          <source>This is because the &lt;code&gt;h1&lt;/code&gt; selector targets the element specifically, but the green selector is only inherited from its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06741e0d66a64f904bc7fadc50bee340770755c4" translate="yes" xml:space="preserve">
          <source>This is because the two declarations have equal &lt;a href=&quot;#Selector_Types&quot;&gt;selector type&lt;/a&gt; counts, but the &lt;code&gt;html h1&lt;/code&gt; selector is declared last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4535f97442c487128e42a3495782cf24569ce5d" translate="yes" xml:space="preserve">
          <source>This is not a comprehensive guide to the use of writing modes in CSS, the aim here is to document the areas where flow layout interacts with writing modes in possibly unanticipated ways. The &lt;a href=&quot;#External_Resources&quot;&gt;external resources&lt;/a&gt; and &lt;a href=&quot;#See_Also&quot;&gt;see also&lt;/a&gt; sections of this document link to more writing modes resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cedb7281d5a233cc9fea41b6d986b7b839d9e2" translate="yes" xml:space="preserve">
          <source>This is pretty standard code; you can get details on how it works in the documentation for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;&lt;code&gt;eventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt;. The last thing this code does is set the &lt;code&gt;class&lt;/code&gt; on the element we'll be animating to &amp;ldquo;slidein&amp;rdquo;; we do this to start the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993b4143631c8452b83bd339d488454de9127cef" translate="yes" xml:space="preserve">
          <source>This is really one of the key reasons I would use flexbox rather than grid, if I am just aligning or distributing something in a single dimension, that&amp;rsquo;s a flexbox use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295d1089fcb73b1af1f1951cf471b0c65d023cd1" translate="yes" xml:space="preserve">
          <source>This is something new to digital fonts and CSS, but is actually a centuries-old technique in designing and creating metal type. Optical sizing refers to the practice of varying the overall stroke thickness of letterforms based on physical size. If the size was very small (such as an equivalent to 10 or 12px), the characters would have an overall thicker stroke, and perhaps other small modifications to ensure that it would reproduce and be readable at a physically smaller size. Conversely, when a much larger size was being used (like 48 or 60px), there might be much greater variation in thick and thin stroke weights, showing the typeface design more in line with the original intent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b0e55f145e7d330fade7aa1959d3239f578ec7" translate="yes" xml:space="preserve">
          <source>This is sometimes the trickiest thing to work out if you don't have any documentation that came with the fonts (many type designers and foundries will provide sample pages and CSS just for this very reason). But there are some sites that make it easier to figure out. You can visit &lt;a href=&quot;https://wakamaifondue.com&quot;&gt;wakamaifondue.com&lt;/a&gt;, drop your font file on the circle where instructed and in a few moments you'll have a full report on all the capabilities and features of your font. &lt;a href=&quot;https://axis-praxis.org&quot;&gt;Axis-praxis.org&lt;/a&gt; also offers a similar capability, with the ability to click on the features to turn them on or off in a given text block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e9d0e36a176c01a4d28e58d85e12ce20d658ea" translate="yes" xml:space="preserve">
          <source>This is still available to Firefox UI code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79396ef8830403564fca08bf2c7bb6bc39606e8" translate="yes" xml:space="preserve">
          <source>This is the default value. The item is sized according to its &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties. It shrinks to its minimum size to fit the container, but does not grow to absorb any extra free space in the flex container. This is equivalent to setting &quot;&lt;code&gt;flex: 0 1 auto&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2d4520ff041b25e466acbc8f6b5d63db26418a" translate="yes" xml:space="preserve">
          <source>This is the difference between one and two-dimensional layout. In a one dimensional method like flexbox, we only control the row or column. In two dimensional layout like grid we control both at the same time. If you want the space distribution row by row, use flexbox. If you don&amp;rsquo;t, use Grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddb81b5f1125b5684b9d5e8d26df56f1ad73faa" translate="yes" xml:space="preserve">
          <source>This is the initial and default value as specified by the CSS standard. The &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; properties include the content, but does not include the padding, border, or margin. For example, &lt;code&gt;.box {width: 350px; border: 10px solid black;}&lt;/code&gt; renders a box that is 370px wide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08f220217396d2739ed17244794cacb8444930d" translate="yes" xml:space="preserve">
          <source>This is the shorthand syntax for defining all of the above. Setting a value of &lt;code&gt;normal&lt;/code&gt; resets all properties to their initial value. Setting a value of &lt;code&gt;none&lt;/code&gt; sets &lt;code&gt;font-variant-ligatures&lt;/code&gt; to none and all other properties to their initial value. (Meaning that if kerning is on by default, it will still be on even with a value of &lt;code&gt;none&lt;/code&gt; being supplied here.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2d64033760dd57b7c0e1b113ecde59f73a7e99" translate="yes" xml:space="preserve">
          <source>This is the top-left corner of the image. It defines a rectangle containing the top-left quarter of the image in the file &lt;code&gt;firefox.jpg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd29a6207245ddafea482b17dd4d17f1ddfeb30" translate="yes" xml:space="preserve">
          <source>This is treated as if it were:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559c5d6e8dc2a8f13727364ac547ffcf48ad73a6" translate="yes" xml:space="preserve">
          <source>This is treated as if the initial state had never occurred and the element was always in its final state. The easy way to overcome this limitation is to apply a &lt;code&gt;window.setTimeout()&lt;/code&gt; of a handful of milliseconds before changing the CSS property you intend to transition to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7e76359af9952f24dc8aa32fcf12774348ab56" translate="yes" xml:space="preserve">
          <source>This is used to produce an effect that is known as tate-chū-yoko (縦中横) in Japanese, or as 直書橫向 in Chinese.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b177b6b596c9fafef7e6a5af750ee7f0782787b6" translate="yes" xml:space="preserve">
          <source>This is useful because the &lt;code&gt;max-width&lt;/code&gt; is always used for horizontal sizes and &lt;code&gt;max-height&lt;/code&gt; is always used for vertical sizes, and if you need to set lengths based on the size of your text content, you need to be able to do so with the writing direction in mind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5387f7c7479441f24e8b001416b36cc09fc8be" translate="yes" xml:space="preserve">
          <source>This is useful if you have a complex custom element that takes a while to load into the page &amp;mdash; you might want to hide instances of the element until definition is complete, so that you don't end up with flashes of ugly unstyled elements on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bb27b1011beeec1c5a6c060dd3d937d1ec0baa" translate="yes" xml:space="preserve">
          <source>This is useful in the situation where you have a listing of articles, for example, and you display the listings in fixed height boxes which only take a limited amount of text. It may not be obvious to the reader that there is more content to click through to when clicking the box or the title. An ellipsis indicates clearly the fact there is more content. The specification would allow a string of content or a regular ellipsis to be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3bf769e54ddc0b2f11eb64dc877cfbc6f565dc" translate="yes" xml:space="preserve">
          <source>This is very much like specifying a specific width and height, since once you have one dimension and a ratio, the other dimension is implied, but it's still a useful example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f828c740c1357faaf2c582c3ad1893f60f7b783b" translate="yes" xml:space="preserve">
          <source>This is why, in every browser except Internet Explorer for Windows, markers are placed outside any border set for an &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, assuming the value of &lt;code&gt;list-style-position&lt;/code&gt; is &lt;code&gt;outside&lt;/code&gt;. If it's changed to &lt;code&gt;inside&lt;/code&gt;, then the markers are brought inside the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;'s content, as though they're an inline box placed at the very beginning of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f1bd156fb2c5fa7ccab503f4ae58c02a611248" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t quite the same as flexbox. In the flexbox example, the items are larger than the 200 pixel basis before wrapping. We can achieve the same in grid by combining &lt;code&gt;auto-fill&lt;/code&gt; and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/minmax&quot;&gt;&lt;code&gt;minmax()&lt;/code&gt;&lt;/a&gt; function. In this next example, I create auto filled tracks with &lt;code&gt;minmax&lt;/code&gt;. I want my tracks to be a minimum of 200 pixels, so I set the maximum to be &lt;code&gt;1fr&lt;/code&gt;. Once the browser has worked out how many times 200 pixels will fit into the container&amp;ndash;also taking account of grid gaps&amp;ndash;it will treat the &lt;code&gt;1fr&lt;/code&gt; maximum as an instruction to share out the remaining space between the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ac1aa72eea0e0bd8051785ee84409fe10bfb95" translate="yes" xml:space="preserve">
          <source>This keyword applies the isolation behavior of the &lt;code&gt;isolate&lt;/code&gt; keyword to the surrounding content and the override behavior of the &lt;code&gt;bidi-override&lt;/code&gt; keyword to the inner content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91804a90012fb9a706f8af4c2bb7d03b25f0b5d9" translate="yes" xml:space="preserve">
          <source>This keyword behaves the same as &lt;code&gt;border-box&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58729c7eb34758e6aa0d9de93ce77f2beb500ff7" translate="yes" xml:space="preserve">
          <source>This keyword behaves the same as &lt;code&gt;content-box&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dee38b613298d763300bd8b5dfd7e751ce2f280" translate="yes" xml:space="preserve">
          <source>This keyword behaves the same as &lt;code&gt;padding-box&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7f1b83e4cbb9ec852ed67344ea6df148ab6027" translate="yes" xml:space="preserve">
          <source>This keyword clips the mask image to the text of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77795b8918b094b66fe883068bc12cf4876bd9cb" translate="yes" xml:space="preserve">
          <source>This keyword clips the overflowing inline content and applies a fade-out effect near the edge of the line box with complete transparency at the edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3951e36c914d513e5465eaf894da7fcb8bc2b45e" translate="yes" xml:space="preserve">
          <source>This keyword computes to &lt;code&gt;0 0 auto&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb1491034b283d5ee4a605b29337fbb69cc48a5" translate="yes" xml:space="preserve">
          <source>This keyword deactivates alternate glyphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dced6255bf79abea18743704b1ba28f77c4d088c" translate="yes" xml:space="preserve">
          <source>This keyword enables historical forms &amp;mdash; glyphs that were common in the past but not today. It corresponds to the OpenType value &lt;code&gt;hist&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60bb447d2c86e7e531e34a49b2585c9e9dc1859" translate="yes" xml:space="preserve">
          <source>This keyword expresses no particular intent; the user agent should apply whatever heuristics and optimizations it normally does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c907d7e6d0a0e540f7f6a6c730fe907a858720dd" translate="yes" xml:space="preserve">
          <source>This keyword forces the use of a 0 with a slash; this is useful when a clear distinction between O and 0 is needed. It corresponds to the OpenType values &lt;code&gt;zero&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f9fa1ebde76c33a8b28cafac13b67a213e5b68" translate="yes" xml:space="preserve">
          <source>This keyword forces the use of special glyphs for ruby characters. As these are usually smaller, font creators often designs specific forms, usually slightly bolder to improve the contrast. This keyword corresponds to the OpenType values &lt;code&gt;ruby&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eff8961b7cc3ad30b1a075cf7e10d93dd06df67" translate="yes" xml:space="preserve">
          <source>This keyword forces the use of special glyphs for the ordinal markers, like 1&lt;sup&gt;st&lt;/sup&gt;, 2&lt;sup&gt;nd&lt;/sup&gt;, 3&lt;sup&gt;rd&lt;/sup&gt;, 4&lt;sup&gt;th&lt;/sup&gt; in English or a 1&lt;sup&gt;a&lt;/sup&gt; in Italian. It corresponds to the OpenType values &lt;code&gt;ordn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837f3c2711ad7ca2b686eac3af3ddb9e49423dc7" translate="yes" xml:space="preserve">
          <source>This keyword indicates that a bold typeface may be synthesized if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a5b592d2f3cc441344f6e8f45512e22f85a5ad" translate="yes" xml:space="preserve">
          <source>This keyword indicates that an italic typeface may be synthesized if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191ed388c5283cd1c272b686a61c4fa6417e9c1d" translate="yes" xml:space="preserve">
          <source>This keyword indicates that neither bold nor italic typeface may be synthesized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32946e6e09b1fd73c18b10604b820785d6572fde" translate="yes" xml:space="preserve">
          <source>This keyword indicates that the element's container directionality should be calculated without considering the content of this element. The element is therefore &lt;em&gt;isolated&lt;/em&gt; from its siblings. When applying its bidirectional-resolution algorithm, its container element treats it as one or several &lt;code&gt;U+FFFC Object Replacement Character&lt;/code&gt;, i.e. like an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef786cf92836402d452652870d0cbb760d6805b" translate="yes" xml:space="preserve">
          <source>This keyword indicates that the luminance values of the mask layer image should be used as the mask values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb29b371d1b1cf729b7c94f60b79850c033467f" translate="yes" xml:space="preserve">
          <source>This keyword indicates that the transparency (alpha channel) values of the mask layer image should be used as the mask values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9146ae374a52b7207a2da7194627a1a5abaf482d" translate="yes" xml:space="preserve">
          <source>This keyword is a equivalent to the dimensions of ledger pages in North America i.e. 11in x 17in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab76eba9f5332e8df99baa11e151e5a7eac67de" translate="yes" xml:space="preserve">
          <source>This keyword is a equivalent to the dimensions of legal papers in North America i.e. 8.5in x 14in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf06d79d743919c770ccca4a2cbb29d46d37c36" translate="yes" xml:space="preserve">
          <source>This keyword is a equivalent to the dimensions of letter paper in North America i.e. 8.5in x 11in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc73ee4969324277e4fdbeadc28f3452f20b90ac" translate="yes" xml:space="preserve">
          <source>This keyword is interpreted as a transparent black image layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a92f1d375d2df26a2ecf783dd356bf55546bbc" translate="yes" xml:space="preserve">
          <source>This keyword leads to the activation of the usual ligatures and contextual forms needed for correct rendering. The ligatures and forms activated depend on the font, language and kind of script. This is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a9746bd3afab79f6745753ad3731c2a4e36418" translate="yes" xml:space="preserve">
          <source>This keyword leads to the deactivation of the use of such alternate glyphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559ecd240af347abc5b92bba3e39ced14247f976" translate="yes" xml:space="preserve">
          <source>This keyword makes the elements directionality calculated without considering its parent bidirectional state or the value of the &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; property. The directionality is calculated using the P2 and P3 rules of the Unicode Bidirectional Algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2881287fa61d40229dce4d1c9dc55c744b1f34" translate="yes" xml:space="preserve">
          <source>This keyword specifies that all ligatures and contextual forms are disabled, even common ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94b3a6363c1aec71e2a61b7071f6bdc78cdfce0" translate="yes" xml:space="preserve">
          <source>This keyword value will display an ellipsis (&lt;code&gt;'&amp;hellip;'&lt;/code&gt;, &lt;code&gt;U+2026 Horizontal Ellipsis&lt;/code&gt;) to represent clipped text. The ellipsis is displayed inside the &lt;a href=&quot;css_box_model/introduction_to_the_css_box_model&quot;&gt;content area&lt;/a&gt;, decreasing the amount of text displayed. If there is not enough space to display the ellipsis, it is clipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c535c5f2d7e38f7c9306582301a4281f01b704" translate="yes" xml:space="preserve">
          <source>This leads to an important consequence: if one single basic selector is invalid, like when using an unknown pseudo-element or pseudo-class, the whole &lt;em&gt;selector&lt;/em&gt; is invalid and therefore the entire rule is ignored (as invalid too).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb9e2a9ce11fd2565ee36c1e57e2437cb80220d" translate="yes" xml:space="preserve">
          <source>This leads to the same result as the previous example, yet allows for one canonical declaration of the desired property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdb7e20b305efaa13e9056aecd2033d098b6561" translate="yes" xml:space="preserve">
          <source>This looks weird, doesn't it? That's because the only way to play an animation again is to remove the animation effect, let the document recompute styles so that it knows you've done that, then add the animation effect back to the element. To make that happen, we have to be creative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44460f67ab815042519546785cbad36fcff86249" translate="yes" xml:space="preserve">
          <source>This matches the standard, ISO dimensions: 148mm x 210mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73195b559007f9db2d6d4f9d5be5b1c322b70a0c" translate="yes" xml:space="preserve">
          <source>This matches the standard, ISO dimensions: 176mm x 250mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0930ba3b5e2168bdea58613e30a4277f007589" translate="yes" xml:space="preserve">
          <source>This matches the standard, ISO dimensions: 210mm x 297mm. (most frequently used dimensions for personal printing.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec61231e26742d41f9a524a3485656976bef2af" translate="yes" xml:space="preserve">
          <source>This matches the standard, ISO dimensions: 250mm x 353mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a6c3376bcb95f9a20e5033078a9d86549ee283" translate="yes" xml:space="preserve">
          <source>This matches the standard, ISO dimensions: 297mm x 420mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94590cc83c6d0fb5ec1d77e74e497f1bd291e46e" translate="yes" xml:space="preserve">
          <source>This may take one of three forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb1131bb71c06bfc6fa715fe7feb9c59cb9f9ff" translate="yes" xml:space="preserve">
          <source>This means that CSS style rules allow you to position boxes on layers in addition to the normal rendering layer (layer 0). The Z position of each layer is expressed as an integer representing the stacking order for rendering. Greater numbers mean closer to the observer. Z position can be controlled with the CSS &lt;code&gt;z-index&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ac1fd67b7c2b69d920e5e0acb207dc6fceda3e" translate="yes" xml:space="preserve">
          <source>This means that a &lt;code&gt;justify-self&lt;/code&gt; property does not make sense in Flexbox as we are always dealing with moving the entire group of items around.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afab9ca45d92dfdfdc931c97d7a1326fe7f87bea" translate="yes" xml:space="preserve">
          <source>This means that items might end up on a different line to the one they started on. In the case of an item being shown and hidden it could well cause the items to end up in a different row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8614d42157b968447ca71fdd33e638389ccd142d" translate="yes" xml:space="preserve">
          <source>This means that zero or more URLs may be specified (comma-separated), which &lt;strong&gt;must&lt;/strong&gt; be followed by one of the keywords defined in the CSS specification, such as&lt;code&gt; auto &lt;/code&gt;or&lt;code&gt; pointer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7e952b45f155e7ec54fb09ce2870d9e3beddc4" translate="yes" xml:space="preserve">
          <source>This means, e.g., that &lt;code&gt;top top&lt;/code&gt; and &lt;code&gt;left right&lt;/code&gt; are not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ae6965794fc8ad2cfec84daf793fe27c00c89a" translate="yes" xml:space="preserve">
          <source>This media feature applies to bitmap media types. It does not accept &lt;em&gt;min/max&lt;/em&gt; prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86798b6f54891320c37e6b6a20cbacc0011e6c73" translate="yes" xml:space="preserve">
          <source>This only applies to flex layout items. For items that are not children of a flex container, this value is treated like &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62cf11f296680ffdcc43172738d4c31e716e215" translate="yes" xml:space="preserve">
          <source>This only applies to flex layout items. For items that are not children of a flex container, this value is treated like &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba37fb68ff17dcf7c1e41e6ae6b8e7d7484348b" translate="yes" xml:space="preserve">
          <source>This only works when used inside CSS placed within a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM&quot;&gt;shadow DOM&lt;/a&gt;. Note also that this selector won't select a text node placed into a slot; it only targets actual elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623fedbde7dfaf28ebc9b93e9b0057f14d7db1bf" translate="yes" xml:space="preserve">
          <source>This order of values for &lt;code&gt;grid-area&lt;/code&gt; can seem a little strange, it is the opposite of the direction in which we specify margins and padding as a shorthand for example. It may help to realize that this is due to grid using the flow-relative directions defined in the CSS Writing Modes specification. We will explore how grids work with writing modes in a later article however we have the concept of four flow-relative directions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8dd381093e02d3c56d8bf2d6a1a2b6d6c9bc23" translate="yes" xml:space="preserve">
          <source>This page is not complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0213e4ed27bd471d02885279e1107a08816386" translate="yes" xml:space="preserve">
          <source>This places the four segments of our image in a two-by-two box grid. These four segments are all contained within a larger &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block whose primary purpose is to receive click events and dispatch them to our JavaScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9479bcbe9680cc46e56a49eca4635ee05016b995" translate="yes" xml:space="preserve">
          <source>This property accounts for language-specific case mapping rules. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034390bb9ee033ad8a12b708cead85cfa0fcb8f7" translate="yes" xml:space="preserve">
          <source>This property applies to block elements that generate a box. It won't apply on an empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; that won't generate a box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555af3461b519e7e0a3829268e65b1a4e88ce5ca" translate="yes" xml:space="preserve">
          <source>This property applies to both &lt;a href=&quot;::first-line&quot;&gt;&lt;code&gt;::first-line&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;::first-letter&quot;&gt;&lt;code&gt;::first-letter&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;pseudo-elements&quot;&gt;pseudo-elements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fb2ba5a43e324c19a762a1b5e662895f6145b2" translate="yes" xml:space="preserve">
          <source>This property applies to elements that display a scroll bar. CSS enables scrolling on all objects through the &lt;a href=&quot;overflow&quot;&gt;&lt;code&gt;overflow&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83093aa4f6b2bf4bc9d615c35725cfd6a7e48a2" translate="yes" xml:space="preserve">
          <source>This property applies to elements that display a scroll bar. CSS enables scrolling on all objects through the &lt;a href=&quot;overflow&quot;&gt;&lt;code&gt;overflow&lt;/code&gt;&lt;/a&gt; property. These objects are not listed in the &lt;em&gt;Applies To&lt;/em&gt; list for this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b00e3a1549e168288ce9af07874efe8c39835a2" translate="yes" xml:space="preserve">
          <source>This property applies to elements that display a scroll bar. CSS enables scrolling on all objects through the overflow property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7033eb284618f25f1e98dd96edce52fc09557b6c" translate="yes" xml:space="preserve">
          <source>This property can help you create responsive designs that fit different screen sizes. Especially in the presence of the &lt;a href=&quot;column-count&quot;&gt;&lt;code&gt;column-count&lt;/code&gt;&lt;/a&gt; property (which has precedence), you must specify all related length values to achieve an exact column width. In horizontal text these are &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;column-width&quot;&gt;&lt;code&gt;column-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;column-gap&quot;&gt;&lt;code&gt;column-gap&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;column-rule-width&quot;&gt;&lt;code&gt;column-rule-width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f754cb9c779ee1e8d9e3a6fbff02c070cf5b476a" translate="yes" xml:space="preserve">
          <source>This property can take any one of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7752c9385b6cecd8929d250159e5c9425cba11eb" translate="yes" xml:space="preserve">
          <source>This property can take one of four different forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa98b4b9bdb055d48b9ad904c7bc6a0713339c2b" translate="yes" xml:space="preserve">
          <source>This property can take one of three different forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ab23c9b334928a9e9a0109a77a8e24030ed29d" translate="yes" xml:space="preserve">
          <source>This property can take one of two forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25e4880dd00028d760fdcec32852c005f5be523" translate="yes" xml:space="preserve">
          <source>This property cannot be animated. Rather, it defines a path an animated element can follow. An offset path is either a specified path with one or multiple sub-paths or the geometry of a not-styled basic shape. The element&amp;rsquo;s exact position on the offset path is determined by the &lt;a href=&quot;offset-distance&quot;&gt;&lt;code&gt;offset-distance&lt;/code&gt;&lt;/a&gt; property. Each shape or path must define an initial position for the computed value of &lt;code&gt;0&lt;/code&gt; for &lt;a href=&quot;offset-distance&quot;&gt;&lt;code&gt;offset-distance&lt;/code&gt;&lt;/a&gt; and an initial direction which specifies the rotation of the object to the initial position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a191ee16fad550b41db7e6cc17e7064faae2bc" translate="yes" xml:space="preserve">
          <source>This property constrains the limit for touch zooming as well as values of the &lt;code&gt;msContentZoomFactor&lt;/code&gt; property. This property has no effect on non-zoomable elements. See &lt;a href=&quot;-ms-content-zooming&quot;&gt;&lt;code&gt;-ms-content-zooming&lt;/code&gt;&lt;/a&gt; for details on zoomable elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687d32f0126d6c5f1973f1b96a9cc571dcdd7993" translate="yes" xml:space="preserve">
          <source>This property deals with situations where the browser calculates the &lt;code&gt;flex-basis&lt;/code&gt; values of the flex items, and finds that they are too large to fit into the flex container. As long as &lt;code&gt;flex-shrink&lt;/code&gt; has a positive value the items will shrink in order that they do not overflow the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5297bcb1ff25ab218fda0e0909c1ae646f2e0bad" translate="yes" xml:space="preserve">
          <source>This property does not apply to floated elements or table cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a838c3f83fc241d386779bdc41c4761db809940d" translate="yes" xml:space="preserve">
          <source>This property has an effect only when the &lt;a href=&quot;border-collapse&quot;&gt;&lt;code&gt;border-collapse&lt;/code&gt;&lt;/a&gt; property is &lt;code&gt;separate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62b6af9ae737f0ee1f8b02ac1c7ed0d6085fc29" translate="yes" xml:space="preserve">
          <source>This property has been replaced by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-contenteditable&quot;&gt;contenteditable&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0e63f8b56c5f3c88914d8d8b8caecb83bb985e" translate="yes" xml:space="preserve">
          <source>This property has no effect on &lt;em&gt;non-&lt;a href=&quot;replaced_element&quot;&gt;replaced&lt;/a&gt;&lt;/em&gt; inline elements, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code&quot;&gt;&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4823ceb2d6bf092187ba88116a6fab913e631265" translate="yes" xml:space="preserve">
          <source>This property has no effect on keyboard interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576bbb0de72fde07d4e3a42cfb392514635f82dd" translate="yes" xml:space="preserve">
          <source>This property has no effect on mouse, keyboard, or touchpad interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a77fdb48cf3742af03113ab69bafcd995d805e" translate="yes" xml:space="preserve">
          <source>This property has no effect on non-scrollable elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a9fb676efe844cc2cd23a3dbe1b4c55fb8027f" translate="yes" xml:space="preserve">
          <source>This property has no effect on non-zoomable elements. For information on zoomable elements, see &lt;a href=&quot;-ms-content-zooming&quot;&gt;&lt;code&gt;-ms-content-zooming&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce592533d7afdb6014dcbbabc63c06f51eff901d" translate="yes" xml:space="preserve">
          <source>This property has no effect on non-zoomable elements. See &lt;a href=&quot;-ms-content-zooming&quot;&gt;&lt;code&gt;-ms-content-zooming&lt;/code&gt;&lt;/a&gt; for details on zoomable elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95bac1c8ece4e565721acff8c84dde14745cf88" translate="yes" xml:space="preserve">
          <source>This property has no effect on single line flex containers (i.e. ones with &lt;code&gt;flex-wrap: nowrap&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762c0bba07e8e142cf53d64b15fc6cc820950cbc" translate="yes" xml:space="preserve">
          <source>This property has no effect unless overflow is permitted on both the x- and y-axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9d6bf2ab56382039db9c6231dfcad18bcc83c6" translate="yes" xml:space="preserve">
          <source>This property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand&lt;/a&gt; for &lt;a href=&quot;border-image-source&quot;&gt;&lt;code&gt;border-image-source&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-image-slice&quot;&gt;&lt;code&gt;border-image-slice&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-image-width&quot;&gt;&lt;code&gt;border-image-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-image-outset&quot;&gt;&lt;code&gt;border-image-outset&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;border-image-repeat&quot;&gt;&lt;code&gt;border-image-repeat&lt;/code&gt;&lt;/a&gt;. As with all shorthand properties, any omitted sub-values will be set to their &lt;a href=&quot;initial_value&quot;&gt;initial value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8172e06d779a4c0c1395d8a77fdf76c751379b" translate="yes" xml:space="preserve">
          <source>This property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand&lt;/a&gt; for &lt;a href=&quot;mask-border-source&quot;&gt;&lt;code&gt;mask-border-source&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mask-border-slice&quot;&gt;&lt;code&gt;mask-border-slice&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mask-border-width&quot;&gt;&lt;code&gt;mask-border-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mask-border-outset&quot;&gt;&lt;code&gt;mask-border-outset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mask-border-repeat&quot;&gt;&lt;code&gt;mask-border-repeat&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;mask-border-mode&quot;&gt;&lt;code&gt;mask-border-mode&lt;/code&gt;&lt;/a&gt;. As with all shorthand properties, any omitted sub-values will be set to their &lt;a href=&quot;initial_value&quot;&gt;initial value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e710e9073696bc4500018cb9b571859332708ce" translate="yes" xml:space="preserve">
          <source>This property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand&lt;/a&gt; for setting the four properties &lt;a href=&quot;-moz-outline-radius-topleft&quot;&gt;&lt;code&gt;-moz-outline-radius-topleft&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;-moz-outline-radius-topright&quot;&gt;&lt;code&gt;-moz-outline-radius-topright&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;-moz-outline-radius-bottomright&quot;&gt;&lt;code&gt;-moz-outline-radius-bottomright&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;-moz-outline-radius-bottomleft&quot;&gt;&lt;code&gt;-moz-outline-radius-bottomleft&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3ca759fa505c4d084414e3eb24ec153bf28348" translate="yes" xml:space="preserve">
          <source>This property is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand&lt;/a&gt; to set the four properties &lt;a href=&quot;border-top-left-radius&quot;&gt;&lt;code&gt;border-top-left-radius&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-top-right-radius&quot;&gt;&lt;code&gt;border-top-right-radius&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-right-radius&quot;&gt;&lt;code&gt;border-bottom-right-radius&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;border-bottom-left-radius&quot;&gt;&lt;code&gt;border-bottom-left-radius&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188d6db0fa7d855d01b5b3909e3a6782acbde34a" translate="yes" xml:space="preserve">
          <source>This property is an extension to CSS, and can be used as a synonym for &lt;code&gt;text-autospace&lt;/code&gt; in IE8 standards Mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154f45758c77405b7934ff8b473618f25805b4fa" translate="yes" xml:space="preserve">
          <source>This property is based on the &lt;code&gt;block-progression&lt;/code&gt; property of the CSS3 Text Layout module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3aa4492d6c6b1d899e7d434975c56fc2c1aa02" translate="yes" xml:space="preserve">
          <source>This property is deprecated. Use &lt;a href=&quot;clip-path&quot;&gt;&lt;code&gt;clip-path&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e648df01464ef84831b241d5419d88cd9f3c5e9b" translate="yes" xml:space="preserve">
          <source>This property is especially helpful when used in conjunction with &lt;a href=&quot;background-blend-mode&quot;&gt;&lt;code&gt;background-blend-mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7804a25bbcf9fb09ba7b1f60cb669c9acfc7dcd8" translate="yes" xml:space="preserve">
          <source>This property is frequently used in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Tutorial&quot;&gt;XUL&lt;/a&gt; stylesheets to design custom widgets with platform-appropriate styling. It is also used in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XBL&quot;&gt;XBL&lt;/a&gt; implementations of the widgets that ship with the Mozilla platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0080877347bc63aa9e1489b0b4f427e257ae13b0" translate="yes" xml:space="preserve">
          <source>This property is intended &lt;em&gt;only&lt;/em&gt; to be used for the purpose of correcting the orientation of images which were shot with the camera rotated. It should &lt;em&gt;not&lt;/em&gt; be used for arbitrary rotations. For any purpose other than correcting an image's orientation due to how it was shot or scanned, use a &lt;a href=&quot;transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; property with the &lt;code&gt;rotate&lt;/code&gt; keyword to specify rotation. This includes any user-directed changes to the orientation of the image, or changes required for printing in portrait versus landscape orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b83a3ccd02394d5b21bb9d08780e5a84141e8" translate="yes" xml:space="preserve">
          <source>This property is nonstandard and originated in Internet Explorer. Apple has &lt;a href=&quot;https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW15&quot;&gt;a description in the Safari CSS Reference&lt;/a&gt;. Rossen Atanassov of Microsoft has &lt;a href=&quot;http://cdn.rawgit.com/atanassov/css-zoom/master/Overview.html&quot;&gt;an unofficial draft specification proposal on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c00b1dbf30a8461f81d46c2c580dd44897c4e07" translate="yes" xml:space="preserve">
          <source>This property is not on the standard track and will not be part of CSS. The standard way to do reflection in CSS is to use the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595a3e6627f7ed5f6f22a0bf254824908139348e" translate="yes" xml:space="preserve">
          <source>This property is not part of any specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5913d91e2e818959490280a8cffba9841f1727b9" translate="yes" xml:space="preserve">
          <source>This property is not part of any specification. A similar property, &lt;code&gt;user-focus&lt;/code&gt;, was proposed in &lt;a href=&quot;http://www.w3.org/TR/2000/WD-css3-userint-20000216&quot;&gt;early drafts of a predecessor of the CSS3 UI specification&lt;/a&gt;, but was rejected by the working group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5e5b0f9ceeb11fac7ac8460291f46fe6786839" translate="yes" xml:space="preserve">
          <source>This property is not standard and from Firefox 44 onwards cannot be used on websites anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffe30def44495b8fb82656b64e1574c7777243a" translate="yes" xml:space="preserve">
          <source>This property is not yet animatable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c2b96505f3929edef84113e4f3ef49f94e94df" translate="yes" xml:space="preserve">
          <source>This property is on the standard track as &lt;a href=&quot;border-block-start&quot;&gt;&lt;code&gt;border-block-start&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d780197c3f6134aa3c2552c4925c7f8d0783250" translate="yes" xml:space="preserve">
          <source>This property is only supported for inline elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e738e0295990b0149cf3913ad52b97bf1dd3c6e3" translate="yes" xml:space="preserve">
          <source>This property is only supported on Windows and Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7513f25907944e19033d41a2c83365291e736fbe" translate="yes" xml:space="preserve">
          <source>This property is specified as a comma-separated list of shadows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631366d7b10f778a6bb7b2d43c1d8cb7c9103e5e" translate="yes" xml:space="preserve">
          <source>This property is specified as a single &lt;code&gt;&amp;lt;grid-line&amp;gt;&lt;/code&gt; value. A &lt;code&gt;&amp;lt;grid-line&amp;gt;&lt;/code&gt; value can be specified as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1735ccb2922798757574fe116d6292de042563e1" translate="yes" xml:space="preserve">
          <source>This property is specified as a value for &lt;code&gt;&amp;lt;'row-gap'&amp;gt;&lt;/code&gt; followed optionally by a value for &lt;code&gt;&amp;lt;'column-gap'&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;'column-gap'&amp;gt;&lt;/code&gt; is omitted, it&amp;rsquo;s set to the same value as &lt;code&gt;&amp;lt;'row-gap'&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b84b4ac437e11e4d6a93bdd70fb843cc352fac" translate="yes" xml:space="preserve">
          <source>This property is specified as one or two &lt;code&gt;&amp;lt;grid-line&amp;gt;&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcecd813ec4e5a9b23d781e681959558950984a2" translate="yes" xml:space="preserve">
          <source>This property is supported by Windows 2000 and later. It enables users to hide navigation indicators for menu items and controls until the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178c808941bb9aac7c236ed54bc5224d960d4c5f" translate="yes" xml:space="preserve">
          <source>This property is useful on pages that contain a lot of widgets that are all independent as it can be used to prevent one widget's CSS rules from changing other things on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff9fef89208b8528a3171b138e060d8db61fe0c" translate="yes" xml:space="preserve">
          <source>This property it is not defined in any CSS standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2cc3c9ced3d74228f3075525bfe1b00a809d8c" translate="yes" xml:space="preserve">
          <source>This property maps to one of the physical border properties: &lt;a href=&quot;border-top&quot;&gt;&lt;code&gt;border-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right&quot;&gt;&lt;code&gt;border-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom&quot;&gt;&lt;code&gt;border-bottom&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left&quot;&gt;&lt;code&gt;border-left&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d45cfdc146ec05e00f1d7945e870d5d6e8e7ba" translate="yes" xml:space="preserve">
          <source>This property maps to one of the physical border properties: &lt;a href=&quot;border-top-color&quot;&gt;&lt;code&gt;border-top-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-color&quot;&gt;&lt;code&gt;border-right-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-color&quot;&gt;&lt;code&gt;border-bottom-color&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;border-left-color&quot;&gt;&lt;code&gt;border-left-color&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1402d23547b63ba90597ab5d6a6d1fd4aa69600c" translate="yes" xml:space="preserve">
          <source>This property maps to one of the physical border properties: &lt;a href=&quot;border-top-color&quot;&gt;&lt;code&gt;border-top-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-color&quot;&gt;&lt;code&gt;border-right-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-color&quot;&gt;&lt;code&gt;border-bottom-color&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-color&quot;&gt;&lt;code&gt;border-left-color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95507574447f6a8ca276fe6481b46aac305f6acc" translate="yes" xml:space="preserve">
          <source>This property maps to one of the physical border properties: &lt;a href=&quot;border-top-style&quot;&gt;&lt;code&gt;border-top-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-style&quot;&gt;&lt;code&gt;border-right-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-style&quot;&gt;&lt;code&gt;border-bottom-style&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-style&quot;&gt;&lt;code&gt;border-left-style&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccb8fec6848b8dbf7294990214d8b1ee4785565" translate="yes" xml:space="preserve">
          <source>This property maps to one of the physical border properties: &lt;a href=&quot;border-top-width&quot;&gt;&lt;code&gt;border-top-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-width&quot;&gt;&lt;code&gt;border-right-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-width&quot;&gt;&lt;code&gt;border-bottom-width&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;border-left-width&quot;&gt;&lt;code&gt;border-left-width&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5613bc1933ee43431a9182076b9066d524ec0a9f" translate="yes" xml:space="preserve">
          <source>This property maps to the physical border properties: &lt;a href=&quot;border-top-color&quot;&gt;&lt;code&gt;border-top-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-color&quot;&gt;&lt;code&gt;border-right-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-color&quot;&gt;&lt;code&gt;border-bottom-color&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;border-left-color&quot;&gt;&lt;code&gt;border-left-color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d3f1fadd49a1b6f22e5f3b3332cbd6a87924a4" translate="yes" xml:space="preserve">
          <source>This property may be overridden by the &lt;a href=&quot;mask-mode&quot;&gt;&lt;code&gt;mask-mode&lt;/code&gt;&lt;/a&gt; property, which has the same effect but applies to the element where the mask is used. Alpha masks will generally be faster to render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d199d1442d6e683d10414382b763bdd2e05cbae" translate="yes" xml:space="preserve">
          <source>This property may be specified as a single keyword value or a single &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2375a8a4eea30a4c130b5d06b41dd7878b779e" translate="yes" xml:space="preserve">
          <source>This property may be specified as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b451b596fa38ec04c346a03470156e8538191c" translate="yes" xml:space="preserve">
          <source>This property may take one of two forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf661c0abadc9ee330081ef86f37d67c271e29b" translate="yes" xml:space="preserve">
          <source>This property only applies to touch and touchpad input. For keyboard input the scroll does not chain regardless of the &lt;code&gt;&amp;ndash;ms-scroll-chaining&lt;/code&gt; value, and for mouse input the scroll will always chain up to the nearest scrollable ancestor element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bb19e2df42d31c4b7b8a7bc304398ff0654f10" translate="yes" xml:space="preserve">
          <source>This property requires Windows 8 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d23712fce5fe9e9de5b19be09df0f51d10cbfb" translate="yes" xml:space="preserve">
          <source>This property requires Windows or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626de30abe664d7af0395ad20a8a765cb8f79145" translate="yes" xml:space="preserve">
          <source>This property specifies the &lt;em&gt;block flow direction&lt;/em&gt;, which is the direction in which block-level containers are stacked, and the direction in which inline-level content flows within a block container. Thus, it also determines the ordering of block-level content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd10be2ab6d613ec2806cfcaefac4d32a7116df8" translate="yes" xml:space="preserve">
          <source>This property supports multiple background images. You can specify a different &lt;code&gt;&amp;lt;attachment&amp;gt;&lt;/code&gt; for each background, separated by commas. Each image is matched with the corresponding attachment type, from first specified to last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456b0f66fd67071534524b5928655672f8514384" translate="yes" xml:space="preserve">
          <source>This property was defined in an &lt;a href=&quot;http://www.w3.org/TR/2003/CR-css3-text-20030514/#text-blink&quot;&gt;old draft of the CSS 3 Text specification&lt;/a&gt;. Newer versions removed its definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463b748d627b349975d2fa5a1dbb836913f80cb6" translate="yes" xml:space="preserve">
          <source>This property was initially named &lt;code&gt;-webkit-text-combine&lt;/code&gt; according to a &lt;a href=&quot;http://www.w3.org/TR/2011/WD-css3-writing-modes-20110531/#text-combine&quot;&gt;2011 version of the CSS3 Writing Modes specification&lt;/a&gt;, supporting the values &lt;code&gt;none&lt;/code&gt; and &lt;code&gt;horizontal&lt;/code&gt; without &lt;code&gt;digits&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4e957c299a845b2f555b7c1f22abdb17531a04" translate="yes" xml:space="preserve">
          <source>This property was initially named &lt;code&gt;-webkit-text-combine&lt;/code&gt; according to a &lt;a href=&quot;http://www.w3.org/TR/2011/WD-css3-writing-modes-20110531/#text-combine&quot;&gt;2011 version of the CSS3 Writing Modes specification&lt;/a&gt;, supporting the values &lt;code&gt;none&lt;/code&gt; and &lt;code&gt;horizontal&lt;/code&gt; without digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16287a7e300da018456e926ccbbb9a98ee04ba40" translate="yes" xml:space="preserve">
          <source>This property was once defined in the &lt;a href=&quot;https://www.w3.org/TR/2015/WD-css-snappoints-1-20150326/#scroll-snap-points&quot;&gt;early draft of CSS Scroll Snap Points Module&lt;/a&gt; but &lt;a href=&quot;https://github.com/w3c/csswg-drafts/commit/922af86be789222b8490c92038d1a5142e1c1198&quot;&gt;later removed from&lt;/a&gt; the specification &lt;a href=&quot;https://lists.w3.org/Archives/Public/www-style/2015Nov/0266.html&quot;&gt;in favor of element-based snapping&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119700943873bc1fd35b6f67ea0327839253213e" translate="yes" xml:space="preserve">
          <source>This property will only work in Gecko-based browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2013b4e680495a75170c1514659e07fee38c1237" translate="yes" xml:space="preserve">
          <source>This property's initial value is &lt;code&gt;inherit&lt;/code&gt; on all elements, except the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html&quot;&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/a&gt; element, where it defaults to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5bacb827c977e7e96a52188b9b6aca4b39779d" translate="yes" xml:space="preserve">
          <source>This property's value can take one of two forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696c7e82c581162a9c70cd4e46cc747e5410dfec" translate="yes" xml:space="preserve">
          <source>This pseudo-class can increase the &lt;a href=&quot;specificity&quot;&gt;specificity&lt;/a&gt; of a rule. For example, &lt;code&gt;#foo:not(#bar)&lt;/code&gt; will match the same element as the simpler &lt;code&gt;#foo&lt;/code&gt;, but has a higher specificity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6a7a6d3f02b2ead227fbfe158d0f3fe18688c0" translate="yes" xml:space="preserve">
          <source>This pseudo-class is applied according to the following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55579b878ed297ac07267a04dc3254278cd3bbd3" translate="yes" xml:space="preserve">
          <source>This pseudo-class is useful for giving the user a visual indication that a field's current value is outside the permitted limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac09bac7cac6892c3d2558a3fc1466c3881877fe" translate="yes" xml:space="preserve">
          <source>This pseudo-class is useful for giving the user a visual indication that a field's current value is within the permitted limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33199bd7b53418448e545a02ce00c5be4fc6e829" translate="yes" xml:space="preserve">
          <source>This pseudo-class is useful for highlighting correct fields for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81cf81ffb1c1294aa64a9f296d6c9c2ddcd07d1" translate="yes" xml:space="preserve">
          <source>This pseudo-class is useful for highlighting field errors for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fd477d34f83c4b4a6a72ec2c96dc4f0c516491" translate="yes" xml:space="preserve">
          <source>This pseudo-class is useful for highlighting fields that must have valid data before a form can be submitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94c43462b89ff42c2b21ec5a5f897fada162881" translate="yes" xml:space="preserve">
          <source>This pseudo-class is useful for styling fields that are not required to submit a form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc2b01d869da1c05efccc3920b0debb05926b9d" translate="yes" xml:space="preserve">
          <source>This pseudo-element is supported only in Internet Explorer and Microsoft Edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb73cefd8bdaf49206b545ccc7ebc86066e570aa" translate="yes" xml:space="preserve">
          <source>This refers to the spacing between specific glyph pairings. This is generally on by default (as recommended by the OpenType specification). It should be noted that if &lt;a href=&quot;../letter-spacing&quot;&gt;&lt;code&gt;letter-spacing&lt;/code&gt;&lt;/a&gt; is also set on your text, that is applied after kerning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f1023ef1225fe30b964deb3651f3c6e78756de" translate="yes" xml:space="preserve">
          <source>This reverts the style of the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; property to the user agent's default unless a user stylesheet exists, in which case that is used instead. Then it doubles the font size and applies a &lt;a href=&quot;font-weight&quot;&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;&quot;bold&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976e873d09fde56fe2e45dfb999b09f9519c1fba" translate="yes" xml:space="preserve">
          <source>This scaling transformation is characterized by a three-dimensional vector. Its coordinates define how much scaling is done in each direction. If all three coordinates are equal, the scaling is uniform (&lt;em&gt;isotropic&lt;/em&gt;) and the aspect ratio of the element is preserved (this is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Homothetic_transformation&quot;&gt;homothetic transformation&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f69e06a31b66e58631fa1709ce8e780d6360c1" translate="yes" xml:space="preserve">
          <source>This scaling transformation is characterized by a two-dimensional vector. Its coordinates define how much scaling is done in each direction. If both coordinates are equal, the scaling is uniform (&lt;em&gt;isotropic&lt;/em&gt;) and the aspect ratio of the element is preserved (this is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Homothetic_transformation&quot;&gt;homothetic transformation&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e60ed8118aad278a7b48fad7d96649e67f47245" translate="yes" xml:space="preserve">
          <source>This scaling transformation modifies the z-coordinate of each element point by a constant factor, except when the scale factor is 1, in which case the function is the identity transform. The scaling is not isotropic, and the angles of the element are not conserved. &lt;code&gt;scaleZ(-1)&lt;/code&gt; defines an &lt;a href=&quot;http://en.wikipedia.org/wiki/Axial_symmetry&quot;&gt;axial symmetry&lt;/a&gt;, with the z-axis passing through the origin (as specified by the &lt;a href=&quot;../transform-origin&quot;&gt;&lt;code&gt;transform-origin&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa218d8b5c42357f45dd1c3ec018685d95979ec4" translate="yes" xml:space="preserve">
          <source>This second example uses a grid to create the same layout. This time we are using the box alignment properties as they apply to a grid layout. So we align to &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; rather than &lt;code&gt;flex-start&lt;/code&gt; and &lt;code&gt;flex-end&lt;/code&gt;. In the case of a grid layout, we are aligning the items inside their grid area. In this case that is a single grid cell, but it could be an area made up of several grid cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9933a47cc21507e15f00b5f27cad262b273594e" translate="yes" xml:space="preserve">
          <source>This section needs more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b39d6f695beb0b71260dc42269131d7506fdaf" translate="yes" xml:space="preserve">
          <source>This selector is useful to provide a different focus indicator based on the user&amp;rsquo;s input modality (mouse vs. keyboard).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df88953599904ba3531d89ad71e5f678d45d091" translate="yes" xml:space="preserve">
          <source>This selector is useful, to take a common example, for highlighting an entire &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; container when the user focuses on one of its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc01281236bf1135d09b2c7814c1e6c6ce2c5770" translate="yes" xml:space="preserve">
          <source>This selector may be used on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox&quot;&gt;&amp;lt;input type=&quot;checkbox&quot;&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio&quot;&gt;&amp;lt;input type=&quot;radio&quot;&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cc9f3338ae2bc9bbfdc620a3210ed2c6e3c9a4" translate="yes" xml:space="preserve">
          <source>This selector only applies to one element; you cannot use it to exclude all ancestors. For instance, &lt;code&gt;body :not(table) a&lt;/code&gt; will still apply to links inside of a table, since &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr&quot;&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;&lt;/a&gt; will match with the &lt;code&gt;:not()&lt;/code&gt; part of the selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6022e0da0054b23f76ec54ab70aaee2fb09d1" translate="yes" xml:space="preserve">
          <source>This set uses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57decb30f2277952d0c6ac2e080e256653a7106f" translate="yes" xml:space="preserve">
          <source>This shorthand declaration is actually equivalent to the longhand declarations above plus &lt;code&gt;font-variant: normal&lt;/code&gt; and &lt;code&gt;font-size-adjust: none&lt;/code&gt; (CSS2.0 / CSS3), &lt;code&gt;font-stretch: normal&lt;/code&gt; (CSS3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7bef9f09f388a29fffaf957887aa86de3d6e43" translate="yes" xml:space="preserve">
          <source>This simple example styles the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; element so that the text slides in from off the right edge of the browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3541c7d96099f01c2ee84f288cd9d5193953d6e2" translate="yes" xml:space="preserve">
          <source>This subclass of step functions are sometimes also called staircase functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edb17fe2e456222a256d902a1951af12ca27391" translate="yes" xml:space="preserve">
          <source>This symbol will be prepended to the representation when the counter is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b799304a1cb57fd6d4081ce8ad0f50cac9a68d61" translate="yes" xml:space="preserve">
          <source>This technique of using auto-placement with some rules applied to certain items is very useful, and can help you to deal with content that is being output by a CMS for example, where you have repeated items and can perhaps add a class to certain ones as they are rendered into the HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d62a65680b21ac591fc204d790d74168e9e6e9" translate="yes" xml:space="preserve">
          <source>This tells the browser that 75% of the way through the animation sequence, the header should have its left margin at 25% and the width should be 150%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d271fee80f5e9b6e6193beb3e5749b739250119" translate="yes" xml:space="preserve">
          <source>This tool can be used to generate CSS3 &lt;a href=&quot;../border-image&quot;&gt;&lt;code&gt;border-image&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6fd44b1ba30298c28fadc84bb53e3f90a8b502" translate="yes" xml:space="preserve">
          <source>This tool can be used to generate CSS3 &lt;a href=&quot;../border-radius&quot;&gt;&lt;code&gt;border-radius&lt;/code&gt;&lt;/a&gt; effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44881064f4556a9d4d0720f8c589914bc350f79c" translate="yes" xml:space="preserve">
          <source>This tool lets you construct CSS &lt;a href=&quot;../box-shadow&quot;&gt;&lt;code&gt;box-shadow&lt;/code&gt;&lt;/a&gt; effects, to add box shadow effects to your CSS objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b5250d1f28b02ccef7180fb2169fd974f831db" translate="yes" xml:space="preserve">
          <source>This tool makes it easy to create, adjust, and experiment with custom colors for the web. It also makes it easy to convert between various &lt;a href=&quot;../color_value&quot;&gt;color formats&lt;/a&gt; supported by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;, including: HEXA colors, RGB (Red/Green/Blue) and HSL (Hue/Saturation/Lightness). Control over the alpha channel is also supported on RGB (rgba) and HSL (hsla) formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd5eb912fece24bd2bd729cf548026145d40af6" translate="yes" xml:space="preserve">
          <source>This tool makes it easy to create, adjust, and experiment with custom colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec18c953f96b7fa8a964fed6d8cad3b89190c31" translate="yes" xml:space="preserve">
          <source>This tool will help you identify the perfect CSS colors to apply to your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc2cbe28315d28c1d6bf9e670a183a56ddd5e99" translate="yes" xml:space="preserve">
          <source>This transformation applies to the 3D space and can't be represented on the plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163dd69d7b364117a5e5f70430f9b76602751048" translate="yes" xml:space="preserve">
          <source>This transformation is a shear mapping (&lt;a href=&quot;https://en.wikipedia.org/wiki/Shear_mapping&quot;&gt;transvection&lt;/a&gt;) that distorts each point within an element by a certain angle in the horizontal and vertical directions. The coordinates of each point are modified by a value proportionate to the specified angle and the distance to the origin; thus, the farther from the origin a point is, the greater will be the value added it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ea9811d08673dda0ac4d783e848f813cd6e60a" translate="yes" xml:space="preserve">
          <source>This transformation is a shear mapping (&lt;a href=&quot;https://en.wikipedia.org/wiki/Shear_mapping&quot;&gt;transvection&lt;/a&gt;) that distorts each point within an element by a certain angle in the horizontal direction. The abscissa coordinate of each point is modified by a value proportionate to the specified angle and the distance to the origin; thus, the farther from the origin a point is, the greater will be the value added it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0162013a4eb89386dcfa9f0057b29e99a564de7" translate="yes" xml:space="preserve">
          <source>This transformation is a shear mapping (&lt;a href=&quot;https://en.wikipedia.org/wiki/Shear_mapping&quot;&gt;transvection&lt;/a&gt;) that distorts each point within an element by a certain angle in the vertical direction. The ordinate coordinate of each point is modified by a value proportionate to the specified angle and the distance to the origin; thus, the farther from the origin a point is, the greater will be the value added it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b2f40df7581b428c2c444f44753cdfd7c9d4bf" translate="yes" xml:space="preserve">
          <source>This transformation is characterized by a three-dimensional vector. Its coordinates define how much the element moves in each direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fbd9c9b180f687bd0484cce6108caeaa3b1dc2" translate="yes" xml:space="preserve">
          <source>This transformation is characterized by a two-dimensional vector. Its coordinates define how much the element moves in each direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1cd0e1b99d5be31ef13b7a9ac7e58e49cba82a" translate="yes" xml:space="preserve">
          <source>This transformation is defined by a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; which specifies how far inward or outward the element or elements move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06419d6c849b895e23d00849598cfd4c7405d1d5" translate="yes" xml:space="preserve">
          <source>This transformation is not a linear transformation in ℝ&lt;sup&gt;3&lt;/sup&gt;, and can't be represented using a Cartesian-coordinate matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d87556e10baa7f69459fc68ba92f7773843276c" translate="yes" xml:space="preserve">
          <source>This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle&quot;&gt;&lt;code&gt;window.getComputedStyle()&lt;/code&gt;&lt;/a&gt; to fetch the style of each element, shifting it to the following element. Notice that before it begins doing so it saves a copy of the last box's style since it will be overwritten by the third element's style. By simply copying the values of the &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt; property from one element to the next with each mouse click, we achieve the desired effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261c3d9e3055ac6fc1d821e0e58d0a2ad6f3146d" translate="yes" xml:space="preserve">
          <source>This value allows the display of data that is already formatted using a tool following the Unicode Bidirectional Algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78112fa6af189006cdc2623c61a51b4af979f917" translate="yes" xml:space="preserve">
          <source>This value always creates a new &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context&quot;&gt;stacking context&lt;/a&gt;. In printed documents, the element is placed in the same position on &lt;em&gt;every page&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670dd2667f4f59e8a474d9e327458769ed577a51" translate="yes" xml:space="preserve">
          <source>This value always creates a new &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context&quot;&gt;stacking context&lt;/a&gt;. Note that a sticky element &quot;sticks&quot; to its nearest ancestor that has a &quot;scrolling mechanism&quot; (created when &lt;code&gt;overflow&lt;/code&gt; is &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;scroll&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;, or &lt;code&gt;overlay&lt;/code&gt;), even if that ancestor isn't the nearest actually scrolling ancestor. This effectively inhibits any &quot;sticky&quot; behavior (see the &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/865&quot;&gt;Github issue on W3C CSSWG&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f4d4d7237e7ba91633d564cb406b475cee41c2" translate="yes" xml:space="preserve">
          <source>This value creates a new &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context&quot;&gt;stacking context&lt;/a&gt; when the value of &lt;code&gt;z-index&lt;/code&gt; is not &lt;code&gt;auto&lt;/code&gt;. Its effect on &lt;code&gt;table-*-group&lt;/code&gt;, &lt;code&gt;table-row&lt;/code&gt;, &lt;code&gt;table-column&lt;/code&gt;, &lt;code&gt;table-cell&lt;/code&gt;, and &lt;code&gt;table-caption&lt;/code&gt; elements is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bb88a8f3f11f6608ca2e612b17e4bb3a84ce2b" translate="yes" xml:space="preserve">
          <source>This value creates a new &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context&quot;&gt;stacking context&lt;/a&gt; when the value of &lt;code&gt;z-index&lt;/code&gt; is not &lt;code&gt;auto&lt;/code&gt;. The margins of absolutely positioned boxes do not &lt;a href=&quot;css_box_model/mastering_margin_collapsing&quot;&gt;collapse&lt;/a&gt; with other margins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae965a31f6f61fcd2dc66e3f0bc6b4ae523551a0" translate="yes" xml:space="preserve">
          <source>This value is recognized, but has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e64814cf2369f729ffec459913fd48abefab8b" translate="yes" xml:space="preserve">
          <source>This value matches any sequence of one or more tokens, so long as the sequence does not contain an unallowed token. It represents the entirety of what a valid declaration can have as its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8261e76d30b42b91ece86d4ade7bb58f765f210d" translate="yes" xml:space="preserve">
          <source>This value of &lt;code&gt;display&lt;/code&gt; controls box generation, and whether the element should generate a box that we can style and see on the page, or whether instead the box it would normally create should be removed and the child elements essentially moved up to participate in whatever layout method the parent would have been part of. This is much easier to see with an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac6a98f74589a5bb9bf233f5de747f02579b23c" translate="yes" xml:space="preserve">
          <source>This value was proposed for CSS 2, but removed from the final CSS 2.1 specification. It is non-standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfbd657f7f94d69299ab0122a6eca76a67fb996" translate="yes" xml:space="preserve">
          <source>This value was supported before Firefox 51, but as an alias to &lt;code&gt;border-box&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb534057048dd7f1cbdf5d187aba295bb6226f51" translate="yes" xml:space="preserve">
          <source>This was added early so is out of sync with the equivalent Chromium version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183f1a030ae320476bd533a12d404bf3c6dd948c" translate="yes" xml:space="preserve">
          <source>This was inspired by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a447a037679f71eeb56aff2b84a57d8097cd889" translate="yes" xml:space="preserve">
          <source>This will first try loading &lt;em&gt;foo.cur&lt;/em&gt;. If that file does not exist or is not valid for some other reason, &lt;em&gt;bar.gif&lt;/em&gt; is tried, and if that can't be used either,&lt;code&gt; auto &lt;/code&gt;will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e62d8304ae580e2f664ddcc8953e0bc9de16975" translate="yes" xml:space="preserve">
          <source>This will help not only users with low vision and contrast sensitivity issues but also users that are working on a computer or phone with direct sunlight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a15c49eff3d9347c72613f761375afa78964ae" translate="yes" xml:space="preserve">
          <source>This will not create any layout, however our items now have names we can use to do so. Staying outside of any media queries I am now going to set up the layout for the mobile width. Here I am keeping everything in source order, trying to avoid any disconnect between the source and display as described in the guide &lt;em&gt;&lt;a href=&quot;css_grid_layout_and_accessibility&quot;&gt;Grid layout and accessibility&lt;/a&gt;&lt;/em&gt;. I have not defined any column or row tracks but this layout dictates a single column, and rows will be created as needed for each of the items in the implicit grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e637dfb2b8feec056104075d564e91798e3ddc" translate="yes" xml:space="preserve">
          <source>This works in a more consistent way when using box alignment that uses start and end rather than physical directions for alignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2b0b49048a748b16682aa9916a8b353d99fe4d" translate="yes" xml:space="preserve">
          <source>This works very similarly to the &lt;a href=&quot;-moz-image-region&quot;&gt;&lt;code&gt;-moz-image-region&lt;/code&gt;&lt;/a&gt; property, which is used with the &lt;a href=&quot;list-style-image&quot;&gt;&lt;code&gt;list-style-image&lt;/code&gt;&lt;/a&gt; property to use parts of an image as the bullets in lists. However, this can be used for any CSS background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291613e25d77f6b356e878f76fbe63960b7d9dc3" translate="yes" xml:space="preserve">
          <source>This would convert to the Level 4 syntax as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e5e6f723212f08fd80707e1172176d8645f9aa" translate="yes" xml:space="preserve">
          <source>This would move the element with the ID 'btn1' 20 pixels to the left and the element with the ID 'btn2' 40 pixels to the left (assuming they have the class &lt;code&gt;toolbtn&lt;/code&gt; assigned and are affected by the image rule above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e8d6d965bb0474e510aee6041116bc03001564" translate="yes" xml:space="preserve">
          <source>This, in essence, lets you establish an acceleration curve so that the speed of the transition can vary over its duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59cf79bf0bb20826e67a99d12b6a32f8f34b27b" translate="yes" xml:space="preserve">
          <source>Those areas are not associated with any particular grid item, but can be referenced from the grid-placement properties &lt;a href=&quot;grid-row-start&quot;&gt;&lt;code&gt;grid-row-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;grid-row-end&quot;&gt;&lt;code&gt;grid-row-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;grid-column-start&quot;&gt;&lt;code&gt;grid-column-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;grid-column-end&quot;&gt;&lt;code&gt;grid-column-end&lt;/code&gt;&lt;/a&gt;, and their shorthands &lt;a href=&quot;grid-row&quot;&gt;&lt;code&gt;grid-row&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;grid-column&quot;&gt;&lt;code&gt;grid-column&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;grid-area&quot;&gt;&lt;code&gt;grid-area&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a04728a4811ad444e7121e1a554c741efdc3150" translate="yes" xml:space="preserve">
          <source>Those of us who have been doing web development for more years than we care to remember might consider that CSS Grid is a little bit like using &amp;ldquo;tables for layout&amp;rdquo;. Back in the early days of web design, the way we constructed page layout was to use HTML tables, then fragment our design into the cells of those tables in order to create a layout. This had some advantages over the &amp;ldquo;CSS Positioning&amp;rdquo; that came afterwards, in that we could take advantage of the alignment and full height columns offered by table display. The biggest downside however was that it tied our design to the mark-up, often creating accessibility issues as it did so. In order to lay the design out in the table we often broke up the content in ways that made no sense at all when read out by a screen reader for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e5bb909daae5123a1d6248d2bf5ed900a8e802" translate="yes" xml:space="preserve">
          <source>Though &lt;a href=&quot;https://lists.w3.org/Archives/Public/www-style/2014Jun/0396.html&quot;&gt;submitted&lt;/a&gt; to the W3C, with positive initial feedback, this property is not yet part of any specification; currently, this is a Mozilla-specific extension (that is, &lt;code&gt;-moz-orient&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5b3f2f1bb4e1d582dfaca41819f98a9371e506" translate="yes" xml:space="preserve">
          <source>Though it cannot be set to a custom value using the shorthand, &lt;code&gt;border&lt;/code&gt; now resets &lt;a href=&quot;border-image&quot;&gt;&lt;code&gt;border-image&lt;/code&gt;&lt;/a&gt; to its initial value (&lt;code&gt;none&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a4e53954a8ccf114c355eda70a994b801b6f17" translate="yes" xml:space="preserve">
          <source>Though many keywords have been adapted from &lt;a href=&quot;https://en.wikipedia.org/wiki/X_Window_System&quot;&gt;X11&lt;/a&gt;, their RGB values may differ from the corresponding color on X11 systems since manufacturers sometimes tailor X11 colors to their specific hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84939d300a1107d0bf84c2f18da5774562f2e535" translate="yes" xml:space="preserve">
          <source>Though more precisely worded, there is no practical change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235804aa6062a109cd5464b34dba83b0ae6a3149" translate="yes" xml:space="preserve">
          <source>Though style sheets come from these different origins, they overlap in scope; to make this work, the cascade algorithm defines how they interact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddfe36160c68959c08e53fdd84b596bf6c051b5" translate="yes" xml:space="preserve">
          <source>Though technically removing the &lt;code&gt;transparent&lt;/code&gt; keyword, this doesn't change anything as it has been incorporated as a true &lt;a href=&quot;color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5017ad1ade0ef7eb5bb3dd47b2016d9369323bbe" translate="yes" xml:space="preserve">
          <source>Thoughts on partial implementations of Box Alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be46adb6fa340b94950df367a076a7aa72a3345b" translate="yes" xml:space="preserve">
          <source>Thoughts on partial implementations of Box alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e867d29cd865e7fc9ba77a85aa60b1c11e3030" translate="yes" xml:space="preserve">
          <source>Three &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;s representing an origin-centered vector that defines a line around which you want to rotate the element, plus an &lt;a href=&quot;angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; specifying the angle to rotate the element through. Equivalent to a &lt;code&gt;rotate3d()&lt;/code&gt; (3D rotation) function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db63c50fd2b5dd232e4912ccfff42848fd7b7ee" translate="yes" xml:space="preserve">
          <source>Three &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;s that specify the X, Y, and Z axis scaling values (respectively) of a 3D scale. Equivalent to a &lt;code&gt;scale3d()&lt;/code&gt; (3D scaling) function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a048ac694dd0c4ecb059ba8e708cba14fe76e23" translate="yes" xml:space="preserve">
          <source>Three length/percentage values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e8876305ab2eb9a029a6fe530f9b59e4b8fae0" translate="yes" xml:space="preserve">
          <source>Three lengths or percentages that specify the X, Y, and Z axis translation values (respectively) of a 3D translation. Equivalent to a &lt;code&gt;translate3d()&lt;/code&gt; (3D translation) function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27103b44cba16b20a2bbc8a978ea01e9ae55bae3" translate="yes" xml:space="preserve">
          <source>Three-value syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0f8b98ab2690fc7da6f6d9f21998fffaded300" translate="yes" xml:space="preserve">
          <source>Three-value syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b9354b1238e64aba3455417af9b148ed18fb84" translate="yes" xml:space="preserve">
          <source>ThreeDDarkShadow</source>
          <target state="translated">ThreeDDarkShadow</target>
        </trans-unit>
        <trans-unit id="5b9623e69033d0ee4ebefad626648bae40edf797" translate="yes" xml:space="preserve">
          <source>ThreeDFace</source>
          <target state="translated">ThreeDFace</target>
        </trans-unit>
        <trans-unit id="134812047ed2e716fef1f7b1ee95aa28d15bf646" translate="yes" xml:space="preserve">
          <source>ThreeDHighlight</source>
          <target state="translated">ThreeDHighlight</target>
        </trans-unit>
        <trans-unit id="5b9be515c6a4fc1ec98e857b844e2436f64c4d04" translate="yes" xml:space="preserve">
          <source>ThreeDLightShadow</source>
          <target state="translated">ThreeDLightShadow</target>
        </trans-unit>
        <trans-unit id="08739c87e0b705cc7399b35cdc23b94bd6b67f8e" translate="yes" xml:space="preserve">
          <source>ThreeDShadow</source>
          <target state="translated">ThreeDShadow</target>
        </trans-unit>
        <trans-unit id="cbba77032e6a098407aa79669a69437f79ba2307" translate="yes" xml:space="preserve">
          <source>Thus, each circle in the source image is 30 by 30 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce434fad44601565ddb013a0aadf46d9465c4f6" translate="yes" xml:space="preserve">
          <source>Tiling a large image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ede20768371318373d04e97f16677f1f4c9f4db" translate="yes" xml:space="preserve">
          <source>Timing functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9814f64825d32b092356235b3146befb1ebaeedf" translate="yes" xml:space="preserve">
          <source>Timing functions may be specified on individual keyframes in a &lt;a href=&quot;@keyframes&quot;&gt;@keyframes&lt;/a&gt; rule. If no &lt;code&gt;&lt;strong&gt;animation-timing-function&lt;/strong&gt;&lt;/code&gt; is specified on a keyframe, the corresponding value of &lt;code&gt;&lt;strong&gt;animation-timing-function&lt;/strong&gt;&lt;/code&gt; from the element to which the animation is applied is used for that keyframe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf34656f3452fd2fb7eff16c55a3039dc5ff07e" translate="yes" xml:space="preserve">
          <source>Tips and tricks to help you get the most out of CSS animations. Currently offers a technique for replaying an animation which has already run through to completion, which the API doesn't support inherently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef63197f7f9ea99439be668810f19581bc14f5c5" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;testing_media_queries&quot;&gt;test and monitor media states&lt;/a&gt; using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia&quot;&gt;&lt;code&gt;Window.matchMedia()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener&quot;&gt;&lt;code&gt;MediaQueryList.addListener()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cc26cf3ef04b9754f0a7019096ab38c249c5f2" translate="yes" xml:space="preserve">
          <source>To align things on the block axis you use the properties that start with &lt;code&gt;align-&lt;/code&gt;, &lt;a href=&quot;../align-content&quot;&gt;&lt;code&gt;align-content&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace6a31ae05637b9c240a98b87bba24c2aabcfad" translate="yes" xml:space="preserve">
          <source>To align things on the inline axis you use the properties that start with &lt;code&gt;justify-&lt;/code&gt;, &lt;a href=&quot;../justify-content&quot;&gt;&lt;code&gt;justify-content&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../justify-items&quot;&gt;&lt;code&gt;justify-items&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../justify-self&quot;&gt;&lt;code&gt;justify-self&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92abf7fff413e67f5ab044245897204676c91d0" translate="yes" xml:space="preserve">
          <source>To be sure that the styles are recalculated, we use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame&quot;&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;, specifying a callback. Our callback gets executed just before the next repaint of the document. The problem for us is that because it's before the repaint, the style recomputation hasn't actually happened yet! So...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c579ac60d581d3806605728e0f33fa1cb74196" translate="yes" xml:space="preserve">
          <source>To become familiar with line based positioning in grid try to build a few common layouts by placing items onto grids with varying numbers of columns. Remember that if you do not place all of the items, any leftover items will be placed according to auto-placement rules. This may result in the layout you want, but if something is appearing somewhere unexpected, check that you have set a position for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecc1aa92093de2ee6446c75d27be3ca426f776d" translate="yes" xml:space="preserve">
          <source>To best accommodate people who adjust a site's text size, use &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units#Numeric_values&quot;&gt;em&lt;/a&gt;&lt;/code&gt;s when you need a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; for your &lt;a href=&quot;media_queries/using_media_queries&quot;&gt;media queries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5de17eb86bed7515b559507432115b6ad83065" translate="yes" xml:space="preserve">
          <source>To better understand what's different about variable fonts, it is worth reviewing what non-variable ones are like and how they compare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1423898ce1a97cc6b375bee28c4b5f244faf5a49" translate="yes" xml:space="preserve">
          <source>To both hide an element &lt;em&gt;and remove it from the document layout&lt;/em&gt;, set the &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;none&lt;/code&gt; instead of using &lt;code&gt;visibility&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7277eab28e4aac445fc158f0636ebf3ef5b422af" translate="yes" xml:space="preserve">
          <source>To cause an item to span across columns use the property &lt;a href=&quot;../column-span&quot;&gt;&lt;code&gt;column-span&lt;/code&gt;&lt;/a&gt; with a value of &lt;code&gt;all&lt;/code&gt;. This will cause the element to span all of the columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61825e511b84883f57b7dab67b99b0b57360b550" translate="yes" xml:space="preserve">
          <source>To cause wrapping behaviour add the property &lt;a href=&quot;../flex-wrap&quot;&gt;&lt;code&gt;flex-wrap&lt;/code&gt;&lt;/a&gt; with a value of &lt;code&gt;wrap&lt;/code&gt;. Now, should your items be too large to all display in one line, they will wrap onto another line. The live sample below contains items that have been given a width, the total width of the items being too wide for the flex container. As &lt;code&gt;flex-wrap&lt;/code&gt; is set to &lt;code&gt;wrap&lt;/code&gt;, the items wrap. Set it to &lt;code&gt;nowrap&lt;/code&gt;, which is also the initial value, and they will instead shrink to fit the container because they are using initial flexbox values that allows items to shrink. Using &lt;code&gt;nowrap&lt;/code&gt; would cause an overflow if the items were not able to shrink, or could not shrink small enough to fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef64dc85a015d0c6a737bda0589e3b18d64cf6e7" translate="yes" xml:space="preserve">
          <source>To center something horizontally in modern browsers, you can use &lt;code&gt;&lt;a href=&quot;display&quot;&gt;display&lt;/a&gt;: flex; &lt;a href=&quot;justify-content&quot;&gt;justify-content&lt;/a&gt;: center;&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42b0a3510fc222c042b0f56a196f74b4312d10d" translate="yes" xml:space="preserve">
          <source>To centre our box we use the &lt;code&gt;align-items&lt;/code&gt; property to align our item on the cross axis, which in this case is the block axis running vertically. We use &lt;code&gt;justify-content&lt;/code&gt; to align the item on the main axis, which in this case the inline axis running horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1e34476acc14d510fd1cc480d1963fdfe13cb6" translate="yes" xml:space="preserve">
          <source>To conditionally apply styles with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;&lt;a href=&quot;../@media&quot;&gt;&lt;code&gt;@media&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../@import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../at-rule&quot;&gt;at-rules.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a6b8c06c143d1168204bdf6d266fa145a571b3" translate="yes" xml:space="preserve">
          <source>To conform to the CSS3 standard, Firefox 4 changes the handling of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; values to match the specification. You can specify an ellipse as a border on an arbitrary sized element with &lt;code&gt;border-radius: 50%;&lt;/code&gt;. Firefox 4 also makes rounded corners clip content and images if &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/overflow&quot;&gt;&lt;code&gt;overflow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: visible&lt;/code&gt; is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec2d4df856ff9901d76d709bf2992c624988b3b" translate="yes" xml:space="preserve">
          <source>To control breaks inside boxes use the &lt;a href=&quot;../break-inside&quot;&gt;&lt;code&gt;break-inside&lt;/code&gt;&lt;/a&gt; property. This property takes values of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1b040511cd40db91182d8a6568c7fb9a34f584" translate="yes" xml:space="preserve">
          <source>To create a CSS animation sequence, you style the element you want to animate with the &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;animation&lt;/code&gt;&lt;/a&gt; property or its sub-properties. This lets you configure the timing, duration, and other details of how the animation sequence should progress. This does &lt;strong&gt;not&lt;/strong&gt; configure the actual appearance of the animation, which is done using the &lt;a href=&quot;../@keyframes&quot;&gt;&lt;code&gt;@keyframes&lt;/code&gt;&lt;/a&gt; at-rule as described in &lt;a href=&quot;#Defining_the_animation_sequence_using_keyframes&quot;&gt;Defining the animation sequence using keyframes&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87e3a3b1c8a00ce3021d8301346b8a89895aab0" translate="yes" xml:space="preserve">
          <source>To create a linear gradient that repeats so as to fill its container, use the &lt;a href=&quot;repeating-linear-gradient&quot;&gt;&lt;code&gt;repeating-linear-gradient()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e41731f8e39ade574559708c9f298d903b6642" translate="yes" xml:space="preserve">
          <source>To create a multicol container you must use at least one of the &lt;code&gt;column-*&lt;/code&gt; properties, these being &lt;code&gt;column-count&lt;/code&gt; and &lt;code&gt;column-width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775eb5578e6a7d4c238d1f0556d42070b6f5e57e" translate="yes" xml:space="preserve">
          <source>To create a radial gradient that repeats so as to fill its container, use the &lt;a href=&quot;repeating-radial-gradient&quot;&gt;&lt;code&gt;repeating-radial-gradient()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d173560536cf9f4a7b3fb7d796277a6a96b4540c" translate="yes" xml:space="preserve">
          <source>To create a smooth gradient, the &lt;code&gt;radial-gradient()&lt;/code&gt; function draws a series of concentric shapes radiating out from the center to the &lt;em&gt;ending shape&lt;/em&gt; (and potentially beyond). The ending shape may be either a circle or an ellipse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7f910862db4bf0bb181801e5b5cd4f620e9741" translate="yes" xml:space="preserve">
          <source>To create the most basic type of gradient, all you need is to specify two colors. These are called &lt;em&gt;color stops&lt;/em&gt;. You must have at least two, but you can have as many as you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6621bca071c509fdac51534131c84ee192feffdd" translate="yes" xml:space="preserve">
          <source>To define our keyframes using JavaScript, we need to write them out as a CSS string. All we do is set up a &lt;code&gt;keyframes&lt;/code&gt; variable, prefixing each attribute as it's constructed. This variable, once constructed, contains the complete description of all the keyframes needed by our animation sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672e14bdbbdac1cc77db3172c2db5a40873fb390" translate="yes" xml:space="preserve">
          <source>To demonstrate how this grid system works I have four child elements inside my wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1526f4ae4851ce977023c0e7cd643eeb7ca765db" translate="yes" xml:space="preserve">
          <source>To determine if a break must be done, the following rules are applied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db784853284dc86c3cd4e37f26bafb0c6d21edb8" translate="yes" xml:space="preserve">
          <source>To disable the default styling:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd97afa9f783c9aef1d6e1c3e27a5f9918d726f" translate="yes" xml:space="preserve">
          <source>To distribute the space between or around the items we use the alignment properties in flexbox, and the &lt;a href=&quot;../justify-content&quot;&gt;&lt;code&gt;justify-content&lt;/code&gt;&lt;/a&gt; property. You can read more about this property in &lt;a href=&quot;aligning_items_in_a_flex_container&quot;&gt;Aligning Items in a flex container&lt;/a&gt;, which deals with aligning items on the main axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b739f524c8c899992e749c422f2efdf717c39d" translate="yes" xml:space="preserve">
          <source>To do this, add the property &lt;a href=&quot;../grid-auto-flow&quot;&gt;&lt;code&gt;grid-auto-flow&lt;/code&gt;&lt;/a&gt; with a value of &lt;code&gt;dense&lt;/code&gt; to the container. This is the same property you use to change the flow order to &lt;code&gt;column&lt;/code&gt;, so if you were working in columns you would add both values &lt;code&gt;grid-auto-flow: column dense&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d578c97f32a3a267d42c6283d72cc34e26ece9" translate="yes" xml:space="preserve">
          <source>To ensure the outline is visible, performs a color inversion of the background. Note that browsers are not required to support this value; if they don't, this keyword is considered invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350a7b8a9aac14d9b5f026d5888bbf4a74146754" translate="yes" xml:space="preserve">
          <source>To explore the box values in more detail see our guide covering &lt;a href=&quot;shapes_from_box_values&quot;&gt;Shapes From Box Values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c1d557334622e6b04565560387bcdccc922349" translate="yes" xml:space="preserve">
          <source>To have an element take up the space that it would normally take, but without actually rendering anything, use the &lt;a href=&quot;visibility&quot;&gt;&lt;code&gt;visibility&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcbee988b4448507238bb28b3f4791a0fb497c7" translate="yes" xml:space="preserve">
          <source>To have more control over flex items we can target them directly. We do this by way of three properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539d7ab2f9170470943722e07a6b3fd4877abbee" translate="yes" xml:space="preserve">
          <source>To limit the styles to devices with a screen, you can chain the media features to the &lt;code&gt;screen&lt;/code&gt; media type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52ca9e539b3f6cd8b1e1ca5e7a17a3388b35068" translate="yes" xml:space="preserve">
          <source>To make the animation repeat itself, simply use the &lt;a href=&quot;../animation-iteration-count&quot;&gt;&lt;code&gt;animation-iteration-count&lt;/code&gt;&lt;/a&gt; property to indicate how many times to repeat the animation. In this case, let&amp;rsquo;s use &lt;code&gt;infinite&lt;/code&gt; to have the animation repeat indefinitely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a0c70a9dec5d7e1ed3a3e39a2c2246c77876c0" translate="yes" xml:space="preserve">
          <source>To make the grid container a containing block you need to add the position property to the container with a value of relative, just as you would make a containing block for any other absolutely positioned items. Once you have done this, if you give a grid item &lt;code&gt;position: absolute&lt;/code&gt; it will take as its containing block the grid container or, if the item also has a grid position, the area of the grid it is placed into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8b80a31aa139d66d9811d344475e98b89844b8" translate="yes" xml:space="preserve">
          <source>To match the size of a single diamond, we will use a value of 81 divided by 3, or &lt;code&gt;27&lt;/code&gt;, for slicing the image into corner and edge regions. To center the border image on the edge of the element's background, we will make the outset values equal to half of the width values. Finally, a repeat value of &lt;code&gt;round&lt;/code&gt; will make the border slices fit evenly, i.e., without clipping or gaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1dabff39d4846d5f7d09fdda1fe5ed7bd1c373" translate="yes" xml:space="preserve">
          <source>To match the size of a single diamond, we will use a value of 90 divided by 3, or &lt;code&gt;30&lt;/code&gt;, for slicing the image into corner and edge regions. A repeat value of &lt;code&gt;round&lt;/code&gt; will make the mask slices fit evenly, i.e., without clipping or gaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ed639207ddd64df6002f67169360ed8639423f" translate="yes" xml:space="preserve">
          <source>To mitigate this problem, Gecko 2 implemented privacy updates to limit the amount of information that can be obtained from visited links. Other browsers have also made similar changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a921f35a712c65c97ccccac13018e7990c3cfe" translate="yes" xml:space="preserve">
          <source>To output new lines, you must escape them with a line feed character such as &lt;code&gt;\A&lt;/code&gt; or &lt;code&gt;\00000A&lt;/code&gt;. In your code, however, strings can span multiple lines, in which case each new line must be escaped with a &lt;code&gt;\&lt;/code&gt; as the last character of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5d77c962b033d1894f96f69fd973dfd2c30288" translate="yes" xml:space="preserve">
          <source>To position &lt;code&gt;overlay&lt;/code&gt; using these implicit named lines is the same as positioning an item using lines that we have named.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3673790c8edf51f1808032b775a2b9cd29252d5" translate="yes" xml:space="preserve">
          <source>To preserve users' privacy, Firefox and other browsers will lie to web applications under certain circumstances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa3ec29ea0ad59afd57c6f401e5919dc610f635" translate="yes" xml:space="preserve">
          <source>To prevent ambiguity, each property that uses &lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt; forbids the use of specific values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7a91a1fcb4112994880234adbf111b1b94b728" translate="yes" xml:space="preserve">
          <source>To prevent overflow, normally unbreakable words may be broken at arbitrary points if there are no otherwise acceptable break points in the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85982196abc8d5af3b524952e2967b8867c251e" translate="yes" xml:space="preserve">
          <source>To prevent overflow, word breaks should be inserted between any two characters (excluding Chinese/Japanese/Korean text).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbea03f03acc66b3dc7c27ee183ebe6fd5bb388" translate="yes" xml:space="preserve">
          <source>To prevent the image growing too large, add a &lt;a href=&quot;../max-width&quot;&gt;&lt;code&gt;max-width&lt;/code&gt;&lt;/a&gt; to the image. As that side of the media object is using the initial values of flexbox it can shrink but not grow, and uses a &lt;code&gt;flex-basis&lt;/code&gt; of auto. Any &lt;a href=&quot;../width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; or max-width applied to the image will become the &lt;code&gt;flex-basis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd4c6e34df3dc9a0e9fdc1220e0d01683dd2958" translate="yes" xml:space="preserve">
          <source>To provide the browser with a hint as to what format a font resource is &amp;mdash; so it can select a suitable one &amp;mdash; it is possible to include a format type inside a &lt;code&gt;format()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876dfbad9740ef6e1e09c731420a578076f68dce" translate="yes" xml:space="preserve">
          <source>To round off this set of guides to CSS Grid Layout, I am going to walk through a few different layouts, which demonstrate some of the different techniques you can use when designing with grid layout. We will look at an example using &lt;a href=&quot;grid_template_areas&quot;&gt;grid-template-areas&lt;/a&gt;, a typical 12-column flexible grid system, and also a product listing using auto-placement. As you can see from this set of examples, there is often more than one way to achieve the result you want with grid layout. Choose the method you find most helpful for the problems that you are solving and the designs that you need to implement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a4462abc124e147fd8acbe6718cd9495002cf5" translate="yes" xml:space="preserve">
          <source>To see how this layout method works in practice, we can create the same layout that we created with &lt;a href=&quot;../grid-template-areas&quot;&gt;&lt;code&gt;grid-template-areas&lt;/code&gt;&lt;/a&gt;, this time using the 12-column grid system. I am starting with the same markup as used for the grid template areas example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc15c688fd7a66c0a1b00b20e4d0b2fbdf0ae580" translate="yes" xml:space="preserve">
          <source>To see the effect of this property on some sample fonts, see the &lt;a href=&quot;#Font_face_selection&quot;&gt;Font face selection&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2020330c847829bcda6a429f898160b1d4b4e58" translate="yes" xml:space="preserve">
          <source>To specify a size using width and height, you can supply one or two values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec2fdd16a1de1407753aacbdbec14b8108ab526" translate="yes" xml:space="preserve">
          <source>To specify multiple background images, supply multiple values, separated by a comma:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ef4dcdd298de4d6c61c718c26396773d00a6ee" translate="yes" xml:space="preserve">
          <source>To specify multiple shadows, provide a comma-separated list of shadows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d742c3b3a87b162564382499bcb30c4c5c70447" translate="yes" xml:space="preserve">
          <source>To specify the size of multiple background images, separate the value for each one with a comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b779352128484ae9145fa36253b5ca267fc3be" translate="yes" xml:space="preserve">
          <source>To stop receiving notifications about changes to the value of your media query, call &lt;code&gt;removeListener()&lt;/code&gt; on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList&quot;&gt;&lt;code&gt;MediaQueryList&lt;/code&gt;&lt;/a&gt;, passing it the name of the previously-defined callback function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3050f4dd40c5420df8e526e03049cb0a41a1f25c" translate="yes" xml:space="preserve">
          <source>To switch the display of the media object so that the image is on the right and the content is on the left we can use the &lt;code&gt;flex-direction&lt;/code&gt; property set to &lt;code&gt;row-reverse&lt;/code&gt;. The media object now displays the other way around. I have achieved this in the live example by adding a class of &lt;code&gt;flipped&lt;/code&gt; alongside the existing &lt;code&gt;.media&lt;/code&gt; class. This means you can see how the display changes by removing that class from the html.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537d801f165b1c7f09cbba15977c819f2c355ab6" translate="yes" xml:space="preserve">
          <source>To talk about these properties we need to understand the concept of &lt;strong&gt;positive and negative free space&lt;/strong&gt;. When a flex container has positive free space, it has more space than is required to display the flex items inside the container. For example, if I have a 500 pixel-wide container, &lt;a href=&quot;../flex-direction&quot;&gt;&lt;code&gt;flex-direction&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;row&lt;/code&gt;, and I have three flex items each 100 pixels wide, then I have 200 pixels of positive free space, which could be distributed between the items if I wanted them to fill the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6401980c4ebb439dd5562c63633c2b6b3093f9b" translate="yes" xml:space="preserve">
          <source>To target specific media for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/a&gt;, and other &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a67582d252eb7585cc7777ed3d67c5b3c6b29af" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;box-shadow&lt;/code&gt; in Internet Explorer 9 or later, you must set &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/border-collapse&quot;&gt;&lt;code&gt;border-collapse&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;separate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfd15290ea3fc79d68c9eaaa49598c23968eca1" translate="yes" xml:space="preserve">
          <source>To use a CSS counter, it must first be initialized to a value with the &lt;a href=&quot;../counter-reset&quot;&gt;&lt;code&gt;counter-reset&lt;/code&gt;&lt;/a&gt; property (&lt;code&gt;0&lt;/code&gt; by default). The same property can also be used to change its value to any specific number. Once initialized, a counter's value can be increased or decreased with &lt;a href=&quot;../counter-increment&quot;&gt;&lt;code&gt;counter-increment&lt;/code&gt;&lt;/a&gt;. The counter's name must not be &quot;none&quot;, &quot;inherit&quot;, or &quot;initial&quot;; otherwise the declaration is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c5612e32e522cb2992847c1daa61c8f5349446" translate="yes" xml:space="preserve">
          <source>To use a CSS counter, it must first be initialized to a value with the &lt;a href=&quot;counter-reset&quot;&gt;&lt;code&gt;counter-reset&lt;/code&gt;&lt;/a&gt; property (&lt;code&gt;0&lt;/code&gt; by default). The same property can also be used to change its value to any specific number. Once initialized, a counter's value can be increased or decreased with &lt;a href=&quot;counter-increment&quot;&gt;&lt;code&gt;counter-increment&lt;/code&gt;&lt;/a&gt;. The counter's name must not be &quot;none&quot;, &quot;inherit&quot;, or &quot;initial&quot;; otherwise the declaration is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcea17a2d8ac709450b36a9a06db2afc0fbdd4fe" translate="yes" xml:space="preserve">
          <source>To use an image for the shape the image needs to have an Alpha Channel, an area that is not fully opaque. The &lt;a href=&quot;../shape-image-threshold&quot;&gt;&lt;code&gt;shape-image-threshold&lt;/code&gt;&lt;/a&gt; property is used to set a threshold for this opacity. Pixels that are more opaque than this value will be used to calculate the area of the shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c706cc3d2276ca70126053181663c0190ba67b3" translate="yes" xml:space="preserve">
          <source>To use keyframes, create a &lt;code&gt;@keyframes&lt;/code&gt; rule with a name that is then used by the &lt;a href=&quot;animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt; property to match an animation to its keyframe declaration. Each &lt;code&gt;@keyframes&lt;/code&gt; rule contains a style list of keyframe selectors, which specify percentages along the animation when the keyframe occurs, and a block containing the styles for that keyframe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da73659c32b9fb0abd0a67ad73b32ff4a52a7bfa" translate="yes" xml:space="preserve">
          <source>To use the values of custom properties in JavaScript, it is just like standard properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64d24e4664e73bb5182a687dee8ae052f9f94a5" translate="yes" xml:space="preserve">
          <source>To use this property in a way that is compatible with browsers that do not support &lt;code&gt;font-size-adjust&lt;/code&gt;, it is specified as a number that the &lt;a href=&quot;font-size&quot;&gt;&lt;code&gt;font-size&lt;/code&gt;&lt;/a&gt; property is multiplied by. This means the value specified for the property should generally be the aspect ratio of the first choice font. For example, a style sheet that specifies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42772c1f92737ac62e6660bd76d10288c95e0567" translate="yes" xml:space="preserve">
          <source>To vertically align an inline element's box inside its containing line box. For example, it could be used to vertically position an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; in a line of text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e3d3ecb3d5c3027296888cbd443ae824b06c48" translate="yes" xml:space="preserve">
          <source>To vertically align the content of a cell in a table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24696f6e1199f9d406a835274d191bb17adeba0" translate="yes" xml:space="preserve">
          <source>To-do list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b5531bd8c18296fdfc377b342e7992406e8572" translate="yes" xml:space="preserve">
          <source>Toggling elements with a hidden checkbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="45a025dbf80367ecabf2143f1cd73cb481a93960" translate="yes" xml:space="preserve">
          <source>Tooltips</source>
          <target state="translated">Tooltips</target>
        </trans-unit>
        <trans-unit id="b563c27249ce12cd628c26d96e3c02c7620af875" translate="yes" xml:space="preserve">
          <source>Track listings with &lt;code&gt;repeat()&lt;/code&gt; notation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bfac2e7b375cbe757c72149f0828a80a9de572" translate="yes" xml:space="preserve">
          <source>Track sizing and &lt;code&gt;minmax()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48e0d6740ff407d1a760e1563ad9463738d06d3" translate="yes" xml:space="preserve">
          <source>Tracks can be defined using any length unit. Grid also introduces an additional length unit to help us create flexible grid tracks. The new &lt;code&gt;fr&lt;/code&gt; unit represents a fraction of the available space in the grid container. The next grid definition would create three equal width tracks that grow and shrink according to the available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06acd7bb2cd1791685a23c06f6a580be9f265872" translate="yes" xml:space="preserve">
          <source>Traditional Armenian numbering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58acf391c79dac2d5570672f907b70aefe9dd71e" translate="yes" xml:space="preserve">
          <source>Traditional Chinese formal numbering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9d2d495f745c4bc3dc8b4ea582954c709cbc1f" translate="yes" xml:space="preserve">
          <source>Traditional Chinese informal numbering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110e70049d371835ccf551a4c69230b423cc385b" translate="yes" xml:space="preserve">
          <source>Traditional Georgian numbering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d434a73687584857dfea57f3ae30cba2be5ba249" translate="yes" xml:space="preserve">
          <source>Traditional Hebrew numbering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612e37ec25fbfa1d6bd8ae19a388775047afaebc" translate="yes" xml:space="preserve">
          <source>Traditional TV format in the 20&lt;sup&gt;th&lt;/sup&gt; century.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560cb28a6f6fbec14eb0a43bba16a00d84190880" translate="yes" xml:space="preserve">
          <source>Transformation functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503e969f91d184b38367f21c3fd0f02f00957935" translate="yes" xml:space="preserve">
          <source>Transformation functions alter the appearance of an element by manipulating the values of its coordinates. A linear transformation function is described using a 2x2 matrix, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7eab419ea83e4ad16c0be797c47260ca13144f" translate="yes" xml:space="preserve">
          <source>Transformed into a shorthand property. Added support for the value of &lt;a href=&quot;text-decoration-style&quot;&gt;&lt;code&gt;text-decoration-style&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="b3c8e0ba71757cedf4945c53f356d18d4419e97d" translate="yes" xml:space="preserve">
          <source>Transitions are a great tool to make things look much smoother without having to do anything to your JavaScript functionality. Take the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb62068599aa19deb57437bd27b81d95457c19d" translate="yes" xml:space="preserve">
          <source>Transitions colors progressively along an imaginary line. Generated with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient&quot;&gt;&lt;code&gt;linear-gradient()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9797ed58432158defc9654cd2838e6b0b793aa" translate="yes" xml:space="preserve">
          <source>Transitions colors progressively from a center point (origin). Generated with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/radial-gradient&quot;&gt;&lt;code&gt;radial-gradient()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b172d827c10c061c21479000c2382babe7bd9c" translate="yes" xml:space="preserve">
          <source>Transitions enable you to define the transition between two states of an element. Different states may be defined using &lt;a href=&quot;pseudo-classes&quot;&gt;pseudo-classes&lt;/a&gt; like &lt;a href=&quot;:hover&quot;&gt;&lt;code&gt;:hover&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;:active&quot;&gt;&lt;code&gt;:active&lt;/code&gt;&lt;/a&gt; or dynamically set using JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26e354b8f8d93621370eb8e32ae43870c62ac87" translate="yes" xml:space="preserve">
          <source>Translates an element along the z-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289ab13b2e4cde205bb0afef695184c36583068d" translate="yes" xml:space="preserve">
          <source>Translates an element horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0060feebb9f853b72bbc24a4c7c7f4ef8d4292" translate="yes" xml:space="preserve">
          <source>Translates an element in 3D space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26da82196076c72c60884961e7a914d01f8e58dd" translate="yes" xml:space="preserve">
          <source>Translates an element on the 2D plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53df964ef5d0e6a7009280a2f098da8f1909f787" translate="yes" xml:space="preserve">
          <source>Translates an element vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd643da8197158ea065f9e731f19998b9aa8083" translate="yes" xml:space="preserve">
          <source>Translating the origin of the transformation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cfb09e35b0e8bacc4cfe740b4d9ce1b16efdda" translate="yes" xml:space="preserve">
          <source>Translation (moving)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75705c699cc690ed57348df49a8613264dc273d" translate="yes" xml:space="preserve">
          <source>Translucent cursors are not supported on Windows releases earlier than XP. This is a limitation of the operating system. Transparency works on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64809dca90bca1e669e66eb06ad2c319d68f2c21" translate="yes" xml:space="preserve">
          <source>Tree proximity ignorance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d3ae245f3ce99d23886a01903eea13c1e58bba" translate="yes" xml:space="preserve">
          <source>Triangle</source>
          <target state="translated">Triangle</target>
        </trans-unit>
        <trans-unit id="ca1cde82ecd63ca0818ea98e86be5742f67965ed" translate="yes" xml:space="preserve">
          <source>Tricky edge cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f458c9f72141d76b2df4a2a728b0a5922c2ee4" translate="yes" xml:space="preserve">
          <source>Trims the margins of in-flow boxes and floats whose margins coincide with the container's content edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdc6ab30507420ef21c9b6a85fc2ddf0f729edd" translate="yes" xml:space="preserve">
          <source>TrueType</source>
          <target state="translated">TrueType</target>
        </trans-unit>
        <trans-unit id="17d7d48c7093a423bd1d9ce59ac54b06ab863060" translate="yes" xml:space="preserve">
          <source>Try changing the &lt;code&gt;direction&lt;/code&gt; property to &lt;code&gt;rtl&lt;/code&gt; to cause the boxes to display in a right-to-left direction. The padding on the first box will stay in the same place, whereas the padding on the inline dimension of the second box will switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e95572726d5b0d58591f26582e6895306968b18" translate="yes" xml:space="preserve">
          <source>Try changing the &lt;code&gt;flex-grow&lt;/code&gt; factor from 1 to 0 in this live example to see the different behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8535b29011dd9ec2e3342634e46e392d217a20" translate="yes" xml:space="preserve">
          <source>Try changing the example below to &lt;code&gt;vertical-rl&lt;/code&gt;, as with the first example, to see the effect it has. I am using &lt;code&gt;min-height&lt;/code&gt; in the first example and &lt;code&gt;min-block-size&lt;/code&gt; in the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe639cd1ae8a9f857cdb4c9e45efe238f0bed30" translate="yes" xml:space="preserve">
          <source>Try changing the line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e7792b4e741b698d5f72170b329daaa8f01f04" translate="yes" xml:space="preserve">
          <source>Try out the other values to see how the &lt;code&gt;align-content&lt;/code&gt; property works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d34c40f4db1d498cf9dac4ef1e7841f14f69f9" translate="yes" xml:space="preserve">
          <source>Try the following values of &lt;code&gt;justify-content&lt;/code&gt; in the live example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e3507a1e4e385bebbcebec8c11e779884af343" translate="yes" xml:space="preserve">
          <source>Try these shorthand values in the live example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff53e839b76cf86b4082ef4fcca1cd58c375d2d" translate="yes" xml:space="preserve">
          <source>Turns off the animation so that no dots are displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21151013892912175a63e863fd6f25d32cad2082" translate="yes" xml:space="preserve">
          <source>Turns off the display of an element so that it has no effect on layout (the document is rendered as though the element did not exist). All descendant elements also have their display turned off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09301a827081d22b22a833e561ca879928febff2" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; values that determine the shadow offset. &lt;code&gt;offset-x&lt;/code&gt; specifies the horizontal distance, where negative values place the shadow to the left of the element. &lt;code&gt;offset-y&lt;/code&gt; specifies the vertical distance, where negative values place the shadow above the element. If both values are &lt;code&gt;0&lt;/code&gt;, the shadow is placed directly behind the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736eb7392bd86b340ab149795313ee64059f1679" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;s that specify the X and Y axis scaling values (respectively) of a 2D scale. Equivalent to a &lt;code&gt;scale()&lt;/code&gt; (2D scaling) function with two values specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdabf28fe0c3178e3695e1845d0f7ce582e9b646" translate="yes" xml:space="preserve">
          <source>Two CSS properties control whether and how many columns will appear: &lt;a href=&quot;../column-count&quot;&gt;&lt;code&gt;column-count&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../column-width&quot;&gt;&lt;code&gt;column-width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad6b079f0e80f76301af93d1241a9a0ed98e059" translate="yes" xml:space="preserve">
          <source>Two anonymous block boxes are created, one for the text before the span Element (&lt;code&gt;Some &lt;em&gt;inline&lt;/em&gt; text&lt;/code&gt;) and one for the text after it (&lt;code&gt;followed by more inline text&lt;/code&gt;), which gives the following block structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c38250a8ccb3dd518ae8ffe76927c0aceb00700" translate="yes" xml:space="preserve">
          <source>Two anonymous block boxes are created: one for the text before the paragraph (&lt;code&gt;Some inline text&lt;/code&gt;), and another for the text after it (&lt;code&gt;followed by more inline text&lt;/code&gt;). This builds the following block structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6dad26fb06e70cbfd971354d7a5749be068e85" translate="yes" xml:space="preserve">
          <source>Two dimensions of alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf760f501318b5c7113ab47e35a37f14fd03fc2" translate="yes" xml:space="preserve">
          <source>Two keywords specifies the &lt;code&gt;overscroll-behavior&lt;/code&gt; value on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; axes respectively. If only one value is specified, both x and y are assumed to have the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a9bf72055f40ccb446e88a5de9358ddb49d5d0" translate="yes" xml:space="preserve">
          <source>Two length/percentage values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b767cf5eaa4bf6313bc28585f11fdfdd0978a87" translate="yes" xml:space="preserve">
          <source>Two lengths or percentages that specify the X and Y axis translation values (respectively) of a 2D translation. Equivalent to a &lt;code&gt;translate()&lt;/code&gt; (2D translation) function with two values specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b62b5130525411fcc448fe6421f07438656d30b" translate="yes" xml:space="preserve">
          <source>Two major properties are used to define CSS transforms: &lt;a href=&quot;../transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../transform-origin&quot;&gt;&lt;code&gt;transform-origin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4134d2d3dab8f53c0a4d7e5077f6c0e17ef1a9" translate="yes" xml:space="preserve">
          <source>Two, three, or four &lt;code&gt;&lt;a href=&quot;length&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2db018b5c79b135ee075d5022adb8ee377a788" translate="yes" xml:space="preserve">
          <source>Two-value syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8d73b33ccbed9c1391620da5583d9a1a793e10" translate="yes" xml:space="preserve">
          <source>Two-value syntax (different values for x &amp;amp; y directions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0514fb10dd832a8829da8d31fca8b558cf7741b8" translate="yes" xml:space="preserve">
          <source>Two-value syntax (support for offsets from any edge)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc5530f94375e0a4e77b5d380ed873329f11172" translate="yes" xml:space="preserve">
          <source>Two-value syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a90fccf9c6efd5fb9ee2ce57e260c9ccb82f173" translate="yes" xml:space="preserve">
          <source>Type selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012051ac343ab623ea5ee88af242c0848faff586" translate="yes" xml:space="preserve">
          <source>Type selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb3dd728e32325972bab94733ea18411706637b" translate="yes" xml:space="preserve">
          <source>Types of alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa9e149e6cfcc8b37935ace5e27c25d869a794f" translate="yes" xml:space="preserve">
          <source>Types of positioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617a47e088a4c9b94766f94a993342c62767c9b7" translate="yes" xml:space="preserve">
          <source>Typical replaced elements are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4974ea926afe1b6bb8ea82e02b2dcda5b5b6c814" translate="yes" xml:space="preserve">
          <source>Typical use cases of Flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f625d28442fd1f78f8872a384ac4ee0ba529fd" translate="yes" xml:space="preserve">
          <source>Typical use cases of Flexbox, section &quot;Center item&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7076c80fd74b1b76e28fdef33c781bb5f2f059c" translate="yes" xml:space="preserve">
          <source>Typical use cases of flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274bbed679b958e1e0ae29fd49591fe7da2fc1e5" translate="yes" xml:space="preserve">
          <source>Typically flexbox-based grid systems work by taking flexbox back to the familiar world of float-based layouts. If you assign percentage widths to flex items &amp;mdash; either as &lt;code&gt;flex-basis&lt;/code&gt; or by adding a width to the item itself leaving the value of &lt;code&gt;flex-basis&lt;/code&gt; as &lt;code&gt;auto&lt;/code&gt; &amp;mdash; you can get the impression of a two dimensional layout. You can see this working in the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="cdde5a0016dd0caa7efc8b2c30ff451f29b695ad" translate="yes" xml:space="preserve">
          <source>U+00AD (SHY)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e67d71fa5727eec71df2ae8cb0b9c23a02d60d" translate="yes" xml:space="preserve">
          <source>U+2010 (HYPHEN)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7915a2eee0d13d19c8c56f01baae7e0ba29f48dd" translate="yes" xml:space="preserve">
          <source>UC Browser, which still supports the 2009 &lt;code&gt;display: box&lt;/code&gt; version only with the &lt;code&gt;-webkit-&lt;/code&gt; prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a82d274e18d81af62dd42e655cf9ba5240837a" translate="yes" xml:space="preserve">
          <source>URL values as cursors are supported in Windows, OS/2, and Linux (when using GTK+ 2.4 or better) releases of Mozilla. Mac OS X support was added with Gecko 2 (Firefox 4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd1adcde0bc8facf781238b793307296976619a" translate="yes" xml:space="preserve">
          <source>Ultimately the specification was updated to define &lt;code&gt;display: flex&lt;/code&gt; as the way to create a flex container. Browser support for the up-to-date version of the specification is excellent from this point forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd634113094d3e6d202d5500694fea134a2a87ba" translate="yes" xml:space="preserve">
          <source>Under consideration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8c7b2f13e31bd41d754346d7ed17dd82071c60" translate="yes" xml:space="preserve">
          <source>Under the &quot;fixed&quot; layout method, the entire table can be rendered once the first table row has been downloaded and analyzed. This can speed up rendering time over the &quot;automatic&quot; layout method, but subsequent cell content might not fit in the column widths provided. Cells use the &lt;a href=&quot;overflow&quot;&gt;&lt;code&gt;overflow&lt;/code&gt;&lt;/a&gt; property to determine whether to clip any overflowing content, but only if the table has a known width; otherwise, they won't overflow the cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e92f4157804499496b472619606502426f8903" translate="yes" xml:space="preserve">
          <source>Underlines and overlines are drawn across the full length of the text content, including parts that cross over glyph descenders and ascenders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367a3a61665a45980930367eb5fec66f14017f4e" translate="yes" xml:space="preserve">
          <source>Understanding &lt;code&gt;vertical-align&lt;/code&gt;, or &quot;How (Not) To Vertically Center Content&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7157a355570398263d3685ea0f48f258b6da8567" translate="yes" xml:space="preserve">
          <source>Understanding CSS z-index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd236358bddeca414a0f296bf8da9f48998e482" translate="yes" xml:space="preserve">
          <source>Understanding CSS z-indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0259f62ed1b8d7d6a773600218700b0c45176e" translate="yes" xml:space="preserve">
          <source>Understanding Logical Properties and Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85da26ccc634931ac4711dc57d4cd0693c713ab8" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.1.1 | Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61490af886ec6c2ab8104741b2688e2061192da" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.1.1 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194b07d737ee8646549bb5c6f59a817dca6e3628" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.3.1 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71a4efba0a33aa97e4eafe437cbc7485e99a32f" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.3.2 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4af4f413576eb3f9a47de534f88e4db49874d2" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.4.1 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7b3878baa95812daff1f3c0eab49e8e1bd9696" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.4.3 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982dc1d22c191faf1ce77ba9599adcb91e0bcbf6" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.4.4 | Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7cafc88a74cb776b2303f4578e376f52a71263" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.4.4 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472f3a8863202a7ca66e885ef1f6c7f86e47efc6" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.4.8 | Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7bbf60e6eed163b22ccec7a36f2668321e6c47" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 1.4.8 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1d872508dff2bb8233b60d70cabc15705bcfbc" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 2.2.2 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afca31c536824f57d7ce140c297a126564ef0d29" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 2.4.4 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c874b361c8fb279adf085058c3dba07f675e898" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 2.4.7 | Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993d5e14d0edc414e432bc0603d9bb8594004831" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 3.3.2 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b3418ddd721ed510e2a3d01b6f8903704a485e" translate="yes" xml:space="preserve">
          <source>Understanding the CSS Transforms Matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0be01097e857b5a6bbbd0aeed6100416243fdc" translate="yes" xml:space="preserve">
          <source>Understanding the reference box used by CSS Shapes is important when using Basic Shapes, as it defines each shape's coordinate system. You have already met the reference box in &lt;a href=&quot;shapes_from_box_values&quot;&gt;the guide on creating shapes from Box Values&lt;/a&gt;, which directly uses the reference box to create the shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ba876673e6ed7b468ff6af09f66c68112490d8" translate="yes" xml:space="preserve">
          <source>Understanding which axis is which is important when we start to look at aligning and justifying flex items; flexbox features properties that align and justify content along one axis or the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9274331cfb3c205434851dcdf969c610f90d14d2" translate="yes" xml:space="preserve">
          <source>Unfortunately this is impossible to do with CSS and HTML without forcing column breaks at fixed positions, or severely restricting the markup allowed in the text, or using heroic scripting. This limitation is solved by adding new CSS properties to extend the traditional block layout mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af9d03eecc44bccbbc3bf1388ffb1234a32c054" translate="yes" xml:space="preserve">
          <source>Unfortunately, these valid values can be used, via the &lt;code&gt;var()&lt;/code&gt; functional notation, in a context where they might not make sense. Properties and custom variables can lead to invalid CSS statements, leading to the new concept of &lt;em&gt;valid at computed time.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02b180584f330cafde26f89c507911af1a24742" translate="yes" xml:space="preserve">
          <source>Unicode escaped characters (&lt;code&gt;\xx&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d734d1a73bdb7afe4aa466563e0da56aef6926" translate="yes" xml:space="preserve">
          <source>Unidirectional resize cursors (&lt;code&gt;n-resize&lt;/code&gt;, &lt;code&gt;e-resize&lt;/code&gt;, &lt;code&gt;s-resize&lt;/code&gt;, &lt;code&gt;w-resize&lt;/code&gt;, &lt;code&gt;ne-resize&lt;/code&gt;, &lt;code&gt;nw-resize&lt;/code&gt;, &lt;code&gt;se-resize&lt;/code&gt;, and &lt;code&gt;sw-resize&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e62b0ba1aae9a4f6ad085e1cc6cff7a13e93b3" translate="yes" xml:space="preserve">
          <source>Unitless &lt;code&gt;0&lt;/code&gt; for &amp;lt;angle&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12748281e0f02357f2a2f65c1c6a7d01ee122506" translate="yes" xml:space="preserve">
          <source>Units</source>
          <target state="translated">Units</target>
        </trans-unit>
        <trans-unit id="e816e2025cebc0f4589a4bee9c6451f6cc70f438" translate="yes" xml:space="preserve">
          <source>Universal selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0db3d1e70e32869fd5dd6d17120e26c93499a3b" translate="yes" xml:space="preserve">
          <source>Universal selector (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors&quot;&gt;&lt;code&gt;*&lt;/code&gt;&lt;/a&gt;), combinators (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_combinator&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Child_combinator&quot;&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_combinator&quot;&gt;&lt;code&gt;~&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;descendant_combinator&quot;&gt;''&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Column_combinator&quot;&gt;&lt;code&gt;||&lt;/code&gt;&lt;/a&gt;) and negation pseudo-class (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:not&quot;&gt;&lt;code&gt;:not()&lt;/code&gt;&lt;/a&gt;) have no effect on specificity. (The selectors declared &lt;em&gt;inside&lt;/em&gt;&lt;code&gt;:not()&lt;/code&gt; do, however.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65b301c61f2f70a514f9ba79f86a6262a15eba2" translate="yes" xml:space="preserve">
          <source>Universal selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7819b34ff87570745fbe461e36a16f80e562ce" translate="yes" xml:space="preserve">
          <source>Unknown</source>
          <target state="translated">Unknown</target>
        </trans-unit>
        <trans-unit id="ef623071d5733d09ef02a34a7335e892e8b5672d" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of '@supports' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73fb94f5cddb1c339e2342a61df0231c091c2f2" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'light-level' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d208597d495c58e19d1d66b11cc7cc353d840246" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'overscroll-behavior-x' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea52acc01c8e13e3ee9430ca753edb91fa514c43" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'overscroll-behavior-y' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35249ef06f85b081cb3e85a24b47ef579eef435d" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'prefers-reduced-motion' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bc0bc1f9813e4c59621deb1070cb244276f104" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, both the inner display type and the outer display type of elements using these display values are set to the given keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22acfbe1457567ed88e717f4efc86f6b473e2e4" translate="yes" xml:space="preserve">
          <source>Unlike HTML, CSS will completely ignore unknown keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcec3896898de467df152c5e6f33f14cc936c7f7" translate="yes" xml:space="preserve">
          <source>Unlike Internet Explorer, Firefox's implementation of &lt;code&gt;ime-mode&lt;/code&gt; allows this property on &lt;code&gt;&amp;lt;input type=&quot;password&quot;&amp;gt;&lt;/code&gt;. However, this makes for a bad user experience, and password fields &lt;em&gt;should not&lt;/em&gt; enable the IME. Users may correct the inappropriate behavior of sites that don't follow this recommendation by placing the following CSS into their user stylesheet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0553e6df8ba41df421d8a14b3be4f5eb50ba0f" translate="yes" xml:space="preserve">
          <source>Unlike linear gradients, you can specify the size of radial gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4264b1ae57870bfbdbf2fc7b4b83df2c40b2d92b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; element's box, Web developers cannot control the style of the two anonymous boxes. Inheritable properties take the value from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt;'s property value, like &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt; to define the color of the text, and set the others to the &lt;code&gt;initial&lt;/code&gt; value. For example, they won't have a specific &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;, it is always transparent, the&lt;code&gt; initial&lt;/code&gt; value for that property, and thus the background of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is visible. A specific background color can be applied to the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; box. Similarly, the two anonymous boxes always use the same color for their text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3ac2f7e6989b9d9ad7a1253aed9d4e44d977c7" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;dir&lt;/code&gt; attribute in HTML, the &lt;code&gt;direction&lt;/code&gt; property is not inherited from table columns into table cells, since CSS inheritance follows the document tree, and table cells are inside of rows but not inside of columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c7ca8d45cef5f640a9587f12a09e329674cec8" translate="yes" xml:space="preserve">
          <source>Until Firefox 10, handling of &lt;code&gt;text-overflow&lt;/code&gt; on blocks with inline overflow on both horizontal sides was incorrect. Before Firefox 10, if only one value was specified (such as &lt;code&gt;text-overflow: ellipsis;&lt;/code&gt;), text was ellipsed on both sides of the block, instead of only the end edge based on the block's text direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00dcc2acf03c5a91adbe17f47c422f3a46d7f860" translate="yes" xml:space="preserve">
          <source>Until Firefox 25, &lt;code&gt;page-break-inside&lt;/code&gt;&lt;code&gt;: avoid&lt;/code&gt; did not work with the height of a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993bc004e89e97581da90e48d051f0b4d075e6a5" translate="yes" xml:space="preserve">
          <source>Until Firefox 47, SVGs without viewport were not sliced correctly (&lt;a href=&quot;https://bugzil.la/619500&quot;&gt;bug 619500&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c474b2eec6db3187771660359e20c6a5dc68d9a" translate="yes" xml:space="preserve">
          <source>Until Firefox 57, an issue persisted for SVGs without viewport when &lt;a href=&quot;https://wiki.mozilla.org/Electrolysis&quot;&gt;e10s&lt;/a&gt; was disabled (&lt;a href=&quot;https://bugzil.la/1290782&quot;&gt;bug 1290782&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e4b722cbc7d410d5711dc838b98eb45660e152" translate="yes" xml:space="preserve">
          <source>Until Internet Explorer 8, &lt;code&gt;inline-block&lt;/code&gt; is only for natural inline elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1099ceeff6626f2d140721ed614ebdd03291c5dc" translate="yes" xml:space="preserve">
          <source>Until the CSSWG publishes their own draft, the specification can only be found in its &lt;a href=&quot;https://wicg.github.io/overscroll-behavior/&quot;&gt;WICG Github Repository&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9000f0397b81f003f0a05883e6645db2a5162760" translate="yes" xml:space="preserve">
          <source>Until version 15, only decimal numbers display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf4a568fdbcce96928fa6a3a7d4e15dfa5f5e26" translate="yes" xml:space="preserve">
          <source>Up to Internet Explorer 7, descendants of &lt;code&gt;hidden&lt;/code&gt; elements will still be invisible even if they have &lt;code&gt;visibility&lt;/code&gt; set to &lt;code&gt;visible&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5e4dffaf82baa426e1593be62fe421c20c6219" translate="yes" xml:space="preserve">
          <source>Update to latest syntax definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c9f95ae5572265716e09b6b38ee28c41a6e14a" translate="yes" xml:space="preserve">
          <source>Updates some properties to be independent of the directionality of the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8c5dd41c7ca8e4c6e6b5513d33e54aba4f0bdc" translate="yes" xml:space="preserve">
          <source>Uppercase ASCII letters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6043cfb28474f7c9edc899aa9b184424eafde75" translate="yes" xml:space="preserve">
          <source>Uppercase roman numerals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bc3a13b192d182ad3fba369673ed9ad2b332c9" translate="yes" xml:space="preserve">
          <source>Usability</source>
          <target state="translated">Usability</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="92d99b032888bf69448943e3813f272f0f43c556" translate="yes" xml:space="preserve">
          <source>Usage notes</source>
          <target state="translated">Примечания к использованию</target>
        </trans-unit>
        <trans-unit id="8a7870ca63fb43fadd61090fbeda29df74ee05aa" translate="yes" xml:space="preserve">
          <source>Use &quot;regular&quot; scrolling, where the content immediately ceases to scroll when you remove your finger from the touchscreen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19f7301e6b9a1ad0611e8b9056911827d8fa159" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;@supports&quot;&gt;&lt;code&gt;@supports&lt;/code&gt;&lt;/a&gt; to apply styles that depend on browser support for various CSS technologies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbf8b49676b182d4aa9991aa697ce16fa2aa9cf" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt; to force an item to move below a floated element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309903b1cc505c141441047954cfb85f6fe15aab" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;inherit&quot;&gt;&lt;code&gt;inherit&lt;/code&gt;&lt;/a&gt; to make an element's property the same as its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c81e83fbe7244cc442ed320e1a1e511ec54e3db" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt; to set a property to its initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a159a744bddf667b9cf0dc2d8692808fbd5bf578" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;revert&quot;&gt;&lt;code&gt;revert&lt;/code&gt;&lt;/a&gt; to reset a property to the value established by the user-agent stylesheet (or by user styles, if any exist).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f0cad3ba20a760ab3741b7151112b6dc2d2fe5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;unset&quot;&gt;&lt;code&gt;unset&lt;/code&gt;&lt;/a&gt; to set a property to its inherited value if it inherits, or to its initial value if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684981c1879f5279214f785de1a627a2ed6e9243" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;overflow-x&quot;&gt;&lt;code&gt;overflow-x&lt;/code&gt;&lt;/a&gt;: hidden&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;overflow-y&quot;&gt;&lt;code&gt;overflow-y&lt;/code&gt;&lt;/a&gt;: scroll&lt;/code&gt;, or &lt;code&gt;overflow: scroll hidden&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c281794899de8529b2c5c4867ea7cf747ca7db8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;overflow-x&quot;&gt;&lt;code&gt;overflow-x&lt;/code&gt;&lt;/a&gt;: scroll&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;overflow-y&quot;&gt;&lt;code&gt;overflow-y&lt;/code&gt;&lt;/a&gt;: hidden&lt;/code&gt;, or &lt;code&gt;overflow: hidden scroll&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac05cec5406c3aae93590ffe8ddc66d7a0f24360" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;overflow: hidden&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8f7d1c5477105f12955f093ac5da2e515527ec" translate="yes" xml:space="preserve">
          <source>Use JavaScript and clear the animation being used when the &lt;code&gt;animationiteration&lt;/code&gt; event fires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea730955e654c2e82bec0fc38868b0d217cc5c1c" translate="yes" xml:space="preserve">
          <source>Use a minimum value of &lt;code&gt;1.5&lt;/code&gt; for &lt;code&gt;line-height&lt;/code&gt; for main paragraph content. This will help people experiencing low vision conditions, as well as people with cognitive concerns such as Dyslexia. If the page is zoomed to increase the text size, using a unitless value ensures that the line height will scale proportionately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de60e66b42b28da79c00c590b8497bc17b29cc7e" translate="yes" xml:space="preserve">
          <source>Use cases for auto-placement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67a0e0c122f8eb9b6b389b493a4c1042c78bf64" translate="yes" xml:space="preserve">
          <source>Use cases for order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a69e6b9f427038c2f532129dc08bde8ade0b1c" translate="yes" xml:space="preserve">
          <source>Use in a media query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4947a83f692072e265ed76b53e11f56baee7b312" translate="yes" xml:space="preserve">
          <source>Use momentum-based scrolling, where the content continues to scroll for a while after finishing the scroll gesture and removing your finger from the touchscreen. The speed and duration of the continued scrolling is proportional to how vigorous the scroll gesture was. Also creates a new stacking context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbbb0eadf3b08b9087869e6d3919bce9d1b2918" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;order&lt;/code&gt; property has exactly the same implications for accessibility as changing the direction with &lt;code&gt;flex-direction&lt;/code&gt;. Using &lt;code&gt;order&lt;/code&gt; changes the order in which items are painted, and the order in which they appear visually. It does not change the sequential navigation order of the items. Therefore if a user is tabbing between the items, they could find themselves jumping around your layout in a very confusing way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826ae367b58134115f3aacae81103d56dbbd860d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fill-available&lt;/code&gt; inline size or &lt;code&gt;fill-available&lt;/code&gt; block size, as appropriate to the writing mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f694019fa528ed31ae426e3a6bb7d5c66e144780" translate="yes" xml:space="preserve">
          <source>Use the character encoding defined by the referring document: the &lt;code&gt;charset&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; element. This method is obsoleted in HTML5 and must not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419ca5cc48117c141059b2739bd26e80f995e8ac" translate="yes" xml:space="preserve">
          <source>Use the default line break rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd621d2f53bc3b91bd221499978a9f61e70021d3" translate="yes" xml:space="preserve">
          <source>Use this &lt;strong&gt;CSS reference&lt;/strong&gt; to browse an &lt;a href=&quot;#Keyword_index&quot;&gt;alphabetical index&lt;/a&gt; of all the standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties, &lt;a href=&quot;pseudo-classes&quot;&gt;pseudo-classes&lt;/a&gt;, &lt;a href=&quot;pseudo-elements&quot;&gt;pseudo-elements&lt;/a&gt;, &lt;a href=&quot;css_types&quot;&gt;data types&lt;/a&gt;, and &lt;a href=&quot;at-rule&quot;&gt;at-rules&lt;/a&gt;. You can also browse a list of all the CSS &lt;a href=&quot;#Selectors&quot;&gt;selectors organized by type&lt;/a&gt; and a list of &lt;a href=&quot;#Concepts&quot;&gt;key CSS concepts&lt;/a&gt;. Also included is a brief &lt;a href=&quot;#DOM-CSS_CSSOM&quot;&gt;DOM-CSS / CSSOM reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216478af15a829c83d1cc3ed788176d86d76de24" translate="yes" xml:space="preserve">
          <source>Used alongside an alignment keyword. If the chosen keyword means that the item overflows the alignment container causing data loss, the item is instead aligned as if the alignment mode were &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a11670d52f2b49180c04ad3df8f04653ce3e8f6" translate="yes" xml:space="preserve">
          <source>Used alongside an alignment keyword. Regardless of the relative sizes of the item and alignment container and whether overflow which causes data loss might happen, the given alignment value is honored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c947bd42e698ca1f6d0c8589794430697f5449a" translate="yes" xml:space="preserve">
          <source>Used in the determination of the height of the viewport when the document is first displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efa28c65ee925d883188a32cf94a883107bbfa3" translate="yes" xml:space="preserve">
          <source>Used in the determination of the width of the viewport when the document is first displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc8a9b599a26cbd1bc1d4a3ebd96f049efc0948" translate="yes" xml:space="preserve">
          <source>Used the &lt;code&gt;-moz-background-clip: padding | border&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3d3e74b5d5bace5220709eceab30f2abc6c34f" translate="yes" xml:space="preserve">
          <source>Used to access the Windows 10 custom accent color that you can set on the start menu, taskbar, title bars, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1faa65892f573e10671c6df580182ee42d02ee7d" translate="yes" xml:space="preserve">
          <source>Used to access the color of text placed over the Windows 10 custom accent color in the start menu, taskbar, title bars, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a023630ee154a471fd4ac6a570a783f5c57dc31c" translate="yes" xml:space="preserve">
          <source>Used to represent &quot;sign-value&quot; numbering systems, such as Roman numerals, which rather than reuse digits in different positions to obtain different values, define additional digits for larger values. The value of a number in such a system can be found out by adding the digits in the number.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
