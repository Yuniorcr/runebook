<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="graphite">
    <body>
      <group id="graphite">
        <trans-unit id="54f697a1ff421e46f37022813a88d0937a82090c" translate="yes" xml:space="preserve">
          <source>&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1a78aaec618e7fd52d32ee64314fb9d4cd462c" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2008&amp;ndash;2012 Chris Davis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a380cc48468d699efc58d32b1c0c6cccbb86776" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2011&amp;ndash;2016 The Graphite Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7838d22a2f8238e070d4d3e37bd1f8814c49a496" translate="yes" xml:space="preserve">
          <source>&amp;rdquo;. When AMQP_METRIC_NAME_IN_BODY is set to False, you should omit &amp;lsquo;local.random.diceroll&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266ad3c615b2874ca06e97c5f0dca7ec87347042" translate="yes" xml:space="preserve">
          <source>(default) or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd3744a34ac3f99a4a7c28238060d694d9deb1f" translate="yes" xml:space="preserve">
          <source>(one week by default) previous to the series is used to bootstrap the initial forecast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffae6cf049e346b04e778b6e24bc691e5f21216e" translate="yes" xml:space="preserve">
          <source>(the default) or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef82def994b4535105937c827e691147f21370ac" translate="yes" xml:space="preserve">
          <source>), and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecf596fed75b92a9c882bc096c3d087a4cca099" translate="yes" xml:space="preserve">
          <source>, any series or totals that can&amp;rsquo;t be matched will create output series with names like &lt;code&gt;asPercent(someSeries,MISSING)&lt;/code&gt; or &lt;code&gt;asPercent(MISSING,someTotalSeries)&lt;/code&gt; and all values set to None. If desired these series can be filtered out by piping the result through &lt;code&gt;|exclude(&quot;MISSING&quot;)&lt;/code&gt; as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2be99397a8c22b146c463e08823c6ace9b05723" translate="yes" xml:space="preserve">
          <source>, in that case values will be formatted in the corresponding system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bcafc2113daaac812f1518346b8bb3f4ad5920" translate="yes" xml:space="preserve">
          <source>, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f47342c176d04fa857b7f3965ea896ad4b3b43" translate="yes" xml:space="preserve">
          <source>, the regular expression search and replace is applied against the series name to plot a related metric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ec5d2ff2a6fdf6543dc32b3532dddfd4113e53" translate="yes" xml:space="preserve">
          <source>, then trim them down to unique series up to the node given by nodeNum, then fill them into the template function provided (replacing % by the prefixes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febb167bca0826afbdc1bd5c0448cc664e12e832" translate="yes" xml:space="preserve">
          <source>, which supports the Fowler&amp;ndash;Noll&amp;ndash;Vo hash function (FNV-1a) hash implementation offered by the &lt;a href=&quot;https://github.com/grobian/carbon-c-relay&quot;&gt;carbon-c-relay relay&lt;/a&gt; project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5be75b3d173a3132bfdecd0f121a8f579268427" translate="yes" xml:space="preserve">
          <source>. If it is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1209b0d72ad6d13cd714ea53e8ea97bc865c63" translate="yes" xml:space="preserve">
          <source>. If the series maximum is greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e498ad19a15233bfd7d91ff6547a5b56413c4d8" translate="yes" xml:space="preserve">
          <source>. The last argument can be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff9b1ee0513c090e34905f533043a3d1b32acf5" translate="yes" xml:space="preserve">
          <source>. The value 0 used if not specified. The optional referenceSeries, if specified, is a metric or wildcard series list that governs which time intervals nulls should be replaced. If specified, nulls are replaced only in intervals where a non-null is found for the same interval in any of referenceSeries. This method compliments the drawNullAsZero function in graphical mode, but also works in text-only mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b50cf4fb320a190ad39c92230ea2c4b6411bde5" translate="yes" xml:space="preserve">
          <source>. There are 3 additional config settings for the Redis TagDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7235a635f3dbef9c92074b31a5cb4e47030fc7" translate="yes" xml:space="preserve">
          <source>. There are 4 additional config settings for the HTTP(S) TagDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703b673ac68838a9e5b1d4cec1670f916a37a4bc" translate="yes" xml:space="preserve">
          <source>. This is useful when granular reporting is not required, and can help reduce I/O load and whisper file sizes due to lower retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fb6066019ab2405eeff3f62c37568d30d46c8b" translate="yes" xml:space="preserve">
          <source>.wsp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a965995b0e385c9b2ac96eef4e2b30863fe58fac" translate="yes" xml:space="preserve">
          <source>/tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45adf88035749b9ac7a66162e8453f4fd67f765" translate="yes" xml:space="preserve">
          <source>/tags/&amp;lt;tag&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47be2ba00b61d9f7e2f6e0c9c7cf09b9232e921d" translate="yes" xml:space="preserve">
          <source>/tags/delSeries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7e3bce75f8ad638447c78a999d74ca8367f969" translate="yes" xml:space="preserve">
          <source>/tags/findSeries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98c9b6ce272bfc8af92f74a9677ea4aa9205084" translate="yes" xml:space="preserve">
          <source>255, 165, 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db8a0d573ca801a92615bc982526c5458ec0665" translate="yes" xml:space="preserve">
          <source>30 Days (month)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17117be6f1e6c5a9cb2551210fc032135a1bb13" translate="yes" xml:space="preserve">
          <source>365 Days (year)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7b0bed66d28168b37af96beb4294408f1aa19d" translate="yes" xml:space="preserve">
          <source>3rd party reimplementation of graphite-web in Go, which supports a significant subset of graphite functions. In some testing it has shown to be 5x-10x faster than requesting data from graphite-web.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0ab40d5bac59d18f468646e639676c2d4c1129" translate="yes" xml:space="preserve">
          <source>4 Digit Year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800dbb442b950072de43b59e387c030ba626bf39" translate="yes" xml:space="preserve">
          <source>60 represents the number of seconds per datapoint, and 1440 represents the number of datapoints to store. This required some unnecessarily complicated math, so although it&amp;rsquo;s valid, it&amp;rsquo;s not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eab7fb921711f21348f0235525b7c473de911ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;feeding-carbon&quot;&gt;Feeding in your data&lt;/a&gt; is pretty easy, typically most of the effort is in collecting the data to begin with. As you send datapoints to Carbon, they become immediately available for graphing in the webapp. The webapp offers several ways to create and display graphs including a simple &lt;a href=&quot;render_api&quot;&gt;URL API&lt;/a&gt; for rendering that makes it easy to embed graphs in other webpages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb507b71c5ac4497301596361dd8e5ebc7bf55d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://django-tagging.readthedocs.io/&quot;&gt;django-tagging&lt;/a&gt; 0.4.6 (not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac60ee2a2cefac537c7e38b614e1ef621bc7c242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://gunicorn.org/&quot;&gt;gunicorn&lt;/a&gt; with &lt;a href=&quot;http://nginx.org/&quot;&gt;nginx&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cc9369a76064687117ae303a57878f467bd899" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://square.github.io/cubism/&quot;&gt;Cubism.js&lt;/a&gt; is a D3 plugin for visualizing time series data in real time, and can pull data from Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4084e3c5acd807cbaf32d39ce8c44b621151744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://uwsgi-docs.readthedocs.io/&quot;&gt;uWSGI&lt;/a&gt; with &lt;a href=&quot;http://nginx.org/&quot;&gt;nginx&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900313ee6368f19bbc16cd18e7cfb9a6a1c3de18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://virtualenv.org/&quot;&gt;Virtualenv&lt;/a&gt; provides an isolated Python environment to run Graphite in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f868820a65e7fcbba2f4dcb423796d87b46ca0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; 1.8 - 1.11 (for Python3 - 1.11 only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe05516b2edc0c8d3a35b6769dfb821df5867917" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.freedesktop.org/wiki/Software/fontconfig/&quot;&gt;fontconfig&lt;/a&gt; and at least one font package (a system package usually)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0202a9e5fc2957342b7b1bcec05ed237de4a8e31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Cue/scales&quot;&gt;Scales&lt;/a&gt; is a Python server state and statistics library that can output its data to Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54a3b617b26c7fd5ca3dbcb8fa0d12eb2b88475" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fdChasm/txCarbonClient&quot;&gt;txCarbonClient&lt;/a&gt; is a simple Twisted API for reporting metrics to Carbon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f0d8e6f95e0b642188c0c52c6ece6e363e64d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/obfuscurity/synthesize/&quot;&gt;Synthesize&lt;/a&gt; is a script dedicated to making Graphite easy to install. As of this writing, the default installation provides Graphite 0.9.15 for Ubuntu Linux 14.04 LTS with an experimental release candidate for tracking Graphite &lt;code&gt;HEAD&lt;/code&gt;. Users may run the installation script manually, or they can choose to use the provided Vagrantfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533b0619be90e3d289269024e23557b57d3b92a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/prestontimmons/graphitejs&quot;&gt;Graphitejs&lt;/a&gt; is a jQuery plugin for easily making and displaying graphs and updating them on the fly using the Graphite URL api.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba833ca9047b6f0f318745d921fddf36e3245b0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vimeo/graph-explorer/tree/master/structured_metrics&quot;&gt;structured_metrics&lt;/a&gt; is a lightweight python library that uses plugins to read in Graphite&amp;rsquo;s list of metric names and convert it into a multi-dimensional tag space of clear, sanitized targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70930f111129198dd04f84517d21abf64f3bcf1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://projects.apache.org/project.html?httpd-http_server&quot;&gt;Apache&lt;/a&gt; with &lt;a href=&quot;https://modwsgi.readthedocs.io/&quot;&gt;mod_wsgi&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4dd19943341ea3035357c4ff2636ddff91c5f87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;from&lt;/code&gt; and &lt;code&gt;&amp;amp;until&lt;/code&gt; can mix absolute and relative time if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729ddaa396c19276691fbdf1e95688a5be6f4025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GRAPHITE_CONF_DIR&lt;/code&gt; is searched for &lt;code&gt;whitelist.conf&lt;/code&gt; and &lt;code&gt;blacklist.conf&lt;/code&gt;. Each file contains one regular expressions per line to match against metric values. If the whitelist configuration is missing or empty, all metrics will be passed through by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15f11e947bd9a4c6c2103aa61a0d6bf6a4a68f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LeafNode&lt;/code&gt; is created with a &lt;em&gt;reader&lt;/em&gt;, which is the class responsible for fetching the datapoints for the given path. It is a simple class with 2 methods: &lt;code&gt;fetch()&lt;/code&gt; and &lt;code&gt;get_intervals()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd3d7fcff0102b8e090501abc33d284591950c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STORAGE_FINDERS&lt;/code&gt; being a list of arbitrary python paths, it is relatively easy to write a custom finder if you want to read data from other places than Whisper and Ceres. A finder is a python class with a &lt;code&gt;find_nodes()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35db9d80debc4b0fa958f63800e9df636c7d350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAGDB_HTTP_AUTOCOMPLETE&lt;/code&gt; is also optional, if set to &lt;code&gt;True&lt;/code&gt; auto-complete requests will be forwarded to the remote TagDB, otherwise calls to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1889763243dd39188d49da15f0aee8dc4f6886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggregationMethod&lt;/code&gt; specifies the function used to aggregate values for the next retention level. Legal methods are &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, and &lt;code&gt;last&lt;/code&gt;. The default is &lt;code&gt;average&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6724b94a7a4440b47e62565780f05f049f07b5dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-aggregator-cache.py&lt;/code&gt; combines both &lt;code&gt;carbon-aggregator.py&lt;/code&gt; and &lt;code&gt;carbon-cache.py&lt;/code&gt;. This is useful to reduce the resource and administration overhead of running both daemons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06412690084c118017d50c0dc7b12c6007ba715d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-aggregator-cache.py&lt;/code&gt; is configured via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b1cb405c7ade3fc3916a6c471b332cd5dbb6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-aggregator.py&lt;/code&gt; can be run in front of &lt;code&gt;carbon-cache.py&lt;/code&gt; to buffer metrics over time before reporting them into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ab58f985d2de286684b6097f7dfe51d56c198b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-aggregator.py&lt;/code&gt; is configured via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbe53bed8677db3e9dd065f69f4575a7d02b114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-cache.py&lt;/code&gt; accepts metrics over various protocols and writes them to disk as efficiently as possible. This requires caching metric values in RAM as they are received, and flushing them to disk on an interval using the underlying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00828655c2105b03dc7e4ce84d0da4d8b12cb136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-cache.py&lt;/code&gt; requires some basic configuration files to run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9b415c668f8e83a47fb1b1fd925cc7f4a600e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-relay.py&lt;/code&gt; is configured via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6962f5be6be3959cf46acdd0822ea3c288cde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;carbon-relay.py&lt;/code&gt; serves two distinct purposes: replication and sharding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded96c204bc0f05a1c23311a95a33437808cc2e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch()&lt;/code&gt; must return a list of 2 elements: the time info for the data and the datapoints themselves. The time info is a list of 3 items: the start time of the datapoints (in unix time), the end time and the time step (in seconds) between the datapoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e6b920ba71542cb17b260c039e8e3f1dc87bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_intervals()&lt;/code&gt; is a method that hints graphite-web about the time range available for this given metric in the database. It must return an &lt;code&gt;IntervalSet&lt;/code&gt; of one or more &lt;code&gt;Interval&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eb16ff1a6015910d6a649e66fa7190b74e90fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;metric_path&lt;/code&gt; is the metric namespace that you want to populate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aec1be7379cebe4599e52aba7e0faec499c708" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;metro_east.servers.apache02.system.load_average.1_min&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90798ad950a454299f2af5f71ef7cf3fbbcee655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;query&lt;/code&gt; is a &lt;code&gt;FindQuery&lt;/code&gt; object. &lt;code&gt;find_nodes()&lt;/code&gt; is the entry point when browsing the metrics tree. It must yield leaf or branch nodes matching the query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27aa68a71250020261418f99639a45853df00f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestContext&lt;/code&gt; is a dict which may contain &lt;code&gt;localOnly&lt;/code&gt; and &lt;code&gt;forwardHeaders&lt;/code&gt; keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0e4df73e67825bef127001a1c3638e234c7d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestContext&lt;/code&gt; will be a dictionary as defined in &lt;code&gt;graphite.render.views.renderView()&lt;/code&gt;, &lt;code&gt;seriesList&lt;/code&gt; will be a list of &lt;code&gt;TimeSeries&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441dfca345e33c7183dc7326151d459a598fc7f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt; is the number of seconds since unix epoch time. Carbon-cache will use the time of arrival if the &lt;code&gt;timestamp&lt;/code&gt; is set to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb3782ec36c7ddb105d8c111fc95d876cb6e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is the value that you want to assign to the metric at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939ce7bbf37ffc64231f3652964a729997f167e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; is an optional key which is set to the current Unix timestamp if &lt;code&gt;when&lt;/code&gt; is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1284d3a180760db524175fc4c3f3357ac7b4bd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xFilesFactor&lt;/code&gt; should be a floating point number between 0 and 1, and specifies what fraction of the previous retention level&amp;rsquo;s slots must have non-null values in order to aggregate to a non-null value. The default is 0.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582dafd7b7b525f5433413d2a644a956695d6396" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All time-slots within an archive take up space whether or not a value is stored&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4d148dc0d758ab931a3de13b173772aace8218" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Archive+&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e288fffe389dbeacc2049a6c718b1eb49a9f919" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Archives overlap time periods&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03796fdb6d1efe7c1920bbf966abbd3cfda59efc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Area Mode&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae311ef0dc5a9ca33d578f0a73812128611f932" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Asterisk&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d01ae4f1d9c10d4a59a14abd045207cd28c7b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Breakout&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b1eb2d6f89adb3f7d0051b29d9ad90284a0eef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Calculate&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7da6ff96b02f702bbf6e02c8ea420945f43a939" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Character list or range&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6a91c3da96c630d1b3a57b5ef7ba2c048348e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Clone&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4def74201f86e207c5ca2bf67e6709f9c78d0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Combine&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e4f39107f9cdac7a4fa84fd1bf245f6b24c26d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Data&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76db999880e31d4e4a391cad84f906a42df3996c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: &amp;lt;unset&amp;gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0495eb77174779b36dae0aff7d2fb523c060297d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 1.0&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cabf5575a1482315a72daf6672d3d8b1c95ed5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 1.2&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b634b014fa4b233395609a02282afb089028a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 10&lt;/em&gt; Sets the margin around a graph image in pixels on all sides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f5a40ec2c160903a25d109f5cb6b4c40350260" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 1&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32462bf879c7d847cedbda07a2157855f50630ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 250&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e6c0ac6828e9235d643284994d7ce9b9ff2ef9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 330&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5949097d35654faac36d87832c02302285985405" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 4,5,6&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6705f688f292039f9907c1db3343b67ef6d80d3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: 5&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40829fcc032a79b5398f8f6767afd148eead05d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: Calculated automatically&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6457d817e185af617e45faae410df6d1b5a1b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: DEFAULT_XFILES_FACTOR specified in local_settings.py or 0&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d3296b8990d226040cf1491b3bcb9f09b16d74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: Determined automatically based on the time-width of the X axis&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf22cb48fed95c784bed04e0df7175adc65ac7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: False&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5875f1f4290cc643b176a0cbb1f43aac74ac9ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: The highest value of any of the series displayed&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60331167599bf369a1909a90375d4c49d7bfee6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: The lowest value of any of the series displayed&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be512f135c74458c092f315d9fe4ce89cb03a7e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: The timezone specified in local_settings.py&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed590238cae3d760989a37e19d43c09d6ea6fc9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: The value of DEFAULT_CACHE_DURATION from local_settings.py&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76022803762d48242bcdee6e501c31e86af39ac2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: average&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe3b905d7f3a0b52c11b8c2d16663cccac061f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: black&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c4e505a9feede2e4bd8e4c0297b313f9488e18" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: color chosen from&lt;/em&gt;&lt;a href=&quot;#colorlist&quot;&gt;colorList&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeff8fa83e0af0981c3d2c63d489fc390deeb67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: default&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c14e7f93fb2f74d858e8b7a0de954683da7dcbd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: false&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629007803ed095242711d839aca116c4421ca6c7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: horizontal&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe4b058d933f8468608240151f223c5ad0f60fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: left&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b68b3f9ee9ffac4619c6125e82ac354d1a06d13" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: line&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917f77572f4858f7b02ef1be1cc455e256cb8cd8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: none&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54cef2fa8c41d7a9cfbf0ae086066c24ab8cc25" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: percent&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722ba264854b60dd87639273f1a84e7bfbbc1a2d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: si&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4879d428f3ceff6766c3d92467bfa9a946ffd5ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: slope&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11797372a688bc371696f92ddf0e38c43cb39e7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: value from the [default] template in graphTemplates.conf&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1762492e1c756776371e6a95533a718e29cf2b66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default: value of the parameter&lt;/em&gt;&lt;a href=&quot;#linewidth&quot;&gt;lineWidth&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9acc1bada3da7d436d5c86861f36cb8a44c4d3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Direct URL&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401123ed84e3cd5fac477870702246d0274a422c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Display&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5944e2d0bf5d7faa909673fa8fb39a032e9762cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Each data point is stored with its timestamp&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304daa977c97cdb9f1536a778830ef906e1ea78e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Email&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecdad650e2d19077e216ba52bb201d6a09ce8ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Filter&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25fd00833b5e20687d17cfaac51bd12b3dc1eff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Graph Title&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f464bd2fc72d08313a608168ce5392c38e1f281a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Header,Data&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e71a6d23066e2c339abd16608073a812eb5ab2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Line Mode&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297a0378f93a0135b4170bfbe1587bc09e2bc822" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Metadata,ArchiveInfo+&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e0482edb9db5efdbcb08b672b80fbec78a731b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Prior to 0.10.0, the value of &lt;code&gt;tags&lt;/code&gt; is a string, with multiple tags being separated by a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995c10326e8201b2a12f766443ef695725351d43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Point+&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fcac71bc7901e1128f2952084311dd81c729c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RRD can not take updates to a time-slot prior to its most recent update&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bf02682c94dbeef8b3dbc36a1cb4acf9f42fa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RRD was not designed with irregular updates in mind&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109ba86819c9dde2977804b23267255f558d309c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reserved for future use&lt;/em&gt; See: &lt;a href=&quot;#ymax&quot;&gt;yMax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b589563f59aa839c8b9e354fe7444ed539d369" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reserved for future use&lt;/em&gt; See: &lt;a href=&quot;#ymaxleft&quot;&gt;yMaxLeft&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e62871662a2a44fd3238e562f512f8ef56bc74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reserved for future use&lt;/em&gt; See: &lt;a href=&quot;#ymaxright&quot;&gt;yMaxRight&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4648f3cc8c7587f4d5c752e20a668629a166e26" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Special&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae2a8c07949e56114dbbb1ca6f728c83a99360c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Transform&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3d40932428d392ea6a1367d851115ec0888482" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Value list&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f4f8c653d8caaa67b16bc110ed6ef86f445515" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Whisper requires that metric updates occur at the same interval as the finest resolution storage archive&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d344034d9397dca83c2a8662bdebb54d6a164a8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;X-Axis&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976b19a2ed00bd079c11e33ce2fb042f50d03d41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Y-Axis&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafdd137f7f4be4ba8301700389b4d581f6bdbbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Each setting within this file is documented via comments in the config file itself.&lt;/strong&gt; The settings are broken down into sections for each daemon - carbon-cache is controlled by the &lt;code&gt;[cache]&lt;/code&gt; section, carbon-relay is controlled by &lt;code&gt;[relay]&lt;/code&gt; and carbon-aggregator by &lt;code&gt;[aggregator]&lt;/code&gt;. However, if this is your first time using Graphite, don&amp;rsquo;t worry about anything but the &lt;code&gt;[cache]&lt;/code&gt; section for now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97962330cea175addcf2fdfa05d1c922a8457397" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;: Map/Reduce asPercent(bytes_used,total_bytes) for each server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9522e112dc3d82fb81c358e8e362bd8a53cae709" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note for Power Users:&lt;/strong&gt; Any action that can be performed via the UI, as explained in this section, can also be performed using the Edit Dashboard function (as JSON text). See &lt;a href=&quot;#editing-importing-and-exporting-via-json&quot;&gt;Editing, Importing and Exporting via JSON&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c303476e4496b182ae7613ba09a14b73605c95b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if you plan to use the &lt;code&gt;=&lt;/code&gt; sign in your rewrite rules. Use its octal value: &lt;code&gt;\075&lt;/code&gt;. For example &lt;code&gt;foo=bar = foo.bar&lt;/code&gt; would be &lt;code&gt;foo\075bar = foo.bar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2917aaa4e99fba8a43bcdbdbbc277bbc02063d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.aggFunc&lt;/strong&gt;: An aggregation function name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5fb98aa123fbb62582f6836ea32bea9d002181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.boolean&lt;/strong&gt;: True/False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20892207393a10dd092aa3cb84bc49218e0a3092" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.date&lt;/strong&gt;: A date specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d8129784c6f6518ae5e53c413495bccfbac42d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.float&lt;/strong&gt;: A float value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c0fd3505b18fa0b3f1d60183184b693b797197" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.intOrInterval&lt;/strong&gt;: An integer or interval specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a6ddc54018e1ccf6ae75fa4537b935dcea7cf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.integer&lt;/strong&gt;: An integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885b64910ca9ac5c7051c7b7d013150a8fdc1aa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.interval&lt;/strong&gt;: An interval specifier like &lt;code&gt;1h&lt;/code&gt;, &lt;code&gt;1d&lt;/code&gt;, etc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a879b4f0de7dce993316a94d7b110437788ea04f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.node&lt;/strong&gt;: A node number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c12e012b5d36d6a9817be6b656451a386d338b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.nodeOrTag&lt;/strong&gt;: A node number or tag name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2afba6379cefae7d810f2e53f65831f386c0a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.series&lt;/strong&gt;: A single series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52495ae7e19b550734a163c9b0e8b1a862693cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.seriesList&lt;/strong&gt;: A list of series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e2523b17c5632e24f77f243e96bd9b36ab3c8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.seriesLists&lt;/strong&gt;: A list of seriesLists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acd6f6bbb0cf721abde5d8601a9ac4340df17fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.string&lt;/strong&gt;: A string value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdac9c426ad2f12fb2319e991b308021e7f9859" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParamTypes.tag&lt;/strong&gt;: A tag name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6326e3cf5c9e6b7f1c682e7d8c70e22bc3de68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;carbon&lt;/strong&gt; - a &lt;a href=&quot;http://www.twistedmatrix.com/&quot;&gt;Twisted&lt;/a&gt; daemon that listens for time-series data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545b86888afff4047e0e59b23de47c8ba4d23e4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default&lt;/strong&gt;: Default value for optional parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4003f8c650307f8a15d5e670ba479d56e2279b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;graphite webapp&lt;/strong&gt; - A &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; webapp that renders graphs on-demand using &lt;a href=&quot;http://www.cairographics.org/&quot;&gt;Cairo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48db407d1f735c53937a015e424231d98011e432" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;multiple&lt;/strong&gt;: Set to &lt;code&gt;True&lt;/code&gt; for parameters that accept multiple instances (defined with &lt;code&gt;*&lt;/code&gt; in Python)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5223cee361901a209281136d68c89c7c3d3193ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: The name of the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b734d3334204a7d1f3970ffb51db873c4558e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt;: A list of available values for parameters that accept only a defined list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf9d8058515efef66c89afb22bbe029f5a80608" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;paramtype&lt;/strong&gt;: The parameter type, one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68b8564aee19872fcdcce77c9cbe1d6bb8c517e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt;: Set to &lt;code&gt;True&lt;/code&gt; for required parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b83d3e40c78244aff832c1c2406aaad6ba553c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suggestions&lt;/strong&gt;: A list of suggested values for parameters that accept free-form values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87344317162320492d75163a219cec4802dd743" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;whisper&lt;/strong&gt; - a simple database library for storing time-series data (similar in design to &lt;a href=&quot;http://oss.oetiker.ch/rrdtool/&quot;&gt;RRD&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c76d814c44730c6c2f185a48c0fd14408299fec" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#term-timestamp&quot;&gt;timestamp&lt;/a&gt; after rounding down to the nearest multiple of a &lt;a href=&quot;#term-series&quot;&gt;series&amp;rsquo;s&lt;/a&gt;&lt;a href=&quot;#term-resolution&quot;&gt;resolution&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aecf559651e94673c76d8d56a41443529b61ec0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#term-value&quot;&gt;value&lt;/a&gt; stored at a &lt;a href=&quot;#term-timestamp-bucket&quot;&gt;timestamp bucket&lt;/a&gt;. If no value is recorded at a particular timestamp bucket in a &lt;a href=&quot;#term-series&quot;&gt;series&lt;/a&gt;, the value will be None (null).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6860246434d8161347a50c636e891942904ad5f6" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Graph Operations&lt;/em&gt; menu button, providing menu items for miscellaneous actions to take on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2fbd0004ba111ae86a4dc8415cead2a0246514" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Render Operations&lt;/em&gt; menu button, which allows customization of the graph as a whole</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b000f32f7fb76134105bbbd8892e5ccb3af6d90" translate="yes" xml:space="preserve">
          <source>A Campfire bot written in Node.js and CoffeeScript. The related &lt;a href=&quot;https://github.com/github/hubot-scripts&quot;&gt;hubot-scripts&lt;/a&gt; project includes a Graphite script which supports searching and displaying saved graphs from the Composer directory in your Campfire rooms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35830bf1e1e54df9d777eb5546db7049a12a3e6" translate="yes" xml:space="preserve">
          <source>A Ceres node represents a single time-series metric, and is composed of at least two data files. A slice to store all data points, and an arbitrary key-value metadata file. The minimum required metadata a node needs is a &lt;code&gt;'timeStep'&lt;/code&gt;. This setting is the finest resolution that can be used for writing. A Ceres node however can contain and read data with other, less-precise values in its underlying slice data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d35f9f449158d0ca00086ab915e953520b4750" translate="yes" xml:space="preserve">
          <source>A Ceres slice contains the actual data points in a file. The only other information a slice holds is the timestamp of the oldest data point, and the resolution. Both of which are encoded as part of its filename in the format &lt;code&gt;timestamp@resolution&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9d7e9bfc986e9a90ecf3d005ae5d462e5a2d71" translate="yes" xml:space="preserve">
          <source>A Graphite dashboard inspired by Gdash. It&amp;rsquo;s written in Python using the Flask framework. The interface is built with Bootstrap. The graphs and dashboards are configured through the YAML files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ee2fd77c88affd59ee1f9346c16ad5c6bdc94f" translate="yes" xml:space="preserve">
          <source>A Graphite dashboard toolkit based on &lt;a href=&quot;http://mbostock.github.com/d3&quot;&gt;D3.js&lt;/a&gt; and &lt;a href=&quot;http://documentcloud.github.com/backbone&quot;&gt;Backbone.js&lt;/a&gt; which was made to offer a very aesthetic realtime dashboard. Graphene provides a solution capable of displaying thousands upon thousands of datapoints all updated in realtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e6fbbea4ed6a9af83ef34e4a48ef522f2c1d7a" translate="yes" xml:space="preserve">
          <source>A Graphite real-time dashboard based on &lt;a href=&quot;http://code.shutterstock.com/rickshaw&quot;&gt;Rickshaw&lt;/a&gt; and requires no server backend. Inspired by &lt;a href=&quot;https://github.com/ripienaar/gdash.git&quot;&gt;Gdash&lt;/a&gt;, &lt;a href=&quot;https://github.com/obfuscurity/tasseo&quot;&gt;Tasseo&lt;/a&gt; and &lt;a href=&quot;http://jondot.github.com/graphene&quot;&gt;Graphene&lt;/a&gt; it mixes features from all three into a slightly different animal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef871f35d9ea1fb89ebd65caecda1f4ec7f38581" translate="yes" xml:space="preserve">
          <source>A Node.js app written in CoffeeScript to send data from servers to Graphite, much like collectd does, but aimed at being easier to expand and with less footprint. It comes by default with basic collectors plus Redis and MySQL metrics, and can be expanded with Javascript or CoffeeScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b24a486c3514f5eb8b6050b4c6568ac4ad7a63" translate="yes" xml:space="preserve">
          <source>A Node.js application that lets you forward Graphite based queries (using the render API) out to different external services. There are built in modules for Zabbix and CloudWatch. Custom modules are very easy to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee049c906a09794258520e3cb0d3c85d7524bd0" translate="yes" xml:space="preserve">
          <source>A Sinatra-based dashboard that allows users to correlate multiple metrics in a single chart, review long-term trends across one or more charts, and to collaborate with other users through a combination of shared dashboards and rich layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b263d5ed5910397f3c2a9fe593553c5e1a4f1" translate="yes" xml:space="preserve">
          <source>A WSGI server and web server. Popular choices are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b137f2eaea4915b137da977eea9cbdc1a3496d1" translate="yes" xml:space="preserve">
          <source>A Whisper database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ea3dc6b633a0ac8027b1fb8acb39de59663a82" translate="yes" xml:space="preserve">
          <source>A Windows service (agent) which periodically publishes system metrics, for example CPU, memory and disk usage. It can store data in Graphite using a naming schema that&amp;rsquo;s identical to that used by collectd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb704a08d6c0999440422b1ed049879c48c42d9" translate="yes" xml:space="preserve">
          <source>A carbon daemon or alternative daemon for writing to the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c3a6adc1b4bb66aa166d5c24771904be7f0f61" translate="yes" xml:space="preserve">
          <source>A carbon daemon writing data to the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4502e034d511b6cced087a2777129cdf74ca0bc" translate="yes" xml:space="preserve">
          <source>A character range is indicated by 2 characters separated by a dash (&lt;code&gt;-&lt;/code&gt;), and means that any character between those 2 characters (inclusive) will match. More than one range can be included within the square brackets, e.g. &lt;code&gt;foo[a-z0-9]bar&lt;/code&gt; will match &lt;code&gt;foopbar&lt;/code&gt;, &lt;code&gt;foo7bar&lt;/code&gt; etc..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c8778d12af542c69f9be39579844874ba6d13e" translate="yes" xml:space="preserve">
          <source>A client side dashboard for graphite built using bootstrap and underscore.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6aa4d85b9912111b7ad9637bccd045234eb3c4" translate="yes" xml:space="preserve">
          <source>A collection of miscellaneous scripts for pulling data from various devices, F5, Infoblox, Nutanix, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0e2902e6f5153f0fd79c7ae6d48c689f516288" translate="yes" xml:space="preserve">
          <source>A collection of scripts that shovel data into Graphite including a multi-threaded SNMP poller for network interface IF-MIB statistics and another which pulls linux network stack data from files in /proc/net. Add to cron and go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bbb87a9e0b6f6b458d8e00918fcf89487869eb" translate="yes" xml:space="preserve">
          <source>A collection tool for system metrics that can be run both interactively and as a daemon and has support for collecting from a broad set of subsystems. Collectl includes a Graphite interface which allows data to easily be fed to Graphite for storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee97c638e79473d7fe9196e8514b4b4163da24b6" translate="yes" xml:space="preserve">
          <source>A custom &lt;em&gt;storage finder&lt;/em&gt; for reading the data in graphite-web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280c82e9146cb3e0234f6d66d62eb67ab19444da" translate="yes" xml:space="preserve">
          <source>A daemon which collects system performance statistics periodically and provides mechanisms to store the values in a variety of ways, including RRD. To send collectd metrics into carbon/graphite, use collectd&amp;rsquo;s &lt;a href=&quot;http://collectd.org/wiki/index.php/Plugin:Write_Graphite&quot;&gt;write-graphite&lt;/a&gt; plugin (available as of 5.1). Other options include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75217697f7d4d1cbea1b84a9a45bf4e0170d2cc5" translate="yes" xml:space="preserve">
          <source>A dashboard application for organizing, analyzing, benchmarking and reporting of performance test results. All performance test metrics are stored in Graphite and can be benchmarked between test runs, providing automated feedback on the performance of an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba69aede62a1d55633ddded4fd15897e44102c13" translate="yes" xml:space="preserve">
          <source>A default for the entire render request can also be set using the &lt;a href=&quot;render_api#xfilesfactor&quot;&gt;xFilesFactor&lt;/a&gt; query parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e3e9749ca901c8dcd70a019196defb0685b585" translate="yes" xml:space="preserve">
          <source>A fast Graphite relay written in Scala with the Netty framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef9c89c0428bb0d2ebc2ff8aff4c7b921ac5f8e" translate="yes" xml:space="preserve">
          <source>A fast relay and HTTPS forwarder toolset written in Go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c02ee773111e8f80ae60fbd789a50ddaba65d2b" translate="yes" xml:space="preserve">
          <source>A flexible and easy to configure PHP based dashboard. It uses JSON template files to build graphs and specify which graphs need to be displayed when, similar to Ganglia-web. Just like Ganglia, it uses a hierarchial structure: Environment/Cluster/Host/Metric to be able to display overview graphs and host-specific metrics. It communicates directly to the Graphite API to determine which Environments, Clusters, Hosts and Metrics are currently stored in Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b409f82a911b9ee807990b57125612bf336fab" translate="yes" xml:space="preserve">
          <source>A flexible front-end for creating dashboards with a wide variety of data presentations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d08ff1c5d32d21bad21910171a0dd0c4cde544" translate="yes" xml:space="preserve">
          <source>A function plugin is simply a file defining one or more functions and exporting dictionaries of &lt;code&gt;SeriesFunctions&lt;/code&gt; and/or &lt;code&gt;PieFunctions&lt;/code&gt;. When Graphite loads the plugin it will add functions in &lt;code&gt;SeriesFunctions&lt;/code&gt; and/or &lt;code&gt;PieFunctions&lt;/code&gt; to the list of available functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ac3fe52a2b34e78c68534a3ee17ad14a71990b" translate="yes" xml:space="preserve">
          <source>A general purpose graphite dashboard replacement with feature rich graph editing and dashboard creation interface. It contains a unique Graphite target parser that enables easy metric and function editing. Fast client side rendering (even over large time ranges) using Flot with a multitude of display options (Multiple Y-axis, Bars, Lines, Points, smart Y-axis formats and much more). Click and drag selection rectangle to zoom in on any graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c9283337f0188b3dbeca05cfde1749aa5eaa10" translate="yes" xml:space="preserve">
          <source>A given rule is made up of 3 lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231a133e1c9bb968752b8c8bc6fb6edfe8cd2155" translate="yes" xml:space="preserve">
          <source>A graphite dashboard which uses plugins to add tags and metadata to metrics and a query language with lets you filter through them and compose/manipulate graphs on the fly. Also aims for high interactivity using &lt;a href=&quot;https://github.com/Dieterbe/timeserieswidget&quot;&gt;TimeseriesWidget&lt;/a&gt; and minimal hassle to set up and get running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37b80f3db97285541521fb5bbd2b7aaec97f2bf" translate="yes" xml:space="preserve">
          <source>A group of functions that can be used to collect Windows Performance Counters and send them over to the Graphite server. The main function can be run as a Windows service, and everything is configurable via an XML file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd4c8b4ac64f4bda584f0884ada0f5d9e966b96" translate="yes" xml:space="preserve">
          <source>A highly available, elastic, and low-latency time-series storage wirtten on top of Cassandra</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a548717c308e94e81c50ce4a5fe7da9ecc49d49" translate="yes" xml:space="preserve">
          <source>A java program which regularly queries metrics from a configured set of inputs, selects and renames them using regular expressions and sends them to a configured set of outputs. It supports JMX and JDBC as inputs and Graphite as output out of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3b4427c6e42890cc23ba6bef9a37f84253ee38" translate="yes" xml:space="preserve">
          <source>A lightweight, easily configurable, real-time dashboard for Graphite metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd78f63fa02516671847be9bd64accdd8f8a2e9" translate="yes" xml:space="preserve">
          <source>A line graph displaying metrics as lines over time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe262021e1de80a83eebde25b9ac41de1094744a" translate="yes" xml:space="preserve">
          <source>A list of all metric elements, i.e. the path and functions for each of the data elements displayed on the graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e541bb1af8dc9d9a4e4924f7edcba5ee064b4cd3" translate="yes" xml:space="preserve">
          <source>A list of nodes can optionally be provided, if so they will be used to match series with their corresponding totals following the same logic as &lt;a href=&quot;#graphite.render.functions.groupByNodes&quot;&gt;&lt;code&gt;groupByNodes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29e22d80bab8764c30b3f558c8cd32a0f0b4b71" translate="yes" xml:space="preserve">
          <source>A monitoring framework that can route metrics to Graphite. Servers subscribe to sets of checks, so getting metrics from a new server to Graphite is as simple as installing the Sensu client and subscribing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0814b70e0b2129e889e5fe3cc02289473e0e17" translate="yes" xml:space="preserve">
          <source>A monitoring frontend for graphite. It runs a webserver that dishes out pretty Graphite URLs in interesting and intuitive layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29558e1ce9256ba552f6d5cea0ac0d8f0b314326" translate="yes" xml:space="preserve">
          <source>A more complex example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e1b5a053346cf68d6244bd0268c50e27e1d649" translate="yes" xml:space="preserve">
          <source>A name, specified inside square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c244a6e5c60a8cedce17c42ff4f89c757f361123" translate="yes" xml:space="preserve">
          <source>A named set of datapoints. A series is identified by a unique name, which is composed of elements separated by periods (&lt;code&gt;.&lt;/code&gt;) which are used to display the collection of series into a hierarchical tree. A series storing system load average on a server called &lt;code&gt;apache02&lt;/code&gt; in datacenter &lt;code&gt;metro_east&lt;/code&gt; might be named as &lt;code&gt;metro_east.servers.apache02.system.load_average&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32ca0dade653a107cce1f455e3b5c3e78622747" translate="yes" xml:space="preserve">
          <source>A network event stream processing system, in Clojure. Can use Graphite as source of event stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79400aec4c5ec74e1688fb92ec1e54fdef723d5e" translate="yes" xml:space="preserve">
          <source>A node.js application which provides streaming JSON data over HTTP from Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18ec30fd9e9349ff3999c6ef10a712033087bd9" translate="yes" xml:space="preserve">
          <source>A numeric or null value. Values are stored as double-precision floats. Values are parsed using the python &lt;code&gt;float()&lt;/code&gt; constructor and can also be None (null). The range and precision of values is system dependent and can be found by executing (with Python 2.6 or later):: python -c &amp;lsquo;import sys; print sys.float_info&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a173a1f4eadd1f1a9a912ff93c0c41321361d0e" translate="yes" xml:space="preserve">
          <source>A pie graph with each slice displaying an aggregate of each metric calculated using the function specified by &lt;a href=&quot;#piemode&quot;&gt;pieMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1b6f993db0cd30c7b2c0b4a4a2f305e32a5668" translate="yes" xml:space="preserve">
          <source>A point in time in which &lt;a href=&quot;#term-value&quot;&gt;values&lt;/a&gt; can be associated. Time in Graphite is represented as &lt;a href=&quot;http://en.wikipedia.org/wiki/Epoch_time&quot;&gt;epoch time&lt;/a&gt; with a maximum resolution of 1-second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61f87a6c16b5763e255895ac6dbe47ece6bd7d1" translate="yes" xml:space="preserve">
          <source>A possible value for &lt;code&gt;system&lt;/code&gt; is &lt;code&gt;si&lt;/code&gt;, which would express your values in multiples of a thousand. A second option is to use &lt;code&gt;binary&lt;/code&gt; which will instead express your values in multiples of 1024 (useful for network devices).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5bd3ea1983f3c2e4a689ae44f75fe25343293a" translate="yes" xml:space="preserve">
          <source>A powerful dashboard front end with a focus on ease of access, ease of recovery and ease of tweaking and manipulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804fec9fc4d70b7b4604c18300c1e8e78009fd28" translate="yes" xml:space="preserve">
          <source>A powerful tool that performs JMX queries to collect metrics from Java applications. It is requires very little configuration and is capable of sending metric data to several backend applications, including Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcd872ef05ec6028ae2ada38179ee4d18c48ff1" translate="yes" xml:space="preserve">
          <source>A powerful tool to create, view and manage dashboards for your Graphite data. It allows easy implementation of custom authentication to manage access to the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4235cdbaeea7c0ad67bcf2b6ae697b0f8101b47" translate="yes" xml:space="preserve">
          <source>A real-time monitoring framework that sits on top of Graphite&amp;rsquo;s time series data. This allows users to create monitors that both visualize and alert on data as it streams from Graphite. The monitors themselves are simple Ruby scripts which run in a sandbox to provide additional security. Monitors are also configured with a crontab compatible time specification used by the scheduler. Alerts can be sent via email, pagerduty, or campfire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c3e15766f44af9e4cc24039f69ff05a1d7928c" translate="yes" xml:space="preserve">
          <source>A regex, specified after &amp;ldquo;pattern=&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989bed87959924c2700e4ce16b65cf2e6ce37233" translate="yes" xml:space="preserve">
          <source>A retention rate line, specified after &amp;ldquo;retentions=&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147086fa92074096ae6bd7f7efde75adaf8949fd" translate="yes" xml:space="preserve">
          <source>A scalable distributed monitoring system for high-performance computing systems such as clusters and Grids. It collects system performance metrics and stores them in RRD, but now there is an &lt;a href=&quot;https://github.com/ganglia/ganglia_contrib/tree/master/graphite_integration/&quot;&gt;add-on&lt;/a&gt; that allows Ganglia to send metrics directly to Graphite. Further integration work is underway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61eae684086fcaec6dc5b6a52974b8670883516a" translate="yes" xml:space="preserve">
          <source>A self-hosted monitoring and alerting server that watches Graphite metrics and can alert on them by phone, SMS, Hipchat or email. It is designed to be deployed to cloud or physical hardware in minutes and configured via web interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae962df54c70fd70fdd34e3a16765f0d77ac4611" translate="yes" xml:space="preserve">
          <source>A self-service dashboard frontend for Graphite and &lt;a href=&quot;http://ganglia.info&quot;&gt;Ganglia&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b783c83a245c5546f1a8ad8c6c4ccedd1bc89c53" translate="yes" xml:space="preserve">
          <source>A series name or wildcard which matches one or more &lt;a href=&quot;#term-series&quot;&gt;series&lt;/a&gt;. Series lists are received by &lt;a href=&quot;#term-function&quot;&gt;functions&lt;/a&gt; as a list of matching series. From a user perspective, a series list is merely the name of a metric. For example, each of these would be considered a single series list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a6c495df4f909e6a0e7b9a53fa77054cc118f4" translate="yes" xml:space="preserve">
          <source>A simple Graphite dashboard built using Twitters Bootstrap driven by a small DSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5fdae0f7f0fcac555306906611b2d9330196c9" translate="yes" xml:space="preserve">
          <source>A simple Sinatra dashboarding frontend for Graphite or any other system status service which can generate images directly from a URL. Charcoal configuration is driven by a YAML config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a969e92fa616ce30de8779df2d1f1bbb4f5726" translate="yes" xml:space="preserve">
          <source>A simple alerting application for Graphite. It asynchronous and sends notification alerts based on Graphite metrics. It hasn&amp;rsquo;t any dependencies except</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a032f47843a22d0c94f16a826674c74323b60ef8" translate="yes" xml:space="preserve">
          <source>A simple daemon for easy stats aggregation, developed by the folks at Etsy. A list of forks and alternative implementations can be found at &amp;lt;&lt;a href=&quot;http://joemiller.me/2011/09/21/list-of-statsd-server-implementations/&quot;&gt;http://joemiller.me/2011/09/21/list-of-statsd-server-implementations/&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f5072f8036170ca37aa46b0c9e7300b0e0fd80" translate="yes" xml:space="preserve">
          <source>A simple dashboard for isolating &amp;ldquo;hotspots&amp;rdquo; across a fleet of systems. It incorporates horizon charts using Cubism.js to maximize data visualization in a constrained space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1102fafc19b77104238caa8214382abfc8cfa60" translate="yes" xml:space="preserve">
          <source>A simple endpoint for submitting metrics to Graphite. It accepts JSON data via HTTP POST and proxies the data to one or more Carbon/Graphite listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856bd540af8aea697dce816c5d22b765ed3c6a27" translate="yes" xml:space="preserve">
          <source>A simple example of doing this from the unix terminal would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153738d0e0e9eb9bf4819cbc2ef6042e6cfac948" translate="yes" xml:space="preserve">
          <source>A simple script for gathering Nagios problem statistics and submitting them to Graphite. It focuses on summary (overall, servicegroup and hostgroup) statistics and writes them to the nagios.problems metrics namespace within Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64552d6b17b1ee4adc3f72d3d13f00a688f9c3e" translate="yes" xml:space="preserve">
          <source>A simple service for submitting sFlow datagrams to Graphite. It accepts sFlow datagrams from multiple network devices and proxies the data to a Carbon listener. Currently only Generic Interface Counters are supported. All other message types are discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278a8d8a62ab64979d10935fb371cc5380b993cb" translate="yes" xml:space="preserve">
          <source>A simple web service that caches Graphite metrics and exposes an endpoint for dumping or searching against them by substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c135c7f2eeff3f0be6cf77e3800a8fa22c4239c7" translate="yes" xml:space="preserve">
          <source>A small Python daemon to send Nagios performance data (perfdata) to Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2ce84f623a1292385d9c24d3ebac2150fcae56" translate="yes" xml:space="preserve">
          <source>A small service implemented in Python for collecting and translating metrics for Graphite. It can currently collect metric data from CollectD daemons and from StatsD clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ffb3ebbe29631722145cdb36c785231f070f9c" translate="yes" xml:space="preserve">
          <source>A small shell script that makes it easy to report the output of any other cli program to Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdba6fc1fd4d457bcfdcd6c16233fa0cb9ef1cb7" translate="yes" xml:space="preserve">
          <source>A source of data used as input for a Graph. A target can be a single metric name, a metric wildcard, or either of these enclosed within one or more &lt;a href=&quot;#term-function&quot;&gt;functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1d10aadf9e2b1c428f34a6dde6ca38e2655994" translate="yes" xml:space="preserve">
          <source>A statsd-compatible stats aggregator written in C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766480a7edcb2137bfd8139b3f7804dc2ee4d4e4" translate="yes" xml:space="preserve">
          <source>A system monitoring solution compatible with Nagios which emphasizes scalability, flexibility, and ease of setup. Shinken provides complete integration with Graphite for processing and display of performance data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754c2a793b7c2231553c65bbe60cadcca1f3385a" translate="yes" xml:space="preserve">
          <source>A system that ties together Graphite, &lt;a href=&quot;http://www.rabbitmq.com&quot;&gt;RabbitMQ&lt;/a&gt;, and &lt;a href=&quot;http://esper.codehaus.org&quot;&gt;Esper&lt;/a&gt;. Developed by AdMob (who was then bought by Google), this was released by Google as open source (&lt;a href=&quot;http://google-opensource.blogspot.com/2010/09/get-ready-to-rocksteady.html&quot;&gt;http://google-opensource.blogspot.com/2010/09/get-ready-to-rocksteady.html&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173898dcff521eb1e006adcb8a099ced1c10a33f" translate="yes" xml:space="preserve">
          <source>A time-series database alternative to Graphite Whisper with 40x improvement in IOPS. It integrates with Graphite as a plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff5ec99fbb2f728aaa4129166850a4c14445633" translate="yes" xml:space="preserve">
          <source>A time-series database written in Python on top of Cassandra. It integrates with Graphite as a plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cb3515845df116fabbc0c6364ac12a3c7a19f4" translate="yes" xml:space="preserve">
          <source>A time-series function which transforms, combines, or performs computations on one or more &lt;a href=&quot;#term-series&quot;&gt;series&lt;/a&gt;. See &lt;a href=&quot;functions&quot;&gt;Functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3e2f9f27d73f5b726bb6e27b7a4dc0db380137" translate="yes" xml:space="preserve">
          <source>A tool for manage graphite dashboards from command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48f0c6279530aba48aab8c630e185a0953b9b40" translate="yes" xml:space="preserve">
          <source>A tool to make zabbix alerts based on Graphite data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b074f3e5d51fd83e84d7721c9118d603b0f3e6" translate="yes" xml:space="preserve">
          <source>A utility for reading log files and generating metrics in Graphite or Ganglia. It is ideal for visualizing trends of events that are occurring in your application/system/error logs. For example, you might use logster to graph the number of occurrences of HTTP response code that appears in your web server logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bc87c0992c6541fcf9f6aebddc5af5bbe4ad86" translate="yes" xml:space="preserve">
          <source>A web application aimed at powerful, flexible time series graphing for web developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bf4daadeb86a9c19d45c89c8bf79879d21c063" translate="yes" xml:space="preserve">
          <source>ABSOLUTE_TIME is in the format HH:MM_YYYYMMDD, YYYYMMDD, MM/DD/YY, or any other &lt;code&gt;at(1)&lt;/code&gt;-compatible time format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7bdde9001502fd51e05eba8ab6155d2a1cd3ce" translate="yes" xml:space="preserve">
          <source>ALLOWED_HOSTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0c5e4c642e0b373bda8842480a01a2b411c906" translate="yes" xml:space="preserve">
          <source>AMQP support: &lt;a href=&quot;https://launchpad.net/txamqp/&quot;&gt;txamqp&lt;/a&gt; (version 0.8 is required)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6c96fbe79236ef4446ce8b10132b4368c9cc1f" translate="yes" xml:space="preserve">
          <source>AUTO_REFRESH_INTERVAL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd437865cbac7655f8b86519aea764f378093804" translate="yes" xml:space="preserve">
          <source>Abbreviation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a8448a94fd95ffe832314a2edd0df275aba2f6" translate="yes" xml:space="preserve">
          <source>About the project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32445d17ef1d98b2b055922c97d2882386f12486" translate="yes" xml:space="preserve">
          <source>Accepted options depend on the Memcached implementation and the Django version. Until Django 1.10, options are used only for pylibmc. Starting from 1.11, options are used for both python-memcached and pylibmc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8caaca67f20a4f290b6c45e80c9b2e63e94047" translate="yes" xml:space="preserve">
          <source>Acnowlegments &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb9da74b48b31df4c6e385609793312a37534f4" translate="yes" xml:space="preserve">
          <source>Adapt the mod_wsgi configuration to your requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e037eebeaf75263969ac25716d0b55139dcc3dd4" translate="yes" xml:space="preserve">
          <source>Adding Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560fa1da099d42c29c0edd06bca5941fc45ff1ae" translate="yes" xml:space="preserve">
          <source>Adding Series to the TagDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66017f0eb55647c83f77d860b7a5ed61ff47d5b7" translate="yes" xml:space="preserve">
          <source>Adding a Graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff2bedc3081f35d2b9af82bda62b197ca55cdaf" translate="yes" xml:space="preserve">
          <source>Additional Django Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0a1aba90ec3b958e16418ef9b027080d963e00" translate="yes" xml:space="preserve">
          <source>Additional Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0326ab6f35838e8dd901f33a574e1a03e07c5e96" translate="yes" xml:space="preserve">
          <source>Additionally, the Graphite webapp and Carbon require the Whisper database library which is part of the Graphite project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c8d22bb7a2a91f9f15ce671b6564d797d4c6a5" translate="yes" xml:space="preserve">
          <source>Additionally, this example uses multiple retentions. The general rule is to specify retentions from most-precise:least-history to least-precise:most-history &amp;ndash; whisper will properly downsample metrics (averaging by default) as thresholds for retention are crossed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d96819f7a2ae105d0f9fa3abc3de562dcd8116" translate="yes" xml:space="preserve">
          <source>Additionally, whisper supports a legacy retention specification for backwards compatibility reasons - &lt;code&gt;seconds-per-datapoint:count-of-datapoints&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95092f84de7df34623505a4a22d3d5d9901e0c5" translate="yes" xml:space="preserve">
          <source>Adds timeseries graphs to your webpages/dashboards using a simple api, focuses on high interactivity and modern features (realtime zooming, datapoint inspection, annotated events, etc). Supports Graphite, flot, rickshaw and anthracite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de1205c1c06b470a3d3faf2d9ff8cb84db63976" translate="yes" xml:space="preserve">
          <source>Administering Carbon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d2119ccc087589958850b3951ce5ed9722a731" translate="yes" xml:space="preserve">
          <source>Administering The Webapp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117c56900847e15c7aa33e3f473a450aedbe94b2" translate="yes" xml:space="preserve">
          <source>Advanced finders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b0b41a14fcc1f7d130eadd5efd1a18608921da" translate="yes" xml:space="preserve">
          <source>Aggregate series using the specified function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497ab50cc2ea4a0f4e27ef1cb0cb739afdb954de" translate="yes" xml:space="preserve">
          <source>Aggregating of metrics, including SUM and AVG functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac403bc022c5e2535d124ca562e6caa1d7873ab2" translate="yes" xml:space="preserve">
          <source>Aggregation rules allow you to add several metrics together as they come in, reducing the need to sum() many metrics in every URL. Note that unlike some other config files, any time this file is modified it will take effect automatically. This requires the carbon-aggregator service to be running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3ebae20707b168fb1eff075b431fe1fe8fe229" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#graphite.render.functions.consolidateBy&quot;&gt;&lt;code&gt;consolidateBy(series, 'sum')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0c19339439b664fc13d2fdba923608c313b635" translate="yes" xml:space="preserve">
          <source>All of the carbon daemons listen for time-series data and can accept it over a common set of &lt;a href=&quot;feeding-carbon&quot;&gt;protocols&lt;/a&gt;. However, they differ in what they do with the data once they receive it. This document gives a brief overview of what each daemon does and how you can use them to build a more sophisticated storage backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21df4c4b99900b8ee01e17ae2e32be15b76114cf" translate="yes" xml:space="preserve">
          <source>All these actions use functions documented on &lt;a href=&quot;functions#list-of-functions&quot;&gt;the functions page&lt;/a&gt;. For further information, read the documentation for the appropriate function on that page. Function names are included in brackets in the list below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d55f16a6f7be257fee802887750748caf355a7a" translate="yes" xml:space="preserve">
          <source>All wildcards apply only within a single path element. In other words, they do not include or cross dots (&lt;code&gt;.&lt;/code&gt;). Therefore, &lt;code&gt;servers.*&lt;/code&gt; will not match &lt;code&gt;servers.ix02ehssvc04v.cpu.total.user&lt;/code&gt;, while &lt;code&gt;servers.*.*.*.*&lt;/code&gt; will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fa3e516989c10f16db41d7a27851fcd3a7e4c4" translate="yes" xml:space="preserve">
          <source>Allows setting the time format for dates/times on the axis (see &lt;a href=&quot;render_api#param-xformat&quot;&gt;xFormat&lt;/a&gt;), the timezone for interpretation of timestamps (see &lt;a href=&quot;render_api#param-tz&quot;&gt;tz&lt;/a&gt;), and the threshold for point consolidation (the closest number of pixels between points before they are consolidated, see &lt;a href=&quot;render_api#param-minxstep&quot;&gt;minXStep&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbffcb0686bfd800d14d8b2a55a7c201cc34bcd1" translate="yes" xml:space="preserve">
          <source>Allows you to send a copy of the graph to someone via email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd6a23f46a8cc38e374dbe1e5a6ddc16a55eb75" translate="yes" xml:space="preserve">
          <source>Along with rendering an image, the api can also generate &lt;a href=&quot;http://www.w3.org/Graphics/SVG/&quot;&gt;SVG&lt;/a&gt; with embedded metadata, PDF, or return the raw data in various formats for external graphing, analysis or monitoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d0c95447cdd34b359c47fc3db1a0109266cef4" translate="yes" xml:space="preserve">
          <source>Alternative storage finders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396f6ba78e0a5e3b19ee0183e332cb3e7150cf16" translate="yes" xml:space="preserve">
          <source>Alternatively, if you&amp;rsquo;ve saved a graph in the Composer, you can import it. Use the &lt;em&gt;Graphs | New Graph | From Saved Graph&lt;/em&gt; menu item, and select the graph to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d0d2c8b96c9a1d1824ba7a003ba0d057266253" translate="yes" xml:space="preserve">
          <source>Alternatively, set the dashboard to auto-refresh by ensuring that the &lt;em&gt;Auto-Refresh&lt;/em&gt; menu button is pressed in. The refresh defaults to 60 seconds, but you can change this in the edit field to the right of the &lt;em&gt;Auto-Refresh&lt;/em&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2253520db3a446d6ba1237a38969fd249aa11249" translate="yes" xml:space="preserve">
          <source>Alternatively, static files can be served directly by the Graphite webapp if you install the &lt;code&gt;whitenoise&lt;/code&gt; Python package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569f0916079e33fcd585b0f2854bf22585b2ba39" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;Apply Function&lt;/em&gt; menu button, which allows functions to be applied to the currently-selected item in the metrics list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961e9565c881038c69b0c7cecead727ca1337cb1" translate="yes" xml:space="preserve">
          <source>An Android app which allows one to browse and display Graphite graphs on an Android device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b1296faf5b7675a20e8f2afafc11ee8c05bc36" translate="yes" xml:space="preserve">
          <source>An agent for windows written in .net to collect metrics using plugins (WMI, SQL Server, Oracle) by polling an endpoint with a SQL query and pushing the results into graphite. It uses either a local or a centralised configuration over HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee7223665f6f77a5a6013582179aaea290738c0" translate="yes" xml:space="preserve">
          <source>An alerting dashboard for Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965110b799bba0e4e0e9c400ec1dc04f5b91aa64" translate="yes" xml:space="preserve">
          <source>An alerting system based on Graphite data. Moira is a real-time alerting tool, independent from graphite storage, custom expressions and extendable notification channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dd0a0f362796bd330865f016b567a377c96cb0" translate="yes" xml:space="preserve">
          <source>An alternate storage backend provided by the Graphite Project. It it intended to be a distributable time-series database. It is currently in a pre-release status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8debedb222c2494017f7d6ddcff2ce860aa52c98" translate="yes" xml:space="preserve">
          <source>An alternative database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f126dc6771f3ab1560d0668aab4bca6fdf26527" translate="yes" xml:space="preserve">
          <source>An alternative finder for the experimental Ceres database is available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce475542c01ac8aac731af1cd21e39f83b7eee8" translate="yes" xml:space="preserve">
          <source>An alternative to the completer is a browser tree, which shows to the left of the graph panel. To change to this mode, use the &lt;em&gt;Dashboard | Configure UI&lt;/em&gt; menu item, and choose &lt;em&gt;Tree (left nav)&lt;/em&gt;. You&amp;rsquo;ll have to refresh the page to get this to show. The completer and browser tree do the same job, so the choice is down to your personal preference. Your choice is recorded in a persistent browser cookie, so it should be preserved across sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15df18f1237be89ab91e44bdeebb8e50a967e44" translate="yes" xml:space="preserve">
          <source>An anomaly detection/deflection system that receives all Graphite metrics data in real time via a carbon-relay pickle and analyses each time series to detect anomalies, drops off cliffs, user defined thresholds, handles multiple seasonality, records all anomalies and cross correlates all metrics to anomalies for the purpose of root cause analysis. Skyline can also be trained on what is not anomalous and thereafter it can independently learn what is not anomalous using a time series similarities comparison method. It can alert via smtp, hipchat and pagerduty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c89ce642da4a154d3e6673b3584276453f69b0" translate="yes" xml:space="preserve">
          <source>An asynchronous Netty based graphite proxy, for large scale installations. It protects Graphite from the herds of clients by minimizing context switches and interrupts; by batching and aggregating metrics. Gruffalo also allows you to replicate metrics between Graphite installations for DR scenarios, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf7d5efbb94162e1c8ba8891bee706d44dd7522" translate="yes" xml:space="preserve">
          <source>An example use case is for comparing different round trip time results. When measuring RTT (like pinging a server), different devices may come back with consistently different results due to network latency which will be different depending on how many network hops between the probe and the device. To compare different devices in the same graph, the network latency to each has to be factored out of the results. This is a shortcut that takes the fastest response (lowest number in the series) and sets that to zero and then offsets all of the other datapoints in that series by that amount. This makes the assumption that the lowest response is the fastest the device can respond, of course the more datapoints that are in the series the more accurate this assumption is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c619ca75866b4c78deb809803cb0f3909903da3b" translate="yes" xml:space="preserve">
          <source>An index of graphs for &lt;a href=&quot;https://diamond.readthedocs.io/en/latest/&quot;&gt;Diamond&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4491f66a2055b931f0cdc5aa5dabcc23888e4b6f" translate="yes" xml:space="preserve">
          <source>An open source implementation of the sFlow protocol (&lt;a href=&quot;http://www.sflow.org&quot;&gt;http://www.sflow.org&lt;/a&gt;), exporting a standard set of host cpu, memory, disk and network I/O metrics. The sflow2graphite utility converts sFlow to Graphite&amp;rsquo;s plaintext protocol, allowing Graphite to receive sFlow metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa0601062e8af1a590dfcb817ed5c1bdaa6ba8a" translate="yes" xml:space="preserve">
          <source>Another common use pattern of &lt;code&gt;carbon-aggregator&lt;/code&gt; is to aggregate several data points of the &lt;em&gt;same metric&lt;/em&gt;. This could come in handy when you have got the same metric coming from several hosts, or when you are bound to send data more frequently than your shortest retention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d97a93e39860476cfd5b8914a132167c7d541ad" translate="yes" xml:space="preserve">
          <source>Any new graphs created after saving that as the default graph parameters would have unreported metrics graphed as zeroes and omit the grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0d725df00f450bb03d5ed5c4eb03bea1641e0d" translate="yes" xml:space="preserve">
          <source>Any tag spec that matches an empty value is considered to match series that don&amp;rsquo;t have that tag, and at least one tag spec must require a non-empty value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5b68b809e0a5a28b214bca3d549714440dc10a" translate="yes" xml:space="preserve">
          <source>Any tag spec that matches an empty value is considered to match series that don&amp;rsquo;t have that tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4205723aa53e11f50dce6d46d8ddcaee9d67e024" translate="yes" xml:space="preserve">
          <source>Anybody who would want to track values of anything over time. If you have a number that could potentially change over time, and you might want to represent the value over time on a graph, then Graphite can probably meet your needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42929aed4f0e761c601e340b8e8675519ee05c0" translate="yes" xml:space="preserve">
          <source>Apache + mod_wsgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e677b05a72ad1f30a4dda7b5ba3e93ef937dd67a" translate="yes" xml:space="preserve">
          <source>Apache mod_wsgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e37e806fa1af3a7dfc8ea203aa291c4680e3c6" translate="yes" xml:space="preserve">
          <source>Applies the popular min max normalization technique, which takes each point and applies the following normalization transformation to it: normalized = (point - min) / (max - min).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2621c6fd51a58e1d1d5c491aac71488647b20224" translate="yes" xml:space="preserve">
          <source>Archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c46910f75fe4a9cd7aec96bc47e4c8ad95531" translate="yes" xml:space="preserve">
          <source>ArchiveInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d75380866183953c1cb2769e93ef433927ee8e3" translate="yes" xml:space="preserve">
          <source>Archives: Retention and Precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff0a52b212c201e8592d2b91bd5272c09260982" translate="yes" xml:space="preserve">
          <source>As Whisper and other storage backends are designed to hold simple time-series data (metric key, value, and timestamp), Graphite stores tag information in a separate tag database (TagDB). The TagDB is a pluggable store, by default it uses the Graphite SQLite, MySQL or PostgreSQL database, but it can also be configured to use an external Redis server or a custom plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff0686911506cfe395112be84a5421f818d7c91" translate="yes" xml:space="preserve">
          <source>As Whisper was designed to hold simple time-series data (metric key, value, and timestamp), it&amp;rsquo;s altogether unsuitable for storing rich metric data such as events. Many users continue to store simple event-type data (e.g. releases, state changes, etc) in Whisper by encoding its meaning within the metric namespace and rendering them as a vertical line with Graphite&amp;rsquo;s &lt;a href=&quot;functions#graphite.render.functions.drawAsInfinite&quot;&gt;drawAsInfinite&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263bb38156b04b461c360af2a04c8fde98c7d823" translate="yes" xml:space="preserve">
          <source>As an example, if the following metrics are received:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfc6dddbc0393121d3981a9afd8581d3fc35e4f" translate="yes" xml:space="preserve">
          <source>As many &lt;code&gt;netcat&lt;/code&gt; implementations exist, a parameter may be needed to instruct &lt;code&gt;nc&lt;/code&gt; to close the socket once data is sent. Such param will usually be &lt;code&gt;-q0&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;-N&lt;/code&gt;. Refer to your &lt;code&gt;nc&lt;/code&gt; implementation man page to determine it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d5930cfb8114db0665cf02a006b892d382d976" translate="yes" xml:space="preserve">
          <source>As nginx is already ready to proxy requests, we just need to start Gunicorn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67056af281938d9639667cc0e796d0fb53690f82" translate="yes" xml:space="preserve">
          <source>As of Django 1.2, the database configuration is specified by the DATABASES dictionary instead of the old &lt;code&gt;DATABASE_*&lt;/code&gt; format. Users must use the new specification to have a working database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98edacc49e60c4ab4e12260897581c7c0df86d56" translate="yes" xml:space="preserve">
          <source>As the number of incoming metrics increases, one &lt;code&gt;carbon-cache.py&lt;/code&gt; instance may not be enough to handle the I/O load. To scale out, simply run multiple &lt;code&gt;carbon-cache.py&lt;/code&gt; instances (on one or more machines) behind a &lt;code&gt;carbon-aggregator.py&lt;/code&gt; or &lt;code&gt;carbon-relay.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ece965a3192109ac4ffe3c38e814ddf15824c6" translate="yes" xml:space="preserve">
          <source>Assigns the given alpha transparency setting to the series. Takes a float value between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7a3eb2c5e871743102f57699ed1b3e45c3121f" translate="yes" xml:space="preserve">
          <source>Assigns the given color to the seriesList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413f0f9ac40853788b644f5d4eaad3d822fe6523" translate="yes" xml:space="preserve">
          <source>Assume that metrics in the form below exist:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b599c29bd73a3f59b98c9eef77555a6f1a4194c5" translate="yes" xml:space="preserve">
          <source>At least one tag spec must require a non-empty value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b49d3e588075fe71867be150cb90f8593ee9139" translate="yes" xml:space="preserve">
          <source>Authentication Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90edd33c40f1a91ac929b204c45c152c3c4451a5" translate="yes" xml:space="preserve">
          <source>Auto-complete Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcd9939ab85a2b154c197de16ccacf1620e6feb" translate="yes" xml:space="preserve">
          <source>Available aggregation methods are: &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;p50&lt;/code&gt;, &lt;code&gt;p75&lt;/code&gt;, &lt;code&gt;p80&lt;/code&gt;, &lt;code&gt;p90&lt;/code&gt;, &lt;code&gt;p95&lt;/code&gt;, &lt;code&gt;p99&lt;/code&gt;, &lt;code&gt;p999&lt;/code&gt;, and &lt;code&gt;count&lt;/code&gt; - where &lt;code&gt;p50&lt;/code&gt; means 50th percentile and &lt;code&gt;p999&lt;/code&gt; means 99.9th percentile, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5671491aa1064d437b2f8ade44755cdaafc260" translate="yes" xml:space="preserve">
          <source>Backstop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d87a2f770eaa01de7c38d4c95c13f12f5ba6b4" translate="yes" xml:space="preserve">
          <source>Basic Graphite requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7598c33555c88210c68a2e7b68f972d257a94ed4" translate="yes" xml:space="preserve">
          <source>Basically, when carbon receives a metric, it determines where on the filesystem the whisper data file should be for that metric. If the data file does not exist, carbon knows it has to create it, but since whisper is a fixed size database, some parameters must be determined at the time of file creation (this is the reason we&amp;rsquo;re making a schema). Carbon looks at the schemas file, and in order of priority (highest to lowest) looks for the first schema whose pattern matches the metric name. If no schema matches the default schema (2 hours of minutely data) is used. Once the appropriate schema is determined, carbon uses the retention configuration for the schema to create the whisper data file appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73494250eed05cd1756b8bd2f87a5cb325d2874" translate="yes" xml:space="preserve">
          <source>Be careful when increasing the number of threads, in particular if your start multiple graphite-web processes (with uwsgi or similar) as this will increase memory consumption (and number of connections to memcached).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e001625157e0986f575dcdc1634b37b20e7c1855" translate="yes" xml:space="preserve">
          <source>Be sure to reload your Apache configuration by running &lt;code&gt;sudo /etc/init.d/apache2 reload&lt;/code&gt; or &lt;code&gt;sudo /etc/init.d/httpd reload&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4ec36dd2ccd6174fccc81270134133d12a86a9" translate="yes" xml:space="preserve">
          <source>Because time is shifted by a fixed number of seconds, comparing a time period with DST to a time period without DST, and vice-versa, will result in an apparent misalignment. For example, 8am might be overlaid with 7am. To compensate for this, use the alignDST option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cee0b5acccb8f78b444d475ec6a39bd37af3d7e" translate="yes" xml:space="preserve">
          <source>BigGraphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a800fcef22f384beb41d7119cff7fa22e461008c" translate="yes" xml:space="preserve">
          <source>BigGraphite finder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0c2b5300d8cba2084402ee4fb755d58bddf07d" translate="yes" xml:space="preserve">
          <source>Brubeck</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250f16eac1695996bddbd20175e43679872f11b6" translate="yes" xml:space="preserve">
          <source>Bryans-Graphite-Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8062a21f2efac92ec010dbe45619c87f76c1fa40" translate="yes" xml:space="preserve">
          <source>Bucky</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f540d7a56fb257e24362c230f26ec42be19c4f0" translate="yes" xml:space="preserve">
          <source>Built-in finders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f89f3324732ca8c41d0035623b2c2aa3794a6f" translate="yes" xml:space="preserve">
          <source>By default settings module is &lt;code&gt;local_settings.py&lt;/code&gt; and it is generally located within the main &lt;code&gt;graphite&lt;/code&gt; module where the webapp&amp;rsquo;s code lives. In the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default installation layout&lt;/a&gt; this is &lt;code&gt;/opt/graphite/webapp/graphite/local_settings.py&lt;/code&gt;. Alternative locations can be used by symlinking to this path or by ensuring the module can be found within the Python module search path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c469ed56f837ea0f0cfade0f8523cdad8ce05280" translate="yes" xml:space="preserve">
          <source>By default, buckets are calculated by rounding to the nearest interval. This works well for intervals smaller than a day. For example, 22:32 will end up in the bucket 22:00-23:00 when the interval=1hour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c23bba14cc66d8456d1caddcddbd41e4a965a60" translate="yes" xml:space="preserve">
          <source>By default, dashboards are set to manually refresh. Click the green refresh menu button to the left of the &lt;em&gt;Auto-Refresh&lt;/em&gt; button to refresh the dashboard. The time of the last refresh is shown at the right of the menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675404ec8d2ca2200fb158ce7f0469180e480dc2" translate="yes" xml:space="preserve">
          <source>By default, graphs are generated with a standard render template. If you find yourself applying &lt;em&gt;Render Options&lt;/em&gt; to each and every graph you create, then you can select &lt;em&gt;Edit Default Parameters&lt;/em&gt; in the &lt;em&gt;Graphs&lt;/em&gt; menu to automatically handle that. These parameters are saved with the dashboard and persisted in a cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f719ba2578ef73425cfe65560af0ef2094fb546" translate="yes" xml:space="preserve">
          <source>By default, it&amp;rsquo;s not necessary to be logged in to use or change dashboards. However, your system may be configured to require users to be logged in to change or delete dashboards, and may also require appropriate permissions to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff273341a0c6d368b27ed2b5624007ca7fdcd05" translate="yes" xml:space="preserve">
          <source>By default, the contents of each interval bucket are summed together. This is useful for counters where each increment represents a discrete event and retrieving a &amp;ldquo;per X&amp;rdquo; value requires summing all the events in that interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8138f8ac38041c02c340526140232c82f0e60f" translate="yes" xml:space="preserve">
          <source>By using multiple retentions, you can store long histories of metrics while saving on disk space and I/O. Because whisper averages (by default) as it downsamples, one is able to determine totals of metrics by reversing the averaging process later on down the road.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db26e48badb50e03b42900390cf51e336f892764" translate="yes" xml:space="preserve">
          <source>CARBONLINK_HASHING_TYPE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6983d26f0ab4348e51c4bca85ed90f1c7d6865" translate="yes" xml:space="preserve">
          <source>CARBONLINK_HOSTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833f9b038ad522c7ad24bedf3c0fe26c174017fc" translate="yes" xml:space="preserve">
          <source>CARBONLINK_TIMEOUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8c2f32e124a30728be1cf18aac3270ad960ce2" translate="yes" xml:space="preserve">
          <source>CARBON_METRIC_PREFIX:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637268a06d608da50ee067c4b6c41fee1c8f1cb8" translate="yes" xml:space="preserve">
          <source>CERES_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd7980e6ad2dbd66ee45d921d95c31cba9ca4e1" translate="yes" xml:space="preserve">
          <source>CLUSTER_SERVERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db37cc14e306231ddddc2ff3a846fea8dc2d8a0" translate="yes" xml:space="preserve">
          <source>CONF_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a50aa27dbe723be0aadaa76c802017dc65cb0d" translate="yes" xml:space="preserve">
          <source>Cabot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a51792d3f0f06022d03d4a2a8fa7cbf5ad8cb46" translate="yes" xml:space="preserve">
          <source>Caching metrics in case of outage and sending them later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933908650e5ec7b875b376447d530cdc8be3733b" translate="yes" xml:space="preserve">
          <source>Calculates a percentage of the total of a wildcard series. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51ac1423c64adc554c00e4c055a513102b865e2" translate="yes" xml:space="preserve">
          <source>Call aggregator after inserting wildcards at the given position(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e252c16db04e03aa353feb9c1e280d3405204b" translate="yes" xml:space="preserve">
          <source>Call averageSeries after inserting wildcards at the given position(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31396cc60fc195cd94fd3f12f922ce47e094d0e5" translate="yes" xml:space="preserve">
          <source>Call multiplySeries after inserting wildcards at the given position(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767cc06148a9f2c9fd3d46f219607bfa5147babf" translate="yes" xml:space="preserve">
          <source>Call sumSeries after inserting wildcards at the given position(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6097563751a0dde07a0aeea3ab04707538b4aea7" translate="yes" xml:space="preserve">
          <source>Carbon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f9159dadc8f48fee568ed27f9234ded66db8b4" translate="yes" xml:space="preserve">
          <source>Carbon &lt;code&gt;PYTHONPATH&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c171e701474b4f6134462161f75bc0865b410f" translate="yes" xml:space="preserve">
          <source>Carbon and Graphite-web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69b515843601271dde6f3cfb91fb72d9a71686e" translate="yes" xml:space="preserve">
          <source>Carbon and Graphite-web are installed in &lt;code&gt;/opt/graphite/&lt;/code&gt; with the following layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f880d13cf2acb1483e2d271dd48c465f89e3070" translate="yes" xml:space="preserve">
          <source>Carbon can be started with the &lt;code&gt;carbon-cache.py&lt;/code&gt; script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343fb134d7f9bbfef82391e12de28db1af4d3875" translate="yes" xml:space="preserve">
          <source>Carbon daemon using Cassandra as the backend, implemented in Go. It also acts as an API for Graphite (using the &lt;a href=&quot;http://cyanite.io/&quot;&gt;Cyanite&lt;/a&gt; reader) to retrieve the stats to display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f289c084824de0495664990344b3b044434dc0e6" translate="yes" xml:space="preserve">
          <source>Carbon may be run within Virtualenv by &lt;a href=&quot;http://www.virtualenv.org/en/latest/index.html#activate-script&quot;&gt;activating virtualenv&lt;/a&gt; before Carbon is started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75361dc12498ee4e23d9fb51376d32875e04377e" translate="yes" xml:space="preserve">
          <source>Carbon will automatically decode the tags, normalize the tag order, and register the series in the tag database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918fc9e24694a808bb475e5fce355f15bef66650" translate="yes" xml:space="preserve">
          <source>Carbon&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt; installer is configured to use a &lt;code&gt;prefix&lt;/code&gt; of &lt;code&gt;/opt/graphite&lt;/code&gt; and an &lt;code&gt;install-lib&lt;/code&gt; of &lt;code&gt;/opt/graphite/lib&lt;/code&gt;. Carbon&amp;rsquo;s lifecycle wrapper scripts and utilities are installed in &lt;code&gt;bin&lt;/code&gt;, configuration within &lt;code&gt;conf&lt;/code&gt;, and stored data in &lt;code&gt;storage&lt;/code&gt; all within &lt;code&gt;prefix&lt;/code&gt;. These may be overridden by passing parameters to the &lt;code&gt;setup.py install&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c0a5490bc0460b4a5289648a25f5f76e0d3f6e" translate="yes" xml:space="preserve">
          <source>Carbon&amp;rsquo;s config files all live in &lt;code&gt;/opt/graphite/conf/&lt;/code&gt;. If you&amp;rsquo;ve just installed Graphite, none of the &lt;code&gt;.conf&lt;/code&gt; files will exist yet, but there will be a &lt;code&gt;.conf.example&lt;/code&gt; file for each one. Simply copy the example files, removing the .example extension, and customize your settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731d096a2d295876147aabc0c7a9d664098221ca" translate="yes" xml:space="preserve">
          <source>Carbon-cache and carbon-relay can run on the same host! Try swapping the default ports listed for &lt;code&gt;LINE_RECEIVER_PORT&lt;/code&gt; and &lt;code&gt;PICKLE_RECEIVER_PORT&lt;/code&gt; between the &lt;code&gt;[cache]&lt;/code&gt; and &lt;code&gt;[relay]&lt;/code&gt; sections to prevent having to reconfigure your deployed metric senders. When setting &lt;code&gt;DESTINATIONS&lt;/code&gt; in the &lt;code&gt;[relay]&lt;/code&gt; section, keep in mind your newly-set &lt;code&gt;PICKLE_RECEIVER_PORT&lt;/code&gt; in the &lt;code&gt;[cache]&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ba5792e6e3107546d4fb7c40215e63f3bd17e1" translate="yes" xml:space="preserve">
          <source>Carbon: &lt;code&gt;git clone https://github.com/graphite-project/carbon.git&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fab061237afddd6292628644cee4e5fe9e2b0b7" translate="yes" xml:space="preserve">
          <source>Carbonator Windows Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375fbacf148e4bc5929557f83bc80097efc7536c" translate="yes" xml:space="preserve">
          <source>Care should be taken when using percentile aggregation methods because re-aggregation does not work the way you &lt;a href=&quot;https://www.vividcortex.com/blog/why-percentiles-dont-work-the-way-you-think&quot;&gt;might&lt;/a&gt;&lt;a href=&quot;https://grafana.com/blog/2016/03/03/25-graphite-grafana-and-statsd-gotchas/#aggregating.percentiles&quot;&gt;expect&lt;/a&gt;. The utility of percentile aggregation however means they are provided if you wish to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a176f88bbf5d1fac48de3755433a820ccdbf5b3d" translate="yes" xml:space="preserve">
          <source>Cassandra-backed, metrics2.0 based, multi-tenant timeseries database for Graphite and friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ba5c617e799885be8d986cf261d66a6144741d" translate="yes" xml:space="preserve">
          <source>Ceres</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14668ecac7eaf699c6aa0f086f15df6728b8bf88" translate="yes" xml:space="preserve">
          <source>Ceres databases are comprised of a single tree contained within a single path on disk that stores all metrics in nesting directories as nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d886a1e451e43195f7c0758cf9edb6c929bb7d9e" translate="yes" xml:space="preserve">
          <source>Ceres databases contain one or more slices, each with a specific data resolution and a timestamp to mark the beginning of the slice. Slices are ordered from the most recent timestamp to the oldest timestamp. Resolution of data is not considered when reading from a slice, only that when writing a slice with the finest precision configured for the node exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ceee004c91c54eeca373a6a21f0c06b85013956" translate="yes" xml:space="preserve">
          <source>Ceres is a time-series database format intended to replace Whisper as the default storage format for Graphite. In contrast with Whisper, Ceres is not a fixed-size database and is designed to better support sparse data of arbitrary fixed-size resolutions. This allows Graphite to distribute individual time-series across multiple servers or mounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3727e9a837682b04ab4e5de7c6100ad5370990" translate="yes" xml:space="preserve">
          <source>Ceres is an alternative storage backend that some choose to use in place of the default Whisper backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a488e9b04137ea86ccd3657f7fafe340928b07dd" translate="yes" xml:space="preserve">
          <source>Ceres is not actively developped at the moment. For alternatives to whisper look at &lt;a href=&quot;tools&quot;&gt;alternative storage backends&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2fe7ea0cd25724c9380be21cf47ab34ef0fb63" translate="yes" xml:space="preserve">
          <source>Ceres: &lt;code&gt;git clone https://github.com/graphite-project/ceres.git&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a0b18ee6de84d17a9cbb3e0a5a77983841d6bc" translate="yes" xml:space="preserve">
          <source>CeresSlice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e244d8a2d6caacf2c59758b4ebd8f5986f9ae0e8" translate="yes" xml:space="preserve">
          <source>Change the font used to render text on the graph. The font must be installed on the Graphite Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f05fdc3fdc6ddd58bf52faab39c54a14d78c81e" translate="yes" xml:space="preserve">
          <source>Changes the font size. Must be passed a positive floating point number or integer equal to or greater than 1. Default is 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebafdc2a0745047580868687a53f6d3cfd41040" translate="yes" xml:space="preserve">
          <source>Changing Default Graph Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7635413b38e25bb0b34d50e944415b22b355d964" translate="yes" xml:space="preserve">
          <source>Changing Graph Sizes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4b45b445e9b92c04f0be71b191d4b0e80ce898" translate="yes" xml:space="preserve">
          <source>Changing this file will not affect .wsp files already created on disk. Use whisper-set-aggregation-method.py to change those.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac488839df5cab1c478d12ab7fbef5199c75c5e" translate="yes" xml:space="preserve">
          <source>Changing this file will not affect already-created .wsp files. Use whisper-resize.py to change those.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445921dd1b429003e0c9b95fca32ea723cb7281c" translate="yes" xml:space="preserve">
          <source>Characters in square brackets (&lt;code&gt;[...]&lt;/code&gt;) specify a single character position in the path string, and match if the character in that position matches one of the characters in the list or range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81e2a08f7e0b5c4162685cc5b5ede3c1ec05062" translate="yes" xml:space="preserve">
          <source>Charcoal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5061859ab08a64990a67a92e02ec1ee7cb5ce8" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;https://github.com/graphite-project/docker-graphite-statsd&quot;&gt;docker repo&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebee630b63a7658db5c0d473776f7ae8a6d1e223" translate="yes" xml:space="preserve">
          <source>Choosing the right transfer method for you is dependent on how you want to build your application or script to send data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b31b01c8b3dbadd3d827b28689903ac1bb5a2ec" translate="yes" xml:space="preserve">
          <source>Client APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae3aad2b6d314039cf6b474987f8baba0ca14c5" translate="yes" xml:space="preserve">
          <source>Cluster Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1e3c909612f0846c92ab8788554facf0916a58" translate="yes" xml:space="preserve">
          <source>Cluster server definitions can optionally include a protocol (http:// or https://) and/or additional config parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c54a96f8011b39819ba18bcb53fcbb092d650d" translate="yes" xml:space="preserve">
          <source>Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30b0c9bf39e36fb0ecf42ce2590d715f1f1baae" translate="yes" xml:space="preserve">
          <source>Collectl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfb64e7412f7f27872aa6cf171f3913c339ce10" translate="yes" xml:space="preserve">
          <source>Color Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44481bc792e6642e2f697d3e0653618aff05b5f" translate="yes" xml:space="preserve">
          <source>Color used to draw slice labels within a pie chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a4b519091461e4d94f9e7ca1abff4dc09b05f2" translate="yes" xml:space="preserve">
          <source>Column alignment of the Current, Max, Min values works under two conditions: you use a monospace font such as terminus and use a single cactiStyle call, as separate cactiStyle calls are not aware of each other. In case you have different targets for which you would like to have cactiStyle to line up, you can use &lt;code&gt;group()&lt;/code&gt; to combine them before applying cactiStyle, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51ff5d3a6daf41739b114bd30f89c4e174ba7dc" translate="yes" xml:space="preserve">
          <source>Comma-separated values within curly braces (&lt;code&gt;{foo,bar,...}&lt;/code&gt;) are treated as value lists, and match if any of the values matches the current point in the path. For example, &lt;code&gt;servers.ix01ehssvc04v.cpu.total.{user,system,iowait}&lt;/code&gt; will match the user, system and I/O wait total CPU metrics for the specified server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3caa932f5a203778b454886cb579809bd01dd2" translate="yes" xml:space="preserve">
          <source>Compares the maximum of each series against the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f627180c814403f12614af1cc6299d93d7042ac" translate="yes" xml:space="preserve">
          <source>Completer or browser tree?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffd0c21e2c7e335efe94049aa5c37c1ed92bed2" translate="yes" xml:space="preserve">
          <source>Config File Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba7c07dacc3de7cd4953c7bb4cf60f85575cdf8" translate="yes" xml:space="preserve">
          <source>Configure Webserver (Apache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b8d628ea293ed5577f74be192b69de106d37e0" translate="yes" xml:space="preserve">
          <source>Configure nginx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d60470f5925c1fe3e4a97e8150a37ed0fa00e6" translate="yes" xml:space="preserve">
          <source>Configuring Carbon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3413775e49283e9e52bd4eeabd4a0a110cc7f122" translate="yes" xml:space="preserve">
          <source>Configuring The Webapp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5be707aa365f00e4254bb132ac718a8602dcf11" translate="yes" xml:space="preserve">
          <source>Connection timeout for remote rendering requests in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c997f60d92429a7a346732e2fec2f95fd18c3d1" translate="yes" xml:space="preserve">
          <source>Controls the format of data returned. Affects all &lt;code&gt;&amp;amp;targets&lt;/code&gt; passed in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f7945c92992421f5e4cdd94e77593a462feb60" translate="yes" xml:space="preserve">
          <source>Converts any None (null) values in the displayed metrics to zero at render time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7a2ab9cb853001827bcd95cf7c368396cc74ab" translate="yes" xml:space="preserve">
          <source>Create a virtualenv at the root of your graphite-web repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96c5368dc42176993cb6016f689104efab99123" translate="yes" xml:space="preserve">
          <source>Create the default storage directories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8665cb34764f84b769e9f526f0f1e36561b72a" translate="yes" xml:space="preserve">
          <source>Creates a copy of the graph, and adds it to the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fae3f57af9084a8e368fb64a350e6ea22c68409" translate="yes" xml:space="preserve">
          <source>Creates a graph where the filled area of each target is stacked on one another. Each target line is displayed as the sum of all previous lines plus the value of the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9642c0f06808206159ea18d326932acc2d3694" translate="yes" xml:space="preserve">
          <source>Creates a pool of worker threads to which tasks can be dispatched. This makes sense if there are multiple CLUSTER_SERVERS and/or STORAGE_FINDERS because then the communication with them can be parallelized. The number of threads is equal to: min(number of finders, POOL_MAX_WORKERS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a70a7a691dd8aaea279592bff2d7889928f682" translate="yes" xml:space="preserve">
          <source>Creates new graphs for each of the metrics in the graph, adds them to the dashboard, and removes the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88180f04881c81bcf8e456820a3a3a4833397f29" translate="yes" xml:space="preserve">
          <source>Creating or Modifying a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349486eb377dbfdf49f834c0352ba4ab7ff0102c" translate="yes" xml:space="preserve">
          <source>Cubism.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6454b9397cc673baed11fbb8f6671dfa9dffe8f" translate="yes" xml:space="preserve">
          <source>Custom finders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72bfd4a50c808ff517f65d2006a1edfed7e1d01" translate="yes" xml:space="preserve">
          <source>Custom finders may also implement the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b358aa96bb5d562e59bb95f25d35f14c8b15799" translate="yes" xml:space="preserve">
          <source>Custom plugin files may be placed in the &lt;code&gt;/opt/graphite/webapp/graphite/functions/custom&lt;/code&gt; folder and will be loaded automatically when graphite starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1824ea7edb050c8d5d5f5b4069342829cc982c" translate="yes" xml:space="preserve">
          <source>Customizing Graphs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35bd203aef6a3881430f62b3c2d6d6984cdde85" translate="yes" xml:space="preserve">
          <source>Customizing a Single Metric Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1815d1d9a9602f114f4491c6e1d7402de51aa7e4" translate="yes" xml:space="preserve">
          <source>Customizing the Whole Graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab5fbbd84ba5925d2fdda21fc1e81ccc5f5a140" translate="yes" xml:space="preserve">
          <source>Cyanite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a025a52b947abf83a75158c1c8b4433fc2712b2a" translate="yes" xml:space="preserve">
          <source>Cyanite finder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50948d54ba5b8230c62c11c372cc767c8c95799e" translate="yes" xml:space="preserve">
          <source>DASHBOARD_CONF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cf9ebcbe1fb6fea158f780110577abe53b32ec" translate="yes" xml:space="preserve">
          <source>DASHBOARD_REQUIRE_AUTHENTICATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffae8a977f58ea8aee8ccf4ffb5b8d782fcef08" translate="yes" xml:space="preserve">
          <source>DASHBOARD_REQUIRE_EDIT_GROUP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a025566b86e8943b2fe7d61f6bc34aa9408be3" translate="yes" xml:space="preserve">
          <source>DASHBOARD_REQUIRE_PERMISSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35afffbfe97473f23d31d6e449cd8a9a0af5eb64" translate="yes" xml:space="preserve">
          <source>DATE_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e946b779e60851d5c244c3ad74774cbf9f1d48d" translate="yes" xml:space="preserve">
          <source>DD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4031e6a3bab19fcbd628b843ec7999d7419729" translate="yes" xml:space="preserve">
          <source>DEBUG = True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dd9d0211e4d1f8f2d4e2383e636f957638e988" translate="yes" xml:space="preserve">
          <source>DEFAULT_CACHE_DURATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9a3ea4ab70b07f4554f61a841e8702a200ea1c" translate="yes" xml:space="preserve">
          <source>DEFAULT_CACHE_POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5919d96bc5dc7ed739ba996e0e69af4655e989d" translate="yes" xml:space="preserve">
          <source>DOCUMENTATION_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3796139bb1e8cf518c0046d0bdc31dc754f65d" translate="yes" xml:space="preserve">
          <source>Dashboard Authorization Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7183febbf6cd498c6d791998935e1a9bf2534369" translate="yes" xml:space="preserve">
          <source>Data Display Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2077b8693366123a656ee7e95be0c7997bcdda1d" translate="yes" xml:space="preserve">
          <source>Data Points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8fc82ba6c73255dbe14d1d32bcf1ecd3a0291d" translate="yes" xml:space="preserve">
          <source>Data points in Ceres are stored on-disk as a contiguous list of big-endian double-precision floats. The timestamp of a datapoint is not stored with the value, rather it is calculated by using the timestamp of the slice plus the index offset of the value multiplied by the resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3254c56982ae6c479176c196333a6c4b4382a5a5" translate="yes" xml:space="preserve">
          <source>Data points in Whisper are stored on-disk as big-endian double-precision floats. Each value is paired with a timestamp in seconds since the UNIX Epoch (01-01-1970). The data value is parsed by the Python &lt;a href=&quot;http://docs.python.org/library/functions.html#float&quot;&gt;float()&lt;/a&gt; function and as such behaves in the same way for special strings such as &lt;code&gt;'inf'&lt;/code&gt;. Maximum and minimum values are determined by the Python interpreter&amp;rsquo;s allowable range for float values which can be found by executing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845381e1db50be35604db2cb5533b74b70fab452" translate="yes" xml:space="preserve">
          <source>Data types in Python&amp;rsquo;s &lt;a href=&quot;http://docs.python.org/library/struct.html#format-strings&quot;&gt;struct format&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a3520c849de2aed406ae87e97b5971a3153855" translate="yes" xml:space="preserve">
          <source>Database Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1a51f7813c8b21ced9f5d8d659573c10c17c1a" translate="yes" xml:space="preserve">
          <source>Database Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3407c23f4ae4e4666f2240ebcc63d0ecae9911c" translate="yes" xml:space="preserve">
          <source>Database Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbfaa7c2fb88a34df404b605dca0ce41518b008" translate="yes" xml:space="preserve">
          <source>Day of month with leading zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bb0f468a8569c67b3d6826e57e62c5500c3681" translate="yes" xml:space="preserve">
          <source>Days</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28804bea099c459372b213578f648c3d6775fb1e" translate="yes" xml:space="preserve">
          <source>Default Installation Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3974df958f65b6fdda6c6b2508d8741d0e25c021" translate="yes" xml:space="preserve">
          <source>Default expiration of cached data and images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ec515fd21ca5d217376d6b49bead19d52e39fe" translate="yes" xml:space="preserve">
          <source>Default values for the template variables can also be provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3969778842fb122d5fe0c635bca333e4f0157f5" translate="yes" xml:space="preserve">
          <source>Default: %m/%d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ca9e73b14c51779ad13d0bc676005c936a169a" translate="yes" xml:space="preserve">
          <source>Default: &amp;ldquo;django.contrib.auth.middleware.RemoteUserBackend&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76157375dbcdf6e869cbeb18a425d03a33421cf5" translate="yes" xml:space="preserve">
          <source>Default: &amp;ldquo;django.contrib.auth.middleware.RemoteUserMiddleware&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024ed30f6e3dca8a38b1ef89f6729e55d6a30663" translate="yes" xml:space="preserve">
          <source>Default: &amp;lsquo;&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68ad53e4389b32085c966969e5cdfa95b10b836" translate="yes" xml:space="preserve">
          <source>Default: &amp;lsquo;graphite.tags.localdatabase.LocalDatabaseTagDB&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df9b14e7a3c7e1b977fd1a92454e1638261aba3" translate="yes" xml:space="preserve">
          <source>Default: &amp;lsquo;localhost&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d638ff9e3e3fc937822bd4d006806fd7822264c5" translate="yes" xml:space="preserve">
          <source>Default: &amp;lt;unset&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9ad93fb9cfc357f6c973a31215814d6b388b3d" translate="yes" xml:space="preserve">
          <source>Default: ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0efbe5da0437f2ea69d5a30b9b8e67e054e21e" translate="yes" xml:space="preserve">
          <source>Default: *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5437ebb1a60a11d8618b6aa3cf107b9f36858d3c" translate="yes" xml:space="preserve">
          <source>Default: /</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f8effda1d12dc30939a157a3f66f89e406de86" translate="yes" xml:space="preserve">
          <source>Default: /account/login</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e0da621437d7a4a451e6ca5ddbee71bac3e2c0" translate="yes" xml:space="preserve">
          <source>Default: /opt/graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ed0c261e1840ea5ef9f663d581a63e76d4a73e" translate="yes" xml:space="preserve">
          <source>Default: /opt/graphite/storage/ceres</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f372594ed82974e462d794701b405d032244824" translate="yes" xml:space="preserve">
          <source>Default: /opt/graphite/storage/index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4971650829c06356c2dfc8f9f150807a29fb3774" translate="yes" xml:space="preserve">
          <source>Default: /opt/graphite/storage/rrd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d989dc054ea703cdd7921f192fb700057eca3e96" translate="yes" xml:space="preserve">
          <source>Default: /opt/graphite/storage/whisper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d394614528c74b90f94e2eddfa70caed1c188af" translate="yes" xml:space="preserve">
          <source>Default: 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de87df3fde5fa6aca2488c1d27627d2ec52e2623" translate="yes" xml:space="preserve">
          <source>Default: 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd66e6fd0953d556853b2cbd258a67ba50aa72f5" translate="yes" xml:space="preserve">
          <source>Default: 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b809c4f3e13203afc104180961dd9f747e06e" translate="yes" xml:space="preserve">
          <source>Default: 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e312a21c97160bce025d4e7e5f3b9b75e0b139b1" translate="yes" xml:space="preserve">
          <source>Default: 25</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d4c804d7c0ee82752271d38ee766c11d56f05a" translate="yes" xml:space="preserve">
          <source>Default: 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e901a0c4b1a106a2749f34eb10065a89991d6384" translate="yes" xml:space="preserve">
          <source>Default: 300</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1638bc120fda1bc74252075599d746ebe118300" translate="yes" xml:space="preserve">
          <source>Default: 389</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd8c0186645d60dce7f298a8d02a154509e64c3" translate="yes" xml:space="preserve">
          <source>Default: 50</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43912c53970796e6cfe1b85cc31aeb1c5c16ff2e" translate="yes" xml:space="preserve">
          <source>Default: 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a47e4034e936c1bff603afac2e722b80fc76664" translate="yes" xml:space="preserve">
          <source>Default: 60</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af670af4dcb048bf97f22692f577ec4e2fe365f2" translate="yes" xml:space="preserve">
          <source>Default: 6379</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981e75307d31d17e2efacd03d1b3a54a422b0ceb" translate="yes" xml:space="preserve">
          <source>Default: America/Chicago</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb63d39cd5c08ddb7e76c658b6ee908428f2f3f" translate="yes" xml:space="preserve">
          <source>Default: CONF_DIR/dashboard.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7de3ce1d9855c6179f9d2760617e267a49caf7" translate="yes" xml:space="preserve">
          <source>Default: CONF_DIR/graphTemplates.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c0982b57e98c9b6d8247beda3fd08d5d824441" translate="yes" xml:space="preserve">
          <source>Default: FIND_TOLERANCE = 2 * FIND_CACHE_DURATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4797a154ba1b1de6c5dd7a85d48663340d2b77d" translate="yes" xml:space="preserve">
          <source>Default: False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b628397f2918d355a4885d7765121021e01a20da" translate="yes" xml:space="preserve">
          <source>Default: GRAPHITE_ROOT/conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca72b949d40bf5df045dc9a104c3fdfe9304fb5f" translate="yes" xml:space="preserve">
          <source>Default: GRAPHITE_ROOT/storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e42dc48c7032c532d8c12968f486a9eb7a3aea5" translate="yes" xml:space="preserve">
          <source>Default: None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1553dee78903978224d7c6f9fce45f050560fbb" translate="yes" xml:space="preserve">
          <source>Default: STORAGE_DIR/log/webapp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798d04d86169b7c37e19e8024c46aa0c77f7742e" translate="yes" xml:space="preserve">
          <source>Default: See below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea815067e679b6c61f0f361db847cb06eeeb9ab6" translate="yes" xml:space="preserve">
          <source>Default: True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851210d87c3136adf496902355428725f9da64aa" translate="yes" xml:space="preserve">
          <source>Default: UNSAFE_DEFAULT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e5f1f387a16864b13bf7a66e9d23c4673de0f2" translate="yes" xml:space="preserve">
          <source>Default: [127.0.0.1:7002]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24fd3d7caed63151541a0e134d05d7d9ded1ef3" translate="yes" xml:space="preserve">
          <source>Default: [WHISPER_DIR, RRD_DIR]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85be3b33404bd003de6a72cf2b1a66e367c8ba3a" translate="yes" xml:space="preserve">
          <source>Default: []</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf489fb75582f1f5ad866508365910f59b48bc7" translate="yes" xml:space="preserve">
          <source>Default: carbon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab480c033899460811fe888ea6be8fb0691cdea" translate="yes" xml:space="preserve">
          <source>Default: carbon_ch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2b99111012a7622abefc8f39f7e0920b38faf0" translate="yes" xml:space="preserve">
          <source>Default: django.core.mail.backends.smtp.EmailBackend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8d37f83196120fd3579d09243292a6f95e0833" translate="yes" xml:space="preserve">
          <source>Default: graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d08b0283d8c700c196dd92ed3e53e230db4c1f4" translate="yes" xml:space="preserve">
          <source>Default: http://graphite.readthedocs.io/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814d793e85cc68696cd3c9593bfe24c34d8ce244" translate="yes" xml:space="preserve">
          <source>Default: localhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ace9380054bda8bf096a764b73bf7b3d7f510ae" translate="yes" xml:space="preserve">
          <source>Default: {}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf71c9847f0e4c6d95894abf3d2ece3de0cd4bf" translate="yes" xml:space="preserve">
          <source>Defines a retention policy for incoming metrics based on regex patterns. This policy is passed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3380739e8426823e0a1ecd2c630187b482ef913d" translate="yes" xml:space="preserve">
          <source>Defines a time interval (in seconds) and aggregation function (sum or average) for incoming metrics matching a certain pattern. At the end of each interval, the values received are aggregated and published to &lt;code&gt;carbon-cache.py&lt;/code&gt; as a single metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb422c41eda981df77cd0bc95951c5124ed3152" translate="yes" xml:space="preserve">
          <source>Deleting a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0575eff43c99c447fe28f44bd334aebc9e6419" translate="yes" xml:space="preserve">
          <source>Deleting a Graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a5b4ed76e8b8e3f01ed58b2b6db775fc0a7a54" translate="yes" xml:space="preserve">
          <source>Dependent modules for additional database support (MySQL, PostgreSQL, etc). See &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/install/#get-your-database-running&quot;&gt;Django database install&lt;/a&gt; instructions and the &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/databases/&quot;&gt;Django database&lt;/a&gt; documentation for details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f750411a844099c6430b3d6939037c7a25dfa8" translate="yes" xml:space="preserve">
          <source>Depending on the configuration you choose, the webapp configuration is slightly different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec965d20e722089facfbccc70e702610e06a5b9" translate="yes" xml:space="preserve">
          <source>Depending on the stack you choose to expose the Graphite webapp, its usage varies slightly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7900760de321d2d77c43caf2def8d3696f769b44" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.9.0: See &lt;a href=&quot;#ymax&quot;&gt;yMax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4899ec1920a1756cafb045b2792fa0885be8d0a" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.9.0: See &lt;a href=&quot;#ymin&quot;&gt;yMin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2651bfad14d5124374194ebea296a3c281a27a1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.9.0: See: &lt;a href=&quot;#linewidth&quot;&gt;lineWidth&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5c0797f99e27c3014a54d106689a5cb7b367f6" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.9.10: See &lt;a href=&quot;#data-display-formats&quot;&gt;Data Display Formats&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6219f2b960337c6c79222e0dceff9f4563b94f9d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.9.9: This option is deprecated in favor of format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559a89ced4f74ca71c32f1dec8d702de8183a9f1" translate="yes" xml:space="preserve">
          <source>Descartes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f859e3948d7224b024fbaf0f7ca263c3256aca" translate="yes" xml:space="preserve">
          <source>Determines how slice labels are rendered within a pie chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123b977a5e6d15f045e4dc2ec2f621f9db040c22" translate="yes" xml:space="preserve">
          <source>Determines how the Y-axis or axes are rendered. This includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceea02e1e3b03c28b4a2e39aa7a8688f909d9a5" translate="yes" xml:space="preserve">
          <source>Determines whether the area below lines is filled, and whether the lines are stacked. See &lt;a href=&quot;render_api#param-areamode&quot;&gt;areaMode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3850e04b5cc10929206d2336efa79a041358d57" translate="yes" xml:space="preserve">
          <source>Diamond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641e5758f7963397e44de8877c39be01f1d07d83" translate="yes" xml:space="preserve">
          <source>Differences Between Whisper and RRD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d754ce455f54fcacce2343a274a1b17a0a9672" translate="yes" xml:space="preserve">
          <source>Disables areaMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1df17d6d70934514a737e69f6b9f2479f8f634" translate="yes" xml:space="preserve">
          <source>Disk Space Efficiency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad9eb4d46cf6c18cff343eb66d8244de15fe439" translate="yes" xml:space="preserve">
          <source>Display only the graph area with no grid lines, axes, or legend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d351c9f3be1c64254ee99e7d57d535a602bcc78" translate="yes" xml:space="preserve">
          <source>Display only unique legend items, removing any duplicates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1522efa01e51da8fa70e7c9b48a22e180d9ce28c" translate="yes" xml:space="preserve">
          <source>Does Graphite use RRDtool?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d593c17d50b8413389950b5df809a00ba078c94" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget to change the &lt;code&gt;server_name&lt;/code&gt; to match your actual hostname. You may also adapt other settings to your use case, such as &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28da6dcbfb54bbd9fa9923ec1f7148317d60c0d6" translate="yes" xml:space="preserve">
          <source>Dont compact values, display the raw number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5260e1ceffcaff5a7c3bbef5ab046e76679fcab1" translate="yes" xml:space="preserve">
          <source>Drag a graph to the position you want, and drop it &lt;em&gt;before the &amp;ldquo;Drop to Merge&amp;rdquo; message shows.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9a4ef9541a52b04bdae6d6450272f3fc10595e" translate="yes" xml:space="preserve">
          <source>Draw the selected metrics with a dotted line with segments of length F If omitted, the default length of the segments is 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9cad1ac554529050cfe40233de6fd46ecb6ccc" translate="yes" xml:space="preserve">
          <source>Draw the selected metrics with a line width of F, overriding the default value of 1, or the &amp;amp;lineWidth=X.X parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cea547a869e3b6dba62059baec6184d693f3373" translate="yes" xml:space="preserve">
          <source>Draws a 0 line when server metric does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b5114ae5336c6c0f2caacc285ba5ea7f7fe0af" translate="yes" xml:space="preserve">
          <source>Draws a horizontal line at value F across the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f7bf42c7f119a97a2358d42055f2360884fcae" translate="yes" xml:space="preserve">
          <source>Draws a horizontal line representing the number of nodes found in the seriesList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9777d859a050e7cccd1499ecc55d94bb80d8414" translate="yes" xml:space="preserve">
          <source>Draws a vertical line at the designated timestamp with optional &amp;lsquo;label&amp;rsquo; and &amp;lsquo;color&amp;rsquo;. Supported timestamp formats include both relative (e.g. -3h) and absolute (e.g. 16:00_20110501) strings, such as those used with &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt; parameters. When set, the &amp;lsquo;label&amp;rsquo; will appear in the graph legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a594a3b10b8499d82580b9790ba9bca73bf58e" translate="yes" xml:space="preserve">
          <source>Draws only live servers with not empty data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5636d86946fecffec702bf7dfc9f95dcbcd34f0" translate="yes" xml:space="preserve">
          <source>Draws only the first 5 instance&amp;rsquo;s memory free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfefeadf05757cd8e66a4f1b9e2a70263179ff2" translate="yes" xml:space="preserve">
          <source>Draws servers with low disk space, and servers with highly deviant disk space, but never the same series twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04193c56c3d4b4824bfbb048d354a1ac9e83416" translate="yes" xml:space="preserve">
          <source>Draws the 5 instances furthest from the average memory free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa9dd1b391ee33b13d59a32a19d32799dea8f96" translate="yes" xml:space="preserve">
          <source>Draws the 5 servers with the highest busy threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef82d223e96c13adc53ddc5ee099383f1b4c1c0b" translate="yes" xml:space="preserve">
          <source>Draws the 5 servers with the highest number of busy threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a2cad1e0df36166fc39175ce6f442b6c7ad84c" translate="yes" xml:space="preserve">
          <source>Draws the 5 servers with the least busy threads right now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0019db6c1fff50d3858868f06f6ad65f2b1e7e9" translate="yes" xml:space="preserve">
          <source>Draws the 5 servers with the lowest number of busy threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e9328d3efa895fbc44a93a2588ced219595541" translate="yes" xml:space="preserve">
          <source>Draws the bottom 5 servers with the lowest average value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e574f1f95cc4aff3caf1d7aecf639a6d8e108fb3" translate="yes" xml:space="preserve">
          <source>Draws the selected metrics shifted in time. If no sign is given, a minus sign ( - ) is implied which will shift the metric back in time. If a plus sign ( + ) is given, the metric will be shifted forward in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c531c16f350b84df8f124e7b9ae3caac31a1ed07" translate="yes" xml:space="preserve">
          <source>Draws the servers in ascending order by maximum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6344ca307f6fcbc9cdd8351de5192c92b2a659e8" translate="yes" xml:space="preserve">
          <source>Draws the servers with average values above 25.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273abd5063892ab4efb3e3c3a7cc6d19f163d667" translate="yes" xml:space="preserve">
          <source>Draws the servers with average values below 25.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f752a335ea43cc7f56d465b89cbbefc894e020e8" translate="yes" xml:space="preserve">
          <source>Draws the servers with less than 3 busy threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a8c60f71d089fb7dd805f51bd23ec13b21fd27" translate="yes" xml:space="preserve">
          <source>Draws the servers with more than 50 busy threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc2b7c73bc67466cfc308a4e8df30889cf15f40" translate="yes" xml:space="preserve">
          <source>Draws the top 5 servers who have had the most busy threads during the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654ed3f87153a165ba2e27ab43ef63411489222d" translate="yes" xml:space="preserve">
          <source>Draws the top 5 servers with the highest average value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471c5834466a895d670ca92e6c374cc100517b1f" translate="yes" xml:space="preserve">
          <source>Draws the vertical area in between the two series in seriesList. Useful for visualizing a range such as the minimum and maximum latency for a service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02715fdc85c91980f1e9234b5eeea6240cace077" translate="yes" xml:space="preserve">
          <source>During a rebalance of a consistent hash cluster, after a partition event on a replication &amp;gt; 1 cluster or in other cases we might receive multiple TimeSeries data for a metric key. Merge them together rather than choosing the &amp;ldquo;most complete&amp;rdquo; one (pre-0.9.14 behaviour).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395595bce832e07dbc21883b50f5632909b33ac1" translate="yes" xml:space="preserve">
          <source>During the write of a data point, Whisper stores the same data in all archives at once (see &lt;a href=&quot;#multi-archive-storage-and-retrieval-behavior&quot;&gt;Multi-Archive Storage and Retrieval Behavior&lt;/a&gt;). Implied by this behavior is that all archives store from now until each of their retention times. Because of this, lower-resolution archives should be configured to significantly lower resolution and higher retentions than their higher-resolution counterparts so as to reduce the overlap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db13aa08e06f68b46f6d3819cdb45cae2b882d0" translate="yes" xml:space="preserve">
          <source>Dusk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35b6128fd74de7f412e894b9c320bddb4720498" translate="yes" xml:space="preserve">
          <source>EMAIL_BACKEND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bd5868f8936462d46e3fbce9a4d5dd2cad014c" translate="yes" xml:space="preserve">
          <source>EMAIL_HOST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9db0f4a063c1fe8f994e2f0d6be360c2b124c1f" translate="yes" xml:space="preserve">
          <source>EMAIL_HOST_PASSWORD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feac628e5e2afc613a8a7e662aeeee4562f9a08b" translate="yes" xml:space="preserve">
          <source>EMAIL_HOST_USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6505779817c5c9a237f0fb241bf10a01e4c8a3" translate="yes" xml:space="preserve">
          <source>EMAIL_PORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2421eacb7e766d1da21efc85ea4fde3ee2e57540" translate="yes" xml:space="preserve">
          <source>EMAIL_USE_TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ab100d797048567f3ca14473e652bb4ff3d11e" translate="yes" xml:space="preserve">
          <source>Each exposed function must accept at least a &lt;code&gt;requestContext&lt;/code&gt; and &lt;code&gt;seriesList&lt;/code&gt; parameter, and may accept additional parameters as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8df9866d49fab08e66fe2284d362a27aa42977" translate="yes" xml:space="preserve">
          <source>Each function can have a docstring, &lt;code&gt;.group&lt;/code&gt;, and &lt;code&gt;.params&lt;/code&gt; attributes defined, these are used in the function API output as hints for query builders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a74d226ed9be09d2529a8397c8ddef8b27cf4e3" translate="yes" xml:space="preserve">
          <source>Each node may be an integer referencing a node in the series name or a string identifying a tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f4ec063763e090ac9745ee9b76fad04ca21b47" translate="yes" xml:space="preserve">
          <source>Each of the items in this menu matches a graph parameter in the &lt;a href=&quot;render_api&quot;&gt;The Render URL API&lt;/a&gt;. For further information, read the documentation for the appropriate parameter on that page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88b9af01392ac1595220feb6ab253833598563b" translate="yes" xml:space="preserve">
          <source>Each of these endpoints accepts an optional list of tag expressions using the same syntax as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbf8fc1c50791af5df4827b140d3eaeec742835" translate="yes" xml:space="preserve">
          <source>Each parameter definition is &lt;code&gt;Param&lt;/code&gt; object, the &lt;code&gt;Param&lt;/code&gt; constructor accepts the following arguments (note that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7fac3336fba9013fa9470c7343718c4188c03f" translate="yes" xml:space="preserve">
          <source>Each path component should have a clear and well-defined purpose. Volatile path components should be kept as deep into the hierarchy as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c944afebf24ba8308a12bb1aa71a866572196ab" translate="yes" xml:space="preserve">
          <source>Each time you run ifconfig, the RX and TXPackets are higher (assuming there is network traffic.) By applying the derivative function, you can get an idea of the packets per minute sent or received, even though you&amp;rsquo;re only recording the total.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be753a1a48a30b57e2f22ecd44220928f70b9e4a" translate="yes" xml:space="preserve">
          <source>Each time you run ifconfig, the RX and TXPackets are higher (assuming there is network traffic.) By applying the perSecond function, you can get an idea of the packets per second sent or received, even though you&amp;rsquo;re only recording the total.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06591a22b104476c3dff17be759a4004c35488c3" translate="yes" xml:space="preserve">
          <source>Editing, Importing and Exporting via JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5814705ab844c6694bb50746eefeb80d0fa474" translate="yes" xml:space="preserve">
          <source>Email Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d2c4a3ca83ebcb7820e3904e0e3674e2264d7e" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;graphite.ini&lt;/code&gt; and restart uWSGI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0d7b5b088909585d44704a1d9ca22ae27f36fc" translate="yes" xml:space="preserve">
          <source>Enable remote rendering of images and data (JSON, et al.) on remote Graphite webapps. If this is enabled, &lt;code&gt;RENDERING_HOSTS&lt;/code&gt; must also be enabled and configured accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf96cea3e00531b46b676b3c87afe739a55b44a" translate="yes" xml:space="preserve">
          <source>Enable the vhost and restart nginx:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d535f21bf6865a5e65407aee1f346c798ff293" translate="yes" xml:space="preserve">
          <source>Enable this configuration for nginx:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529e11ffed093d600ac80bce209d7196668b967a" translate="yes" xml:space="preserve">
          <source>Enables filling of the area below the graphed lines. Fill area is the same color as the line color associated with it. See &lt;a href=&quot;#areaalpha&quot;&gt;areaAlpha&lt;/a&gt; to make this area transparent. Takes one of the following parameters which determines the fill mode to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f1e740b82f302af4221b0001e28f79d262905e" translate="yes" xml:space="preserve">
          <source>Enables generation of detailed Django error pages. See &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/settings/#debug&quot;&gt;Django&amp;rsquo;s documentation&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23070911542632a915aa469e390ace5158699d4" translate="yes" xml:space="preserve">
          <source>Enables the use of an alternative remote authentication backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2cf27082ca66a3d22deecd5a60f5524cd2508f" translate="yes" xml:space="preserve">
          <source>Enables the use of an alternative remote authentication middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e23a7a5d3f86c95fe2c5e08bfecc06dbc71dfc9" translate="yes" xml:space="preserve">
          <source>Enables the use of the Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803fa93f58af052b8c0a39790abe4d056814dd21" translate="yes" xml:space="preserve">
          <source>Enhanced C implementation of Carbon relay, aggregator and rewriter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9ec1234faec3e67cce50b86f7d15a7fa788515" translate="yes" xml:space="preserve">
          <source>Ensure &lt;a href=&quot;http://gunicorn.org/&quot;&gt;Gunicorn&lt;/a&gt; is installed in the activated virtualenv and execute as normal. If gunicorn is installed system-wide, it may be necessary to execute it from the virtualenv&amp;rsquo;s bin path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3b0552cf3781402111d8fedc8a54ba3085bc44" translate="yes" xml:space="preserve">
          <source>Estimate hit counts from a list of time series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb807b9486474917c7ddc580d301b41d160e5cfe" translate="yes" xml:space="preserve">
          <source>Evenflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4bd75900d1c0953cc562d6be1161499b8a7320" translate="yes" xml:space="preserve">
          <source>Events can be managed using the Graphite &lt;a href=&quot;admin-webapp&quot;&gt;administration module&lt;/a&gt;. This is particularly handy for deleting a large number of events at once, although it also supports adding and editing individual events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27da6d6952d461bd19463c1c26deb5e33e45845" translate="yes" xml:space="preserve">
          <source>Events can be submitted via HTTP POST using command-line tools such as &lt;code&gt;curl&lt;/code&gt; or with a variety of HTTP programming libraries. The JSON format is simple and predictable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0825585373a508fec43593d8e8e94b0098ddba82" translate="yes" xml:space="preserve">
          <source>Events require Graphite webapp version 0.9.9 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0887c22f70eaf99706fc871a2a514d7869c2e1" translate="yes" xml:space="preserve">
          <source>Every series stored in Graphite has a unique identifier, which is composed of a metric name and optionally a set of tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d29291c04fff2825a452dd68acaf262187dd782" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;servers.ix*ehssvc*v.cpu.total.*&lt;/code&gt; will return all total CPU metrics for all servers matching the given name pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc6c9c38e4c0bfcb564da16707881dd7e42bda3" translate="yes" xml:space="preserve">
          <source>Example: You store the number of sales per minute for 1 year, and the sales per hour for 5 years after that. You need to know the total sales for January 1st of the year before. You can query whisper for the raw data, and you&amp;rsquo;ll get 24 datapoints, one for each hour. They will most likely be floating point numbers. You can take each datapoint, multiply by 60 (the ratio of high-precision to low-precision datapoints) and still get the total sales per hour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccc345e2943f1444cfe632260448cc788669d14" translate="yes" xml:space="preserve">
          <source>Examples of data appropriate for this storage format include releases, commits, application exceptions, and state changes where you may wish to track or correlate the event with traditional time-series activity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696044a9fc2826973d35f3c22afe6c09257fd6d2" translate="yes" xml:space="preserve">
          <source>Execute &lt;a href=&quot;http://projects.unbit.it/uwsgi&quot;&gt;uWSGI&lt;/a&gt; using the &lt;code&gt;-H&lt;/code&gt; option to specify the virtualenv root. See the &lt;a href=&quot;http://projects.unbit.it/uwsgi/wiki/VirtualEnv&quot;&gt;uWSGI documentation on virtualenv&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eff753fd4bd91001497dc59c95db8cc44c2efa" translate="yes" xml:space="preserve">
          <source>Existing graphs can be imported into your dashboard, either from URLs or from saved graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3020278b5f357405684c2ecc658cdb797274e919" translate="yes" xml:space="preserve">
          <source>Existing tools and APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a199dd1ab0b8bac351f1bc2875ab2e5848e33267" translate="yes" xml:space="preserve">
          <source>Expected features such as roll-up aggregation and data expiration are not provided by Ceres itself, but instead are implemented as maintenance plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d404f1e5fe4885cfe4de4d88efbe4cdeaed0dc97" translate="yes" xml:space="preserve">
          <source>Exploring Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f45518fea13abd2b6702d41fddf7458e4bf4fd2" translate="yes" xml:space="preserve">
          <source>FETCH_TIMEOUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd497c6c15a82eef006c50addf7c76e8d3ff883e" translate="yes" xml:space="preserve">
          <source>FIND_CACHE_DURATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2717926513be8bde380a312ced9c4e29539eddbf" translate="yes" xml:space="preserve">
          <source>FIND_TIMEOUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8258da7aa95b82b657f30c6200e1c09323d3057a" translate="yes" xml:space="preserve">
          <source>FIND_TOLERANCE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eda8f6d21d5d537f4cd3d150386a31c6ff3143" translate="yes" xml:space="preserve">
          <source>FLUSHRRDCACHED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64120f4b11bbfedc4fc05367084385a431b206be" translate="yes" xml:space="preserve">
          <source>Fast carbon relay+aggregator with admin interfaces for making changes online - production ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946da64a6a905b4027e7355710b8e42d67628aa5" translate="yes" xml:space="preserve">
          <source>Feeding In Your Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c279a98d3d7644c88fd2e0ad96b93d89b5cec58" translate="yes" xml:space="preserve">
          <source>Filesystem Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb58731ee5c1e6d1700fac38dfaded3dc8a80da" translate="yes" xml:space="preserve">
          <source>Fills the area under the first target and no other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6f7a4e9fd3abf021a6ed08574c0d0e7fd92dba" translate="yes" xml:space="preserve">
          <source>Fills the areas under each target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc93e18d7dcf5cab94ebfaaa395ee4e3f3b0be7a" translate="yes" xml:space="preserve">
          <source>Finally, Carbon can listen to a message bus, via AMQP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f0e3babfb612fe81277b554658746816779a72" translate="yes" xml:space="preserve">
          <source>Finally, configure the apache vhost. (You can find example of Graphite vhost configuration in the &lt;a href=&quot;https://github.com/graphite-project/graphite-web/blob/master/examples/example-graphite-vhost.conf&quot;&gt;contrib&lt;/a&gt; directory of source ditribution):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4408ab01267bdf47bf6eecb9ee99e17294d31d20" translate="yes" xml:space="preserve">
          <source>Finally, configure the nginx vhost:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6365349768e5eb264dd2a8f535be9971ef3fb0" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;a href=&quot;functions#graphite.render.functions.aliasByTags&quot;&gt;aliasByTags&lt;/a&gt; function is used to help format series names for display. It is the tag-based equivalent of the &lt;a href=&quot;functions#graphite.render.functions.aliasByNode&quot;&gt;aliasByNode&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b29d6cbc9844d787bf53b348675e8d4f7a7f8b3" translate="yes" xml:space="preserve">
          <source>Finally, to search for series matching a set of tag expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c508cfbe6c6cc34f246a882312e1836cddde3bd0" translate="yes" xml:space="preserve">
          <source>Firefly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d826fe164ed584205cc6bba40a3e3af459c37e5e" translate="yes" xml:space="preserve">
          <source>First, keep in mind that Graphite-web supports Python versions &lt;strong&gt;2.6 to 2.7&lt;/strong&gt; and Django versions &lt;strong&gt;1.4 and above&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9765fc51b715e09f6d9f58a2b51734aa21f0df" translate="yes" xml:space="preserve">
          <source>First, you need to install mod_wsgi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8221e826bd119571045536dae61031820434b14c" translate="yes" xml:space="preserve">
          <source>First, you need to install uWSGI with Python support. On Debian, install &lt;code&gt;uwsgi-plugin-python&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bd871a4a5ef52f30a3936c4a678bf8dcd7e53e" translate="yes" xml:space="preserve">
          <source>For Nginx:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3405b38610e1cfe72a2d439eea4ca28fbd37840f" translate="yes" xml:space="preserve">
          <source>For a singular script, or for test data, the plaintext protocol is the most straightforward method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486c8573c6bda9bea8697f82b56e45c571b7dc65" translate="yes" xml:space="preserve">
          <source>For detailed instructions, please refer to the official project documentation on the &lt;a href=&quot;https://github.com/obfuscurity/synthesize/&quot;&gt;Synthesize&lt;/a&gt; website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7572b3ea5e015a5c2a9743e46827060f1d8c6d63" translate="yes" xml:space="preserve">
          <source>For details of implementing your schema, see the &lt;a href=&quot;config-carbon&quot;&gt;Configuring Carbon&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd0fe43fb3d617337973cbea45559a41f98b51c" translate="yes" xml:space="preserve">
          <source>For example, Ubuntu uses &lt;code&gt;/etc/apache2/sites-available&lt;/code&gt; and &lt;code&gt;sites-enabled/&lt;/code&gt; to handle this (A symlink from &lt;code&gt;sites-enabled/&lt;/code&gt; to &lt;code&gt;sites-available/&lt;/code&gt; would be used after placing the file in sites-available/).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36407773af0eed276fec57334b0a2da81262cb9" translate="yes" xml:space="preserve">
          <source>For example, if your metric naming scheme is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd05dc98dfba4e45c502e6e2efc83e590304330" translate="yes" xml:space="preserve">
          <source>For example, to install everything in &lt;code&gt;/srv/graphite/&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2ddc66c4f25fb52a8c4f15c908ab16530a2415" translate="yes" xml:space="preserve">
          <source>For power users wanting to perform a large scale re-ordering of graphs in a dashboard, consider using &lt;a href=&quot;#editing-importing-and-exporting-via-json&quot;&gt;Editing, Importing and Exporting via JSON&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d7391ea8947c7100605232426e7f05deae3299" translate="yes" xml:space="preserve">
          <source>For sending large amounts of data, you&amp;rsquo;ll want to batch this data up and send it to Carbon&amp;rsquo;s pickle receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d735aafe3953821674bcc047eed0a464f448083f" translate="yes" xml:space="preserve">
          <source>Forwarding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcf764fd4d7cf0fb4c291dbdbfcbb134d3e3b70" translate="yes" xml:space="preserve">
          <source>Frequencies and histories are specified using the following suffixes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb070fcf7b9a05bfff3beec7cdb4ce3c1d27c09" translate="yes" xml:space="preserve">
          <source>From a CPU perspective, Graphite scales horizontally on both the frontend and the backend, meaning you can simply add more machines to the mix to get more throughput. It is also fault tolerant in the sense that losing a backend machine will cause a minimal amount of data loss (whatever that machine had cached in memory) and will not disrupt the system if you have sufficient capacity remaining to handle the load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dfb0aff6a9c39ccf0252056abfdea1ebbabcc0" translate="yes" xml:space="preserve">
          <source>From an I/O perspective, under load Graphite performs lots of tiny I/O operations on lots of different files very rapidly. This is because each distinct metric sent to Graphite is stored in its own database file, similar to how many tools (drraw, Cacti, Centreon, etc) built on top of RRD work. In fact, Graphite originally did use RRD for storage until fundamental limitations arose that required a new storage engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5c69460d3c7c71d51770590e6eb0f5b05fb0ec" translate="yes" xml:space="preserve">
          <source>From the release of the 1.1.x series, Graphite supports storing data using tags to identify each series. This allows for much more flexibility than the traditional hierarchical layout. When using tag support, each series is uniquely identified by its name and set of tag/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95e89eef81e2079d4609d922a517e53472e580e" translate="yes" xml:space="preserve">
          <source>Fulfilling Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3804664ebec11896daaa0253c81d34d0e6ca0381" translate="yes" xml:space="preserve">
          <source>Fully featured graphite remote adapter for &lt;a href=&quot;https://github.com/prometheus/prometheus&quot;&gt;Prometheus&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4dd58ce086d6ce00e430f2796c438e457abd52" translate="yes" xml:space="preserve">
          <source>Function API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fff0b26e57137c5f52729a03811dced0e07a1c" translate="yes" xml:space="preserve">
          <source>Function Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c86fa4a446f919be8e12f02138128b0d79501d" translate="yes" xml:space="preserve">
          <source>Function plugins can define additional functions for use in render calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f05c5d08b53c2498e0fc2250b4e94bab56a28f4" translate="yes" xml:space="preserve">
          <source>Functions are used to transform, combine, and perform computations on &lt;a href=&quot;terminology#term-series&quot;&gt;series&lt;/a&gt; data. Functions are applied using the Composer interface or by manipulating the &lt;code&gt;target&lt;/code&gt; parameters in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d286782f21f61f46c87dd617fe53201e05019d90" translate="yes" xml:space="preserve">
          <source>Functions that calculate a new metric series based on an existing metric series. Includes moving average, percentage, Holt-Winters forecast, ratio and difference (of 2 metrics)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2daaf88a0d7880805ae0f848a446f65d97f39f8" translate="yes" xml:space="preserve">
          <source>Functions that combine a group of metric series (returned by a path containing wildcards) into a single series (and therefore a single line). Includes sum, average, product, minimum, maximum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c6c6b16d88a4d4d772dd42cc13fc62ea422948" translate="yes" xml:space="preserve">
          <source>Functions that control how the metric series are drawn on the graph. Includes line colors/widths/styles, drawing stacked, drawing on the second Y-axis, and setting the legend name either directly or from the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852a56364484977357d9f4943200348dda45964f" translate="yes" xml:space="preserve">
          <source>Functions that filter metric series from a group. Includes highest current value, current value above limit, most deviant, remove below percentile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68e71b00f48ba73dbba50bee0fc32b844e4a9e8" translate="yes" xml:space="preserve">
          <source>Functions that transform the values in a metric series, against either the Y-axis or (less commonly) the X-axis. Includes scale, scale to seconds, offset, derivative, integral, time-shift, log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ac66c1dc3cb0bddfa7c94ccc94841f4c3166f1" translate="yes" xml:space="preserve">
          <source>GRAPHITE_ROOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d45cad8262ebd31480f3ef6c1f14d8ca7c75c1" translate="yes" xml:space="preserve">
          <source>GRAPHITE_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a3e676009322f747210ae87a17f02eeaca6766" translate="yes" xml:space="preserve">
          <source>GRAPHTEMPLATES_CONF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c682ceeacadb68101cf54c1ac499a56f999e34de" translate="yes" xml:space="preserve">
          <source>Ganglia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0045dd93488021df7f61b354cccdcf9fb426acc" translate="yes" xml:space="preserve">
          <source>Gaps in data are handled in Ceres by padding slices with null datapoints. If the slice gap however is too big, then a new slice is instead created. If a Ceres node accumulates too many slices, read performance can suffer. This can be caused by intermittently reported data. To mitigate slice fragmentation there is a tolerance for how much space can be wasted within a slice file to avoid creating a new one. That tolerance level is determined by &lt;code&gt;'MAX_SLICE_GAP'&lt;/code&gt;, which is the number of consecutive null datapoints allowed in a slice file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d6d97d68ce112dc56bbbefb1aabf92dd48861b" translate="yes" xml:space="preserve">
          <source>Gdash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71dd223f6b38a8b983e4066aae39ce5cdce9265a" translate="yes" xml:space="preserve">
          <source>General Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e51f8bde703405a9b1d6e81cb5b98f7b51c17d" translate="yes" xml:space="preserve">
          <source>Get your graphite data into &lt;a href=&quot;https://newrelic.com/platform&quot;&gt;New Relic&lt;/a&gt; via a New Relic Platform plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443a310182e0c7f6ec6b57ef8a9361b4b47ad45f" translate="yes" xml:space="preserve">
          <source>Getting Started with the Dashboard Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50bb2ae1d9d4db6a1fed826280df6274a4d4f5d" translate="yes" xml:space="preserve">
          <source>Getting Your Data Into Graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b53c103ba3ab48eb606fb1d3371fbb6cc2f9400" translate="yes" xml:space="preserve">
          <source>Getting your data into Graphite is very flexible. There are three main methods for sending data to Graphite: Plaintext, Pickle, and AMQP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dd942bcb5bc262860fbe4e87d853366ad8db17" translate="yes" xml:space="preserve">
          <source>Giraffe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52e178c0a22bb1c2a1bacacfc621111288456a2" translate="yes" xml:space="preserve">
          <source>Given keys of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c454d5051e886ef028926133f588e784334d76" translate="yes" xml:space="preserve">
          <source>Go implementation of useful tools for dealing with Graphite&amp;rsquo;s Whisper DBs and Carbon hashing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba57d62292ae147640aa534815403000a3185344" translate="yes" xml:space="preserve">
          <source>Golang implementation of Graphite/Carbon server with classic architecture: Agent -&amp;gt; Cache -&amp;gt; Persister.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe5da1f43308a5f67539612b002f7898a686bbc" translate="yes" xml:space="preserve">
          <source>Grafana</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bcae9a22f7951490495a184fe5a4bc834a7fde" translate="yes" xml:space="preserve">
          <source>Grafsy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7ceb21656c5d9bed48e13663383f37d0548605" translate="yes" xml:space="preserve">
          <source>Graph Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218e0261003380dd1b3816722e70425d22742c8e" translate="yes" xml:space="preserve">
          <source>Graph the series on the secondary Y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161ff9591e14378a9de630718079706d4c352f6f" translate="yes" xml:space="preserve">
          <source>Graph-Explorer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8daf310300dc6d5cbb870024281d9e4fbf6d01" translate="yes" xml:space="preserve">
          <source>Graph-Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8507b79695d14c2c125a10f233e95e4faef29c84" translate="yes" xml:space="preserve">
          <source>Graphene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baebdbbd0d5176fc6927df3fb004ca14c8465f3" translate="yes" xml:space="preserve">
          <source>Graphing Metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4381d13ed2befc75ffc9258447394e4408f88e06" translate="yes" xml:space="preserve">
          <source>Graphios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220c98deb1482e5b5361b123b929ee8e4ac1e18d" translate="yes" xml:space="preserve">
          <source>Graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930e90f315379e86779008beb41deaaa929d9d16" translate="yes" xml:space="preserve">
          <source>Graphite &lt;a href=&quot;https://influxdb.com/&quot;&gt;InfluxDB&lt;/a&gt; backend. &lt;a href=&quot;https://influxdb.com/&quot;&gt;InfluxDB&lt;/a&gt; storage finder / plugin for Graphite API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9e0d88357521af70b4f499972b037d16963c93" translate="yes" xml:space="preserve">
          <source>Graphite Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6801807882a9ee7789a006b189f65d0153e4895c" translate="yes" xml:space="preserve">
          <source>Graphite Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a2d81ee99d778009051912b982aede7d90a507" translate="yes" xml:space="preserve">
          <source>Graphite PowerShell Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a703d5457e762d61e13fb9afaaf2fb7a14e402" translate="yes" xml:space="preserve">
          <source>Graphite Tag Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02437ad25d0399538ca0f9084259d3340ab16620" translate="yes" xml:space="preserve">
          <source>Graphite Terminology</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3038a305061bdf4383d62c746f10582db00e661d" translate="yes" xml:space="preserve">
          <source>Graphite allows you to query for tags associated with events. You can search for a single tag string, a combination of space-delimited tags, or a simple &lt;code&gt;*&lt;/code&gt; wildcard using the &lt;a href=&quot;functions#graphite.render.functions.events&quot;&gt;events&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fae4a5974fb8fcf0b9ba074654aa07f2516183" translate="yes" xml:space="preserve">
          <source>Graphite allows you to set a time range as relative or absolute. Relative time ranges are most commonly used. The same time range is applied to every graph on the dashboard, and the current time range is shown in the center of the menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60441335c295f289b2e8102b56ff7f199f4d66d8" translate="yes" xml:space="preserve">
          <source>Graphite also supports &lt;a href=&quot;storage-backends&quot;&gt;alternative storage backends&lt;/a&gt; which can greatly change these characteristics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bec518d2165a4a4b070c49b08af5282ec2f347e" translate="yes" xml:space="preserve">
          <source>Graphite can also read directly from &lt;a href=&quot;http://collectd.org&quot;&gt;collectd&lt;/a&gt;&amp;rsquo;s RRD files. RRD files can simply be added to &lt;code&gt;STORAGE_DIR/rrd&lt;/code&gt; (as long as directory names and files do not contain any &lt;code&gt;.&lt;/code&gt; characters). For example, collectd&amp;rsquo;s &lt;code&gt;host.name/load/load.rrd&lt;/code&gt; can be symlinked to &lt;code&gt;rrd/collectd/host_name/load/load.rrd&lt;/code&gt; to graph &lt;code&gt;collectd.host_name.load.load.{short,mid,long}term&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b254091e9fbb55211737653abbb5878143cbf89" translate="yes" xml:space="preserve">
          <source>Graphite consists of 3 software components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11dbd3994faccb2e92befb13fa7fade8204706af" translate="yes" xml:space="preserve">
          <source>Graphite defaults to an installation layout that puts the entire install in its own directory: &lt;code&gt;/opt/graphite&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efedb17c080acf5e9c785e5852a4fb7eabe5fba" translate="yes" xml:space="preserve">
          <source>Graphite does two things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989c25093b0f3931e3c9ea8714d605afef55a41f" translate="yes" xml:space="preserve">
          <source>Graphite is a highly scalable real-time graphing system. As a user, you write an application that collects numeric time-series data that you are interested in graphing, and send it to Graphite&amp;rsquo;s processing backend, &lt;a href=&quot;carbon-daemons&quot;&gt;carbon&lt;/a&gt;, which stores the data in Graphite&amp;rsquo;s specialized database. The data can then be visualized through graphite&amp;rsquo;s web interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af92906cb414d45be76fd236491ab8a3d3280311" translate="yes" xml:space="preserve">
          <source>Graphite is an enterprise-scale monitoring tool that runs well on cheap hardware. It was originally designed and written by &lt;a href=&quot;mailto:chrismd%40gmail.com&quot;&gt;Chris Davis&lt;/a&gt; at &lt;a href=&quot;http://www.orbitz.com/&quot;&gt;Orbitz&lt;/a&gt; in 2006 as side project that ultimately grew to be a foundational monitoring tool. In 2008, Orbitz allowed Graphite to be released under the open source Apache 2.0 license. Since then Chris has continued to work on Graphite and has deployed it at other companies including &lt;a href=&quot;http://www.sears.com/&quot;&gt;Sears&lt;/a&gt;, where it serves as a pillar of the e-commerce monitoring system. Today many large &lt;a href=&quot;https://graphite.readthedocs.io/en/latest/who-is-using.html&quot;&gt;companies&lt;/a&gt; use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c303e7aa31dc746e72ab15ee7e8440a843b7c7" translate="yes" xml:space="preserve">
          <source>Graphite is built on fixed-size databases (see &lt;a href=&quot;whisper&quot;&gt;Whisper.&lt;/a&gt;) so we have to configure in advance how much data we intend to store and at what level of precision. For instance you could store your data with 1-minute precision (meaning you will have one data point for each minute) for say 2 hours. Additionally you could store your data with 10-minute precision for 2 weeks, etc. The idea is that the storage cost is determined by the number of data points you want to store, the less fine your precision, the more time you can cover with fewer points. To determine the best retention configuration, you must answer all of the following questions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6320d3cd9caab1e19b1761c14921019018745f3" translate="yes" xml:space="preserve">
          <source>Graphite is currently developed by a team of volunteers under the &lt;a href=&quot;https://github.com/graphite-project/&quot;&gt;Graphite-Project&lt;/a&gt; GitHub Organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9b1e8a15e0a401fea7082ad7ca456bc741a13b" translate="yes" xml:space="preserve">
          <source>Graphite is useful if you have some numeric values that change over time and you want to graph them. Basically you write a program to collect these numeric values which then sends them to graphite&amp;rsquo;s backend, Carbon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64fbcd27c453324b3eebe0501820835dbfc8eae" translate="yes" xml:space="preserve">
          <source>Graphite is well known for storing simple key/value metrics using the Whisper time-series database on-disk format. What is not well known about Graphite is that it also ships with a feature known as &lt;strong&gt;Events&lt;/strong&gt; that supports a richer form of metrics storage suitable for irregular events often associated with metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17328dcdd840dc884820985f5c5d19875dd54fe5" translate="yes" xml:space="preserve">
          <source>Graphite metrics receiver with &lt;a href=&quot;https://clickhouse.yandex&quot;&gt;ClickHouse&lt;/a&gt; as storage. You will also need &lt;a href=&quot;https://github.com/lomik/graphite-clickhouse&quot;&gt;graphite-clickhouse&lt;/a&gt; as backend for Graphite-web.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84de9581d2059b1f5f25adc058380c66a238aae8" translate="yes" xml:space="preserve">
          <source>Graphite renders graphs using the Cairo graphics library. This adds dependencies on several graphics-related libraries not typically found on a server. If you&amp;rsquo;re installing from source you can use the &lt;code&gt;check-dependencies.py&lt;/code&gt; script to see if the dependencies have been met or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e77b50e80efcb7312932aec5314b2e0a2b3bc5" translate="yes" xml:space="preserve">
          <source>Graphite understands messages with this format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a7aab67e96e376fe8caf99a65a65b3d22370a4" translate="yes" xml:space="preserve">
          <source>Graphite uses Django Tagging to support tags in Events. By default each tag is limited to 50 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4191a78ab659cdf78c7ea3d3a4c1f3bb6eef9f" translate="yes" xml:space="preserve">
          <source>Graphite uses many terms that can have ambiguous meaning. The following definitions are what these terms mean in the context of Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f62495c003621f1f3c5aa58adf8bcb66ed81a7" translate="yes" xml:space="preserve">
          <source>Graphite was initially developed by &lt;a href=&quot;mailto:chrismd%40gmail.com&quot;&gt;Chris Davis&lt;/a&gt; at &lt;a href=&quot;http://www.orbitz.com/&quot;&gt;Orbitz&lt;/a&gt;. Orbitz has long been a part of the open source community and has published several other internally developed products.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0251638003ea559120048acfce9d8afbc4f7263f" translate="yes" xml:space="preserve">
          <source>Graphite was internally developed by &lt;a href=&quot;http://www.orbitz.com/&quot;&gt;Orbitz&lt;/a&gt; where it is used to visualize a variety of operations-critical data including application metrics, database metrics, sales, etc. At the time of this writing, the production system at Orbitz can handle approximately 160,000 distinct metrics per minute running on two niagra-2 Sun servers on a very fast SAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929175645e3c8e2274bdddc23384293cd25bf4e6" translate="yes" xml:space="preserve">
          <source>Graphite will be in the DocumentRoot of your webserver, and will not allow you to access plain-HTML in subdirectories without addition configuration. You may want to edit the &lt;code&gt;example-graphite-vhost.conf&lt;/code&gt; file to change port numbers or use additional &lt;code&gt;&quot;SetHandler None&quot;&lt;/code&gt; directives to allow access to other directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb43b09256042f71f4e6424887420bf9443719d6" translate="yes" xml:space="preserve">
          <source>Graphite-Newrelic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec032e19dad940d86b4d6dcf218c92ced064a9bf" translate="yes" xml:space="preserve">
          <source>Graphite-Tattle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3701314ff0633a46c9a26e5a5ff65ecfdea627c9" translate="yes" xml:space="preserve">
          <source>Graphite-relay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e0738e3313e018ac12f5b04a24f99fe1251ab7" translate="yes" xml:space="preserve">
          <source>Graphite-web &lt;code&gt;PYTHONPATH&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9317f33e884f2c0011bc9f617cd7f463b2af8c3d" translate="yes" xml:space="preserve">
          <source>Graphite-web accepts contributions on &lt;a href=&quot;https://github.com/graphite-project/graphite-web&quot;&gt;GitHub&lt;/a&gt;, in the form of issues or pull requests. If you&amp;rsquo;re comfortable with Python, here is how to get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dfabac825a51a4b4b38a80988b51776634a9ad" translate="yes" xml:space="preserve">
          <source>Graphite-web backend with &lt;a href=&quot;https://clickhouse.yandex&quot;&gt;ClickHouse&lt;/a&gt; support. Please also see &lt;a href=&quot;https://github.com/lomik/carbon-clickhouse&quot;&gt;carbon-clickhouse&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decbb205c0f0c8f6f739386be4a28ff2a1e7f539" translate="yes" xml:space="preserve">
          <source>Graphite-web reading and graphing data from the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b0c42e44eab8f5bf6eb80d91fd4cfb9a72c7e4" translate="yes" xml:space="preserve">
          <source>Graphite-web static content directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0842e911199719a34499ef8d81e0db347c1372ba" translate="yes" xml:space="preserve">
          <source>Graphite-web uses the convention of importing a &lt;code&gt;local_settings.py&lt;/code&gt; file from the webapp &lt;code&gt;settings.py&lt;/code&gt; module. This is where Graphite-web&amp;rsquo;s runtime configuration is loaded from. Also alternate local settings module can be set (see below). This may be usable for multi-instance deployments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4265e2bd66626aa552fc0664513629026292ac" translate="yes" xml:space="preserve">
          <source>Graphite-web&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt; installer is configured to use a &lt;code&gt;prefix&lt;/code&gt; of &lt;code&gt;/opt/graphite&lt;/code&gt; and an &lt;code&gt;install-lib&lt;/code&gt; of &lt;code&gt;/opt/graphite/webapp&lt;/code&gt;. Utilities are installed in &lt;code&gt;bin&lt;/code&gt;, and configuration in &lt;code&gt;conf&lt;/code&gt; within the &lt;code&gt;prefix&lt;/code&gt;. These may be overridden by passing parameters to &lt;code&gt;setup.py install&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a961ac69b49a9369390cb4f52986de58258172" translate="yes" xml:space="preserve">
          <source>Graphite-web&amp;rsquo;s local_settings.py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580cd745e4c7a338ea9b28da9ef6e4258339cacb" translate="yes" xml:space="preserve">
          <source>Graphite-web: &lt;code&gt;git clone https://github.com/graphite-project/graphite-web.git&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a3d45efaf3d6cf1c0217e255f3eac4518e319e" translate="yes" xml:space="preserve">
          <source>Graphite-web’s local_settings.py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59688c458ae4a5b2635628c209498e76c0fd6cdb" translate="yes" xml:space="preserve">
          <source>Graphitejs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c0fe05cdcbeedd29a31bd2fe896177a84a7348" translate="yes" xml:space="preserve">
          <source>Graphiti</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815b3425665a502c2b56ea58497bedb13e6967f" translate="yes" xml:space="preserve">
          <source>Graphitoid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d8c5390043f059a0fd8ce6b279cef62ac1e4e6" translate="yes" xml:space="preserve">
          <source>Graphouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f8b01b2759f395dc5bf794c949dd46bd857e5b" translate="yes" xml:space="preserve">
          <source>Graphouse allows you to use &lt;a href=&quot;https://clickhouse.yandex&quot;&gt;ClickHouse&lt;/a&gt; as a Graphite storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d1eca5d377a3d8287e76648521cb673f65b283" translate="yes" xml:space="preserve">
          <source>Graphout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791f7c6289247ceb523ca49daa38bb891ad913c7" translate="yes" xml:space="preserve">
          <source>Graphs a moving window function of a metric (or metrics) over a fixed number of past points, or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e9842fc34a397fba3967441559989ddc37198d" translate="yes" xml:space="preserve">
          <source>Graphs the linear regression function by least squares method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac9b0d4b15c9c8b50fd65f258c948c1b2b6f55e" translate="yes" xml:space="preserve">
          <source>Graphs the moving average of a metric (or metrics) over a fixed number of past points, or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2213dea4607fb55704b760e16828163a980f3a9e" translate="yes" xml:space="preserve">
          <source>Graphs the moving maximum of a metric (or metrics) over a fixed number of past points, or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374492e2346e2f061893fa4a8b73e226c59b7f15" translate="yes" xml:space="preserve">
          <source>Graphs the moving median of a metric (or metrics) over a fixed number of past points, or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7090fd7ace4ac9f267a3912d5dc1cc81cc0e80fa" translate="yes" xml:space="preserve">
          <source>Graphs the moving minimum of a metric (or metrics) over a fixed number of past points, or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d261b71c8eab5f2436be41bf677d9ac190b25070" translate="yes" xml:space="preserve">
          <source>Graphs the moving sum of a metric (or metrics) over a fixed number of past points, or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632b48f5d0f42a1d5a25795bcc89fd3efbaf70a9" translate="yes" xml:space="preserve">
          <source>Graphsky</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62b33fcc2fdd576407df15915ab3046f5f146b8" translate="yes" xml:space="preserve">
          <source>Gregory Szorc&amp;rsquo;s python &lt;a href=&quot;https://github.com/indygreg/collectd-carbon&quot;&gt;collectd-carbon&lt;/a&gt; plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea32be1ecdc27e9c52f2fcaa764229e8cfba749" translate="yes" xml:space="preserve">
          <source>Grockets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34beb4d07a2ff78cbad14e8b60fb04d6707a9ee0" translate="yes" xml:space="preserve">
          <source>Gruffalo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd93c7d855d6c7d32aa7b74fbe15c55de7127ff7" translate="yes" xml:space="preserve">
          <source>Gunicorn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5d4b9117ba9e87388174aee4f4970bdfe8d066" translate="yes" xml:space="preserve">
          <source>HH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a607d1eb0e86b9cec574ca458bcc3a6b1592d" translate="yes" xml:space="preserve">
          <source>HTTP(S) TagDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df1427147ee127d8de6ea99b26365982955f912" translate="yes" xml:space="preserve">
          <source>Help! It didn&amp;rsquo;t work!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfc3bceee9dce9ea78f29afd454fb5d4422cb62" translate="yes" xml:space="preserve">
          <source>Help! It didn’t work!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff62ed0a350f28465bb88393b15b8683364ffe54" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more complicated example with multiple retention rates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d030d6a6ee541a6a5064463a427ef4e36989efd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple, single retention example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c52452744f1ca67bfeda1f158df752af0d50a5" translate="yes" xml:space="preserve">
          <source>High volume (a few thousand distinct metrics updating every minute) pretty much requires a good RAID array and/or SSDs. Graphite&amp;rsquo;s backend caches incoming data if the disks cannot keep up with the large number of small write operations that occur (each data point is only a few bytes, but most standard disks cannot do more than a few thousand I/O operations per second, even if they are tiny). When this occurs, Graphite&amp;rsquo;s database engine, whisper, allows carbon to write multiple data points at once, thus increasing overall throughput only at the cost of keeping excess data cached in memory until it can be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bc4f7e79ad54de0f2ba97308ef32fb89c3f4d6" translate="yes" xml:space="preserve">
          <source>Hint: If set to &lt;code&gt;false&lt;/code&gt; the &lt;code&gt;&amp;amp;height&lt;/code&gt; parameter may need to be increased to accommodate the additional text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890e08a458a0214656f9ad28fd7e7d452f400cba" translate="yes" xml:space="preserve">
          <source>HoardD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38e816f188eea193b257fde14ec49de20013763" translate="yes" xml:space="preserve">
          <source>Host sFlow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e25a34e635a123f8958bbe26e7c4843278597fb" translate="yes" xml:space="preserve">
          <source>Hours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfcbdc1d7eade31db61a1172552fa283c86dfaf" translate="yes" xml:space="preserve">
          <source>Hours, in 24h clock format. Times before 12PM must include leading zeroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3351c8efee5b47b9d230b39edaf7df15e0b35be2" translate="yes" xml:space="preserve">
          <source>How do I report problems or request features for Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3830e6c0a4fe54a3041f86f775fb51bb5b1975d9" translate="yes" xml:space="preserve">
          <source>How far back will you need to look at that level of precision?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa01a402ee5e9c0f06f859ddbec0e29cf8fa41f" translate="yes" xml:space="preserve">
          <source>How far back would you ever need to see data? (yes it has to be finite, and determined ahead of time)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50346eeba9d3a16b07b2a7fadbf31972f4b9e9da" translate="yes" xml:space="preserve">
          <source>How often can you produce your data?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1607d1a21fd0a26e6f4fd0b8c3e2b3851fd9b55" translate="yes" xml:space="preserve">
          <source>How real-time are the graphs?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b80608ab8be41979b7337d2a97a6446b2ee102" translate="yes" xml:space="preserve">
          <source>How scalable is Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6608d174a82fe60061995d5518345d0b1a7b74" translate="yes" xml:space="preserve">
          <source>However, taking advantage of this pattern typically requires the use of wildcards across a significant number of these singleton metric files and directories, which can cause a significant performance hit on the server and result in a poor experience for users. To accommodate this more sophisticated use case, Graphite&amp;rsquo;s webapp database was extended to support this new metric type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3389e215e43280815916f15e5ac5a9671ffba024" translate="yes" xml:space="preserve">
          <source>Hubot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0293258f7399c049e805bdaf7041312b1fb803e" translate="yes" xml:space="preserve">
          <source>INDEX_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d132a7c7f6f9f722e1eb41e2876119f1a5db58db" translate="yes" xml:space="preserve">
          <source>INTRACLUSTER_HTTPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bdae77f60d9065f6152c7e3bbd351fa65e6fab" translate="yes" xml:space="preserve">
          <source>Icinga</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c59713c067b5b3cad960fb1baddf9af17dd686" translate="yes" xml:space="preserve">
          <source>Icinga 2 will directly write metrics to the defined Graphite Carbon daemon tcp socket if the graphite feature is enabled. This feature is a more simple integration compared to Icinga 1.x and Graphios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a4c047e01392043d05a0187d2dfcb7c3ac0099" translate="yes" xml:space="preserve">
          <source>Identity function: Returns datapoints where the value equals the timestamp of the datapoint. Useful when you have another series where the value is a timestamp, and you want to compare it to the time of the datapoint, to render an age</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e16c55aa0c95bf15ddd8fcd0f5c4eadddf59e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;REMOTE_STORE_FORWARD_HEADERS&lt;/code&gt; is defined, those headers will also be forwarded to the remote TagDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb54c06c07c74a849bb16ff3cbf22665d51f308" translate="yes" xml:space="preserve">
          <source>If clients connecting to the &lt;code&gt;carbon-cache.py&lt;/code&gt; are experiencing errors such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507f2d2eb728a936effd1bc290455c8230063b1d" translate="yes" xml:space="preserve">
          <source>If defined it should return an auto-complete list of tags for series that match the specified expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4616e1a92300750160c718d157c53c30130ccdfc" translate="yes" xml:space="preserve">
          <source>If defined it should return an auto-complete list of values for the specified tag on series that match the specified expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1595104f6a38e212a759bd99d0b7004efc8b7351" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;xFilesFactor&lt;/code&gt; or &lt;code&gt;aggregationMethod&lt;/code&gt; is left out, the default value will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457282eb0bc5c76a25c7251c472183360e10744c" translate="yes" xml:space="preserve">
          <source>If for any output series the number of datapoints in a selected range exceeds the maxDataPoints value then the datapoints over the whole period are consolidated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ceefd34785ed73ff5c1c7b8c0eced56330a6fd" translate="yes" xml:space="preserve">
          <source>If for instance, you need to build a seriesList, you should use the &lt;code&gt;group&lt;/code&gt; function, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fee736507c55fdf7e195c2a82a8f2e89b318b1" translate="yes" xml:space="preserve">
          <source>If more than 10 metrics are drawn the legend is no longer displayed. See the &lt;a href=&quot;#hidelegend&quot;&gt;hideLegend&lt;/a&gt; parameter for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7852f8bbfca5fa24c420839ddec5af2e48030d2" translate="yes" xml:space="preserve">
          <source>If multiple carbon-caches are running on this machine, each should be listed here so that the Graphite webapp may query the caches for data that has not yet been persisted. Remote carbon-cache instances in a multi-host clustered setup should &lt;em&gt;not&lt;/em&gt; be listed here. Instance names should be listed as applicable. Ex: [&amp;lsquo;127.0.0.1:7002:a&amp;rsquo;,&amp;lsquo;127.0.0.1:7102:b&amp;rsquo;, &amp;lsquo;127.0.0.1:7202:c&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035aa6c31f2f28c850b28427d2801e6b91c521e5" translate="yes" xml:space="preserve">
          <source>If not defined, a single instance of the finder will be initialized with no parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53456623344482f2cc3301a2a0721d712e99ce7" translate="yes" xml:space="preserve">
          <source>If not implemented, &lt;code&gt;find_multi()&lt;/code&gt; will be called with a list of queries and &lt;code&gt;node.fetch()&lt;/code&gt; will be called on every result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ad236d6a7a33534e330aa4d3aa11090204ae69" translate="yes" xml:space="preserve">
          <source>If not implemented, &lt;code&gt;find_nodes()&lt;/code&gt; will be called for each query specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a83aeb8c0ab4152c8747ee079ddb6b077df0b4e" translate="yes" xml:space="preserve">
          <source>If not implemented, &lt;code&gt;find_nodes()&lt;/code&gt; will be called with a query for &lt;code&gt;**&lt;/code&gt; and a list of the returned nodes&amp;rsquo; paths will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fd4330627e616ddb2fec2208bc74ea00c22f50" translate="yes" xml:space="preserve">
          <source>If set and combined with &lt;code&gt;format=json&lt;/code&gt;, removes all null datapoints from the series returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8797f52faaf4d76d27a0cc7db5d05d403f0455e0" translate="yes" xml:space="preserve">
          <source>If set and combined with &lt;code&gt;format=json&lt;/code&gt;, wraps the JSON response in a function call named by the parameter specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a01af159d47f9bed14fdc7b1a80a131953bd22" translate="yes" xml:space="preserve">
          <source>If set really high, Ceres will waste a bit more disk space. Although each null datapoint wastes 8 bytes, you must keep in mind your filesystem&amp;rsquo;s block size. If you suffer slice fragmentation issues, you should increase this or defrag the data more often. However you should not set it to be huge because then if a large but allowed gap occurs it has to get filled in, which means instead of a simple 8-byte write to a new file we could end up doing an &lt;code&gt;(8 * MAX_SLICE_GAP)&lt;/code&gt;-byte write to the latest slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbb83d3fb47b22c241630759c7f7dc983704404" translate="yes" xml:space="preserve">
          <source>If set to 1 and combined with &lt;code&gt;format=json&lt;/code&gt;, outputs human-friendly json.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f7496b329a78971896fdfa6590f9cf882d85ad" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt; the X Axis will not be rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d0f988d7f1edc4829c5fc96c15744768c32fcc" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt; the X and Y axes will not be rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4baf5b77e19399d155b41fc46287f77ff6a57f74" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt; the Y Axis will not be rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c84499bafd1196a821a727bd4ff17b52adc45a" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt; the grid lines will not be rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2dc859a8e28331f93c4dcdc11b6bb56d9bdc29" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, series with all null values will not be reported in the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b42350e6ffca6043f7b8bb9e1b30148983a959" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the legend is not drawn. If set to &lt;code&gt;false&lt;/code&gt;, the legend is drawn. If unset, the &lt;code&gt;LEGEND_MAX_ITEMS&lt;/code&gt; settings in &lt;code&gt;local_settings.py&lt;/code&gt; is used to determine whether or not to display the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4739b054ab8b5066aabd8b6b76a0060e88df0168" translate="yes" xml:space="preserve">
          <source>If set to True, dashboards can only be saved and deleted by logged in users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b356615b5b431b2d568c5951f5ae38e6f2adeab" translate="yes" xml:space="preserve">
          <source>If set to True, dashboards can only be saved or deleted by users having the appropriate (change or delete) permission (as set in the Django Admin app). These permissions can be set at the user or group level. Note that Django&amp;rsquo;s &amp;lsquo;add&amp;rsquo; permission is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cae558e0e2bd75fa7a1936ab24835c82f3b54ab" translate="yes" xml:space="preserve">
          <source>If set to the name of a user group, dashboards can only be saved and deleted by logged-in users who are members of this group. Groups can be set in the Django Admin app, or in LDAP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fd0c9472e1b5a6318e2786fc5ba239e39047e5" translate="yes" xml:space="preserve">
          <source>If set to true, makes the font bold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354f6c581c5452404118acab292936fc494fbfe7" translate="yes" xml:space="preserve">
          <source>If set to true, makes the font italic / oblique. Default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63139d2e44c096fcbe3309133774f5f8f47c8a37" translate="yes" xml:space="preserve">
          <source>If set very low, Ceres will waste less of the tiny bit disk space that this feature wastes, but then will be prone to performance problems caused by slice fragmentation, which can be pretty severe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d928188073a8af7eb3fa765470f5b311e02368a9" translate="yes" xml:space="preserve">
          <source>If set, draws the graph with a logarithmic scale of the specified base (e.g. 10 for common logarithm)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9519be1c9f028f4dc5e23486ea793ee80a949245" translate="yes" xml:space="preserve">
          <source>If set, enables the caching of calculated targets (including applied functions) and rendered images. If running a cluster of Graphite webapps, each webapp should have the exact same values for this setting to prevent unneeded cache misses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f2bf39340574e7a5fb1f70f1bf2adedea46790" translate="yes" xml:space="preserve">
          <source>If set, executes &lt;code&gt;rrdtool flushcached&lt;/code&gt; before fetching data from RRD files. Set to the address or socket of the rrdcached daemon. Ex: &lt;code&gt;unix:/var/run/rrdcached.sock&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67516e278a34f11f9d86c844dff03422ee35f42" translate="yes" xml:space="preserve">
          <source>If the characters cannot be read as a range, they are treated as a list - any character in the list will match, e.g. &lt;code&gt;foo[bc]ar&lt;/code&gt; will match &lt;code&gt;foobar&lt;/code&gt; and &lt;code&gt;foocar&lt;/code&gt;. If you want to include a dash (&lt;code&gt;-&lt;/code&gt;) in your list, put it at the beginning or end, so it&amp;rsquo;s not interpreted as a range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989f88b32e8b9bb42d996e27d98400d57b262147" translate="yes" xml:space="preserve">
          <source>If the dashboard has previously been saved, and assuming you have any required permissions (see later), you can use the &lt;em&gt;Dashboard | Save&lt;/em&gt; menu item to save your changes. Note that your dashboard will be visible to all users, whether logged in or not, and can be edited and/or deleted by any user with the required permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223eb25203f5ff439ab2e69cd70d124e314e432f" translate="yes" xml:space="preserve">
          <source>If the optional keepStep parameter is set to True, the result will have the same time period and step as the source series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef990207356891cfe9872937d106db32fa590a5" translate="yes" xml:space="preserve">
          <source>If the parameter &lt;code&gt;grouped=1&lt;/code&gt; is passed, the returned list will be organized by group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd93c1ec0eb1ac959f508c94af3c6849d18bdbf3" translate="yes" xml:space="preserve">
          <source>If the query doesn&amp;rsquo;t fall entirely within the FIND_TOLERANCE window we disregard the window. This prevents unnecessary remote fetches caused when carbon&amp;rsquo;s cache skews node.intervals, giving the appearance remote systems have data we don&amp;rsquo;t have locally, which we probably do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59c0ef7a92ec6635064816e88ce5e709c438745" translate="yes" xml:space="preserve">
          <source>If you are experiencing problems, uncomment the following line in /opt/graphite/webapp/graphite/local_settings.py:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d4425aec7a4a7116660ca61b22d894c4bc8a62" translate="yes" xml:space="preserve">
          <source>If you are using a custom database backend (other than SQLite) you must first create a $GRAPHITE_ROOT/webapp/graphite/local_settings.py file that overrides the database related settings from settings.py. Use $GRAPHITE_ROOT/webapp/graphite/local_settings.py.example as a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10c8f9f8bdeb422611f45805f0dfd21a9027a59" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t yet saved your dashboard (ever), it will be given a name like &amp;ldquo;temporary-0&amp;rdquo;, so you probably want to save it first. It&amp;rsquo;s important to note that temporary dashboards are never shown in the Finder, and so the only way to delete them is via the Admin webapp or the database. You probably don&amp;rsquo;t want that&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b43b49e73038c9ec2ffab0da984a9f0cb5bf2e" translate="yes" xml:space="preserve">
          <source>If you provide a list of tag expressions, the result is filtered to only values that occur for the specified tag in series matching those expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23770634229b1476469e5adb0463b4d109e19e97" translate="yes" xml:space="preserve">
          <source>If you provide a list of tag expressions, the specified tags are excluded and the result is filtered to only tags that occur in series matching those expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bef564f37260b9059d4c0d057922eaee431ba1a" translate="yes" xml:space="preserve">
          <source>If you run into any issues with Graphite, please to post a question to our &lt;a href=&quot;https://answers.launchpad.net/graphite&quot;&gt;Questions forum on Launchpad&lt;/a&gt; or join us on IRC in #graphite on FreeNode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ba5604440304cf07adcac319a677c7c19df4ef" translate="yes" xml:space="preserve">
          <source>If you use a virtualenv, you can use &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95a6f8b6e07f8ec9615921b689c62199b3fa701" translate="yes" xml:space="preserve">
          <source>If you want to change aggregation methods for existing data, be sure that you update the whisper files as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96889dad8edc4099913eca339167aac197e9dc92" translate="yes" xml:space="preserve">
          <source>If you want to run the tests for all combinations of Python and Django versions, you can use the &lt;a href=&quot;http://tox.readthedocs.io/&quot;&gt;tox&lt;/a&gt; tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3215af1e498adf7cc7595604d9d47ee5f86e98" translate="yes" xml:space="preserve">
          <source>If you wish to use a backend to graphite other than Whisper, there are some options available to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73d34bbf35e2a18247b619314098ed1d3408aab" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a power user, you can edit the dashboard configuration directly. When you click the &lt;em&gt;Update&lt;/em&gt; button, the changes are applied to the dashboard on screen only. This function also provides a convenient mechanism for importing and exporting dashboards, for instance to promote dashboards from development to production systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be425c79a58c9ebfeee26a94da07f35d63498f8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re only viewing a dashboard rather than modifying one, the completer just gets in the way. You can either resize it by dragging the splitter bar (between the completer and graph panels), or hide it by clicking on the little triangular icon in the splitter bar. Once hidden, the same triangular icon serves to display the panel again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fc22102982bfe571826f43f7943a48bcc8a814" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the default SQLite database, your webserver will need permissions to read and write to the database file. So, for example, if your webapp is running in Apache as the &amp;lsquo;nobody&amp;rsquo; user, you will need to fix the permissions like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6f9c86750cbc41f1d4d681ca185ca559047135" translate="yes" xml:space="preserve">
          <source>If your version of &lt;code&gt;pip&lt;/code&gt; is &amp;lt; 7.0.0 then no need to use &lt;code&gt;--no-binary=:all:&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b1e66d1cc12000417c1ca1b407136639e59750" translate="yes" xml:space="preserve">
          <source>Import a graph from a URL when you already have the graph you want displaying elsewhere (maybe you built it in the Completer, or you want to copy it from another dashboard). Use the &lt;em&gt;Graphs | New Graph | From URL&lt;/em&gt; menu item and enter the URL, which you probably copied from another browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d3ecc5626719d68388e2c98f2af9dcc6915726" translate="yes" xml:space="preserve">
          <source>Important notes before continuing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9209083c4879cf5579fe4255f9f44b15ee4041" translate="yes" xml:space="preserve">
          <source>Importing a Graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1db0402b3e8b5a42f992b6547a2af12a519c9df" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;RELAY_METHOD = consistent-hashing&lt;/code&gt; mode, a &lt;code&gt;DESTINATIONS&lt;/code&gt; setting defines a sharding strategy across multiple &lt;code&gt;carbon-cache.py&lt;/code&gt; backends. The same consistent hashing list can be provided to the graphite webapp via &lt;code&gt;CARBONLINK_HOSTS&lt;/code&gt; to spread reads across the multiple backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15bbe72e12bb87eee1436daaa27313593855268" translate="yes" xml:space="preserve">
          <source>In Django 1.5+ set the list of hosts from where your graphite instances is accessible. See: &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-ALLOWED_HOSTS&quot;&gt;https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-ALLOWED_HOSTS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9768e8cab7287739b321ad19e510864653077d" translate="yes" xml:space="preserve">
          <source>In Linux, the system-global file descriptor max can be set via sysctl. Per-process limits are set via ulimit. See documentation for your operating system distribution for details on how to set these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac261919012b273695ad8c591fbd955ac5d58bd" translate="yes" xml:space="preserve">
          <source>In a traditional hierarchy, website.orbitz.bookings.air or something like that would represent the number of air bookings on orbitz. Before producing your data you need to decide what your naming scheme will be. In a path such as &amp;ldquo;foo.bar.baz&amp;rdquo;, each thing surrounded by dots is called a path component. So &amp;ldquo;foo&amp;rdquo; is a path component, as well as &amp;ldquo;bar&amp;rdquo;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aac1b979959179da56b04271cc727fc60617a0" translate="yes" xml:space="preserve">
          <source>In addition to path substitution, variables can be used for numeric and string literals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a7b0ad652d47d17b0fb9d805e2970005f54cd8" translate="yes" xml:space="preserve">
          <source>In any reasonably-sized environment, you&amp;rsquo;ll have the same or similar metrics being collected from a number of points. Rather than requiring you to add each one to the graph individually, Graphite provides a powerful wildcard mechanism - for example, the metric path &lt;code&gt;servers.*ehssvc*.cpu.total.{user,system,iowait}&lt;/code&gt; will include a line on the graph for the user, system and I/O wait CPU usage for every server whose name contains &lt;code&gt;ehssvc&lt;/code&gt;. Each of these is referred to as a metric series. Graphite also provides a large number of functions for working on groups of metric series, e.g. showing only the top 5 metric series from a group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14238503e98a5ccf6c6e457bd0b941a10dd4695f" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, Manually set the value step between the left Y-axis labels and grid lines (See: &lt;a href=&quot;#ystep&quot;&gt;yStep&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5a4dbcdf57d31a25e5f1daa4f32fcfc3b68011" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, Manually set the value step between the right Y-axis labels and grid lines (See: &lt;a href=&quot;#ystep&quot;&gt;yStep&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8626cc9d4603f3442e269c1e2c68f8c4f51a362e" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, draws all metrics associated with the left Y-axis using dashed lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe704b681e38415dd4157f6400756cff250fbf8" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, draws all metrics associated with the right Y-axis using dashed lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84d2ceb038f41871ff14d18f190383a0f04c477" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the color of all metrics associated with the left Y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d9c23315c935a1df1263a3aa5d07fa41af975a" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the color of all metrics associated with the right Y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3772008533db32baa53c67fcfba429e52e344d1" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the line width of all metrics associated with the left Y-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723c94daec535ec9c05d8ae859f64c483d841cd8" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the line width of all metrics associated with the right Y-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ac8d9c369ef878cb38259da56ce3ad0f2d79df" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the lower bound of the left Y-Axis (See: &lt;a href=&quot;#ymin&quot;&gt;yMin&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aeff47938a80019ad5168e6e1925696ee9e8593" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the lower bound of the right Y-Axis (See: &lt;a href=&quot;#ymin&quot;&gt;yMin&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53baad4110c91f89fe1ff1a8e0581254749bf42e" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the title of the right Y-Axis (See: &lt;a href=&quot;#vtitle&quot;&gt;vtitle&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994bc4510fab6f4173abe8694233b72819ebf475" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the upper bound of the left Y-Axis (See: &lt;a href=&quot;#ymax&quot;&gt;yMax&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599ad308c318be7a05e1ac9d425eeec43474f8be" translate="yes" xml:space="preserve">
          <source>In dual Y-axis mode, sets the upper bound of the right Y-Axis (See: &lt;a href=&quot;#ymax&quot;&gt;yMax&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4df451435b7171ca5ca2bf2a98f758c14849eef" translate="yes" xml:space="preserve">
          <source>In many cases (depending on configuration) if an update is made to an RRD series but is not followed up by another update soon, the original update will be lost. This makes it less suitable for recording data such as operational metrics (e.g. code pushes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e7a31283507aad782bdacc6251360aa95e69a5" translate="yes" xml:space="preserve">
          <source>In order for your custom finder to be importable, you need to package it under a namespace of your choice. Python packaging won&amp;rsquo;t be covered here but you can look at third-party finders to get some inspiration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255f9c044796ab6b141e6b0fdbfbb25981a4725d" translate="yes" xml:space="preserve">
          <source>In order to install Graphite-Web and Carbon, you must first install some development headers. In Debian-based distributions, this will require &lt;code&gt;apt-get install python-dev libcairo2-dev libffi-dev build-essential&lt;/code&gt;, and in Red Hat-based distributions you will run &lt;code&gt;yum install python-devel cairo-devel libffi-devel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c4e8703e381f35a659f93861e0a4631dccf9af" translate="yes" xml:space="preserve">
          <source>In other words, we will get back the following metrics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1599362291c884b856ec817d3293d72b4dca6955" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;console.log&lt;/code&gt; file, if you find presence of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2477ade2f9f0340fbad5d753656497018f9937a1" translate="yes" xml:space="preserve">
          <source>In this example, imagine that your metric scheme is &lt;code&gt;servers.&amp;lt;servername&amp;gt;.&amp;lt;metrics&amp;gt;&lt;/code&gt;. The pattern would match server names that start with &amp;lsquo;www&amp;rsquo;, followed by anything, that are sending metrics that end in &amp;lsquo;.workers.busyWorkers&amp;rsquo; (note the escaped &amp;lsquo;.&amp;rsquo; characters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de8659fa57e17713baa7dfb6cf6de563cd76de3" translate="yes" xml:space="preserve">
          <source>In this setup, nginx will proxy requests for Gunicorn, which will itself listen locally on port 8080 and serve the webapp (Django application).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2d7833039dc978e6eb0d1055910e03a86a4609" translate="yes" xml:space="preserve">
          <source>Indices and tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb1d572a9c44ff37bb29c631415feb3b839f4e4" translate="yes" xml:space="preserve">
          <source>Initial Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c899cc6928f392a5dce0cd0dd6ebc32f6ea31d00" translate="yes" xml:space="preserve">
          <source>Install Gunicorn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212e6a8da4ccca95c705c1ee31cfc6d26c594c24" translate="yes" xml:space="preserve">
          <source>Install nginx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03e6182922ab729d553ab313008bdb7eaf90735" translate="yes" xml:space="preserve">
          <source>Install the required dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28bea4f9d0a5bdfbc6db4865be0ac428299c856" translate="yes" xml:space="preserve">
          <source>Installation of Carbon in a custom location with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b9bce43be86f871933d7ea4ea3e24f7c0080d7" translate="yes" xml:space="preserve">
          <source>Installation of Graphite-web in a custom location with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3f2c10c745175c7fc9a520bba4a28465b333e9" translate="yes" xml:space="preserve">
          <source>Installing Carbon in a Custom Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6a5f9f8f97093a90d6507354367a49812c3d8b" translate="yes" xml:space="preserve">
          <source>Installing Ceres</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9fc56b2cfeff1b069111611aff2a9af41caa62" translate="yes" xml:space="preserve">
          <source>Installing From Pip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae366a4c800a834bb4da143ac26b3fa8346bfce9" translate="yes" xml:space="preserve">
          <source>Installing From Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581bd7b1c83e18a31e65dcd535855b7eba3ec194" translate="yes" xml:space="preserve">
          <source>Installing From Synthesize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2805beb1ff57dfd62379365ac0d74b17fd403bc0" translate="yes" xml:space="preserve">
          <source>Installing Graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d3d9506746d3296f487096258cef8918ccc7d5" translate="yes" xml:space="preserve">
          <source>Installing Graphite-web in a Custom Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa6d95e2de124307f91d812ae905d01c6f9764" translate="yes" xml:space="preserve">
          <source>Installing custom finders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e2a9a3937c039bb0b63a6f3af1ceb87951b4c5" translate="yes" xml:space="preserve">
          <source>Installing in Virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ace9c1c8fb95c21d689da85d23b99e51e65c497" translate="yes" xml:space="preserve">
          <source>Installing in a Custom Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e590700806b33d6e5fbea56c7a1a64a1149b9b4" translate="yes" xml:space="preserve">
          <source>Installing in the Default Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e17b80c1b34e416a2f1140e6197722a386ca1e7" translate="yes" xml:space="preserve">
          <source>Instead of using a hardcoded username and password for the account that binds to the LDAP server you could use the credentials of the user that tries to log in to Graphite. This is the template that creates the full DN to bind with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f245defccee9e7bdcc1010935de3157c51fcf5" translate="yes" xml:space="preserve">
          <source>Interval for the Auto-Refresh feature in the Composer, measured in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba6511c3ff0e20017c3882bf2e2ab79f855e163" translate="yes" xml:space="preserve">
          <source>Is there a diagram of Graphite&amp;rsquo;s architecture?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35d34d8934a64827d7c90c079340d86638c482f" translate="yes" xml:space="preserve">
          <source>Is there a diagram of Graphite’s architecture?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d675f1312cf816b50105dee7dd521fd2e0c4d0c4" translate="yes" xml:space="preserve">
          <source>Is this Graphite related to the SIL font rendering graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d5e39eaee01b4b11d1f2151dc8b6caf8422396" translate="yes" xml:space="preserve">
          <source>Is this Graphite related to the sourceforge project called graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0617b3ae35618d923b1401cc3b09ad2421c77a" translate="yes" xml:space="preserve">
          <source>It can also take an optional argument with a name of the stack, in case there is more than one, e.g. for input and output metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdeaa52b656757e264184a6a4c8c6bedfc2e5c5" translate="yes" xml:space="preserve">
          <source>It is also possible to use regular expressions. Following the example above when using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586fbefe463a3d8e197c84b70ea74e7e4a5fb6aa" translate="yes" xml:space="preserve">
          <source>It is possible to use an alternate storage layer than the default, Whisper, in order to accommodate specific needs. See: &lt;a href=&quot;http://graphite.readthedocs.io/en/latest/storage-backends.html&quot;&gt;http://graphite.readthedocs.io/en/latest/storage-backends.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e72ed52dc8e6b8fe978884b98a29bc7e0e0b7dd" translate="yes" xml:space="preserve">
          <source>It is possible to use an alternate storage layer than the default, Whisper, in order to accommodate specific needs. The setup above would become:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f80b060d276a42bcb81841f64cbd5081cb1d48e" translate="yes" xml:space="preserve">
          <source>It may return a list of 1 or more instances of the finder, if multiple instances are returned they will be called concurrently in multiple threads. This is used by &lt;code&gt;RemoteFinder&lt;/code&gt; to dispatch requests to multiple remote hosts in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d29a9146d9f985b20f603c086237ec6ea7bc4c8" translate="yes" xml:space="preserve">
          <source>It should return a list of result dicts, each of which contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a74925601956ba445815a92c217fcafd229ef9" translate="yes" xml:space="preserve">
          <source>It will start Gunicorn and listen on &lt;code&gt;localhost:8080&lt;/code&gt;, log to &lt;code&gt;/var/log/gunicorn.log&lt;/code&gt; and use &lt;code&gt;/opt/graphite/webapp/graphite&lt;/code&gt; as the webapp path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20c29833bf2edf8b2cb46d97ecd150be441db0b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to dump the raw events using the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cefb27e6d6c0a744db6b78728219c3fc71514f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth noting that data sent to Graphite is actually sent to the &lt;a href=&quot;carbon-daemons&quot;&gt;Carbon and Carbon-Relay&lt;/a&gt;, which then manage the data. The Graphite web interface reads this data back out, either from cache or straight off disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5a155852cc02f5b8b49249d2c602f1424b449b" translate="yes" xml:space="preserve">
          <source>Iterates over a two lists and divides list1[0] by list2[0], list1[1] by list2[1] and so on. The lists need to be the same length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f1f1f9713e54308effcd7bf55755c2218a5b04" translate="yes" xml:space="preserve">
          <source>Joe Miller&amp;rsquo;s perl &lt;a href=&quot;https://github.com/joemiller/collectd-graphite&quot;&gt;collectd-graphite&lt;/a&gt; plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cff49f518e8ef00d58dc285fdfbb1250dafa3a" translate="yes" xml:space="preserve">
          <source>Jordan Sissel&amp;rsquo;s node &lt;a href=&quot;https://github.com/loggly/collectd-to-graphite&quot;&gt;collectd-to-graphite&lt;/a&gt; proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb40990b0ff405069bfd42600b1b73a3ceeb4e2" translate="yes" xml:space="preserve">
          <source>Just returns the sine of the current time. The optional amplitude parameter changes the amplitude of the wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa685ae844d467c58e93788e361714274937378" translate="yes" xml:space="preserve">
          <source>Just returns the timestamp for each X value. T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05b76d2b62627f18878bff7ab6cf3b8440f5ebc" translate="yes" xml:space="preserve">
          <source>KairosDB finder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ec1967d5eb018b07d142951622f43521a4e03d" translate="yes" xml:space="preserve">
          <source>Kenshin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8343c683ae1584c96390fa627005bc1bb0719cd" translate="yes" xml:space="preserve">
          <source>LDAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72793cf1e69d68d2f32336093b76802739059f80" translate="yes" xml:space="preserve">
          <source>LDAP authentication: &lt;a href=&quot;https://www.python-ldap.org/&quot;&gt;python-ldap&lt;/a&gt; (for LDAP authentication support in the webapp)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2904e6975c92f82735a51ed59a1a0d6858075da" translate="yes" xml:space="preserve">
          <source>LDAP_BASE_PASS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6698e7c400292e5e725783ae8df054e1d71882b8" translate="yes" xml:space="preserve">
          <source>LDAP_BASE_USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc68d3c424377170d5fea45c502c78f6d3aebf9" translate="yes" xml:space="preserve">
          <source>LDAP_PORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa33b285b5001ee5de3571f5a5fbd27b618ca2f" translate="yes" xml:space="preserve">
          <source>LDAP_SEARCH_BASE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e7870bd59c2ca20eeffbc03f592ec91e8865e9" translate="yes" xml:space="preserve">
          <source>LDAP_SERVER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b1150ea6b65526c3dbc4391b8f93a1147587c9" translate="yes" xml:space="preserve">
          <source>LDAP_URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215735943ae98f78a822de873c248840fb7b1a95" translate="yes" xml:space="preserve">
          <source>LDAP_USER_DN_TEMPLATE:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07991b11c9ee632dcaea81fc35f4559a263f303" translate="yes" xml:space="preserve">
          <source>LDAP_USER_QUERY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321e72dcb018bf97d110fa255db862a00c4910c1" translate="yes" xml:space="preserve">
          <source>LOGIN_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46056575fd1b6f0799324b4f5ab2695a9b2eed6" translate="yes" xml:space="preserve">
          <source>LOG_CACHE_PERFORMANCE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5d06fe6b8627c43dafbfbe794462e25c6e73df" translate="yes" xml:space="preserve">
          <source>LOG_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b5225c85e5e6c1c99eb01f8950d259dd132061" translate="yes" xml:space="preserve">
          <source>LOG_RENDERING_PERFORMANCE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983b3f25f55eab5b439f5d48eae8dda07274eaa8" translate="yes" xml:space="preserve">
          <source>Labels are oriented horizontally within each slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d26f889e98817539fdecfbbeaaa038924b0f67" translate="yes" xml:space="preserve">
          <source>Labels are oriented radially within each slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1a6ec2d5947ab29eaa2ca8c378cf0e145d3ceb" translate="yes" xml:space="preserve">
          <source>Labels the y-axis with vertical text. If unset, no y-axis label is displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ce14871ae716d802dc993231f634f46dfc237a" translate="yes" xml:space="preserve">
          <source>Ledbetter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335773214df8ccea03407205a4f89c7870d7212a" translate="yes" xml:space="preserve">
          <source>Leonardo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4be5f92d7ebdc0bc95a5bbf8e262321782aab29" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say there are 4 identical application instances running on each server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a238bed386942a551f54f675c3d921aef7f05af4" translate="yes" xml:space="preserve">
          <source>Like a slope line, but values are always connected with a slope line, regardless of whether or not there are Null values between them</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d687b5450d5a54c7231ba0032b9f05d5161973" translate="yes" xml:space="preserve">
          <source>List of IP addresses and ports of remote Graphite webapps used to perform rendering. Each webapp must have access to the same data as the Graphite webapp which uses this setting either through shared local storage or via &lt;code&gt;CLUSTER_SERVERS&lt;/code&gt;. Ex: [&amp;ldquo;10.0.2.4:80&amp;rdquo;, &amp;ldquo;10.0.2.5:80&amp;rdquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9edbfd2c4388ad0dde59840ee6cd244e8e4332f" translate="yes" xml:space="preserve">
          <source>List of functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce74ca240271a65352fd6db1d7612d5c6386a80" translate="yes" xml:space="preserve">
          <source>Local Database TagDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279485b85e17f4034efed5e35d6abb1f14e62dea" translate="yes" xml:space="preserve">
          <source>Location for Ceres data files to be stored and read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5ccd65ea43b0123b954d41ae24b6e25c46ac74" translate="yes" xml:space="preserve">
          <source>Location for RRD files to be read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e20938b3fc282a4b8d3ecdb071a7e2d16e0faa" translate="yes" xml:space="preserve">
          <source>Location for Whisper data files to be stored and read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899eff611e84be79f10f0f7dea1052fb0c0c6205" translate="yes" xml:space="preserve">
          <source>Location of &lt;code&gt;local_settings.py&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370cb5854251c9df3c1cfd1a9bb287e23e8cde81" translate="yes" xml:space="preserve">
          <source>Location to install Python modules (default: &lt;code&gt;/opt/graphite/lib&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623f9409d72199e7b1ea8c346ba920976cacd04b" translate="yes" xml:space="preserve">
          <source>Location to install Python modules (default: &lt;code&gt;/opt/graphite/webapp&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cb6c2650a1b6d36e2f42df119f2699c9401df2" translate="yes" xml:space="preserve">
          <source>Location to place scripts (default: &lt;code&gt;bin/&lt;/code&gt; inside of &lt;code&gt;prefix&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c570e0b21bdcfaf02995f99cfc35e0600e0284" translate="yes" xml:space="preserve">
          <source>Location to place the &lt;code&gt;bin/&lt;/code&gt; and &lt;code&gt;conf/&lt;/code&gt; directories (defaults to &lt;code&gt;/opt/graphite/&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13389e55cf58023f768d93e7bbaf7573bced47d1" translate="yes" xml:space="preserve">
          <source>Location to place the &lt;code&gt;bin/&lt;/code&gt; and &lt;code&gt;storage/&lt;/code&gt; and &lt;code&gt;conf/&lt;/code&gt; directories (defaults to &lt;code&gt;/opt/graphite/&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e9e9bbd2f80401bd9101fb9660020ff34e95ae" translate="yes" xml:space="preserve">
          <source>Location to place the &lt;code&gt;storage&lt;/code&gt; and &lt;code&gt;conf&lt;/code&gt; directories (default: value of &lt;code&gt;prefix&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfcc5516930f66851c900edad3ed68f88fa8ef7" translate="yes" xml:space="preserve">
          <source>Location to place the &lt;code&gt;webapp/content&lt;/code&gt; and &lt;code&gt;conf&lt;/code&gt; directories (default: value of &lt;code&gt;prefix&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672e668db67b46fd49866abd51101b92cf29e743" translate="yes" xml:space="preserve">
          <source>Location to place the scripts (default: &lt;code&gt;bin/&lt;/code&gt; inside of &lt;code&gt;prefix&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98226863165783f352699f40159f23648ee17bd9" translate="yes" xml:space="preserve">
          <source>Log directory for Carbon and Graphite-web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17a8a69946b7885a4b26fbd7ac13c46f45abd42" translate="yes" xml:space="preserve">
          <source>Log into Graphite using the &lt;em&gt;Dashboard | Log in&lt;/em&gt; menu item, which shows a standard login dialog. Once you&amp;rsquo;re logged in, the menu item changes to &lt;em&gt;Log out from &amp;ldquo;username&amp;rdquo;&lt;/em&gt; - click this to log out again. Note that logins are recorded by a persistent browser cookie, so you don&amp;rsquo;t have to log in again each time you connect to Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13b8d5d352917c852a2228f1e8b07072de35714" translate="yes" xml:space="preserve">
          <source>Login/logout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dd930ebd2bd985dd5e64b5c4e614937364ee32" translate="yes" xml:space="preserve">
          <source>Logster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad758c411023f7af84a9ebaf2b1de962565ebe88" translate="yes" xml:space="preserve">
          <source>MAX_FETCH_RETRIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d712932d5d58dec50b96cd5a7c09bc295ec2c8b" translate="yes" xml:space="preserve">
          <source>MAX_TAG_LENGTH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b60074c9015eb2a471c22e6f057b1bcdcf6e4d" translate="yes" xml:space="preserve">
          <source>MEMCACHE_HOSTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e092011de81ae2d320421fde57913579653f2a" translate="yes" xml:space="preserve">
          <source>MEMCACHE_KEY_PREFIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fafd87c4a403b14e0d2e863d739242faec6199c" translate="yes" xml:space="preserve">
          <source>MEMCACHE_OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3a8927b85daa16f0fe11b6bbb759eee3095858" translate="yes" xml:space="preserve">
          <source>MM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd4040d77e4d1ca49b28f2d692ec97f02d9914d" translate="yes" xml:space="preserve">
          <source>Managing Events in the Admin UI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de5bda67de05fc6130af1c9469cca56ad2899f7" translate="yes" xml:space="preserve">
          <source>Manual and Auto Refresh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d92e248eed5a086e2cf6231112d02e2413a5ad9" translate="yes" xml:space="preserve">
          <source>Manually set the value step between Y-axis labels and grid lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88fdb4a78170e6ec24b35a9a2182da29f69be47" translate="yes" xml:space="preserve">
          <source>Manually sets the lower bound of the graph. Can be passed any integer or floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fedf0d56e57e9148bd69e0fa121d1286a34a7b" translate="yes" xml:space="preserve">
          <source>Manually sets the upper bound of the graph. Can be passed any integer or floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbb78fbed4d9c5f0a2d488a617ba19b91e27654" translate="yes" xml:space="preserve">
          <source>Matt _Aimonetti has a reasonably sane &lt;a href=&quot;http://matt.aimonetti.net/posts/2013/06/26/practical-guide-to-graphite-monitoring/&quot;&gt;post describing the organization of your namespace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfacdacfcc9d1049d458d3b7de3a9036b4148ac" translate="yes" xml:space="preserve">
          <source>Memcached prefix for graphite keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cead53b3852864014036f6f72c20ebbaadd19812" translate="yes" xml:space="preserve">
          <source>Metadata for Ceres is stored in &lt;a href=&quot;https://docs.python.org/3/library/json.html&quot;&gt;JSON format&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357a9748190ccf3676a709225adc398245c2ba15" translate="yes" xml:space="preserve">
          <source>Metric data and graphs are cached for one minute by default. If defined, DEFAULT_CACHE_POLICY is a list of tuples of minimum query time ranges mapped to the cache duration for the results. This allows for larger queries to be cached for longer periods of times. All times are in seconds. An example configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681cc839445de5bc3cd1119ef332d5855a36b0b0" translate="yes" xml:space="preserve">
          <source>Metric paths show the &amp;ldquo;.&amp;rdquo; separated path from the root of the metrics tree (often starting with &lt;code&gt;servers&lt;/code&gt;) to a metric, for example &lt;code&gt;servers.ix02ehssvc04v.cpu.total.user&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092f99ea11a34a8490e7a767a83a42fc45634f82" translate="yes" xml:space="preserve">
          <source>Minutes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04809110f3a4cf7abaf6fa9d00ab849c5d99a2ff" translate="yes" xml:space="preserve">
          <source>Modifies the URL linked in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb22c5e4eabc0e7d3ccf2b60e66f53421b63149" translate="yes" xml:space="preserve">
          <source>Module Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da5538a0243710a75598daf91dfc701e5007baa" translate="yes" xml:space="preserve">
          <source>Moira</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81434589757e654444719de434c44e9adc0c708" translate="yes" xml:space="preserve">
          <source>Monitoring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82978fc1dbd06e2aa7ff1ee976a159ddf2913a10" translate="yes" xml:space="preserve">
          <source>Most current Linux distributions have all of the requirements available in the base packages. RHEL based distributions may require the &lt;a href=&quot;http://fedoraproject.org/wiki/EPEL&quot;&gt;EPEL&lt;/a&gt; repository for requirements. Python module dependencies can be install with &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt; rather than system packages if desired or if using a Python version that differs from the system default. Some modules (such as Cairo) may require library development headers to be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e204d476b3148d82fbeb6c22adee09bd3a974a" translate="yes" xml:space="preserve">
          <source>Most functions are applied to one &lt;a href=&quot;terminology#term-series-list&quot;&gt;series list&lt;/a&gt;. Functions with the parameter &lt;code&gt;*seriesLists&lt;/code&gt; can take an arbitrary number of series lists. To pass multiple series lists to a function which only takes one, use the &lt;code&gt;group()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f7cfd091f2b3eeb51dd1d4c4902de870d1f8a3" translate="yes" xml:space="preserve">
          <source>Most likely use case is to provide a band within which another metric should move. In such case applying an &lt;code&gt;alpha()&lt;/code&gt;, as in the second example, gives best visual results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b838ae8755eff865fddfc9fec468aac6cb49093" translate="yes" xml:space="preserve">
          <source>Most of the functions and parameters are case sensitive. For example &lt;code&gt;&amp;amp;linewidth=2&lt;/code&gt; will fail silently. The correct parameter in this case is &lt;code&gt;&amp;amp;lineWidth=2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bc042017d902409cde414de08ff04dbbd85cf3" translate="yes" xml:space="preserve">
          <source>Much more</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80e292daf0a7080ce7cab61a6dc2717aae1f9d9" translate="yes" xml:space="preserve">
          <source>Multi-Archive Storage and Retrieval Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28cba024c103249039feaad1ce3bd9e811102e0" translate="yes" xml:space="preserve">
          <source>Multiple Metrics - Combining Graphs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9945fcca48384937d54ac1d21bd0e7f061684896" translate="yes" xml:space="preserve">
          <source>Multiple function calls can be chained together either by nesting them or by piping the result into another function (it will be passed to the piped function as its first parameter):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d844cf625e73b854eef27e0982578b72764240" translate="yes" xml:space="preserve">
          <source>Naturally, you can change these settings so that it fits your setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3c07189727638467975aadf0d33aad8f7914ca" translate="yes" xml:space="preserve">
          <source>New Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb28eb8eef60bf673120e54f368dd090f503e2e5" translate="yes" xml:space="preserve">
          <source>Nginx + uWSGI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a40092a6a3fd1daa76f71d67f3371fc4343247" translate="yes" xml:space="preserve">
          <source>No, not since Graphite was first written in 2006 at least. Graphite has its own specialized database library called &lt;a href=&quot;whisper&quot;&gt;whisper&lt;/a&gt;, which is very similar in design to RRD, but has a subtle yet fundamentally important difference that Graphite requires. There are two reasons whisper was created. The first reason is that RRD is designed under the assumption that data will always be inserted into the database on a regular basis, and this assumption causes RRD behave undesirably when given irregularly occurring data. Graphite was built to facilitate visualization of various application metrics that do not always occur regularly, like when an uncommon request is handled and the latency is measured and sent to Graphite. Using RRD, the data gets put into a temporary area inside the database where it is not accessible until the current time interval has passed &lt;em&gt;and&lt;/em&gt; another value is inserted into the database for the following interval. If that does not happen within an allotted period of time, the original data point will get overwritten and is lost. Now for some metrics, the lack of a value can be correctly interpreted as a value of zero, however this is not the case for metrics like latency because a zero indicates that work was done in zero time, which is different than saying no work was done. Assuming a zero value for latency also screws up analysis like calculating the average latency, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf602615f7e1045e58ad8d432991caf8955ac05" translate="yes" xml:space="preserve">
          <source>No. SIL Graphite is completely unrelated to this Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a27b39e5e1b57368a6e0b0075dcd8a20dc506af" translate="yes" xml:space="preserve">
          <source>No. The sourceforge project called graphite is completely unrelated to this Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb147a5c4b01ed3e33c22b263dc221ca52ae18b" translate="yes" xml:space="preserve">
          <source>Node may be an integer referencing a node in the series name or a string identifying a tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b94acca8fd012a486bc2b0eed90fbb0b4b66916" translate="yes" xml:space="preserve">
          <source>NonNegativeDerivative adjusted for the series time interval This is useful for taking a running total metric and showing how many requests per second were handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36e52613325b3e3b53146018737c9e20fdedd99" translate="yes" xml:space="preserve">
          <source>Normally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ea4373d0b18c7e7f653bec253b4c2329eaa39b" translate="yes" xml:space="preserve">
          <source>Note that DASHBOARD_REQUIRE_AUTHENTICATION must be set to true - if not, this setting is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562812ad925df5aeaa38218c949e46894c08edb3" translate="yes" xml:space="preserve">
          <source>Note that if your Carbon instance is listening using the UDP protocol, you also need the &lt;code&gt;-u&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f782144f24cf603fc9297e14e4ad3f4d35ce9f" translate="yes" xml:space="preserve">
          <source>Note that refresh options are saved with the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e937c830d99f22ebda442548d2002375532565" translate="yes" xml:space="preserve">
          <source>Note that you need the corresponding python version on your system. Most systems only provide one or two different python versions, it is up to you to install other versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3deb87046dc41bbe2305f27d56253ea1463f6aa" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll most likely want to hide the completer when working in this mode - see earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b3c65f5734a86ee867d1a7d2d43845d9826bf5" translate="yes" xml:space="preserve">
          <source>Note, however, that if you have multiple &lt;em&gt;related&lt;/em&gt; metrics, it may be easier to use a single path containing wildcards - see &lt;a href=&quot;#paths-and-wildcards&quot;&gt;Paths and wildcards&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62465c6b2e3c4719464e3dd77747fdc893c511b" translate="yes" xml:space="preserve">
          <source>Note: Any timestamps defined outside the requested range will raise a &amp;lsquo;ValueError&amp;rsquo; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482d615b24dc513e24534be12d0b02b635103e21" translate="yes" xml:space="preserve">
          <source>Note: By default, the graphite renderer consolidates data points by averaging data points over time. If you are using the &amp;lsquo;min&amp;rsquo; or &amp;lsquo;max&amp;rsquo; function for aggregateLine, this can cause an unusual gap in the line drawn by this function and the data itself. To fix this, you should use the consolidateBy() function with the same function argument you are using for aggregateLine. This will ensure that the proper data points are retained and the graph should line up correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c896064faf8a8eca1d22f13f450659f2f7ac848b" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s say you have 10 servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd4fd4028a9501f6793aa72a4a68e325026d6b" translate="yes" xml:space="preserve">
          <source>Now that the webapp is running, you probably want to learn how to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5bf095bb2429dbdaca0a65a6772380b43f3f40" translate="yes" xml:space="preserve">
          <source>Number of retries for a specific remote data fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e84f0923b8d372bb9042a908612ab0c168cb86" translate="yes" xml:space="preserve">
          <source>Numeric month representation with leading zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3946dc3c3aa006c98b5855607f6135c1b4c9a322" translate="yes" xml:space="preserve">
          <source>Offset,SecondsPerPoint,Points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8790500c4abb89fc68249e6c84ab7cb05824638d" translate="yes" xml:space="preserve">
          <source>Offsets a metric or wildcard seriesList by subtracting the minimum value in the series from each datapoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9afe53f3a27862f8a892eeb2395343baf4ede3" translate="yes" xml:space="preserve">
          <source>On Debian-based systems, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddffa350160186b46e1ef91f5aa5c58037e89ff6" translate="yes" xml:space="preserve">
          <source>On RedHat-based systems using the &lt;code&gt;python-pip&lt;/code&gt; package, the pip executable is named &lt;code&gt;pip-python&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7dbd7e3084be8f1cb2b58b552b67ff8e9abd32" translate="yes" xml:space="preserve">
          <source>On Unix, the &lt;code&gt;nc&lt;/code&gt; program (&lt;code&gt;netcat&lt;/code&gt;) can be used to create a socket and send data to Carbon (by default, &amp;lsquo;plaintext&amp;rsquo; runs on port 2003):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69892f063959fdf6bf88dcbda2f5283027acd268" translate="yes" xml:space="preserve">
          <source>On some systems it is necessary to install fonts for Cairo to use. If the webapp is running but all graphs return as broken images, this may be why.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652ef03f8a25750487ecf309aa5cd7d5e97eb171" translate="yes" xml:space="preserve">
          <source>Once Carbon is configured, you need to start it up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f269e5ba315105e68fe078b7f0e50c65919eef5" translate="yes" xml:space="preserve">
          <source>Once it&amp;rsquo;s up and running, you need to feed it some data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757c70b9c2acb154d4f0db7369a636e4fe68d3f3" translate="yes" xml:space="preserve">
          <source>Once its configured you&amp;rsquo;ll need to get it running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cee7a91c2f9abc81e1639d6296e16000a4dc5fd" translate="yes" xml:space="preserve">
          <source>Once the api is running and you&amp;rsquo;ve begun &lt;a href=&quot;feeding-carbon&quot;&gt;feeding data into carbon&lt;/a&gt;, use the parameters below to customize your graphs and pull out raw data. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bb49404664f5683fb72c64a35e301d51c3bfee" translate="yes" xml:space="preserve">
          <source>Once the virtualenv is activated, Graphite and Carbon can be installed &lt;a href=&quot;install-source&quot;&gt;from source&lt;/a&gt; or &lt;a href=&quot;install-pip&quot;&gt;via pip&lt;/a&gt;. Note that dependencies will need to be installed while the virtualenv is activated unless &lt;a href=&quot;http://www.virtualenv.org/en/latest/index.html#the-system-site-packages-option&quot;&gt;&amp;ndash;system-site-packages&lt;/a&gt; is specified at virtualenv creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44088680fe28cc71a969458a7c0a7f751ac89f3" translate="yes" xml:space="preserve">
          <source>Once you have picked your naming scheme and answered all of the retention questions, you need to create a schema by creating/editing the &lt;code&gt;/opt/graphite/conf/storage-schemas.conf&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92314af35f9c4c5e457a144fc38c4cbfe40e86b0" translate="yes" xml:space="preserve">
          <source>Once you have selected a seriesList, it is possible to group series together using the &lt;a href=&quot;functions#graphite.render.functions.groupByTags&quot;&gt;groupByTags&lt;/a&gt; function, which operates on tags in the same way that &lt;a href=&quot;functions#graphite.render.functions.groupByNodes&quot;&gt;groupByNodes&lt;/a&gt; works on nodes within a traditional naming hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f529f8083f355fceb3f6330b12582aeb3d5bdf36" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve formed a list of sufficient size (don&amp;rsquo;t go too big!), and pickled it (if your client is running a more recent version of python than your server, you may need to specify the protocol) send the data over a socket to Carbon&amp;rsquo;s pickle receiver (by default, port 2004). You&amp;rsquo;ll need to pack your pickled data into a packet containing a simple header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f6fce2b51a442e2e50488a44c66007d336b46c" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve installed everything you will need to create some basic configuration. Initially none of the config files are created by the installer but example files are provided. Simply copy the &lt;code&gt;.example&lt;/code&gt; files and customize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5c309f460150ad6ac16ae0eab14bb5d6c35d49" translate="yes" xml:space="preserve">
          <source>Only draw the first N metrics. Useful when testing a wildcard in a metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28036540f9a436c5a7671af3c6f6575e40a7c840" translate="yes" xml:space="preserve">
          <source>Opening a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b913ee0866f8f34f98be6679ca35cd042d93176d" translate="yes" xml:space="preserve">
          <source>Orientation to use for slice labels inside of a pie chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942c74190fa9e21df724972d444a07a0fd5a4885" translate="yes" xml:space="preserve">
          <source>Orion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258d12b8d093d372748222db812a96c166284a13" translate="yes" xml:space="preserve">
          <source>Other Authentications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef54bfd8214e8fa1c50c7962bfcf92209e130657" translate="yes" xml:space="preserve">
          <source>Other Global Menu Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a8536413994cdf1d2a9f7925125baea3b41289" translate="yes" xml:space="preserve">
          <source>Other Operations on the Graph</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
