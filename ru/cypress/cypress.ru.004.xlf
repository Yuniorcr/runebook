<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="f91e3ded351522df10339585b090b057e887db9d" translate="yes" xml:space="preserve">
          <source>Cypress automatically disables certain functionality in the Cypress launched browser that tend to get in the way of automated testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5ab06a36d25b1d990a6a9fcaa33ee49c405ccf" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.$&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4e794d0c17e362d2ad6d81b4671af0ca8eaece" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.moment&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727141a325b329e459fc856f157377c20990812c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.minimatch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142e71e26e63b3f70f407e6ea5b30330f96b0e42" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.Promise&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7030562302ba8607ecbe737211e934ee0457002f" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; and exposes it as &lt;code&gt;Cypress._&lt;/code&gt;. Call any valid Lodash method on &lt;code&gt;Cypress._&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751194527fc0f1f6027a3dbadb474533e44aa86c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes a &lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt; library and exposes it as &lt;code&gt;Cypress.Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7592108cf1b7d6d67b11f34d0f50eb01eb24858" translate="yes" xml:space="preserve">
          <source>Cypress automatically indicates when an XHR request happens in your application. These are always logged in the Command Log (regardless of whether it&amp;rsquo;s stubbed). Cypress indicates when a request has started and when it is finished. Additionally, Cypress takes a snapshot of the DOM at the moment the request is made and another snapshot at the moment the response returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089eedb4a06d8d7e3ea56740bc0c3c21e8a70dfa" translate="yes" xml:space="preserve">
          <source>Cypress automatically matches the spec and browser behavior for pressing the &lt;code&gt;{enter}&lt;/code&gt; key when the input belongs to a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f145d0c0fa0ba06400026843839a67b825d3107" translate="yes" xml:space="preserve">
          <source>Cypress automatically normalizes the &lt;code&gt;cy.location()&lt;/code&gt; command and strips out extraneous values and properties found in &lt;code&gt;window.location&lt;/code&gt;. Also, the object literal yielded by &lt;code&gt;cy.location()&lt;/code&gt; is just a basic object literal, not the special &lt;code&gt;window.location&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe542103b183548d306ffcb355167f3b048a84f3" translate="yes" xml:space="preserve">
          <source>Cypress automatically prepends the &lt;code&gt;http://&lt;/code&gt; protocol to common hosts. If you&amp;rsquo;re not using one of these 3 hosts, then make sure to provide the protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babeb9d70f2af57eb60b9647c2cec2b5f4b05efc" translate="yes" xml:space="preserve">
          <source>Cypress automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt; environment variable and uses that proxy for all HTTP and HTTPS traffic. If an &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variable is set, HTTPS traffic will use that proxy instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83a4b79b348fb55a78e735598e4af406e143324" translate="yes" xml:space="preserve">
          <source>Cypress automatically retries &lt;code&gt;cypress verify&lt;/code&gt; and &lt;code&gt;cypress run&lt;/code&gt; commands by starting its own Xvfb server on Linux if the first attempt fails due to possible &lt;code&gt;DISPLAY&lt;/code&gt; misconfiguration. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;#4034&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea1daf076563864117140a361307480f75692cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically runs this command &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear localStorage inside a single test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ba96363233abebd8a8d6249e317b340963d2f6" translate="yes" xml:space="preserve">
          <source>Cypress automatically scaffolds out a suggested folder structure for organizing your fixtures on every new project. By default it will create an &lt;code&gt;example.json&lt;/code&gt; file when you add your project to Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eeec7102c0df2fcb69a2d62603edbeb383c0dd" translate="yes" xml:space="preserve">
          <source>Cypress automatically sets &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; based on the response &lt;code&gt;body&lt;/code&gt; you stub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8537b0319700a7c0b5584023688134eb9c4f8c3f" translate="yes" xml:space="preserve">
          <source>Cypress automatically traveled back in time to a snapshot of when that command resolved. Additionally, since &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; finds DOM elements on the page, Cypress also highlights the element and scrolls it into view (to the top of the page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dc4e0c2575d42f4d4738679fbf1995e0d60fd2" translate="yes" xml:space="preserve">
          <source>Cypress automatically validates your fixtures. If your &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt; files contain syntax errors, they will be shown in the Command Log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b4f83152eb81b3029883b9f05f1707ebae0c08" translate="yes" xml:space="preserve">
          <source>Cypress automatically waits for the network call to complete before proceeding to the next command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f239706295d2bc14c4317941e9e5548f210e527" translate="yes" xml:space="preserve">
          <source>Cypress binaries can now be pointed to a staging environment with &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;#813&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898b813e518d7e021000e6b2dfe3532750575a81" translate="yes" xml:space="preserve">
          <source>Cypress blurs other focused elements first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b9d7b438082a441faad059e0d4791d0912a368" translate="yes" xml:space="preserve">
          <source>Cypress builds on these popular tools and frameworks that you &lt;em&gt;hopefully&lt;/em&gt; already have some familiarity and knowledge of. If not, that&amp;rsquo;s okay too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9665b9dff61c3e494294b89d7bf8037283563ddb" translate="yes" xml:space="preserve">
          <source>Cypress bundles &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;&lt;code&gt;Chai&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt;&lt;code&gt;Chai-jQuery&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt;&lt;code&gt;Sinon-Chai&lt;/code&gt;&lt;/a&gt; to provide built-in assertions. You can see a comprehensive list of them in &lt;a href=&quot;../references/assertions&quot;&gt;the list of assertions reference&lt;/a&gt;. You can also &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;write your own assertions as Chai plugins&lt;/a&gt; and use them in Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb48c90410e6d5e56a8225e337f6bcdbca2e881" translate="yes" xml:space="preserve">
          <source>Cypress bundles the popular &lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt; assertion library, as well as helpful extensions for &lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt; and &lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQuery&lt;/a&gt;, bringing you dozens of powerful assertions for free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912b8a05d7641a5157a8ac62f883eb478cd4d4ac" translate="yes" xml:space="preserve">
          <source>Cypress can alternatively be downloaded / installed / managed through the CLI utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d75cf98a5f411854c3f6e1877aa625ee49a1a2" translate="yes" xml:space="preserve">
          <source>Cypress can now be run through the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52e2dd568be1d72784cb2efddb9a6b58e7b0a3b" translate="yes" xml:space="preserve">
          <source>Cypress can now predict upcoming assertions and modifies its behavior until the intended state has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ad329d390b4141f10aee1a1a3819d515c27308" translate="yes" xml:space="preserve">
          <source>Cypress can now run tests in parallel across multiple virtual machines, or can be parallelized on a single machine. Cypress will automatically figure out, detect, and load balance all of your specs in the fastest and most efficient way possible. There is no configuration other than passing a &lt;code&gt;--parallel&lt;/code&gt; flag and spinning up multiple machines on your CI provider. From our experiments you can expect to see approximately 40% reduction in overall run time &lt;strong&gt;per machine&lt;/strong&gt; you add. However, attempting to run in parallel on a single machine requires server grade hardware with dozens (or even hundreds) of CPU&amp;rsquo;s and GB of RAM to run efficiently. A much better and simpler approach is to use a cluster of docker containers that are all isolated from each other. Any standard CI service (CircleCI, TravisCI, etc) comes with the ability to do this. We automatically tap into their environment variables to make parallelization possible without you having to configure anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a5ef31242deab64e195adfbe1a38ad88d51a91" translate="yes" xml:space="preserve">
          <source>Cypress can optionally act as your web server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a1e735505baab89a80b2a04906c502f6810599" translate="yes" xml:space="preserve">
          <source>Cypress can record your tests and make the results available in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3103ba5c9e66eaf766875de6213e0aa881db8c23" translate="yes" xml:space="preserve">
          <source>Cypress can run recorded tests in parallel across multiple machines since version &lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt;. While parallel tests can also technically run on a single machine, we do not recommend it since this machine would require significant resources to run your tests efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2173f81e07457a0732a40f22e5ee36f61611b691" translate="yes" xml:space="preserve">
          <source>Cypress can run tests in parallel across multiple machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa678a497e7e8bf52054c3a0c74b4695275f8108" translate="yes" xml:space="preserve">
          <source>Cypress can test anything that runs in a browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d211cdcd1a5f322d6f4a14cc03cba0a9600ed4e" translate="yes" xml:space="preserve">
          <source>Cypress cannot execute commands outside a running test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16683bbf2f77a2ab0c323cab4d75ab4ebba826e1" translate="yes" xml:space="preserve">
          <source>Cypress cannot yield you primitive values isolated away from other commands. That is because Cypress commands act internally like an asynchronous stream of data that only resolve after being affected and modified &lt;strong&gt;by other commands&lt;/strong&gt;. This means we cannot yield you discrete values in chunks because we have to know everything about what you expect before handing off a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929411f923ca9e9e94dd67b3031d641004ccbf97" translate="yes" xml:space="preserve">
          <source>Cypress checks a lot of things to determine an element&amp;rsquo;s visibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5100aad92c1ad903368d629fc93a277a4bbeb6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;disabled&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0383d22e8f7a1d254e65aabb4bc19e4542fe00c6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;readonly&lt;/code&gt; property is set during &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afb80f4962c57b5762a23322188807dbac49560" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing screenshots before &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your screenshots folder before a run, you can set &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71a5e72a4079ddb8202c2fec6ea8dad1d8104b0" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing videos before a &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your videos folder before a run, you can set &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931fce5e101a0a8e25b78524da1887402fccf4cf" translate="yes" xml:space="preserve">
          <source>Cypress comes built in with the ability to stub and spy with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; or modify your application&amp;rsquo;s time with &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; - which lets you manipulate &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;setInterval&lt;/code&gt;, amongst others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf7fe5af15a1269e870d3c1c6ecf84ef8120899" translate="yes" xml:space="preserve">
          <source>Cypress comes fully baked, batteries included. Here is a list of things it can do that no other testing framework can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3cc26261bd6489e55404d0b33fa67f81b9de37" translate="yes" xml:space="preserve">
          <source>Cypress comes with TypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;type declarations&lt;/a&gt; included. Modern text editors can use these type declarations to show IntelliSense inside spec files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3263deada359340d90252172c2459ae06008e43a" translate="yes" xml:space="preserve">
          <source>Cypress comes with a host of debugging tools to help you understand a test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6918efc1ebd09db151521ea9cdcdd52f82b3c772" translate="yes" xml:space="preserve">
          <source>Cypress comes with an npm CLI module that parses the arguments, starts the Xvfb server (if necessary), and then opens the Test Runner application built on top of &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. Some common situations on why you would want to do this are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123d9e5825e33fa08bddda9f842051a34f825320" translate="yes" xml:space="preserve">
          <source>Cypress comes with its own API for creating custom commands and overwriting existing commands. The built in Cypress commands use the very same API that&amp;rsquo;s defined below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdfa9e9ef6ea9ad9dab228a342f18673f60c6f1" translate="yes" xml:space="preserve">
          <source>Cypress comes with the ability to take screenshots, whether you are running in interactive mode using &lt;code&gt;cypress open&lt;/code&gt; or run mode using &lt;code&gt;cypress run&lt;/code&gt;, even in CI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822e1455e6de84e64fde2cd2d3ce65cecb59965c" translate="yes" xml:space="preserve">
          <source>Cypress commands do not &lt;strong&gt;return&lt;/strong&gt; their subjects, they &lt;strong&gt;yield&lt;/strong&gt; them. Remember: Cypress commands are asynchronous and get queued for execution at a later time. During execution, subjects are yielded from one command to the next, and a lot of helpful Cypress code runs between each command to ensure everything is in order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729afd450f7bf2e2cd6448908d04783640ee1a6a" translate="yes" xml:space="preserve">
          <source>Cypress commands now correctly execute in &lt;code&gt;after&lt;/code&gt; and &lt;code&gt;afterEach&lt;/code&gt; hooks on a failed test. Previously they would only run on passing tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;#203&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14e3d04185457907a347598c85d9c0d5ab87aa2" translate="yes" xml:space="preserve">
          <source>Cypress commands run &lt;a href=&quot;#Inside-the-browser&quot;&gt;inside of a browser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab666a9f5afc5d30724737c6653f8db7ea4b824" translate="yes" xml:space="preserve">
          <source>Cypress consists of a free, &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;, &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;locally installed&lt;/a&gt; Test Runner &lt;strong&gt;and&lt;/strong&gt; a Dashboard Service for &lt;a href=&quot;../dashboard/introduction&quot;&gt;recording your tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff4d303420678cfd6b7c0a4b073366dad8327c6" translate="yes" xml:space="preserve">
          <source>Cypress currently uses the following CI environment variables to determine a CI build ID for a test run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515af59aed8f8db0f27fc6db95f51d17827972fc" translate="yes" xml:space="preserve">
          <source>Cypress deprecations and warnings are now prefixed with: &lt;code&gt;Cypress Warning:&lt;/code&gt; to indicate this message is coming from Cypress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763e595fb34a1f3baf6fbdd1895303cd890c533d" translate="yes" xml:space="preserve">
          <source>Cypress detected a cross-origin error happened on page load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f72a17b05bf4b133aa5c20a789480165bc6c04" translate="yes" xml:space="preserve">
          <source>Cypress detected policy settings on your computer that may cause issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325dd4b2bfdf772a77b7097ad721056b251aafb4" translate="yes" xml:space="preserve">
          <source>Cypress detected that an uncaught error was thrown from a cross-origin script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a47945ef9b212ecfabd712f70225db3723ff6c" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands but returned a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e4d587eec2b6141ddce97b63ed14bf9f0d6415" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands in a custom command but returned a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d84a5590d4062daf8fa058059f7def2b68fbe0" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands but returned a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db96a42833e811427ab8d251534de0078a39f4f" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands in a custom command but returned a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2712424c6f7cb8f02f97a54bddb0ea5f22a2f689" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a368b765b44c35b055793ab5286d6232416268" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more &lt;code&gt;cy&lt;/code&gt; commands inside of that promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbe57fedcb0ec8156a1a6797eb83f82e9a698b9" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more cy commands inside of that promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc83e94e17aa9ccc64dc59ece4b256378a6e3907" translate="yes" xml:space="preserve">
          <source>Cypress does NOT see how the page actually looks though. For example, Cypress will not see if the CSS class &lt;code&gt;completed&lt;/code&gt; grays out the label element and adds a strike-through line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c95b94d0b8fd7690eedfb33cea9df265051859" translate="yes" xml:space="preserve">
          <source>Cypress does not &lt;em&gt;actually&lt;/em&gt; make an XHR request from the browser. We are actually making the HTTP request from the Cypress Test Runner (in Node). So, you won&amp;rsquo;t see the request inside of your Developer Tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d610cec1557cd166d9654c64cd8c224fc1afb70e" translate="yes" xml:space="preserve">
          <source>Cypress does not currently factor in &lt;code&gt;pointer-events: none&lt;/code&gt; in its clicking algorithm. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db74b0d98a1fbb4fd3339fa15414dfda2195948" translate="yes" xml:space="preserve">
          <source>Cypress does not have a &lt;strong&gt;cy.hover()&lt;/strong&gt; command. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue #10&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45075f56235c9a799b99f25b40f76f77e49428cc" translate="yes" xml:space="preserve">
          <source>Cypress does not instrument your code - you need to do it yourself. The golden standard for JavaScript code instrumentation is the battle-hardened &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;Istanbul&lt;/a&gt; and, luckily, it plays very nicely with the Cypress Test Runner. You can instrument the code as a build step through one of two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c33b9f4e03b79c3a7c63538042fedc9b0dafd8" translate="yes" xml:space="preserve">
          <source>Cypress does some pretty interesting things under the hood to make testing HTTPs sites work. Cypress enables you to control and stub at the network level. Therefore, Cypress must assign and manage browser certificates to be able to modify the traffic in real time. You&amp;rsquo;ll notice Chrome display a warning that the &amp;lsquo;SSL certificate does not match&amp;rsquo;. This is normal and correct. Under the hood we act as our own CA authority and issue certificates dynamically in order to intercept requests otherwise impossible to access. We only do this for the superdomain currently under test, and bypass other traffic. That&amp;rsquo;s why if you open a tab in Cypress to another host, the certificates match as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c377ae138a280a8ad38fce02a4ffbef0682666" translate="yes" xml:space="preserve">
          <source>Cypress does this by spawning an independent &lt;code&gt;child_process&lt;/code&gt; which then &lt;code&gt;requires&lt;/code&gt; in your &lt;code&gt;pluginsFile&lt;/code&gt;. This is similar to the way Visual Studio Code or Atom works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cedf95982948885977cf1529c65d7d5f8dd2d2" translate="yes" xml:space="preserve">
          <source>Cypress doesn&amp;rsquo;t kick off the browser automation magic until the test function exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b5602f5ef228d78219ad3c8d29551d39bd9977" translate="yes" xml:space="preserve">
          <source>Cypress ecosystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f1ef57db713a0be7dd35df852bfaaa169c649c" translate="yes" xml:space="preserve">
          <source>Cypress emits a series of events as it runs in your browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7697b2c3b28fc1b582d60ba45931016a20083da5" translate="yes" xml:space="preserve">
          <source>Cypress enables you to dynamically modify configuration values and environment variables from your plugin file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bc2ea98be122daf4c0d8f6c98e09eb5775e016" translate="yes" xml:space="preserve">
          <source>Cypress enables you to write all types of tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ea9b80d973a18938bef296490ce112a6efdba0" translate="yes" xml:space="preserve">
          <source>Cypress errors because it can&amp;rsquo;t interact with &amp;ldquo;dead&amp;rdquo; elements - just like a real user could not do this either. Understanding how this happens is very important - and it is often easy to prevent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4777d0266a47cfa11f194481866badc420bbef" translate="yes" xml:space="preserve">
          <source>Cypress executes the vast majority of its commands inside the browser, so there is no network lag. Commands execute and drive your application as fast as it is capable of rendering. To deal with modern JavaScript frameworks with complex UI&amp;rsquo;s, you use assertions to tell Cypress what the desired state of your application should be. Cypress will automatically wait for your application to reach this state before moving on. You are completely insulated from fussing with manual waits or retries. Cypress automatically waits for elements to exist and will never yield you stale elements that have been detached from the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1b2870f950b3fde184e954b99191b6652e3367" translate="yes" xml:space="preserve">
          <source>Cypress generates its own isolated profile apart from your normal browser profile. This means things like &lt;code&gt;history&lt;/code&gt; entries, &lt;code&gt;cookies&lt;/code&gt;, and &lt;code&gt;3rd party extensions&lt;/code&gt; from your regular browsing session will not affect your tests in Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a684e1df6a0cce82886d4de8be159f4fa97d4ce" translate="yes" xml:space="preserve">
          <source>Cypress gives you a simple interface to automatically preserve cookies for multiple tests. Cypress automatically clears all cookies before each new test starts by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e6f4e326ff6f2fa866e28e8f182966cbc8b898" translate="yes" xml:space="preserve">
          <source>Cypress gives you the option to dynamically alter configuration values. This is helpful when running Cypress in multiple environments and on multiple developer machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f2480b96f177a8e0b12efa536ecae6c9c752ec" translate="yes" xml:space="preserve">
          <source>Cypress guarantees that it will execute all of its commands &lt;em&gt;deterministically&lt;/em&gt; and identically every time they are run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1597eb500d51c17b6e174846d06a9b1da2669b52" translate="yes" xml:space="preserve">
          <source>Cypress has adopted Mocha&amp;rsquo;s &lt;code&gt;bdd&lt;/code&gt; syntax, which fits perfectly with both integration and unit testing. All of the tests you&amp;rsquo;ll be writing sit on the fundamental harness Mocha provides, namely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6660994651e3ce7098be26d760a8c7ebed6d298e" translate="yes" xml:space="preserve">
          <source>Cypress has also built-in &lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-chai&lt;/a&gt; support, so any &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;assertions supported by &lt;code&gt;sinon-chai&lt;/code&gt;&lt;/a&gt; can be used without any configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab90686c4f8a5c947ec43bf80d8e641fef08c3e5" translate="yes" xml:space="preserve">
          <source>Cypress has many more configuration options you can use to customize its behavior. Things like where your tests live, default timeout periods, environment variables, which reporter to use, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990f07860a55dfadc515ee3da5925e89501a8259" translate="yes" xml:space="preserve">
          <source>Cypress has some added functionality for quickly referring back to past subjects called &lt;a href=&quot;variables-and-aliases&quot;&gt;Aliases&lt;/a&gt;. It looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fba472528c23f86cb4086b98f22460e9770d00f" translate="yes" xml:space="preserve">
          <source>Cypress indicates whether an XHR sent back a stubbed response or actually went out to a server in its Command Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e449e9157a22090dbf2b4888a6b29849a9a5469" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element can be scrolled, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb85086ca242ec681a6590baf4669b8e7c421de" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element is hidden, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2c81dd7d916fd7f1168707d93a4fc48cb0a18a" translate="yes" xml:space="preserve">
          <source>Cypress is &lt;em&gt;Not&lt;/em&gt; Like jQuery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1be48039075d67d805c9f9754271324d4667091" translate="yes" xml:space="preserve">
          <source>Cypress is Like jQuery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e77f2456bfaf1b5e3e4af59168800202848f51" translate="yes" xml:space="preserve">
          <source>Cypress is a &lt;em&gt;functional&lt;/em&gt; Test Runner. It drives the web application the way a user would, and checks if the app &lt;em&gt;functions&lt;/em&gt; as expected: if the expected message appears, an element is removed, or a CSS class is added after the appropriate user action. A typical Cypress test, for example, can check if a toggled &amp;ldquo;Todo&amp;rdquo; item gets a class of &amp;ldquo;completed&amp;rdquo; after the &lt;code&gt;.toggle&lt;/code&gt; is checked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c9f872511024718a8f82a94e79bff7a77d8892" translate="yes" xml:space="preserve">
          <source>Cypress is a desktop application that is installed on your computer. The desktop application supports these operating systems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff8be0e34d6ada96a6ab8cfbee1ade53884ea40" translate="yes" xml:space="preserve">
          <source>Cypress is a global object that persists for the entirety of all of your tests. Any events you bind to Cypress will apply to all tests, and will not be unbound unless you manually unbind them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869d1c1fb28fbc8fb81e122dddb505e13fa8d5b1" translate="yes" xml:space="preserve">
          <source>Cypress is a next generation front end testing tool built for the modern web. We address the key pain points developers and QA engineers face when testing modern applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e39beda401fbd4a89a2b2e926247dcba77a2870" translate="yes" xml:space="preserve">
          <source>Cypress is a rather large and complex project involving a dozen or more submodules, and the default output can be overwhelming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dec926db8824334e668f9586c17b1871fdafe4a" translate="yes" xml:space="preserve">
          <source>Cypress is a specialized tool that does one thing really well: end-to-end testing web applications while they are under development. You should not use Cypress for things it is not designed for such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c264814ec44d1280406e94d0c1671c5b4b60a7" translate="yes" xml:space="preserve">
          <source>Cypress is built around creating &lt;strong&gt;reliable tests&lt;/strong&gt;. The secret to writing good tests is to provide as much &amp;ldquo;state&amp;rdquo; and &amp;ldquo;facts&amp;rdquo; to Cypress and to &amp;ldquo;guard it&amp;rdquo; from issuing new commands until your application has reached the desired state it needs to proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92cdd5b24a245c1191fdc720a8b79e88ca80485" translate="yes" xml:space="preserve">
          <source>Cypress is built on top of &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;. We support both Chai&amp;rsquo;s &lt;code&gt;BDD&lt;/code&gt; and &lt;code&gt;TDD&lt;/code&gt; assertion styles. Tests you write in Cypress will mostly adhere to this style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c57f41938cd9b0ac090b8bf45e2d2c936962329" translate="yes" xml:space="preserve">
          <source>Cypress is built using Promises that come from &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebird&lt;/a&gt;. However, Cypress commands do not return these typical Promise instances. Instead we return what&amp;rsquo;s called a &lt;code&gt;Chainer&lt;/code&gt; that acts like a layer sitting on top of the internal Promise instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faf31a6757e1c4ae29431d3f8d489f1d20486fa" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on prior to running &lt;code&gt;cypress open&lt;/code&gt; or &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e365f28a29f12706b59bc9f0e67855dcd44e09df" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on. &lt;strong&gt;Note:&lt;/strong&gt; you will see a LOT of messages when running with &lt;code&gt;DEBUG=...&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b20921d7e731dea1322bc38fe6f6705c9fffcdf" translate="yes" xml:space="preserve">
          <source>Cypress is built, and optimized around being a tool for your daily local development. In fact, after you start using Cypress for awhile, we believe that you may find it useful to even do &lt;strong&gt;all of your development&lt;/strong&gt; in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff357c77f2177aef35545ec53e59b68e24420ac0" translate="yes" xml:space="preserve">
          <source>Cypress is currently seeking to raise a Series A. This will enable us to grow the team and speed up development but seeking it has come at a ost for current development speed. If you have any VC connections &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;please send them our way&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6167ff978a76f79dcb98c7b0221f19ee3f15c2c1" translate="yes" xml:space="preserve">
          <source>Cypress is most often compared to Selenium; however Cypress is both fundamentally and architecturally different. Cypress is not constrained by the same restrictions as Selenium.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530766382e09d2dc10a8897366980430533ed9ac" translate="yes" xml:space="preserve">
          <source>Cypress is not a &lt;strong&gt;general purpose&lt;/strong&gt; web automation tool. It is poorly suited for scripting live, production websites not under your control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7f9f5cf0b1279f8cbe9aa37c8dc4bdb0444d3c" translate="yes" xml:space="preserve">
          <source>Cypress is not a general purpose &lt;a href=&quot;#Automation-restrictions&quot;&gt;automation tool&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526615ae0ec1acf1d4f4fba790ad50d392856af2" translate="yes" xml:space="preserve">
          <source>Cypress is now &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;! This project is licensed under the terms of the &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MIT License&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6870288c0bf703d92da969f4e9cef789d7d207c" translate="yes" xml:space="preserve">
          <source>Cypress is now able to run all the tests, run in the terminal, and includes support for Linux and CI. Additionally, most of the functionality of he GUI Desktop App can now be accessed through command line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f66f8ecf2056a79949b16440d796098a547bcd" translate="yes" xml:space="preserve">
          <source>Cypress is versioned like any other dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a743ccd2b0f3716c26a35f4d7f80691926a4c2" translate="yes" xml:space="preserve">
          <source>Cypress knows and understands everything that happens in your application synchronously. It is notified the moment the page loads and the moment the page unloads. It is impossible for Cypress to miss elements when it fires events. Cypress even knows how fast an element is animating and will &lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;wait for it to stop animating&lt;/a&gt; on specific network requests to finish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528ba75aed4f434c47560bef9d6da9f2c39b28c1" translate="yes" xml:space="preserve">
          <source>Cypress launches the browser in a way that&amp;rsquo;s different from a regular browser environment. But it launches in a way that we believe makes testing &lt;em&gt;more reliable&lt;/em&gt; and &lt;em&gt;accessible&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692a6e6fe5fbbcc9662d662e506defd16e9b5956" translate="yes" xml:space="preserve">
          <source>Cypress leverages jQuery&amp;rsquo;s powerful selector engine to help make tests familiar and readable for modern web developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67c67171ad18ef7700ef9747c888b650f8ac819" translate="yes" xml:space="preserve">
          <source>Cypress logo now displays in &lt;code&gt;About Page&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be170162f705ad538e216bd722a36b248db5af6d" translate="yes" xml:space="preserve">
          <source>Cypress maintains an official list of plugins created by us and the community. You can &lt;code&gt;npm install&lt;/code&gt; any of the plugins listed below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eec7714886f23b4a245c4c60f1361922c90494d" translate="yes" xml:space="preserve">
          <source>Cypress maintains some local application data in order to save user preferences and more quickly start up. Sometimes this data can become corrupted. You may fix an issue you have by clearing this app data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3a3c87011aaa111efec7a11f19ccd24c096ac8" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to chain assertions together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f13d8b6e04fe58a58be07c9d684afc3015bccf7" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a network requests and have it respond instantly with fixture data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b57339a0ea56ef3c65e019fc3c19d02f176b6c" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a response and control the &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, or even delay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38ca921828c241c4f255ac47fe69d10462a4f64" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to test the entire lifecycle of Ajax / XHR requests within your application. Cypress provides you direct access to the XHR objects, enabling you to make assertions about its properties. Additionally you can even stub and mock a request&amp;rsquo;s response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c93ad14bb0246449f98429e08b415399b34829b" translate="yes" xml:space="preserve">
          <source>Cypress modifies these scripts at the network level, and therefore there is a tiny performance cost to search the response streams for these patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811fe4df65580b03d4eff943c841ead3135de3e1" translate="yes" xml:space="preserve">
          <source>Cypress needs Internet access to work. Many companies require the use of a corporate proxy to access the Internet. If your company does this, many functions of Cypress will not work until you&amp;rsquo;ve configured Cypress to use your proxy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d4eb6be970ea73f708382a54e311cdd6ea0869" translate="yes" xml:space="preserve">
          <source>Cypress no longer accidentally prints internal Electron logs when running &lt;code&gt;cypress run&lt;/code&gt;. This bug would exhibit itself when verifying and running Cypress the first time after installation. You may have seen these logs when running in CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;#4255&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cc51c2b2224b4f4a9daad94683dd639628d74b" translate="yes" xml:space="preserve">
          <source>Cypress no longer automatically takes screenshots of skipped tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;#2368&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3156d4bb4f630fc7fa73151537b9412a8d784f96" translate="yes" xml:space="preserve">
          <source>Cypress no longer copies screenshots and videos to artifacts for CircleCI. Copying artifacts should be left up to the user to &lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;handle themselves in their &lt;code&gt;circle.yml&lt;/code&gt; file&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;#1592&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2ab12feaf129218f0f992204efb3d801ed5c29" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes on initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; when the 3rd party web server never ends the response. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;#272&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b7f9d5a04383de07b5d3c1bd3a023d2e0ea9d1" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when a 3rd party server sends invalid &lt;code&gt;gzip&lt;/code&gt; content. Also fixed issues with incorrectly gunzipping multibyte characters which would potentially lead to serving invalid HTML or JS. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;#1396&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;#1756&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a12afb076ef1e52aaca1bc10c8261a0f33b86c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when attempting to proxy a WebSocket connection that fails. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;#556&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33dea56f182ce0a958dfb8f69bd8cdad2615f6c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when you click links in the on-boarding screen called &amp;ldquo;To help you get started&amp;hellip;&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;#227&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf5e3314fe712144e121f79e85185a1edf085ad" translate="yes" xml:space="preserve">
          <source>Cypress no longer errors when you return a raw DOM element. It now correctly wraps this as the new subject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662c993f158297753b787211ea7612cc9b9534aa" translate="yes" xml:space="preserve">
          <source>Cypress no longer incorrectly errors when calling &lt;code&gt;cy.window().screenshot()&lt;/code&gt;, &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; or &lt;code&gt;cy.window().trigger()&lt;/code&gt; in an application with multiple iframes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;#4396&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9613de0a4beaefeee6631fab20cde459553391" translate="yes" xml:space="preserve">
          <source>Cypress no longer looks at your &lt;code&gt;tests&lt;/code&gt; directory for test files. Now, by default, it looks in the &lt;code&gt;cypress/integration&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e39cec9615eb3ba1fd855e11e20064f46c86a3" translate="yes" xml:space="preserve">
          <source>Cypress no longer reports &lt;code&gt;Electron&lt;/code&gt; as the browser that ran in the Dashboard Service when a different browser was run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;#854&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db1224dd2fc491a7132708262abf66a09cf8278" translate="yes" xml:space="preserve">
          <source>Cypress no longer watches files when run using &lt;code&gt;cypress run&lt;/code&gt;. This will fix some runs that were crashing with an &lt;code&gt;ENOSPC&lt;/code&gt; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;#4283&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd6ee3f44c165770366cf8839fc21620035e902" translate="yes" xml:space="preserve">
          <source>Cypress now &amp;ldquo;remembers&amp;rdquo; the last browser you had open and will suggest opening that whenever a project is opened. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;#193&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c129370f1a849563b825fbfa153c09b7124dffc" translate="yes" xml:space="preserve">
          <source>Cypress now always updates the remote URL whenever your application changes its URL through the vast variety of ways it can do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f120c7e6289fdd1715635ddb9c82ab8c8fdc496" translate="yes" xml:space="preserve">
          <source>Cypress now applies cookies to the browser which were cleared between redirects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;#224&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3603bc44f5cb1b55bb6efb44d02393248eb75beb" translate="yes" xml:space="preserve">
          <source>Cypress now auto reloads when spec files are modified in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;#712&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed403f7be7af1f52f83aba547f1245b4f1fae132" translate="yes" xml:space="preserve">
          <source>Cypress now automatically detects and waits for an element which is animating to stop animating. The threshold that Cypress considers &lt;em&gt;animating&lt;/em&gt; is set to a distance of &lt;code&gt;5px&lt;/code&gt; per &lt;code&gt;60fps&lt;/code&gt;. In other words, if your element is moving too fast for a user to interact with, then Cypress considers the element animating and will wait until it finishes before attempting to interact with it. When we say &amp;lsquo;interact&amp;rsquo; we mean apply command actions like &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt;, etc. Waiting for animations prevents a series of edge cases and weird bugs where Cypress was interacting with elements &lt;strong&gt;too&lt;/strong&gt; quickly which might cause undesired side effects in your application which are hard to track down. The downside to this implementation is that for every action Cypress must wait at least 2 run loops before applying actions. This slows down every action command by about &lt;code&gt;32ms&lt;/code&gt;. If your app does not use animations you may wish to turn off this behavior in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba3a64733b69b3e91faaceacb6498168dbdf3a1" translate="yes" xml:space="preserve">
          <source>Cypress now automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, and &lt;code&gt;NO_PROXY&lt;/code&gt; environment variables and proxies traffic accordingly through Cypress based on these values. This includes network traffic within your application under test, when downloading Cypress, and when accessing &amp;lsquo;Runs&amp;rsquo; within the Test Runner. Please read our new &lt;a href=&quot;proxy-configuration&quot;&gt;Proxy Configuration&lt;/a&gt; doc to understand more about proxy configuration in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;#672&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;#733&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;#939&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;#1039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;#1459&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;#1469&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;#1470&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;#1541&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;#1608&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;#2295&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;#3855&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;#3865&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;#1401&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;#3857&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2e6c8b6dea030866308e7fcc6cb0e7cf582019" translate="yes" xml:space="preserve">
          <source>Cypress now caches globally per version which prevents it from being installed multiple times across projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac2d5f8ebc9158a6a452af1a788c5b60982a897" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when the browser fails to connect. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;#333&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc910ea870f10321b946d125ca2c44f5bbf17ed6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when there is a spec bundle error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;#337&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dd40825f41486cd8bcceeacbf6bccef7d8a9d6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly handles &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events in situations where the browser has lost focus. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;#4039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;#1176&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;#1486&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de62baf1a6070a4d5f3a9edd4a54a31a88239cb7" translate="yes" xml:space="preserve">
          <source>Cypress now correctly injects and handles pages which are missing a &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, a &lt;code&gt;&amp;lt;body&lt;/code&gt;&amp;gt;, or even an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag. Previously it would bomb on pages missing these tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4710a8994af4c326324976203ed3aeaa6712062" translate="yes" xml:space="preserve">
          <source>Cypress now correctly proxies WebSockets that are pointed at the local Cypress server (typically &lt;code&gt;localhost:2020&lt;/code&gt;). Because most users use &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io&lt;/a&gt;, when Socket.io could not correctly connect over WebSockets it would fall back to XHR polling. You may notice many less XHR requests in your command log (which is the intended behavior).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df56a88e64d6ea14f917641e8e78d9f267bd0e9" translate="yes" xml:space="preserve">
          <source>Cypress now correctly re-bundles files even when &lt;code&gt;watchForFileChanges&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;#446&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;#347&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ae9e80a3f89597188fabb0e704a1964713f5da" translate="yes" xml:space="preserve">
          <source>Cypress now correctly sets cookies with &lt;code&gt;expirationDate&lt;/code&gt; in the past. Chrome did not handle these cookies as documented and our code did not take this into account. We also added a lot more &lt;code&gt;e2e&lt;/code&gt; tests around this behavior. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;#266&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ffe7bc1e7acc791633cbef90e171705686d984" translate="yes" xml:space="preserve">
          <source>Cypress now correctly works offline on Windows when visiting a localhost URL. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;#4763&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4143f2f941aff81c8c1ad7e2e56426ab6acfc5" translate="yes" xml:space="preserve">
          <source>Cypress now detects more instances of &lt;code&gt;browser&lt;/code&gt; installations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;#3183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;#3218&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4727c0d09f1978f4104e9fcadc3eaba6f4d87811" translate="yes" xml:space="preserve">
          <source>Cypress now detects the difference between a forced async &lt;code&gt;done&lt;/code&gt; test timeout vs a regular command timeout, and will throw the appropriate message indicating whether the user forgot to invoke &lt;code&gt;done&lt;/code&gt; or whether the timeout happened due to a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cd94a433b93cba5bd34d281a5d67123524fdf7" translate="yes" xml:space="preserve">
          <source>Cypress now detects when an async test is passed and not all commands have finished running. It will throw an explicit error message in this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744be5620fcce63aa0ae57f5536d83e6ae43f7cc" translate="yes" xml:space="preserve">
          <source>Cypress now displays a message when the Desktop App update is actually being applied instead of doing nothing and looking like it&amp;rsquo;s crashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68bd8e8c63f9f2332a0feb1d4bf064ecdffde86" translate="yes" xml:space="preserve">
          <source>Cypress now errors when the &lt;code&gt;body&lt;/code&gt; paramater passed to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; contains a circular reference. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;#4407&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0cd2929ec215c5295db280668b3ec042888c7c" translate="yes" xml:space="preserve">
          <source>Cypress now forces the initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not to be cached by the browser. This was incorrectly being cached which meant when you changed the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; it would not actually go out and fetch the new contents. Previously you had to check &lt;code&gt;Disable Cache&lt;/code&gt; in the &lt;code&gt;Network Tab&lt;/code&gt; inside of Chrome to prevent this bug. Unfortunately this has a significant performance drawback. If you use a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; before each test you will notice a degrade in performance because this request is no longer cached. This is a temporary problem until Cypress implements a more sophisticated caching strategy which optimizes these concerns. There is a lot to improve in this arena but it will take more time before it&amp;rsquo;s implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93202e47e1b4931127ee097a03291dfe2008d575" translate="yes" xml:space="preserve">
          <source>Cypress now handles &lt;code&gt;length&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; assertion chainers in a very specific way, providing a detailed message on failure, and utomatically slices out any stale element references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704f19938a8e4d948d29770a5393e4746cb56a92" translate="yes" xml:space="preserve">
          <source>Cypress now handles events property when a DOM element is removed during a &lt;code&gt;.click()&lt;/code&gt; event. As per the spec, if &lt;code&gt;mousedown&lt;/code&gt; causes element removal then &lt;code&gt;mouseup&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events will not be fired. Additionally if removal happens during &lt;code&gt;mouseup&lt;/code&gt; then &lt;code&gt;click&lt;/code&gt; event will not be fired. Also updated the &lt;code&gt;onConsole&lt;/code&gt; groups to only display and indicate the events which actually fired. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;#109&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e766ccfbec7c10396d6d3727f724c0b970370c" translate="yes" xml:space="preserve">
          <source>Cypress now has first class support for &lt;code&gt;fixtures&lt;/code&gt; (official docs coming soon).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df17d172497053f90d37d5123e9f797232c685d" translate="yes" xml:space="preserve">
          <source>Cypress now logs out your project&amp;rsquo;s API key on a failed CI run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c99456315cf184735162f3a9cb2521c0d798d29" translate="yes" xml:space="preserve">
          <source>Cypress now looks for any npm proxy configuration values as a fallback when no other system proxy configuration is found. This brings this feature into parity with how npm reads off proxy configuration values during an &lt;code&gt;npm install&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;#4719&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f1b05b1d93c2600eed83e37778c98d2231e9a1" translate="yes" xml:space="preserve">
          <source>Cypress now only scans for spec changes when the watcher sees changes, rather than polling to scan. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;#3069&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dd184af721037a9900e5add91157700bd646a5" translate="yes" xml:space="preserve">
          <source>Cypress now outputs its version when passed the &lt;code&gt;--version&lt;/code&gt; argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d4bec72af6de67265e487ea3f486ae4a571717" translate="yes" xml:space="preserve">
          <source>Cypress now overrides chai&amp;rsquo;s &lt;code&gt;match&lt;/code&gt; chainer and provides a specific error message when a non &lt;code&gt;regex&lt;/code&gt; value is provided. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;#58&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f4c6eaeb2cb8adabb7ab908bfbcd82e9477b99" translate="yes" xml:space="preserve">
          <source>Cypress now properly handles typing JavaScript object prototype methods (like &lt;code&gt;hasOwnProperty&lt;/code&gt;) into &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;#3423&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3168f20b1f0b45a27954dab14b95622ac9f6188e" translate="yes" xml:space="preserve">
          <source>Cypress now properly parses environment variables with empty values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;#3742&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f538943ef99235ac80dd5a7be8cdffbee23823" translate="yes" xml:space="preserve">
          <source>Cypress now properly supports partial matching of string values for assertions &lt;code&gt;contain.text&lt;/code&gt;, &lt;code&gt;contain.html&lt;/code&gt;, and &lt;code&gt;contain.value&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;#1969&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b5d0535dd1a71e0c59cedac1a5feb173e910fe" translate="yes" xml:space="preserve">
          <source>Cypress now requires a viewport to be issued at all times. By default it is &lt;code&gt;1000x660&lt;/code&gt; but can be changed in your &lt;code&gt;cypress.json&lt;/code&gt; file with he keys: &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f673d187b620c670db4b9b3aea919fd9a780c308" translate="yes" xml:space="preserve">
          <source>Cypress now retries multiple times (with a backoff strategy) when communicating with our API fails while recording runs. This will provide better feedback in situations when the API is temporarily unavailable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;#1590&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1a9d74cfa3ac161a7aecfa151401c4c6e7cb8c" translate="yes" xml:space="preserve">
          <source>Cypress now retries up to 3 times for the browser to connect during &lt;code&gt;cypress run&lt;/code&gt;. The warning / error messages were also updated to be clearer. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;#334&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d8726800d3f40efd84a65a018aab5ecc80b8d0" translate="yes" xml:space="preserve">
          <source>Cypress now scrolls all parent containers (not just &lt;code&gt;window&lt;/code&gt;) when attempting to &lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;check an element&amp;rsquo;s actionability&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;#569&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c3210e180ed5b888dbaac9f9f2b823ad8e541d" translate="yes" xml:space="preserve">
          <source>Cypress now silently restarts the server whenever it detects a change to &lt;code&gt;cypress.json&lt;/code&gt; - meaning you no longer have to manually reboot the server for changes to be picked up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeebc8b2da7b9ccb9e2e7bd76b842654098f814d" translate="yes" xml:space="preserve">
          <source>Cypress now throws a specific error message (with a link to further explanation) if you attempt to run commands outside of a test. Usually this happens accidentally when you write &lt;code&gt;cy.commands&lt;/code&gt; inside of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; block instead of the &lt;code&gt;it&lt;/code&gt;. I&amp;rsquo;ve wasted too much time and almost bombed entire presentations / demos so I&amp;rsquo;ve finally stopped this from ever happening again. If you ever see this error message, trust me, you will forever thank me.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ea85f8d7f19717172c574573373976dc8f7273" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; if any DOM member isn&amp;rsquo;t in the DOM, except for &lt;code&gt;exist&lt;/code&gt; assertions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d94ca29f1aa37e5db8fe5c3b257d9755394b81" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;code&gt;eventually.have.length&lt;/code&gt; assertions. Use implicit &lt;code&gt;{length: n}&lt;/code&gt; command options instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c42c31ebf42b105f44851eeae9239942c944df" translate="yes" xml:space="preserve">
          <source>Cypress now uses the body instead of headers to send external requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;#148&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ec351e8d632a320060c36e80e1664a3d2bd1b5" translate="yes" xml:space="preserve">
          <source>Cypress now verifies it can run on your system prior to actually running. It&amp;rsquo;ll do this for each new version the first time you try to use it. Errors it receives from attempting to run will bubble up nicely, so you&amp;rsquo;ll get output for things like &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;missing linux dependencies&lt;/a&gt; instead of absolutely &lt;em&gt;nothing&lt;/em&gt; like before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984f4ffa7852c85c3302af6478a0498d6343532e" translate="yes" xml:space="preserve">
          <source>Cypress now waits &lt;code&gt;20s&lt;/code&gt; (which matches &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;) for the new page to load instead of &lt;code&gt;4s&lt;/code&gt; previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b0426deef0061b526f8597fa02ab47947651a5" translate="yes" xml:space="preserve">
          <source>Cypress now watches all the &lt;code&gt;plugins file&lt;/code&gt;&amp;lsquo;s entire dependency tree to make iterating on plugins easier. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;#1407&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0561a236371729207fe6da2edefa2ac1e0c7e672" translate="yes" xml:space="preserve">
          <source>Cypress now works with JS applications that use &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt; routing (commonly known as &lt;code&gt;HTML5 History&lt;/code&gt;) without having to change any application code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f444bd6f0a4d4b9f5d672125e108992bf7bae" translate="yes" xml:space="preserve">
          <source>Cypress offers several different timeout values based on the type of command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c41c9b5e30ed427d48d319c908836d109428aa" translate="yes" xml:space="preserve">
          <source>Cypress only retries commands that query the DOM: &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt;, etc. You can check if a particular command is retried by looking at the &amp;ldquo;Assertions&amp;rdquo; section in its API documentation. For example, &amp;ldquo;Assertions section&amp;rdquo; of &lt;a href=&quot;../../api/commands/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; tells us that the command is retried until all assertions that follow it are passing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e756cb2f95cf56d3bca3843c640a7f469ea40d" translate="yes" xml:space="preserve">
          <source>Cypress opens the test in a browser installed on your system. You can read more about how we do this in &lt;a href=&quot;../guides/launching-browsers&quot;&gt;Launching Browsers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0173abbad11121f52075c8a906e19a118be30de" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai &lt;code&gt;exist&lt;/code&gt; assertion to really mean: &amp;ldquo;does this subject exist in the document?&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146ca552c9473ccc324088efa1279a8217bec4cc" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai&amp;rsquo;s default inspection function for DOM elements meaning instead of seeing &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; you will now ee the nicely formatted Cypress DOM element like: &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d448eae4e8a6893333958b808048d2e7f256de" translate="yes" xml:space="preserve">
          <source>Cypress prevents you from being forced to always &amp;lsquo;act like a user&amp;rsquo; to generate the state of a given situation. With Cypress you can programmatically interact and control your application. You no longer have to use your UI to build up state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0901f17f6a6bfd86ef0e8bdc9965616ef93b875d" translate="yes" xml:space="preserve">
          <source>Cypress prints out a table of key events that detail the keys that were pressed when clicking on type within the &lt;a href=&quot;#Command-Log&quot;&gt;Command Log&lt;/a&gt;. Each character will contain the &lt;code&gt;which&lt;/code&gt; character code and the events that happened as a result of that key press.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c4ca1628d1f2fc135ce180acaedd95781e4ac5" translate="yes" xml:space="preserve">
          <source>Cypress provides a nice &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt; that gives you a visual structure of suites, tests, and assertions. Soon you&amp;rsquo;ll also see commands, page events, network requests, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5b7d9bd0b3cb9bb9f611633a4c8aae5b0ddab3" translate="yes" xml:space="preserve">
          <source>Cypress provides a simple but powerful algorithm when &lt;a href=&quot;interacting-with-elements&quot;&gt;interacting with elements.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7119a7722e27be27408050d772ff83cb2fc37abe" translate="yes" xml:space="preserve">
          <source>Cypress relies on many best-of-breed open source testing libraries to lend stability and familiarity to the platform from the get-go. If you&amp;rsquo;ve been testing in JavaScript, you&amp;rsquo;ll recognize many old friends in this list. Understand how we exploit them and hit the ground running with Cypress!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d62bad629e117914d487019b841c0cd760fd4c" translate="yes" xml:space="preserve">
          <source>Cypress respects all default browser behavior when events are canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aca486d8a9674fc068dbb213faf1eb126b6bf8d" translate="yes" xml:space="preserve">
          <source>Cypress respects not firing subsequent events if previous ones were canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8f0d859d277d8becfc00ac96e5e1d797ba607d" translate="yes" xml:space="preserve">
          <source>Cypress runs a series of async lifecycle events that reset state between tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eee613666e00d11cbbab69e67875033066feba" translate="yes" xml:space="preserve">
          <source>Cypress runs as fast as your browser can render content. You can watch tests run in real time as you develop your applications. TDD FTW!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b35d8cbe457fb4f8dea21ac2f6bee59ef38af" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Configuration changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993523b15d16a2320c718b9bd7eeab7048b6023f" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Environment variables added or changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2f59d18eff47414ce290463f65cbe49d47a359" translate="yes" xml:space="preserve">
          <source>Cypress runs several calculations to ensure an element can &lt;em&gt;actually&lt;/em&gt; be interacted with like a real user would. If you&amp;rsquo;re seeing this error, the solution is often obvious. You may need to &lt;em&gt;guard&lt;/em&gt; your commands (due to a timing or an animation issue).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f200198c8ba764235a6c2c637121db6109d4e7" translate="yes" xml:space="preserve">
          <source>Cypress runs tests in a unique interactive runner that allows you to see commands as they execute while also viewing the application under test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e332a0c5a468947f22565f93f6dc999aed977f7" translate="yes" xml:space="preserve">
          <source>Cypress ships with &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;official type declarations&lt;/a&gt; for &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. This allows you to write your tests in TypeScript. All that is required is a little bit of configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9a32a140f11895887c01b52c52843f2ff296c2" translate="yes" xml:space="preserve">
          <source>Cypress should run on &lt;strong&gt;all&lt;/strong&gt; CI providers. We have provided some example projects and configuration for some CI providers to help you get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f193d6f03ef2d0aa86e8bd9826847c232c8503a" translate="yes" xml:space="preserve">
          <source>Cypress should work with self signed SSL certificates now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc644f8041fb8424264f0835f0deccd81152ba2" translate="yes" xml:space="preserve">
          <source>Cypress spawns your &lt;code&gt;pluginsFile&lt;/code&gt; in its own child process so it is isolated away from the context that Cypress itself runs in. That means you cannot accidentally modify or change Cypress&amp;rsquo; own execution in any way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e547cc7614418821eb9d223a6953d496b64b40" translate="yes" xml:space="preserve">
          <source>Cypress supports both BDD (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;) and TDD (&lt;code&gt;assert&lt;/code&gt;) style assertions. &lt;a href=&quot;../references/assertions&quot;&gt;Read more about assertions.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff507ca9cfd843fa195d0094c8b6d5053885bb9e" translate="yes" xml:space="preserve">
          <source>Cypress supports both ES2015 modules and CommonJS modules. You can import/require npm modules as well as local modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038e3f502d60c8beca841390c095d4561733318b" translate="yes" xml:space="preserve">
          <source>Cypress supports custom reporters, whether local to your project or installed through &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc9f13371034d720435a8eb69b7cd6ab176fb37" translate="yes" xml:space="preserve">
          <source>Cypress takes snapshots of your application and enables you to time travel back to the state it was in when commands ran.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5be4836516e1e2770a2da478822eed0a699871" translate="yes" xml:space="preserve">
          <source>Cypress taskbar icon now displays correctly in OS X dark theme. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;#132&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4972b25ec91ce75b0b59d3618328eb5e19b7cdd" translate="yes" xml:space="preserve">
          <source>Cypress tries to act like a human user would using the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479947688007d4c97106b916ae2f1db22b00a060" translate="yes" xml:space="preserve">
          <source>Cypress type definition now allow a &lt;code&gt;timeout&lt;/code&gt; option in &lt;a href=&quot;../../api/commands/hash&quot;&gt;&lt;code&gt;cy.hash()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;#3844&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88b9ca448ccd87f8b6ec70c9370c6e14674014d" translate="yes" xml:space="preserve">
          <source>Cypress ultimately controls the entire automation process from top to bottom, which puts it in the unique position of being able to understand everything happening in and outside of the browser. This means Cypress is capable of delivering more consistent results than any other testing tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc8460227cb9de3a009bcbf7aaffc8c72982fcb" translate="yes" xml:space="preserve">
          <source>Cypress used to automatically include any scripts in the &lt;code&gt;supportFolder&lt;/code&gt; before your test files. However, automatically including all the files in a certain directory is somewhat magical and unintuitive, and requires creating globals for the purpose of utility functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6853d537d62543dcc53050554902c96c0145fe4f" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@cypress/commit-info&lt;/a&gt; package to extract git information to associate with the run (e.g. branch, commit message, author).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb017039428bd9695548918b11321d9646f00783" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt; node module for both the back end server process, and for everything running in the browser (called the driver).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e22057dbd51fd0e4767f5d9d5b6fe56128a778" translate="yes" xml:space="preserve">
          <source>Cypress uses your &lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt; and &lt;a href=&quot;#Record-key&quot;&gt;Record Key&lt;/a&gt; together to uniquely identify projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28e3238226e8e5bf814bfa4ea1724d3591929fa" translate="yes" xml:space="preserve">
          <source>Cypress utilizes a Chrome extension within the Test Runner in order to run properly. If you or your company whitelist specific Chrome extensions, this may cause problems with running Cypress. You will want to ask your administrator to whitelist the Cypress extension ID below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e675859d662a062a4c171a9f1d08c57a4ca629d7" translate="yes" xml:space="preserve">
          <source>Cypress waits for Promises to resolve before continuing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c00835f4dc24cefa4efa7561d09d2e10eaa482" translate="yes" xml:space="preserve">
          <source>Cypress webpack Preprocessor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d4f75b63aca1715daf3b46c5b502c77d230338" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.exec()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0609de7c3cdae19760f6f992063e6008dfcf272f" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.task()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406c613e6876b8de52afdd2fa25e20b62f46f937" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;strip off&lt;/em&gt; the &lt;code&gt;CYPRESS_&lt;/code&gt; when adding your environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1e056fcee4b7be242d9b9374156e4ae810a750" translate="yes" xml:space="preserve">
          <source>Cypress will assign each spec file to an available machine based on our &lt;a href=&quot;#Balance-strategy&quot;&gt;balance strategy&lt;/a&gt;. Due to this balance strategy, the run order of the spec files is not guaranteed when parallelized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71366c925d9bca56f0b4179d4e45622fb21fad9" translate="yes" xml:space="preserve">
          <source>Cypress will automatically &lt;em&gt;wait&lt;/em&gt; for elements to pass their default assertions. Just like with explicit assertions you&amp;rsquo;ve added, all of these assertions share the &lt;em&gt;same&lt;/em&gt; timeout values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc70e89236c64d2239c242879042a3d4d1d96bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the right authorization headers if you&amp;rsquo;re attempting to visit an application that requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;Basic Authentication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9bcdd8a00e9ea3873797d9d170893ab1ae4b55" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the server and routes to the very next &lt;code&gt;cy.visit()&lt;/code&gt; and does so immediately before any of your application code runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fd4f3428ed96a217bfd6ea8fc4d1515e5cf2b8" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attach this header at the network proxy level, outside of the browser. Therefore you &lt;strong&gt;will not&lt;/strong&gt; see this header in the Dev Tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c9314c2b4f0cc413e6e36af85e441eb6d5d3a6" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attempt to serve your files if you don&amp;rsquo;t provide a host. The path should be relative to your project&amp;rsquo;s root folder (where &lt;code&gt;cypress.json&lt;/code&gt; is located).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2f3c92bd2819310aa05480cbe7b24c2b403524" translate="yes" xml:space="preserve">
          <source>Cypress will automatically balance your spec files across the available machines in your CI provider. Cypress calculates which spec file to run based on the data collected from previous runs. This ensures that your spec files run as fast as possible, with no need for manual configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bc0f3740be999ed993daff018d09755f5d0c0d" translate="yes" xml:space="preserve">
          <source>Cypress will automatically calculate a &lt;strong&gt;unique selector&lt;/strong&gt; to use targeted element by running through a series of selector strategies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c09141d31ee454fa40ad3e12fb02c509ba19807" translate="yes" xml:space="preserve">
          <source>Cypress will automatically clear all cookies &lt;strong&gt;before&lt;/strong&gt; each test run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5585ef906a49c34abd99817fa602271f93287bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically detect the type of browser supplied and launch it for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4fad3016d78365d8b99afdd0809a57b1a103ae" translate="yes" xml:space="preserve">
          <source>Cypress will automatically determine if an element is animating and wait until it stops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23da5b17758d9e7d4f841343cbb8a6b0d4ff29bf" translate="yes" xml:space="preserve">
          <source>Cypress will continuously attempt to interact with the element until it eventually times out. If you&amp;rsquo;d like to force Cypress to interact with the element there are a few options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b891f51aad5b809dd4cf0e5e34f297407b2fdf" translate="yes" xml:space="preserve">
          <source>Cypress will create a &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videosFolder&lt;/code&gt;&lt;/a&gt; to store the screenshots and videos taken during the testing of your application. Many users will opt to add these folders to their &lt;code&gt;.gitignore&lt;/code&gt; file. Additionally, if you are storing sensitive environment variables in your &lt;code&gt;cypress.json&lt;/code&gt; or &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt;&lt;code&gt;cypress.env.json&lt;/code&gt;&lt;/a&gt;, these should also be ignored when you check into source control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cb8fd34ae7f83f958af119167b50e6cf003b49" translate="yes" xml:space="preserve">
          <source>Cypress will error and exit with status 1 if no specs were found during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;#1585&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373c9016054078fb9acea27857f55ea29665668f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;input&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key modifies or changes the value of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627967f432d1ceb4757cb73a73a87d9091bc0d6f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;keypress&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if that key is supposed to actually fire &lt;code&gt;keypress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c53d051fa8bc8d03d8f5d5133be0a37808127e2" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;textInput&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key would have inserted an actual character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7779f36036ddf9ea77e21c8f2ba5265d9196cc5e" translate="yes" xml:space="preserve">
          <source>Cypress will ignore this element preference order if you pass a selector argument to &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e77e0383d1aa1a1f3c782bd0489a86f9de8325" translate="yes" xml:space="preserve">
          <source>Cypress will immediately fail with the following test code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48623dd3ef33bf76508adf868a3a2bad8137d3d3" translate="yes" xml:space="preserve">
          <source>Cypress will no longer incorrectly revert to a previous test run&amp;rsquo;s snapshot when tests are re-run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fddad0e92489f19cbb4337c046170574053b9d4" translate="yes" xml:space="preserve">
          <source>Cypress will now &lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;display the &lt;strong&gt;resolved&lt;/strong&gt; configuration values when you open a project&lt;/a&gt;. This tells you the source of all config values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dc61f3be6f61640026475b2ed988ca8ce68844" translate="yes" xml:space="preserve">
          <source>Cypress will now automatically prompt you to add a project when using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a project that has not yet been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcf240396967ced122d7e48b9c1d58eb2ccc9b8" translate="yes" xml:space="preserve">
          <source>Cypress will now display &lt;code&gt;cypress.json&lt;/code&gt; parse errors when attempting to boot a project when there is a syntax error in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f179a61c65d86072e367f13cd1cb9d33746394f" translate="yes" xml:space="preserve">
          <source>Cypress will now output its internal logger directly to the console when &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env var is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1ef6bc49f222fca87099bb1aa6579caa469a68" translate="yes" xml:space="preserve">
          <source>Cypress will now scroll past multiple elements that cover up an element to be interacted with. It also now factors in elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;#571&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;#565&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89757a0bd83b5d48651207fb2e50c0887e271566" translate="yes" xml:space="preserve">
          <source>Cypress will prefix the URL with the &lt;code&gt;baseUrl&lt;/code&gt; configured in your &lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;network options&lt;/a&gt; if you&amp;rsquo;ve set one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2923d48f818119211f8df485af9cb43493e40b06" translate="yes" xml:space="preserve">
          <source>Cypress will resolve your command with whatever the final Cypress command yields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b94a3e9f4bbac7f6edd3b8cd91bd0bd7542db67" translate="yes" xml:space="preserve">
          <source>Cypress will restore the viewport in the snapshot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc72c81e5b0dbdb649a52327f5ae530b6783eac" translate="yes" xml:space="preserve">
          <source>Cypress will retry for up to 10 seconds to find a visible element of class &lt;code&gt;mobile-nav&lt;/code&gt; with text containing &amp;ldquo;Home&amp;rdquo;. For more examples, read the &lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;Timeouts&lt;/a&gt; section in the &amp;ldquo;Introduction to Cypress&amp;rdquo; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e1cf97edb633b6cef84f1bec344f3e26c2f25b" translate="yes" xml:space="preserve">
          <source>Cypress will then attempt to download a binary with this format: &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5b8355a287fe73ff99a7efb88b3722d96d5950" translate="yes" xml:space="preserve">
          <source>Cypress will wait for the element to pass all of these checks for the duration of the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; (described in depth in the &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertions&lt;/a&gt; core concept guide).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febb6785a1443da09d12c14f6b4fc04880e72315" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to connect to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to log in or record test runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031f5b422de01b60e0479e8e321945c6bf4e10ea" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to load web pages besides &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecc1917b985f6084f8df6dd1f46528c5b586781" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to warn you if your &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c2d8e90c94c986618f0cc3be1cee17c5de3951" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t resolve your commands until all of its assertions pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe3fb25bc32272d746a39562d1491cf3cb3c322" translate="yes" xml:space="preserve">
          <source>Cypress wraps all DOM queries with robust retry-and-timeout logic that better suits how real web apps work. We trade a minor change in how we find DOM elements for a major stability upgrade to all of our tests. Banishing flake for good!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4100350f85b3c001978fb5bd18e2b8283720ba94" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; internal &lt;code&gt;babel&lt;/code&gt; will no longer attempt to load your project&amp;rsquo;s &lt;code&gt;.babelrc&lt;/code&gt;. This helps avoid potential version conflicts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;#312&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2db94bca79e7029cf2807d70ac5b3241fdde73" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; parallelization strategy is file-based, so in order to utilize parallelization, your tests will need to be split across separate files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc99c30c06bda705ceec845c46d4a4e18c68fe2" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s APIs are built very differently from what you&amp;rsquo;re likely used to: but these design patterns are incredibly intentional. We&amp;rsquo;ll go into more detail later in this guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2cdd4f3bf1d8436b31a761930ca523a7747615" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s recognition of websites attempting framebusting has been updated to include framebusting code wrapped within &lt;code&gt;()&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;#3267&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b17926d61640ed32ee971542023387239ac913" translate="yes" xml:space="preserve">
          <source>Cypress.$</source>
          <target state="translated">Cypress.$</target>
        </trans-unit>
        <trans-unit id="189b5b340dd09a196c6d1da1bb40bed28e40e664" translate="yes" xml:space="preserve">
          <source>Cypress.Blob</source>
          <target state="translated">Cypress.Blob</target>
        </trans-unit>
        <trans-unit id="c1f7c100ebfa53ec89fd0852dc1ef6a6e5194998" translate="yes" xml:space="preserve">
          <source>Cypress.Cookies</source>
          <target state="translated">Cypress.Cookies</target>
        </trans-unit>
        <trans-unit id="bc363da76edadf66791aa9b232b5d879f34a7417" translate="yes" xml:space="preserve">
          <source>Cypress.Promise</source>
          <target state="translated">Cypress.Promise</target>
        </trans-unit>
        <trans-unit id="5ce7498b0244c0b2e293007e8df6457394962f77" translate="yes" xml:space="preserve">
          <source>Cypress.Screenshot</source>
          <target state="translated">Cypress.Screenshot</target>
        </trans-unit>
        <trans-unit id="e3f31cf625c64e519992fd9a557160bf7aacd536" translate="yes" xml:space="preserve">
          <source>Cypress.SelectorPlayground</source>
          <target state="translated">Cypress.SelectorPlayground</target>
        </trans-unit>
        <trans-unit id="34ae4903acad6585ae7e38b834b9236b5a51c37a" translate="yes" xml:space="preserve">
          <source>Cypress.Server</source>
          <target state="translated">Cypress.Server</target>
        </trans-unit>
        <trans-unit id="54d6f336939dfac4936db7a675545d1c454be51c" translate="yes" xml:space="preserve">
          <source>Cypress._</source>
          <target state="translated">Cypress._</target>
        </trans-unit>
        <trans-unit id="38aee7ce60c3cf0bfdbe493333480f2fc07f7dec" translate="yes" xml:space="preserve">
          <source>Cypress.addParentCommand() / Cypress.addDualCommand() / Cypress.addChildCommand() has been removed and replaced by Cypress.Commands.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8962d721dd9c7ac73251a37f00707f0c4fb16fb3" translate="yes" xml:space="preserve">
          <source>Cypress.arch</source>
          <target state="translated">Cypress.arch</target>
        </trans-unit>
        <trans-unit id="3be6d8c117d53974fe7883c45665db273d8130af" translate="yes" xml:space="preserve">
          <source>Cypress.browser</source>
          <target state="translated">Cypress.browser</target>
        </trans-unit>
        <trans-unit id="ae2b6d33ccd03711ee320fd83db92c1e20b462e4" translate="yes" xml:space="preserve">
          <source>Cypress.config</source>
          <target state="translated">Cypress.config</target>
        </trans-unit>
        <trans-unit id="718c9831c14fdf0f554ae6c92dfd790738648c97" translate="yes" xml:space="preserve">
          <source>Cypress.dom</source>
          <target state="translated">Cypress.dom</target>
        </trans-unit>
        <trans-unit id="e78d83f61d20ce8db3d99c52f7373d855d7162e6" translate="yes" xml:space="preserve">
          <source>Cypress.env</source>
          <target state="translated">Cypress.env</target>
        </trans-unit>
        <trans-unit id="3f3a3836fb4094ee807d24662de168188d477d60" translate="yes" xml:space="preserve">
          <source>Cypress.isCy</source>
          <target state="translated">Cypress.isCy</target>
        </trans-unit>
        <trans-unit id="872e4ebcf7f8506b760930988f46ac8a5cfc904e" translate="yes" xml:space="preserve">
          <source>Cypress.log</source>
          <target state="translated">Cypress.log</target>
        </trans-unit>
        <trans-unit id="f9ed79a62532751aaf5257c1c6e3e389aa049fc8" translate="yes" xml:space="preserve">
          <source>Cypress.log()</source>
          <target state="translated">Cypress.log()</target>
        </trans-unit>
        <trans-unit id="13cbbc294769af7e07d4f4e358bab65f54aece6d" translate="yes" xml:space="preserve">
          <source>Cypress.minimatch</source>
          <target state="translated">Cypress.minimatch</target>
        </trans-unit>
        <trans-unit id="1378324e731b82bcc517e23f5825080965e600a0" translate="yes" xml:space="preserve">
          <source>Cypress.moment</source>
          <target state="translated">Cypress.moment</target>
        </trans-unit>
        <trans-unit id="efd21062160ac9c7215a8d85d8e0bf925f907e97" translate="yes" xml:space="preserve">
          <source>Cypress.platform</source>
          <target state="translated">Cypress.platform</target>
        </trans-unit>
        <trans-unit id="ea4b110b0b641df79aff5ef4583b701477ded5a5" translate="yes" xml:space="preserve">
          <source>Cypress.spec</source>
          <target state="translated">Cypress.spec</target>
        </trans-unit>
        <trans-unit id="8b78be8c41500c1cc7b574e782c821c439f2705b" translate="yes" xml:space="preserve">
          <source>Cypress.version</source>
          <target state="translated">Cypress.version</target>
        </trans-unit>
        <trans-unit id="9dbaf1b497f642fc5077a00743bd4c592254a2cf" translate="yes" xml:space="preserve">
          <source>CypressError: Timed out retrying: Expected to find element: &amp;lsquo;&amp;hellip;&amp;rsquo;, but never found it. Queried from element: &amp;lt;&amp;hellip;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806b2ff53cd2bfa7527e0fceb87c041ecaccb1f3" translate="yes" xml:space="preserve">
          <source>DOM Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a30029edb9f134295b2bdef3e55f483f2e18a8" translate="yes" xml:space="preserve">
          <source>DOM commands which can retry now correctly support &lt;code&gt;{timeout: num}&lt;/code&gt; options which will raise the timeout beyond the standard &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550ac43b754afc13499c39a83489992e4a0f17d" translate="yes" xml:space="preserve">
          <source>DOM element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f873a1aac119c9afd1611e5c7de8d7ea8b257520" translate="yes" xml:space="preserve">
          <source>DOM state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e897a6e6446020dfb7ef098df202bcc255e30e9c" translate="yes" xml:space="preserve">
          <source>Dangling state is your friend:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87f47b47e4d5794d53fe0734c49417bd046cde0" translate="yes" xml:space="preserve">
          <source>Dashboard</source>
          <target state="translated">Dashboard</target>
        </trans-unit>
        <trans-unit id="d76039c62c0c0760db5d9e7f5e49044f82b0485b" translate="yes" xml:space="preserve">
          <source>Dashboard Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170b64341d044d8b026478c6319fd302d29b2fdc" translate="yes" xml:space="preserve">
          <source>Dashboard redesign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160d689ae355cbd067de0a3700069f34acfbb9f2" translate="yes" xml:space="preserve">
          <source>Date Inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="9a0e7dc97fa6276fd01e10ae6394c1eb8228de5e" translate="yes" xml:space="preserve">
          <source>Debug Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caff9ed2c3b1a608de7ce91dc511ac835a257f72" translate="yes" xml:space="preserve">
          <source>Debug just like you always do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df5e0f04e3242a95995ef4f5f6b88cd9f8c115a" translate="yes" xml:space="preserve">
          <source>Debug logs in the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36ec7235f19d642416fab523affd33299a76f5b" translate="yes" xml:space="preserve">
          <source>Debug the moment a test fails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2582a032b66fb5fa3c7ff1b5cdce14c54e2e45d1" translate="yes" xml:space="preserve">
          <source>Debuggability</source>
          <target state="translated">Debuggability</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="18d225a83f7cd5b7c354d6876e5542ec3fee2ac2" translate="yes" xml:space="preserve">
          <source>Debugging commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359646351172857a2209695ce7e529c3651364e7" translate="yes" xml:space="preserve">
          <source>Debugging tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb2fb41843843a2f3f6412acbde67da5de89b98" translate="yes" xml:space="preserve">
          <source>Debugging will be turned on until you explicitly turn it off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccba18044ef6b943060a02194e24763943b748cc" translate="yes" xml:space="preserve">
          <source>Dedicated file just for environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="002755c76d6ad9dbc7b8957cb1d21b29856bd9b1" translate="yes" xml:space="preserve">
          <source>Default Assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b8594d4d7d046a39912315ba4f5c50bb8654e6" translate="yes" xml:space="preserve">
          <source>Default Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e853e380fbb256af90f1b6701ddb337a923884" translate="yes" xml:space="preserve">
          <source>Default Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816c6ed867c46778e2c5120dd4115f09bf0fcfa6" translate="yes" xml:space="preserve">
          <source>Default file existence assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62121ead15cd30f91da94221ba3e0061cb6d766" translate="yes" xml:space="preserve">
          <source>Default height in pixels for the application under tests&amp;rsquo; viewport (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d3505c9e34e3cf3574ca112bb4b9d4cabccb33" translate="yes" xml:space="preserve">
          <source>Default sizing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c152d7b3d697c79123206cbb3b89719b8bc6948" translate="yes" xml:space="preserve">
          <source>Default width in pixels for the application under tests&amp;rsquo; viewport. (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428819bf9e83cebda50efafb08cd2534c1583949" translate="yes" xml:space="preserve">
          <source>Defaults</source>
          <target state="translated">Defaults</target>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="0f6d2dd789e22cb155c7072913772227f42e5717" translate="yes" xml:space="preserve">
          <source>Delay after each keypress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1494a9bc47eade4e713274d7308e8e61ac3da965" translate="yes" xml:space="preserve">
          <source>Delay for stubbed responses (in ms)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efc7502f2a86ff722fdd0112fb1115d4b074b07" translate="yes" xml:space="preserve">
          <source>Delaying a response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33be56c36fa5e38e5e688193ca7f6f702b826f70" translate="yes" xml:space="preserve">
          <source>Delete Org</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420e6c8542560092e7fc39bbeb23e047d89d5246" translate="yes" xml:space="preserve">
          <source>Delete Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1305de44f5d95c0a738507026058e37778d4e9" translate="yes" xml:space="preserve">
          <source>Delete everything in the &lt;code&gt;cy&lt;/code&gt; folder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2700d851334adc622290d4f549953756d2c513dc" translate="yes" xml:space="preserve">
          <source>Delete or rename any policy keys found. &lt;em&gt;Make sure to back up your registry before making any changes.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9746bd7b8996d19acab4816d5dec7e68b572f1a" translate="yes" xml:space="preserve">
          <source>Delete organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1456f256eb207ff5bde5300956b6698a8691f3" translate="yes" xml:space="preserve">
          <source>Delete project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af4affe8515cf0856411712afe2f0527747a5de" translate="yes" xml:space="preserve">
          <source>Delete projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb33acc4731ff34926d72c31d06392b91d753e7" translate="yes" xml:space="preserve">
          <source>Delete record key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbc0dabff7727d2a87aae3bdba3f6bf52d70cc0" translate="yes" xml:space="preserve">
          <source>Deletes character to the left of the cursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34fdc5b502ecda0c1ed651ed848ae26646b39d6" translate="yes" xml:space="preserve">
          <source>Deletes character to the right of the cursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bb7f45f4c64879fbbc128a63557b3980aa0c08b7" translate="yes" xml:space="preserve">
          <source>Depending on how your application is built - it&amp;rsquo;s likely that your web application is going to be affected and controlled by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b3e653f740f4c749bb60f9032135226fe2bca4" translate="yes" xml:space="preserve">
          <source>Depending on which CI provider you use, you may need a config file. You&amp;rsquo;ll want to refer to your CI provider&amp;rsquo;s documentation to know where to add the commands to install and run Cypress. For more configuration examples check out our &lt;a href=&quot;#Examples&quot;&gt;examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2d93153fa250fddf0385d9f74ce9c2c826d8d1" translate="yes" xml:space="preserve">
          <source>Depends</source>
          <target state="translated">Depends</target>
        </trans-unit>
        <trans-unit id="50abff28ab37908b3cf44d9dd0633b6d4b22b266" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;Cypress.command&lt;/code&gt;, instead use &lt;code&gt;Cypress.Log.command&lt;/code&gt; to output a Command Log. Updated scaffolding on new projects to reflect this change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba54f6b3c94f4e85ea94aed4682b686d83030e3f" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;failOnStatus&lt;/code&gt; property for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and renamed to &lt;code&gt;failOnStatusCode&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;#323&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66770177d31590d18f83f5f18a84734f24f8f4e6" translate="yes" xml:space="preserve">
          <source>Deprecated all &lt;em&gt;Command Options&lt;/em&gt;. You will see a very nice and simple error message explaining how to convert these to assertions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0084835e26a00ac74a24b9e2202ccebf7aef5f" translate="yes" xml:space="preserve">
          <source>Deprecated the undocumented &lt;code&gt;cy.agents&lt;/code&gt; function, but it will continue to work and will be officially removed later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4455c33618f7e8493a6b401536a49ec647474555" translate="yes" xml:space="preserve">
          <source>Desktop App debug logs no longer sort in the wrong direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988933533a2710eb7a91fcde76623e318e7fbdb7" translate="yes" xml:space="preserve">
          <source>Desktop windows that are transparent no longer lose their box shadow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c524231967ba63ed27a4047efd69edcab3903bde" translate="yes" xml:space="preserve">
          <source>Despite the dozens of assertions Cypress makes available to you, sometimes the best test may make no assertions at all! How can this be? Aren&amp;rsquo;t assertions a basic part of testing?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fd0711ccfe2275d37466226b0233e39e3bbc7f" translate="yes" xml:space="preserve">
          <source>Destination of Cypress binary that's downloaded and installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07694df1980cebba49bc3ba950d5e71cf4c51ee" translate="yes" xml:space="preserve">
          <source>Detailed Logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="fb83fe74a2f1842353ec1873c1964e310a83b202" translate="yes" xml:space="preserve">
          <source>Details of each run are displayed including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d5d989139784b14dd3b3fa8b5147b2b7b5f797" translate="yes" xml:space="preserve">
          <source>Detection of installed browsers has been improved. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;#511&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db851310f56d8f0ff1714344c6eb7c7fd6fb1d1b" translate="yes" xml:space="preserve">
          <source>Determine a unique selector for an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb199653d3610c7decb0d490dd2981c63993abc" translate="yes" xml:space="preserve">
          <source>Determines the order of preference for which selector is chosen for the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c659a411024775bc5400ece139ed7c5058937b1d" translate="yes" xml:space="preserve">
          <source>Development Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880a74266b48446f72c4dd1688a1a3b42f91fdb9" translate="yes" xml:space="preserve">
          <source>Did you know that you can control how your custom commands appear in the Command Log? Read more about &lt;a href=&quot;#Command-Logging&quot;&gt;Command Logging&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29856a31b3d2a72b0f83ec3a5568909de02804cb" translate="yes" xml:space="preserve">
          <source>Did you know that you can use &lt;a href=&quot;#Multiple-Reporters&quot;&gt;multiple reporters&lt;/a&gt; with Mocha?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103b3848b34841b08aca075bb9ffb66a229c5d2" translate="yes" xml:space="preserve">
          <source>Difference between cy.spy() and cy.stub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="9f5371feae5752de4cf49862d8b24d4abe4ebb1c" translate="yes" xml:space="preserve">
          <source>Direct download</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8e45bac7d354790ec0a82d8a61341bf8acd055" translate="yes" xml:space="preserve">
          <source>Direction</source>
          <target state="translated">Direction</target>
        </trans-unit>
        <trans-unit id="f36e1d9fb25e334cc42e35e16df46e7fa41007dc" translate="yes" xml:space="preserve">
          <source>Directories within specs whose names contain &lt;code&gt;.&lt;/code&gt; are now correctly read as directories instead of spec files within the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;#2423&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398dcecfd4c36348d8d1fb304911cd0747f9e0d4" translate="yes" xml:space="preserve">
          <source>Disability</source>
          <target state="translated">Disability</target>
        </trans-unit>
        <trans-unit id="ed8e3cd3ce02e4410e6e12ca08ee83ae07f21784" translate="yes" xml:space="preserve">
          <source>Disable PR comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1146eac3b93e81381a07b19dcc792dd0463a1126" translate="yes" xml:space="preserve">
          <source>Disable logging to Command Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f205a7a44758815d3eeeb446e126d244dd81bc" translate="yes" xml:space="preserve">
          <source>Disable screenshots on run failures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8870696e9603555f5da0a578f2efe8889465bb" translate="yes" xml:space="preserve">
          <source>Disable status checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1c40c8e15a5906c64a3c1c5ea682eef54e14c7" translate="yes" xml:space="preserve">
          <source>Disabled Barriers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8101160ef461e1039c24259bf2164be36683138c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Autofill forms and passwords&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6a36172f19272186e514e359c9b8818b4e2b3c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Saving passwords&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742385a8d2de3fd9fd56746a5254ec1868941389" translate="yes" xml:space="preserve">
          <source>Disables asking to become your primary browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8820d327186eb9d36380d618891e1b140c1206c6" translate="yes" xml:space="preserve">
          <source>Disables background and renderer throttling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd97241499586fd718d26330dec9f95b9a31c0e" translate="yes" xml:space="preserve">
          <source>Disables background network traffic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78e3acd1f45b16a6377ece7fb25d3353f6d2137" translate="yes" xml:space="preserve">
          <source>Disables device discovery notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc575ad94c2c5e877021630cd9e2523adb5baee0" translate="yes" xml:space="preserve">
          <source>Disables language translations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a57f31533828350e954cee620711fac5c8534c" translate="yes" xml:space="preserve">
          <source>Disables prompts requesting permission to use devices like cameras or mics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c5847cb77a853d027e61065fb060f5e06690de" translate="yes" xml:space="preserve">
          <source>Disables restoring sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89814cefec4768db1bc31f96b05c4c237b94cc5d" translate="yes" xml:space="preserve">
          <source>Disables user gesture requirements for autoplaying videos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e790b8e1c07601668944e5511a4907e8441ef9" translate="yes" xml:space="preserve">
          <source>Disabling Highlights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc630477b97f37b5346d341b023abd94ebc8ee13" translate="yes" xml:space="preserve">
          <source>Disabling Web Security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331f9316062110e44524709e54652398a146845a" translate="yes" xml:space="preserve">
          <source>Display an empty message when there is no commit information on recorded runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;#1809&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b9e351e3ff0d8e4c1c347bf7595c58700ffbfb" translate="yes" xml:space="preserve">
          <source>Display insecure content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840ffbdb7da30d2d58783c09ae67907da14db616" translate="yes" xml:space="preserve">
          <source>Display the Electron browser instead of running headlessly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd09492de4e095dd361539936a9df005a6751c3" translate="yes" xml:space="preserve">
          <source>Displaying a credit card form from Stripe or Braintree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a624a965703205f1185b4de304082897da096c" translate="yes" xml:space="preserve">
          <source>Displaying an embedded login form from Auth0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a111098f149be53fc23d11071083e7908b8b4f8c" translate="yes" xml:space="preserve">
          <source>Displays the command in the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command log&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15734e80c1b9ba09cae5e65347e5fe8e74b0dd80" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;NOT&lt;/strong&gt; include protocol: &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f15f0f7d9eda009d36ae894bba131f289eb8ee8" translate="yes" xml:space="preserve">
          <source>Do It Yourself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1311dea644b9dfc4fba9ad13c38b9e662d415f4a" translate="yes" xml:space="preserve">
          <source>Do a shift + click</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2da93e42ef992541100a9e65c6ecf631b9d82d9" translate="yes" xml:space="preserve">
          <source>Do not forget that &lt;strong&gt;Cypress commands are async&lt;/strong&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b10ee7030fa005a21358e27e3bfe05066e85aa6" translate="yes" xml:space="preserve">
          <source>Do not use &lt;strong&gt;your UI&lt;/strong&gt; to login before each test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2b432b6b037e09ea6c21f51f82ecc54cd52fc6" translate="yes" xml:space="preserve">
          <source>Do you see the difference? We were able to login without needing to actually use our UI. This saves an enormous amount of time visiting the login page, filling out the username, password, and waiting for the server to redirect us &lt;em&gt;before every test&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10bd5b89bb2c4162f229df774ba62b09745264e" translate="yes" xml:space="preserve">
          <source>Do you see the problem here? This test is non-deterministic. The &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will sometimes have the class &lt;code&gt;active&lt;/code&gt; and sometimes not. In &lt;strong&gt;most&lt;/strong&gt; cases, you cannot rely on the state of the DOM to determine what you should conditionally do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2998beff4e0d0f955bfa075992fe40291e784c" translate="yes" xml:space="preserve">
          <source>Do you see what happened?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="53048861edcc441aef057cfdcf1945349c9c8194" translate="yes" xml:space="preserve">
          <source>Docker images &amp;amp; CI examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab45e6d7829b9766d6ff47e9b891e5f334be013" translate="yes" xml:space="preserve">
          <source>Docker images providing all the dependencies to run Cypress in CI including browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010995167a9dd41a6de0709b079946d48321e082" translate="yes" xml:space="preserve">
          <source>Docs have been updated for &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; to reflect these changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005a47d2fb03a50731ae30b6c4044b3033fcb234" translate="yes" xml:space="preserve">
          <source>Document how to accept or reject project transfers &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;#1474&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="fc0c182915c26250a85f0f9ed6247e647f87d451" translate="yes" xml:space="preserve">
          <source>Documentation Changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759ad5947a51fcfec123db9f79d9f3a1619fb67a" translate="yes" xml:space="preserve">
          <source>Documented new &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; flag and rewrote advanced install instructions to be clearer in &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;Installing Cypress doc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804124d142a9215ba3fe1c6d4f221b741dd75b1e" translate="yes" xml:space="preserve">
          <source>Does NOT match &lt;code&gt;*.google.com&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4933311284cb076566e3c8a210bb8b0e9c4cf5f7" translate="yes" xml:space="preserve">
          <source>Does not require any changes to files or configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41360c43377352d15fbf538e7feff1d8c8cb6950" translate="yes" xml:space="preserve">
          <source>Does not submit a form if the &lt;code&gt;submit&lt;/code&gt; button is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f001f441c49973f9c075e2f6c0d84e1d9a67af81" translate="yes" xml:space="preserve">
          <source>Does not submit a form if there are multiple inputs and no &lt;code&gt;submit&lt;/code&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76d1639df01aabfd04987b2f19edd4123d24766" translate="yes" xml:space="preserve">
          <source>Does the element have the &lt;code&gt;disabled&lt;/code&gt; attribute?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be96ac94609c064d42c764ea5a2fbc70050b26f" translate="yes" xml:space="preserve">
          <source>Doing conditional testing adds a huge problem - that the test writer themselves are unsure what the given state will be. In those situations, the only reliable way to have accurate tests is to embed this dynamic state in a reliable and consistent way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff36de09bae56472140cf3d594198b57d33cd6f6" translate="yes" xml:space="preserve">
          <source>Doing it this way can be faster, more accurate, and more scalable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05a117580caa2d7c9bdbddcffb9e0b8adaa3c84" translate="yes" xml:space="preserve">
          <source>Doing so enables you to &lt;strong&gt;block&lt;/strong&gt; and &lt;strong&gt;guard&lt;/strong&gt; Cypress by ensuring the state of descendants matches what you expect without needing to query them individually with regular Cypress DOM commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9252a916f17f66e91f0c1ddeb683a3b645b64409" translate="yes" xml:space="preserve">
          <source>Domain cookies are now proxied better. There&amp;rsquo;s still more work to do before they are 100% fixed but now most typical domain cookie scenarios should &amp;lsquo;just work&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29326ddd74116cd0ed38dea8b81437470812e7e7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t Stub Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2440793f4d8df673a75dda05cd016806ceec833b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t click &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; links in your tests that navigate outside of your application. Likely this isn&amp;rsquo;t worth testing anyway. You should ask yourself: &lt;em&gt;What&amp;rsquo;s the point of clicking and going to another app?&lt;/em&gt; Likely all you care about is that the &lt;code&gt;href&lt;/code&gt; attribute matches what you expect. So make an assertion about that. You can see more strategies on testing anchor links &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;in our &amp;ldquo;Tab Handling and Links&amp;rdquo; example recipe&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69247364224e2809c5dcd08d586bba0a61fc8ee" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t do things like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d6ca3f177805335da2804d73621c40575900f1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t feel obligated to pick just one method. It is common to use one strategy for local development but another when running in &lt;a href=&quot;continuous-integration&quot;&gt;CI&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd86068b6f186471e5286c2d8319748d9d3c7620" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements based on CSS attributes such as: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f73a89bbc9d1ed1248febd0f7e5feb866c8c4f5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements that may change their &lt;code&gt;textContent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d84a04c4d5f60e53855b9d15ea8d64e9b6d294e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from &lt;code&gt;cy.exec()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f4dd2e19ba725998261c574c1138fbc781fc82" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from within Cypress scripts. Read about &lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b86dfe1262cedb7f475d85819953d5d837183ad" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use your UI to build up state! It&amp;rsquo;s enormously slow, cumbersome, and unnecessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88cbfe5f88b710f974a3548e61fa24cf8310085" translate="yes" xml:space="preserve">
          <source>Double click an anchor link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a748246d4c2e3297ee23c0ec852f041e00c6479" translate="yes" xml:space="preserve">
          <source>Double-click a DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0285fa241de4bebad9da16f25ff89480e20ef5" translate="yes" xml:space="preserve">
          <source>Downgraded &lt;code&gt;parse-domain&lt;/code&gt; from 2.1.7 to 2.0.0 to avoid a regression released in &lt;code&gt;parse-domain&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdc046382f0bac99e80bf6003b655106ec0c9b7" translate="yes" xml:space="preserve">
          <source>Download Cypress at latest version (platform auto-detected)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98524a2f0e7d53a662d72dce710b24cc0dcdf47" translate="yes" xml:space="preserve">
          <source>Download Cypress for a specific platform and/or architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c8d0d2447b20ae7d8d9d08b342e860a278ad5a" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993c99b190aced0f3d6b471f5798820a143aa044" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version and platform and/or architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0282356e7a69a174a3186273098d4472cbbea9" translate="yes" xml:space="preserve">
          <source>Download URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cce924335c43260c9cfe380ded635166e962e15" translate="yes" xml:space="preserve">
          <source>Download specific Chrome version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592191bc433379314714980c1eed899a4bb7877f" translate="yes" xml:space="preserve">
          <source>Downloads the Cypress binary though a mirror server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ea9dbe7ad5c10534189f39f164e8c765c4d655" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d31820c40549826ef6dcceb8523192b3223ade" translate="yes" xml:space="preserve">
          <source>Drastically improved file watching on large projects with many tests. Instead of choking the CPU at nearly 100% indefinitely we now optimally watch the current working files for changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94be820e65bd3d316f5354bf4a4bcbc3169d6b52" translate="yes" xml:space="preserve">
          <source>Drastically simplified the architecture required for proxying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7816c4fc585f04f97450ce41299c72605c8c18bc" translate="yes" xml:space="preserve">
          <source>Drone</source>
          <target state="translated">Drone</target>
        </trans-unit>
        <trans-unit id="49569d6757d9473c3967128a5f81feb530b037cd" translate="yes" xml:space="preserve">
          <source>Dual Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fbfd5e6265cea1e87f277219810a1bfefac857" translate="yes" xml:space="preserve">
          <source>Due to security upgrades, adding projects in previous versions will no longer work. Upgrade and everything should be okay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480288621e2aefc91c805fcebc413ddf7c259e72" translate="yes" xml:space="preserve">
          <source>Duplicate, subsequent logs in the Command Log are now collapsed and can be expanded to view all logs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;#1580&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbba9e67374d2a30a91b1d549d55513b36c3412" translate="yes" xml:space="preserve">
          <source>Duration estimation is done separately for every browser the spec file was tested against. This is helpful since performance characteristics vary by browser, and therefore it is perfectly acceptable to see different duration estimates for each browser a spec file was tested against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f657f89a392636e85ad17713e4c4933e5aff3a0b" translate="yes" xml:space="preserve">
          <source>During &lt;code&gt;cypress run&lt;/code&gt;, windows created with &lt;code&gt;window.open&lt;/code&gt; will no longer physically display. They are now correctly headless. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;#123&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dca6ae612201a13c0f26e35f4d8b02dc0f672d7" translate="yes" xml:space="preserve">
          <source>During an update Cypress will now display the updating message in the same coordinates as when the app was open by clicking the tray icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c3424a49203624a3e5f0a2af756f5600c7fd3b" translate="yes" xml:space="preserve">
          <source>During install of cypress, the Cypress binary is now downloaded to a global cache. This prevents multiple projects from downloading the same Cypress version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;#1300&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4635ca402b107dc777e57a14a22ddf4d81058452" translate="yes" xml:space="preserve">
          <source>During parallelization mode or when grouping runs, Cypress will wait for a specified amount of time before completing the test run in case any more relevant work remains. This is to compensate for various scenarios where CI machines could be backed-up in a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf0facb87eaef3dc2db4a6f8672cede399a3f6a" translate="yes" xml:space="preserve">
          <source>During parallelization mode, the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; interacts with your CI machines to orchestrate the parallelization of a test run via &lt;a href=&quot;#Balance-strategy&quot;&gt;load-balancing&lt;/a&gt; of specs across available CI machines by the following process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ea8471b6348617d0fe3b9854870b2c1045b2aa" translate="yes" xml:space="preserve">
          <source>During the test, the &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; command quickly found the rendered &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; item - and that item was the first and only &amp;ldquo;todo A&amp;rdquo; item. Our application was waiting 100ms before appending the second item &amp;ldquo;todo B&amp;rdquo; to the list. By the time the second item was added, Cypress had already &amp;ldquo;moved on&amp;rdquo;, working only with the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element. It only searched for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; inside the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, completely ignoring the newly created 2nd item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136a0fb8d8e75eaec9777cdc1797bac23955292a" translate="yes" xml:space="preserve">
          <source>Dynamic tests split across parallel CI nodes with Knapsack Pro Queue Mode to get faster CI builds. Note - this is 3rd party implementation, different from the Cypress Dashboard parallelization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c898c36e7e7f0ca622b7e6a1f3fedf436b9bd87" translate="yes" xml:space="preserve">
          <source>Dynamic text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae28e511e8bc706bd1f00b92fc4ad20be0013475" translate="yes" xml:space="preserve">
          <source>Dynamically Generate Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32632163c90f645f5e238e58d67159c13482ef76" translate="yes" xml:space="preserve">
          <source>Dynamically test multiple viewports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763e51fd3356790e7032b1ff2b69409ac670bcde" translate="yes" xml:space="preserve">
          <source>E2E and unit code coverage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f9ca4e6a46e0c8336a615783b4683686e1e040" translate="yes" xml:space="preserve">
          <source>E2E code coverage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1b2ce02ae9d644a9a1ccd831bbd61bcd878146" translate="yes" xml:space="preserve">
          <source>ES2015 via Babel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387485c3637a014fbaa964164d0526497139ac1e" translate="yes" xml:space="preserve">
          <source>ESLint</source>
          <target state="translated">ESLint</target>
        </trans-unit>
        <trans-unit id="1370400c46faebf95aef65bacd78290720372c1e" translate="yes" xml:space="preserve">
          <source>ESLint plugin that sets globals for writing tests in Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a667eaf2cb96d97a1d0e9a8d21804d12d391390" translate="yes" xml:space="preserve">
          <source>Each API Command documents its behavior with assertions - such as how it retries or waits for assertions to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c377f25ad057c7000470b58b06a4cf4c4f9d9d55" translate="yes" xml:space="preserve">
          <source>Each Cypress command (and chain of commands) returns immediately, having only been appended to a queue of commands to be executed at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d30182dccb6b31f8acf775660b9de4a71aa0512" translate="yes" xml:space="preserve">
          <source>Each command and assertion, when hovered over, restores the Application Under Test (righthand side) to the state it was in when that command executed. This allows you to &amp;lsquo;time-travel&amp;rsquo; back to previous states of your application when testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1830c5ceb356707df5226b15717796e913493a" translate="yes" xml:space="preserve">
          <source>Each command will automatically restore the viewport to the dimensions at the time the command was issued. In other words, scrolling over each command will restore exactly what Cypress &amp;ldquo;saw&amp;rdquo; when it issued the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684c1fdc408df49cd48e5f43f063a2b481a255fe" translate="yes" xml:space="preserve">
          <source>Each command, assertion, or error, when clicked on, displays extra information in the dev tools console. Clicking also &amp;lsquo;pins&amp;rsquo; the Application Under Test (righthand side) to its previous state when the command executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275993dbbd08f877b5a8ee165491e54db8467214" translate="yes" xml:space="preserve">
          <source>Each event documents its own argument signature. To understand how to use them, please &lt;a href=&quot;#List-of-events&quot;&gt;refer to the docs for each one&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88c2ebb6cbb35ba1087b3274ea4feb73d229795" translate="yes" xml:space="preserve">
          <source>Each failed test links back to the associated failure within the Cypress Dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6f95f98b50c84456913db5f3adc7e79522a170" translate="yes" xml:space="preserve">
          <source>Each keypress is delayed 10ms by default in order to simulate how a very fast user types!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e400bc814cb7a75a615fbd7190343f642f74521" translate="yes" xml:space="preserve">
          <source>Each nested command has access to the work done in previous commands. This ends up reading very nicely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99024aa822581486d6de74268616aa65f2fe2aed" translate="yes" xml:space="preserve">
          <source>Each of these environments would read in the configuration at these files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520ea0c2aac8299f6c0b93e36d195747c0ff7dfa" translate="yes" xml:space="preserve">
          <source>Each of these likely requires a full blown e2e test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d63f8c829aa417fbfafcd489edaa4d0a4e615e3" translate="yes" xml:space="preserve">
          <source>Each status check will report the number of test failures or passes, and the associated &lt;strong&gt;Details&lt;/strong&gt; link will direct you to the test run&amp;rsquo;s page within the Cypress Dashboard to help you dig deeper into the problem via error messages, stack traces, screenshots, and video recordings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9e6d76d99d863b08efd5c2699c22f48570a76d" translate="yes" xml:space="preserve">
          <source>Each test is bound to a &lt;a href=&quot;#Same-origin&quot;&gt;single origin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c603e712f509c60c424c0b15022265d200d65d" translate="yes" xml:space="preserve">
          <source>Each test is limited to only visiting a single superdomain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be3eadfca500682a804c06ad342ec8f4d4f3e00" translate="yes" xml:space="preserve">
          <source>Each time an alias in used with a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, Cypress will not resolve until the Nth request matching the outing alias responds. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;#4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258b36b6173f6d83441d85265954566f57a760e8" translate="yes" xml:space="preserve">
          <source>Each time we use &lt;code&gt;cy.wait()&lt;/code&gt; for an alias, Cypress waits for the next nth matching request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b70f0ead660ad520a0fe4e108059f6483211c1" translate="yes" xml:space="preserve">
          <source>Easily: control which campaign gets sent, or provide a reliable means to know which one it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faac50fbaf395b598751258e10615250e7ad966" translate="yes" xml:space="preserve">
          <source>Easy control of response bodies, status, and headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143f10dc9c5ed39d716e4f2bd0ee7d24486a1820" translate="yes" xml:space="preserve">
          <source>Edge cases like locked / deleted accounts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ad68daa12d13b4ec9639b5c9446a62b81abc7b" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;admin&amp;rsquo; in organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d3c209993b025b25ba41f1164a7c6f9cae7bdc" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;member&amp;rsquo; in organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac33bdcdccb67cdac31155d9d7f435ee323dc7a4" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;owner&amp;rsquo; in organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91ffb5f3ded95ed881a649db2def6919951d1e2" translate="yes" xml:space="preserve">
          <source>Edit billing information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2befb843434b3c0a45eb78377cb1c3a9fd932b7" translate="yes" xml:space="preserve">
          <source>Edit organization name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9c8e468af664d71704e88d65af4cc78aa8b101" translate="yes" xml:space="preserve">
          <source>Edit project name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083a0a263e8bc798e23428cb98a349cb82c291a3" translate="yes" xml:space="preserve">
          <source>Edit project status (private/public}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b11ca85d872d994ddd774f033e3e4883c5374a4" translate="yes" xml:space="preserve">
          <source>Edit the installed Cypress code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed50c7c9032a74ec0f4cb0dafc803eaa53c9af5" translate="yes" xml:space="preserve">
          <source>Editing a Selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f25a6c9ba41e83696296e7c77e66e2444e64051" translate="yes" xml:space="preserve">
          <source>Effect on default DOM assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e63a9b7b308aed39d946483a401f46e77a9d1e3" translate="yes" xml:space="preserve">
          <source>Effectively leveraging test data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a90561af82abfa6e3aa54ef2f8e4b55202bd25" translate="yes" xml:space="preserve">
          <source>Electron</source>
          <target state="translated">Electron</target>
        </trans-unit>
        <trans-unit id="ab40dddcb86fc9f7d8f51cdd865f63924d21ba19" translate="yes" xml:space="preserve">
          <source>Electron Browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a76e577299fc3c204205f6ee683d8a672a99478" translate="yes" xml:space="preserve">
          <source>Electron no longer reports the browser as out of focus when running via &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;#1939&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628192e8fa718cca67ad9d3672c514fbb407a198" translate="yes" xml:space="preserve">
          <source>Electron rendering warnings are no longer printed to console output. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;#4288&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1b516a5e7d2ec9129ab1809aa645c83ab99f4d" translate="yes" xml:space="preserve">
          <source>Element existence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ac45c91d2984a846db24f392fd52e012b9fba1" translate="yes" xml:space="preserve">
          <source>Element preference order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1e32bf90c3fd5f9e28299e564c4b55b82a0acc" translate="yes" xml:space="preserve">
          <source>Element removal during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6147561440cd1b5919d02113d41dc053bfe9a4" translate="yes" xml:space="preserve">
          <source>Element to search for children in. If null, search begins from root-level DOM element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="ab8036ec3220e8f26cf947a385c7f8e8b88aa005" translate="yes" xml:space="preserve">
          <source>Elements (the number of elements found)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c921f06f52212a4281e5cb1397527903ac026c45" translate="yes" xml:space="preserve">
          <source>Elements that are covering up an element you targeted for &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; are now logged out in the command console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5b8ce8549efb6806df82766f80e1a2920d20de" translate="yes" xml:space="preserve">
          <source>Elements that are inside a parent with CSS &lt;code&gt;position: absolute&lt;/code&gt; which is itself inside of a parent element with &lt;code&gt;overflow: hidden&lt;/code&gt; are now properly considered visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;#4395&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;#755&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6998029fced720e07b4684bb075b294b44e30ee1" translate="yes" xml:space="preserve">
          <source>Elements that match the specified selectors will be blacked out from the screenshot, but only when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt;. &lt;code&gt;blackout&lt;/code&gt; is ignored is &lt;code&gt;capture&lt;/code&gt; is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9ebbcc8c2d718bd1587c39876f43fd85937f84" translate="yes" xml:space="preserve">
          <source>Elements which are children of a container with &lt;code&gt;overflow&lt;/code&gt; are automatically scrolled prior to a click (which is an abstraction around real user behavior).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b356077ea501d4ebd48c4371f1a83dbcc1eb12f" translate="yes" xml:space="preserve">
          <source>Elements which are stringified during errors now indicate their text content (truncated to 10 characters) &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; or whether they contain children elements by indicating an ellipsis &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bf1b4484d000d8d5ae5549911ae978182472d5" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;contenteditable&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44667429769bd42ab172b16d15a51c492c3b74cb" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;tabindex&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5016f42510d5ee58a2fc21e1db91bd76faabaef" translate="yes" xml:space="preserve">
          <source>Elm Batteries Included</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9767897d93c4978863eb928201ebd647a87432" translate="yes" xml:space="preserve">
          <source>Embed data in DOM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39e9c84c2c2c0bee498ed6bf855df6becaa3631" translate="yes" xml:space="preserve">
          <source>Embed data in the DOM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b4c8862fdeedf485374f3150ae4c5a0e62da5b" translate="yes" xml:space="preserve">
          <source>Embed data into other places (cookies / local storage) you could read off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d919c765dfb166f5f96fd2b0f23f806e1d095b38" translate="yes" xml:space="preserve">
          <source>Embedding a Vimeo or YouTube video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d67b7147f77128c418841b4c976644e812ca6f" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to send an encoding for images other than forcing the default encoding of &lt;code&gt;base64&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;#373&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8ec935e875b88d51e3d58428ad460f4eb430a7" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to pass an &lt;code&gt;encoding&lt;/code&gt; parameter when using &lt;code&gt;fx:fixture&lt;/code&gt; syntax. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;#374&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0426f197113f21bed6a16a638614e6219dd849a" translate="yes" xml:space="preserve">
          <source>Enable or disable experimental chrome features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2313b580fa33d278483393ce7eea83abf0c5a6" translate="yes" xml:space="preserve">
          <source>Enable passing &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; without using the CLI by invoking the binary directly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;#820&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2e83b0da6d422f1bdb880cdbb1d737c2ba9d85" translate="yes" xml:space="preserve">
          <source>Enables you to generate this file from other build processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6c051defe74066ab292a333fa676fa369cdd20" translate="yes" xml:space="preserve">
          <source>Enables you to override the default user agent the browser sends in all request headers. User agent values are typically used by servers to help identify the operating system, browser, and browser version. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;User-Agent MDN Documentation&lt;/a&gt; for example user agent values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5754b46c040515f05e7e2cf7cd1cd37419a34f9" translate="yes" xml:space="preserve">
          <source>Enables you to work with the subject yielded from the previous command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558ddd63962b514580bf35502e16351fdbe839ab" translate="yes" xml:space="preserve">
          <source>Enabling GitHub integration for a project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919551597df30356944cafd212832256a8c0df11" translate="yes" xml:space="preserve">
          <source>Enabling this would mean that for every single command, it would recover from errors, but only after each applicable command timeout was reached. Since timeouts start at 4 seconds (and exceed from there), this means that it would only fail after a long, long time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea8c255859397cb43119394cba347868785c8a5" translate="yes" xml:space="preserve">
          <source>Encode a fixture with Protocol Buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="b1adbe164ee63dd9c7f2a4593f50e7b7a78d2933" translate="yes" xml:space="preserve">
          <source>End a chain of commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f6463c153c032ec57c13a6815c6707e987c657" translate="yes" xml:space="preserve">
          <source>End-to-end tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9c95c5e8bc53a4dcd048eabe4c357d20b5606d" translate="yes" xml:space="preserve">
          <source>Enhanced &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; to accept &lt;code&gt;eventually&lt;/code&gt; flag to automatically retry assertions until timeout is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca79022eedafdc9baaf95b2b49cce41fcc1e6eea" translate="yes" xml:space="preserve">
          <source>Ensure it is not animating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd28c56432380e3f912525f6af0f9c44b907e9b" translate="yes" xml:space="preserve">
          <source>Ensure it is not covered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b515507685300afd9564c5ff4e8053ea10beb757" translate="yes" xml:space="preserve">
          <source>Ensure it is not disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ec6995360904e0d3d9d4c55e765bcd0da7e133" translate="yes" xml:space="preserve">
          <source>Ensure it is not readonly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa8913f432e799e200d2a95b10e32335be7fa56" translate="yes" xml:space="preserve">
          <source>Ensure it is visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4310731e72eabf26a3eb446e02ef8579a5237f5d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not animating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1007053ced6553c9fd1f6424bca2c3f220eca1e" translate="yes" xml:space="preserve">
          <source>Ensure the element is not covered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc1610572b26e8b08c6a4c34c737395f4333d8d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d19677ee6acc9d5c50e9b91a94c4ed5155f590d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368fc70a50a93ced761903d47a41db1f3a8d3a17" translate="yes" xml:space="preserve">
          <source>Ensure the element is not readonly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6926f03c557954977ef6356cd9d7fe3652d0014" translate="yes" xml:space="preserve">
          <source>Ensure the element you are trying to call &lt;code&gt;.focus()&lt;/code&gt; on is a &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;focusable element&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa508e9bef3af1389a3020abd9c7793caae33c76" translate="yes" xml:space="preserve">
          <source>Environment Variables recipe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc92a9c3a64a7543ce72d138611445527c755578" translate="yes" xml:space="preserve">
          <source>Environment variables are great at pointing to external services and servers, or storing password or other credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f1956fc009fdce8d624d9e2835373ffa72501f" translate="yes" xml:space="preserve">
          <source>Environment variables are useful when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ce0155cb72d83c03781b384f78b9b2272a0a9e" translate="yes" xml:space="preserve">
          <source>Environment variables can be changed easily - especially when running in CI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30333666567894e35870601003c548b606d3b2c8" translate="yes" xml:space="preserve">
          <source>Environment variables for Semaphore 2.0 are now captured when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;#4671&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3634cf23ae7c404597c456674b568879629b5ba7" translate="yes" xml:space="preserve">
          <source>Environment variables set using &lt;code&gt;Cypress.env&lt;/code&gt;&lt;em&gt;are only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6cbbb19e47188e0f4a16c137fc8b4d198da3be" translate="yes" xml:space="preserve">
          <source>Environment variables that do not match configuration keys will instead be set as regular environment variables for use in your tests with &lt;code&gt;Cypress.env()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a18f05e0a5a1ef739509b16e48dcb60c926009f" translate="yes" xml:space="preserve">
          <source>Error Recovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">обработка ошибок</target>
        </trans-unit>
        <trans-unit id="a7dadcb4736c27170931fdcf7841a1fb8de3a859" translate="yes" xml:space="preserve">
          <source>Error handling for invalid arguments passed to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; have been improved and will now suggest valid arguments that are acceptable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982e82df0e80e302edc2f8a09a70d717466a86e7" translate="yes" xml:space="preserve">
          <source>Error messages and command messages for &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; have been improved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6109861390104b5df44cf97b43d8f8aa5eebfedf" translate="yes" xml:space="preserve">
          <source>Error messages no longer break within words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76882bf98cee4086a1074b159fda3d1a5d2cd96c" translate="yes" xml:space="preserve">
          <source>Errors / crashes encountered when updating to newer versions through the app should be fixed now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854f93a83e75f7d2544802812315f4ac785a5e0a" translate="yes" xml:space="preserve">
          <source>Errors coming from plugins now display correctly in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;#945&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c711fa24b5948b08ce83b5f001b7e2dc18357dd" translate="yes" xml:space="preserve">
          <source>Errors from your plugins &lt;em&gt;will not crash&lt;/em&gt; Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5add43a5bd5039885f5128e025a33fe0f420e4c4" translate="yes" xml:space="preserve">
          <source>Errors reading / writing &lt;code&gt;cypress.json&lt;/code&gt; on project add are now displayed inline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d11088b337bf194afbbba34e3461bb6fd238912" translate="yes" xml:space="preserve">
          <source>Especially useful for CI environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c87aeb3c9446cb9afda9709099fc6367e9171f" translate="yes" xml:space="preserve">
          <source>Even a single end-to-end test can cover a lot of the application code. For example, let&amp;rsquo;s run the following test that adds a few items, then marks one of them as completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070e5c4e1df907c99cad4f5f60301bb41273abf7" translate="yes" xml:space="preserve">
          <source>Even better, we can drill down into the individual source files to see what code we missed. In our example application, the main state logic is in the &lt;code&gt;src/reducers/todos.js&lt;/code&gt; file. Let&amp;rsquo;s see the code coverage in this file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316c07239617168f09bbce549bb637e294cdddb8" translate="yes" xml:space="preserve">
          <source>Even if you decide to skip using a 3rd party image storage and comparison service, you can still perform visual testing. Follow the example &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Visual Regression testing with Cypress and cypress-image-snapshot&lt;/a&gt; tutorial and do it all yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ca4e8e12e18c02a22ac44bcb7517ef6ada4084" translate="yes" xml:space="preserve">
          <source>Even if your project is JavaScript only, the JavaScript specs can know about the new command by referencing the file using the special tripple slash &lt;code&gt;reference path&lt;/code&gt; comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34febeff692095a91412c9c2164509300bda3cb0" translate="yes" xml:space="preserve">
          <source>Even more - action commands will automatically wait for their element to reach an &lt;a href=&quot;interacting-with-elements&quot;&gt;actionable state&lt;/a&gt; before failing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e33674133df3ccb1942dae043fe37b25ee9bc2c" translate="yes" xml:space="preserve">
          <source>Even the &lt;code&gt;Initiator&lt;/code&gt; is included, which is a stack trace to what caused the XHR to be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65e02a9c75ae05082f82517ba5d146b4be79ef3" translate="yes" xml:space="preserve">
          <source>Even then, it&amp;rsquo;s still possible a WebSocket message could come in&amp;hellip; so 5 minutes!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb047f8f50813fbd685a9d55a025552dce04a4fe" translate="yes" xml:space="preserve">
          <source>Even then, not enough, it&amp;rsquo;s possible a &lt;code&gt;setTimeout&lt;/code&gt; could trigger&amp;hellip; 60 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaba616433654358f7d68d07e61e99aed209f2d" translate="yes" xml:space="preserve">
          <source>Even though Cypress runs in the browser, it automatically makes this property available for use in your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bd6c11f0c963778ec1e7e1fc7222fe8ad6ee0e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Age&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements over &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a3ff57e8669d6ebb647842dac8efa08438293e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Search&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d1d5127742b8f47d6030fa661dcfd34932aea1" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Sign Out&amp;rdquo;, Cypress yields anchor elements over spans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3f99a18cc580ff52b143719737d0bc996537af" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains a &amp;ldquo;4&amp;rdquo;, Cypress automatically yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans because of its &lt;a href=&quot;#Preferences&quot;&gt;preferred element order&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5310bf2439662720de316fb2282fea56d8b3b7" translate="yes" xml:space="preserve">
          <source>Even though we haven&amp;rsquo;t written any tests yet - that&amp;rsquo;s okay - let&amp;rsquo;s click on &lt;code&gt;sample_spec.js&lt;/code&gt; and watch Cypress launch your browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e7b642f1543fd59199a0e516117870146d988d" translate="yes" xml:space="preserve">
          <source>Even though we return a string in our test, Cypress automatically figures out that you&amp;rsquo;ve queued commands above and does not end the test until all cy commands have finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538a7cffc1912098499e098166d1acdfe6a5783e" translate="yes" xml:space="preserve">
          <source>Even when tests fail, the &lt;code&gt;Promise&lt;/code&gt; still resolves with the test results. The &lt;code&gt;Promise&lt;/code&gt; is only rejected if Cypress cannot run for some reason; for example if a binary has not been installed or it cannot find a module dependency. In that case, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with a detailed error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e58ad59937dd85431ce7edc11b58f8d769de48" translate="yes" xml:space="preserve">
          <source>Even without adding an assertion, we know that everything is okay! This is because many of Cypress&amp;rsquo; commands are built to fail if they don&amp;rsquo;t find what they&amp;rsquo;re expecting to find. This is known as a &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba520496df229530fa8c523fecb833a3c475bcb" translate="yes" xml:space="preserve">
          <source>Even your non-technical collaborators can appreciate the way this reads!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d9a0263e8f89e8508419dc7101a0fe1b909f31d6" translate="yes" xml:space="preserve">
          <source>Event Cancellation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ee02f7ce9b63351840d187299d0f76b5f9ece3" translate="yes" xml:space="preserve">
          <source>Event Firing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="82c1c6b3f4b539d9a216b58656cd339328dddc4b" translate="yes" xml:space="preserve">
          <source>Events that are fired:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da52eba1bd92bb873eb55802ea0324199e38da3c" translate="yes" xml:space="preserve">
          <source>Events that fire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d48c3fa29cd1b85026a0bddc44e28912df51d7" translate="yes" xml:space="preserve">
          <source>Events that should not fire on non input types such as elements with &lt;code&gt;tabindex&lt;/code&gt; do not fire their &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; events. Only typing into elements which cause the actual value or text to change will fire those events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c9763723437cb0418c9553bac2a22f39077299" translate="yes" xml:space="preserve">
          <source>Events that were &lt;code&gt;defaultPrevented&lt;/code&gt; may prevent other events from firing and those will show up as empty. For instance, canceling &lt;code&gt;keydown&lt;/code&gt; will not fire &lt;code&gt;keypress&lt;/code&gt; or &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;, but will fire &lt;code&gt;keyup&lt;/code&gt; (which matches the spec).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb4bcadb624b3f1c5ccf23432f4522d0f284974" translate="yes" xml:space="preserve">
          <source>Every custom command you write is generally an abstraction over a series of internal commands. That means you and your team members exert much more mental effort to understand what your custom command does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eee2af9481b18382f2ed15e769db1e4b28932dd" translate="yes" xml:space="preserve">
          <source>Every source file but 1 is covered at 100%. We can have great confidence in our application, and safely refactor the code knowing that we have a robust set of end-to-end tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d130c3bba2c7cd2cc3eb07249e9d555f452fd6e3" translate="yes" xml:space="preserve">
          <source>Every test you write will include selectors for elements. To save yourself a lot of headaches, you should write selectors that are resilient to changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fa7455656b959a33b81cf03ae0e5b3c00d8df5" translate="yes" xml:space="preserve">
          <source>Every time your tests run, you&amp;rsquo;d have to work out the complexity around starting an already running web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e54e38fa222d3ef6e281ccb610ecd33efb6668" translate="yes" xml:space="preserve">
          <source>Everything else; this includes, but isn&amp;rsquo;t limited to, the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f2d5208c5c81ab49f2946d8ace5a2b336fa79c" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;cypress driver&lt;/code&gt; is now minified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cda106d93dbff058312ac5299adcb6cbbf071eb0" translate="yes" xml:space="preserve">
          <source>Example #1: Default Assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3646043c0bbbc4ecbb7db5f6f77948b176d699b" translate="yes" xml:space="preserve">
          <source>Example #1: Existence and Actionability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2c071addd085d3b7fb47c324ea0c508644162d" translate="yes" xml:space="preserve">
          <source>Example #2: Additional Assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf4b889f372521e894a51bca1730c51da276fcc" translate="yes" xml:space="preserve">
          <source>Example #2: Reversing the Default Assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ce43a785a0bad5e977237a8ef35938986ac4a3" translate="yes" xml:space="preserve">
          <source>Example #3: Modifying Timeouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0f113118ec1dd5f83253b2ddd81ed3dd43ce78" translate="yes" xml:space="preserve">
          <source>Example #3: Other Default Assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20fe15406406c1193750bd9bd3a0aee71cb54ed" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;.travis.yml&lt;/code&gt; config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1871dd0e29111f57e365587213d50fd672171e1d" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e4f7e6b45a07a97f456a3f2cf9f253a8e8ab02" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file with &lt;code&gt;yarn&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1515e6fa46ada277f22dc81464579676446a91" translate="yes" xml:space="preserve">
          <source>Example Config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8bfdee37016dc05dc3033eca4f4fa6aeac9298" translate="yes" xml:space="preserve">
          <source>Example Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67013470cce4eefed122db16583e1484bfc70985" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text contents of each one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1bc8d0049021fee3c658cec1a5f287f38659ad" translate="yes" xml:space="preserve">
          <source>Example fixture is automatically created with every project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c84102101b31e7895a904c1ecf62219bfb13a9" translate="yes" xml:space="preserve">
          <source>Example of accessing insecure content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687ea2dc8b338b1a173b77171b0ee6d2daa03308" translate="yes" xml:space="preserve">
          <source>Example of checking a hidden element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879f79211906adc49a6382606e537e73631e018c" translate="yes" xml:space="preserve">
          <source>Example of clicking on a hidden element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72d714d0391ae914eb6abd8df5e7d50eaa9c8a5" translate="yes" xml:space="preserve">
          <source>Example of showing an element in order to perform action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4c9ab1c6a1a122f79375261c0c3e58b80fa3a4" translate="yes" xml:space="preserve">
          <source>Example project &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc custom commands&lt;/a&gt; uses custom commands to avoid boilerplate code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc604bfa71e82620908be6522acdac0ccf013433" translate="yes" xml:space="preserve">
          <source>Example projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73d9ecb9b954f124575aed910e40cb5c40c69cb" translate="yes" xml:space="preserve">
          <source>Example support files are now automatically created with every project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbed259729114e24d3a96eb32f2bfe670fb1223b" translate="yes" xml:space="preserve">
          <source>Example using Q</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7634761bc3fbdbca12db3a4aa128da7bf12da86d" translate="yes" xml:space="preserve">
          <source>Example using bluebird</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aa442bf16eade0108fa19c3b02b6ed1bb1e93e" translate="yes" xml:space="preserve">
          <source>Example using jQuery deferred&amp;rsquo;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="74ee3363c3af54336f30ee9bf21c6e43f2077a43" translate="yes" xml:space="preserve">
          <source>Examples of child commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880599b2a0d02b71b09ce07a47b86cc30497c14f" translate="yes" xml:space="preserve">
          <source>Examples of dual commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d204b0df57a68de79aef7f1fd315a2e7b2a9a438" translate="yes" xml:space="preserve">
          <source>Examples of parent commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0d3ed4241015f9415aadcca1eb538de8674009" translate="yes" xml:space="preserve">
          <source>Examples of test cases that will error due to superdomain limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff42aefbbc0310909afd6be7b156eb54bb540f2" translate="yes" xml:space="preserve">
          <source>Examples of uses for cross-origin iframes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e9034158a2364c3c5b98c0752190049b235fcf" translate="yes" xml:space="preserve">
          <source>Examples of what Cypress does under the hood:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="22245bf552f5d1e2a656f31f439a800f6c9f57de" translate="yes" xml:space="preserve">
          <source>Excluding and Including Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2205d33617d3487ee53d2f99d5ea8fab62b927bf" translate="yes" xml:space="preserve">
          <source>Execute a system command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293192e5f7a60a5cbe28b76ed29b72afd3ab0c94" translate="yes" xml:space="preserve">
          <source>Execute code in &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt; via the &lt;code&gt;task&lt;/code&gt; plugin event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e52bd11234a2f4997a4cb3136a71f017d930d1" translate="yes" xml:space="preserve">
          <source>Execution context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284fa58481d3e55b48c5f0000e3ff2086a2419ac" translate="yes" xml:space="preserve">
          <source>Existence</source>
          <target state="translated">Existence</target>
        </trans-unit>
        <trans-unit id="588d3efad476bd665ea1113c22f9fa826dddbdf5" translate="yes" xml:space="preserve">
          <source>Expand an array into multiple arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517e48c755df8c558e3a0004f395ad1b4a6a779a" translate="yes" xml:space="preserve">
          <source>Expand the array of aliased routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b75ea762de66715d0880a384408dc20c0b3c27" translate="yes" xml:space="preserve">
          <source>Expand the array of cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafef844945eb3c16eb95dc63d90a555f95ac65d" translate="yes" xml:space="preserve">
          <source>Expected Binary Name(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee30f777a419d0761dc9182ee6ecf7d6de239b9" translate="yes" xml:space="preserve">
          <source>Expected Bundle Identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66c03cd448547b57e1fca30f9bcec2391bbb658" translate="yes" xml:space="preserve">
          <source>Expected Executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26c182298228cb8abbe3f2ddd9eb69638d5d6ae" translate="yes" xml:space="preserve">
          <source>Expected Path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23b41f77d0fb81d072c86413aa54d927a01952b" translate="yes" xml:space="preserve">
          <source>Explicit Subjects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d69f6e534c93f0e5d5c0e0762b1a67f56a0e324" translate="yes" xml:space="preserve">
          <source>Explicit assertions are great when you want to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bc7ed5c90afc6a09277e9af44f3ba18a6f6940" translate="yes" xml:space="preserve">
          <source>Export as `CYPRESS_*`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee305a454b9b7fc3f84b4d3faf7ab6165973e05" translate="yes" xml:space="preserve">
          <source>Export cypress env variables from the command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa226bf009dca3cc6b371340f08ea1acef8bbf8" translate="yes" xml:space="preserve">
          <source>Expose data stores (like in Redux) so you can programmatically alter the state of your application directly from your test code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5899935f519c40597972d8a3546b6c97a34e4b" translate="yes" xml:space="preserve">
          <source>Exposed &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method to check if a value is a valid instance of &lt;code&gt;cy&lt;/code&gt; or a &lt;code&gt;cy&lt;/code&gt; chainable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97816fcca80f877e1dd8c8d4a9b6746975f3cd76" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; which holds the logic for determining an element&amp;rsquo;s visibility. Modify this to change the rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f1aaf7cb56bdc17b80540dea6988478e8416f6" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;visitTimeout&lt;/code&gt; and &lt;code&gt;requestTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6541ac0205de7e153f9bdde35833e5943314f3" translate="yes" xml:space="preserve">
          <source>Exposing Cypress Binary should no longer be necessary when cypress is locally installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;#379&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e718c76626048f58de044a2f8c12f3bab9df0749" translate="yes" xml:space="preserve">
          <source>Extending other testing frameworks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff31dec6da157357b783dcfac904369b48b36fc" translate="yes" xml:space="preserve">
          <source>Extension policies: &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494df28871f4062b348ebe4435b410b3dce90c80" translate="yes" xml:space="preserve">
          <source>Extensive memory profiling has been done and Cypress has implemented several strategies for aggressively causing garbage collection. The ebugging tools (which allow you to walk back in time through DOM snapshots, or access objects from previous tests) could exhaust all available emory in previous versions. This likely never affected most users, but if a user ran 1000&amp;rsquo;s of tests (which have been written in Cypress) it ould bomb. Now Cypress only stores data for up to 50 tests, and will begin purging data past that. When run in the terminal, Cypress doesn&amp;rsquo;t apply any of its debugging tools, so CI will be unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7470bcae7dc95c1672e3376b1d6f69778f458ce" translate="yes" xml:space="preserve">
          <source>External Navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af280979e642a405f24bf2e6b6503a218b35f10" translate="yes" xml:space="preserve">
          <source>Extra whitespace and quotations are now stripped from the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to help prevent some unexpected results when set in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;#4506&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89067fa664cb37a8a9e475b99e5cf190db554dca" translate="yes" xml:space="preserve">
          <source>Failing a hook will no longer continue to count the duration forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c940af38cb35879503e53721ac8014d87ca75a1d" translate="yes" xml:space="preserve">
          <source>Failing tests which become passing will automatically collapse again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c4bd1d829292dc8565f6007a335c96eb1f722c" translate="yes" xml:space="preserve">
          <source>Failure messages are much more precise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eec15825d37016fd28fda8986cbc917e7a33c68" translate="yes" xml:space="preserve">
          <source>Failures</source>
          <target state="translated">Failures</target>
        </trans-unit>
        <trans-unit id="79b1b853fcf18ff708b48a26d6bca547168086f2" translate="yes" xml:space="preserve">
          <source>Fast, &amp;lt; 20ms response times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8701b6c18329b6a2215e2ed7ea8428d157b3ee" translate="yes" xml:space="preserve">
          <source>Fast, easy and reliable visual UI testing with Cypress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dd84b887712a47a223e7acb621659657045025" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf73c4da1a11de431287bb2178a27739b085cd2a" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bd3404c5abcb1cca7ae893772036a47f83d02b" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="b2da05997204759c0568480dcc216c1f835ad8c5" translate="yes" xml:space="preserve">
          <source>Feel free to &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;explore these additional logging in&lt;/a&gt; recipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66de98b66dd6c45b26036329406669348c695928" translate="yes" xml:space="preserve">
          <source>Feel free to submit your published plugins to our &lt;a href=&quot;../../plugins/index&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663da9347806aa189f920ceb8b6f5cd33e8f3793" translate="yes" xml:space="preserve">
          <source>File changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7687744db8976c35166c825d15906dc94662741b" translate="yes" xml:space="preserve">
          <source>File events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c5bd3a1f18fe1dd0f0628bb953a4183220028e" translate="yes" xml:space="preserve">
          <source>File object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feffac916d35a0e2a6b23d0031377f4f282551f9" translate="yes" xml:space="preserve">
          <source>File system flag as used with &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91f50eead81f93d83448a8f1b714b149e54d231" translate="yes" xml:space="preserve">
          <source>File watching is fixed (again) when changing between specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;#1018&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="e75c9effd39648002ee3fa4279bf21407b3ca86e" translate="yes" xml:space="preserve">
          <source>Fill in and submit the OSS plan request form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb080a9f7cb2c3f7fe88c9ed4be9c41ef934c26" translate="yes" xml:space="preserve">
          <source>Fill in the name of your project (this is only for display purposes and can be changed later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a865659c5e8630a023fa6bf42dbaabaf6c0c4f40" translate="yes" xml:space="preserve">
          <source>Fill in their email and select their &lt;a href=&quot;#User-roles&quot;&gt;role&lt;/a&gt; then click &lt;strong&gt;Invite User&lt;/strong&gt;&lt;em&gt;Note: only &amp;lsquo;owners can give other user&amp;rsquo;s &amp;lsquo;owner&amp;rsquo; access.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098832ec24832f68e39ac3c1aa619064c4962e5c" translate="yes" xml:space="preserve">
          <source>Filter DOM element(s) from a set of DOM elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50b864ca2457f8d6f9fc854473b9edbbd945cd2" translate="yes" xml:space="preserve">
          <source>Filter the current subject to the elements with the class &amp;lsquo;active&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27ab78e842f8d231922bc0a6c4ebfcbe7e1e1e2" translate="yes" xml:space="preserve">
          <source>Filtered out Ajax requests for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; files by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2cf4e08bb232e200ef4bc511c6b34132810357" translate="yes" xml:space="preserve">
          <source>Final run status (passed, failed, etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688b6ff3fc931c6dd9c36d8b51fdc1ea3590d8a2" translate="yes" xml:space="preserve">
          <source>Finally tracked down and fixed edge case causing empty view to display when tests were not empty. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;#13&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a5f5552afd89b23d9c52a20feccb3d490f76b6" translate="yes" xml:space="preserve">
          <source>Finally, we support creating your own custom reporters or using any kind of 3rd party reporter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e11838bb265e408c3b20a233e6d4ca384ba884" translate="yes" xml:space="preserve">
          <source>Find 5 elements with the given data attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92368cf8c0b0b17d5bfdb96f8c843e1b7832f6ce" translate="yes" xml:space="preserve">
          <source>Find all of the &lt;code&gt;.active&lt;/code&gt; element&amp;rsquo;s ancestors until &lt;code&gt;.nav&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c541c51d6a1a5c57200fc70b87a281be5d1da8d" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;#nuts&lt;/code&gt; until &lt;code&gt;#veggies&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f61919f1581dec2bf2d5cf12c24826c0f271991" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;.third&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf397003d132ad643c0e26fc7fbcf78ecc493ec5" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d29db1950969e3784a8c02e121a375d800fa05" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b19f789476d7ab74f3c3a8ad986e98fa7c56fb" translate="yes" xml:space="preserve">
          <source>Find all of the following siblings of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c992ea11a8cf058b4435966e028bb9f7a37ed95f" translate="yes" xml:space="preserve">
          <source>Find all of the previous siblings of each &lt;code&gt;li&lt;/code&gt;. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ac7d74405f965af6b5783c7d44735681a64289" translate="yes" xml:space="preserve">
          <source>Find an element by its selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6104679c51c71ca5e3c4c8420302b383f5606442" translate="yes" xml:space="preserve">
          <source>Find an element by its selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfac6dd422443d147406aa7dc4c9bde585b6026" translate="yes" xml:space="preserve">
          <source>Find the 2nd element within the elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd1d71d3c4462c2c514b8869c373720f113aefe" translate="yes" xml:space="preserve">
          <source>Find the 2nd from the last element within the elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66febaf0d0deb961859132d85eec19f706c7fd31" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-body&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10cbcf8128ccc542cc5f4d349272af73f1982d7" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-title&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa7a7a24fec1dd97f14855f0347bdb63199299d" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;h1&lt;/code&gt; tag, ensure it contains the text &amp;ldquo;My First Post&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a629d480b77f87962de841533ac568613cca727" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;input[type='submit']&lt;/code&gt; by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c01ef4267a8207f2efc0f895e23cbf8c0c9dab" translate="yes" xml:space="preserve">
          <source>Find the TypeScript definition for the results object in the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;&lt;code&gt;cypress/cli/types&lt;/code&gt; folder&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10df2b3516f7e33c34a15898a97d21e45db73ca2" translate="yes" xml:space="preserve">
          <source>Find the closest element of &lt;code&gt;li.active&lt;/code&gt; with the class &amp;lsquo;nav&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9903e70c221c495e32ab6ceb17ffcbc3dd4c75b2" translate="yes" xml:space="preserve">
          <source>Find the closest element of the &lt;code&gt;.error&lt;/code&gt; with the class &amp;lsquo;banner&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075f836a43dce9616ea5659aa81eaa8ad295ba3f" translate="yes" xml:space="preserve">
          <source>Find the complete CircleCI v2 example with caching and artifact upload in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cc283dc3702c8d3e6d222ab076e9bf3b77445a" translate="yes" xml:space="preserve">
          <source>Find the dropdown-menu and click it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe6d0a917538cd5b8200bdc5503b9bfd7c54a8a" translate="yes" xml:space="preserve">
          <source>Find the element containing the text &lt;code&gt;Submit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45aaee6ddbabbbed5ee653102c34f6e299a862f" translate="yes" xml:space="preserve">
          <source>Find the element next to &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bab536a6c5451fa8c798585ff1ed23fc2d2733" translate="yes" xml:space="preserve">
          <source>Find the element with content: &lt;code&gt;type&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fbb7af5c1b67383d92e9b8b2376530e800a405" translate="yes" xml:space="preserve">
          <source>Find the first &lt;code&gt;li&lt;/code&gt; descendent within a &lt;code&gt;ul&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5dc13574576534052754b465d51599a18744fe" translate="yes" xml:space="preserve">
          <source>Find the first element containing a number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffee2601a6f1877a2e04498faf28aaf834aa5e2" translate="yes" xml:space="preserve">
          <source>Find the first element containing some text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303d529ce52ae406adef3293db17ef34a6013e64" translate="yes" xml:space="preserve">
          <source>Find the first element with text matching the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9ad828e76201eaec43c5bd8b7495a6b5e9aa1b" translate="yes" xml:space="preserve">
          <source>Find the previous element of the element with class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b050e5303f0aeff67972b597916c20cb954e472e" translate="yes" xml:space="preserve">
          <source>Find the previous element with a class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48ae5b1727499efa01b744170218b06cbf5a048" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d913fabe6d31a552f869448ec77af59ce7ab7ef" translate="yes" xml:space="preserve">
          <source>Finding Selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3716d23e9ad7315ba3e5e070513375357d405fce" translate="yes" xml:space="preserve">
          <source>Fire the event at a descendent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c8fbf533787f205ef74cb4ef685fa5336a95bd" translate="yes" xml:space="preserve">
          <source>Fire the event at the desired coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3297c2c690e3329a34b567de00181d54c48fdc24" translate="yes" xml:space="preserve">
          <source>Fires after all your resources have finished loading after a page transition. This fires at the exact same time as a &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onLoad&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bcba53d3ddc0803f41e82a2e2197390e4654af" translate="yes" xml:space="preserve">
          <source>Fires after the test and all &lt;strong&gt;afterEach&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt; hooks run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b542efbb04e9cc7735acf1c6261c28a91865b0" translate="yes" xml:space="preserve">
          <source>Fires as the page begins to load, but before any of your applications JavaScript has executed. This fires at the exact same time as &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onBeforeLoad&lt;/code&gt; callback. Useful to modify the window on a page transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f9dd1b33251212c25a404143902e006ee99261" translate="yes" xml:space="preserve">
          <source>Fires before the test and all &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;beforeEach&lt;/strong&gt; hooks run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a3efcfbcbc43c00380e65ca6e41d27711c6f1b" translate="yes" xml:space="preserve">
          <source>Fires when a cy command is first invoked and enqueued to be run later. Useful for debugging purposes if you&amp;rsquo;re confused about the order in which commands will execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dec5789ec4fa855297114ba75e3f8339135c7a5" translate="yes" xml:space="preserve">
          <source>Fires when an uncaught exception occurs in your application. Cypress will fail the test when this fires. Return &lt;code&gt;false&lt;/code&gt; from this event and Cypress will not fail the test. Also useful for debugging purposes because the actual &lt;code&gt;error&lt;/code&gt; instance is provided to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca3ed7f57c3d04ed29b48a431210d5cfefd574d" translate="yes" xml:space="preserve">
          <source>Fires when cy begins actually running and executing your command. Useful for debugging and understanding how the command queue is async.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf570e78794600150280ae9f2447cadfed546db" translate="yes" xml:space="preserve">
          <source>Fires when cy finishes running and executing your command. Useful for debugging and understanding how commands are handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd7817fa57e4ccf201566aefa2db46574c9786d" translate="yes" xml:space="preserve">
          <source>Fires when the test has failed. It is technically possible to prevent the test from actually failing by binding to this event and invoking an async &lt;code&gt;done&lt;/code&gt; callback. However this is &lt;strong&gt;strongly discouraged&lt;/strong&gt;. Tests should never legitimately fail. This event exists because it&amp;rsquo;s extremely useful for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fcf72a456dcba1707986a3154aceaea166e797" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.alert()&lt;/code&gt; method. Cypress will auto accept alerts. You cannot change this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befd5f340a17860fcb8ef526396363696792b89c" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.confirm()&lt;/code&gt; method. Cypress will auto accept confirmations. Return &lt;code&gt;false&lt;/code&gt; from this event and the confirmation will be canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20583e05027ccd1f90b17c009fed01d0cb0ba65a" translate="yes" xml:space="preserve">
          <source>Fires when your application is about to navigate away. The real event object is provided to you. Your app may have set a &lt;code&gt;returnValue&lt;/code&gt; on the event, which is useful to assert on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63603917c7fb0ef19543583000876125715fc732" translate="yes" xml:space="preserve">
          <source>Fires when your application is has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395a5ae275d0ea21c36c59f721485c25305c611e" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6f542e38ecdc0178d0083539cb84e9e36f9f9e" translate="yes" xml:space="preserve">
          <source>Fires whenever Cypress detects that your application&amp;rsquo;s URL has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fdf04e181c4d29f74c1cff8247a77392a18edf" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1b9e40db73c50b362b03b85fe6cb8f78a91a6a" translate="yes" xml:space="preserve">
          <source>Fires whenever a command emits this event so it can be displayed in the Command Log. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a70e102286861560c039597e66d12a2e7a950a7" translate="yes" xml:space="preserve">
          <source>Fires whenever a command&amp;rsquo;s attributes changes. This event is debounced to prevent it from firing too quickly and too often. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe5a40f60250d1365d6022a092e685ce47f4e8b" translate="yes" xml:space="preserve">
          <source>Fires whenever the viewport changes via a &lt;code&gt;cy.viewport()&lt;/code&gt; or naturally when Cypress resets the viewport to the default between tests. Useful for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216f7ec41381a4aea27403eb443a599bc0b9e418" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s visit a web page. We will visit our &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; application in this example so that you can try Cypress out without needing to worry about finding a page to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51747a9109d9350312217267bedd3d22a3f73a4" translate="yes" xml:space="preserve">
          <source>First, print where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2328b7180d662b87895b228f6df298db17f851a3" translate="yes" xml:space="preserve">
          <source>Fix capitalization of &lt;code&gt;Xvfb&lt;/code&gt; in error messages. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;#4262&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86af0c91e4d554a431841c4b48230d1e03a384e5" translate="yes" xml:space="preserve">
          <source>Fix edge case with forced focusing / blurring an element when document is not in focus and the element is no longer in the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bb69b63d17fe3ceb1c091b056c08de1d1091b6" translate="yes" xml:space="preserve">
          <source>Fix for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; SSL issues when host certificates were self signed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578717dae25898e735a633254852c0af1a4b25fb" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;__initial=true&lt;/code&gt; query param on initial redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4967afa344c3a7afc269d86cfd6e6d2855feee" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;moment.js&lt;/code&gt; from &lt;code&gt;bower.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5473e1c9b6b37c4c0e900c359ce20540eae846ba" translate="yes" xml:space="preserve">
          <source>Fix missing trailing slash from initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01dce2ea309fbcd0cf6dc57ea3ce76e1385ec0f" translate="yes" xml:space="preserve">
          <source>Fix sourceMappingURL browser bug &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b0d124e84238ede72803d0137923b1e12efc87" translate="yes" xml:space="preserve">
          <source>Fix test titles not being escaped due to refactoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafd288aaf76025069d7a6bb6e7b941f1fb9698a" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; breaking on chains when passing the same &lt;code&gt;options&lt;/code&gt; references. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;#365&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74b09d876152e4f811aefa8d06cec8d4ab086cb" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; inserting a rogue &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag after the first letter in &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;#1926&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d62b10a280f839c5da56508e01deb48c1beb4e" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing &lt;code&gt;input&lt;/code&gt; event for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; on versions 15.6.x. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;#536&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f662f8fac4741daea21d050277cd93e22c3d41e4" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;opener of undefined&lt;/code&gt; errors due to &lt;code&gt;page load&lt;/code&gt; events causing snapshots prior to the &lt;code&gt;load&lt;/code&gt; event of the remote application. Thanks to everyone who helped pitched in on this one! Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;#258&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235303e914ef7bbd134d04d6915d4bbb3dca43f8" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;selectionStart&lt;/code&gt; and &lt;code&gt;selectionEnd&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; when using &lt;code&gt;{leftarrow}&lt;/code&gt; or &lt;code&gt;{rightarrow}&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;#1234&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d906e96dd65bcb3ff8c488e394665a96ee5e42" translate="yes" xml:space="preserve">
          <source>Fixed Cypress hanging in CI due to excessive and unnecessary globbing. We finally tracked down this issue which made it appear as if Cypress was &amp;ldquo;hanging&amp;rdquo; after closing a spec file and then attempting to open the next one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;#2183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef17c202682eca1a169dad619332a8557814c664" translate="yes" xml:space="preserve">
          <source>Fixed Cypress not correctly aborting long running connections (such as server sent events) on proxied requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;#2612&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9669770f306f25a505189c057478c54515db829" translate="yes" xml:space="preserve">
          <source>Fixed Test Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a9fead295c05643d7ba8ee723e8713a1aa5903" translate="yes" xml:space="preserve">
          <source>Fixed Type error being thrown for users using TypeScript 3. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;#2363&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc28540a862ccbf3f051f0f0ef94a933350e1c0" translate="yes" xml:space="preserve">
          <source>Fixed TypeScript error caused by &lt;code&gt;dtslint&lt;/code&gt; dependency introduced in 3.1.4. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;#3024&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;#3136&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea00df4206deeacedda8d66d0f1517b23f5420c" translate="yes" xml:space="preserve">
          <source>Fixed URL proxy issue with subdomains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;#183&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9c7b352ca8a81eb3f730094b9d5febac64dfda" translate="yes" xml:space="preserve">
          <source>Fixed a bug causing screenshots saved via &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to be in different folders when you ran using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; . Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;#2091&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea194ebc7a0241467b7bb6eeb910f0701101a6c" translate="yes" xml:space="preserve">
          <source>Fixed a bug for users running external network proxies that prevented requests from completing. Requests should now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;#4257&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84701a971c52fe0ef5b810aad2a8c5a06fdc37b7" translate="yes" xml:space="preserve">
          <source>Fixed a bug in node core where Cypress would not show up in &lt;code&gt;Windows&lt;/code&gt; for users on &lt;code&gt;node &amp;gt;= 11&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35385a2c12d0f71f7a53c301b5b3d47658ae821" translate="yes" xml:space="preserve">
          <source>Fixed a bug swallowing plugin errors due to undefined &lt;code&gt;reject&lt;/code&gt; function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;#934&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b94e0824d2385a70f66519b1a2622224be5d05" translate="yes" xml:space="preserve">
          <source>Fixed a bug that caused commands to time out on subsequent tests whenever there was an uncaught error + an assertion conflict. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;#238&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d07b2b277c7a574b44ce7b49b691fb502615ec" translate="yes" xml:space="preserve">
          <source>Fixed a bug when dismissing pinned snapshots that would cause the page to be wiped with nothing rendered. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;#4864&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16717acc2ae6358676798e3692b5d47326a62da8" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress could get into a weird state and continuously error due to the &lt;code&gt;before:log&lt;/code&gt; event not being properly disposed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;#173&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa86e87c6a9a9f15bdd343f3f770a5b166471b9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress would error when a secure cookie flag was set and then expired from an HTTPS url without the subsequent secure flag. Due to the way Cypress was constructing the url, this would fail to actually remove the cookie. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;#1264&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;#1321&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;#1799&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d50b3ebf539cc9de8a209eaf4f48b723bc843f9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where changing the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;integrationFolder&lt;/code&gt;&lt;/a&gt; in Windows would lead to errors with plugins. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;#1704&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b9d234159f57e0c9b70792318f4c4aa09e9b06" translate="yes" xml:space="preserve">
          <source>Fixed a bug where invalid UTF-8 characters were being set in XHR headers which caused XHR&amp;rsquo;s to fail. We now properly encode and decode all values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;#168&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1745cac84918b4aa3fcecaa76b4fcbe6bf490e60" translate="yes" xml:space="preserve">
          <source>Fixed a bug where the content of pages using non-UTF-8 character encoding would become corrupted when opened in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;#3479&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;#1543&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;#3650&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded6e51b9b2958b84683311abf2544d7c477a842" translate="yes" xml:space="preserve">
          <source>Fixed a bug with Windows users seeing crashes with &lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;#1815&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;#1817&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda5c8938aaac4d872e48df690c7dd43f41fdb20" translate="yes" xml:space="preserve">
          <source>Fixed a bug with issuing an additional &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; event when chaining &lt;code&gt;.clear().type(...)&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;#593&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469c74a2070f33b117fa7dca5c32e8f5f00b8745" translate="yes" xml:space="preserve">
          <source>Fixed a bug with trashing assets in linux that caused recursive &lt;code&gt;.Trash&lt;/code&gt; files to show up. We now have opted to actually &lt;code&gt;rm -rf&lt;/code&gt; the files in linux because trashing is too inconsistent between linux distros. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;#2742&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c520262c89b3ac07c8baf1a654a558e6ed3db1b" translate="yes" xml:space="preserve">
          <source>Fixed a couple regressions in the Dashboard where timed out runs stayed &amp;ldquo;Pending&amp;rdquo; forever. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;#1891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;#1952&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fcb4eea65108e89c9c6443dade9cb50ba551ca" translate="yes" xml:space="preserve">
          <source>Fixed a deployment bug in the &lt;code&gt;core-desktop-gui&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f061b7f560d64349dba98a8aedb318738f61fbb4" translate="yes" xml:space="preserve">
          <source>Fixed a handful of scenarios and edge cases where cookies were not properly synchronized between external requests and the browser. This led to situations where cookies were either duplicated on requests, or were not sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;#357&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;#361&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;#362&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188f048d711e6696c9c8df5820c6c238970fcef3" translate="yes" xml:space="preserve">
          <source>Fixed a longstanding issue in Cypress where logging in from another computer would kill the session on all other computers, and prevent you from accessing &lt;code&gt;cypress get:key&lt;/code&gt; (amongst other things). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;#400&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125f3c706233139b5634955a5661ec6e1d443e79" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused by &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; adhering to &lt;code&gt;maxlength&lt;/code&gt; incorrectly. Special character sequences were not respected. Now &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; works with special characters and implements a complete fix for &lt;code&gt;maxlength&lt;/code&gt;. In addition to it working, it now fires all applicable browser events without modifying the actual input value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;#955&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f207b226d195fcbac964a5875c845dac2c2b05" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused in &lt;code&gt;3.1.1&lt;/code&gt; where we attempted to set a property on an invalid cookie sent from a server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;#2724&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bc8296f43c8bf5bc550d085c1248af39a32c04" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing large requests such as &lt;code&gt;multipart/form-data&lt;/code&gt; uploads to hang. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;#4240&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;#4252&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;#4253&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718a1ff91ed67f4a43b3e64705ec6af59b8cc17c" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing some users using proxy to see the &amp;ldquo;Browser was not launched through Cypress&amp;rdquo; error during &lt;code&gt;cypress open&lt;/code&gt;. This was caused by incorrectly routing requests for Cypress&amp;rsquo;s internal server on &lt;code&gt;localhost&lt;/code&gt; through the user&amp;rsquo;s proxy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;#4410&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bf3f7a02bd774b4f45bba54e1708bbbec88a77" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.1&lt;/code&gt; that was incorrectly setting &lt;code&gt;Cache&lt;/code&gt; headers. This &lt;em&gt;could&lt;/em&gt; cause a situation where you received an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin error. Additionally we now set &lt;code&gt;No-Cache&lt;/code&gt; headers whenever we inject content, but otherwise respect the headers coming from web servers. When using Cypress as the file server, we set &lt;code&gt;etags&lt;/code&gt; but prevent caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797d082c75d18ab24086fb4a5aabff0a9d5357c0" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.2&lt;/code&gt; which caused &lt;strong&gt;separate&lt;/strong&gt; tests that were visiting the same URL not to actually visit the new URL and eventually time out. We&amp;rsquo;ve updated some of our internal QA processes around this because we rarely have regressions and they are a pretty big deal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;#225&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40060b269c8fc30e6502dd8d290d1f068f602ced" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;3.0.2&lt;/code&gt; that caused typing &lt;code&gt;{enter}&lt;/code&gt; not to submit a form when there were &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements other than &lt;code&gt;type='submit'&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;#2261&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;#2326&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda6d14158f1ca7ec8929275ab499aa9d41aac90" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to throw a &lt;code&gt;EISDIR&lt;/code&gt; error if a directory had the same name as a file within that same directory. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;#3739&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f5df8f3f31bad1f7203993fb1b2f8f4b232bde" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; to no longer retry when it yields &lt;code&gt;undefined&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;#3837&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0de1cc648e5d061dd3d9554106a7e7e22e8624" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused an error to throw when visiting domains with certain public suffixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e56f00230509efa8dac3e3c46581c3dcdda0b82" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; that caused an error to be thrown when chaining together multiple assertions using the &lt;code&gt;and&lt;/code&gt; chainable getter. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd475981c3a413149ca03f811cd7aeb4ada6f22a" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;code&gt;3.x.x&lt;/code&gt; where application code that used &lt;code&gt;setTimeout&lt;/code&gt; with a string argument would see the error &lt;code&gt;fn.apply is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;#1854&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af27ef3a8c5b1eb360f49945fa5020fda8149632" translate="yes" xml:space="preserve">
          <source>Fixed a regression where tests that failed outside of a hook would incorrectly indicate themselves as a &lt;code&gt;before each&lt;/code&gt; hook. In addition, in the default &lt;code&gt;spec&lt;/code&gt;, reporter will now display the test name when a hook was the source of failure. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;#253&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6a48c43848b909388100743330443ecff9d966" translate="yes" xml:space="preserve">
          <source>Fixed a runaway RegExp causing large &lt;code&gt;.js&lt;/code&gt; files to take dozens of seconds to process. This was a regression caused by &lt;code&gt;2.0.0&lt;/code&gt; with the new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; option. We&amp;rsquo;ve optimized the RegExp and the performance is back to being almost identical to transparently passing responses through. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;#1330&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad28b2e2f139b4f56dd509edc39f63bc289fc0b8" translate="yes" xml:space="preserve">
          <source>Fixed a small visual bug where failed commands were not aligned to other commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;#2314&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b3da33f022c8918a8fee4cd409fa5b0fa5bc32" translate="yes" xml:space="preserve">
          <source>Fixed a very longstanding (!) issue where &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; would fail to click the center coordinates of elements with style &lt;code&gt;display: inline&lt;/code&gt;. Cypress would instead report that the element was being covered causing the error: &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;#210&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8488e4ff3fa99d45f5aac3d43763fd3bd4dc1c31" translate="yes" xml:space="preserve">
          <source>Fixed a visual bug when aliasing a non-route subject multiple times that would cause the Test Runner to show &amp;lsquo;undefined&amp;rsquo; alias with empty counts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;#4429&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb032515c85605b59f3782be31262996bff85914" translate="yes" xml:space="preserve">
          <source>Fixed alt tray icon so it shows up correctly on click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313a913671a903142640a3d934767834ab3ee524" translate="yes" xml:space="preserve">
          <source>Fixed an edge case in the &lt;code&gt;driver&lt;/code&gt; that could lead to memory leaks. This happened when Command Logs updated from previously run tests. Normally, in headless mode, we automatically remove references to purge memory after each test, but when logs were updated after this, their references were merged back in again and held onto forever. If you were seeing long Cypress runs die or eventually halt, this was likely the cause. We did extensive memory regression analysis on Cypress and could not find any more memory leaks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;#301&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb080bbba9a5a85990fa91f1b178e3eb7cb2d0b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when hooks such as &lt;code&gt;beforeEach&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; threw an &lt;strong&gt;identical&lt;/strong&gt; error message, Cypress would hang indefinitely and never finish running the tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;#674&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2661a63af2ce07d2cc706e56312cdae37b3f6ed6" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when writing a test with a &lt;code&gt;done&lt;/code&gt; callback alongside &lt;code&gt;cy&lt;/code&gt; commands. This situation would always cause a timeout after 30 seconds even though the test would pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c257669938ad8d8588a5d98ce4bc6d698f7e89b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case where assertions would incorrectly associate to a previously run assertion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;#252&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f6b62fc97458e6561cf3b928ec860cd9b1dc47" translate="yes" xml:space="preserve">
          <source>Fixed an issue causing &lt;code&gt;Chrome&lt;/code&gt; to timeout when attempted to be run through our docker containers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;#1031&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acea776ba5899e734dd14a6a1309901365ecaf8" translate="yes" xml:space="preserve">
          <source>Fixed an issue when testing applications using older versions of jQuery. They now no longer throw &lt;code&gt;item.first is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;#2927&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df9794ea315081304a449996ce2c238d0a619fc" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress would inject content into the &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;#2026&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503a7789189e2cc3fea11c127b7ef29ccf854e25" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress&amp;rsquo;s &lt;code&gt;devDependencies&lt;/code&gt; were being included in the Windows binary. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;#2896&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9a67d1e1a1a3d9f46755d7554324c5b006cbfa" translate="yes" xml:space="preserve">
          <source>Fixed an issue where highlighting a command&amp;rsquo;s snapshot would throw an error when no application was rendered in the AUT frame. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;#4177&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8634090de3bb23f05d8348be273ac80a2f06895b" translate="yes" xml:space="preserve">
          <source>Fixed an issue where returning/resolving &lt;code&gt;undefined&lt;/code&gt; from a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; handler resulted in an incorrect runtime error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;#2553&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c620b3b816b83868106dcda7ca6573a168f7e4f2" translate="yes" xml:space="preserve">
          <source>Fixed an issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; not behaving the same as &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;#420&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba35f7f430bc3eb760682eeba295aa9b02318261" translate="yes" xml:space="preserve">
          <source>Fixed an oversight where a specific framebusting check was not being properly stripped and removed by the default config option &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;#2030&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;#2059&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3feeb11c878c0b1b6c2b42b4926ba57769c0a27" translate="yes" xml:space="preserve">
          <source>Fixed another Dashboard regression where an error would throw when recording tests and sending a large list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;#1901&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95ba80c09d2573eaefec9828019f86ac7fc513f" translate="yes" xml:space="preserve">
          <source>Fixed another bug with Chrome that caused the &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; option to not be respected. This was due to Chrome progressively rolling out trials of a new option that attempts to isolate sites (and iframes) in their own child process if their origins are different. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;#1951&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;#2001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;#715&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94853bb9ca7c86396cbd9c57c0364c019a3f65d1" translate="yes" xml:space="preserve">
          <source>Fixed another issue in Chrome* versions &amp;gt;= 72 where a scrollable command log would cause the entire application to be scrollable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;#3253&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696f0ff4fbb232ea2e711589bbb9e959ff73ea3e" translate="yes" xml:space="preserve">
          <source>Fixed another regression in &lt;code&gt;3.1.1&lt;/code&gt; where passing &lt;code&gt;undefined&lt;/code&gt; to a &lt;code&gt;setTimeout&lt;/code&gt; caused Cypress to error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;#2719&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebadebc5158757be71142267de0bf16766d036c" translate="yes" xml:space="preserve">
          <source>Fixed bug in Mocha where it incorrectly associates &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; to the wrong &lt;code&gt;test&lt;/code&gt;. &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;Mocha Issue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612dfb9e3b3cdc617ab91ece26ddc8558ce3af03" translate="yes" xml:space="preserve">
          <source>Fixed bug when &lt;code&gt;Errors&lt;/code&gt; that threw with no arguments: &lt;code&gt;throw new Error()&lt;/code&gt; and had their messages appended would duplicate the message over and over again. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;#1338&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918a3cf4f69c121b36ee0b2424185525b6d9ad4b" translate="yes" xml:space="preserve">
          <source>Fixed bug where mocked Dates using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; would not be an instance of &lt;code&gt;Date&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;#2570&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee9efa7d8a12b518bf4119349b5f2d9f0cde469" translate="yes" xml:space="preserve">
          <source>Fixed bug where only the first DOM element of an array of DOM elements would be blacked out after being passed as argument to &lt;code&gt;blackout&lt;/code&gt; within &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;#2508&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f661fc4b9db21728381b6001a9e54604f162657d" translate="yes" xml:space="preserve">
          <source>Fixed bug where tests were failing due to assertions causing Cypress to accidentally iterate through cross-origin iframes. If you were seeing &amp;ldquo;random&amp;rdquo; cross-origin errors, this likely fixes those issues. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;#2784&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c19c5dbeb10fc37ea3887a8e9309cd3159aebf" translate="yes" xml:space="preserve">
          <source>Fixed bug with custom 3rd party Mocha reporters relying on &lt;code&gt;test.titlePath&lt;/code&gt; being a function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;#1142&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e77d2327f9187fbef2c0ab464f495a2f7e023ca" translate="yes" xml:space="preserve">
          <source>Fixed bugs with Electron losing focus when running headlessly via &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; after navigation. Now the browser will always act as if it is focused no matter what and in all situations when running headlessly. If you were seeing focus related problems when running headlessly, this should fix them. Fixes issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;#2190&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7025ef6c77bddd2485fa875c1d5be6a4b45e734a" translate="yes" xml:space="preserve">
          <source>Fixed busted internal timers that caused random timeouts, proxy errors, incorrect delays, and long pauses when loading the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;#572&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56be5cf5478837f13541225d0c7cd0fe3342d7ea" translate="yes" xml:space="preserve">
          <source>Fixed code example for google analytics stubbing &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;#1454&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2742a044ddb90cd808739a321eebf8d6fcbc15bc" translate="yes" xml:space="preserve">
          <source>Fixed display of tooltips when selecting elements from the Selector Playground so that they display at the correct coordinates when scrolling. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;#1351&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251641485084c6e1d7bc15a495074840c8bbd600" translate="yes" xml:space="preserve">
          <source>Fixed displaying &lt;code&gt;(null)&lt;/code&gt; contentType when a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; returned a &lt;code&gt;404&lt;/code&gt; status code. We now only display &lt;code&gt;contentType&lt;/code&gt; when one exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0af6a0db32674c472a21c20d182a7188e2555d" translate="yes" xml:space="preserve">
          <source>Fixed domain parsing failures when &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt; was not used as a &lt;code&gt;tld&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;#1292&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;#1278&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a8afb7ba2a95345f8cb179792976f988c1c4a1" translate="yes" xml:space="preserve">
          <source>Fixed edge case where Cypress would not correctly handle &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; requests with a JSON body. These requests would just hang and eventually time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d7a413de44f197a54d70c4b3e138fc45ad09e8" translate="yes" xml:space="preserve">
          <source>Fixed edge case where XHR&amp;rsquo;s which were already aborted were aborted a 2nd time when tests end. Cypress now only aborts currently running XHR&amp;rsquo;s which have not already been aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15db83a7134834b98a8112f0a9f994c44579c61c" translate="yes" xml:space="preserve">
          <source>Fixed edge case with &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; and command options &lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; where it would always fail ven though the matched element was in the correct state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736d2fd6d67eea3c666645e76df7818015a827a3" translate="yes" xml:space="preserve">
          <source>Fixed error message on &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; when typing into non-typeable elements or clearing non-clearable elements to accurately list the elements allowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;#1650&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b2238de0c84627cddc80afe17c2ea623cb3c16" translate="yes" xml:space="preserve">
          <source>Fixed error when recording and failing to parse the git commit message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;#847&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;#841&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3040a4458cc421fb2d22a8003bbe0b372f72da17" translate="yes" xml:space="preserve">
          <source>Fixed even more issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not inserting characters on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;#1381&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4a60d5e898f49af55b20216c54316464791778" translate="yes" xml:space="preserve">
          <source>Fixed file watching when changing the &lt;code&gt;integrationFolder&lt;/code&gt; to something other than the default value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;#438&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71d3bd8125a553f32eb8e552ca0938dfda05a60" translate="yes" xml:space="preserve">
          <source>Fixed hook failure associated to wrong failed current test when &lt;code&gt;grep&lt;/code&gt; was set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773347c43b2905ce0adc0b80483b6cedf1665d7a" translate="yes" xml:space="preserve">
          <source>Fixed icons visually shifting when tests were running in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;#1983&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a639d3246f9660269f602500bc09f7512383b7c2" translate="yes" xml:space="preserve">
          <source>Fixed incomplete type definitions for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;#2305&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fe1fe1beaaad0ae95c08429f866661564ed878" translate="yes" xml:space="preserve">
          <source>Fixed incorrect JSDoc comments in type definition for &lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus()&lt;/a&gt; and better formatted comments in type definitions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;#2975&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;#2954&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812109db35de49de7db730b131b54593ddd17605" translate="yes" xml:space="preserve">
          <source>Fixed incorrect error message on reverse visibility assertions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;#275&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c069db9105c52c4f356c338dd1d13ea2ca1306f" translate="yes" xml:space="preserve">
          <source>Fixed incorrect type definition for options usage for &lt;a href=&quot;../../api/commands/then&quot;&gt;.then()&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;#3075&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b030fdcb00b2f9bf3970fa4fbc426e90f71819" translate="yes" xml:space="preserve">
          <source>Fixed incorrectly setting &lt;code&gt;charCode&lt;/code&gt; and &lt;code&gt;keyCode&lt;/code&gt; when using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on a few different special characters such as &lt;code&gt;{&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;#2105&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d73fb5c06694aa48acf2fc44c2e17262c62426" translate="yes" xml:space="preserve">
          <source>Fixed inserting the string &lt;code&gt;null&lt;/code&gt; into &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; urls when providing a &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; while origin could not be determined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;#274&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeb42766edda55645ad3cb0a7d8d0216d4eb01b" translate="yes" xml:space="preserve">
          <source>Fixed internal Cypress tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;#2606&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1382c51c4ccba4ae45334849e71d4f3885625dc2" translate="yes" xml:space="preserve">
          <source>Fixed internal test error &lt;code&gt;beforeSpecRun is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;#2401&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2017dd059d0898c9d6a5369d875f74f7a20a1f79" translate="yes" xml:space="preserve">
          <source>Fixed issue of Cypress being unable to play videos with &lt;code&gt;autoplay&lt;/code&gt;. We now pass the &lt;code&gt;--no-user-gesture-required&lt;/code&gt; command line switch to Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;#2376&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1454c9f7e105098250079b6197e4fc0d616f586" translate="yes" xml:space="preserve">
          <source>Fixed issue when using &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; and passing an object to a &lt;code&gt;.json&lt;/code&gt; file. The object is now correctly written to the JSON file instead of a string. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;#2373&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c353974950c8f90d95bbad7cc4de3cde862a338" translate="yes" xml:space="preserve">
          <source>Fixed issue when using TypeScript that caused namespace errors to be thrown. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;#1627&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1229a64e09bfdf46d6b860f6c4fd4b0b0c37d277" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; was failing when running Cypress in docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;#517&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3853b829c65b8667819b5bb5a82df44fa46e42b" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; inputs were throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;#504&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615a0b78351a76d8edfafb3a29f2bd3dbac0de0f" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;event&lt;/code&gt; was undefined when using an &lt;code&gt;onload&lt;/code&gt; event handler. Fixed &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;#2859&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19256491757bc321389a1dfb9fde2c16863ab68" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;stdout&lt;/code&gt; would not be displayed on a completed &lt;code&gt;cypress ci&lt;/code&gt; run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;#398&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5537ac05b50b1d9d5162eb0be6a42dadc20efb9" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; would return &lt;code&gt;undefined&lt;/code&gt; instead of an array within application code when using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;#3625&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55113d9d2801f6fddc9e5b2e5b21e5962d7abbdd" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress hanged due to Xvfb permissions. More intuitive output is given during install failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;#330&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8382ebdd6683a30092c82e522e5fa69083d349" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would hang indefinitely when starting a new spec when in &lt;code&gt;cypress run&lt;/code&gt; mode. Additionally we have optimized the code path to not read in the local &lt;code&gt;state.json&lt;/code&gt; unnecessarily. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;#2013&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;#1890&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c693ab41296c3860cbfeee8a1756daba46604250" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would inject a script tag before the &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; declaration when the document only contained the doctype declaration. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;#2617&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b27680405327ff681dcf5185a3a98aa323ece7e" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would unnecessarily scroll when attempting to locate elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;#1475&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b7eb108e49697e592b89d9e9807fdf2cb5d8f9" translate="yes" xml:space="preserve">
          <source>Fixed issue where XHR&amp;rsquo;s &lt;code&gt;onreadystatechange&lt;/code&gt; was not receiving the proper event arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;#2925&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75325a7a749e1fc18b62df4e805e6f8f88e6325" translate="yes" xml:space="preserve">
          <source>Fixed issue where a fix included in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; did not pass the &lt;code&gt;windowsHide&lt;/code&gt; argument to the proper options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;#2809&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14a57a15e2e6d2187b8c1897a452a081b129491" translate="yes" xml:space="preserve">
          <source>Fixed issue where all arguments passed to &lt;code&gt;setTimeout&lt;/code&gt; or &lt;code&gt;setInterval&lt;/code&gt; were not properly passed on to the target function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;#3592&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4ef4f116dcb42f5a217dc3ebfbfc859b67eb15" translate="yes" xml:space="preserve">
          <source>Fixed issue where an internal &lt;code&gt;layout.html&lt;/code&gt; file would inadvertently get loaded instead of the spec file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;#2891&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e2e78d63092fd0aaa0b59a93c82f55d29ec065" translate="yes" xml:space="preserve">
          <source>Fixed issue where applications programmatically stealing focus would lead to slow runs in Electron when running via &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;#1909&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;#1892&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e6597c87a7313be05729a497c7bfd4b42fb202" translate="yes" xml:space="preserve">
          <source>Fixed issue where change events with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; would not fire correctly for many more situations and edge cases. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;#651&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6082a19eab3879c28c8957cc98d4a27f61e03996" translate="yes" xml:space="preserve">
          <source>Fixed issue where changing any spec file (renaming, adding, deleting) would remove the highlighted styling of the currently active spec file in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;#547&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23469c7b5f76bbf207e4c3d7030fc6fc6c2a0936" translate="yes" xml:space="preserve">
          <source>Fixed issue where clipped elements with &lt;code&gt;overflow-y: hidden&lt;/code&gt; were falsely passing as &amp;ldquo;visible&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;#563&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6343d4371cb8f9c21357792d33c5d7f89a53124d" translate="yes" xml:space="preserve">
          <source>Fixed issue where commands would retry and potentially exceed their timeout values during page transitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;#594&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769e7ca2ba949f14f3ce789237c3e7e10b742074" translate="yes" xml:space="preserve">
          <source>Fixed issue where preprocessor errors were being swallowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;#1877&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3119210afd00c5c5dc51ca602238f3d34a0039e0" translate="yes" xml:space="preserve">
          <source>Fixed issue where server error&amp;rsquo;s stack traces were being truncated in the Desktop app rendering them impossible to debug. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;#133&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e189fc50c663b6981fb1654c5697d44b263104" translate="yes" xml:space="preserve">
          <source>Fixed issue where server routes were lost after page load if not initiated by a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;#177&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69dc3681b067698e46ab13ea4db8ed44cdf0460" translate="yes" xml:space="preserve">
          <source>Fixed issue where setting &lt;code&gt;fixturesFolder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; would throw an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;#450&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f490aa3955787ecd6045dae96e18a4ca0fd962" translate="yes" xml:space="preserve">
          <source>Fixed issue where some TTY characters were not properly formatted in the terminal for Windows during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;#1143&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;#1550&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe62793640f8f0e386492283f323b52ec484dc1" translate="yes" xml:space="preserve">
          <source>Fixed issue where support for &lt;code&gt;have.focus&lt;/code&gt;, &lt;code&gt;not.have.focus&lt;/code&gt;, &lt;code&gt;be.focused&lt;/code&gt; and &lt;code&gt;not.be.focused&lt;/code&gt;&lt;a href=&quot;assertions&quot;&gt;assertions&lt;/a&gt; were not working. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;#4265&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7106ffbbd512163862ccb5d6274bfec4bb8c5d1" translate="yes" xml:space="preserve">
          <source>Fixed issue where the &lt;code&gt;onLoad&lt;/code&gt; event was never being called when calling &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; on the url Cypress is currently navigated to. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;#1311&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab8e2b0380bae519febf7ace85d368f6eb6e2b7" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Chromium browser was not detected in Linux due to Cypress not distinguishing between Chrome and Chromium browsers with the same version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;#1400&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b230f3bd283ba447a34dcf6083f2a7c9400b8949" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Cypress &lt;code&gt;window&lt;/code&gt; was being returned instead of AUT&amp;rsquo;s &lt;code&gt;window&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;#1436&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686a2f479eec0633cf642042cb9fe61613147511" translate="yes" xml:space="preserve">
          <source>Fixed issue where the contents of &lt;code&gt;state.json&lt;/code&gt; were emptied, which would cause a crash and loss of state information. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;#473&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;#474&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8025d1cc05af8c1db3cebb543fa817cdbc88f08" translate="yes" xml:space="preserve">
          <source>Fixed issue where using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an input with a &lt;code&gt;type&lt;/code&gt; defined in uppercase (&lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt;) would throw an error and not type. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;#550&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4d146daf8133a0b16ea12603fb29188c6f270c" translate="yes" xml:space="preserve">
          <source>Fixed issue where videos would not be recorded when an object was returned from &lt;code&gt;before:browser:launch&lt;/code&gt; when in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;#1992&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7cd280bca9001a56c43a9624644de7feee27b4" translate="yes" xml:space="preserve">
          <source>Fixed issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; inputs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;#490&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f47175651ab56ab638ece075424b7507180fbf1" translate="yes" xml:space="preserve">
          <source>Fixed issue with loading fixture files containing more than one &lt;code&gt;.&lt;/code&gt; in their filename while not specifying the file extension. We are also displaying a clearer warning when a fixture file cannot be found. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;#1402&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1eafcab2c39c7bc18501c64d2171c4b3eb48ac0" translate="yes" xml:space="preserve">
          <source>Fixed issue with multiple &lt;code&gt;readyStateChanges&lt;/code&gt; with the same &lt;code&gt;readyState&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;#1150&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c25c79688ff0690197673cdc2c4e9efaa4e51b" translate="yes" xml:space="preserve">
          <source>Fixed issues involving XHRs displaying as &amp;lsquo;aborted&amp;rsquo; in the Cypress Command Log when they were not actually aborted. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;#1652&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6119c94c4f2fd34d62c927a8b7e0d1b0b73dcec" translate="yes" xml:space="preserve">
          <source>Fixed issues where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; was not appending text properly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;#503&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;#568&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e69a0ad1bef2e68406fab5ff999c0a0b85e190" translate="yes" xml:space="preserve">
          <source>Fixed issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing the &lt;code&gt;change&lt;/code&gt; event on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;#1171&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5062ddce1588be8e74acc91c85aa3ca70c8eb5" translate="yes" xml:space="preserve">
          <source>Fixed issues with typing into JS based text-mask plugins. Basically anything that would alter the &lt;code&gt;.value&lt;/code&gt; in response to certain events now works correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;#940&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;#1684&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5328ad377c6cc0c950ce0f104153a1169a508e90" translate="yes" xml:space="preserve">
          <source>Fixed many issues with typing into &lt;code&gt;[contenteditable]&lt;/code&gt; elements. WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; based, and other HTML editors now work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;#596&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;#1686&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;#2096&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9cc16289962ed52b63c65cfc10f5d7a7112ffa" translate="yes" xml:space="preserve">
          <source>Fixed missing &lt;code&gt;aliasType&lt;/code&gt; from primitives and some DOM aliases, which prevent the background color from displaying in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d6f09dd07845b621667382b48aa0fbfa00c07a" translate="yes" xml:space="preserve">
          <source>Fixed missing dependency for CI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338274d63db423cc9c9f3c87f5c93d5d86ba839" translate="yes" xml:space="preserve">
          <source>Fixed missing files from deployment. Added tests around this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f782dd62aa8c332550fad64089662ab46e1e9d" translate="yes" xml:space="preserve">
          <source>Fixed more edge cases where legitimate JavaScript code was being modified unexpectedly by the &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; configuration. We&amp;rsquo;ve tightened up the RegExp even more and added 40 popular JS libraries to test against to ensure they are not modified. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;#1334&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0eb4a78d03cd66d4c95162944c3e65fc1ebb77c" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type into a &lt;code&gt;datetime-local&lt;/code&gt; input. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;#1366&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0343e78d24123f511becf5cb6a50acd615d5f5b7" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type negative numbers into &lt;code&gt;input[type=number]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;#2173&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2ea5061ccbe451eaebd1b3886b9bdcfe937e20" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit URLs that used &lt;code&gt;*localhost&lt;/code&gt; such as &lt;code&gt;http://app.localhost:8080&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;#451&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb85a7a8a915f26baefc92cd213832444d9dfb78" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit private TLD&amp;rsquo;s from the public suffix such as &lt;code&gt;github.io&lt;/code&gt;, &lt;code&gt;gitlab.io&lt;/code&gt; or &lt;code&gt;herokuapp.com&lt;/code&gt;. These now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;#380&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;#402&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;#802&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;#493&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;#1161&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91faace71bc27b25103af821c4ed14338a407e27" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit subdomains when using 2nd level sub domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;#1175&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;#600&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd5dc2da998e702c253abf33612dbfdee626943" translate="yes" xml:space="preserve">
          <source>Fixed not correctly passing the &lt;code&gt;timeout&lt;/code&gt; option for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. This should fix some instances where large &lt;code&gt;timeout&lt;/code&gt; values would cause &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;#2669&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31591cd4d8d4ed564e72f3cb6296e78bb377c61" translate="yes" xml:space="preserve">
          <source>Fixed other event related issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; that were not firing correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;#1209&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edefe93bf8f9c5871698c12af8e0696b38b68cad" translate="yes" xml:space="preserve">
          <source>Fixed problem with rewriting content on elements which contained &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ad4f25a3eed077befe9519dd732c427d562b46" translate="yes" xml:space="preserve">
          <source>Fixed putting an &lt;code&gt;.only&lt;/code&gt; on a large list of tests that would sometimes not clear the previous runnables in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2caf8784be60677041b659dadea9400412e0693" translate="yes" xml:space="preserve">
          <source>Fixed regression caused by &lt;code&gt;0.16.2&lt;/code&gt; where a failed &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; would not be canceled and would continue to run and display failed assertions in between test runs (without a full page refresh). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;#174&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9fbfe8fdbc7075beebaee40771e5a6e1c149db" translate="yes" xml:space="preserve">
          <source>Fixed regression causing invocations of &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to error on subsequent tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;#2850&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f49a5a118e5920f657fbfe9b3154bb1fd56657" translate="yes" xml:space="preserve">
          <source>Fixed regression in &lt;code&gt;0.18.6&lt;/code&gt; that caused Cypress to fail when switching spec files when &lt;code&gt;baseUrl&lt;/code&gt; was set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;#403&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9add25a461f073babcc6b30c1b6633afbac49710" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; where Cypress would error because it could not find a type definition file for &amp;lsquo;../sinon&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;#4272&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed748da281606e6ecf264dbc3e50b17da63ec753" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; with &lt;code&gt;requestAnimationFrame&lt;/code&gt; that caused some animations not to run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;#2725&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8bf2ec79bf5b856e9d14b2d045c37061e87b42" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; that caused DOM elements passed to &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to no longer yield the proper jQuery array instance. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;#2820&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef081df82fe02c1d21fbf3be3167db4dedd0a141" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;code&gt;3.1.4&lt;/code&gt; that caused an &lt;code&gt;InvalidStateError&lt;/code&gt; when visiting a page with an XHR request with a &lt;code&gt;responseType&lt;/code&gt; other than &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;#3008&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf7ab71d1ad8d196ebbf6d38453f6febbccb19" translate="yes" xml:space="preserve">
          <source>Fixed regression related to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not re-visiting when current match matches remote url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bad64bdf088500e5c0af6e99c92b091e7e853d" translate="yes" xml:space="preserve">
          <source>Fixed regression where multiple uses of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;before&lt;/code&gt; hook was throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;#80&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;#510&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;#595&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddb4c351234ffa2349168a921fdc72bc078ef5e" translate="yes" xml:space="preserve">
          <source>Fixed server crash on improperly handled proxy error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecac16a391c930105a5e711ddaf722b02291363a" translate="yes" xml:space="preserve">
          <source>Fixed several issues in Chrome* versions &amp;gt;= 72 in the Cypress proxy that caused using &lt;code&gt;cy.visit()&lt;/code&gt; with &lt;code&gt;localhost&lt;/code&gt; to fail, or using &lt;code&gt;localhost&lt;/code&gt; inside of the &lt;code&gt;baseUrl&lt;/code&gt; configuration option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;#1872&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;#3252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;#1777&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f42bd80d6e2ce3f8d06f2af19a9e6ae58e4c500" translate="yes" xml:space="preserve">
          <source>Fixed situation where &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; would not restore correctly between tests. Previously this would cause subsequent tests to be issued at the modified &lt;code&gt;cy.viewport()&lt;/code&gt;. Now viewport is automatically restored to the settings in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02f4bc11e465b4861e78fa180aac2c8fae16746" translate="yes" xml:space="preserve">
          <source>Fixed situation where Cypress was not injected correctly when &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag had attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fcae25d4eeaf0c24c4f8bd7ea1fdb7b64e82c8" translate="yes" xml:space="preserve">
          <source>Fixed situation where an &lt;code&gt;Uncaught Error&lt;/code&gt; was not being properly handled. Cypress would incorrectly continue to retry commands instead of canceling them, which lead to incorrect errors downstream in other tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a805b2b9cd9f12618c568d08f8bfa058423cebd" translate="yes" xml:space="preserve">
          <source>Fixed situation where an error being thrown from an XHR was being improperly handled (in a slightly different way than the problem above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f011fff74cccfe58470de3408473111e220183" translate="yes" xml:space="preserve">
          <source>Fixed situations where 3rd party libraries (such as &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; were instrumenting XHR&amp;rsquo;s identical to Cypress&amp;rsquo; implementation. This caused an infinite loop which would crash the browser. We&amp;rsquo;ve updated how we instrument XHR&amp;rsquo;s to take this into account and deployed multiple fallbacks and strategies to prevent this kind of thing from happening in the future. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;#166&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90330d9d199513c3c1f697121f82d67ac9dcfbb" translate="yes" xml:space="preserve">
          <source>Fixed some areas of the Desktop GUI that did not display path names correctly in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;#1830&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7635003eb479c61bfa93d0fc555e7854d8689974" translate="yes" xml:space="preserve">
          <source>Fixed some edge cases in &lt;code&gt;cypress-core-extension&lt;/code&gt; where it threw errors when attempting to &lt;code&gt;executeScript&lt;/code&gt; on a tab with &lt;code&gt;about:blank&lt;/code&gt; or &lt;code&gt;chrome://&lt;/code&gt; urls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd64d1ad2c64718c1c35c5a6bc71306ca4b20b9" translate="yes" xml:space="preserve">
          <source>Fixed some incorrect typings with TypeScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;#1219&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;#1186&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c6d5e91f27e4bc6b9cbc8398af21c15ac18f36" translate="yes" xml:space="preserve">
          <source>Fixed some problems serializing objects during domain change caused by circular references. In this case &lt;code&gt;zone.js&lt;/code&gt; was the culprit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;#741&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf78fe9549f499bc7176b4a4219579e669fe7ba" translate="yes" xml:space="preserve">
          <source>Fixed some scenarios where assertions would not be logged as a child command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9298b1875f43960fb08c18b6e1ce951e11833fc" translate="yes" xml:space="preserve">
          <source>Fixed switching between two different spec files from the desktop app causing &lt;code&gt;document.domain&lt;/code&gt; to be wrong. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;#276&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bbfab42be47f224b21071ed8d933508ef837ed" translate="yes" xml:space="preserve">
          <source>Fixed the incorrectly spelled chainer &lt;code&gt;descendents&lt;/code&gt;. It is now correctly spelled as &lt;code&gt;descendants&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;#642&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4396b312ac9ada54640275a453c976e5b4b65689" translate="yes" xml:space="preserve">
          <source>Fixed the vast majority of known issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;#1241&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd89959daffe5325a72d86a78445ddd2f3665adf" translate="yes" xml:space="preserve">
          <source>Fixed type definition for &lt;code&gt;match&lt;/code&gt; assertion so that it now only accepts &lt;code&gt;RegExp&lt;/code&gt; type arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;#2578&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a2d12cdee595f72dbb70479095a595262b2ef8" translate="yes" xml:space="preserve">
          <source>Fixed typo in &lt;code&gt;cypress.schema.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;#1167&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13e96255f478cbf579d384640d76990bf989276" translate="yes" xml:space="preserve">
          <source>Fixed typo in CLI deps error about Docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;#1136&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123a406e131050d5c46783cac9db4faa4b1adf80" translate="yes" xml:space="preserve">
          <source>Fixed typo in typing for &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger&lt;/code&gt;&lt;/a&gt; options. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;#3588&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6862d12df0492a8d47eb9f800cc435dca34ba5" translate="yes" xml:space="preserve">
          <source>Fixed using when using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;cy.click()&lt;/code&gt;&lt;/a&gt; on an element that bound to the &lt;code&gt;focus&lt;/code&gt; event while the browser was currently &lt;em&gt;out of focus&lt;/em&gt;. We have now normalized &lt;strong&gt;all focus and blur events&lt;/strong&gt; to behave the same as if the browser is always in focus. This should fix the other batch of &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; issues that users have been experiencing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;#549&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;#2198&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e266b628f293db1e722b0b04069227dc5bc1d508" translate="yes" xml:space="preserve">
          <source>Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;#14&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e73107f01c45ba65469b717cdbdfd3673801c8" translate="yes" xml:space="preserve">
          <source>Fixes a race condition where async electron browser commands came in after the renderer had been destroyed, causing failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;#2321&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79957adcf9f3730b2dfc85a7ef0e7996d01b27b" translate="yes" xml:space="preserve">
          <source>Fixture</source>
          <target state="translated">Fixture</target>
        </trans-unit>
        <trans-unit id="31d84bd77e5cf1531a4306001f3e8c670196d59e" translate="yes" xml:space="preserve">
          <source>Fixture Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="8b2b39b6f6f2024db961fda1285280a85334d5cf" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically formatted / indented for easy debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966639036f094c23a89188baf7bf20ba4d6fd0e2" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically validated, with error messages propagating up to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0b0d59a94207af47ec8f5dccde6051018f845d" translate="yes" xml:space="preserve">
          <source>Fixtures are used as external pieces of static data that can be used by your tests. Fixture files are located in &lt;code&gt;cypress/fixtures&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57daed953824ba45abfcd5c87989fcded301dd2a" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special keywords: &lt;code&gt;fixture:&lt;/code&gt; or &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076842db32152f6390a1de20bb1fbc6e90ec7ca2" translate="yes" xml:space="preserve">
          <source>Fixtures support &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, and &lt;code&gt;coffee&lt;/code&gt; files with image support coming soon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="6ee2ec8b01f6a2d6ac9d639232c343a8f90182ba" translate="yes" xml:space="preserve">
          <source>Flake</source>
          <target state="translated">Flake</target>
        </trans-unit>
        <trans-unit id="d91efa73e5b91a88b6662bb37f8407309f3b7059" translate="yes" xml:space="preserve">
          <source>Flake resistant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7f55b8bf68fd47d248a271d541e7e183621010" translate="yes" xml:space="preserve">
          <source>Focus</source>
          <target state="translated">Focus</target>
        </trans-unit>
        <trans-unit id="504969e1329eefbbfdeeb59a6ddae1deec1b4aca" translate="yes" xml:space="preserve">
          <source>Focus is given to the first focusable element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e297c61dbffb1cb797e7780c079b71f4d5b829d" translate="yes" xml:space="preserve">
          <source>Focus is not an action command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fe5fdddd29a27eba93a4eff2e3520554c5881d" translate="yes" xml:space="preserve">
          <source>Focus on a DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210b73a2419ab094c9f12e186fddae826317c4cb" translate="yes" xml:space="preserve">
          <source>Focus on an input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d320705a2ddd9e662402bee5f10442bd02b78b" translate="yes" xml:space="preserve">
          <source>Focus, type, and blur a textarea</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b590cd6b1e83fa70fd0a3de3bc09fc6af804a5cb" translate="yes" xml:space="preserve">
          <source>Focusable</source>
          <target state="translated">Focusable</target>
        </trans-unit>
        <trans-unit id="19137a2bc8511e2902e61e074e829a5d7f79b9b2" translate="yes" xml:space="preserve">
          <source>Folder Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19adc47be34bed86af37b8e8dc882af424402561" translate="yes" xml:space="preserve">
          <source>Folders</source>
          <target state="translated">Folders</target>
        </trans-unit>
        <trans-unit id="3778aa33bb0864f2f8fcc7c110b3e0e3cc013dfc" translate="yes" xml:space="preserve">
          <source>Folders / Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61370060bdb7d5e684f62aaa98a8a18eee47ce57" translate="yes" xml:space="preserve">
          <source>Follow the following process to request an OSS plan for your project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e977c306cc77cda1ecdfaf0ddef7d8d79c99ed98" translate="yes" xml:space="preserve">
          <source>For JSON, the contents yielded are parsed into JavaScript and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3681f0b1f80d660f99494942d5d9f15e68f3c5c" translate="yes" xml:space="preserve">
          <source>For a comprehensive list of all configuration values look here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fde55b197d8bc9171398408dd11058266e6428a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b747e493d60035aa88d9e5488eaf0d99b0cf5fc" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c112b29f653fa6da29b77c4076e2ef3e3a084105" translate="yes" xml:space="preserve">
          <source>For a failure screenshot, the default naming scheme is used and the name is appended with &lt;code&gt;(failed)&lt;/code&gt;: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a665f1775461ab3d07e8409cfd0c265140d91e7f" translate="yes" xml:space="preserve">
          <source>For a more thorough explanation of Cypress&amp;rsquo;s Web Security model, &lt;a href=&quot;../guides/web-security&quot;&gt;please read our dedicated guide to it&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b646082a814f0faa4350f1e9fe72ba04d2d004" translate="yes" xml:space="preserve">
          <source>For a named screenshot, the name is used instead of the suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1875e2e03dcd0d2fa376d7793b62e8918bbb3dbf" translate="yes" xml:space="preserve">
          <source>For a variety of implementation reasons, Cypress commands &lt;strong&gt;only&lt;/strong&gt; retry the &lt;strong&gt;last command&lt;/strong&gt; before the assertion. In our test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43c859b9e7c1c86f68c1d7527404d0b8d12f85a" translate="yes" xml:space="preserve">
          <source>For any duplicate screenshots (named or not), they will be appended with a number: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580371d64b28a421d6f70048a5b3551ae4f827cc" translate="yes" xml:space="preserve">
          <source>For any file other than JSON, the contents of the file are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b613f768c593855e85ce87451fd66e1155cdb4" translate="yes" xml:space="preserve">
          <source>For any other server type, define a &lt;code&gt;GET /__coverage__&lt;/code&gt; endpoint and return the &lt;code&gt;global.__coverage__&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6639c39228ded6347d1f488c7234eea10e2fb6" translate="yes" xml:space="preserve">
          <source>For brevity we&amp;rsquo;ve omitted the full path to the cypress executable in each command&amp;rsquo;s documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201ee05c918022669060bbba7c946dd7db53a43e" translate="yes" xml:space="preserve">
          <source>For certain commands like &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;, an extra instrument panel is displayed above the test to give more information about the state of your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae9b803221129b647d814f9c377a224266b68b3" translate="yes" xml:space="preserve">
          <source>For clarity you can pass a string message as a second argument to any &lt;code&gt;expect&lt;/code&gt; assertion, see &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai#expect&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df63eb79e11a90822227f06bac5c3df82d15fa8" translate="yes" xml:space="preserve">
          <source>For convenience, you can also omit any return value or return &lt;code&gt;undefined&lt;/code&gt; and Cypress will not error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c0ce52609e0b7f8cfe8d5f39cd21cde114fb46" translate="yes" xml:space="preserve">
          <source>For example - say a command we wrote timed out: &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get('#element')&lt;/code&gt;&lt;/a&gt;. This causes your test to fail. Cypress then automatically takes a screenshot when the test fails, but it is possible something in your application changed within this &lt;code&gt;100ms&lt;/code&gt; timeframe. Hypothetically, your app could render the element you were originally expecting to be present. When this happens, the screenshot may provide confusing results. It is unlikely, but theoretically possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263146ee5d217d189aa21d8fbdb6bfe0fbec8237" translate="yes" xml:space="preserve">
          <source>For example if you add the command &lt;code&gt;cy.dataCy&lt;/code&gt; into your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2758c38b95307263ee836b320324f26239fd0efb" translate="yes" xml:space="preserve">
          <source>For example, clicking a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; inside of a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; gives the focus to the button, since that&amp;rsquo;s what would happen in a real user scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4fdb15c7328482d20e6ea99d6570ca3c31f0aa" translate="yes" xml:space="preserve">
          <source>For example, consider this HTML fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764b75327a33cf0119b6f91796ffb927e6300398" translate="yes" xml:space="preserve">
          <source>For example, given a spec file located at &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa1105999961ee6003bd962c1a65b040bd5496f" translate="yes" xml:space="preserve">
          <source>For example, if the snapshot command is &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab571a4f91aef38ebfa5eecac23a46306dfafc38" translate="yes" xml:space="preserve">
          <source>For example, if your distribution packages Google Chrome as &lt;code&gt;chrome&lt;/code&gt;, you could add a symlink to &lt;code&gt;google-chrome&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644fe93693b828db3515767856da1bd3a29e87ab" translate="yes" xml:space="preserve">
          <source>For example, on a Linux machine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2158d33b661e52ec20e4eadf6ce104d3345fbd7" translate="yes" xml:space="preserve">
          <source>For example, on a Mac:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374258cadc421fc853522a47d379c7f40972c75a" translate="yes" xml:space="preserve">
          <source>For example, one can use the &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; plugin and catch the following visual regression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52bff469061738de305a5c214d6bb7f6c8ad7f03" translate="yes" xml:space="preserve">
          <source>For example, the following test has &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; assertions. &lt;code&gt;.and()&lt;/code&gt; is an alias of the &lt;code&gt;.should()&lt;/code&gt; command, so the second assertion is really a custom callback assertion in the form of the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should(cb)&lt;/code&gt;&lt;/a&gt; function with 2 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; assertions inside of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0d7592cbf7bfa92426baaef777c8467fdf810d" translate="yes" xml:space="preserve">
          <source>For example, to set the default command timeout to 10 seconds via command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e8f3f5bf287ec2abda1e46dac7e765408a08a9" translate="yes" xml:space="preserve">
          <source>For example, when writing a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command, Cypress ensures that the element is able to be interacted with (like a real user would). It will automatically wait until the element reaches an &amp;ldquo;actionable&amp;rdquo; state by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="2de5b291ad79324bcf505dc77ce99f3c250b6a66" translate="yes" xml:space="preserve">
          <source>For instance given a URL: &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af939d9ec5be005fdcff9cc5bafa9bc567dcc0c0" translate="yes" xml:space="preserve">
          <source>For instance the following will submit the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5517d0b0ff724878ebb60576914cb82e4c4d83b" translate="yes" xml:space="preserve">
          <source>For instance there is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f7252ea2666904183520e01c4a6a37f7de72b6" translate="yes" xml:space="preserve">
          <source>For instance you may want to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252964127344b906890088ac3b58c00fbc7996d8" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; requires that the property you&amp;rsquo;re asking about exists on the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2d3f0dc7271d3653fea606fcd0bdc4bb155b6d" translate="yes" xml:space="preserve">
          <source>For instance, an element could pass all of the previous checks, but a giant dialog could be covering the entire screen making interacting with the element impossible for any real user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="f82e17eccd0cd5b897a68561a0dfcf4a5a0d4cc8" translate="yes" xml:space="preserve">
          <source>For more complex use cases feel free to overwrite existing commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e02635601388e7c946b921e1e450b5a9dc0dde5" translate="yes" xml:space="preserve">
          <source>For more details on these options and to set some as defaults across all uses of &lt;code&gt;.screenshot()&lt;/code&gt;, see the &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d3a0513cfccad9eb5d6e0e78581670489941f0" translate="yes" xml:space="preserve">
          <source>For more information on writing plugins, please &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;check out our API docs here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3310b65fdf0f0ced0b2000f01f790efbf2e93c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Integrating Mochawesome reporter with Cypresss&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a938ddb8b260b7907e6de8105877506b068906fa" translate="yes" xml:space="preserve">
          <source>For more options regarding screenshots, view the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f377bc687a64f445d344af854cd956a6165063" translate="yes" xml:space="preserve">
          <source>For multiple runs to be grouped into a single run, it is required for CI machines to share a common CI build ID environment variable. Typically these CI machines will run in parallel or within the same build workflow or pipeline, but &lt;strong&gt;it is not required to use Cypress parallelization to group runs&lt;/strong&gt;. Grouping of runs can be utilized independently of Cypress parallelization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33169c378a8f3e8f01e7fbd26b9ee56ff477e933" translate="yes" xml:space="preserve">
          <source>For now, please visit the &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;Catalog of Events&lt;/a&gt; page for examples how to turn off catching uncaught exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88158d5e9dc8f8941bd54f6e40953f96ad40d693" translate="yes" xml:space="preserve">
          <source>For other types of files, they will be read as &lt;code&gt;utf8&lt;/code&gt; by default, unless specified in the second argument of &lt;code&gt;cy.fixture()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91ebd354dbfba00dacd289ac1a90f3e80f3b246" translate="yes" xml:space="preserve">
          <source>For reference, the &lt;code&gt;.babelrc&lt;/code&gt; file is shared between the example application and the spec files, thus Cypress tests are transpiled the same way the application code is transpiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f76861650d658435d862cebc0bc974dfdbebf1" translate="yes" xml:space="preserve">
          <source>For the moment, let&amp;rsquo;s assume that for some reason your application desperately &lt;strong&gt;needs&lt;/strong&gt; that last bit of &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; code to run. Let&amp;rsquo;s assume that if that code is not run - all is lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01260984a70b15e582d02ecbb77eb53567003e8b" translate="yes" xml:space="preserve">
          <source>For the remainder of this guide, we&amp;rsquo;ll explore the basics of Cypress that make this example work. We&amp;rsquo;ll demystify the rules Cypress follows so you can productively test your application to act as much like a user as possible, as well as discuss how to take shortcuts when it&amp;rsquo;s useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728229716acc9fc14a9907d5acafe87f6cdd5c23" translate="yes" xml:space="preserve">
          <source>For this reason we recommend &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;downloading Chromium&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;downloading Canary&lt;/a&gt;. These browsers both have different icons from the standard Chrome browser and it&amp;rsquo;ll be much easier to tell the difference. You can also use the bundled &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron browser&lt;/a&gt;, which does not have a Dock icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205e71a20ed6c001f2d67335fcd4f33135185375" translate="yes" xml:space="preserve">
          <source>For this reason you cannot &lt;strong&gt;ever&lt;/strong&gt; return or assign anything useful from Cypress commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b8219d8ed6c1e8024344c044ecea764b1dc5cf" translate="yes" xml:space="preserve">
          <source>For working with either of these patterns, please read our &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Variables and Aliases guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58df072b14e502083ab5c85ba4c8f1d20ae6ccd5" translate="yes" xml:space="preserve">
          <source>Force Reload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6009b160ba75d2e52bc0d8169e251b1536e4aa89" translate="yes" xml:space="preserve">
          <source>Force a click regardless of its actionable state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501ae9dd8f1715a7ea40942df61d140bc1a7fd7e" translate="yes" xml:space="preserve">
          <source>Force a click with position argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f17bcdc15ad6b57ab2c842701861471bd496bc" translate="yes" xml:space="preserve">
          <source>Force a click with relative coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778a8734a9c3b42f5a7d9afcc008f81e492a3a8b" translate="yes" xml:space="preserve">
          <source>Force click</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e37a1f78aef985b21cad73b3082506a86c715b" translate="yes" xml:space="preserve">
          <source>Force exit codes that are &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;#184&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3675b055af415697257a68145761329b09a120af" translate="yes" xml:space="preserve">
          <source>Force trailing slash on all &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to fix relative links &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212605644c0b6c1945c9a3e7254761cd558173c5" translate="yes" xml:space="preserve">
          <source>Force typing regardless of its actionable state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9133a83c2831ad21e3aa26f7912ae9117d231e31" translate="yes" xml:space="preserve">
          <source>Force your application to behave deterministically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22784e9b0a4a78c005e9a85b243521624424e2e" translate="yes" xml:space="preserve">
          <source>Forces the action, disables &lt;a href=&quot;#Assertions&quot;&gt;waiting for actionability&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e12d23ec3290a534ebbcf584e8eb235083c99c" translate="yes" xml:space="preserve">
          <source>Forces the action, disables checking if &lt;a href=&quot;#Requirements&quot;&gt;element is focused&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aeb53d6057d030d1940ca8e7fb9f7eac6f7fb4" translate="yes" xml:space="preserve">
          <source>Forcibly fire the event at the element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c717b7cf52642cd4402c97663c40e584fd7918" translate="yes" xml:space="preserve">
          <source>Forcibly send XHR&amp;rsquo;s a 404 status when the XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9b90f09f342388fa794ee597459cdfabb7b581" translate="yes" xml:space="preserve">
          <source>Forcing</source>
          <target state="translated">Forcing</target>
        </trans-unit>
        <trans-unit id="f8c2349f25011f3fb852e55a8b44e642923f7d87" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce50bed2898545dff3bd82a789b80bd08baf4e2f" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42440f0025c87af99f06a479298706346f7339fa" translate="yes" xml:space="preserve">
          <source>Form Submission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a11923bf4b30c2695146358bf573a9a81ef986" translate="yes" xml:space="preserve">
          <source>Form Submission Redirects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29b61ca75f1c226b23fdb85ea8267be1b5f57ad" translate="yes" xml:space="preserve">
          <source>Form Submissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfc42ed63ca85b554caa7e220fd03b0c592b3d8" translate="yes" xml:space="preserve">
          <source>Form submission could result in a non-success status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d016fe426ee3087e96153f2d1d6e6ebf0fc6765" translate="yes" xml:space="preserve">
          <source>Form with 1 input, no defaultButton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9fba7056e53e85ae44895a33b9e115c05d0bb1" translate="yes" xml:space="preserve">
          <source>Form with 2 inputs, no defaultButton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3f48103538a5822498e4ce69d4cd1cd1cbd15b" translate="yes" xml:space="preserve">
          <source>Form with disabled defaultButton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6120162c6ff741a97b6f9f45021516e88399ea" translate="yes" xml:space="preserve">
          <source>Form with multiple defaultButtons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="f123768a0be7e3519d5400f6ace516a3d22ef601" translate="yes" xml:space="preserve">
          <source>Fortunately, you don&amp;rsquo;t have to make your code do backflips. Cypress makes it easy to handle these situations.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
