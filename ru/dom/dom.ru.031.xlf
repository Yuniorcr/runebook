<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="7c37ed77e3a781c0fa1f7fbe43030d3964625d32" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027c5a59c716687d0578907e034c99be7de465e0" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.active' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b3a7fa34ff965a285ac71226c5addbc40eb9a9" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.clients' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7669a5aea7c4d66bd9d9669fe322d353390dd36f" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.controller' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6496cd3511102b9be2c9976fdb2e178699aae1" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.installing' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f102df43ad79d8f35c88119eb45a91336a77e5da" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.onupdatefound' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dad54d0fc38971894ea96f6e89921a843012af" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.ready' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae10e901d7aa41c92d3497375c340e521a17176" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.scope' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14242c3e33c2ce2fcad22f9b8c35d29f27d6476" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.unregister()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bebc24a72756f04a3f0d3a0484eb98a812b68e9" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.update()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7998bc0610c4be1c87f374d60401f9aba492debb" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerRegistration.waiting' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77ec0b650ccb16ffb49b85364ed6a7c673e70a1" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'ServiceWorkerState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a6d6c3499f96abe97467b0ed54839d6e23e900" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'WindowClient' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d27a794791196a155090e03f21ea2e341101fab" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'WindowClient: focused' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de81477a5fe0195c9a30c59e28a2ff1a914de23a" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'caches' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadb13f6ca695ab884dfd196d8dda63225cc039e" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'claim()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9973ea7906aba6ab609e8da5390b9a90e42fdeff" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'clientId' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1056af39dd5804ab0fe78009ba6f0d107107b9c0" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'focus()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c7ff35613f8a896c4e64a9b54d52ae6b514efb" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'frameType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499054a282451e1b3a1ddc69e8b3397a644f6a6b" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96305446fe1116074d39bba48cf988cc4f3ba4f" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'getRegistrations()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86e6411cb09f641dc05bc689404bd8af9b6793b" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'id' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3509a01f114c968647f4be752a517b29884b3999" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'isReload' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458ae67b92b684cb088037d69ecd741f17645df1" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'navigate()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae35f54654fb8c0e9ad4671006057bf53183b05" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'navigationPreload' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff9291da2376bb7347c6e5cca43e7a5603af579" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'navigator.serviceWorker' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbc795ace2d493a9dfb429e60a2513b0dfde4bf" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'postMessage()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1dd304035d49bf15847fe7a82959388e750a3a" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'respondWith()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a0cbc0feb260e8a315ac9fb6662bf116e3cc33" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'scriptURL' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda7afc0a6d0cd6a4a8813368c1d3f47b41fcff2" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'state' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a195367061fb8b9f94be4bca4b340aca495f81e5" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'type' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aa2670948d101bb7a903604158f493bd04f027" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'url' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219dc7c222fa5cba5585ab325107352d135591f7" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'visibilityState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba552daac0673e9a3870aba47df6fdcd31d0b5f5" translate="yes" xml:space="preserve">
          <source>Service Workers&lt;br/&gt;&lt;small&gt;The definition of 'waitUntil()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e96700ec8e159a07b48e941424640c1edf403f" translate="yes" xml:space="preserve">
          <source>Service worker additions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7361be1cc53eede0f6ce01d006f2dcba4582fa8e" translate="yes" xml:space="preserve">
          <source>Service worker concepts and usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a479f63523818b8a5910c7c7a06ba8d729cdd212" translate="yes" xml:space="preserve">
          <source>Service workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344b444f252a19dd42a7c8dd0a620822be565a72" translate="yes" xml:space="preserve">
          <source>Service workers (and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Push_API&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/organizations/&quot;&gt;Firefox 45 and 52 Extended Support Releases&lt;/a&gt; (ESR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49ab13bfa413637378ec184beedbe7d05a84534" translate="yes" xml:space="preserve">
          <source>Service workers (and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Push_API&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/organizations/&quot;&gt;Firefox 45 and 52 Extended Support Releases&lt;/a&gt; (ESR.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c351e45f910b7ca039645dfcb2ab0e047135ff6" translate="yes" xml:space="preserve">
          <source>Service workers (and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Push_API&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/firefox/organizations/&quot;&gt;Firefox 45 &amp;amp; 52 Extended Support Releases&lt;/a&gt; (ESR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85122641141bc4cb68c271db2fae16f67d0096d7" translate="yes" xml:space="preserve">
          <source>Service workers (and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Push_API&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/firefox/organizations/&quot;&gt;Firefox 45 &amp;amp; 52 Extended Support Releases&lt;/a&gt; (ESR.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6d81efd6e702bd5122fb15674d39cd68f2f6e9" translate="yes" xml:space="preserve">
          <source>Service workers (and Push) have been disabled in the Firefox 45 &amp;amp; 52 Extended Support Releases (ESR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e1407b3fd1b1d65c9be9446f96f0382e8ef77e" translate="yes" xml:space="preserve">
          <source>Service workers (and Push) have been disabled in the Firefox 45 and 52 Extended Support Releases (ESR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df86317f039646e7a286feaa2cbba114802a9ad" translate="yes" xml:space="preserve">
          <source>Service workers are also intended to be used for such things as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eff78d7a3de5becf575f2a8f9033b7894212658" translate="yes" xml:space="preserve">
          <source>Service workers basic code example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89843c17206c26d71bf200bc555ce59c87071ee1" translate="yes" xml:space="preserve">
          <source>Service workers demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3628c4a0cae74eb5c27e38b845d8a8b3398cf91" translate="yes" xml:space="preserve">
          <source>Service workers essentially act as proxy servers that sit between web applications, the browser, and the network (when available). They are intended, among other things, to enable the creation of effective offline experiences, intercept network requests and take appropriate action based on whether the network is available, and update assets residing on the server. They will also allow access to push notifications and background sync APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3005b71f5d394c402933cec6d72a88e9b37b38b5" translate="yes" xml:space="preserve">
          <source>Service workers only run over HTTPS, for security reasons. Having modified network requests, wide open to man in the middle attacks would be really bad. In Firefox, Service Worker APIs are also hidden and cannot be used when the user is in &lt;a href=&quot;https://support.mozilla.org/en-US/kb/private-browsing-use-firefox-without-history&quot;&gt;private browsing mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c41680b18c902a8bf143ba39688b5b37ae2cdde" translate="yes" xml:space="preserve">
          <source>Service workers should finally fix these issues. Service worker syntax is more complex than that of AppCache, but the trade off is that you can use JavaScript to control your AppCache-implied behaviours with a fine degree of granularity, allowing you to handle this problem and many more. Using a Service worker you can easily set an app up to use cached assets first, thus providing a default experience even when offline, before then getting more data from the network (commonly known as &lt;a href=&quot;http://offlinefirst.org/&quot;&gt;Offline First&lt;/a&gt;). This is already available with native apps, which is one of the main reasons native apps are often chosen over web apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998956ee1c21ca1ac912db460e5d76f6059a4aaa" translate="yes" xml:space="preserve">
          <source>Service workers support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5349571bfdbb8458b7e6b3d690b282c4367409b2" translate="yes" xml:space="preserve">
          <source>Service.getBudget</source>
          <target state="translated">Service.getBudget</target>
        </trans-unit>
        <trans-unit id="04de0b3ff9b4f5d88bf2e1809a23afaa2dcae242" translate="yes" xml:space="preserve">
          <source>Service.getCost</source>
          <target state="translated">Service.getCost</target>
        </trans-unit>
        <trans-unit id="2392197c3be058b94355e0dca980041050597123" translate="yes" xml:space="preserve">
          <source>Service.reserve</source>
          <target state="translated">Service.reserve</target>
        </trans-unit>
        <trans-unit id="5aa6767a34187e72f4c900c361d7fee781502af6" translate="yes" xml:space="preserve">
          <source>ServiceWorker</source>
          <target state="translated">ServiceWorker</target>
        </trans-unit>
        <trans-unit id="06cea37cfa5b7468a5ba8d046dd23bc5b64158ae" translate="yes" xml:space="preserve">
          <source>ServiceWorker API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5634687a7012a543ca81255119446b2f12c9cb" translate="yes" xml:space="preserve">
          <source>ServiceWorker Cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edf28b895e576e70f8ec64d1aaff9acbcec3f02" translate="yes" xml:space="preserve">
          <source>ServiceWorker.onstatechange</source>
          <target state="translated">ServiceWorker.onstatechange</target>
        </trans-unit>
        <trans-unit id="31ffb433cd4f0355c008fa169e09126e552d6107" translate="yes" xml:space="preserve">
          <source>ServiceWorker.scriptURL</source>
          <target state="translated">ServiceWorker.scriptURL</target>
        </trans-unit>
        <trans-unit id="b6dbe3ec05e3d6fe2eaac2f61b830b5f0846b438" translate="yes" xml:space="preserve">
          <source>ServiceWorker.state</source>
          <target state="translated">ServiceWorker.state</target>
        </trans-unit>
        <trans-unit id="3807eb85d51a7e3fe5e8860e739e745dc8ce7da1" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer</source>
          <target state="translated">ServiceWorkerContainer</target>
        </trans-unit>
        <trans-unit id="4680e92a7491ea14bdc5d71f976af7ed86ee87f7" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.controller</source>
          <target state="translated">ServiceWorkerContainer.controller</target>
        </trans-unit>
        <trans-unit id="c9cbefefdf36d4d27b1e341c1da3e6a17501ff25" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.getRegistration</source>
          <target state="translated">ServiceWorkerContainer.getRegistration</target>
        </trans-unit>
        <trans-unit id="7de80880eaf65d105ce1e7a9662c41e79f7f2e65" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.getRegistrations</source>
          <target state="translated">ServiceWorkerContainer.getRegistrations</target>
        </trans-unit>
        <trans-unit id="a146eef050e1f459cf1f91bf11772125219cc94b" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.oncontrollerchange</source>
          <target state="translated">ServiceWorkerContainer.oncontrollerchange</target>
        </trans-unit>
        <trans-unit id="670dff036f99356604ea511548afc3513df9dfb3" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.onerror</source>
          <target state="translated">ServiceWorkerContainer.onerror</target>
        </trans-unit>
        <trans-unit id="1cba7b5ae7d7cec55dd3b43120ed8a898bd34b55" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.onmessage</source>
          <target state="translated">ServiceWorkerContainer.onmessage</target>
        </trans-unit>
        <trans-unit id="88f9c66e6067d1ebfbeafb580259a3a04d726236" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.ready</source>
          <target state="translated">ServiceWorkerContainer.ready</target>
        </trans-unit>
        <trans-unit id="4e01f965b2c266baceb8902587c6a80606b796a1" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.register</source>
          <target state="translated">ServiceWorkerContainer.register</target>
        </trans-unit>
        <trans-unit id="8fbb03d925d03631f209ae90550b2a526b75b4c0" translate="yes" xml:space="preserve">
          <source>ServiceWorkerContainer.startMessages</source>
          <target state="translated">ServiceWorkerContainer.startMessages</target>
        </trans-unit>
        <trans-unit id="8a25fa6ae70358d7e4c5608fa29f35b73cc20f11" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope</source>
          <target state="translated">ServiceWorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="c1879336346ea9f967abaf1b0d971d679d1322e6" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.caches</source>
          <target state="translated">ServiceWorkerGlobalScope.caches</target>
        </trans-unit>
        <trans-unit id="3172d42cfcf9eaa5145e7b1f7aa57e1060972885" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.clients</source>
          <target state="translated">ServiceWorkerGlobalScope.clients</target>
        </trans-unit>
        <trans-unit id="045fbb1d2b1e99759c7004d1370ba4d4a6646323" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onactivate</source>
          <target state="translated">ServiceWorkerGlobalScope.onactivate</target>
        </trans-unit>
        <trans-unit id="4456166f9eda923d8b869e4ef95edf02f5fd5897" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onfetch</source>
          <target state="translated">ServiceWorkerGlobalScope.onfetch</target>
        </trans-unit>
        <trans-unit id="6c1e9fb339aa196ca066463704549a75d3bb3329" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.oninstall</source>
          <target state="translated">ServiceWorkerGlobalScope.oninstall</target>
        </trans-unit>
        <trans-unit id="704ca5a989740c52cd30cbce6a19c2864a1cedfa" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onmessage</source>
          <target state="translated">ServiceWorkerGlobalScope.onmessage</target>
        </trans-unit>
        <trans-unit id="fd10d5eccbcdc3b694d008e16103fb9192bfef8b" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onnotificationclick</source>
          <target state="translated">ServiceWorkerGlobalScope.onnotificationclick</target>
        </trans-unit>
        <trans-unit id="b9aef3e36d9e6fb92ed06121b9a8d839e735c4b1" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onnotificationclose</source>
          <target state="translated">ServiceWorkerGlobalScope.onnotificationclose</target>
        </trans-unit>
        <trans-unit id="8551aa8c66e21a6c021501d2f9cd513f65e04680" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onpush</source>
          <target state="translated">ServiceWorkerGlobalScope.onpush</target>
        </trans-unit>
        <trans-unit id="6ea2352a1e5a99e1a3781b43c37eebd48910f061" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onpushsubscriptionchange</source>
          <target state="translated">ServiceWorkerGlobalScope.onpushsubscriptionchange</target>
        </trans-unit>
        <trans-unit id="57659c725f7ace8a31fc6f51a40143d0fc1f52ca" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.onsync</source>
          <target state="translated">ServiceWorkerGlobalScope.onsync</target>
        </trans-unit>
        <trans-unit id="48e78d66b66ba9fa6c2f484489a9dd1fd2cabe66" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.registration</source>
          <target state="translated">ServiceWorkerGlobalScope.registration</target>
        </trans-unit>
        <trans-unit id="40f4ceb8d1efdf1576451f062b5d34ccaf602dd7" translate="yes" xml:space="preserve">
          <source>ServiceWorkerGlobalScope.skipWaiting</source>
          <target state="translated">ServiceWorkerGlobalScope.skipWaiting</target>
        </trans-unit>
        <trans-unit id="c70aa60e4ed37f57ee6003bfee0afb1a308f4385" translate="yes" xml:space="preserve">
          <source>ServiceWorkerMessageEvent</source>
          <target state="translated">ServiceWorkerMessageEvent</target>
        </trans-unit>
        <trans-unit id="13f154b684d4209188c7945545898b957cb5c0a4" translate="yes" xml:space="preserve">
          <source>ServiceWorkerMessageEvent.constructor</source>
          <target state="translated">ServiceWorkerMessageEvent.constructor</target>
        </trans-unit>
        <trans-unit id="dccc2ec1824e9b26d391568595998adcc463020f" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration</source>
          <target state="translated">ServiceWorkerRegistration</target>
        </trans-unit>
        <trans-unit id="585fcc847a2e9a83b428ab30a35af98335be08db" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.active</source>
          <target state="translated">ServiceWorkerRegistration.active</target>
        </trans-unit>
        <trans-unit id="a8a17629dc0b07d3ecb95b4df9cf88e2c626f5d5" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.getNotifications</source>
          <target state="translated">ServiceWorkerRegistration.getNotifications</target>
        </trans-unit>
        <trans-unit id="4a2203182135b854d426451c3feb7be4175e7136" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.installing</source>
          <target state="translated">ServiceWorkerRegistration.installing</target>
        </trans-unit>
        <trans-unit id="6580f64c689be9c492bc55c62ab41182cc5b2e98" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.navigationPreload</source>
          <target state="translated">ServiceWorkerRegistration.navigationPreload</target>
        </trans-unit>
        <trans-unit id="42c122bd0c02350fdf645f68626c7d245e11dd16" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.onupdatefound</source>
          <target state="translated">ServiceWorkerRegistration.onupdatefound</target>
        </trans-unit>
        <trans-unit id="611bdce3e9a0e4d164be1a56c9946be1bd06580f" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.pushManager</source>
          <target state="translated">ServiceWorkerRegistration.pushManager</target>
        </trans-unit>
        <trans-unit id="ea26882a0fd3e59d424306d5caad241d81c1b161" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.scope</source>
          <target state="translated">ServiceWorkerRegistration.scope</target>
        </trans-unit>
        <trans-unit id="d5a42dbae9da5b099e94e6fa0a9df2540f805365" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.showNotification</source>
          <target state="translated">ServiceWorkerRegistration.showNotification</target>
        </trans-unit>
        <trans-unit id="0a159bcf37f0353b28a277e49feddbf1568be304" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.unregister</source>
          <target state="translated">ServiceWorkerRegistration.unregister</target>
        </trans-unit>
        <trans-unit id="28cc2f8ada1410116ebe61b5392d3ab3f5df4db1" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.update</source>
          <target state="translated">ServiceWorkerRegistration.update</target>
        </trans-unit>
        <trans-unit id="380e3558e5e4b8f9e0dc0cd33d3b1ed4cb7322bd" translate="yes" xml:space="preserve">
          <source>ServiceWorkerRegistration.waiting</source>
          <target state="translated">ServiceWorkerRegistration.waiting</target>
        </trans-unit>
        <trans-unit id="4413f0ab2dcf4624fe4b65b9e4d2332c78716f39" translate="yes" xml:space="preserve">
          <source>ServiceWorkerState</source>
          <target state="translated">ServiceWorkerState</target>
        </trans-unit>
        <trans-unit id="d9e6773c8dcfa61e1bc728367bb6abe43a92bf0a" translate="yes" xml:space="preserve">
          <source>Session API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e4aa3c638668c076e45e85db37c2070a7517d2" translate="yes" xml:space="preserve">
          <source>Session descriptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d011acb2a89eb9e478ad3c47858d04ca125e7e5c" translate="yes" xml:space="preserve">
          <source>Session negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="8a0d6451c7abac2b3620740ca81637fb344af4b7" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;mediarecorder/ondataavailable&quot;&gt;&lt;code&gt;MediaRecorder.ondataavailable&lt;/code&gt;&lt;/a&gt; to an event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event; this will be called whenever data is available for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10dd16351571fdfef9a46631d7d66f5be69e466" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; to &quot;paused&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ac693914684d0998b16898c269ef74eb9a7ec6" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; to &quot;recording&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfe8dcb97721877aaf069a3618458d5b6b0f1ce" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;myPeerConnection&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;, ensuring our code learns there's no ongoing call; this is useful when the user clicks a name in the user list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884b9dd1d46ddc3be824f617f781163ad688514c" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;onaddtrack&lt;/code&gt; to a function that accepts as input a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object which indicates in its &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property which audio track has been added to the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b8c73cf903d4948e25b55933fa40c74e0d5cf1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;onaddtrack&lt;/code&gt; to a function that accepts as input a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object which indicates in its &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property which video track has been added to the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc544e9e56033e3b67c1e11387a44605fd12d43" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;onchange&lt;/code&gt; to a function that should be called whenever a track is made active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b09a8a3c406709f95a820a08907b6fb1961db87" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;onchange&lt;/code&gt; to a function that should be called whenever tracks are enabled or disabled on the media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5054d491ffffa908400d0dedac85c48112dc96f7" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;onremovetrack&lt;/code&gt; to a function that accepts as input a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object which indicates in its &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property which audio track has been removed from the media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dc48580dba1e5d0c61b7492d7f4995e2ebe658" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;onremovetrack&lt;/code&gt; to a function that accepts as input a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object which indicates in its &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property which video track has been removed from the media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036371779accbf6e6b55e1dedcec1817c182c391" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ontrack&lt;/code&gt; to be a function you provide that accepts as input a &lt;a href=&quot;../rtctrackevent&quot;&gt;&lt;code&gt;RTCTrackEvent&lt;/code&gt;&lt;/a&gt; object describing the new track and how it's being used. This information includes the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; object representing the new track, the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt;, and a list of &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; objects which indicates which stream or streams the track is part of..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d36f6d049dfca9478c196808e7858ccd5b1611f" translate="yes" xml:space="preserve">
          <source>Set a line width and stroke colour for the wave we will draw, then begin drawing a path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93dd3cc538b27a029a6605bc43a7dc3fc25f91a" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-connection-state&quot;&gt;presentation connection state&lt;/a&gt; of &lt;var&gt;S&lt;/var&gt; to &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dom-presentationconnectionstate-connecting&quot;&gt;&lt;code&gt;connecting&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35be4547a1dcc02c42ba3037cc995718b6ec487" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-identifier&quot;&gt;presentation identifier&lt;/a&gt; of &lt;var&gt;S&lt;/var&gt; to &lt;var&gt;presentationId&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e729077d8fddb91d87d9ce594ca9168b91dd408" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-url&quot;&gt;presentation URL&lt;/a&gt; of &lt;var&gt;S&lt;/var&gt; to the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-url&quot;&gt; presentation URL&lt;/a&gt; of &lt;var&gt;E&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d067bd3623ad3400c0518172d591f1bbfe7b53" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; to &quot;inactive&quot; and stop capturing media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5caa2a843357e571b2c21b535c2aabf6351407a9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-draggable&quot;&gt;draggable&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; attribute to &lt;code&gt;true&lt;/code&gt; on the element that you wish to make draggable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11b1b09429073ce38b8fba7eb048219de4d0666" translate="yes" xml:space="preserve">
          <source>Set the audio transceiver's &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;&quot;recvonly&quot;&lt;/code&gt;, instructing the transceiver to only accept audio and not to send any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a315c083a64020870a863cac68515abee23537" translate="yes" xml:space="preserve">
          <source>Set the data for a given type. If data for the type does not exist, it is added at the end, such that the last item in the types list will be the new format. If data for the type already exists, the existing data is replaced in the same position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52610a3549dff4be612abd69ed561c75c0b990f" translate="yes" xml:space="preserve">
          <source>Set the image to be used for dragging if a custom one is desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb7a84476d91542c425d3f0eb5aec121502103e" translate="yes" xml:space="preserve">
          <source>Set the image's height to 60 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6c8e34c0ea90827d0f8f816a3d0c02acc232b8" translate="yes" xml:space="preserve">
          <source>Set the image's source to a new object URL representing the file, using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;window.URL.createObjectURL()&lt;/code&gt;&lt;/a&gt; to create the blob URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f202e5e1edbfe42839408ca0bf0fd2d70d9644f2" translate="yes" xml:space="preserve">
          <source>Set the oscillator's frequency to the desired value; in this case, &lt;code&gt;oscNode1&lt;/code&gt; is set to a middle C, while &lt;code&gt;oscNode2&lt;/code&gt; and &lt;code&gt;oscNode3&lt;/code&gt; round out the chord by playing the E and G notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93194c434e46bc1a4248b1a4a9d9c8f5b93616c" translate="yes" xml:space="preserve">
          <source>Set the oscillator's type to &lt;code&gt;&quot;sine&quot;&lt;/code&gt; to use a sine wave as the audio waveform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a97787345800cc6b0a246a75027ba903d86e7f" translate="yes" xml:space="preserve">
          <source>Set the remote description to the specified &lt;code&gt;offer&lt;/code&gt; by calling &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b71fd712f2fe4c69fa8e142da1b18c605c85e5" translate="yes" xml:space="preserve">
          <source>Set this property to be a function you provide which receives as input a single parameter: an &lt;a href=&quot;../rtcdatachannelevent&quot;&gt;&lt;code&gt;RTCDataChannelEvent&lt;/code&gt;&lt;/a&gt; which provides in its &lt;code&gt;channel&lt;/code&gt; property the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; which has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fc3d7bd46e04c20f3c4c7dc0750f6e1eb6d1df" translate="yes" xml:space="preserve">
          <source>Set this property to reference a function you provide that is called by the WebRTC layer when the &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6ab45153816d2b8b9523f873a8b581c685028e" translate="yes" xml:space="preserve">
          <source>Set this to a function which you provide that receives an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object as input; this contains the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/signalingstatechange&quot;&gt;signalingstatechange&lt;/a&gt;&lt;/code&gt; event. This event object doesn't provide details about what changed, but you can examine the &lt;a href=&quot;signalingstate&quot;&gt;&lt;code&gt;signalingState&lt;/code&gt;&lt;/a&gt; property to determine what the new state is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fd91b96ff3cfa4fe84a4f94d511ce58328660e" translate="yes" xml:space="preserve">
          <source>Set to &quot;&lt;code&gt;frame&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42b0127134b7788deb2ea0ec72139e4a027e4d2" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to extend monitoring to the entire subtree of nodes rooted at &lt;code&gt;target&lt;/code&gt;. All of the other &lt;code&gt;MutationObserverInit&lt;/code&gt; properties are then extended to all of the nodes in the subtree instead of applying solely to the &lt;code&gt;target&lt;/code&gt; node. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1f817856d4e0234d72761b6a75c2617803ccb6" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to monitor the specified target node or subtree for changes to the character data contained within the node or nodes. No default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0173338286becea59112a8b157f44426ab4e77" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to monitor the target node (and, if &lt;code&gt;subtree&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, its descendants) for the addition or removal of new child nodes. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52351ca8b4840775b9319c285ee94aa5f9e0940a" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to record the previous value of a node's text whenever the text changes on nodes being monitored. For details and an example, see &lt;a href=&quot;mutationobserver#Monitoring_text_content_changes&quot;&gt;Monitoring text content changes&lt;/a&gt; in &lt;a href=&quot;mutationobserver&quot;&gt;MutationObserver&lt;/a&gt;. No default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541c741c62f18ebcde57d29115ab3309f131b858" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to record the previous value of any attribute that changes when monitoring the node or nodes for attribute changes; see &lt;a href=&quot;mutationobserver#Monitoring_attribute_values&quot;&gt;Monitoring attribute values&lt;/a&gt; in &lt;a href=&quot;mutationobserver&quot;&gt;MutationObserver&lt;/a&gt; for details on watching for attribute changes and value recording. No default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2030b66d4505870c460c5627e0de25d894f0cd" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to watch for changes to the value of attributes on the node or nodes being monitored. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe08a711c9ef0a9a4b07f26f3241d3ed0f32210" translate="yes" xml:space="preserve">
          <source>Set to a &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; indicating the difference between the &lt;code&gt;startTime&lt;/code&gt;s of two successive frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890218f6364236d4a7d52e764efbea0e91cb021e" translate="yes" xml:space="preserve">
          <source>Set to the &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; when the frame was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03364fd7e6e7e659d9da23c93629f366f2f784e2" translate="yes" xml:space="preserve">
          <source>Set to the &lt;a href=&quot;https://dom.spec.whatwg.org/#concept-document-url&quot;&gt;document's address&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72047c2d215c9406ad37c788f850f2107f6abb09" translate="yes" xml:space="preserve">
          <source>Set up a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; (in the form of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element) to serve as the source of the media data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0167db0d54cf1f6c73d3889a0101d085e6374ecb" translate="yes" xml:space="preserve">
          <source>Set up the ICE candidates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f8a308ae11da6fe92647b5b4672cd107eaecc4" translate="yes" xml:space="preserve">
          <source>Set up the image's load event handler to release the object URL since it's no longer needed once the image has been loaded. This is done by calling the &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;&lt;code&gt;window.URL.revokeObjectURL()&lt;/code&gt;&lt;/a&gt; method and passing in the object URL string as specified by &lt;code&gt;img.src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2917ae61f1e864c2867e51f9b2b6727f8b2c59db" translate="yes" xml:space="preserve">
          <source>Set up the local peer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e92768f9da0852635c5c8dbe3809d5658bf6e3d" translate="yes" xml:space="preserve">
          <source>Set up the remote peer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a809d6b2c301ab3ddb6fa3402f7b765c997920b" translate="yes" xml:space="preserve">
          <source>SetElement</source>
          <target state="translated">SetElement</target>
        </trans-unit>
        <trans-unit id="bd030db210a833622312032d14b42ee2466a01df" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;aBlock&lt;/code&gt; to &lt;code&gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&lt;/code&gt; only, which is probably not what you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901d955dffffcfff8a846a522df0e14f878ff3ba" translate="yes" xml:space="preserve">
          <source>Sets a &lt;a href=&quot;periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; which describes a periodic waveform to be used instead of one of the standard waveforms; calling this sets the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;custom&lt;/code&gt;. This replaces the now-obsolete &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode/setWaveTable&quot;&gt;&lt;code&gt;OscillatorNode.setWaveTable()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc978ea0727edd9e01abb7261d0a6379da50744" translate="yes" xml:space="preserve">
          <source>Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02564fb19f37377ccb619aeb8fe8388afb25dbc2" translate="yes" xml:space="preserve">
          <source>Sets a custom validity message for the field set. If this message is not the empty string, then the field set is suffering from a custom validity error, and does not validate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bdcd433b7f6a2bab66855cca0143d65dfc73b6" translate="yes" xml:space="preserve">
          <source>Sets a delay for executing a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2144b056598b1c7dbdfca15551b9d352ef179b01" translate="yes" xml:space="preserve">
          <source>Sets a flag that specifies whether automatic log in is allowed for future visits to the current origin, then returns an empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. For example, you might call this, after a user signs out of a website to ensure that he/she isn't automatically signed in on the next site visit. Earlier versions of the spec called this method &lt;code&gt;requireUserMediation()&lt;/code&gt;. See &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; for support details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aa4e4cba9c7a893b90b5733aae50e5e01cd290" translate="yes" xml:space="preserve">
          <source>Sets a new value for an existing header inside a &lt;code&gt;Headers&lt;/code&gt; object, or adds the header if it does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6cdc4650e230a570259e62daf4dc75883f7663" translate="yes" xml:space="preserve">
          <source>Sets a new value for an existing key inside a &lt;code&gt;FormData&lt;/code&gt; object, or adds the key/value if it does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53128a244b93faa6c915461aa77a45421151f6a" translate="yes" xml:space="preserve">
          <source>Sets a parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0f83c93500a8e5b63035dc099e7f0c612f9dd8" translate="yes" xml:space="preserve">
          <source>Sets a specific CSS property to the specified values and returns the first value as a &lt;a href=&quot;cssstylevalue&quot;&gt;&lt;code&gt;CSSStyleValue&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7190cb05151ef20ec1a660771683a400773cda06" translate="yes" xml:space="preserve">
          <source>Sets a window to minimized state (a way to undo it programatically is by calling &lt;a href=&quot;moveto&quot;&gt;&lt;code&gt;window.moveTo()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a8f338cad6e4cc921cea00b063c40cb3ac4855" translate="yes" xml:space="preserve">
          <source>Sets all occurences of a specific CSS property to the specified valueand returns an array of &lt;a href=&quot;cssstylevalue&quot;&gt;&lt;code&gt;CSSStyleValue&lt;/code&gt;&lt;/a&gt; objects, each containing one of the supplied values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5916d67d9fdc157cb6410fe94e93a4e6812ba1" translate="yes" xml:space="preserve">
          <source>Sets all pixels in the rectangle defined by starting point &lt;em&gt;(x, y)&lt;/em&gt; and size &lt;em&gt;(width, height)&lt;/em&gt; to transparent black, erasing any previously drawn content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09c1baeafb1ccd8db302c7a6d2f32acbbbbca7b" translate="yes" xml:space="preserve">
          <source>Sets an event handler for a media session action, such as play or pause. See the method page for a full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331ec0944590b0a39bc242b5facc2022f959ee85" translate="yes" xml:space="preserve">
          <source>Sets and returns a string containing the grammar from within in the &lt;code&gt;SpeechGrammar&lt;/code&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72cf7a0193e0cfb4dd482a118fad72e2438c6ef" translate="yes" xml:space="preserve">
          <source>Sets and returns the weight of the &lt;code&gt;SpeechGrammar&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bd96a5a42c9c93e73aa7b0ca91a068f78213d7" translate="yes" xml:space="preserve">
          <source>Sets both the RGB blend equation and alpha blend equation to a single equation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ce584f47038adb700396b85b6614ffacac7e4c" translate="yes" xml:space="preserve">
          <source>Sets both the front and back-facing stencil test actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093dae2a87c7b567cfd65f340280eca373093e1a" translate="yes" xml:space="preserve">
          <source>Sets focus away from the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69453ce76679d51e2250a346152a1cb7b1198e6f" translate="yes" xml:space="preserve">
          <source>Sets focus on the current window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0903238dca8fd649683fcda5bc85c44c065340a7" translate="yes" xml:space="preserve">
          <source>Sets how the text is scrolled within the marquee. Possible values are &lt;code&gt;scroll&lt;/code&gt;, &lt;code&gt;slide&lt;/code&gt; and &lt;code&gt;alternate&lt;/code&gt;. If no value is specified, the default value is &lt;code&gt;scroll&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d90543d17e4a41e55d056f37086efc438065527" translate="yes" xml:space="preserve">
          <source>Sets or gets the current inversed transformation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2da05efdeee42495064215e9dcbd859709a9ebc" translate="yes" xml:space="preserve">
          <source>Sets or gets the current transformation matrix, see &lt;a href=&quot;canvasrenderingcontext2d/currenttransform&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.currentTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b483d432f86bebd9e0ee2ab683b260f20adeec" translate="yes" xml:space="preserve">
          <source>Sets or gets the title of the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9ae38e72cc1a0558887783986e600174a7eb14" translate="yes" xml:space="preserve">
          <source>Sets or returns a reference to the DOM tree inside the &lt;code&gt;ShadowRoot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3707c7d87d50d3e2ff8c7c5f48490d9245ad8425" translate="yes" xml:space="preserve">
          <source>Sets or returns the value of the new &lt;code&gt;CSSKeywordValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92eb39839af70c87c74e1e7188e2ab6a2db5046" translate="yes" xml:space="preserve">
          <source>Sets sampler parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cd5dac6aecd6be4b36765d23c1fef28e7dc425" translate="yes" xml:space="preserve">
          <source>Sets texture parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c68c17d6745304c42a0968f4056ba2e50643e8" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when playback is blocked while waiting for an encryption key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad2a18405a97ceee7c4ed09c5a953e47fe72a97" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when the content decryption module has generated a message for the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bdfdfc7dc0ed68c7c877c09f654d031b9fc5bb" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when the interruption is concluded. This was Firefox-specific, having been implemented for Firefox OS, and was removed in Firefox 55.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268523464b5a987a8774f4ac6b036f1ef2821738" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when the media element is interrupted because of the Audio Channel manager. This was Firefox-specific, having been implemented for Firefox OS, and was removed in Firefox 55.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae306ee97e2d1b88c2283b6376c3632fdc333263" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when the media is encrypted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751d418c6dd97e91c91ab04a52d098fa21c8aa16" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when there has been a change in the keys in a session or their statuses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b79c41c58e746fe108a6452200d42540dbbfa0" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Range&lt;/code&gt; to contain the &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; and its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0186dbbf6b382e8d360120db082b284f330b97a4" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Range&lt;/code&gt; to contain the contents of a &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc04584736e619bc631c486cd0561c1a3f53b81" translate="yes" xml:space="preserve">
          <source>Sets the ID of the audio device to use for output and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. This only works when the application is authorized to use the specified device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b72884ce0975c7ee176d62225399e97a04e8ff" translate="yes" xml:space="preserve">
          <source>Sets the RGB blend equation and alpha blend equation separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac601c752f909cd6c9d5c956cce1be443f8ff56a" translate="yes" xml:space="preserve">
          <source>Sets the amount of scrolling at each interval in pixels. The default value is 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa063c52a466ddaadfdb9d43576763c4b9d4532" translate="yes" xml:space="preserve">
          <source>Sets the appearance of the &quot;corners&quot; where lines meet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9611627daed7117cdeb0f25ca760acd79f575590" translate="yes" xml:space="preserve">
          <source>Sets the appearance of the ends of lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010549a24c5b1b5aaeb8ec0671afdad3526f01bc" translate="yes" xml:space="preserve">
          <source>Sets the background color through color name or hexadecimal value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddda0e78f5098c19202943ce0743b9f0f65ae3bb" translate="yes" xml:space="preserve">
          <source>Sets the behavior. The default value is &lt;code&gt;gl.DONT_CARE&lt;/code&gt;. The possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c82a50dc13ab8b293514cde30740ab8f5c1826" translate="yes" xml:space="preserve">
          <source>Sets the both front and back function and reference value for stencil testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5114b7babf12ec6f999bc24a512913d50577408" translate="yes" xml:space="preserve">
          <source>Sets the browser's resource timing buffer size to the specified number of &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ea6b1b919e61f13c3f8ca7da0b0f4c1bb4c32b" translate="yes" xml:space="preserve">
          <source>Sets the current line dash pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9cf9125e7fbc58a3a33c0f5556dedffe14bbe8" translate="yes" xml:space="preserve">
          <source>Sets the cursor to the given index key and primary key given as arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2893dea3c4965e79b511a6e99e8af70e3e8707" translate="yes" xml:space="preserve">
          <source>Sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does &lt;em&gt;not&lt;/em&gt; have a custom validity error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f462eed27bafc42dd0f97520650315d2072b0f" translate="yes" xml:space="preserve">
          <source>Sets the direction of the scrolling within the marquee. Possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt;. If no value is specified, the default value is &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222f29c2f0fed43891c679a863a3c2352e53964d" translate="yes" xml:space="preserve">
          <source>Sets the drag source to the given element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27d1a3dc7c20dc4dfef07396569d91598bf2fd7" translate="yes" xml:space="preserve">
          <source>Sets the end position of a &lt;code&gt;Range&lt;/code&gt; relative to another &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be41f29c2e93f0826683c44e907c6c210f82df86" translate="yes" xml:space="preserve">
          <source>Sets the end position of a &lt;code&gt;Range&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e663fe0224567a776f3036b0f012f80144df3a19" translate="yes" xml:space="preserve">
          <source>Sets the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; event, which fires when the tone has stopped playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da33b669fc51bd2f05c6d7ed448fc9abc798e666" translate="yes" xml:space="preserve">
          <source>Sets the field of view for both eyes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cfb7020b3bbad39e9c10f912ca41b0d3a76367" translate="yes" xml:space="preserve">
          <source>Sets the filenames for the files selected on the input. Not for use in &lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Multiprocess_Firefox/Limitations_of_frame_scripts&quot;&gt;frame scripts&lt;/a&gt;, because it accesses the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cec6ffdfa54409fe3ccbf9cbf78dc308fd0a6b" translate="yes" xml:space="preserve">
          <source>Sets the files selected on the input to the given array of &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects. This is an alternative to &lt;code&gt;mozSetFileNameArray()&lt;/code&gt; which can be used in frame scripts: a chrome script can &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Extensions/Using_the_DOM_File_API_in_chrome_code&quot;&gt;open files as File objects&lt;/a&gt; and send them via &lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Multiprocess_Firefox/The_message_manager&quot;&gt;message manager&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a23ef8fc9ee206c79ec02c0a7f1dac18f74db2" translate="yes" xml:space="preserve">
          <source>Sets the front and/or back function and reference value for stencil testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf0d28577dc0b2ad4bfcbd8c3d0b4f3542f4541" translate="yes" xml:space="preserve">
          <source>Sets the front and/or back-facing stencil test actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58c8049d75c4fcfdc1fa269df06c204cfc47b5f" translate="yes" xml:space="preserve">
          <source>Sets the height in pixels or percentage value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bd1b388e6b86310a0a402008ad46f8d642dc52" translate="yes" xml:space="preserve">
          <source>Sets the horizontal margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4398302f3a090836d8f5677132356ac97d9003" translate="yes" xml:space="preserve">
          <source>Sets the interval between each scroll movement in milliseconds. The default value is 85. Note that any value smaller than 60 is ignored and the value 60 is used instead, unless &lt;code&gt;trueSpeed&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fac0093308e9cab754505162fe489403538396" translate="yes" xml:space="preserve">
          <source>Sets the line width of rasterized lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c22eff857555c2cdb11fc1807a7be558611e23" translate="yes" xml:space="preserve">
          <source>Sets the node representation of the attribute with the specified name and namespace, from the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a143f2a5c895915741c3b995f67d63113e73b01" translate="yes" xml:space="preserve">
          <source>Sets the node representation of the named attribute from the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c11efcbea3a3a313b8953116292b908e88ca2f" translate="yes" xml:space="preserve">
          <source>Sets the number of times the marquee will scroll. If no value is specified, the default value is &amp;minus;1, which means the marquee will scroll continuously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5f157819ee0c05a4d50106bc3f7dc3e42db2cc" translate="yes" xml:space="preserve">
          <source>Sets the number times a cursor should move its position forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf23655c4c1379cde25dc20b95dcbd7b00be356c" translate="yes" xml:space="preserve">
          <source>Sets the orientation of the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a64581cf89835e471f98efce86b2a389f0b1cd" translate="yes" xml:space="preserve">
          <source>Sets the position of the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe5911e7cf8e42b978cac66556ca26c4715ea07" translate="yes" xml:space="preserve">
          <source>Sets the range that the user can seek to in the media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6d3ad5dd38e70b35647721bfe3ea36dc362573" translate="yes" xml:space="preserve">
          <source>Sets the rule to have no shading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3047e38cb535109c814bf11e4c374961cd13d4" translate="yes" xml:space="preserve">
          <source>Sets the selection to be a range including all or parts of two specified DOM nodes, and any content located between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f1f2fe41865237aa8577e282ccb4f5fcb3f022" translate="yes" xml:space="preserve">
          <source>Sets the source and destination blending factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ca8ff3ed4b3d2bb1ed36e4f0242e3024adfeb9" translate="yes" xml:space="preserve">
          <source>Sets the source code in a &lt;code&gt;WebGLShader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2680413a51fe0759c23ba6fb8ee4b007bb29bd" translate="yes" xml:space="preserve">
          <source>Sets the speed of an animation after first synchronizing its playback position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a3b1bff900582b8c5b8f99dba6ee454acee453" translate="yes" xml:space="preserve">
          <source>Sets the start position of a &lt;code&gt;Range&lt;/code&gt; relative to another &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34830f97685c968581d0ad5e4066c4adc14a159d" translate="yes" xml:space="preserve">
          <source>Sets the start position of a &lt;code&gt;Range&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b851e19858e23553163b241aff0205842c7a1ebf" translate="yes" xml:space="preserve">
          <source>Sets the stencil buffer value to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee7da5a78484c6a5e595b67c1f5aa029b7c7c7a" translate="yes" xml:space="preserve">
          <source>Sets the stencil buffer value to the reference value as specified by &lt;a href=&quot;stencilfunc&quot;&gt;&lt;code&gt;WebGLRenderingContext.stencilFunc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3d3cf3a6d38d2079437400396663053412263d" translate="yes" xml:space="preserve">
          <source>Sets the style for shapes' outlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bfbdc02adcc4d9c2a8200efcd8f9988c4e018e" translate="yes" xml:space="preserve">
          <source>Sets the style used when filling shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527c640aa3a004737d7cad0bc37e12e74adb9667" translate="yes" xml:space="preserve">
          <source>Sets the text in the status bar at the bottom of the browser or returns the previously set text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffcaddab676ea03d8769f45122460973a626478" translate="yes" xml:space="preserve">
          <source>Sets the transform type to &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt;, with parameter matrix defining the new transformation. Note that the values from the parameter &lt;code&gt;matrix&lt;/code&gt; are copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66395b207c364b0db896987cc1f852523f4de9a" translate="yes" xml:space="preserve">
          <source>Sets the transform type to &lt;code&gt;SVG_TRANSFORM_ROTATE&lt;/code&gt;, with parameter &lt;code&gt;angle&lt;/code&gt; defining the rotation angle and parameters &lt;code&gt;cx&lt;/code&gt; and &lt;code&gt;cy&lt;/code&gt; defining the optional center of rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd22b00331c0ec622f758929078bc6240cad7a3" translate="yes" xml:space="preserve">
          <source>Sets the transform type to &lt;code&gt;SVG_TRANSFORM_SCALE&lt;/code&gt;, with parameters &lt;code&gt;sx&lt;/code&gt; and &lt;code&gt;sy&lt;/code&gt; defining the scale amounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0eac323850f9559f9d7b3fee1152430ed023cb" translate="yes" xml:space="preserve">
          <source>Sets the transform type to &lt;code&gt;SVG_TRANSFORM_SKEWX&lt;/code&gt;, with parameter &lt;code&gt;angle&lt;/code&gt; defining the amount of skew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3f452386f68039e6d50296ace95cb2c1910664" translate="yes" xml:space="preserve">
          <source>Sets the transform type to &lt;code&gt;SVG_TRANSFORM_SKEWY&lt;/code&gt;, with parameter &lt;code&gt;angle&lt;/code&gt; defining the amount of skew.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942dd379f9267355f76a45dab38f2bb3b8a274df" translate="yes" xml:space="preserve">
          <source>Sets the transform type to &lt;code&gt;SVG_TRANSFORM_TRANSLATE&lt;/code&gt;, with parameters &lt;code&gt;tx&lt;/code&gt; and &lt;code&gt;ty&lt;/code&gt; defining the translation amounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c167b8851fcbe8ac88e92f5257a86f0e74ff7e11" translate="yes" xml:space="preserve">
          <source>Sets the uniform's value to the specified matrix, possibly with transposition. The value is represented as a sequence of &lt;code&gt;GLfloat&lt;/code&gt; values or as a &lt;code&gt;Float32Array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792d73c0c2893c66a75b29ca1fd02105682d43c5" translate="yes" xml:space="preserve">
          <source>Sets the uniform's value to the specified value, which may be a single floating point or integer number, or a 2-4 component vector specified either as a list of values or as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d77e27ef312de2e7b219170d65e0894e489572" translate="yes" xml:space="preserve">
          <source>Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db8473d24f13ccba1b2abe9a0600e6972c5a43f" translate="yes" xml:space="preserve">
          <source>Sets the value of a named attribute of the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d78b3a6bbb481dfa7b38e8670607da6272a930" translate="yes" xml:space="preserve">
          <source>Sets the value of an HTTP request header. You must call &lt;code&gt;setRequestHeader()&lt;/code&gt;after &lt;a href=&quot;#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, but before &lt;code&gt;send()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb096477aafe09e8eb06ec66da4be927f5a875d" translate="yes" xml:space="preserve">
          <source>Sets the value of an attribute on the specified element. If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89628a78f68acedc6ae2c084a1aae7c66cc71460" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;Service-Worker-Navigation-Preload&lt;/code&gt; header and returns an empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbb6f8de7f65a35834f63b79c3f5b1958e01b56" translate="yes" xml:space="preserve">
          <source>Sets the value of the attribute with the specified name and namespace, from the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f905fc4dd14a9e2cce9e21f798e2283a511f0e88" translate="yes" xml:space="preserve">
          <source>Sets the value of the specified property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9d4ea65a47328e65a1ad67d110f27b1b5fefba" translate="yes" xml:space="preserve">
          <source>Sets the values for the &lt;code&gt;stdDeviation&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdad97c627ec3deea98f1614bd9b31cde4b4b545" translate="yes" xml:space="preserve">
          <source>Sets the values of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filterRes&quot;&gt;filterRes&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b24079db6c6ab32bc1a847bf26790bc8182141" translate="yes" xml:space="preserve">
          <source>Sets the version of the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a800f35467167c1104b764324a932bfc92a920" translate="yes" xml:space="preserve">
          <source>Sets the vertical margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fc02c2018eaf5024ed6c739f1d096eecb79aae" translate="yes" xml:space="preserve">
          <source>Sets the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7ca8a1f5f665d84d9095a8f7b9bb7c28e4e37f" translate="yes" xml:space="preserve">
          <source>Sets the width in pixels or percentage value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f75ffa36b53d9f62e438aed6f366b5ebc1c591" translate="yes" xml:space="preserve">
          <source>Sets the width of lines drawn in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84071b8620fa8947ee8ff233cfe2351915f39c1c" translate="yes" xml:space="preserve">
          <source>Sets up mouse event capture, redirecting all mouse events to this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d09b11deed12aeb6fdd8f626f32c170e6d79c0" translate="yes" xml:space="preserve">
          <source>Sets up the audio stream for writing. You specify as parameters the number of channels (&lt;code&gt;1&lt;/code&gt; for mono or &lt;code&gt;2&lt;/code&gt; for stereo), then the sampling rate (&lt;code&gt;44100&lt;/code&gt; for 44.1kHz, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a089252bdfe6810a525a46083624fdbc2315425c" translate="yes" xml:space="preserve">
          <source>Sets up the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event. The received event's &lt;code&gt;data&lt;/code&gt; property is a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; that contains the media data. The event handler simply pushes the &lt;code&gt;Blob&lt;/code&gt; onto the &lt;code&gt;data&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ff865393d74a5749697b75a724ada450b68e8d" translate="yes" xml:space="preserve">
          <source>Sets whether writing into the depth buffer is enabled or disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3fe15bfc349485408c91389e86702548054fb0" translate="yes" xml:space="preserve">
          <source>Sets which behavior to be controlled. Possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e9ae8ba110ae67569c7e062461a10cfe8529e3" translate="yes" xml:space="preserve">
          <source>Sets which color components to enable or to disable when drawing or rendering to a &lt;a href=&quot;webglframebuffer&quot;&gt;&lt;code&gt;WebGLFramebuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a4ed7851bad650f7ebd7febcc80b8f65f2cb75" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;overrideMimeType&lt;/code&gt; does not work from a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=678057&quot;&gt;bug 678057&lt;/a&gt; for more details. Other browsers may handle this differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e8bab01791e759d7a2fcff1dbceb1ac9ff67b1" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;styles&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4503c56fdb196ea1c8fd5d80272e2df38c19c8e2" translate="yes" xml:space="preserve">
          <source>Setting AudioParam values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb25c5030d418d36f53d58daa165825bb7834619" translate="yes" xml:space="preserve">
          <source>Setting a range of keys: &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ed5038a659006453dda96ef8e9e6b0b5e28079" translate="yes" xml:space="preserve">
          <source>Setting a range of keys: &lt;a href=&quot;idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd59a988b9ace69af31ac5a6b10b35a7edb32bf0" translate="yes" xml:space="preserve">
          <source>Setting an animation&amp;rsquo;s &lt;code&gt;playbackRate&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; effectively pauses the animation (however, its &lt;a href=&quot;playstate&quot;&gt;&lt;code&gt;playstate&lt;/code&gt;&lt;/a&gt; does not necessarily become &lt;code&gt;paused&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2638f6ba90cfd8b5693fccbbf0a3814f1088cbac" translate="yes" xml:space="preserve">
          <source>Setting and getting with indices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f51cc1897eee55e2071c8fedf18420491a104b" translate="yes" xml:space="preserve">
          <source>Setting image quality with jpegs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a61648931bb22b2d02611bdcb3a9d6c6085d70c" translate="yes" xml:space="preserve">
          <source>Setting our IIRFilter co-efficients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d55004e08f9dd0e62026a59c8c102ec143ed70" translate="yes" xml:space="preserve">
          <source>Setting request headers: &lt;a href=&quot;setrequestheader&quot;&gt;&lt;code&gt;setRequestHeader()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b2cfccaeab8282a2140a871fee7f1b22705b56" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;src&lt;/code&gt; property did not work properly in versions prior to 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e334469ec41e45918dd11d2b855bb221365173aa" translate="yes" xml:space="preserve">
          <source>Setting the direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed95aeff6826231105d3845fbdf75ee180e1a71" translate="yes" xml:space="preserve">
          <source>Setting the drag feedback image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c3ce1b56cb39534f94bae3a71318e6cc49f3c0" translate="yes" xml:space="preserve">
          <source>Setting the end point above (higher in the document) than the start point will result in a collapsed range with the start and end points both set to the specified end position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91da38e7c1b8abba0f25c0aeadf42e7c215e8aeb" translate="yes" xml:space="preserve">
          <source>Setting the line width:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08770dc694adf872aa2f0b68178b86075f93a415" translate="yes" xml:space="preserve">
          <source>Setting the pixel storage mode affects the &lt;a href=&quot;readpixels&quot;&gt;&lt;code&gt;WebGLRenderingContext.readPixels()&lt;/code&gt;&lt;/a&gt; operations, as well as unpacking of textures with the &lt;a href=&quot;teximage2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.texImage2D()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;texsubimage2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.texSubImage2D()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2911f31cd8894b833cc766f0cca4e5b781c6d298" translate="yes" xml:space="preserve">
          <source>Setting the start point below (lower in the document) the end point will result in a collapsed range with the start and end points both set to the specified start position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2227b178d7766d0d483e02b66132c9fcf81b723" translate="yes" xml:space="preserve">
          <source>Setting the value of &lt;code&gt;innerHTML&lt;/code&gt; lets you easily replace the existing contents of an element with new content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42cdff7d6477e9c742b0a2cf0b95feb6fa97e14" translate="yes" xml:space="preserve">
          <source>Setting the value of this property is equivalent to calling &lt;a href=&quot;enablestylesheetsforset&quot;&gt;&lt;code&gt;document.enableStyleSheetsForSet()&lt;/code&gt;&lt;/a&gt; with the value of &lt;code&gt;currentStyleSheetSet&lt;/code&gt;, then setting the value of &lt;code&gt;lastStyleSheetSet&lt;/code&gt; to that value as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ff26dffc5e166fa9ad95075b14a33c71830b70" translate="yes" xml:space="preserve">
          <source>Setting this property doesn't set the focus to the associated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element: it merely tells the browser to focus to it when &lt;em&gt;the element is inserted&lt;/em&gt; in the document. Setting it after the insertion, that is most of the time after the document load, has no visible effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766784f19511ce70ce0759965d477ece091b301c" translate="yes" xml:space="preserve">
          <source>Setting this property on a node removes all of its children and replaces them with a single text node with the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9f0a4af2c6084c2784fc14b31f00dab0521ac3" translate="yes" xml:space="preserve">
          <source>Setting up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c84df1ef4a9939be214dbf625e94fb8ddffefae" translate="yes" xml:space="preserve">
          <source>Setting up an &lt;code&gt;autoIncrement &lt;/code&gt;flag when creating the object store would enable the key generator for that object store. By default this flag is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47da5dc99b18d1bea05dab53b6587d6e962e3b7" translate="yes" xml:space="preserve">
          <source>Setting up global variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b09cc899352aa0a63e8ed368693ee6a92e888ef" translate="yes" xml:space="preserve">
          <source>Setting up the Donate Now button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486a6f70155e53c1166837f3a83c0a2ab2fe771c" translate="yes" xml:space="preserve">
          <source>Setting up the event handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fd242748f8fd3d6d92b1af7a685774e294920b" translate="yes" xml:space="preserve">
          <source>Setting up to play with service workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4530f599dd1dfcf108edf79c8635b47fc65f780b" translate="yes" xml:space="preserve">
          <source>Setting values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74218ea2d459d53c27ef0305bb5d6224b859adef" translate="yes" xml:space="preserve">
          <source>Setting values in storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f5540e56a138ef21c1febe7f4eb5a7edf28798" translate="yes" xml:space="preserve">
          <source>Setting variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d647aa7501f815b26703ca74a03138925bd106" translate="yes" xml:space="preserve">
          <source>Settings API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e83d00a5fcbeabef4930a920f38ef4d79cb574" translate="yes" xml:space="preserve">
          <source>Settting the tone buffer to an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) cancels any pending DTMF codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32b71317d77aefabbe9fd80aaf1546d24b469d1" translate="yes" xml:space="preserve">
          <source>Several audio sources with different channel layouts are supported, even within a single context. Because of this modular design, you can create complex audio functions with dynamic effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bbd6532ecd922f94b44199659028092ff786ee" translate="yes" xml:space="preserve">
          <source>Several interfaces are direct or indirect descendants of this one: &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;focusevent&quot;&gt;&lt;code&gt;FocusEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;keyboardevent&quot;&gt;&lt;code&gt;KeyboardEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;wheelevent&quot;&gt;&lt;code&gt;WheelEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;inputevent&quot;&gt;&lt;code&gt;InputEvent&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;compositionevent&quot;&gt;&lt;code&gt;CompositionEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a20b4b468847774732c8bab28b80163d09bb8b9" translate="yes" xml:space="preserve">
          <source>Several more specific events are based on &lt;code&gt;MouseEvent&lt;/code&gt;, including &lt;a href=&quot;wheelevent&quot;&gt;&lt;code&gt;WheelEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dragevent&quot;&gt;&lt;code&gt;DragEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a16158e61d3b07d84a9ae5321ca482e8e4902f" translate="yes" xml:space="preserve">
          <source>Several of the &lt;code&gt;Resource Timing&lt;/code&gt; properties return &lt;em&gt;high-resolution timestamps&lt;/em&gt;. These timestamps have a &lt;code&gt;&lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; type and as its name implies, they represent a high-resolution point in time. This type is a &lt;code&gt;double&lt;/code&gt; and its value is a discrete point in time or the difference in time between two discrete points in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700e73717c37a4b515903955a5dc7d4348b04cad" translate="yes" xml:space="preserve">
          <source>Several other interfaces are also extended by the CSSOM-related specifications: &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlimageelement&quot;&gt;&lt;code&gt;HTMLImageElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;svgelement&quot;&gt;&lt;code&gt;SVGElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ddacb516978348352e54a84f3c63d282f42afd" translate="yes" xml:space="preserve">
          <source>Shader</source>
          <target state="translated">Shader</target>
        </trans-unit>
        <trans-unit id="121dec950a70f8619c136453809ee00d21b1095f" translate="yes" xml:space="preserve">
          <source>Shader code that avoids artifacts when wrapping texture coordinates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd35637b0b8d85041b4ffe4e17c71a455434873" translate="yes" xml:space="preserve">
          <source>Shader code that writes to multiple textures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66e7af500b3712682d5fefc642b03be9d5614ce" translate="yes" xml:space="preserve">
          <source>Shader precision-specified types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544f43d4bf0666694141f44e88443abccd46a7eb" translate="yes" xml:space="preserve">
          <source>Shader programming basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c3356e26cce630162129cc630d0ea38166d649" translate="yes" xml:space="preserve">
          <source>Shader programs have access to three kinds of data storage, each of which has a specific use case. Each kind of variable is accessible by one or both types of shader program (depending on the data store type) and possibly by the site's JavaScript code, depending on the specific type of variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4235a06d4f3169e3e7bb3d86b9edf1260ba979f5" translate="yes" xml:space="preserve">
          <source>ShaderPrecisionFormat</source>
          <target state="translated">ShaderPrecisionFormat</target>
        </trans-unit>
        <trans-unit id="33442a93f894a4510b2edf48fea73ebeaec8438d" translate="yes" xml:space="preserve">
          <source>ShaderPrecisionFormat.precision</source>
          <target state="translated">ShaderPrecisionFormat.precision</target>
        </trans-unit>
        <trans-unit id="2ba41663f9554cdc62082d7a60eb3e5ba6b1a451" translate="yes" xml:space="preserve">
          <source>ShaderPrecisionFormat.rangeMax</source>
          <target state="translated">ShaderPrecisionFormat.rangeMax</target>
        </trans-unit>
        <trans-unit id="e88c38ac38f3f989e97485b0354a71f76d3ec0d9" translate="yes" xml:space="preserve">
          <source>ShaderPrecisionFormat.rangeMin</source>
          <target state="translated">ShaderPrecisionFormat.rangeMin</target>
        </trans-unit>
        <trans-unit id="92973587e76f85cffd0d6b60d13924ee113813fd" translate="yes" xml:space="preserve">
          <source>Shaders</source>
          <target state="translated">Shaders</target>
        </trans-unit>
        <trans-unit id="56671d09d11f94a0111d047a53973e69ddd5107c" translate="yes" xml:space="preserve">
          <source>Shadow DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46291d178d1a2a55c646131b9629cb3a2c5c6745" translate="yes" xml:space="preserve">
          <source>Shadow DOM&lt;br/&gt;&lt;small&gt;The definition of 'DocumentOrShadowRoot' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1f026542df663155ef347edcb2d72f66e7dfa5" translate="yes" xml:space="preserve">
          <source>ShadowRoot</source>
          <target state="translated">ShadowRoot</target>
        </trans-unit>
        <trans-unit id="d193e6f94532ce03210743d6cb14ce4f108f61b4" translate="yes" xml:space="preserve">
          <source>ShadowRoot.host</source>
          <target state="translated">ShadowRoot.host</target>
        </trans-unit>
        <trans-unit id="fdbc20f2f484b3ded501f9b5edda7688a0c4024b" translate="yes" xml:space="preserve">
          <source>ShadowRoot.mode</source>
          <target state="translated">ShadowRoot.mode</target>
        </trans-unit>
        <trans-unit id="446d99fcaae5f016e17250bd6ff45f3eb6637c9c" translate="yes" xml:space="preserve">
          <source>Shadows</source>
          <target state="translated">Shadows</target>
        </trans-unit>
        <trans-unit id="0a241307997bf66b38291e1434c37688096218f5" translate="yes" xml:space="preserve">
          <source>Shapes are drawn to the canvas by using the canvas methods directly or by calling custom functions. In normal circumstances, we only see these results appear on the canvas when the script finishes executing. For instance, it isn't possible to do an animation from within a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb9ac21f31098b4641c581a0ace6767fd7d1203" translate="yes" xml:space="preserve">
          <source>Shared workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0335263fa11fd643c17cf73f3f785e9cbdda5c68" translate="yes" xml:space="preserve">
          <source>Shared workers are workers that can be utilized by multiple scripts running in different windows, IFrames, etc., as long as they are in the same domain as the worker. They are a little more complex than dedicated workers &amp;mdash; scripts must communicate via an active port. See &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50e04d6704cc0b211c4e568e46ee29893a61714" translate="yes" xml:space="preserve">
          <source>SharedWorker</source>
          <target state="translated">SharedWorker</target>
        </trans-unit>
        <trans-unit id="815014a24782857403eaed86944523236c251358" translate="yes" xml:space="preserve">
          <source>SharedWorker interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89f5378f8ea39ac64c73ea4e03d6f67ed9f043a" translate="yes" xml:space="preserve">
          <source>SharedWorker.constructor</source>
          <target state="translated">SharedWorker.constructor</target>
        </trans-unit>
        <trans-unit id="bd02eb4b0786c1b9291a9cdfff6bff9c5200d675" translate="yes" xml:space="preserve">
          <source>SharedWorker.port</source>
          <target state="translated">SharedWorker.port</target>
        </trans-unit>
        <trans-unit id="cf591a7f8dbff8c9e288883d44b322208890ffca" translate="yes" xml:space="preserve">
          <source>SharedWorkerGlobalScope</source>
          <target state="translated">SharedWorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="0f005f30f337fd1cdf2258bc2c424b77ab58600d" translate="yes" xml:space="preserve">
          <source>SharedWorkerGlobalScope.applicationCache</source>
          <target state="translated">SharedWorkerGlobalScope.applicationCache</target>
        </trans-unit>
        <trans-unit id="f3dc43bace81a2ccf2ee06fbe2b5b50f050ddb08" translate="yes" xml:space="preserve">
          <source>SharedWorkerGlobalScope.close</source>
          <target state="translated">SharedWorkerGlobalScope.close</target>
        </trans-unit>
        <trans-unit id="2ac0aa7839aa7afd2a2bb90cc9737e2c07ee4a81" translate="yes" xml:space="preserve">
          <source>SharedWorkerGlobalScope.name</source>
          <target state="translated">SharedWorkerGlobalScope.name</target>
        </trans-unit>
        <trans-unit id="e646ca71b805b6e1eadeecd582a8600317ad0c71" translate="yes" xml:space="preserve">
          <source>SharedWorkerGlobalScope.onconnect</source>
          <target state="translated">SharedWorkerGlobalScope.onconnect</target>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="763855b64ef05a68ccf24aa13a48d18ad63725f3" translate="yes" xml:space="preserve">
          <source>Shifts focus away from the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5016f0cac6a86f10d062032f7f7147ad9976629d" translate="yes" xml:space="preserve">
          <source>Should be used to define color profiles in the future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2108195b4e3d4c1b16688ab540223ae73b684e" translate="yes" xml:space="preserve">
          <source>Should return a &lt;a href=&quot;domconfiguration&quot;&gt;&lt;code&gt;DOMConfiguration&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15a775f34b9b093c79d1fdea37cf6b97b333ef0" translate="yes" xml:space="preserve">
          <source>Show constrainable properties the browser supports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c70bbb850e9f9039fcb3a085dfbe651f727133" translate="yes" xml:space="preserve">
          <source>Showing additional user interface after successful payments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138e0935b085aedcb2bf5c3d07a1ee27318265ff" translate="yes" xml:space="preserve">
          <source>Showing compatibility for &lt;code&gt;latencyHint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1181e1614955ba4e0d9fea645b5c235eb190b1d4" translate="yes" xml:space="preserve">
          <source>Showing the rowIndex value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7156c8186f1c5fe5676dea38b632fca143d3b89e" translate="yes" xml:space="preserve">
          <source>Showing what's going on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fea9f10b2178ff45f62ecc86c0f403e41b93df9" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../cdatasection&quot;&gt;&lt;code&gt;CDATASection&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb28e751cbdec145455683970bc4cec18edcd650" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../comment&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00b2d2a5cbedf792d70afd6f803cc4b9b17197e" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d23c614612e02b458c0a23d10b6327d6b6ad052" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e215946a75157e3d63566150453efabc4d11b9" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b679d341a64b6f1721f0e67b9053068fb669659f" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5a65d7cce2c760388780996707add179a2daf6" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;../text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775464963b0fc3c5554c125beb66d1c8b4a90bb0" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;cdatasection&quot;&gt;&lt;code&gt;CDATASection&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b877227b619df1c5ad4de70ef887fa870bb287" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;comment&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a75efe62dd6680582c5e880722b11927f463c9e" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de86d3b26d4b54a9d4b2216c99108c80b88b219a" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2487425309fdd2afc5cd00fdd09798304fb15ff0" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb53831f4d637f319423e0c61dc16c7aca02a0b" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e0053aab193bee2b6ab1ca4c0b5220f2f62fb0" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10a8b7a0e6dc1536b0ea53ef2c20993f20c3e86" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013f176a66289d0343e21c31515845be5729e89a" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e55256f3966b789d5381fcf989f70c137eac36" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59ef69a031c6c61fc6a1b28c5f7423acf418df3" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt;&lt;code&gt;EntityReference&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d525c3a4e86ca8f2a015c7e9456bcd5038baf36" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0cbbaa5abe4527baf30f68fc72218338eb2074" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5dc9787cd6990c5caa52fb7b28ae79ed3b55d7" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06db2ad4fee707d6ecae4c240fdaff220e931a84" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt; node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2d48fb0d9d7a3abfb112f782edcc9e035898e8" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df4574edcf913bf1efeb171d40c18e34695323f" translate="yes" xml:space="preserve">
          <source>Shows &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c9c23a65f3b2fcd2c94de63c39108ef8379ee5" translate="yes" xml:space="preserve">
          <source>Shows all nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf205ef2ab9944884b07217ee547be3827f7259" translate="yes" xml:space="preserve">
          <source>Shows attribute &lt;a href=&quot;../attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;../attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0eee0ffda9ef743189b9010e6108a734a42bf76" translate="yes" xml:space="preserve">
          <source>Shows attribute &lt;a href=&quot;../attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;../attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead2b6325fb436aa585d77002ae02918368baabf" translate="yes" xml:space="preserve">
          <source>Shows attribute &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375aa0d7bbebb403a7131b92f861d63197f072b4" translate="yes" xml:space="preserve">
          <source>Shows attribute &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; nodes. This is meaningful only when creating a &lt;a href=&quot;treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; node as its root. In this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c96b1b5a71057a6356f4952ec4c02b36549c5f" translate="yes" xml:space="preserve">
          <source>Shows how to animate textures; in this case, by mapping an Ogg video onto the faces of a rotating cube.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a504deb34bbbdaf80aa958c51046c3ddc931eb39" translate="yes" xml:space="preserve">
          <source>Shows how to create and animate a 3D object (in this case, a cube).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0009958a4200a7ef4b141da71823e445701faa1" translate="yes" xml:space="preserve">
          <source>Shows how to rotate and translate objects to create simple animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d69a91d031105e03948573e8bf3d236193a0beb" translate="yes" xml:space="preserve">
          <source>Shrink down the box using the scale matrix and position it in different places within clip space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ad91c60f5afc26fc10eec836db6bf5cb98c806" translate="yes" xml:space="preserve">
          <source>Signaling</source>
          <target state="translated">Signaling</target>
        </trans-unit>
        <trans-unit id="d3969aaa10c64bf46dce0c2f13db8656b406d789" translate="yes" xml:space="preserve">
          <source>Signaling and two-way video calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5342e6a131529040cf987189dbb4dc5f36e598e7" translate="yes" xml:space="preserve">
          <source>Signaling and video calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5182a36a3028dfe1e2475c06a48a4f06148cde4" translate="yes" xml:space="preserve">
          <source>Signaling is the process of sending control information between two devices to determine the communication protocols, channels, media codecs and formats, and method of data transfer, as well as any required routing information. The most important thing to know about the signaling process for WebRTC: &lt;strong&gt;it is not defined in the specification&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a2f010a48fc55001f79bf8f02e71bc16a7658b" translate="yes" xml:space="preserve">
          <source>Signaling transaction flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893f67fd51171db57b00d8bd32bcf10e8f6fd33c" translate="yes" xml:space="preserve">
          <source>Signals the end of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb1986e4825852405c438537a32f9aa5818ea4f" translate="yes" xml:space="preserve">
          <source>Signed 64-bit integer number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ac6523e95b6e68da46c1ed1b855057d406ec77" translate="yes" xml:space="preserve">
          <source>Similar methods: &lt;a href=&quot;assign&quot;&gt;&lt;code&gt;Location.assign()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reload&quot;&gt;&lt;code&gt;Location.reload()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29039ce456081d5db9df4acbf2fa4a36fe3b34e5" translate="yes" xml:space="preserve">
          <source>Similar methods: &lt;a href=&quot;assign&quot;&gt;&lt;code&gt;Location.assign()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;replace&quot;&gt;&lt;code&gt;Location.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3efad52397d3094d79a3ed985793dbe06eae5f" translate="yes" xml:space="preserve">
          <source>Similar methods: &lt;a href=&quot;replace&quot;&gt;&lt;code&gt;Location.replace()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reload&quot;&gt;&lt;code&gt;Location.reload()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e1d8254976bdaac4be3cb3e19fe2bb5792667f" translate="yes" xml:space="preserve">
          <source>Similar to &quot;alternate&quot;, except the animation playback starts by going from the end of the animation sequence toward the beginning the first iteration, then goes forward during the second, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f9d3fa65007863d11ca86737c945ef524bb353" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&quot;arraybuffer&quot;&lt;/code&gt;, but the data is received in a stream. When using this response type, the value in &lt;code&gt;response&lt;/code&gt; is only available in the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/progress&quot;&gt;progress&lt;/a&gt;&lt;/code&gt; event, and only contains the data received since the last &lt;code&gt;progress&lt;/code&gt; event, rather than the cumulative data received since the request was sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d8a0c8682d89b52ab583fc7ce57fb2ddfedbe0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;RGB8_ETC&lt;/code&gt;, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4341808e8c2e952640648486728dcb8e3c037450" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;SRGB8_ETC&lt;/code&gt;, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4d8ddac91be29f4279ce4486d84a5cfdc6b7fb" translate="yes" xml:space="preserve">
          <source>Similar to class tag, also used to style the contained text using CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f4cd038769f2a61733c5d45d592bbd80e85b33" translate="yes" xml:space="preserve">
          <source>Similarily, if our vertex shader expects e.g. a 4-component attribute with &lt;code&gt;vec4&lt;/code&gt; but in our &lt;code&gt;gl.vertexAttribPointer()&lt;/code&gt; call we set the &lt;code&gt;size&lt;/code&gt; to &lt;code&gt;2&lt;/code&gt;, then WebGL will set the first two components based on the array buffer, while the third and fourth components are taken from the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25398d2510259c2091b4f23db7e1a8e85ab00052" translate="yes" xml:space="preserve">
          <source>Similarly, if the &lt;code&gt;intersectionRatio&lt;/code&gt; is going down, we use the string &lt;code&gt;decreasingColor&lt;/code&gt; and replace the word &quot;ratio&quot; in that with the &lt;code&gt;intersectionRatio&lt;/code&gt; before setting the target element's &lt;code&gt;background-color&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9684f456744ece4642fbcc3649bdcbe56a0dc3e2" translate="yes" xml:space="preserve">
          <source>Similarly, this is a string defining a color we'll apply when the visibility ratio is decreasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff441f9ef4b6b69c07050b704cdda2a44298188" translate="yes" xml:space="preserve">
          <source>Similarly, we watch for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/signalingstatechange&quot;&gt;signalingstatechange&lt;/a&gt;&lt;/code&gt; events. If the signaling state changes to &quot;closed&quot;, we likewise close the call out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543e568f87f6655cb5b4c1eb916162d5db672eab" translate="yes" xml:space="preserve">
          <source>Similarly, you can move forward (as if the user clicked the Forward button), like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6859d5ff906e31993da954f6ac43c7fb0b297f32" translate="yes" xml:space="preserve">
          <source>Similarly, you can move forward 2 pages by passing 2, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03fb6f9fa656101e836e2ae7ac8895ec0a6838a" translate="yes" xml:space="preserve">
          <source>Similarly, you will need to retrieve the file object or objects using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozGetDataAt&quot;&gt;&lt;code&gt;mozGetDataAt()&lt;/code&gt;&lt;/a&gt; method. If you use &lt;a href=&quot;../datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt;, you will receive an empty string as the data is not a string. Note that some simple types like numbers can be converted to strings, so it is safe to use &lt;a href=&quot;../datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9195cb388b235635d6e0a5990515b186bdb5d5" translate="yes" xml:space="preserve">
          <source>Simple Projection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f17bcec54c28519ea3d2a3d30ecf8693ba4833" translate="yes" xml:space="preserve">
          <source>Simple Push API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f543e72cbd9fe99423a7eb44a9c50cdd8ccbd74" translate="yes" xml:space="preserve">
          <source>Simple SSE demo using PHP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c58529999dc51810f2e19ce1fac91582fa3d13" translate="yes" xml:space="preserve">
          <source>Simple color animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc689f4571cc71146918a75eee62524761cd569" translate="yes" xml:space="preserve">
          <source>Simple constraints like these, specifying a single value, are always treated as non-required. The user agent will try to provide what you request but will not guarantee that what you get will match. However, if you use simple values for properties when calling &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;, the request will always succeed, because these values will be considered a request, not a requirement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373dea533a0d49a9c6fb1be2d9e503372df28cc1" translate="yes" xml:space="preserve">
          <source>Simple example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb31fb9c2dc6f6f9fa6506d4b65fd154125b32" translate="yes" xml:space="preserve">
          <source>Simple example walkthrough</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba971c7177cc7a0849b0167e7f954b49b5a4aaf2" translate="yes" xml:space="preserve">
          <source>Simple examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147afb1fdd23e2c72853ef97ef7ae71bd1b00475" translate="yes" xml:space="preserve">
          <source>Simple implementation of EventTarget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b78f2f1d3ce067a52d1fb4d343df3776dfdc4e2" translate="yes" xml:space="preserve">
          <source>Simple tab support in the editor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e72abc4ccbeabab6d891f4fb04960cf410c43e" translate="yes" xml:space="preserve">
          <source>Simple usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb07a12dce7331a5fe65dc9a0cc5d8f92406326" translate="yes" xml:space="preserve">
          <source>Simple video recording demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d538179ec5171f24169a5b58ab9db4c296ffa1" translate="yes" xml:space="preserve">
          <source>Simpler shaders perform better than complex ones. In particular, if you can remove an &lt;code&gt;if&lt;/code&gt; statement from a shader, that will make it run faster. Division and math functions like &lt;code&gt;log()&lt;/code&gt; should be considered expensive too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48d31e34e08d23139237449e76ec6ec73ca76c6" translate="yes" xml:space="preserve">
          <source>Simply put, these properties describe how the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; should go about making the transition from from keyframe to keyframe, and how to behave when the animation begins and ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6245ef0120382b2d02a64b40309827fdc2eba1ee" translate="yes" xml:space="preserve">
          <source>Simulates a click on the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1627e32446606e3f7424e27bb3c15d421b77b218" translate="yes" xml:space="preserve">
          <source>Simulates losing the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42a7a815d0f5c15868dea13321990841c9fc187" translate="yes" xml:space="preserve">
          <source>Simulates restoring the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf148e00fb5d679cc70ce6327396ed56bcfd3da5" translate="yes" xml:space="preserve">
          <source>Simulating lighting and shading in 3D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c85bc417f4e69c040d71c4d56e7cbc95b5bcff" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s are 16-bit-encoded strings, in most browsers calling &lt;code&gt;window.btoa&lt;/code&gt; on a Unicode string will cause a &lt;code&gt;Character Out Of Range&lt;/code&gt; exception if a character exceeds the range of a 8-bit byte (0x00~0xFF). There are two possible methods to solve this problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb6737dc85659f59af94ab02512d94668633163" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/43&quot;&gt;Firefox 43&lt;/a&gt;, &lt;code&gt;Request()&lt;/code&gt; will throw a TypeError if the URL has credentials, such as http://user:password@example.com.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a420d7533279905c16aa38c6c24bd73986dee4c4" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/43&quot;&gt;Firefox 43&lt;/a&gt;, &lt;code&gt;fetch()&lt;/code&gt; will throw a &lt;code&gt;TypeError&lt;/code&gt; if the URL has credentials, such as &lt;code&gt;http://user:password@example.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1ee000dce65a892f9530f9ca9a6cb595a05898" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://github.com/whatwg/fetch/pull/585&quot;&gt;Aug 25, 2017&lt;/a&gt;. The spec changed the default credentials policy to &lt;code&gt;same-origin&lt;/code&gt;. Firefox changed since 61.0b13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914942f6741ddaa8132b20362336f6b86279b6b3" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;innerText&lt;/code&gt; takes into account CSS styling, reading this property triggers a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Reflow&quot;&gt;reflow,&lt;/a&gt; ensuring up-to-date computed style. &lt;code&gt;textContent&lt;/code&gt; doesn&amp;rsquo;t. Reflows can be computationally expensive thus should be avoided when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9345360f3510d6660d77a1bf6d6e2c70e2785d65" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;sendAsBinary()&lt;/code&gt; is an experimental feature, here is &lt;strong&gt;a polyfill&lt;/strong&gt; for browsers that &lt;em&gt;don't&lt;/em&gt; support the &lt;code&gt;sendAsBinary()&lt;/code&gt; method but support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed arrays&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5783cedf8067b3058ed89a41d6eae0b5b3bb08" translate="yes" xml:space="preserve">
          <source>Since April 2014 this method is a &lt;a href=&quot;https://src.chromium.org/viewvc/blink?revision=173010&amp;amp;view=revision&quot;&gt;no-op in Chrome&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5768dc0651ec787e580ed2fce961fe14aee071dc" translate="yes" xml:space="preserve">
          <source>Since August 2015 this method is a no-op in &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=148454&quot;&gt;WebKit-based browsers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5cf382355e525e2fbf25bd71bd929b3eaa3e9f" translate="yes" xml:space="preserve">
          <source>Since Firefox 19, &lt;code&gt;hasFeature()&lt;/code&gt; mostly returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8216f5b2bee13e930622ec2224108a81610a1b91" translate="yes" xml:space="preserve">
          <source>Since Firefox 4 the browser returns &lt;code&gt;true&lt;/code&gt; when 'Work Offline' mode is disabled and &lt;code&gt;false&lt;/code&gt; when it is enabled, regardless of actual connectivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082fc59da03312d3aedcfdd5acc560d854fd3fc6" translate="yes" xml:space="preserve">
          <source>Since Firefox 41, on OS X and Windows, the returned values follow the actual network connectivity, unless 'Work offline' mode is selected (where it will always return &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e62f70bba9c295839c8eda448ba8df3d62ec37" translate="yes" xml:space="preserve">
          <source>Since Firefox 55, tracking scripts (e.g. Google Analytics, any script URL that Firefox recognises as a tracking script through its &lt;a href=&quot;https://wiki.mozilla.org/Security/Tracking_protection#Lists&quot;&gt;TP lists&lt;/a&gt;) have been subject to further throttling. When running in the foreground, the throttling minimum delay is still 4ms. In background tabs, however, the throttling minimum delay is 10000ms, or 10 seconds, which comes into effect 30 seconds after a document has first loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e92c2fd5ca77395ce5e639d7c359aa61b9c034" translate="yes" xml:space="preserve">
          <source>Since Firefox 56 it also returns &lt;code&gt;true&lt;/code&gt; on Mac when the window is completely hidden by another non-translucent application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6165f83e0c5219018852c11aec79d7b1288bbe06" translate="yes" xml:space="preserve">
          <source>Since Firefox 7, it's no longer possible for a web site to change the default size of a window in a browser if the window wasn&amp;rsquo;t created by &lt;code&gt;window.open&lt;/code&gt; or contains more than one tab. &lt;a href=&quot;https://bugzil.la/565541#c24&quot;&gt;See here&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df46523e386936cf7f73052645b5b3c93719150d" translate="yes" xml:space="preserve">
          <source>Since Firefox 7, it's no longer possible for a web site to move a window in a browser, according to the &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=565541#c24&quot;&gt;following rules&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48054d82d96dd5e8e6dfcaa2afd6463e8a0b7f2" translate="yes" xml:space="preserve">
          <source>Since Opera 11.10, the browser returns &lt;code&gt;true&lt;/code&gt; when 'Work Offline' mode is disabled and &lt;code&gt;false&lt;/code&gt; when it is enabled, regardless of actual connectivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bd827c9c2f9a7f4d374644adaf3c0583a6f4c7" translate="yes" xml:space="preserve">
          <source>Since RTP is simply a data transport, it is augmented by the closely-related &lt;strong&gt;RTP Control Protocol&lt;/strong&gt; (&lt;strong&gt;RTCP&lt;/strong&gt;), which is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3550#section-6&quot;&gt;RFC 3550, section 6&lt;/a&gt;. RTCP adds features including &lt;strong&gt;Quality of Service&lt;/strong&gt; (&lt;strong&gt;QoS&lt;/strong&gt;) monitoring, participant information sharing, and the like. It isn't adequate for the purposes of fully managing users, memberships, permissions, and so forth, but provides the basics needed for an unrestricted multi-user communication session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2a5249798eaf266cfa9c1de7d4797515b329e0" translate="yes" xml:space="preserve">
          <source>Since Version 38.14352 of MS Edge Notification API is suported. &lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_Edge#Release_history&quot;&gt;Wikipedia - MS Edge&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01635a69d5b78eaf25cb0f5211f38dc323fd1125" translate="yes" xml:space="preserve">
          <source>Since a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; need not be continuous, and may also partially select nodes, this is a convenient way to find a &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; which encloses a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a9b76cba9c99c9d65a885d8244c303099232c6" translate="yes" xml:space="preserve">
          <source>Since a platform's &lt;em&gt;system clock&lt;/em&gt; is subject to various &lt;em&gt;skews&lt;/em&gt; (such as NTP adjustments), the interfaces support a &lt;em&gt;monotonic clock&lt;/em&gt; i.e. a clock that is always increasing. As such, the &lt;code&gt;Performance&lt;/code&gt; API defines a &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; type rather than using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef75010c7dcc8c5175db9bc9e3ae102794f1898" translate="yes" xml:space="preserve">
          <source>Since all WebRTC components are required to use encryption, any data transmitted on an &lt;code&gt;RTCDataChannel&lt;/code&gt; is automatically secured using Datagram Transport Layer Security (&lt;strong&gt;DTLS&lt;/strong&gt;). See &lt;a href=&quot;#Security&quot;&gt;Security&lt;/a&gt; below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df44dfe4b3906213969339850740a9da11a524ba" translate="yes" xml:space="preserve">
          <source>Since calling &lt;code&gt;preventDefault()&lt;/code&gt; on a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; or the first &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; event of a series prevents the corresponding mouse events from firing, it's common to call &lt;code&gt;preventDefault()&lt;/code&gt; on &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; rather than &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;. That way, mouse events can still fire and things like links will continue to work. Alternatively, some frameworks have taken to refiring touch events as mouse events for this same purpose. (This example is oversimplified and may result in strange behavior. It is only intended as a guide.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d8e458393a452374d09a26615b40a8334a6189" translate="yes" xml:space="preserve">
          <source>Since each face of our cube is comprised of two triangles, there are 6 vertices per side, or 36 total vertices in the cube, even though many of them are duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f84dbca41ff3dc19b14cd44b39cf4f86641c7e" translate="yes" xml:space="preserve">
          <source>Since each pixel consists of four values within the &lt;code&gt;data&lt;/code&gt; array, the &lt;code&gt;for&lt;/code&gt; loop iterates by multiples of four. The values associated with each pixel are R (red), G (green), B (blue), and A (alpha), in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb17334f6dbdb220c8de8ec5b55599fabdf40062" translate="yes" xml:space="preserve">
          <source>Since each pixel consists of four values, the &lt;code&gt;for&lt;/code&gt; loop iterates by multiples of four. The array values associated with each pixel are R (red), G (green), B (blue), and A (alpha), in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eef037101414478d6b973f42015a2465d06b56c" translate="yes" xml:space="preserve">
          <source>Since headers can be sent in requests and received in responses, and have various limitations about what information can and should be mutable, headers objects have a guard property. This is not exposed to the Web, but it affects which mutation operations are allowed on the headers object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211cbc2ce3defcadb61a33bac58c71054e0bb3e7" translate="yes" xml:space="preserve">
          <source>Since the &quot;name&quot; index isn't unique, there might be multiple entries where &lt;code&gt;name&lt;/code&gt; is the same. Note that such a situation cannot occur with object stores since the key must always be unique. If you wish to filter out duplicates during cursor iteration over indexes, you can pass &lt;code&gt;nextunique&lt;/code&gt; (or &lt;code&gt;prevunique&lt;/code&gt; if you're going backwards) as the direction parameter. When &lt;code&gt;nextunique&lt;/code&gt; or &lt;code&gt;prevunique&lt;/code&gt; is used, the entry with the lowest key is always the one returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0576517dbc5a5272ee0ae48d7a243b159cbf290f" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;../presentation&quot;&gt;&lt;code&gt;Presentation&lt;/code&gt;&lt;/a&gt; interface is typically accessed through &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigation/presentation&quot;&gt;&lt;code&gt;navigation.presentation&lt;/code&gt;&lt;/a&gt;, the second form of the syntax shown above is the more commonly used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d580d4cc364769ceaf94c16531fba64f9f165d9" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML5&lt;/a&gt; snapshot, the &lt;code&gt;languages&lt;/code&gt; property has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee6a077ed500ddd6cc3db38013f0bad03d7a482" translate="yes" xml:space="preserve">
          <source>Since the CSS describes the animation but doesn't connect it to the box, we'll need some JavaScript code to do that. We'll get to that shortly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fd56c17566e43570a0c591e1dd711910ba22e2" translate="yes" xml:space="preserve">
          <source>Since the animation is described as taking place an infinite number of times, alternating direction each time, the box will glide back and forth between the two corners until stopped or the page is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ae3d9a5485beb4dccf3df27eb99f3c76202ad" translate="yes" xml:space="preserve">
          <source>Since the data channel uses a separate transport channel from the media content, it must establish its own connection; if it hasn't finished doing so (that is, its &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;connecting&quot;)&lt;/code&gt;, this error occurs without sending or buffering the &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec296f92db098d1c08d59cdc9bd87f8a96d6832e" translate="yes" xml:space="preserve">
          <source>Since the default value of &lt;code&gt;subtree&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, line 3 is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499290414e5f6451e9595fe70128d95c134c907d" translate="yes" xml:space="preserve">
          <source>Since the document fragment is &lt;strong&gt;in memory&lt;/strong&gt; and not part of the main DOM tree, appending children to it does not cause page &lt;a href=&quot;https://developers.google.com/speed/articles/reflow?csw=1&quot;&gt;reflow&lt;/a&gt; (computation of element's position and geometry). Historically, using document fragments could result in &lt;a href=&quot;http://ejohn.org/blog/dom-documentfragments/&quot;&gt;better performance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffff003605bed4cdb38bba59ac59ffab13d6af74" translate="yes" xml:space="preserve">
          <source>Since the event itself doesn't state whether the document has switched from visible to invisible or vice-versa, the &lt;a href=&quot;../document/hidden&quot;&gt;&lt;code&gt;document.hidden&lt;/code&gt;&lt;/a&gt; property is checked to see if the document is not currently visible. Since it's theoretically possible to get called multiple times, we only proceed if we haven't already paused the timers and saved the visibility states of the existing ads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca0ea22f2e618c97e5903991c51236919fc0107" translate="yes" xml:space="preserve">
          <source>Since the global scope of the worker script is effectively the global scope of the worker you are running (&lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; or whatever) and all worker global scopes inherit methods, properties, etc. from &lt;code&gt;WorkerGlobalScope&lt;/code&gt;, you can run lines such as those above without specifying a parent object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2cda15381aa80a4b172318ebe885914f7d6e81" translate="yes" xml:space="preserve">
          <source>Since the idea is to immediately abort the touch, we simply remove it from the ongoing touch list without drawing a final line segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5fc3613b796d09cd1d9d660b5069aa737be660" translate="yes" xml:space="preserve">
          <source>Since the latest snapshot, &lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML5&lt;/a&gt;, it adds the &lt;code&gt;autocomplete&lt;/code&gt; property and the &lt;code&gt;reportValidity()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ad61de7193214cf76015341e819dacd7728191" translate="yes" xml:space="preserve">
          <source>Since the maximum number of layers you can display is currently 1, and the only required object member is the &lt;a href=&quot;../vrlayerinit/source&quot;&gt;&lt;code&gt;VRLayerInit.source&lt;/code&gt;&lt;/a&gt; property (which is a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; you want to present in that layer; the other parameters are given sensible defaults &amp;mdash; see &lt;a href=&quot;../vrlayerinit/leftbounds&quot;&gt;&lt;code&gt;leftBounds&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../vrlayerinit/rightbounds&quot;&gt;&lt;code&gt;rightBounds&lt;/code&gt;&lt;/a&gt;)), the parameter is simply [{ source: canvas }].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a17edba8ea2800bf4fa40cf32b08c68d3c4219" translate="yes" xml:space="preserve">
          <source>Since the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is used for both pending &lt;code&gt;play&lt;/code&gt; and pending &lt;code&gt;pause&lt;/code&gt; requests, authors are advised to check the state of the animation when the promise is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfb59e1556bc6279339c4c9c7d69b61e746a3e5" translate="yes" xml:space="preserve">
          <source>Since the specified &lt;code&gt;value&lt;/code&gt; gets converted into a string, specifying &lt;code&gt;null&lt;/code&gt; doesn't necessarily do what you expect. Instead of removing the attribute or setting its value to be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, it instead sets the attribute's value to the string &lt;code&gt;&quot;null&quot;&lt;/code&gt;. If you wish to remove an attribute, call &lt;a href=&quot;removeattribute&quot;&gt;&lt;code&gt;removeAttribute()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf52a186d1ac1ce819a1ab9e15adf7a280122de4" translate="yes" xml:space="preserve">
          <source>Since the user can exit the browser at any time, this means that you cannot rely upon any particular transaction to complete, and on older browsers, you don't even get told when they don't complete. There are several implications of this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b7351914738d0b549a914482709c94092c7812" translate="yes" xml:space="preserve">
          <source>Since the various methods involved in negotiating the connection return &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt;s, we can chain them together like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b6b4d83f21bb8098789edb16dc92dda20ce021" translate="yes" xml:space="preserve">
          <source>Since then, a number of additional event handlers have been implemented in various browsers (&lt;code&gt;onload&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;onprogress&lt;/code&gt;, etc.). See &lt;a href=&quot;xmlhttprequest/using_xmlhttprequest&quot;&gt;Using XMLHttpRequest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943c0c97a3464d29da6d242ef5d046c49911c0e" translate="yes" xml:space="preserve">
          <source>Since there is a one-to-one pairing of ID with each source, all tracks with the same source will share the same ID for any given origin, so &lt;a href=&quot;../mediastreamtrack/getcapabilities&quot;&gt;&lt;code&gt;MediaStreamTrack.getCapabilities()&lt;/code&gt;&lt;/a&gt; will always return exactly one value for &lt;code&gt;deviceId&lt;/code&gt;. That makes the device ID not useful for any changes to constraints when calling &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212076ebd54a61398e6696bd4f101c11c87e0278" translate="yes" xml:space="preserve">
          <source>Since there is only one body element in any valid HTML document, this list will have only one item, which we retrieve by selecting the first element in that list using &lt;code&gt;[0]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae8310a19aebff7233b898ba189ba024e4c0af0" translate="yes" xml:space="preserve">
          <source>Since this property can only represent linear sample sizes, this constraint can only be met by devices that can produce audio with linear samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db811a09507b97da3213037b0113651d7401162d" translate="yes" xml:space="preserve">
          <source>Since this property is an alias for &lt;a href=&quot;scrolly&quot;&gt;&lt;code&gt;Window.scrollY&lt;/code&gt;&lt;/a&gt;, see that article for additional details on this value and its use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bb42869af528232ff9cad2a095dd3699da17fe" translate="yes" xml:space="preserve">
          <source>Since this property isn't stable across browsing sessions, its usefulness when calling &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; is generally limited to ensuring that tasks performed during the same browsing session use devices from the same group (or that they don't use devices from the same group). There is no situation in which the groupId is useful when calling &lt;code&gt;applyConstraints()&lt;/code&gt;, since the value can't be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b480f57ae1eb13ea0b5498c5dfbc94ddbb2e788" translate="yes" xml:space="preserve">
          <source>Since version 13, &lt;code&gt;SVGStringList&lt;/code&gt; is indexable like Array which is a non-standard behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cac3a9b8eaa376ecc180173c7b76afbe3fe76e" translate="yes" xml:space="preserve">
          <source>Since we're capturing images from the user's webcam by grabbing frames from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, we can very easily apply filters and fun effects to the video. As it turns out, any CSS filters you apply to the element using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; property affect the captured photo. These filters can range from the simple (making the image black and white) to the extreme (gaussian blurs and hue rotation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2147300acf3c6e7cd2fda308658d582200872d99" translate="yes" xml:space="preserve">
          <source>Since we're using JavaScript to control &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, it's also very easy to make (interactive) animations. In this chapter we will take a look at how to do some basic animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c500075c53064e326060a2510a85c3ad017a35c" translate="yes" xml:space="preserve">
          <source>Since we've added a z-component to our vertices, we need to update the &lt;code&gt;numComponents&lt;/code&gt; of our &lt;code&gt;vertexPosition&lt;/code&gt; attribute to 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98257a8982312e51792901b3ba56474abd5ec8f" translate="yes" xml:space="preserve">
          <source>Single basic type: one entry with the name of the uniform. E.g. &lt;code&gt;uniform vec4 a;&lt;/code&gt; will result in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08e80bdb8e8abeca8a935010ed8967c12b2e52d" translate="yes" xml:space="preserve">
          <source>Single button devices may emulate additional buttons with combinations of button and keyboard presses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f548da1eefc85765a3ded75b1d08adfd94f7d9" translate="yes" xml:space="preserve">
          <source>Site storage units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0252d425a2c36caa90c19c584cc4b30dc83e1874" translate="yes" xml:space="preserve">
          <source>Site storage&amp;mdash;the data stored for a Web site which is managed by the Storage Standard&amp;mdash;includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40b1524871a8acf8580aa1c144056a71454ee43" translate="yes" xml:space="preserve">
          <source>Site structure: The HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7986b133b8260a04591bc98ca39b899de38acc5" translate="yes" xml:space="preserve">
          <source>SitePoint article</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c7a8a68ae40290ba583e4196953b6f2c303ba0" translate="yes" xml:space="preserve">
          <source>Sites which automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so it should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23986429bd3202b1a07688640a41e635b3b51cd8" translate="yes" xml:space="preserve">
          <source>Size matters?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559855990929f0e3e9786a6a70c63a09c58441bc" translate="yes" xml:space="preserve">
          <source>Sized (8-bit) sRGB and alpha formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e384ce700681db3fb044b019a45faab4b9d3826c" translate="yes" xml:space="preserve">
          <source>Sizes the window according to its content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8d3bff7b282e8424f968f9e948b9dc2006e7fb" translate="yes" xml:space="preserve">
          <source>Slicing</source>
          <target state="translated">Slicing</target>
        </trans-unit>
        <trans-unit id="bf68c92e73242cdce83bed86e4c5e2e1005df860" translate="yes" xml:space="preserve">
          <source>Slicing can be a useful tool when you want to make compositions. You could have all elements in a single image file and use this method to composite a complete drawing. For instance, if you want to make a chart you could have a PNG image containing all the necessary text in a single file and depending on your data could change the scale of your chart fairly easily. Another advantage is that you don't need to load every image individually, which can improve load performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023eb4212f3f1e697d5c84ad15b182164c901dc2" translate="yes" xml:space="preserve">
          <source>Slightly better performance: In both Chrome and Firefox, the factory methods call the constructors internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e908f0cb3c812d192456186ce2c8a432c9abf1b" translate="yes" xml:space="preserve">
          <source>Slightly later in the code, you can find this block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ba32e18a522523616ead4e04bba098b836f870" translate="yes" xml:space="preserve">
          <source>Slotable</source>
          <target state="translated">Slotable</target>
        </trans-unit>
        <trans-unit id="7a7e2f8452b2afdb5f66a467965e847e91c6a0d5" translate="yes" xml:space="preserve">
          <source>Slotable.assignedSlot</source>
          <target state="translated">Slotable.assignedSlot</target>
        </trans-unit>
        <trans-unit id="b0ae1f3add673b4a8bfebbf94cd29bb43d184a41" translate="yes" xml:space="preserve">
          <source>Smaller textures perform better than larger ones. For this reason, mipmapping can be a performance win.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed182550b368651868bb2ae99b0a16932d6a583b" translate="yes" xml:space="preserve">
          <source>Smoothing when downscaling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1950c70e79593cdab983bed3aff72bc5a7e2f3ff" translate="yes" xml:space="preserve">
          <source>Snapshot fo HTML WHATWG document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78db1495676809d5a55f55c3e1639b33ca11642a" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt; with its initial specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb98cd65091de8aa73fc5b9be35b6220c5f487e" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;, initial definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38519b3d722b85ab23b2a0f5dc456889e68ce99" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;, no change from &lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264d7b1e7d3e605df34022001f4e7ab67ce4ca01" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. Added &lt;code&gt;onlanguage&lt;/code&gt; since the &lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML5&lt;/a&gt; snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bd6eaff049b0ace6ff8f9e75da04323e9145f9" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. Added &lt;code&gt;onsort&lt;/code&gt; since the &lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML5&lt;/a&gt; snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202f2949ae273852f6c85f78d6eb8435d5701703" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. Creation of &lt;code&gt;GlobalEventHandlers&lt;/code&gt; (properties where on the target before it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3257fd8dc1b47b1235d1e8afd16b73666b7d9f73" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. Creation of &lt;code&gt;WindowBase64&lt;/code&gt; (properties were on the target before it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b815ff007cc1183bf8204375c7391703bcb7057" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. Creation of &lt;code&gt;WindowBase64&lt;/code&gt; (properties where on the target before it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606b65d7945e7584a21b0c5603f7d0272110ed23" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. Creation of &lt;code&gt;WindowEventHandlers&lt;/code&gt; (properties where on the target before it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd897829c18a67198003f5cf3f6bd489d520d20c" translate="yes" xml:space="preserve">
          <source>Snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;. No change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5edad758f30046abd75f869e211bf2ebb109d6" translate="yes" xml:space="preserve">
          <source>Snapshot of a previous &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f7065286e17ee817ed9cc5d68a62ee3c0606fa" translate="yes" xml:space="preserve">
          <source>Snapshot of the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt; containing the initial definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fe5b06869ce9157fb4fa6c1beac7fd6379e81f" translate="yes" xml:space="preserve">
          <source>Snapshot of the HTML WHATWG document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966983f45bfefbaf0408818861cc556e31b0ab62" translate="yes" xml:space="preserve">
          <source>Snippet: Limiting destination countries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79c036021d89fe073f18335444dd823f8877d1f" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;caches.match(event.request)&lt;/code&gt; is great when there is a match in the service worker cache, but what about cases when there isn&amp;rsquo;t a match? If we didn&amp;rsquo;t provide any kind of failure handling, our promise would resolve with &lt;code&gt;undefined&lt;/code&gt; and we wouldn't get anything returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f19b8f032d33b41c53ea26f753ece5d72d422d" translate="yes" xml:space="preserve">
          <source>So every update, the raycaster looks to see if you've pressed any keys lately, to conserve calculations by not casting if you're idle. If you have, then the canvas is cleared, the ground and sky are drawn, the camera position and/or orientation are updated, and the rays are cast out. As the rays intersect walls, then they render a vertical sliver of canvas in the color of the wall they've hit, blended with a darker version of the color according to the distance to the wall. The height of the sliver is also modulated by the distance from the camera to the wall, and is drawn centered over the horizon line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babe29da6947025ee11fe8fed43ab76219fa7c90" translate="yes" xml:space="preserve">
          <source>So far this is pretty similar to what we've done in previous sections. However once we call the first &lt;code&gt;restore()&lt;/code&gt; statement, the top drawing state is removed from the stack, and settings are restored. If we hadn't saved the state using &lt;code&gt;save()&lt;/code&gt;, we would need to change the fill color and transparency manually in order to return to the previous state. This would be easy for two properties, but if we have more than that, our code would become very long, very fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bca52373ae48f190fb9b5a5cebdc5a145406e06" translate="yes" xml:space="preserve">
          <source>So far, each example on this page has used only one type of path function per shape. However, there's no limitation to the number or types of paths you can use to create a shape. So in this final example, let's combine all of the path functions to make a set of very famous game characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61706369bf2ff947909ffd678379b3092b83ac4b" translate="yes" xml:space="preserve">
          <source>So for example, say we are dealing with an fft size of 2048. We return the &lt;a href=&quot;../analysernode/frequencybincount&quot;&gt;&lt;code&gt;AnalyserNode.frequencyBinCount&lt;/code&gt;&lt;/a&gt; value, which is half the fft, then call Uint8Array() with the frequencyBinCount as its length argument &amp;mdash; this is how many data points we will be collecting, for that fft size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa274bf7423d6d29379b64f820a25edc6d95c29" translate="yes" xml:space="preserve">
          <source>So for example, you could create a new &lt;code&gt;PaymentRequest&lt;/code&gt; instance like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0af1cd867d6fe474235bc6155cd577dd4ca9a54" translate="yes" xml:space="preserve">
          <source>So here we create a writer to write the chunks to the stream using &lt;a href=&quot;../writablestream/getwriter&quot;&gt;&lt;code&gt;WritableStream.getWriter()&lt;/code&gt;&lt;/a&gt;. This creates a &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff17db366f06ea7a28174d9922266f451a9fca9" translate="yes" xml:space="preserve">
          <source>So here we have two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements represented by the variables &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt;; when the value of either is changed, &lt;code&gt;myWorker.postMessage([first.value,second.value])&lt;/code&gt; is used to send the value inside both to the worker, as an array. You can send pretty much anything you like in the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c9493231cb7191375cced7ee49f244c38fd520" translate="yes" xml:space="preserve">
          <source>So here we're creating an &lt;code&gt;objectStore&lt;/code&gt; and requesting a customer record out of it, identified by its ssn value (&lt;code&gt;444-44-4444&lt;/code&gt;). We then put the result of that request in a variable (&lt;code&gt;data&lt;/code&gt;), update the &lt;code&gt;age&lt;/code&gt; property of this object, then create a second request (&lt;code&gt;requestUpdate&lt;/code&gt;) to put the customer record back into the &lt;code&gt;objectStore&lt;/code&gt;, overwriting the previous value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1866074eafe467f1cfe7e8aefe3f79e566413b49" translate="yes" xml:space="preserve">
          <source>So if the Key was &quot;&lt;code&gt;dGhlIHNhbXBsZSBub25jZQ==&lt;/code&gt;&quot;, the Accept will be &quot;&lt;code&gt;s3pPLMBiTxaQ9kYGzzhZRbK+xOo=&lt;/code&gt;&quot;. Once the server sends these headers, the handshake is complete and you can start swapping data!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562ca7226ce630d0039dca62f34e87b73c55d300" translate="yes" xml:space="preserve">
          <source>So if your hard drive is 500 GB, then the total storage for a browser is 250 GB. If this is exceeded, a process called &lt;strong&gt;origin eviction&lt;/strong&gt; comes into play, deleting an entire origin's worth of data until the storage amount goes under the limit again. There is no trimming effect put in place to delete parts of origins &amp;mdash; deleting one database of an origin could cause problems with inconsistency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf5543f399a427988c003adff46cadf52b08f0a" translate="yes" xml:space="preserve">
          <source>So let's begin! The &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt; (the interface the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; is extended from) has a &lt;code&gt;&lt;a href=&quot;../baseaudiocontext/listener&quot;&gt;listener&lt;/a&gt;&lt;/code&gt; property that returns an &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; object. This represents the listener of the scene, usually your user. You can define where they are in space and in which direction they are facing. They remain static. The &lt;code&gt;pannerNode&lt;/code&gt; can then calculate its sound position relative to the position of the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2a743cbc3b8b6ed6967beab45c7aaa06cae35d" translate="yes" xml:space="preserve">
          <source>So let's grab this input's value and update the gain value when the input node has its value changed by the user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de88599b9ffbf82bcacae0ab94e770daa8e15850" translate="yes" xml:space="preserve">
          <source>So there you are, fire up Safari 1.3+ or Firefox 1.5+ or some other browser that supports the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element and enjoy!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f777a5b69cc5fcdf569d42b3935b6891c377be1c" translate="yes" xml:space="preserve">
          <source>So to recap, the keys are equally spaced by default unless you specify an offset on a key. Handy, no?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f459fe6f00b10a7462dace08ae1f80f19410011" translate="yes" xml:space="preserve">
          <source>So what's going on when we do this? A &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt; is created for us automatically and extended to an online audio context. We'll want this because we're looking to play live sound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05428bfcc3c41ba272cf23ef7f9dbf426bec2f77" translate="yes" xml:space="preserve">
          <source>So what's new? Virtual Reality hardware needs to deliver high-precision, low-latency data to deliver an acceptable user experience; computers running VR applications need to be powerful enough to handle all this information. It has not been until recently that such accuracy and power has been available at an afforable cost, if at all. Early VR prototypes cost tens of thousands of dollars, whereas more recent headsets such as the &lt;a href=&quot;https://www.vive.com/uk/&quot;&gt;HTC VIVE&lt;/a&gt; and &lt;a href=&quot;https://www.oculus.com/rift/&quot;&gt;Oculus Rift&lt;/a&gt; are available for hundreds of dollars, and cheaper solutions are available &amp;mdash; mobile device-based solutions like &lt;a href=&quot;http://www.samsung.com/global/galaxy/gear-vr/&quot;&gt;Gear VR&lt;/a&gt; and &lt;a href=&quot;https://www.google.com/get/cardboard/&quot;&gt;Google Cardboard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116b30cf0daa741c6dd26cf72bafa373cdb07d3b" translate="yes" xml:space="preserve">
          <source>So what?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26890c39b81dc5338c533cbf9d875fb6b32c02f" translate="yes" xml:space="preserve">
          <source>So, by calling &lt;code&gt;myP.appendChild(&lt;var&gt;node_element&lt;/var&gt;)&lt;/code&gt;, you are making the element a new child of the second &amp;lt;p&amp;gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344155d1e5d90f980f5c42037a4650a0a52acc1e" translate="yes" xml:space="preserve">
          <source>So, for example, initially calling &lt;code&gt;localStorage&lt;/code&gt; on a document will return a &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object; calling &lt;code&gt;sessionStorage&lt;/code&gt; on a document will return a different &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object. Both of these can be manipulated in the same way, but separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b6dc5fe0ee8f2adffee2046696f407e13da070" translate="yes" xml:space="preserve">
          <source>So-called advanced constraints are created by adding an &lt;code&gt;advanced&lt;/code&gt; property to the constraint set; this property's value is an array of additional constraint sets which are considered optional. There are few if any use cases for this feature, and there is some interest in removing it from the specification, so it will not be discussed here. If you wish to learn more, see &lt;a href=&quot;https://www.w3.org/TR/mediacapture-streams/#idl-def-Constraints&quot;&gt;section 11 of the Media Capture and Streams specification&lt;/a&gt;, past example 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f2020b8e41231267b1bbab9ebbafd984eac6d1" translate="yes" xml:space="preserve">
          <source>Social API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="translated">Socket</target>
        </trans-unit>
        <trans-unit id="32285c2c05ea47ba9a024ab1827345291a2248c4" translate="yes" xml:space="preserve">
          <source>SolidcolorElement</source>
          <target state="translated">SolidcolorElement</target>
        </trans-unit>
        <trans-unit id="dc2465a1f68d8ecdd5141506af79f7c5843ea657" translate="yes" xml:space="preserve">
          <source>Solution #1 &amp;ndash;UTF-16 =&amp;gt; binary UTF8-in-16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d4da3d1dc0b6140780a6e9ab0ce0ae200fbabe" translate="yes" xml:space="preserve">
          <source>Solution #2 &amp;ndash; escaping the string before encoding it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f22c7ced92e09e7f5ba00cf2500de67127ead85" translate="yes" xml:space="preserve">
          <source>Solution #3 &amp;ndash; rewrite the DOMs &lt;code&gt;atob()&lt;/code&gt; and &lt;code&gt;btoa()&lt;/code&gt; using JavaScript's &lt;code&gt;TypedArray&lt;/code&gt;s and UTF-8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5c38fdccbb11c8b09b21816d5dd22a997198e8" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agents&lt;/a&gt; add to the &lt;code&gt;error&lt;/code&gt; object other properties that provide information such as stack dumps, the name of the JavaScript file and the line number where the error occurred, and other debugging aids, but you should not rely on this information in a production environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f7505c0a9df735a09dcf29de22b9d855a5d69a" translate="yes" xml:space="preserve">
          <source>Some JavaScript code will need to be written to handle the click on the button to start the next iteration. Let's have a look.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7329a9bc5afec0ca544d33a176369dfb25322891" translate="yes" xml:space="preserve">
          <source>Some WebGL capabilities depend on the client. Before relying on them, you should use the WebGL &lt;code&gt;getParameter()&lt;/code&gt; function to determine what values are supported on the client. For example, the maximum size of a 2D texture is given by &lt;code&gt;webgl.getParameter(webgl.MAX_TEXTURE_SIZE)&lt;/code&gt;. Starting in Firefox 10, the &lt;code&gt;webgl.min_capability_mode&lt;/code&gt; preference allows simulating minimal values for these capabilities, to test portability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9433eb0bf4f07dd28aca8c6ec7def2548b23d024" translate="yes" xml:space="preserve">
          <source>Some animation fun with scissoring and clearing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee78e185de1d9fb99bbe75cd11d4f721b225b186" translate="yes" xml:space="preserve">
          <source>Some basic &lt;code&gt;setInterval&lt;/code&gt; and &lt;code&gt;clearInterval&lt;/code&gt; action will allow you to create persistent vibration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2379e8cfe82c36bfb726c158a90572e1f7465f1" translate="yes" xml:space="preserve">
          <source>Some browsers (mobile Safari, for one) re-use touch objects between events, so it's best to copy the bits you care about, rather than referencing the entire object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0f55b8a395ac2dcbf6d5531aac22e86dfe9418" translate="yes" xml:space="preserve">
          <source>Some browsers implement &lt;a href=&quot;http://www.whatwg.org/specs/web-apps/current-work/#offline&quot;&gt;Online/Offline events&lt;/a&gt; from the &lt;a href=&quot;http://www.whatwg.org/specs/web-apps/current-work/&quot;&gt;WHATWG Web Applications 1.0 specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d096e97d6a0b2cee0cc6806be9327afe871d3966" translate="yes" xml:space="preserve">
          <source>Some browsers implemented an interface called &lt;a href=&quot;crypto&quot;&gt;&lt;code&gt;Crypto&lt;/code&gt;&lt;/a&gt; without having it well defined or being cryptographically sound. In order to avoid confusion, methods and properties of this interface have been removed from browsers implementing the Web Crypto API, and all Web Crypto API methods are available on a new interface: &lt;a href=&quot;subtlecrypto&quot;&gt;&lt;code&gt;SubtleCrypto&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;crypto/subtle&quot;&gt;&lt;code&gt;Crypto.subtle&lt;/code&gt;&lt;/a&gt; property gives access to an object implementing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d9cf2136b041e5a6ac017af8a591703e2b10fc" translate="yes" xml:space="preserve">
          <source>Some browsers may re-use touch objects between events, so it's best to copy the bits you care about, rather than referencing the entire object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85334ba4a14263a1255882e386ea90e04c39f04" translate="yes" xml:space="preserve">
          <source>Some browsers' implementations of these methods are part of the &lt;a href=&quot;audioscheduledsourcenode&quot;&gt;&lt;code&gt;AudioScheduledSourceNode&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dadf9cfeb1efbf0c00cce860f127b30530a6d0" translate="yes" xml:space="preserve">
          <source>Some browsers' implementations of this event handler are part of the &lt;a href=&quot;audioscheduledsourcenode&quot;&gt;&lt;code&gt;AudioScheduledSourceNode&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7552ffd4150fa882dd8de64159daff1016577a4" translate="yes" xml:space="preserve">
          <source>Some codecs and hardware are able to detect when audio begins and ends by watching for &quot;silence&quot; (or relatively low sound levels) to occur. This reduces network bandwidth used for audio by only sending audio data when there's actually something to broadcast. However, in some cases, this is unwanted. For example, in the case of music or other non-voice transmission, this can cause loss of important low-volume sounds. Also, emergency calls should never cut audio when quiet. &lt;code&gt;true&lt;/code&gt; (voice activity detection &lt;em&gt;enabled&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfa479132397d8a6c90d0627dd7e975e5be0179" translate="yes" xml:space="preserve">
          <source>Some combination&amp;mdash;but not necessarily all&amp;mdash;of the following properties will exist on the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e0d40664e9475631110127b733a76361efe1fc" translate="yes" xml:space="preserve">
          <source>Some common patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d42ad8aaf0f4bf393f4f77aa87928a21156f32c" translate="yes" xml:space="preserve">
          <source>Some constants are also provided by &lt;a href=&quot;using_extensions&quot;&gt;WebGL extensions&lt;/a&gt;. A &lt;a href=&quot;#Constants_defined_in_WebGL_extensions&quot;&gt;list&lt;/a&gt; is provided below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05882e58283eb836ca12e913aea8d7b11d2664fc" translate="yes" xml:space="preserve">
          <source>Some default values for the init parameter changed in Chrome 47. See the Properties section for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c739b548c5e8ad72db5512a4287965c98b560ec" translate="yes" xml:space="preserve">
          <source>Some default values for the init parameter changed in Samsung Internet 5.0. See the Properties section for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b131e3040f080ea9310ca265a52348776a3bbeec" translate="yes" xml:space="preserve">
          <source>Some devices (mainly mobile devices) can dynamically change the orientation of the screen based on their own orientation, ensuring that the user will always be able to read what's on the screen. While this behavior is perfectly suited for text content, there is some content that can be negatively affected by such a change. For example, games based on the orientation of the device could be messed up by such a change of the orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a151cb99331a92158397dc84c05c7002825b6aa5" translate="yes" xml:space="preserve">
          <source>Some disadvantages of this method are that your image is not cached, and for larger images the encoded url can become quite long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e90a0864a7dd9a5c920c214c5be1b0a7a927bc" translate="yes" xml:space="preserve">
          <source>Some example types are: &lt;code&gt;text/plain&lt;/code&gt; and &lt;code&gt;text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20525be11db408cf027a8c76b4098258716aa74e" translate="yes" xml:space="preserve">
          <source>Some examples of valid &lt;code&gt;country&lt;/code&gt; values: &lt;code&gt;&quot;US&quot;&lt;/code&gt;, &lt;code&gt;&quot;GB&quot;&lt;/code&gt;, &lt;code&gt;&quot;CN&quot;&lt;/code&gt;, or &lt;code&gt;&quot;JP&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17765099afb98d449f606353e9452ab34c72577b" translate="yes" xml:space="preserve">
          <source>Some extension developer-oriented code snippets involving &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a9ca11163d6a1cc310f22e47d58cfdbf352367" translate="yes" xml:space="preserve">
          <source>Some keys toggle the state of an indicator light; these include keys such as Caps Lock, Num Lock, and Scroll Lock. On Windows and Linux, these keys dispatch only the &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5691bd28a25281369c43aebdc68e4fadcddd9b" translate="yes" xml:space="preserve">
          <source>Some kind of network error occurred which prevented the media from being successfully fetched, despite having previously been available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3707dbd68b2b60c915f758437340c8a12243d08" translate="yes" xml:space="preserve">
          <source>Some new features regarding a touch point's &lt;a href=&quot;https://developer.mozilla.org/Web/API/Touch#Touch_area&quot;&gt;touch area&lt;/a&gt; - the area of contact between the user and the touch surface - are in the process of being standardized. The new features include the &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; radius of the ellipse that most closely circumscribes a touch point's contact area with the touch surface. The touch point's &lt;em&gt;rotation angle&lt;/em&gt; - the number of degrees of rotation to apply to the described ellipse to align with the contact area - is also be standardized as is the amount of pressure applied to a touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53071a53cba917546ebd4cc31659a5a07f6529e" translate="yes" xml:space="preserve">
          <source>Some new value have been proposed for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action&quot;&gt;&lt;code&gt;css touch-action&lt;/code&gt;&lt;/a&gt; property as part of &lt;a href=&quot;https://w3c.github.io/pointerevents/&quot;&gt;Pointer Events Level 2&lt;/a&gt; specification but currently those new values have no implementation support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc131efa8c621ef4dd2002296e2e6b827954b0e4" translate="yes" xml:space="preserve">
          <source>Some of the more commonly used properties of the audio element includes &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;currentTime&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt;, &lt;code&gt;paused&lt;/code&gt;, &lt;code&gt;muted&lt;/code&gt; and &lt;code&gt;volume&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcfd8b28a4a78e19488fdebcc9c4d1ddd5d5c47" translate="yes" xml:space="preserve">
          <source>Some of these operations are only useful in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;&lt;code&gt;ServiceWorkers&lt;/code&gt;&lt;/a&gt;, but they provide a much nicer API for manipulating headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fa8baac8c06dac421802f579b8cca4ca97a22f" translate="yes" xml:space="preserve">
          <source>Some or all of the following will be included in the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22db05b67c5b933780ee3c61ef759483bb6ad475" translate="yes" xml:space="preserve">
          <source>Some other value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf6d04658ff4d1d0a13c38981d82259073d676b" translate="yes" xml:space="preserve">
          <source>Some payment handlers use &lt;strong&gt;merchant validation&lt;/strong&gt;, which is the process of validating the identity of a merchant in some way, usually using some form of cryptographic challenge. If the merchant doesn't successfully validate, it's not allowed to use the payment handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18e3fc7639e93d2c2557514ea8bb9d6eb26e4e5" translate="yes" xml:space="preserve">
          <source>Some payment handlers use &lt;strong&gt;merchant validation&lt;/strong&gt;, which is the process of validating the identity of a merchant in some way, usually using some form of cryptographic response such as a public key. Validated merchants are allowed to interface with a payment handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faac26852aa51b6f045a7c0b69250fa504b0744" translate="yes" xml:space="preserve">
          <source>Some pointer devices, such as mouse and pen, support multiple buttons and the button presses can be &lt;em&gt;chorded&lt;/em&gt; i.e. depressing an additional button while another button on the pointer device is already depressed. To determine the state of button presses, pointer events uses the &lt;a href=&quot;mouseevent/button&quot;&gt;&lt;code&gt;button&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/buttons&quot;&gt;&lt;code&gt;buttons&lt;/code&gt;&lt;/a&gt; properties of the &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; interface (that &lt;a href=&quot;pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; inherits from). The following table provides the values of &lt;code&gt;button&lt;/code&gt; and &lt;code&gt;buttons&lt;/code&gt; for the various device button states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a1d013c1712eb6bb0c0f193ee9d8897d51f84f" translate="yes" xml:space="preserve">
          <source>Some processes are exempt from this throttling behavior. In these cases, you can use the Page Visibility API to reduce the tabs' performance impact while they're hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6d8f1f907939ca2fe8fc9dca166012cc3cc519" translate="yes" xml:space="preserve">
          <source>Some properties allow an empty list in their syntax. In that case, these properties take the &lt;code&gt;none&lt;/code&gt; identifier. So, an empty list means that the property has the value &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f661000ba7bd89ff89d56313c52516a14aa18463" translate="yes" xml:space="preserve">
          <source>Some routers using NAT employ a restriction called &amp;lsquo;Symmetric NAT&amp;rsquo;. This means the router will only accept connections from peers you&amp;rsquo;ve previously connected to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc42909cc5d74953c5bcd2b9c61e72ccc3af502f" translate="yes" xml:space="preserve">
          <source>Some routers will have restrictions on who can connect to devices on the network. This can mean that even though we have the public IP address found by the STUN server, not anyone can create a connection. In this situation we need to turn to TURN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd194628932ff1e4393696c5ce8c74999232b7b" translate="yes" xml:space="preserve">
          <source>Some specialty keyboard keys (such as the extended keys for controlling media on multimedia keyboards) don't generate key codes on Windows; instead, they trigger &lt;code&gt;WM_APPCOMMAND&lt;/code&gt; events. These events get mapped to DOM keyboard events, and are listed among the &quot;Virtual key codes&quot; for Windows, even though they aren't actually key codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c189b1e373396ec9659d7ff5ef0303526b8e77d9" translate="yes" xml:space="preserve">
          <source>Some speech synthesis engines or voices may constrain the minimum and maximum rates further. If &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/&quot;&gt;SSML&lt;/a&gt; is used, this value will be overridden by &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/#S3.2.4&quot;&gt;prosody tags&lt;/a&gt; in the markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dab1ef27b2b59248dbc4a03020a8965364fe75d" translate="yes" xml:space="preserve">
          <source>Some studies have shown that as many as 60% of push notifications are blocked. Allowing your site to push notifications in realtime requires trust. You can build trust by having a well-designed website that provides good content that shows respect for the user, and a clear value to accepting push notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b548e25f553b78ec09a46c9d98f42575aa74fc0" translate="yes" xml:space="preserve">
          <source>Some unknown type of value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22be23202da7b06bea5dc4d04904709da08b147d" translate="yes" xml:space="preserve">
          <source>Some use cases (e.g., paying for fuel at a service station) involve pre-authorization of payment. One way to do this is through a Payment Handler (see the &lt;a href=&quot;https://w3c.github.io/payment-handler/&quot;&gt;Payment Handler API&lt;/a&gt;). At time of writing, that specification includes a &lt;code&gt;CanMakePayment&lt;/code&gt; event that a Payment Handler could make use of to return authorization status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a22b7c84df4e2724f14567062ae1f8c5525366" translate="yes" xml:space="preserve">
          <source>Some user agent implementations support the following cookie prefixes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b713becccc066a0199d75afa450ba2fd41e92e2b" translate="yes" xml:space="preserve">
          <source>Some user agents disable autoplay for media elements on mobile devices and require a user gesture to start media. The following example adds a &lt;code&gt;pointerup&lt;/code&gt; event to an on-page play button, which is then used to kick off the media session code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2795a88dcaea6486f96b45b700a5d2611ffe0295" translate="yes" xml:space="preserve">
          <source>Some user agents subclass this interface to provide more precise information or functionality, like in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack&quot;&gt;&lt;code&gt;CanvasCaptureMediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83e94aa398ccf871ef1627a3a5ba129572870cf" translate="yes" xml:space="preserve">
          <source>Some uses of the whole-text functionality may be better served by using &lt;code&gt;Node.textContent&lt;/code&gt;, or the longstanding &lt;a href=&quot;../element/innerhtml&quot;&gt;&lt;code&gt;Element.innerHTML&lt;/code&gt;&lt;/a&gt;; that&amp;rsquo;s fine and probably clearer in most circumstances. If you have to work with mixed content within an element, as seen here, &lt;code&gt;wholeText&lt;/code&gt; and &lt;code&gt;replaceWholeText()&lt;/code&gt; may be useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffe012e42b661e1084357bc7d4dc9dd88f61efe" translate="yes" xml:space="preserve">
          <source>Something else went wrong during the recording process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933b906cdf3d51c02ab06071b74c724fe0f7b20e" translate="yes" xml:space="preserve">
          <source>Sometimes you may support some different formats, and you want to retrieve the data that is most specific that is supported. In this example, three formats are supported by a drop target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1976f41197431d93c318fe70ab662269b12d608a" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to iterate in descending order rather than in ascending order (the default direction for all cursors). Switching direction is accomplished by passing &lt;code&gt;prev&lt;/code&gt; to the &lt;code&gt;openCursor()&lt;/code&gt; function as the second argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115a97cf1ec6c7fce48fdbf1ae118c49aa48600c" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to read a stream twice, simultaneously. This is achieved via the &lt;a href=&quot;../readablestream/tee&quot;&gt;&lt;code&gt;ReadableStream.tee()&lt;/code&gt;&lt;/a&gt; method &amp;mdash; it outputs an array containing two identical copies of the original readable stream, which can then be read independently by two separate readers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa66efcc73dfbd25ec458666505eadcb66a9aac" translate="yes" xml:space="preserve">
          <source>Sometimes, any value within a range is acceptable for a property's value. You can specify ranges with either or both minimum and maximum values, and you can event specify an ideal value within the range, if you choose. If you provide an ideal value, the browser will try to get as close as possible to matching that value, given the other constraints specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e8ddb546c29ab83f524109f5307d6c1fbd35c3" translate="yes" xml:space="preserve">
          <source>Sometimes, during the lifetime of a WebRTC session, network conditions change. One of the users might transition from a cellular to a WiFi network, or the network might become congested, for example. When this happens, the ICE agent may choose to perform &lt;strong&gt;ICE restart&lt;/strong&gt;. This is a process by which the network connection is renegotiated, exactly the same way the initial ICE negotiation is performed, with one exception: media continues to flow across the original network connection until the new one is up and running. Then media shifts to the new network connection and the old one is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70560b672b9c618a9339c8d42aae6f17e545b8cb" translate="yes" xml:space="preserve">
          <source>Sorting columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81ad59ae5346088d8d08648fa767f1bea6d7196" translate="yes" xml:space="preserve">
          <source>Sorts all key/value pairs, if any, by their keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69565870764a9674521e7c7fa36c16902717290" translate="yes" xml:space="preserve">
          <source>Sound can be generated directly in JavaScript by an audio node (such as an oscillator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="2f8c205f954ba2b2474dd6822bbb3a5194c8e3f3" translate="yes" xml:space="preserve">
          <source>Source Extensions API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065002d21183f69d20b9aceff830b34f6b7993b8" translate="yes" xml:space="preserve">
          <source>Source Extensions API: Transcoding assets for MSE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c3362e6f043f1d31fb6ac9db4f95e9da21614b" translate="yes" xml:space="preserve">
          <source>Source.activeSourceBuffers</source>
          <target state="translated">Source.activeSourceBuffers</target>
        </trans-unit>
        <trans-unit id="6627a6e9e0dad85964c1ae456c1527c19615f9b9" translate="yes" xml:space="preserve">
          <source>Source.addSourceBuffer</source>
          <target state="translated">Source.addSourceBuffer</target>
        </trans-unit>
        <trans-unit id="4a4e9a1f845107f0ebd11f9fc0736d5263f20a07" translate="yes" xml:space="preserve">
          <source>Source.clearLiveSeekableRange</source>
          <target state="translated">Source.clearLiveSeekableRange</target>
        </trans-unit>
        <trans-unit id="5bd02bb18083537335c6790c4c8cb7b0e682f5d7" translate="yes" xml:space="preserve">
          <source>Source.close</source>
          <target state="translated">Source.close</target>
        </trans-unit>
        <trans-unit id="a46b3f044161c4cb3124f04bbec216c4239639d9" translate="yes" xml:space="preserve">
          <source>Source.constructor</source>
          <target state="translated">Source.constructor</target>
        </trans-unit>
        <trans-unit id="eda6f82fd99a26ffb8cd6da2ee59a42b91a669ea" translate="yes" xml:space="preserve">
          <source>Source.duration</source>
          <target state="translated">Source.duration</target>
        </trans-unit>
        <trans-unit id="83aef7c9f691eb55167e1d993e3d552348ffb01f" translate="yes" xml:space="preserve">
          <source>Source.endOfStream</source>
          <target state="translated">Source.endOfStream</target>
        </trans-unit>
        <trans-unit id="7c95901ebf290de884721cd6f802e78d53435538" translate="yes" xml:space="preserve">
          <source>Source.isTypeSupported</source>
          <target state="translated">Source.isTypeSupported</target>
        </trans-unit>
        <trans-unit id="d0de037113d6327a17487e42cfc19ac83ae5c232" translate="yes" xml:space="preserve">
          <source>Source.onerror</source>
          <target state="translated">Source.onerror</target>
        </trans-unit>
        <trans-unit id="9cc3453b0d7056d8d9b8eb4d6ba93d050ae02ea8" translate="yes" xml:space="preserve">
          <source>Source.onmessage</source>
          <target state="translated">Source.onmessage</target>
        </trans-unit>
        <trans-unit id="30a8c49d0fc5494294c993b2b4f60db0ee98a45e" translate="yes" xml:space="preserve">
          <source>Source.onopen</source>
          <target state="translated">Source.onopen</target>
        </trans-unit>
        <trans-unit id="a043274f291f10a2591e2a0742d5f9c9e7cbd159" translate="yes" xml:space="preserve">
          <source>Source.readyState</source>
          <target state="translated">Source.readyState</target>
        </trans-unit>
        <trans-unit id="286498544ba656008e7aa4b09121e6c3954dc13c" translate="yes" xml:space="preserve">
          <source>Source.removeSourceBuffer</source>
          <target state="translated">Source.removeSourceBuffer</target>
        </trans-unit>
        <trans-unit id="0d14f2cfd0003c89f40b4d63d9534a6fad227077" translate="yes" xml:space="preserve">
          <source>Source.setLiveSeekableRange</source>
          <target state="translated">Source.setLiveSeekableRange</target>
        </trans-unit>
        <trans-unit id="bae152b0d4971997dee71cd0067511c636bad18c" translate="yes" xml:space="preserve">
          <source>Source.sourceBuffers</source>
          <target state="translated">Source.sourceBuffers</target>
        </trans-unit>
        <trans-unit id="57149e4ae88326063e0f0fd58053e03987ae5a5f" translate="yes" xml:space="preserve">
          <source>Source.url</source>
          <target state="translated">Source.url</target>
        </trans-unit>
        <trans-unit id="7b875a836ec6e4862c5541f7303b2276bd761acd" translate="yes" xml:space="preserve">
          <source>Source.withCredentials</source>
          <target state="translated">Source.withCredentials</target>
        </trans-unit>
        <trans-unit id="007fc399fd28f1e45b086e1bb4e818b6ba53b3b4" translate="yes" xml:space="preserve">
          <source>SourceBuffer</source>
          <target state="translated">SourceBuffer</target>
        </trans-unit>
        <trans-unit id="8f0d9becde9b28d32a2507836caf619ccad4fd6d" translate="yes" xml:space="preserve">
          <source>SourceBuffer.abort</source>
          <target state="translated">SourceBuffer.abort</target>
        </trans-unit>
        <trans-unit id="cf0397a4820d96e7406659867b6f114971b4d2cf" translate="yes" xml:space="preserve">
          <source>SourceBuffer.appendBuffer</source>
          <target state="translated">SourceBuffer.appendBuffer</target>
        </trans-unit>
        <trans-unit id="c881947c6090018392f1c6b5a285c844dc332c2a" translate="yes" xml:space="preserve">
          <source>SourceBuffer.appendStream</source>
          <target state="translated">SourceBuffer.appendStream</target>
        </trans-unit>
        <trans-unit id="732a4d97a421e5bc0ef81831de5c27150992e57d" translate="yes" xml:space="preserve">
          <source>SourceBuffer.appendWindowEnd</source>
          <target state="translated">SourceBuffer.appendWindowEnd</target>
        </trans-unit>
        <trans-unit id="9ba05e8f1030ea5635bfa8b9f8b5a78cfd42950c" translate="yes" xml:space="preserve">
          <source>SourceBuffer.appendWindowStart</source>
          <target state="translated">SourceBuffer.appendWindowStart</target>
        </trans-unit>
        <trans-unit id="d3850e95e9ce893eb79fc0ac63a2666f2e6621a4" translate="yes" xml:space="preserve">
          <source>SourceBuffer.audioTracks</source>
          <target state="translated">SourceBuffer.audioTracks</target>
        </trans-unit>
        <trans-unit id="f2cca44bd12b153824bd1bb9d9c11d6e6dca04a8" translate="yes" xml:space="preserve">
          <source>SourceBuffer.buffered</source>
          <target state="translated">SourceBuffer.buffered</target>
        </trans-unit>
        <trans-unit id="b96daac4e7fd6e5e32918a08bfb9552cc9462bd9" translate="yes" xml:space="preserve">
          <source>SourceBuffer.changeType</source>
          <target state="translated">SourceBuffer.changeType</target>
        </trans-unit>
        <trans-unit id="73e1dec34fe282e20b6ad283563edb22c92c58ee" translate="yes" xml:space="preserve">
          <source>SourceBuffer.mode</source>
          <target state="translated">SourceBuffer.mode</target>
        </trans-unit>
        <trans-unit id="d73cee9d350be5ad65c7eef821ae09febde11f9b" translate="yes" xml:space="preserve">
          <source>SourceBuffer.remove</source>
          <target state="translated">SourceBuffer.remove</target>
        </trans-unit>
        <trans-unit id="36c3b54e6c7da2860c998158884eccccdef0549f" translate="yes" xml:space="preserve">
          <source>SourceBuffer.textTracks</source>
          <target state="translated">SourceBuffer.textTracks</target>
        </trans-unit>
        <trans-unit id="e7d0bffa9073033aa299a9a3101213535f3155e6" translate="yes" xml:space="preserve">
          <source>SourceBuffer.timestampOffset</source>
          <target state="translated">SourceBuffer.timestampOffset</target>
        </trans-unit>
        <trans-unit id="e565111fd11e7bdf8672a5f5cb759f1f656e8f1b" translate="yes" xml:space="preserve">
          <source>SourceBuffer.trackDefaults</source>
          <target state="translated">SourceBuffer.trackDefaults</target>
        </trans-unit>
        <trans-unit id="ae6a9f7901ad2dd68aee63a6246cb506bbfd1b97" translate="yes" xml:space="preserve">
          <source>SourceBuffer.updating</source>
          <target state="translated">SourceBuffer.updating</target>
        </trans-unit>
        <trans-unit id="6c444e9372e6efdcd173a608ef47904abef0d03c" translate="yes" xml:space="preserve">
          <source>SourceBuffer.videoTracks</source>
          <target state="translated">SourceBuffer.videoTracks</target>
        </trans-unit>
        <trans-unit id="0400d2bd807f42a5d222e3ee2c14768f25de314c" translate="yes" xml:space="preserve">
          <source>SourceBufferList</source>
          <target state="translated">SourceBufferList</target>
        </trans-unit>
        <trans-unit id="b0cbc44cc5813a9d052a497b782f8ddfdf067655" translate="yes" xml:space="preserve">
          <source>SourceBufferList.SourceBuffer</source>
          <target state="translated">SourceBufferList.SourceBuffer</target>
        </trans-unit>
        <trans-unit id="c92a2a14047cd182fc6de5a21157b41ad244ed1f" translate="yes" xml:space="preserve">
          <source>SourceBufferList.length</source>
          <target state="translated">SourceBufferList.length</target>
        </trans-unit>
        <trans-unit id="18f4b230569a4cb36809f0b3608d0bf03f66d9eb" translate="yes" xml:space="preserve">
          <source>Spacing types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9e48be061080f563c016ead533c6569b4e41d4" translate="yes" xml:space="preserve">
          <source>Spatialisations</source>
          <target state="translated">Spatialisations</target>
        </trans-unit>
        <trans-unit id="752509346425aa46776238cd12f3802ed1f15a04" translate="yes" xml:space="preserve">
          <source>Spawning a dedicated worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2df80ad66d9a235c94522a0637d4b1395a0ca9f" translate="yes" xml:space="preserve">
          <source>Spawning a new shared worker is pretty much the same as with a dedicated worker, but with a different constructor name (see &lt;a href=&quot;https://github.com/mdn/simple-shared-worker/blob/gh-pages/index.html&quot;&gt;index.html&lt;/a&gt; and &lt;a href=&quot;https://github.com/mdn/simple-shared-worker/blob/gh-pages/index2.html&quot;&gt;index2.html&lt;/a&gt;) &amp;mdash; each one has to spin up the worker using code like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a922516688b6d3e040f53fcbe49102591e81cd2" translate="yes" xml:space="preserve">
          <source>Spawning a shared worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cfda13704fc71e0aa8b3f70f866b756857768b" translate="yes" xml:space="preserve">
          <source>Spawning subworkers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fc4ef83d8fe859d0117ebc594b44c157652ab4" translate="yes" xml:space="preserve">
          <source>Speaker Manager API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684060bdb249b7893939c889711616306b8f1d3d" translate="yes" xml:space="preserve">
          <source>Speaking of multiplication, what does this operation look like in a matrix? The easiest example is to show the multiplication of a single point. You may notice that a 3D point doesn't quite match up with a 4x4 matrix, so a fourth dimension W is added. For a typical position, setting this value to 1 will make the math work out. The W component has some additional uses that are out of scope for this article. Check out the &lt;a href=&quot;webgl_model_view_projection&quot;&gt;WebGL model view projection&lt;/a&gt; article for a look into how it comes in handy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f579a62f11089d3cd0d320b973719bc776dae9" translate="yes" xml:space="preserve">
          <source>Speaking of the site's body: the main content of the site is kept in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main&quot;&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/a&gt; element. The following style is applied to that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b23cb71a62f4539d2f1e683e7d346c5e6034346" translate="yes" xml:space="preserve">
          <source>Speaking the entered text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff960890985f778d791a8028642c5b44f0c90b5e" translate="yes" xml:space="preserve">
          <source>Specced out as part of a &lt;code&gt;[NoInterfaceObject]&lt;/code&gt; interface called &lt;code&gt;SpeechSynthesisGetter&lt;/code&gt;, and Implemented by the &lt;code&gt;Window&lt;/code&gt; object, the &lt;code&gt;speechSynthesis&lt;/code&gt; property provides access to the &lt;a href=&quot;speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt; controller, and therefore the entry point to speech synthesis functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f613a38c9a77eef52fd9053dd584ff64dc4df0" translate="yes" xml:space="preserve">
          <source>Special cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1e80e0f2ba4d245883d37de64bde89b4f4604b" translate="yes" xml:space="preserve">
          <source>Special type for pointer arithmetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c12784ec3c8be86c966c30d4e549bd2dd2fcda" translate="yes" xml:space="preserve">
          <source>Specific usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7553efb70c64402f109b42e4d6a8d1d0a130fd7f" translate="yes" xml:space="preserve">
          <source>Specifically this object will contain all final results that have been returned, followed by the current best hypothesis for all interim results. When subsequent &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; events are fired, interim results may be overwritten by a newer interim result or by a final result &amp;mdash; they may even be removed, if they are at the end of the &quot;results&quot; array and the array length decreases. Final results on the other hand will not be overwritten or removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511b6b11773e71a3ad7337d3a26ba29c6f64b0c2" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;console.log&lt;/code&gt; gives special treatment to DOM elements, whereas &lt;code&gt;console.dir&lt;/code&gt; does not. This is often useful when trying to see the full representation of the DOM JS object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28afbd5a4e3b46d22aa0791122547414093a277" translate="yes" xml:space="preserve">
          <source>Specifically, we want to link it to Alice&amp;rsquo;s animation, so she gets bigger as the cupcake gets eaten. We can achieve this via the following function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">Specification</target>
        </trans-unit>
        <trans-unit id="7174c8e3f7f0ab80b963dc066e073c6f1294e953" translate="yes" xml:space="preserve">
          <source>Specification: Efficient Script Yielding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c709f9886c34419d95252da6707fd3dc704a220" translate="yes" xml:space="preserve">
          <source>Specifications</source>
          <target state="translated">Specifications</target>
        </trans-unit>
        <trans-unit id="adb7da6dcb2315220c0dd05a47a12620ddebf621" translate="yes" xml:space="preserve">
          <source>Specifications&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;Update compatibility data on GitHub&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd3e1818f855261789196a21f72e18191e811fe" translate="yes" xml:space="preserve">
          <source>Specified in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f68f11ff0a42528b7fdf156f611fd96d509f30" translate="yes" xml:space="preserve">
          <source>Specified in &lt;a href=&quot;http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/xul/nsIDOMXULDocument.idl&quot;&gt;nsIXULDocument.idl&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b315a92028eec47f7dd2aa0201151c08f115e9ea" translate="yes" xml:space="preserve">
          <source>Specifies &lt;a href=&quot;https://w3c.github.io/web-animations/#cubic-bzier-timing-function&quot;&gt;a cubic B&amp;eacute;zier timing function&lt;/a&gt;. The four numbers specify points P1 and P2 of the curve as (x1, y1, x2, y2). Both x values must be in the range [0, 1] or the definition is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afb98503cf428b69462a529a6a17efa25dd08f0" translate="yes" xml:space="preserve">
          <source>Specifies &lt;a href=&quot;https://w3c.github.io/web-animations/#step-timing-function&quot;&gt;a step timing function&lt;/a&gt;, which breaks the animation down into a number of equal time intervals. The browser flips to a different static frame when each interval is reached, rather than animating smoothly. The first parameter specifies the number of intervals in the function. It must be a positive integer (greater than 0). The second parameter, which is optional, specifies the point at which the change of values occur within the interval. If the second parameter is omitted, it is given the value end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fa076feea6fb9ccd90e6ebb3c478b16584d611" translate="yes" xml:space="preserve">
          <source>Specifies a 2D texture image in a compressed format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a677f9339e63c552041f945660bbd58abe95f7d" translate="yes" xml:space="preserve">
          <source>Specifies a 2D texture image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cc02a9ae50bacc8045b83aaea40a556e560422" translate="yes" xml:space="preserve">
          <source>Specifies a 2D texture sub-image in a compressed format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb575bfd678abcd4f6b526627f6bbd9ab211b596" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaList&quot;&gt;&lt;code&gt;MediaList&lt;/code&gt;&lt;/a&gt; representing the intended destination medium for style information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71eedbfe3eeacde5d57ae784b2988ce87f2b3bd" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;a href=&quot;https://www.w3.org/TR/css-timing-1/#frames-timing-functions&quot;&gt;frames timing function&lt;/a&gt;, which breaks the animation down into a number of equal time intervals but also displays the start (0%) and end (100%) states for an equal amount of time to the other intervals. The browser flips to a different static frame when each interval is reached, rather than animating smoothly. See GitHub for a &lt;a href=&quot;https://mdn.github.io/css-examples/animation-frames-timing-function/index-waa.html&quot;&gt;simple example&lt;/a&gt; that illustrates the difference between &lt;code&gt;steps()&lt;/code&gt; and &lt;code&gt;frames()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa6a6a2b23a05e320f5aa363255250b84d69ca" translate="yes" xml:space="preserve">
          <source>Specifies a function that compares incoming pixel depth to the current depth buffer value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c2342d1b2390ede0efbc44492af3e893148cb4" translate="yes" xml:space="preserve">
          <source>Specifies a list of color buffers to be drawn into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4851a6aea3129c4195c59acfc95b5ea380dfa67" translate="yes" xml:space="preserve">
          <source>Specifies a matrix value for a uniform variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9978b376311598e95cf50687e271cd3d59aa65e3" translate="yes" xml:space="preserve">
          <source>Specifies a name that will be used as the font face value for font properties. Takes the same type of values as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-family&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt; descriptor of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec703602e39bbafdfc218d73488f515fbba327" translate="yes" xml:space="preserve">
          <source>Specifies a new algorithm for returning the seekable time range of a media element whose source is a &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a67ce892d3fae3a141b86f11c62541119e5ad0" translate="yes" xml:space="preserve">
          <source>Specifies a sub-rectangle of the current 3D texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafa5f123f1a17db437a1ad11a7b5a5dd87ac632" translate="yes" xml:space="preserve">
          <source>Specifies a three-dimensional sub-rectangle for a texture image in a compressed format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e5f8bc05267df3ed8f5ca0c9508be6d1f45678" translate="yes" xml:space="preserve">
          <source>Specifies a three-dimensional texture image in a compressed format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11266d58b872a14562ba13a3edbad590f3089457" translate="yes" xml:space="preserve">
          <source>Specifies a three-dimensional texture image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e041913c107ebe4ecfe9dd9e3e3cea14a2536f15" translate="yes" xml:space="preserve">
          <source>Specifies a value for a generic vertex attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20065033bd936fd50f2bdc22a44bf81bd1aa9c58" translate="yes" xml:space="preserve">
          <source>Specifies a value for a uniform variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a5c1457b792de7ff8c2f6b99481b84fb90ab87" translate="yes" xml:space="preserve">
          <source>Specifies a vibration pattern for devices with vibration hardware to emit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f666701eace67b33df8b5bdd36f269fc43f2a008" translate="yes" xml:space="preserve">
          <source>Specifies all levels of a three-dimensional texture or two-dimensional array texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f396f9d21089caf3d5ed83e3b22d16e55e7435de" translate="yes" xml:space="preserve">
          <source>Specifies all levels of two-dimensional texture storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48292b70a933a8a17bc8e9beec3f83267222dc0a" translate="yes" xml:space="preserve">
          <source>Specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; events. These events occur when the battery &lt;a href=&quot;charging&quot;&gt;&lt;code&gt;charging&lt;/code&gt;&lt;/a&gt; state is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06684bd2e29afa57f235993d937ebc5d434f029" translate="yes" xml:space="preserve">
          <source>Specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; events. These events occur when the battery &lt;a href=&quot;chargingtime&quot;&gt;&lt;code&gt;chargingTime&lt;/code&gt;&lt;/a&gt; is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc379699821b5e9b429a87950e2145864946ded" translate="yes" xml:space="preserve">
          <source>Specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; events. These events occur when the device's light level sensor detects a change in the intensity of the ambient light level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8c7360146234c5bcbf38f661b638c06a58b131" translate="yes" xml:space="preserve">
          <source>Specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; events. These events occur when the device sensor detects that an object becomes closer to or farther from the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fc50f18df4c525b36aaedc2b3a0c2b9e75efae" translate="yes" xml:space="preserve">
          <source>Specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; events. These events occur when the battery &lt;a href=&quot;dischargingtime&quot;&gt;&lt;code&gt;dischargingTime&lt;/code&gt;&lt;/a&gt; is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df5c52a043be8aebbd020e5b7626a652134f013" translate="yes" xml:space="preserve">
          <source>Specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; events. These events occur when the battery &lt;a href=&quot;level&quot;&gt;&lt;code&gt;level&lt;/code&gt;&lt;/a&gt; is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2679544919264fccdfed6228c296c7de80845124" translate="yes" xml:space="preserve">
          <source>Specifies hints for certain behaviors. The interpretation of these hints depend on the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacc88897411f95da95be42253cf1cc0eb592c62" translate="yes" xml:space="preserve">
          <source>Specifies how strings containing &lt;code&gt;\n&lt;/code&gt; are to be written out. This can be &lt;code&gt;&quot;transparent&quot;&lt;/code&gt; (endings unchanged) or &lt;code&gt;&quot;native&quot;&lt;/code&gt; (endings changed to match host OS filesystem convention). The default value is &lt;code&gt;&quot;transparent&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b696f7971d253bc9abf7e405624a3fd260b5e8f4" translate="yes" xml:space="preserve">
          <source>Specifies how to handle negotiation of candidates when the remote peer is not compatible with the &lt;a href=&quot;https://webrtcstandards.info/sdp-bundle/&quot;&gt;SDP BUNDLE standard&lt;/a&gt;. This must be one of the values from the enum &lt;code&gt;&lt;a href=&quot;#RTCBundlePolicy_enum&quot;&gt;RTCBundlePolicy&lt;/a&gt;&lt;/code&gt;. If this value isn't included in the dictionary, &lt;code&gt;&quot;balanced&quot;&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df21d3451204bbb485a0918cf0d1458944f6374b" translate="yes" xml:space="preserve">
          <source>Specifies in more detail where the row is inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d538d922185b0b3889bf5be469af3667ef96d606" translate="yes" xml:space="preserve">
          <source>Specifies integer data formats and locations of vertex attributes in a vertex attributes array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e43936cbd3fe5b16c2a2709fb44095965734c45" translate="yes" xml:space="preserve">
          <source>Specifies multi-sample coverage parameters for anti-aliasing effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e4ab71e39795a44fb4ff55a38b5741f7a4caf3" translate="yes" xml:space="preserve">
          <source>Specifies paint order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4096507e43ab7d5d94ed454fedb085c2e991fdb4" translate="yes" xml:space="preserve">
          <source>Specifies some detail information about the Event, depending on the type of the event. For this event type, indicates the repeat number for the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dacbcaf90160bff4342e70abb0b2b2511e3e2e4" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;code&gt;atob&lt;/code&gt; and &lt;code&gt;btoa&lt;/code&gt; methods and states that they encode to base64 as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c895723d7a6ea5660309a8ca666ed7a6a5725b3d" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;code&gt;timeline&lt;/code&gt; with which to associate the animation, as an object of a type based on the &lt;a href=&quot;../animationtimeline&quot;&gt;&lt;code&gt;AnimationTimeline&lt;/code&gt;&lt;/a&gt; interface. Currently the only timeline type available is &lt;a href=&quot;../documenttimeline&quot;&gt;&lt;code&gt;DocumentTimeline&lt;/code&gt;&lt;/a&gt;, but in the future there my be timelines associated with gestures or scrolling, for example. The default value is &lt;a href=&quot;../document/timeline&quot;&gt;&lt;code&gt;Document.timeline&lt;/code&gt;&lt;/a&gt;, but this can be set to &lt;code&gt;null&lt;/code&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acca290012a35279c65302d1adc868a3afb78458" translate="yes" xml:space="preserve">
          <source>Specifies the Content Security Policy that an embedded document must agree to enforce upon itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6542764528a9430aa12321fdf268ede55739ad4" translate="yes" xml:space="preserve">
          <source>Specifies the alignment of the text. Text is aligned within the space given by the size cue setting if it is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37c4a223e52fb0004e6f3a6227896e986ff12ad" translate="yes" xml:space="preserve">
          <source>Specifies the base64 algorithm in section 4, and also defines an alternate base64url algorithm for URLs in section 5 (which is not the one used by &lt;code&gt;atob&lt;/code&gt;/&lt;code&gt;btoa&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4df6cc3d796b8180407caeb9b77a2006a9465e9" translate="yes" xml:space="preserve">
          <source>Specifies the behavior when it's set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5284545b3cc26a6b05385bab06ccb853224a8635" translate="yes" xml:space="preserve">
          <source>Specifies the blurring effect. Default &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff160ae2dba221903eadf7a82e19ba28fd539c0" translate="yes" xml:space="preserve">
          <source>Specifies the color values used when clearing color buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533d98575209e352c43a58ec104c72cb254224d6" translate="yes" xml:space="preserve">
          <source>Specifies the data formats and locations of vertex attributes in a vertex attributes array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab93908b449792d1f1a9d3744170c104da37c422" translate="yes" xml:space="preserve">
          <source>Specifies the default values to use if kind, label, and/or language information is not available in the &lt;a href=&quot;https://w3c.github.io/media-source/#init-segment&quot;&gt;initialization segment&lt;/a&gt; of the media to be appended to the &lt;code&gt;SourceBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3c88d8959066164bd926e07f16d5672859fc89" translate="yes" xml:space="preserve">
          <source>Specifies the depth range mapping from normalized device coordinates to window or viewport coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9069d2dc70fa1024cb820dae24e491c0b7e96246" translate="yes" xml:space="preserve">
          <source>Specifies the depth value used when clearing the depth buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d99df65da3c864ae528c745ee8ebed0bd35c244" translate="yes" xml:space="preserve">
          <source>Specifies the distance the new window is placed from the left side of the work area for applications of the user's operating system to the leftmost border (resizing handle) of the browser window. The new window can not be initially positioned offscreen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91277bddcf6ca82ba6c12092fedf1f7b711f408" translate="yes" xml:space="preserve">
          <source>Specifies the distance the new window is placed from the top side of the work area for applications of the user's operating system to the topmost border (resizing handle) of the browser window. The new window can not be initially positioned offscreen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3368f558dfd131d6c04ad35b4e7907504f9651f0" translate="yes" xml:space="preserve">
          <source>Specifies the exact time to start playing the tone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77e1ecf71586ca0ac728a6cf1efa8503b4c5d07" translate="yes" xml:space="preserve">
          <source>Specifies the height of the content area, viewing area of the new secondary window in pixels. The height value includes the height of the horizontal scrollbar if present. The minimum required value is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e9eb33557ee64ef9e79ca0f50e39fa9714ca00" translate="yes" xml:space="preserve">
          <source>Specifies the height of the dialog box; by default, the size is specified in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eb7275b476f6d99db96c5841a20a779c73e8cd" translate="yes" xml:space="preserve">
          <source>Specifies the height of the screen, in pixels, minus permanent or semipermanent user interface features displayed by the operating system, such as the Taskbar on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c602dbbd164894a7f8900a39962da078b2530c" translate="yes" xml:space="preserve">
          <source>Specifies the height of the whole browser window in pixels. This outerHeight value includes any/all present toolbar, window horizontal scrollbar (if present) and top and bottom window resizing borders. Minimal required value is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e360b4afd5cb9d8c91856177988bf380768b15" translate="yes" xml:space="preserve">
          <source>Specifies the horizontal position of the dialog box in relation to the upper-left corner of the desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6cec852cf37ddf1e217d315ac47fa2c0d7b5af" translate="yes" xml:space="preserve">
          <source>Specifies the number of pixels along the X axis to scroll the window or element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961f67acbd82a9999bd01d8b001f1c4d90e06a76" translate="yes" xml:space="preserve">
          <source>Specifies the number of pixels along the Y axis to scroll the window or element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7b63b12aec33778f2ea4db65f3e45956666962" translate="yes" xml:space="preserve">
          <source>Specifies the number of values to return if more than one is found. If it is lower than &lt;code&gt;0&lt;/code&gt; or greater than &lt;code&gt;2&lt;sup&gt;32&lt;/sup&gt;-1&lt;/code&gt; a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb79d529b9bd8c5a31aa1b38bd30fb32c6f6b65d" translate="yes" xml:space="preserve">
          <source>Specifies the pixel storage modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1024e094db3bb84d3609956eec154b2c2f99f3" translate="yes" xml:space="preserve">
          <source>Specifies the scale factors and units to calculate depth values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a79fb9a81a66cc9931844c22a75d44fed64a64" translate="yes" xml:space="preserve">
          <source>Specifies the set of &lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;entry types&lt;/code&gt;&lt;/a&gt; to observe. The performance observer's callback function will be invoked when a &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; is recorded for one of the specified &lt;code&gt;entryTypes&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b779208c27e94d619f4748c3772d6ca011ecfec" translate="yes" xml:space="preserve">
          <source>Specifies the stencil value used when clearing the stencil buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e5e0e3d7a3cef254565e502db78502b95343d3" translate="yes" xml:space="preserve">
          <source>Specifies the time at which a notification is created or applicable (past, present, or future).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af3ecb7ed35035d63b11a81734900229c1de2c8" translate="yes" xml:space="preserve">
          <source>Specifies the time to stop playing the tone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50593bbf4f2201c7ec482a0cdff2f12c24779a39" translate="yes" xml:space="preserve">
          <source>Specifies the vertical position of the dialog box in relation to the upper-left corner of the desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7301d56b3c40d64e6c137f40be2f712d65b552f3" translate="yes" xml:space="preserve">
          <source>Specifies the width of the content area, viewing area of the new secondary window in pixels. The width value includes the width of the vertical scrollbar if present. The width value does not include the sidebar if it is expanded. The minimum required value is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca15a53d2043f3b9c93a102f9c544a073f4c46" translate="yes" xml:space="preserve">
          <source>Specifies the width of the dialog box; by default, the size is specified in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9d85514c92cc20a16a96b4ac0ebe1d7dbd7498" translate="yes" xml:space="preserve">
          <source>Specifies the width of the text area. If vertical is set, size specifies the height of the text area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a1a6e295db4c489793e76c292061312b0bb2de" translate="yes" xml:space="preserve">
          <source>Specifies the width of the whole browser window in pixels. This outerWidth value includes the window vertical scrollbar (if present) and left and right window resizing borders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c73652274840bee434ee294ae8e35b1ac735a93" translate="yes" xml:space="preserve">
          <source>Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934a1390c5e3ab18b3c5549e901dc101fb1e0210" translate="yes" xml:space="preserve">
          <source>Specifies values to record in &lt;a href=&quot;webgltransformfeedback&quot;&gt;&lt;code&gt;WebGLTransformFeedback&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c296148c5c4e133a88bd98cffae5e2f5d14fbe9" translate="yes" xml:space="preserve">
          <source>Specifies what the origin of &lt;code&gt;targetWindow&lt;/code&gt; must be for the event to be dispatched, either as the literal string &lt;code&gt;&quot;*&quot;&lt;/code&gt; (indicating no preference) or as a URI. If at the time the event is scheduled to be dispatched the scheme, hostname, or port of &lt;code&gt;targetWindow&lt;/code&gt;'s document does not match that provided in &lt;code&gt;targetOrigin&lt;/code&gt;, the event will not be dispatched; only if all three match will the event be dispatched. This mechanism provides control over where messages are sent; for example, if &lt;code&gt;postMessage()&lt;/code&gt; was used to transmit a password, it would be absolutely critical that this argument be a URI whose origin is the same as the intended receiver of the message containing the password, to prevent interception of the password by a malicious third party. &lt;strong&gt;Always provide a specific &lt;code&gt;targetOrigin&lt;/code&gt;, not &lt;code&gt;*&lt;/code&gt;, if you know where the other window's document should be located. Failing to provide a specific target discloses the data you send to any interested malicious site.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b4ddc0b9769d79c25a4690c0b883f63faab6a9" translate="yes" xml:space="preserve">
          <source>Specifies where text appears vertically. If vertical is set, line specifies where text appears horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e16d45938e11d4d93427aa2405ab58a5b8a986" translate="yes" xml:space="preserve">
          <source>Specifies where the text will appear horizontally. If vertical is set, position specifies where the text will appear vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab7162247f57fa98dfa0b06a5be577e92d04e06" translate="yes" xml:space="preserve">
          <source>Specifies where to start a dash array on a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fee16b2b5903049271bfdf305fda259d65e119b" translate="yes" xml:space="preserve">
          <source>Specifies whether or not front- and/or back-facing polygons can be culled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992bb052a0228729a05663305184608c77930db2" translate="yes" xml:space="preserve">
          <source>Specifies whether polygons are front- or back-facing by setting a winding orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fc4d0b1501ea99d303994d4bfc3f63202269b8" translate="yes" xml:space="preserve">
          <source>Specifies whether the &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; to be removed is registered as a capturing listener or not. If this parameter is absent, a default value of &lt;code&gt;false&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5750e33d775d1549609d6d1127ae9f71547ffe4" translate="yes" xml:space="preserve">
          <source>Specifies whether the notification should be silent &amp;mdash; i.e., no sounds or vibrations should be issued, regardless of the device settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c66a8c36cbb0cdc0cdd385080087cf0c61f3a19" translate="yes" xml:space="preserve">
          <source>Specifies whether the scrolling should animate smoothly, or happen instantly in a single jump. This is actually defined on the &lt;code&gt;ScrollOptions&lt;/code&gt; dictionary, which is implemented by &lt;code&gt;ScrollToOptions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b0be268fa5f6c506fdd034eb6cdd22af58cfc7" translate="yes" xml:space="preserve">
          <source>Specifies whether the user should be notified after a new notification replaces an old one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24963b7ab3623266ad72e9913c6e47304b45ecd" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;this&lt;/code&gt; using &lt;code&gt;bind()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d929b8eaa0d4356b29e7807686e790010ecf80" translate="yes" xml:space="preserve">
          <source>Specifying Drop Targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824d3c7faeea4aa1dcb2b24afb2aad3963820388" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;Blob&lt;/code&gt; enqueues the blob's raw data to be transmitted in a binary frame. The value of &lt;code&gt;bufferedAmount&lt;/code&gt; is increased by the byte size of that raw data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd3c9da21f42baa49c5b376f6f9680cf3839aba" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; image when calling or &lt;code&gt;drawImage()&lt;/code&gt; correctly throws a &lt;code&gt;TYPE_MISMATCH_ERR&lt;/code&gt; exception starting with (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a303cb54d24a95a34897305b7fbe0825cebfd2cc" translate="yes" xml:space="preserve">
          <source>Specifying a negative &lt;code&gt;radius&lt;/code&gt; now throws an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMError&quot;&gt;&lt;code&gt;IndexSizeError&lt;/code&gt;&lt;/a&gt; error (&quot;Index or size is negative or greater than the allowed amount&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de689d748f07da832c37c12c39d42c5a06dd0878" translate="yes" xml:space="preserve">
          <source>Specifying a path and a fillRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83f9856d5053ded08a49143e9128bc9c79caa5a" translate="yes" xml:space="preserve">
          <source>Specifying a range of values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3177a9be2b770b530657d76447814ea9c5ee46d3" translate="yes" xml:space="preserve">
          <source>Specifying non-finite values when calling &lt;code&gt;createImageData()&lt;/code&gt; now properly throws a &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dc47f3bf57c0188db2ae7860d5eebabc039e4e" translate="yes" xml:space="preserve">
          <source>Specifying the final URL of a resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceed38f3d115f45f592dba4e995dcb4cc9d1a706" translate="yes" xml:space="preserve">
          <source>Specifying the range and direction of cursors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bf4d9b1a2734142a1eea579d6b15b323f75738" translate="yes" xml:space="preserve">
          <source>Specifying the view and projection matrix values to use to render the left eye &amp;mdash; this is done using the &lt;a href=&quot;../webglrenderingcontext/uniformmatrix&quot;&gt;&lt;code&gt;WebGLRenderingContext.uniformMatrix4fv&lt;/code&gt;&lt;/a&gt; method, which is passed the location values we retrieved above, and the left matrices obtained from the &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3607bc5dd51d82f25104920a824864d6b45ddf1" translate="yes" xml:space="preserve">
          <source>Specifying the viewport size for the left eye, using &lt;a href=&quot;../webglrenderingcontext/viewport&quot;&gt;&lt;code&gt;WebGLRenderingContext.viewport&lt;/code&gt;&lt;/a&gt; &amp;mdash; this is logically the first half of the canvas width, and the full canvas height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00d85949ccabd344931782e8fc54d9b3e770e47" translate="yes" xml:space="preserve">
          <source>Speech</source>
          <target state="translated">Speech</target>
        </trans-unit>
        <trans-unit id="87dabfc81bd8bd7541cf21fd31a06ec320b03712" translate="yes" xml:space="preserve">
          <source>Speech input was aborted in some manner, perhaps by some user-agent-specific behavior like a button the user can press to cancel speech input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20363d50405d02b0fc12fd1512d14bcdab9120c" translate="yes" xml:space="preserve">
          <source>Speech recognition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571223476a99a66366b5d5b8427a437b9b3f6ebb" translate="yes" xml:space="preserve">
          <source>Speech recognition involves receiving speech through a device's microphone, which is then checked by a speech recognition service against a list of grammar (basically, the vocabulary you want to have recognised in a particular app.) When a word or phrase is successfully recognised, it is returned as a result (or list of results) as a text string, and further actions can be initiated as a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9722f5a7ce3aa24f0eb2cf037afd6bb66b39dc49" translate="yes" xml:space="preserve">
          <source>Speech recognition is accessed via the &lt;a href=&quot;speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface, which provides the ability to recognize voice context from an audio input (normally via the device's default speech recognition service) and respond appropriately. Generally you'll use the interface's constructor to create a new &lt;a href=&quot;speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; object, which has a number of event handlers available for detecting when speech is input through the device's microphone. The &lt;a href=&quot;speechgrammar&quot;&gt;&lt;code&gt;SpeechGrammar&lt;/code&gt;&lt;/a&gt; interface represents a container for a particular set of grammar that your app should recognise. Grammar is defined using &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb10785ca31711c11438f4c7d02a9e0db5683ff8" translate="yes" xml:space="preserve">
          <source>Speech synthesis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a94f70695e0bcc0f7a5bccaf868a74e8dcdb42" translate="yes" xml:space="preserve">
          <source>Speech synthesis (aka text-to-speech, or tts) involves receiving synthesising text contained within an app to speech, and playing it out of a device's speaker or audio output connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28e0928a0398f02eff838042284c5d8525e4a7f" translate="yes" xml:space="preserve">
          <source>Speech synthesis is accessed via the &lt;a href=&quot;speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt; interface, a text-to-speech component that allows programs to read out their text content (normally via the device's default speech synthesiser.) Different voice types are represented by &lt;a href=&quot;speechsynthesisvoice&quot;&gt;&lt;code&gt;SpeechSynthesisVoice&lt;/code&gt;&lt;/a&gt; objects, and different parts of text that you want to be spoken are represented by &lt;a href=&quot;speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; objects. You can get these spoken by passing them to the &lt;a href=&quot;speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b822b2696cb9e714ce9553d6e78167ed04c1ff5" translate="yes" xml:space="preserve">
          <source>SpeechGrammar</source>
          <target state="translated">SpeechGrammar</target>
        </trans-unit>
        <trans-unit id="806e5e90e386461bfe7583303b38c821f4f718eb" translate="yes" xml:space="preserve">
          <source>SpeechGrammar.constructor</source>
          <target state="translated">SpeechGrammar.constructor</target>
        </trans-unit>
        <trans-unit id="1a7488c71d57f467f25a2ebb546a82ff9c421a66" translate="yes" xml:space="preserve">
          <source>SpeechGrammar.src</source>
          <target state="translated">SpeechGrammar.src</target>
        </trans-unit>
        <trans-unit id="fd02a6aa6a837b53d173240130966f572c5f9a45" translate="yes" xml:space="preserve">
          <source>SpeechGrammar.weight</source>
          <target state="translated">SpeechGrammar.weight</target>
        </trans-unit>
        <trans-unit id="a01e3f52514cfff086e1559955e101431111e861" translate="yes" xml:space="preserve">
          <source>SpeechGrammarList</source>
          <target state="translated">SpeechGrammarList</target>
        </trans-unit>
        <trans-unit id="9252ddda0dee6d8c5043c722af3cc207a2e699c2" translate="yes" xml:space="preserve">
          <source>SpeechGrammarList.addFromString</source>
          <target state="translated">SpeechGrammarList.addFromString</target>
        </trans-unit>
        <trans-unit id="ebb8e9dbdcf242e6dc955dc6ad6d28b3b6abc64d" translate="yes" xml:space="preserve">
          <source>SpeechGrammarList.addFromURI</source>
          <target state="translated">SpeechGrammarList.addFromURI</target>
        </trans-unit>
        <trans-unit id="323d1b22123a3dca4d98c9758cd0e70d2074489b" translate="yes" xml:space="preserve">
          <source>SpeechGrammarList.constructor</source>
          <target state="translated">SpeechGrammarList.constructor</target>
        </trans-unit>
        <trans-unit id="870f143dd8dd109d89d1b5a2606dcc05d46ab5c2" translate="yes" xml:space="preserve">
          <source>SpeechGrammarList.item</source>
          <target state="translated">SpeechGrammarList.item</target>
        </trans-unit>
        <trans-unit id="fb11a61358cff4bf279716895b0656bd23982de8" translate="yes" xml:space="preserve">
          <source>SpeechGrammarList.length</source>
          <target state="translated">SpeechGrammarList.length</target>
        </trans-unit>
        <trans-unit id="fb2b2de48a0e77d5cd8ce133d5f34a1c93d0c355" translate="yes" xml:space="preserve">
          <source>SpeechRecognition</source>
          <target state="translated">SpeechRecognition</target>
        </trans-unit>
        <trans-unit id="a022009f5001fa2e9bc4250f4859d518246e835e" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.abort</source>
          <target state="translated">SpeechRecognition.abort</target>
        </trans-unit>
        <trans-unit id="d43bc93de5734ceaa009fa6214287a302e02d57f" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.constructor</source>
          <target state="translated">SpeechRecognition.constructor</target>
        </trans-unit>
        <trans-unit id="9aa99b520bb18a7ef6ccbdf32ee642b137397825" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.continuous</source>
          <target state="translated">SpeechRecognition.continuous</target>
        </trans-unit>
        <trans-unit id="c5002d1d6d5cee6a65c8f20aabb9f6829bd0c774" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.grammars</source>
          <target state="translated">SpeechRecognition.grammars</target>
        </trans-unit>
        <trans-unit id="c8f26acf929a19cdd925997c86b07a00c7509e5f" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.interimResults</source>
          <target state="translated">SpeechRecognition.interimResults</target>
        </trans-unit>
        <trans-unit id="400c6f83b5d75f805e122acad7610c34c6b0ef7a" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.lang</source>
          <target state="translated">SpeechRecognition.lang</target>
        </trans-unit>
        <trans-unit id="8aacf84aa015db6cb3c67c16679a30616d406710" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.maxAlternatives</source>
          <target state="translated">SpeechRecognition.maxAlternatives</target>
        </trans-unit>
        <trans-unit id="7c19e662cd0c72192cdbe4499218896d95343cb7" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onaudioend</source>
          <target state="translated">SpeechRecognition.onaudioend</target>
        </trans-unit>
        <trans-unit id="a5dc7223d83186dcbf205b6ac33313843c341450" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onaudiostart</source>
          <target state="translated">SpeechRecognition.onaudiostart</target>
        </trans-unit>
        <trans-unit id="8024e190acdcbce21b531597bc20772b9cc5a00d" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onend</source>
          <target state="translated">SpeechRecognition.onend</target>
        </trans-unit>
        <trans-unit id="1d5858432e79ab511d64392f5a02385120f1376d" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onerror</source>
          <target state="translated">SpeechRecognition.onerror</target>
        </trans-unit>
        <trans-unit id="810c11cb8b44e009888d3c821ab2931cb8ad3dea" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onnomatch</source>
          <target state="translated">SpeechRecognition.onnomatch</target>
        </trans-unit>
        <trans-unit id="e439328f486d4c872b10100d249437ca1adca0ac" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onresult</source>
          <target state="translated">SpeechRecognition.onresult</target>
        </trans-unit>
        <trans-unit id="cfbceec031820bed4b40408331a01dce668309d0" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onsoundend</source>
          <target state="translated">SpeechRecognition.onsoundend</target>
        </trans-unit>
        <trans-unit id="06a4c73ca6ad2b9da70763b6897bd61d316f78d8" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onsoundstart</source>
          <target state="translated">SpeechRecognition.onsoundstart</target>
        </trans-unit>
        <trans-unit id="aa095f438f34320fef2ee0d2404072b4eecfbce9" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onspeechend</source>
          <target state="translated">SpeechRecognition.onspeechend</target>
        </trans-unit>
        <trans-unit id="7bb32f224c65b7387f65ff3a3ba90d6538dda757" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onspeechstart</source>
          <target state="translated">SpeechRecognition.onspeechstart</target>
        </trans-unit>
        <trans-unit id="1a2fe8c30c5f16880e25b2c00cc3ec745b832224" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.onstart</source>
          <target state="translated">SpeechRecognition.onstart</target>
        </trans-unit>
        <trans-unit id="1b62e8cea259282ab22ad47243e04576579c5786" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.serviceURI</source>
          <target state="translated">SpeechRecognition.serviceURI</target>
        </trans-unit>
        <trans-unit id="f32eaef14c9b38c3615e88d3ac9db77aad802362" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.start</source>
          <target state="translated">SpeechRecognition.start</target>
        </trans-unit>
        <trans-unit id="00c918cfdf937807ff583f761ed3d4cc069acf45" translate="yes" xml:space="preserve">
          <source>SpeechRecognition.stop</source>
          <target state="translated">SpeechRecognition.stop</target>
        </trans-unit>
        <trans-unit id="855ab2f4e1c793348e8fbffb75b640564b3b9639" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionAlternative</source>
          <target state="translated">SpeechRecognitionAlternative</target>
        </trans-unit>
        <trans-unit id="084d61cfc9411a253359e65bfc9a3d1fd16258ba" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionAlternative.confidence</source>
          <target state="translated">SpeechRecognitionAlternative.confidence</target>
        </trans-unit>
        <trans-unit id="387b8bde92235566b141729a46cc6434fb85a9da" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionAlternative.transcript</source>
          <target state="translated">SpeechRecognitionAlternative.transcript</target>
        </trans-unit>
        <trans-unit id="3570dd52e55271f777b9704ac361c2776189b571" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionError</source>
          <target state="translated">SpeechRecognitionError</target>
        </trans-unit>
        <trans-unit id="4dca4d5506ab91c56018409951f2d1acd1e4c9a5" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionError.error</source>
          <target state="translated">SpeechRecognitionError.error</target>
        </trans-unit>
        <trans-unit id="eee6aa87c4327763f9268055157e5ddcaba16199" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionError.message</source>
          <target state="translated">SpeechRecognitionError.message</target>
        </trans-unit>
        <trans-unit id="b96c25bc6edd9fe75da4959ed431f7f7e4a626f3" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionEvent</source>
          <target state="translated">SpeechRecognitionEvent</target>
        </trans-unit>
        <trans-unit id="9ce243cb3be1ce7271a9c932372acadb1cc44bca" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionEvent.emma</source>
          <target state="translated">SpeechRecognitionEvent.emma</target>
        </trans-unit>
        <trans-unit id="d22ccbd090819a81bbf216a68f4a299f7ca2872c" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionEvent.interpretation</source>
          <target state="translated">SpeechRecognitionEvent.interpretation</target>
        </trans-unit>
        <trans-unit id="1d24ba348249be82bb3d4a332426655626a52d0c" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionEvent.resultIndex</source>
          <target state="translated">SpeechRecognitionEvent.resultIndex</target>
        </trans-unit>
        <trans-unit id="581b2e9a086d4f38c228198a3fb652e45ea2da72" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionEvent.results</source>
          <target state="translated">SpeechRecognitionEvent.results</target>
        </trans-unit>
        <trans-unit id="495f5fd67641c0a13c0b32c2166121db9430bbd6" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResult</source>
          <target state="translated">SpeechRecognitionResult</target>
        </trans-unit>
        <trans-unit id="8ba7d5d3564bd32f5564f208835a3774e0e79130" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResult.isFinal</source>
          <target state="translated">SpeechRecognitionResult.isFinal</target>
        </trans-unit>
        <trans-unit id="eed6f32db5e4b71e917cbbd503573692b4259809" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResult.item</source>
          <target state="translated">SpeechRecognitionResult.item</target>
        </trans-unit>
        <trans-unit id="3f621cecf65bc3697accc1b957daf5e36ddedee4" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResult.length</source>
          <target state="translated">SpeechRecognitionResult.length</target>
        </trans-unit>
        <trans-unit id="07a5a2fb8ce32420410bb22df35a45d6d20346ee" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResultList</source>
          <target state="translated">SpeechRecognitionResultList</target>
        </trans-unit>
        <trans-unit id="7326443f6dfac3aabbff9cb67ec5662e78dbf0ba" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResultList.item</source>
          <target state="translated">SpeechRecognitionResultList.item</target>
        </trans-unit>
        <trans-unit id="6e3a554972fbaf8feba480fd0f9d0992e4ff73fe" translate="yes" xml:space="preserve">
          <source>SpeechRecognitionResultList.length</source>
          <target state="translated">SpeechRecognitionResultList.length</target>
        </trans-unit>
        <trans-unit id="a9c4539ead28e1c847e3179549db707b7f4cd21d" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis</source>
          <target state="translated">SpeechSynthesis</target>
        </trans-unit>
        <trans-unit id="7c3c7b8d25b940f26142e538daf5914856eff56c" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.cancel</source>
          <target state="translated">SpeechSynthesis.cancel</target>
        </trans-unit>
        <trans-unit id="99aad46115b20826b0270d5b008cd5e488c786e7" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.getVoices</source>
          <target state="translated">SpeechSynthesis.getVoices</target>
        </trans-unit>
        <trans-unit id="e453fb0d82469da3af8c70ddb040da9ef6e4c31e" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.onvoiceschanged</source>
          <target state="translated">SpeechSynthesis.onvoiceschanged</target>
        </trans-unit>
        <trans-unit id="e1ad955f9f74f4e3ac0eb207a72136d4f8a1389d" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.pause</source>
          <target state="translated">SpeechSynthesis.pause</target>
        </trans-unit>
        <trans-unit id="808cdbdf1fe670173757c0098d07e4f4eee7208b" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.paused</source>
          <target state="translated">SpeechSynthesis.paused</target>
        </trans-unit>
        <trans-unit id="b95c409e37fcddb38111a37388559c8bd2718e77" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.pending</source>
          <target state="translated">SpeechSynthesis.pending</target>
        </trans-unit>
        <trans-unit id="bfcad7ab349d323287c41e18afdfd492ecfef4d8" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.resume</source>
          <target state="translated">SpeechSynthesis.resume</target>
        </trans-unit>
        <trans-unit id="0183471c3c0e5891bdaa4b5ca09933b6016ae983" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.speak</source>
          <target state="translated">SpeechSynthesis.speak</target>
        </trans-unit>
        <trans-unit id="06fbf3c7ffc2790cefeff742f23fe25b1c827c1f" translate="yes" xml:space="preserve">
          <source>SpeechSynthesis.speaking</source>
          <target state="translated">SpeechSynthesis.speaking</target>
        </trans-unit>
        <trans-unit id="53925e6b9929c938a44f2813538d2151273d48cf" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisErrorEvent</source>
          <target state="translated">SpeechSynthesisErrorEvent</target>
        </trans-unit>
        <trans-unit id="3aa952516c153dffdb819d978765d1f1238abd3d" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisErrorEvent.error</source>
          <target state="translated">SpeechSynthesisErrorEvent.error</target>
        </trans-unit>
        <trans-unit id="c113efb165f851bcb14ebdc42882e1262dc5b705" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisEvent</source>
          <target state="translated">SpeechSynthesisEvent</target>
        </trans-unit>
        <trans-unit id="a4cf20085efce2ef3d62347b39fc0fd7d7f8696c" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisEvent.charIndex</source>
          <target state="translated">SpeechSynthesisEvent.charIndex</target>
        </trans-unit>
        <trans-unit id="653a9271ad16466d8e469ea1fb249e1266068342" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisEvent.elapsedTime</source>
          <target state="translated">SpeechSynthesisEvent.elapsedTime</target>
        </trans-unit>
        <trans-unit id="8f4964a1e303f587db2d9084aaac747a4fa15736" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisEvent.name</source>
          <target state="translated">SpeechSynthesisEvent.name</target>
        </trans-unit>
        <trans-unit id="36cb401713769ce779371ef8755924106ad4e7b2" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisEvent.utterance</source>
          <target state="translated">SpeechSynthesisEvent.utterance</target>
        </trans-unit>
        <trans-unit id="ed9d33f2ba26e8e1b036bd0823b5cb8922f01437" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance</source>
          <target state="translated">SpeechSynthesisUtterance</target>
        </trans-unit>
        <trans-unit id="b2c37229f88905a5aef53283a252dd8bd266f468" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.constructor</source>
          <target state="translated">SpeechSynthesisUtterance.constructor</target>
        </trans-unit>
        <trans-unit id="def780b7a03bb96ba3f76831d3e4c76722df2d08" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.lang</source>
          <target state="translated">SpeechSynthesisUtterance.lang</target>
        </trans-unit>
        <trans-unit id="8e23ef08e33dc14d23f5be5ece2de97142136d05" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onboundary</source>
          <target state="translated">SpeechSynthesisUtterance.onboundary</target>
        </trans-unit>
        <trans-unit id="40fbc5ea700b92a8869312e3fa1e5c6c68f3970f" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onend</source>
          <target state="translated">SpeechSynthesisUtterance.onend</target>
        </trans-unit>
        <trans-unit id="b011d90150832bd9ad0e2e08098b8a45f92e0b5b" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onerror</source>
          <target state="translated">SpeechSynthesisUtterance.onerror</target>
        </trans-unit>
        <trans-unit id="db762fcbdb356c7d136cd254da3d6b883e598ca3" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onmark</source>
          <target state="translated">SpeechSynthesisUtterance.onmark</target>
        </trans-unit>
        <trans-unit id="f88410c5cb3bea74903bfa86d16ad212b5157916" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onpause</source>
          <target state="translated">SpeechSynthesisUtterance.onpause</target>
        </trans-unit>
        <trans-unit id="88b613925427efefeb7821463fbd1be3c3f207fc" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onresume</source>
          <target state="translated">SpeechSynthesisUtterance.onresume</target>
        </trans-unit>
        <trans-unit id="169570e6e09eadc11ed63646eb62133a6b027c29" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.onstart</source>
          <target state="translated">SpeechSynthesisUtterance.onstart</target>
        </trans-unit>
        <trans-unit id="309af20cb3a964b8b9c4b45ba2307a5da4b4d8a4" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.pitch</source>
          <target state="translated">SpeechSynthesisUtterance.pitch</target>
        </trans-unit>
        <trans-unit id="81393ef7c5418698a3fcb517a4a8864bf7fd2448" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.rate</source>
          <target state="translated">SpeechSynthesisUtterance.rate</target>
        </trans-unit>
        <trans-unit id="bd6257a1c70d3543274e8ecfcf613f32343ec5c9" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.text</source>
          <target state="translated">SpeechSynthesisUtterance.text</target>
        </trans-unit>
        <trans-unit id="a6da211a3ca33db09980b08d92f0d2ce840c5bc6" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.voice</source>
          <target state="translated">SpeechSynthesisUtterance.voice</target>
        </trans-unit>
        <trans-unit id="f79761c7c9e54f478804b4ac523d0cc9f2af1827" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisUtterance.volume</source>
          <target state="translated">SpeechSynthesisUtterance.volume</target>
        </trans-unit>
        <trans-unit id="7d20980cee73282a122b0e6ca0bde7ec8b353bb9" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisVoice</source>
          <target state="translated">SpeechSynthesisVoice</target>
        </trans-unit>
        <trans-unit id="1c99f93685e54b82b4b59016b87495484d0c667f" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisVoice.default</source>
          <target state="translated">SpeechSynthesisVoice.default</target>
        </trans-unit>
        <trans-unit id="d3e85a8a676799ba6eb0e81b9f0b72342d82a176" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisVoice.lang</source>
          <target state="translated">SpeechSynthesisVoice.lang</target>
        </trans-unit>
        <trans-unit id="dcc82fd8f99d534afa9e90c9c602ba8ea970022f" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisVoice.localService</source>
          <target state="translated">SpeechSynthesisVoice.localService</target>
        </trans-unit>
        <trans-unit id="d2ab86ba7447f83455c730191d150b18df8a45ba" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisVoice.name</source>
          <target state="translated">SpeechSynthesisVoice.name</target>
        </trans-unit>
        <trans-unit id="2da7d859458efd0653cffc062ca5e662c8f19457" translate="yes" xml:space="preserve">
          <source>SpeechSynthesisVoice.voiceURI</source>
          <target state="translated">SpeechSynthesisVoice.voiceURI</target>
        </trans-unit>
        <trans-unit id="3b2881cd90b0d72723ea39b1171cc2876d23c197" translate="yes" xml:space="preserve">
          <source>Split the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;ParentNode&lt;/code&gt;. This method is now defined on the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ba953968262ddcd84d52982c25544661df99cb" translate="yes" xml:space="preserve">
          <source>Split the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../nondocumenttypechildnode&quot;&gt;&lt;code&gt;NonDocumentTypeChildNode&lt;/code&gt;&lt;/a&gt;. This method is now defined on the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fdea09a859f5502ff80aff7da1d55d65bbd89f1" translate="yes" xml:space="preserve">
          <source>Split the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;ChildNode&lt;/code&gt;. &lt;code&gt;previousElementSibling&lt;/code&gt; and &lt;code&gt;nextElementSibling&lt;/code&gt; are now defined on the latter. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt; implemented the new interfaces. Added the &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;before()&lt;/code&gt;, &lt;code&gt;after()&lt;/code&gt; and &lt;code&gt;replaceWith()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7bd8976f39b90d2bafcebf66a9798d41734163" translate="yes" xml:space="preserve">
          <source>Split the &lt;code&gt;ElementTraversal&lt;/code&gt; interface into &lt;a href=&quot;childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;parentnode/firstelementchild&quot;&gt;&lt;code&gt;ParentNode.firstElementChild&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;parentnode/lastelementchild&quot;&gt;&lt;code&gt;ParentNode.lastElementChild&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;parentnode/childelementcount&quot;&gt;&lt;code&gt;ParentNode.childElementCount&lt;/code&gt;&lt;/a&gt; properties are now defined on the latter. Added the &lt;a href=&quot;parentnode/children&quot;&gt;&lt;code&gt;ParentNode.children&lt;/code&gt;&lt;/a&gt; property, and the &lt;a href=&quot;parentnode/queryselector&quot;&gt;&lt;code&gt;ParentNode.querySelector()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;parentnode/queryselectorall&quot;&gt;&lt;code&gt;ParentNode.querySelectorAll()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;parentnode/append&quot;&gt;&lt;code&gt;ParentNode.append()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;parentnode/prepend&quot;&gt;&lt;code&gt;ParentNode.prepend()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b99721ec1dd23596f9f9c46930b4768f2a4c5c5" translate="yes" xml:space="preserve">
          <source>Splitted the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;ParentNode&lt;/code&gt;. This method is now defined on the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af46d2d1e9e9e53eb52e8d899b22e1eda5de96d7" translate="yes" xml:space="preserve">
          <source>Splitted the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../nondocumenttypechildnode&quot;&gt;&lt;code&gt;NonDocumentTypeChildNode&lt;/code&gt;&lt;/a&gt;. This method is now defined on the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f358514d272097f9d402f4a59609c8a369cf7c5d" translate="yes" xml:space="preserve">
          <source>Splitted the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9fe36e51a03de9ee39ec8549fba481e3790a3e" translate="yes" xml:space="preserve">
          <source>Splitted the &lt;code&gt;ElementTraversal&lt;/code&gt; interface in &lt;a href=&quot;parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;NonDocumentTypeChildNode&lt;/code&gt;. The &lt;code&gt;previousElementSibling&lt;/code&gt; and &lt;code&gt;nextElementSibling&lt;/code&gt; are now defined on the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5ce4bd89513617d06ec9ce48f2927d53dbbf3f" translate="yes" xml:space="preserve">
          <source>Splitting and merging audio channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e88300eab92a860e10b359ad36a4d9c9e69e71" translate="yes" xml:space="preserve">
          <source>Stack traces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a2b8a07a219ad60e1db10e7a21c81697535df9" translate="yes" xml:space="preserve">
          <source>Stackoverflow</source>
          <target state="translated">Stackoverflow</target>
        </trans-unit>
        <trans-unit id="2dfa66079d9b7229409430972fd5f1567d78a3b6" translate="yes" xml:space="preserve">
          <source>Standard</source>
          <target state="translated">Standard</target>
        </trans-unit>
        <trans-unit id="5212e9551f5d12e0d738d8688c55391be87d5edd" translate="yes" xml:space="preserve">
          <source>Standard - RFC 6455 Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d147ed4baf3a754d8968207a190874e315fe1f2" translate="yes" xml:space="preserve">
          <source>Standard &lt;a href=&quot;http://en.wikipedia.org/wiki/Band-stop_filter&quot;&gt;notch&lt;/a&gt; filter, also called a &lt;em&gt;band-stop&lt;/em&gt; or &lt;em&gt;band-rejection&lt;/em&gt; filter. It is the opposite of a bandpass filter: frequencies outside the give range of frequencies pass through; frequencies inside it are attenuated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ec8572a621e4cf255d604b2d78bfd8933ec355" translate="yes" xml:space="preserve">
          <source>Standard WebGL 1 constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892fe87c024a232e9dc0a93c78ee75d577b4dc87" translate="yes" xml:space="preserve">
          <source>Standard WebGL 2 constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8ede22ddddaeb3197d21ab56ab29788a4e5bff" translate="yes" xml:space="preserve">
          <source>Standard WebGL constants are installed on the &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; objects, so that you use them as &lt;code&gt;gl.CONSTANT_NAME&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22e01e17d62420b5a0fa1466df83a6db8fcd9b9" translate="yes" xml:space="preserve">
          <source>Standard event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3912f9c242f5a80bb240e7b78de4dcd2b3635f1e" translate="yes" xml:space="preserve">
          <source>Standard fields included for all media types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ddc1d031996d7e65589eb733872b35987dd053" translate="yes" xml:space="preserve">
          <source>Standard getter &amp;mdash; allows individual &lt;a href=&quot;speechgrammar&quot;&gt;&lt;code&gt;SpeechGrammar&lt;/code&gt;&lt;/a&gt; objects to be retrieved from the &lt;code&gt;SpeechGrammarList&lt;/code&gt; using array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c47940fe33a142dadc0ee2c4cefb9e02e4bc2fe" translate="yes" xml:space="preserve">
          <source>Standard interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f587ed2cc2cbf7c12aaff983f80b170e34131646" translate="yes" xml:space="preserve">
          <source>Standard methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e3783e1ce83c21b8c915ef98bea3a4260cc0cd" translate="yes" xml:space="preserve">
          <source>Standard properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea47f00add9826e4ecb13ab104ce598c588d093f" translate="yes" xml:space="preserve">
          <source>Standard second-order &lt;a href=&quot;http://en.wikipedia.org/wiki/All-pass_filter#Digital_Implementation&quot;&gt;allpass&lt;/a&gt; filter. It Lets all frequencies through, but changes the phase-relationship between the various frequencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fd09c148aca04548c040fbf70a48f79c627982" translate="yes" xml:space="preserve">
          <source>Standard second-order &lt;a href=&quot;http://en.wikipedia.org/wiki/All-pass_filter#Digital_Implementation&quot;&gt;allpass&lt;/a&gt; filter. It lets all frequencies through, but changes the phase-relationship between the various frequencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8138533eefb773a6f0256e736d013d6beeb298" translate="yes" xml:space="preserve">
          <source>Standard second-order bandpass filter. Frequencies outside the given range of frequencies are attenuated; the frequencies inside it pass through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eda27342bf928d3167c83c6ec081a1259a870a5" translate="yes" xml:space="preserve">
          <source>Standard second-order highshelf filer. Frequencies higher than the frequency get a boost or an attenuation; frequencies lower than it are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29bb8f8e640fa6f07055ed5e4a86a2afcd2755c" translate="yes" xml:space="preserve">
          <source>Standard second-order highshelf filter. Frequencies higher than the frequency get a boost or an attenuation; frequencies lower than it are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ec37cc8a34902b68b9d672d022fd714ec326de" translate="yes" xml:space="preserve">
          <source>Standard second-order lowshelf filer. Frequencies lower than the frequency get a boost, or an attenuation; frequencies over it are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d28f910567fd66fa320f0859ad1f90aac4d65bd" translate="yes" xml:space="preserve">
          <source>Standard second-order lowshelf filter. Frequencies lower than the frequency get a boost, or an attenuation; frequencies over it are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25cf60105ed7d2914cf86d6f82cefa204dac1fb" translate="yes" xml:space="preserve">
          <source>Standard second-order resonant highpass filter with 12dB/octave rolloff. Frequencies below the cutoff are attenuated; frequencies above it pass through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5168105d0e73557d6ed4065eb77bbb59abb24203" translate="yes" xml:space="preserve">
          <source>Standard second-order resonant lowpass filter with 12dB/octave rolloff. Frequencies below the cutoff pass through; frequencies above it are attenuated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead2a055fbd07ac252b64ce847569990a87b372b" translate="yes" xml:space="preserve">
          <source>Standard serializer &amp;mdash; returns a JSON representation of the subscription properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63b64010323d1291c5f003b2bc04e11e1bae124" translate="yes" xml:space="preserve">
          <source>Standard values for latencyHint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b386090ee9a12d9d0e816a1a60cc503140a9c0" translate="yes" xml:space="preserve">
          <source>Standardized payment method identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b08d540ac32c21b87fa10eb5a95d92aba745ab1" translate="yes" xml:space="preserve">
          <source>Start a transaction and make a request to do some database operation, like adding or retrieving data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbf9b9bdc8903c2ca8571f9eea13bdf38c63d37" translate="yes" xml:space="preserve">
          <source>Start and stop presenting to the display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081bd65d46d76cb4a9f19850fc9707026c47ce3e" translate="yes" xml:space="preserve">
          <source>Start the connection attempt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b43fa7a5be153ae55e29ea0d1a3620c8163cfe" translate="yes" xml:space="preserve">
          <source>Starting Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), setting &lt;code&gt;lineWidth&lt;/code&gt; to a negative value no longer throws an exception; instead, it properly ignores non-positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc36489b28d1021b319df26e9adaa5ccd000f4d2" translate="yes" xml:space="preserve">
          <source>Starting Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), setting &lt;code&gt;miterLimit&lt;/code&gt; to a negative value no longer throws an exception; instead, it properly ignores non-positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9ca9aba3e21f9f6ebc42dc69c698811302c672" translate="yes" xml:space="preserve">
          <source>Starting a Drag Operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3e2f33c5fe42c1fa0f7eea36ae740c677c2149" translate="yes" xml:space="preserve">
          <source>Starting a call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7107cd843ee0a358f669d73f7d023957c284c6" translate="yes" xml:space="preserve">
          <source>Starting a new presentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e850d268445df441e9fc8d0ac5a56818bda81ef4" translate="yes" xml:space="preserve">
          <source>Starting and stopping the VR presentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5366c2868199885445953aaf19b75f9d0639eee6" translate="yes" xml:space="preserve">
          <source>Starting from Firefox 49, empty headers are returned as empty strings in case the preference &lt;code&gt;network.http.keep_empty_response_headers_as_empty_string&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, defaulting to &lt;code&gt;false&lt;/code&gt;. Before Firefox 49 empty headers had been ignored. Since Firefox 50 the preference defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405b123305460e43c271a8d41f6b3e5dd1dc83a2" translate="yes" xml:space="preserve">
          <source>Starting from Gecko 6.0 (Firefox 6.0 / Thunderbird 6.0 / SeaMonkey 2.3), privileged code (such as extensions) can pass an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile&quot;&gt;nsIFile&lt;/a&gt;&lt;/code&gt; object to the DOM &lt;code&gt;File&lt;/code&gt; constructor to specify the file to reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2fe48e5166149711df613a53eca78719781c3e" translate="yes" xml:space="preserve">
          <source>Starting from Gecko 8.0 (Firefox 8.0 / Thunderbird 8.0 / SeaMonkey 2.5), you can use &lt;code&gt;new File&lt;/code&gt; to create &lt;code&gt;File&lt;/code&gt; objects from XPCOM component code instead of having to instantiate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMFile&quot;&gt;nsIDOMFile&lt;/a&gt;&lt;/code&gt; object directly. The constructor takes, in contrast to &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, as second argument the filename. The filename can be any String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a013089573c323900e6d30e7389407b68391fb" translate="yes" xml:space="preserve">
          <source>Starting in Chrome 49, notifications do not work in incognito mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873968a426eeeb18d6f65e9100c386e97d1904ef" translate="yes" xml:space="preserve">
          <source>Starting in Chrome 52, the members of this interface were moved to &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f0c17804e804f902ae02fdddab0f26475c6b4c" translate="yes" xml:space="preserve">
          <source>Starting in Chrome 52, this property was moved to &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66b9ac6bcd332b6ea0044cb155ef7f6f1c125ee" translate="yes" xml:space="preserve">
          <source>Starting in Chrome 56, &lt;code&gt;channelCountMode&lt;/code&gt; is set to &lt;code&gt;explicit&lt;/code&gt; and &lt;code&gt;channelCount&lt;/code&gt; is fixed to the number of outputs, as per the latest spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a778b8da69c48155375cf5ed57c1dd026b1947" translate="yes" xml:space="preserve">
          <source>Starting in Chrome 59, this method cannot send a &lt;code&gt;Blob&lt;/code&gt; whose type is not CORS safelisted. This is a temporary change until a mitigation can be found for the security issues that this creates. For more information see &lt;a href=&quot;https://crbug.com/720283&quot;&gt;Chrome bug 720283&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d536ae602972c1599878046645b935e6b9fc089" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 13, &lt;code&gt;null&lt;/code&gt; is always returned instead of the empty string, as per the DOM4 specification. Previously, there were cases in which an empty string could be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e611ea124224c1b844c21bae7d6fc165cfec959" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 14, using &lt;code&gt;MozBlobBuilder&lt;/code&gt; will show a warning message in the web console that the use of &lt;code&gt;MozBlobBuilder&lt;/code&gt; is deprecated and suggests to use &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; constructor instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce981aa1681bd29fa92f0f6a5c1c2c624c34a39" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 15.0, this method is a no-op and has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6b754a0a0b6ad89596fb0ebe883ebeb7116cc0" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 30, synchronous requests on the main thread have been deprecated due to their negative impact on performance and the user experience. Therefore, the &lt;code&gt;async&lt;/code&gt; parameter may not be &lt;code&gt;false&lt;/code&gt; except in a &lt;code&gt;Worker&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3051fea289f7799c40bd8eefeeae247dcb616d" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 36, &lt;code&gt;attributeOldValue&lt;/code&gt; has no default value; previously, its default value was &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56108afaf88696f73b1dbc9039dad25e61a8553a" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 36, &lt;code&gt;attributes&lt;/code&gt; has no default value; previously, its default value was &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5990f506eaf28583e97c5c78824d149d8f65269" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 36, &lt;code&gt;characterData&lt;/code&gt; has no default value; previously, its default value was &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa050308b28a16c0b6df5a15daf3a81a67a2ba5" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 36, &lt;code&gt;characterDataOldValue&lt;/code&gt; has no default value; previously, its default value was &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5343f954388a5c6974d7d372d7b1e9e9c289d4" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 46.0.1, &lt;code&gt;Window.close()&lt;/code&gt; can no longer close windows that weren't opened by the same script. This is a security precaution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f624465a34520c7f83ec1357f266dc34f3dcafd" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 5.0 this property's value is based on the value of the &lt;code&gt;Accept-Language&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTTP/Headers&quot;&gt;HTTP header&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad0a5a2c82f6714527d622005bea574647d0dff" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 55, if neither &lt;code&gt;audioCapabilities&lt;/code&gt; nor &lt;code&gt;videoCapabilities&lt;/code&gt; is specified in &lt;code&gt;supportedConfigurations&lt;/code&gt;, a warning is output to the web console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b86d6e8ffc1d0a47107375fe15b30cad1c1014" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 6, this property is read only, as defined by the standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb1d7c625630b51a5fe57a62e2c9af539798ec4" translate="yes" xml:space="preserve">
          <source>Starting in Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7), non-finite values to any of these parameters cause the call to &lt;code&gt;putImageData()&lt;/code&gt; to be silently ignored, rather than throwing an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a1770e44d37d9dc1b0114bb25cc466b95bbe67" translate="yes" xml:space="preserve">
          <source>Starting in Gecko 11.0, the WebSocket API is no longer prefixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a5e0da736d97f41532491d44b01ef266e0e59c" translate="yes" xml:space="preserve">
          <source>Starting in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), you can hide the admittedly ugly file &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element and present your own interface for opening the file picker and displaying which file or files the user has selected. You can do this by styling the input element with &lt;code&gt;display:none&lt;/code&gt; and calling the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/click&quot;&gt;&lt;code&gt;click()&lt;/code&gt;&lt;/a&gt; method on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108d2296528ecd5f98d100d1cbd96ae4123366d1" translate="yes" xml:space="preserve">
          <source>Starting in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), intervals are clamped to fire no more often than once per second in inactive tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2915079b14dcc9b3dcb49aade54c2cecc95bbc" translate="yes" xml:space="preserve">
          <source>Starting in Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4), the &lt;code&gt;network.websocket.max-connections&lt;/code&gt; preference is used to determine the maximum number of WebSocket connections that can be open at a time. The default value is 200.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09df45265c853f577676b0b792202320df6e4aba" translate="yes" xml:space="preserve">
          <source>Starting in Gecko 8.0 (Firefox 8.0 / Thunderbird 8.0 / SeaMonkey 2.5), the deflate-stream extension to the WebSocket protocol has been disabled, since it's been deprecated from the specification drafts. This resolves incompatibilities with some sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d95530f65b22ba23ef05152bd73b70c9db6b3db" translate="yes" xml:space="preserve">
          <source>Starting in Opera 43, &lt;code&gt;channelCountMode&lt;/code&gt; is set to &lt;code&gt;explicit&lt;/code&gt; and &lt;code&gt;channelCount&lt;/code&gt; is fixed to the number of outputs, as per the latest spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb65626b1808eca2efec7d1a7bb019146544d199" translate="yes" xml:space="preserve">
          <source>Starting in Opera 46, this method cannot send a &lt;code&gt;Blob&lt;/code&gt; whose type is not CORS safelisted. This is a temporary change until a mitigation can be found for the security issues that this creates. For more information see &lt;a href=&quot;https://crbug.com/720283&quot;&gt;Chrome bug 720283&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89b1d5dbac010cce468fc570f5addb957278cc4" translate="yes" xml:space="preserve">
          <source>Starting in version 56, &lt;code&gt;channelCountMode&lt;/code&gt; is set to &lt;code&gt;explicit&lt;/code&gt; and &lt;code&gt;channelCount&lt;/code&gt; is fixed to the number of outputs, as per the latest spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a685d564fd1051b60c8ab2e187b5cc3d0bfbe1" translate="yes" xml:space="preserve">
          <source>Starting in version 60, the &lt;code&gt;timestamp&lt;/code&gt; is correctly computed based on the window's &lt;code&gt;Performance&lt;/code&gt; time, rather than &lt;code&gt;Date.getTime()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaea3483ef97b2d3a41335fc24948c664e3a80e" translate="yes" xml:space="preserve">
          <source>Starting media recording</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ea6fa59328f5071c590cbf9d97a0bd254e1f1b" translate="yes" xml:space="preserve">
          <source>Starting negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9714da108660c3f0dc5ed06e15e8a2439985eb4f" translate="yes" xml:space="preserve">
          <source>Starting the connection process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78afb75601178ca395f2e8ec63a1ea885286e508" translate="yes" xml:space="preserve">
          <source>Starting the oscillators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc07c3e2e74969daf68c78093860911af72c6f45" translate="yes" xml:space="preserve">
          <source>Starting the payment process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c1ebd8145f009e2ecb038ef001d3dfe061da3e" translate="yes" xml:space="preserve">
          <source>Starting the payment process, in the end, is as simple as calling the &lt;code&gt;processPayment()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4bba212e1816b302c4486203140b9bdf99d39" translate="yes" xml:space="preserve">
          <source>Starting the speech recognition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e34168b161b1c99610817d471b829d578d9e8ed" translate="yes" xml:space="preserve">
          <source>Starting transactions: &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc87518ba8404e2234bbc0565dea043b6b227e01" translate="yes" xml:space="preserve">
          <source>Starting transactions: &lt;a href=&quot;idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ba005e7c6afee17b2c49ac5aea19760d46bc97" translate="yes" xml:space="preserve">
          <source>Starting up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33624cea9d7f5a5d4e5c33cb33990873248354a" translate="yes" xml:space="preserve">
          <source>Starting with (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), &lt;code&gt;drawImage()&lt;/code&gt; handles negative arguments in accordance with the specification, by flipping the rectangle around the appropriate axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651dfe755862ccd7e10760c74b01e5ea8122a5bd" translate="yes" xml:space="preserve">
          <source>Starting with (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026f7b26512d461827125636e4afdffb3a24d6c4" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 46 this method is blocked inside an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; unless its sandbox attribute has the value &lt;code&gt;allow-modal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a98b3c096b8f8cfd7e9a2dec541203fed5a2782" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 46, this method is blocked inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; unless its sandbox attribute has the value &lt;code&gt;allow-modals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6a600d374324ca22a58d0182e5e60fe41fa516" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 46, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ae499e86748b4283a8ae9d88abf908e09d479e" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 46.0 this method is blocked inside an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; unless it sandbox attribute has the value &lt;code&gt;allow-modal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0455c2b0117c74eea70dc29444d042bf1daef51f" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 46.0 this method is blocked inside an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; unless its sandbox attribute has the value &lt;code&gt;allow-modals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f32944fbd81371bfcc2d1c5d415ebc67fea47b" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 46.0 this method is blocked inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; unless its sandbox attribute has the value &lt;code&gt;allow-modals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0867f0f4e1af750b4ac8865317a353ffea70afd" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 49, Firefox 54 and Opera 36, this property returns &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMTimeStamp&quot;&gt;&lt;code&gt;DOMTimeStamp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3612f486b70f9ceab0c500141fc4c778e0625f5e" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 53 and Opera 40, untrusted events do not invoke the default action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32fc5368538567c617c7b0c8bb59a065ff5d63f" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 58 and Opera 45, setting this property to false does nothing, as per &lt;a href=&quot;https://github.com/whatwg/dom/issues/211&quot;&gt;spec discussion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e04e4cb8446cf8fe7eee9307249f71fa6dd403" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 58, this interface can no longer be called as a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e902aef5a7743581c9ef32fec15f883bf20d0b1" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 11, it's no longer supported to use the &lt;code&gt;withCredentials&lt;/code&gt; attribute when performing synchronous requests. Attempting to do so throws an &lt;code&gt;NS_ERROR_DOM_INVALID_ACCESS_ERR&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4bf5148b229a4500a0613eb1371f4ee64e1b19" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 13, the &lt;code&gt;Range&lt;/code&gt; object throws a &lt;code&gt;DOMException&lt;/code&gt; as defined in DOM 4, instead of a &lt;code&gt;RangeException&lt;/code&gt; defined in prior specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2735f3e0da7baba5b7e0a7958888e17b49652c" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 2, a better mechanism for client-side storage is available - &lt;a href=&quot;../storage&quot;&gt;WHATWG DOM Storage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0eeab0286fe26ac666551e46aadd34de34b86b" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 20, the index argument has been made optional and defaults to -1 as per HTML specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20abdc072349ff93890090a8fc2a5ccce63c8bb0" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 3, secondary windows are always resizable (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=177838&quot;&gt;bug 177838&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462c39f860c923f12dabb4fd9b3af237dd328750" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 1.9, this method is subject to the same same-origin policy as other properties, and does not work if doing so would change the document's origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518563c6acdeedda38971c48dcedff11a460d13c" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 1.9.2, &lt;code&gt;document.open()&lt;/code&gt; uses the &lt;a href=&quot;https://developer.mozilla.org/docs/Security_check_basics&quot;&gt;principal&lt;/a&gt; of the document whose URI it uses, instead of fetching the principal off the stack. As a result, you can no longer call &lt;a href=&quot;write&quot;&gt;&lt;code&gt;document.write()&lt;/code&gt;&lt;/a&gt; into an untrusted document from chrome, even using &lt;a href=&quot;https://developer.mozilla.org/en/wrappedJSObject&quot;&gt;&lt;code&gt;wrappedJSObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f22ed8708febe5a84690e3fc43e1a42c0d2a101" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7), there are two preferences available which let you control the capabilities of WebGL for testing purposes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acff1644db32cc2bc03552a6978dafe7d23d1771" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 16.0 (Firefox 16.0 / Thunderbird 16.0 / SeaMonkey 2.13), specifying &lt;code&gt;null&lt;/code&gt; for the &lt;code&gt;repetition&lt;/code&gt; parameter is now allowed and results in the repetition being set to &lt;code&gt;&quot;repeat&quot;&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=762657&quot;&gt;bug 762657&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bfdbb65997e21bebe161e490c6f90de20486b8" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 19.0 (Firefox 19.0 / Thunderbird 19.0 / SeaMonkey 2.16) the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature&quot;&gt;&lt;code&gt;hasFeature&lt;/code&gt;&lt;/a&gt; method will always return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1f9c61dda91d79b5f6feea49e1eca456a58bc2" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), specifying non-finite values now throws &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; instead of &lt;code&gt;SYNTAX_ERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2e68e83c96a789d8a63474338cb6220bf3c5cd" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eebdc2432295d424f75a12a3e7098657baa30a" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), specifying a &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; image correctly throws a &lt;code&gt;TYPE_MISMATCH_ERR&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12116b189986c2e741b86addbaf9fbec4d7d0797" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), specifying a negative radius correctly throws &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5ea4b1fc87dd4f96ff52b3a9b8942237771612" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 5.0, specifying invalid values for &lt;code&gt;globalAlpha&lt;/code&gt; no longer throws a &lt;code&gt;SYNTAX_ERR&lt;/code&gt; exception; these are now correctly silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c1204cd7d4e04baae84a64996da5d1bfcc7055" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4), the non-standard and deprecated property &lt;code&gt;mozDash&lt;/code&gt; has been implemented to set and get a dash list. This property will be deprecated and removed in the future, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=931389&quot;&gt;bug 931389&lt;/a&gt;. Use &lt;code&gt;getLineDash()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b350cba437bd2e7d7e5a3841a2d05ed066c641e" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4), the non-standard and deprecated property &lt;code&gt;mozDash&lt;/code&gt; has been implemented to set and get a dash list. This property will be deprecated and removed in the future, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=931389&quot;&gt;bug 931389&lt;/a&gt;. Use &lt;code&gt;setLineDash()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03e472f1fed05478688100f14194d14ea4d6092" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4), the non-standard and deprecated property &lt;code&gt;mozDashOffset&lt;/code&gt; has been implemented. This property will be deprecated and removed in the future, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=931389&quot;&gt;bug 931389&lt;/a&gt;. Use &lt;code&gt;lineDashOffset&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f29dddd670343210ff3d595e3d1058d21929d8d" translate="yes" xml:space="preserve">
          <source>Starting with Opera 33, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db82f12480d4171b98c80c9d5ea88cd8463dc62" translate="yes" xml:space="preserve">
          <source>Starting with Opera 45, this interface can no longer be called as a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5c09ebec8e17b64d83d38ae2662545a8a6118c" translate="yes" xml:space="preserve">
          <source>Starting with Opera 53, this method is blocked inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; unless its sandbox attribute has the value &lt;code&gt;allow-modals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd49e960b7bd646a256624e38906f4dcb537586" translate="yes" xml:space="preserve">
          <source>Starting with some variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c393404671d2b4db92ad3d3909afc306ddbd62a6" translate="yes" xml:space="preserve">
          <source>Starting with version 49, this property returns &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMTimeStamp&quot;&gt;&lt;code&gt;DOMTimeStamp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4236fda45fa8f09024d9275aad61fffb5763cb12" translate="yes" xml:space="preserve">
          <source>Starting with version 53, untrusted events do not invoke the default action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fb16484379b495c59ca78ebd83b9fb6764c5ff" translate="yes" xml:space="preserve">
          <source>Starting with version 59 this property is no longer required to always return 24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0c2ed893037729fdccde65475d8e85b90948a5" translate="yes" xml:space="preserve">
          <source>Starting with version 59, method parameters are required instead of optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36a190a91c66bb70ffd681550237e49e382047c" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;console#Timers&quot;&gt;timer&lt;/a&gt; with a name specified as an input parameter. Up to 10,000 simultaneous timers can run on a given page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1621462ba2a3252faff92d5e47013f4edc21343f" translate="yes" xml:space="preserve">
          <source>Starts a new path by emptying the list of sub-paths. Call this method when you want to create a new path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7357b216cb4afa2141f323210bcd9ed5dbb722" translate="yes" xml:space="preserve">
          <source>Starts a timer you can use to track how long an operation takes. You give each timer a unique name, and may have up to 10,000 timers running on a given page. When you call &lt;a href=&quot;timeend&quot;&gt;&lt;code&gt;console.timeEnd()&lt;/code&gt;&lt;/a&gt; with the same name, the browser will output the time, in milliseconds, that elapsed since the timer was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e3ed38c15f7ebd2360983a4799577fa47a4c72" translate="yes" xml:space="preserve">
          <source>Starts a transform feedback operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613bd8339edc2546d0db09d2627438a61333d361" translate="yes" xml:space="preserve">
          <source>Starts or resumes playing of an animation, or begins the animation again if it previously finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f6671c6fba8c5bc12518fa7e7195c72b47ef7a" translate="yes" xml:space="preserve">
          <source>Starts reading the contents of the specified &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, once finished, the &lt;code&gt;result&lt;/code&gt; attribute contains a &lt;code&gt;data:&lt;/code&gt; URL representing the file's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90fcf060e214a7ea549de13de9d4595331d3e94" translate="yes" xml:space="preserve">
          <source>Starts reading the contents of the specified &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, once finished, the &lt;code&gt;result&lt;/code&gt; attribute contains an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; representing the file's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d87173c442bdc9c384a45dbeb28107ff958985" translate="yes" xml:space="preserve">
          <source>Starts reading the contents of the specified &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, once finished, the &lt;code&gt;result&lt;/code&gt; attribute contains the contents of the file as a text string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459c612e35184a455010225d83920bb88ca5d73d" translate="yes" xml:space="preserve">
          <source>Starts reading the contents of the specified &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, once finished, the &lt;code&gt;result&lt;/code&gt; attribute contains the raw binary data from the file as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d1e27d52a99629365a09b15694e0c71adbe020" translate="yes" xml:space="preserve">
          <source>Starts recording a performance profile (for example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance&quot;&gt;Firefox performance tool&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a01d4e66235d5db748558d5bbf70a6d752b8ab" translate="yes" xml:space="preserve">
          <source>Starts rendering the audio, taking into account the current connections and the current scheduled changes. This page covers both the event-based version and the promise-based version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3234a8f4a71a51705b1a5ea45de45107be88c817" translate="yes" xml:space="preserve">
          <source>Starts repeatedly executing the function specified by &lt;code&gt;function&lt;/code&gt; every &lt;code&gt;delay&lt;/code&gt; milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58965fcb4f332e488cda9afbee5b6ef308cf0db" translate="yes" xml:space="preserve">
          <source>Starts scrolling of the marquee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531a4648966b8ee0162fca0a142ba6808ec86918" translate="yes" xml:space="preserve">
          <source>Starts the &lt;code&gt;VRDisplay&lt;/code&gt; presenting a scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e41dd7580788bb40349bc02e1bb25486c47105c" translate="yes" xml:space="preserve">
          <source>Starts the asynchronous process of unsubscribing from the push service, returning a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; when the current subscription is successfully unregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64879a4000a7b6085810df8c4488cb79769c52fc" translate="yes" xml:space="preserve">
          <source>Starts the browser's built-in profiler (for example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance&quot;&gt;Firefox performance tool&lt;/a&gt;). You can specify an optional name for the profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa75a3ef7a00e8c9a42f449d1520a947e80bdfea" translate="yes" xml:space="preserve">
          <source>Starts the daemon forward (&lt;em&gt;index&lt;/em&gt; of each invocation increasing) or backwards (&lt;em&gt;index&lt;/em&gt; decreasing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412e79a34a320d34fb26bbdb738203967ffd3e75" translate="yes" xml:space="preserve">
          <source>Starts the process of asynchronously appending the specified buffer to the &lt;code&gt;SourceBuffer&lt;/code&gt;. Returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which is fulfilled once the buffer has been appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100bbcff2c905917265b04cdb06eb29172864a7c" translate="yes" xml:space="preserve">
          <source>Starts the process of asynchronously removing media segments in the specified range from the &lt;code&gt;SourceBuffer&lt;/code&gt;. Returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which is fulfilled once all matching segments have been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ec7bd03ba02551b2fc88389533021479de760f" translate="yes" xml:space="preserve">
          <source>Starts the process of fetching a resource from the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f82d0b01fc7bc3416520a61f025e92214a45cac" translate="yes" xml:space="preserve">
          <source>Starts the process of fetching a resource. This returns a promise that resolves to the &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object representing the response to your request. This algorithm is the entry point for the fetch handling handed to the service worker context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23c1c37fc6fa1149cf6a0afed81eb1f0d1e7579" translate="yes" xml:space="preserve">
          <source>Starts the recording process by calling &lt;a href=&quot;../mediarecorder/start&quot;&gt;&lt;code&gt;recorder.start()&lt;/code&gt;&lt;/a&gt;, and outputs a message to the log with the updated state of the recorder and the number of seconds it will be recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecdb7953e587e4b722ea0bf4bd37b443f0f846a" translate="yes" xml:space="preserve">
          <source>Starts the sending of messages queued on the port (only needed when using &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener&lt;/code&gt;&lt;/a&gt;; it is implied when using &lt;a href=&quot;messageport/onmessage&quot;&gt;&lt;code&gt;MessagePort.onmessage&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="7baf8234870919152ba76aa98cc9a286483bf842" translate="yes" xml:space="preserve">
          <source>State information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8142b97fe5bd8218aef0b0e7da817e996e0457f0" translate="yes" xml:space="preserve">
          <source>State.budgetAt</source>
          <target state="translated">State.budgetAt</target>
        </trans-unit>
        <trans-unit id="53d41a3b5a7dd383c06484bbff282a8f808d6785" translate="yes" xml:space="preserve">
          <source>State.time</source>
          <target state="translated">State.time</target>
        </trans-unit>
        <trans-unit id="1c7e1374c35b7f1b9f0ad2b950928fc3f6c503bf" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'StaticRange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faca1b42fd14c3d7ca8c7054155b0ebec4c22d3c" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'StaticRange()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76018fd3c0bdb701840ffc24cbe64cf034b6b0f6" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'collapsed' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5d5302f29a1a9a34ef001cd2069d4491ef82f5" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'endContainer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560028ac38afebab0efd0eb1c42dbf31d05acb64" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'endOffset' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f8e4471c647463b1e66e158ebeec2d3ef508f4" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'startContainer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53456dd133c1067b5e7b2290781f2de0e98acdf1" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'startOffset' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118e77a06bfdd9acd46c3534210bfc8895bb2916" translate="yes" xml:space="preserve">
          <source>Static Range&lt;br/&gt;&lt;small&gt;The definition of 'toRange()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f693c8e57f56be518aade11355181f9181d63004" translate="yes" xml:space="preserve">
          <source>Static properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dab8236a0ded40c641d78fde62cac1555ddb0c" translate="yes" xml:space="preserve">
          <source>StaticRange</source>
          <target state="translated">StaticRange</target>
        </trans-unit>
        <trans-unit id="59bb1b6f73955085fbad82aff2fbc64a64be28ba" translate="yes" xml:space="preserve">
          <source>StaticRange.collapsed</source>
          <target state="translated">StaticRange.collapsed</target>
        </trans-unit>
        <trans-unit id="83c74eff93d8c8298762480fd9f3cd09ab48cee4" translate="yes" xml:space="preserve">
          <source>StaticRange.constructor</source>
          <target state="translated">StaticRange.constructor</target>
        </trans-unit>
        <trans-unit id="6a6753c5b01f76ac9c03051cd1a61d170187b191" translate="yes" xml:space="preserve">
          <source>StaticRange.endContainer</source>
          <target state="translated">StaticRange.endContainer</target>
        </trans-unit>
        <trans-unit id="e0d2052076e3dc13b0573d962080afb7dd76e008" translate="yes" xml:space="preserve">
          <source>StaticRange.endOffset</source>
          <target state="translated">StaticRange.endOffset</target>
        </trans-unit>
        <trans-unit id="a64e1e58461c627da1a834eaabb7691ced4c1858" translate="yes" xml:space="preserve">
          <source>StaticRange.startContainer</source>
          <target state="translated">StaticRange.startContainer</target>
        </trans-unit>
        <trans-unit id="f8dcdb5308923bf08921fcca1c86df827be50155" translate="yes" xml:space="preserve">
          <source>StaticRange.startOffset</source>
          <target state="translated">StaticRange.startOffset</target>
        </trans-unit>
        <trans-unit id="04ef30a9a4ee29e4c8b33726a3c1bfcb2c1db25e" translate="yes" xml:space="preserve">
          <source>StaticRange.toRange</source>
          <target state="translated">StaticRange.toRange</target>
        </trans-unit>
        <trans-unit id="2b8295f95bce33e4134b2dd5c31b757db2383b1f" translate="yes" xml:space="preserve">
          <source>Statistics about an inbound RTP stream that's currently in use by this &lt;code&gt;RTCPeerConnection&lt;/code&gt;, in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats&quot;&gt;&lt;code&gt;RTCInboundRtpStreamStats&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="fcbb29d3883371fb9d8ae0352ba3a67f4bb4e39c" translate="yes" xml:space="preserve">
          <source>Status code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c25595ad3c2ce5a99616ae8aa61603b8d121663" translate="yes" xml:space="preserve">
          <source>Stencil actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc43f89ffd3e491abba0ce5d84b51be2d326c644" translate="yes" xml:space="preserve">
          <source>Stencil testing and updates to the stencil buffer. See &lt;a href=&quot;stencilfunc&quot;&gt;&lt;code&gt;WebGLRenderingContext.stencilFunc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80381e4bb118b20c4581a055be24b9806a8e5202" translate="yes" xml:space="preserve">
          <source>Stencilling enables and disables drawing on a per-pixel basis. It is typically used in multipass rendering to achieve special effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500ea89a2b926bde208f443a0ae704b9c832a2bc" translate="yes" xml:space="preserve">
          <source>Steps the video by one frame forward or one frame backward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39b2feadc47ea06644ff1dc55ae81969f80ab4a" translate="yes" xml:space="preserve">
          <source>Stereo audio capture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47513989dbaef7016c818517505b6e54021e8528" translate="yes" xml:space="preserve">
          <source>StereoPannerNode</source>
          <target state="translated">StereoPannerNode</target>
        </trans-unit>
        <trans-unit id="52b55ceb2d9432f6e89ac46a42a7af5e80ad7788" translate="yes" xml:space="preserve">
          <source>StereoPannerNode.constructor</source>
          <target state="translated">StereoPannerNode.constructor</target>
        </trans-unit>
        <trans-unit id="021440de9a0a75018ced2ba742e0bb829625f0b9" translate="yes" xml:space="preserve">
          <source>StereoPannerNode.pan</source>
          <target state="translated">StereoPannerNode.pan</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
