<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="b3419c388404e8818a40e4c7c795c1aaa25bf7ed" translate="yes" xml:space="preserve">
          <source>Stereoscopic vision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e772415fd4d078a045531074c4e81fc86cc4d015" translate="yes" xml:space="preserve">
          <source>Stereoscopic vision is the normal vision humans and (most) animals have &amp;mdash; theperception of two slightlydifferingimages (one fromeacheye) as a single image. Thisresults in depthperception, helping us to see the world in glorious 3D. To recreate this in VR apps, you need to render two very slightly different views side by side, which will be taken in by the left and right eyes when the user is using the HMD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e429d578f827b13066b3626266bb2948c76111b0" translate="yes" xml:space="preserve">
          <source>Stitch options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700303e99d5518509fde2406912a23930720d985" translate="yes" xml:space="preserve">
          <source>Stop gathering data into the current &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, but keep it available so that recording can be resumed later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bc04b879e1c63dc5b417556cbf1b66518956fa" translate="yes" xml:space="preserve">
          <source>StopElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabf6b987040788a566927111400141b08f4b29d" translate="yes" xml:space="preserve">
          <source>Stopping a tone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358072cd96719dc700a94495520b603e5aa0a2eb" translate="yes" xml:space="preserve">
          <source>Stopping a video stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5526c0f6ff5caf993ac68a2044e05fb848b99d83" translate="yes" xml:space="preserve">
          <source>Stopping keystrokes from reaching an edit field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d633faa2a7a7edf762442144b508399f3eeb16" translate="yes" xml:space="preserve">
          <source>Stopping the input stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788b86627540d2ed207fc2c352223f1d5eb234f7" translate="yes" xml:space="preserve">
          <source>Stopping the oscillators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5767a2d7f8eb0cfda79e588e6b7b7e140f26aa" translate="yes" xml:space="preserve">
          <source>Stopping the oscillators when the user toggles the play state to pause the tones is as simple as stopping each node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0d79ccd5318d66789e75c09cd6cbd5e07f8a0e" translate="yes" xml:space="preserve">
          <source>Stops a timer that was previously started by calling &lt;a href=&quot;time&quot;&gt;&lt;code&gt;console.time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c29b3688497c8697f937b23a22259c7bf9d8dcd" translate="yes" xml:space="preserve">
          <source>Stops playing the source associated to the track, both the source and the track are deassociated. The track state is set to &lt;code&gt;ended&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49041b5773df4519d6c2c04304d814591da1c475" translate="yes" xml:space="preserve">
          <source>Stops recording, at which point a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event containing the final &lt;code&gt;Blob&lt;/code&gt; of saved data is fired. No more recording occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af88a9e7fc4eb61024e1f6fc4603ebaff098037" translate="yes" xml:space="preserve">
          <source>Stops scrolling of the marquee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf3f50cce62e9710824c98e3e0a73ce63753912" translate="yes" xml:space="preserve">
          <source>Stops the &lt;code&gt;IntersectionObserver&lt;/code&gt; object from observing any target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb827249f7cddb3da641ae9e1652512a8a3c95f" translate="yes" xml:space="preserve">
          <source>Stops the &lt;code&gt;MutationObserver&lt;/code&gt; instance from receiving further notifications until and unless &lt;a href=&quot;mutationobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; is called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b125993f898956c675d43a412233c60661ac80" translate="yes" xml:space="preserve">
          <source>Stops the &lt;code&gt;VRDisplay&lt;/code&gt; presenting a scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0415b2309f4311a31e0e68be5363d4ef97020ab2" translate="yes" xml:space="preserve">
          <source>Stops the performance observer callback from receiving &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4404fdb07c24d63be0bfdabcf81692028d24867" translate="yes" xml:space="preserve">
          <source>Stops the profiler. You can see the resulting profile in the browser's performance tool (for example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance&quot;&gt;Firefox performance tool&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea4e5252d99f1cd48140f109ff1fd51b0821b2c" translate="yes" xml:space="preserve">
          <source>Stops the propagation of events further along in the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f485507dad823e570ff2989ee20950c88678b31d" translate="yes" xml:space="preserve">
          <source>Stops the specified &lt;a href=&quot;console#Timers&quot;&gt;timer&lt;/a&gt; and logs the elapsed time in seconds since it started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9994d13b50d0e0faaaaaa5db78f7f73af8946f2d" translate="yes" xml:space="preserve">
          <source>Stops the stream. When the source of the stream is a connected device (such as a camera or microphone), capture of media from the device is halted. This method is no longer available with the deprecation of &lt;code&gt;LocalMediaStream&lt;/code&gt;. See &lt;a href=&quot;mediastreamtrack#Stopping_a_video_stream&quot;&gt;Stopping a video stream&lt;/a&gt; in &lt;a href=&quot;mediastreamtrack&quot;&gt;MediaStreamTrack&lt;/a&gt; to learn how to stop an entire stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0210a53f56c2854d1ba246f09c61e334d0b095bf" translate="yes" xml:space="preserve">
          <source>Storage API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c015247494899ea9c3c389d3fd64463b5764c151" translate="yes" xml:space="preserve">
          <source>Storage Access API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87615ac6060839f90330f9375a522e6ddbaef26c" translate="yes" xml:space="preserve">
          <source>Storage Access API methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf75079c08e80bb440acee375cc3c552ef3cb354" translate="yes" xml:space="preserve">
          <source>Storage Access API: Using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9982357a479fd0114ecb89c8129da65296b9dea6" translate="yes" xml:space="preserve">
          <source>Storage access is granted based on a series of checks described here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c515106d6d9c1160f39e6dc7ca3f384e3fa83a31" translate="yes" xml:space="preserve">
          <source>Storage comes in two types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489e6b3d933789665973d1c2802f9d48cdfb4093" translate="yes" xml:space="preserve">
          <source>Storage is temporary by default; developers can choose to use persistent storage for their sites using the &lt;a href=&quot;../storagemanager/persist&quot;&gt;&lt;code&gt;StorageManager.persist()&lt;/code&gt;&lt;/a&gt; method available in the &lt;a href=&quot;../storage_api&quot;&gt;Storage API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a11eefb76800474167392fb0753cbcc5546aec5" translate="yes" xml:space="preserve">
          <source>Storage limits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff52f09de20717102b6b76d8ad4e1693856b8190" translate="yes" xml:space="preserve">
          <source>Storage limits and eviction criteria</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82c327f6c1801b2db1e7c3c594e74218989a953" translate="yes" xml:space="preserve">
          <source>Storage objects are simple key-value stores, similar to objects, but they stay intact through page loads. The keys and the values are always strings (note that integer keys will be automatically converted to strings, just like what objects do). You can access these values like an object, or with the &lt;a href=&quot;../storage/getitem&quot;&gt;&lt;code&gt;Storage.getItem()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt; methods. These three lines all set the colorSetting entry in the same way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5973c5c2a8e0e26056d4cde5472f5557466f1f82" translate="yes" xml:space="preserve">
          <source>Storage.clear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5dc9c7b795aa837daf8a0ba58a798d87a9a32b6" translate="yes" xml:space="preserve">
          <source>Storage.getItem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d392bd3d3a78ce68ef78ac1e57e6ea99b18f482" translate="yes" xml:space="preserve">
          <source>Storage.getItem()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9c8f3d55b0d4fae5295e0af6499a0cd9bf58d2" translate="yes" xml:space="preserve">
          <source>Storage.key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83658099d1607cfbbec06bad667d77cca58f3d91" translate="yes" xml:space="preserve">
          <source>Storage.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b77cd34e60c9f6d69f47338f6a6c68d1f85ca69" translate="yes" xml:space="preserve">
          <source>Storage.removeItem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2944d5e803207a3f1def7026009c929e78f5ce9d" translate="yes" xml:space="preserve">
          <source>Storage.removeItem()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6401bb3fadb60b77f6dadb7169ea7301c2ae7df1" translate="yes" xml:space="preserve">
          <source>Storage.setItem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2619c400dd6dd84c67e2f7f0abbafb8af6eb9e2f" translate="yes" xml:space="preserve">
          <source>Storage.setItem()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310cb8115d9dc30944e68337c132bb9d899b4ecc" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'StorageEstimate' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b6ef75df8bf04b515730bc90511c3edc1e7e08" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'StorageManger' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10439801077f207b7a984cf96f6fddc78294aa86" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'estimate()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec9e26b79d1038cc3414eda1cac52dfcaa3e87e" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'navigator.storage' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0090696f09623e071e7a33b904aa8728549fb2" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'persist' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74086b95e2381b28b923a29e1a008719a7a34b91" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'persisted' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46804040e770e0c547a3ecff2b68d9fcb01753f" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'quota' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e95436d98d61e6fa967093ca59b1e9250d2377a" translate="yes" xml:space="preserve">
          <source>Storage&lt;br/&gt;&lt;small&gt;The definition of 'usage' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc4d95bfc927b9b49b27ae69efce469c7283b7e" translate="yes" xml:space="preserve">
          <source>StorageEstimate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76de5eb069b3434c5f3a7396f06176754bf5f31" translate="yes" xml:space="preserve">
          <source>StorageEstimate.quota</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c801990e83c8b0fad9a9aeadf7d4332485aa49c" translate="yes" xml:space="preserve">
          <source>StorageEstimate.usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608f9cf1efb9c7b308100365c7ef937d5fb3f315" translate="yes" xml:space="preserve">
          <source>StorageEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f02a643f97c181461b85fa781bf6c56499d99d" translate="yes" xml:space="preserve">
          <source>StorageManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888b69b85dbc4226aafadb303f251d55aa5173fe" translate="yes" xml:space="preserve">
          <source>StorageManager.estimate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fd996ea3457b0359107f829c4dc997c0bb8ead" translate="yes" xml:space="preserve">
          <source>StorageManager.persist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb7e66ee40d3977b54e1b689600a7a22b646577" translate="yes" xml:space="preserve">
          <source>StorageManager.persisted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bce941c5d193c6d3bd553f8d527aa94f2c25d13" translate="yes" xml:space="preserve">
          <source>StorageQuota</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fad11b8ebd560f10358cd78dec7bc8fb187dd4" translate="yes" xml:space="preserve">
          <source>StorageQuota.queryInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf7655f55ca86dacc40e572c5f0f9f5726e33c6" translate="yes" xml:space="preserve">
          <source>StorageQuota.requestPersistentQuota</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8b2e300ac4add5995809edb9cbb2a26e9ea13a" translate="yes" xml:space="preserve">
          <source>StorageQuota.supportedTypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a2284840b0153adebafab8826c60966c9dc7f" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that declares whether the body has been used in a response yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46fd6605fd66ab425d7c40e24a6edd682ac5e0f" translate="yes" xml:space="preserve">
          <source>Stores a copy of the &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; given as argument. If the track has already been added to the &lt;code&gt;MediaStream&lt;/code&gt; object, nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838ae542ff5a0e3c230c80ebf2c7cc59636996bd" translate="yes" xml:space="preserve">
          <source>Stores a set of credentials for a user, inside a provided &lt;a href=&quot;credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; instance and returns that instance in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8758e5bfdf88287b0d45bcaab835ca3d9a42b" translate="yes" xml:space="preserve">
          <source>Stores the given value in this index and returns the key for the stored record. If a record already exists with the given key, the record is overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910a0d3d3f743b8257cc7e7a26cdc852bed031e8" translate="yes" xml:space="preserve">
          <source>Stores the given value in this object store and returns the key for the stored record. If a record already exists with the given key, it is overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35643e537b52493aa5f04f2aa78606e7a4e4b79" translate="yes" xml:space="preserve">
          <source>Stores the given value into this index, optionally with the specified key. If a record already exists with the given key, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25390145e35948ec27a2b87fc2a41399472ccec" translate="yes" xml:space="preserve">
          <source>Stores the given value into this object store, optionally with the specified key. If a record already exists with the given key, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7bc6cc967a6c42337a5307d2f71a546373c528" translate="yes" xml:space="preserve">
          <source>Storing cookies in Caches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c40f10db78c136d6502ba691ae2f133bdc7439" translate="yes" xml:space="preserve">
          <source>Storing customer data using the SSN as a key is logical since the SSN uniquely identifies an individual. (Whether this is a good idea for privacy is a different question, and outside the scope of this article.) If you need to look up a customer by name, however, you'll need to iterate over every SSN in the database until you find the right one. Searching in this fashion would be very slow, so instead you can use an index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3e79ab875359e54276526028c15b528b2b8932" translate="yes" xml:space="preserve">
          <source>Storing images and files in IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8e9e3d90cdbe1c387b5cf8a76006933b227902" translate="yes" xml:space="preserve">
          <source>Stream interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c762cfc953a39c2813493c51d948101c279a7a" translate="yes" xml:space="preserve">
          <source>Streaming involves breaking a resource that you want to receive over a network down into small chunks, then processing it bit by bit. This is something browsers do anyway when receiving assets to be shown on webpages &amp;mdash; videos buffer and more is gradually available to play, and sometimes you'll see images display gradually as more is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb6671fe61d6faff649224492ee48cec402b77d" translate="yes" xml:space="preserve">
          <source>Streaming response body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74985da267c6803b262f117de72af2d02e48029f" translate="yes" xml:space="preserve">
          <source>Streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf39676a21cae727104164f5dadc044e6a6b4f0" translate="yes" xml:space="preserve">
          <source>Streams API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d75427290e6a7d40ee620f9f1309f80a619eb44" translate="yes" xml:space="preserve">
          <source>Streams API concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329b38a436bcb111d3156e6f9a0ed0c4b7f9b758" translate="yes" xml:space="preserve">
          <source>Streams API: Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52dc8f2f4b193e1050a88e46ef9d2851285d760" translate="yes" xml:space="preserve">
          <source>Streams API: Using readable streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca68af5a51b259518037b3ba65a82d126e381df" translate="yes" xml:space="preserve">
          <source>Streams API: Using writable streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cbb5b15fee2f925f62468f747c75e898f628e0" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ByteLengthQueuingStrategy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703d922ffef7e6f481b895f2deb6f672388fe6a1" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ByteLengthQueuingStrategy()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4df322043584fd43291924045bd32d289d74844" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'CountQueuingStrategy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb97fc63054cc12860ea982d2d839754454c32fe" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'CountQueuingStrategy()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a4313f9be71f43909c53b99c07202c9ffbc210" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableByteStreamController' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bcb3566a2aa7ac7b3a0dc02e6661d5bb444943" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableByteStreamController()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67f8efb258c28805100b7967fd97f62a2bc5b6f" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStream' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be308f7ff48857e854eed518df00d1b0815edf5b" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStream()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a0ff52906e95b12d5b731683f1beccf57057c2" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamBYOBReader' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330769970f7a25e2e4b63ed08b412508fc08a7b2" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamBYOBReader()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad114cb18f35b0275aefee7e0d78192e47e5226" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamBYOBRequest' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039afe8efb339f91273c514dd296c346bd5661a7" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamBYOBRequest()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e99d3387ec95cc2c154d825cb2c47861e24c1c" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamDefaultController' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89611c17097eda1bba87eb2968665c91ed3d216" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamDefaultController()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fe648719b89f514b826ec85064b32babe55775" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamDefaultReader' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdc5ad6348546a8b301690a2969cb748c27e040" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ReadableStreamDefaultReader()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9909c1232c9f4912bedc89237c33a8b5864278" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'WritableStream' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb7087e5021d84f57f714e743742d65233e87ee" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'WritableStream()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f621cd6ae7f03801160d5a89696d6a387d6e69" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'WritableStreamDefaultController' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e9fe718206a48adc59cda078ad7435891ca8ed" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'WritableStreamDefaultController()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f91dc6a379695bd1bb70aee86c1889b776e03b9" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'WritableStreamDefaultWriter' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bd92df67427bcd2a0fb6ea921387ba1a8fc59a" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'WritableStreamDefaultWriter()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281df492fbd0f32e3592260bc6a8b80c81092fc9" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'abort()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518f7348e7c039ded3b8d8a85ba2057d91ebc052" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'byobRequest' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccd25e1d0115b0621ae6f2152b4ccaf23bb95bd" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'cancel()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25dfbc6ea3af842e0aabd534521533ed9397057" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74baa96798a76346e24520b73867e4b5c52a824" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'closed' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0b12b8523d97cbcde48f602ffb75584ee4df18" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'desiredSize' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf75298cda860386cf2282cfcbf5cd05191e6b67" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'enqueue()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505eb1fe6c55ada8841f21e154e6cfa0ee6dfe61" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'error()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce79f0c52cc1f6c5c2395723d555c82fdfd8d87" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'getReader()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125192a69dcf8c0d05806edc530980c8dd9119af" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'getWriter()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cacc19fcd7ed878e206ee2e109edb6031b55b46" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'locked' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7043cd3a5394218b50caefc73b3ede36e047282" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'pipeThrough()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca1f0e7b9e7f9543887b1433239eb42e071ad37" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'pipeTo()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1335c653953f985e399bc3293b5155cec63014" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'read()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5669038ced52ad5e3b6000d4a6dac72d7173a8" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'ready' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896c849c543f4129076d9a43c2d7c44b44a9c581" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'releaseLock()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e173698177021edf2057a3ed8e2c0818ea4f41dc" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'respond()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d27b3a2d9b8cd7b10e99d4d02b6b2be0687cc5e" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'respondWithNewView()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffdcd3c8e24069accc073c583ced769fa89afa7" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'size' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9fa27e1b87064e03ccc1c3efc14f76ce45a1ee" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'tee()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bc7a0aef34e196d32b38cd9936af50ad8b8be4" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'view' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acdf5ca3689990a6d037f6844cccfb505935e87" translate="yes" xml:space="preserve">
          <source>Streams&lt;br/&gt;&lt;small&gt;The definition of 'write()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741e91fbac7b6a8fd32ba22a67572ff6afc4b539" translate="yes" xml:space="preserve">
          <source>Stricter definitions of interfaces and types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9142f6a7b0bb26a9372063ef23ee874238c2202" translate="yes" xml:space="preserve">
          <source>String &lt;code&gt;xpathText&lt;/code&gt; (the XPath expression to be compiled)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3e6ea307f826170064dc299774a5cfb4b01758" translate="yes" xml:space="preserve">
          <source>String empty value &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f827fcc81f21b6e757d495b9d422a9373dfdc1" translate="yes" xml:space="preserve">
          <source>String object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e02e4c219c6adbd903697a4d2dcb2e0c8efd19" translate="yes" xml:space="preserve">
          <source>String representation of a selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3157c692221dadce89779dd1aecd9bb6d666bc3e" translate="yes" xml:space="preserve">
          <source>String representation of the Selection object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067243b2fd37c20e720003ac7b81860ddbdc9634" translate="yes" xml:space="preserve">
          <source>String value &lt;code&gt;&quot;important&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be4f2f07a219926b80f59cfa93c200472b16c28" translate="yes" xml:space="preserve">
          <source>String.Binary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750f8b634ac2cddb4ba1e39f474d0663f6c067ad" translate="yes" xml:space="preserve">
          <source>StringList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208d13fb41d2f56e4472b9bc02894ee9d8c8e597" translate="yes" xml:space="preserve">
          <source>StringMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27662f94324235aadbcd001ee6ec47daf9bf1a0d" translate="yes" xml:space="preserve">
          <source>Strokes a given text at the given (x,y) position. Optionally with a maximum width to draw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142c94e304528e6f46aaaf559b34acbd331a4c7a" translate="yes" xml:space="preserve">
          <source>Strokes the subpaths with the current stroke style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7883129588a78b0d008f16e19e38768044ef8cf6" translate="yes" xml:space="preserve">
          <source>Struct type: one entry for each member of the struct. E.g. &lt;code&gt;uniform struct { float foo; vec4 bar; } c;&lt;/code&gt; will result in &lt;code&gt;c.foo&lt;/code&gt; and &lt;code&gt;c.bar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9482c5d5bfbed584fddcc442794dd8d3d9813064" translate="yes" xml:space="preserve">
          <source>Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b096f92497b9094f7315f3d75897ead918ce994" translate="yes" xml:space="preserve">
          <source>Structuring the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b67d45cda79482a6cb03c8522700ab8b1e60994" translate="yes" xml:space="preserve">
          <source>Stylable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b84de85d7be1f481e9ce64d3c55629255c9918e" translate="yes" xml:space="preserve">
          <source>Style the contained text using a CSS class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16a8fabc862d3d15cb6870d8549e9aa1be6e0cd" translate="yes" xml:space="preserve">
          <source>StyleDeclaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3740d9a248758671a9fcae0297982805fb8b8a55" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.cssText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b2fd425391ec85ac75955bee1b4950466f2d65" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.getPropertyCSSValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d54694af752674836a42b8708e6dfaf49822eb" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.getPropertyPriority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c19afab762f58abd3061aadc4a674a6e7d8531f" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.getPropertyValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12a07902d0163d25364ca9fa5f167ba9c68c39d" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb298049c6b674597c8af4144282cb3a3546f22" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987e768edff3d4e95cc68e0d876a291f9d01a3dc" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.parentRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7780608edf48a5e229dbe1959acaf1987b3adf3" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.removeProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62a0dab8cf47f21d14bc18fe26ff81e300bebe6" translate="yes" xml:space="preserve">
          <source>StyleDeclaration.setProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d307a46b176c8b55b1bfdaa4a4ed2362b8f8f90" translate="yes" xml:space="preserve">
          <source>StyleElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f919ac55de7bc7bfbc4493614647ff5871a1b7a" translate="yes" xml:space="preserve">
          <source>StylePropertyMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc1c123cefad7599c64cf4bd899c7979b4ecf5f" translate="yes" xml:space="preserve">
          <source>StylePropertyMap.append</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811adce106850524dfcd8114f772ebfd12c04809" translate="yes" xml:space="preserve">
          <source>StylePropertyMap.clear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd21d90e9311d683f104a5057f501b15ae4e6257" translate="yes" xml:space="preserve">
          <source>StylePropertyMap.delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbf795c50a9fb97f58347395276de38d8795d30" translate="yes" xml:space="preserve">
          <source>StylePropertyMap.set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab2eef2ed2bfdc931411b504bbe81cb48108d6b" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116e43656327787fd57949f35feb1c41031e154a" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27618f7cf71c82806ce65a711cb492203c6410aa" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.forEach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bd73d58b98b3652b195ccb1deeb4e10efdd38e" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5580c6ce11feb29b4f8e4bfcf488a3ad6de17e" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.getAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc7a81ae342867417cce8689ab4b7781db36988" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3377d0cdf37ad77631bdbd71f3d324f6fc0767d" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6b21e8231a1c81b83f8557c555a9bbcf9469c" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e858c32b9af0c35190cd77e59bc9941705ae50" translate="yes" xml:space="preserve">
          <source>StylePropertyMapReadOnly.values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c607cce8383fc14f8a30e582b4f683391b8babc" translate="yes" xml:space="preserve">
          <source>StyleRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5d975a0525a86b670da626cced1d8809067315" translate="yes" xml:space="preserve">
          <source>StyleRule.selectorText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a97721d2751fd863100b87fdc01e20230f4bd84" translate="yes" xml:space="preserve">
          <source>StyleRule.style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce867a84f68c1d0cd7e5d2e0a575c394cc078c03" translate="yes" xml:space="preserve">
          <source>StyleSheet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64429fc0d9a296f0094fe47544ab876401846b01" translate="yes" xml:space="preserve">
          <source>StyleSheet.deleteRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57427d47babc305f2b1c84d9e987d338385fd7dd" translate="yes" xml:space="preserve">
          <source>StyleSheet.disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fff385eab3004c96d7c09179889b73f18b15d2" translate="yes" xml:space="preserve">
          <source>StyleSheet.href</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310b4573d1e20139ff9925beb324c460ed0e179a" translate="yes" xml:space="preserve">
          <source>StyleSheet.insertRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426af61518f175738bb5bf6d5ef8ada99552a793" translate="yes" xml:space="preserve">
          <source>StyleSheet.media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fbaad7d1d1689331e473dbb30963312daaa0fc" translate="yes" xml:space="preserve">
          <source>StyleSheet.ownerNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d145211fa0538195c6f18ea513ae98ca9099a042" translate="yes" xml:space="preserve">
          <source>StyleSheet.parentStyleSheet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed851c871559011d61ecb74d7a5739ab5908d56" translate="yes" xml:space="preserve">
          <source>StyleSheet.title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffedbff1a7668744481b3f4f59ed8ad1d4b1093" translate="yes" xml:space="preserve">
          <source>StyleSheet.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105633f7a20c3c4e6cfe2fcb5bc3777e06065699" translate="yes" xml:space="preserve">
          <source>StyleSheetList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab86bdb7fdac42325f943b93c14f7e8d448f696a" translate="yes" xml:space="preserve">
          <source>StyleSheets retrieved from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link&quot;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt; headers are placed first, sorted in header order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b427649b6ebebe7f477d8088929b6c6587e5bbe7" translate="yes" xml:space="preserve">
          <source>StyleSheets retrieved from the DOM are placed after, sorted in &lt;a href=&quot;https://dom.spec.whatwg.org/#concept-tree-order&quot;&gt;tree order&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6b5b42f0aa8d58cfc4a8baa9c916425bc09fe9" translate="yes" xml:space="preserve">
          <source>StyleValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22a8c72323848d609cc23f1d8907863cc9d3cbe" translate="yes" xml:space="preserve">
          <source>StyleValue.parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8467e874cb3e3fa51348d70152a163d1d189d342" translate="yes" xml:space="preserve">
          <source>StyleValue.parseAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d94c4c0262c76a2130bd1e7f3b6430c01ad4260" translate="yes" xml:space="preserve">
          <source>Styles should not be set by assigning a string directly to the &lt;code&gt;style&lt;/code&gt; property (as in &lt;code&gt;elt.style = &quot;color: blue;&quot;&lt;/code&gt;), since it is considered read-only, as the style attribute returns a &lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt; object which is also read-only. Instead, styles can be set by assigning values to the properties of &lt;code&gt;style&lt;/code&gt;. For adding specific styles to an element without altering other style values, it is preferred to use the individual properties of &lt;code&gt;style&lt;/code&gt; (as in &lt;code&gt;elt.style.color = '...'&lt;/code&gt;) as using &lt;code&gt;elt.style.cssText = '...'&lt;/code&gt; or &lt;code&gt;elt.setAttribute('style', '...')&lt;/code&gt; sets the complete inline style for the element by overriding the existing inline styles. Note that the property names are in camel-case and not kebab-case while setting the style using &lt;code&gt;elt.style.&amp;lt;property&amp;gt;&lt;/code&gt; (i.e. &lt;code&gt;elt.style.fontSize&lt;/code&gt;, not &lt;code&gt;elt.style.font-size&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfccbcb0003b7d173b85e9ea97f2f5c206a14c95" translate="yes" xml:space="preserve">
          <source>Stylesheets that don't have a title are never affected by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352994a064cd4e8f6cd94e9afecbecea8866ad35" translate="yes" xml:space="preserve">
          <source>Styling WebTT cues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57378f1b5b926deb99d18b85261ebd6dfee9c4c" translate="yes" xml:space="preserve">
          <source>Styling console output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d43b010f15f71a03ba621b12017ed4ceccdddf" translate="yes" xml:space="preserve">
          <source>Styling text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acebd611ffae3e96bbdac14661299bf17ee3858" translate="yes" xml:space="preserve">
          <source>Styling the site with CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec7485e6e174cd63f07350fa3a6e866b41a6d48" translate="yes" xml:space="preserve">
          <source>Sub-pixel rendering occurs when you render objects on a canvas without whole values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c9338a2d86b33d37283d788c51f3d0aedd2b08" translate="yes" xml:space="preserve">
          <source>Sub-window, child window, secondary window, second window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467ab6e8e1e14103118a719d72938b7a82d2816f" translate="yes" xml:space="preserve">
          <source>Subdomain-shared credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115ead0a888cdbd57dfe36c9e59f06bf6646e7f2" translate="yes" xml:space="preserve">
          <source>Submit a form into a new window:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4130e6515a14cdfdde446739733ff584c348eee7" translate="yes" xml:space="preserve">
          <source>Submits the form to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e598985c66ecf8709f9c2a94a8aa59143a3fb4" translate="yes" xml:space="preserve">
          <source>Submitting forms and uploading files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49cabedf39c96f31bf9c730b14978c4ff36f658" translate="yes" xml:space="preserve">
          <source>Submitting forms and uploading files using &lt;code&gt;XMLHttpRequest&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f6ca8fa76a952a6826e2bb328391696130af3b" translate="yes" xml:space="preserve">
          <source>Submitting forms and uploading files via AJAX &lt;em&gt;without&lt;/em&gt;&lt;code&gt;FormData&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05334f253001932089f9323c6f34201d14b90e4" translate="yes" xml:space="preserve">
          <source>Submitting forms without the &lt;code&gt;FormData&lt;/code&gt; API does not require other APIs for most use cases. The only case where you need an additional API is &lt;strong&gt;if you want to upload one or more files&lt;/strong&gt;, where you use the &lt;a href=&quot;../filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdf975f5c26488c60bd3858b8c23fe4e709fa00" translate="yes" xml:space="preserve">
          <source>Subnav</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41abf92e16de4c840f631e2156b8e6ef9b87dff" translate="yes" xml:space="preserve">
          <source>Subpixel precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7914c6d5b740af61c51f24192f2570909290166b" translate="yes" xml:space="preserve">
          <source>Subprotocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0134e26bc5b423bcd00feec05e063564906638cb" translate="yes" xml:space="preserve">
          <source>Subprotocols are explained in sections 1.9, 4.2, 11.3.4, and 11.5 of the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2c13e91f9a59b0be622f3ca7fcb40a6cc4bbc5" translate="yes" xml:space="preserve">
          <source>Subscribes to a push service. It returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a &lt;a href=&quot;pushsubscription&quot;&gt;&lt;code&gt;PushSubscription&lt;/code&gt;&lt;/a&gt; object containing details of a push subscription. A new push subscription is created if the current service worker does not have an existing subscription.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314a814aaa568f7c076f83fb56cb9e569be0d4ff" translate="yes" xml:space="preserve">
          <source>Subscribes to a push subscription. Replaced by &lt;a href=&quot;pushmanager/subscribe&quot;&gt;&lt;code&gt;PushManager.subscribe()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fde48f31aff21f9652066ed6732f7e7dbae712e" translate="yes" xml:space="preserve">
          <source>Subscription</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4231b01c7da3e56377f68439f442145089b0a9d" translate="yes" xml:space="preserve">
          <source>Subscription.endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79d2c289d5598d10aa543e717ff7a15644ee390" translate="yes" xml:space="preserve">
          <source>Subscription.expirationTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c992d531a80fe7a75a66e89c9c581fc91f7fef1" translate="yes" xml:space="preserve">
          <source>Subscription.getKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551fb1630f88b5a80b5336b987aaf6c7ecaa2877" translate="yes" xml:space="preserve">
          <source>Subscription.options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47226d5fa48332870151215deb016974c57e6e8d" translate="yes" xml:space="preserve">
          <source>Subscription.toJSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87532da68f3e2112d1e2c52eb8c6daa8344bbf42" translate="yes" xml:space="preserve">
          <source>Subscription.unsubscribe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581410c494073df1ddab2d0924a4d540a3b62791" translate="yes" xml:space="preserve">
          <source>Subsequent iterations of the &lt;code&gt;keyframeEffect&lt;/code&gt; build on the final value of the previous iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df0b668909ebe6ad3ffd0527494089edda4c4f2" translate="yes" xml:space="preserve">
          <source>Substitution string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14850d4fb3b9e09706ade91d9e33b93f8f4423b0" translate="yes" xml:space="preserve">
          <source>Substitution strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9948f644d6e5f2756f97d3d6638fc64250d331d9" translate="yes" xml:space="preserve">
          <source>SubtleCrypto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480b1589048cebdffcd0f3545129dbd593ba4355" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.decrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326e23f5ed2dd1ceef73a68f401da10ab0b44d0a" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.deriveKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bde11e47b6d4bb20659d4d8fa37d471b731fba5" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.digest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becdf0228f9dfe7c10a46efd33f117e127018d2c" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.encrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231aef1fe2f34cf0101d1883d9468f66819772a9" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.exportKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c2209241c3dd73acf61055dcb67d4b1226ee9f" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.generateKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a130db76369464571de757aaa947721e8880ce" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.importKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3929812c999ffad699477b3e043846496c28c5a8" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.sign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6933be294360deba7bacd954ed2176dd7f86751e" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.unwrapKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5628d0d0bc5b86b06f14a1894a0ff0a88d1aefd9" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.verify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511ba45ac1193d7da17451cbfc8b3af5289c56dc" translate="yes" xml:space="preserve">
          <source>SubtleCrypto.wrapKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a729bbac0e27785a5aaed042b0c4bd49a39cff66" translate="yes" xml:space="preserve">
          <source>Subtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed504312f7a68f96b7b58be126af3e090d1184e" translate="yes" xml:space="preserve">
          <source>Success Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98171ff3f7465a0ee8c282b97413045e26b2f56" translate="yes" xml:space="preserve">
          <source>Such pseudo-link also breaks accessibility of links. &lt;strong&gt;Always use a real URL for the href attribute value&lt;/strong&gt; so that if javascript support is disabled or inexistent or if the user agent does not support opening of secondary window (like MS-Web TV, text browsers, etc), then such user agents will still be able to load the referenced resource according to its default mode of opening/handling a referenced resource. This form of code also interferes with advanced features in tab-capable browsers: eg. middle-click on links, Ctrl+click on links, Ctrl+Enter on links, &quot;mouse gestures&quot; features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75278ec89b27dc24df51ed9c6fc05468663b345b" translate="yes" xml:space="preserve">
          <source>Suite 441, 4th floor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6889fc97e14b42dec11a8c183ea791c5465b658" translate="yes" xml:space="preserve">
          <source>Super</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d59f7c4e4461afec913df4a38af0997da2969d8" translate="yes" xml:space="preserve">
          <source>Supersede DOM 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227fbac2ac2a30cd09be876c4f5532bf1bc22551" translate="yes" xml:space="preserve">
          <source>Supersede DOM 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc315362e74993656646268f87cca2497125052" translate="yes" xml:space="preserve">
          <source>Supersede DOM 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74879f4090f9985045666cfed848e21575fb5865" translate="yes" xml:space="preserve">
          <source>Supplying request options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c27bf8f0acd86447799b486255f30d18b183d8" translate="yes" xml:space="preserve">
          <source>Supplying your own request object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2dfdc03147b436ef8bcd899e2bc61e9b782e3f" translate="yes" xml:space="preserve">
          <source>Support (on &lt;code&gt;CharacterData&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762e8ce465da1bd35e53572a8185110a1f6b0bee" translate="yes" xml:space="preserve">
          <source>Support for &quot;plus-darker&quot; and &quot;darker&quot; were removed in Chrome 48. Developers looking a replacement should use &quot;darken&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41c851d51c3d223fa750ba7de3d0fa84a95a63d" translate="yes" xml:space="preserve">
          <source>Support for 'Autonomous custom elements' only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db74da0a74ef6ae89ef16d27e3fc7db30042b21" translate="yes" xml:space="preserve">
          <source>Support for 'Customized built-in elements' as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15740ebbe0978aa65eff5694921a89cd1915b585" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;-1&lt;/code&gt; as an index argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3088bc38a95edc91e697e0a56359cc52653ca4b3" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;mouseEventInit&lt;/code&gt; optional &lt;code&gt;region&lt;/code&gt; field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396bd53af80d884faf84b3efb5e2b779114a8826" translate="yes" xml:space="preserve">
          <source>Support for DOM &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/progress&quot;&gt;progress&lt;/a&gt;&lt;/code&gt; event monitoring of &lt;code&gt;XMLHttpRequest&lt;/code&gt; transfers follows the &lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-progressevent&quot;&gt;specification for progress events&lt;/a&gt;: these events implement the &lt;a href=&quot;../progressevent&quot;&gt;&lt;code&gt;ProgressEvent&lt;/code&gt;&lt;/a&gt; interface. The actual events you can monitor to determine the state of an ongoing transfer are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf22ae36aee4fc6095259e6a15a0afdc9c036ae" translate="yes" xml:space="preserve">
          <source>Support for Web Speech API speech recognition is still getting there across mainstream browsers, and is currently limited to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eb797c1a29795f4a8cf6e53b80c7e9c0cf24f9" translate="yes" xml:space="preserve">
          <source>Support for Web Speech API speech synthesis is still getting there across mainstream browsers, and is currently limited to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40971c9c6418de77899c1194a7a3755de2f78907" translate="yes" xml:space="preserve">
          <source>Support for WebGL is present in &lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox&quot;&gt;Firefox&lt;/a&gt; 4+, &lt;a href=&quot;http://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt; 9+, &lt;a href=&quot;http://www.opera.com/&quot;&gt;Opera&lt;/a&gt; 12+, &lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari &lt;/a&gt;5.1+, &lt;a href=&quot;http://windows.microsoft.com/en-us/internet-explorer/browser-ie&quot;&gt;Internet Explorer&lt;/a&gt; 11+, and &lt;a href=&quot;https://www.microsoft.com/en-us/windows/microsoft-edge&quot;&gt;Microsoft Edge&lt;/a&gt; build 10240+; however, the user's device must also have hardware that supports these features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d3eb63c1ec815d164b8b2683d53b7e4fccbcd8" translate="yes" xml:space="preserve">
          <source>Support for blob: and data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68104c68bd8dbacb028dfc2d06df198c4e411d4" translate="yes" xml:space="preserve">
          <source>Support for elements other than &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8268b6e4aaad3acc9b716d23f7aaf987acd029" translate="yes" xml:space="preserve">
          <source>Support for flipping the image by using negative values for &lt;code&gt;sw&lt;/code&gt; and &lt;code&gt;sh&lt;/code&gt; was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60faa5941588f5f66018675e9a2101c95d00e8a" translate="yes" xml:space="preserve">
          <source>Support for sctp-sdp-21 format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70002c739568abd669c70bdf940f5f87e21d11e3" translate="yes" xml:space="preserve">
          <source>Support in &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Web_Workers_API&quot;&gt;web workers&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bff12a5836b19d4cf56b8b9c6bd5b6bd307f401" translate="yes" xml:space="preserve">
          <source>Support in Blink (Chrome and Opera)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cac570134c6cd726b31999f390e8cca6942ed7" translate="yes" xml:space="preserve">
          <source>Support in Gecko (Firefox)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afde997501bb81eb9e2079bbdb42683087f3c15b" translate="yes" xml:space="preserve">
          <source>Support in IE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e41590c965766216ab4e92cd752f4710702f0d4" translate="yes" xml:space="preserve">
          <source>Support in WebKit (Safari)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc50029f6ed5c7d054344a0e55c68f7002f8f663" translate="yes" xml:space="preserve">
          <source>Support of &lt;code&gt;for...of&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0959805e6fcf42cac3dfcb7b84290c3866261891" translate="yes" xml:space="preserve">
          <source>Support on &lt;code&gt;Document&lt;/code&gt; and &lt;code&gt;DocumentFragment&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdd5280d41c7a661a824701b3f6e8f6d8994e69" translate="yes" xml:space="preserve">
          <source>Support on &lt;code&gt;SVGElement&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18533e1578d0cccbf052f24f0c6e19816313d3b" translate="yes" xml:space="preserve">
          <source>Support on &lt;code&gt;WorkerNavigator&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f010c8ae1c246941f70aaee8b3eac51d847b509d" translate="yes" xml:space="preserve">
          <source>Support only for &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1707ecfc23094b12c19c4b898ebcb416976e00" translate="yes" xml:space="preserve">
          <source>Support status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f893ae656c8caa38cc27c3ee9d4f4354b2ef1c69" translate="yes" xml:space="preserve">
          <source>Support varies for different types of workers. See each worker type's page for specifics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ff0d180d17cdbaad8ed34185b89604acc7e582" translate="yes" xml:space="preserve">
          <source>Supported in &lt;a href=&quot;https://webkit.org/blog/8406/release-notes-for-safari-technology-preview-64/&quot;&gt;Safari Technology Preview 64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e426431f9d7d9ebf1b962cc0ca701df304dd5e1" translate="yes" xml:space="preserve">
          <source>Supported in FF 3.5+, Chrome 1+, Opera 9+, Safari 3+, IE9+, Edge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82dac87be33d9dcbd9a2281d95716dbdd058dfe" translate="yes" xml:space="preserve">
          <source>Supported in chrome code only since Firefox version 47.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d189e2ac2114a253bfa5cd42f7fdab5d8cc788" translate="yes" xml:space="preserve">
          <source>Supported in chrome code only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5390edd056a3b5e4cb8e7a03b41ae581d42e655f" translate="yes" xml:space="preserve">
          <source>Supported in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4b6a195e59ed2338548841f516188990354924" translate="yes" xml:space="preserve">
          <source>Supported media formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c5f47716afbaa60a14c811c3c1dd739b8c8d4c" translate="yes" xml:space="preserve">
          <source>Supported on Samsung Internet for GearVR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9794d24ec85271049a86498f820c37d015564882" translate="yes" xml:space="preserve">
          <source>Supported types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afbe2605b38c239efc6eca7260ba848bab9d639" translate="yes" xml:space="preserve">
          <source>Supporting VR hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96689299ad47d4a0f1be4c186867077cebcb681f" translate="yes" xml:space="preserve">
          <source>Supporting a two-pointer gesture requires preserving a pointer's event state during various event phases. This application uses two global variables to cache the event state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4cc920c3185bff6dbb818000dbbdd0195b0614" translate="yes" xml:space="preserve">
          <source>Supporting fallback to the src property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bb573c05a12ed3ac5256abd0bf62f9c0faa954" translate="yes" xml:space="preserve">
          <source>Supports 'Autonomous custom elements' but not 'Customized built-in elements'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e41b16121e3005837f34dd78cb6ec37a1c8986" translate="yes" xml:space="preserve">
          <source>Supports a deprecated way of setting orientation &amp;mdash; the &lt;code&gt;setOrientation()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad9f9880c63587ee251e4b60b4c26ea4ca8323b" translate="yes" xml:space="preserve">
          <source>Supports parameters for callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b98037adebff88fa67f847d8986cf3f031fa36" translate="yes" xml:space="preserve">
          <source>Supports sending &lt;code&gt;File&lt;/code&gt; and &lt;code&gt;FileList&lt;/code&gt; objects between windows. This is only allowed if the recipient's principal is contained within the sender's principal for security reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec51f4ec073c4be6a7c1822bfb0fd6c1a3ffb125" translate="yes" xml:space="preserve">
          <source>SupportsRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3696553692f0dd3ded8194a87c40430338a3090e" translate="yes" xml:space="preserve">
          <source>Suppose http://mozilla.org/foo.html executes the following JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3752d5ebdda23aff2e2c805fa87efc442cd10a" translate="yes" xml:space="preserve">
          <source>Suppose now that the user navigates to http://google.com, then clicks the Back button. At this point, the URL bar will display http://mozilla.org/bar.html, and &lt;s&gt;the page will get will not get a &lt;code&gt;popstate&lt;/code&gt; event whose &lt;em&gt;state object&lt;/em&gt; contains a copy of &lt;code&gt;stateObj&lt;/code&gt;&lt;/s&gt; if you read the &lt;code&gt;history.state&lt;/code&gt; you will get the &lt;code&gt;stateObj&lt;/code&gt;. &lt;code&gt;popstate&lt;/code&gt; event won't be fired because the page has been reloaded. The page itself will look like &lt;code&gt;bar.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cc961ea0fc4311ffa1863ebf52465dd90ecbc2" translate="yes" xml:space="preserve">
          <source>Suppose now that the user navigates to http://www.microsoft.com, then clicks the Back button. At this point, the URL bar will display http://mozilla.org/bar2.html. If the user now clicks Back again, the URL bar will display http://mozilla.org/foo.html, and totally bypass bar.html.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82d027df24e54ab66cde2ec65c8d16a21e45386" translate="yes" xml:space="preserve">
          <source>Suppose the author wants to take the above document and change the contents of the header, and write two paragraphs instead of one. The following script would do the job:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86972bc84b04e76039404c99c760d42ea0fca725" translate="yes" xml:space="preserve">
          <source>Suppose you have the following simple paragraph within your webpage (with some whitespace added to aid formatting throughout the code samples here), whose DOM node is stored in the variable &lt;code&gt;para&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda05ca6d84a03a6a21fb0309b7a2d8bab187f63" translate="yes" xml:space="preserve">
          <source>Surface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca55f6654966a547634eb920df20d71a5f5a3793" translate="yes" xml:space="preserve">
          <source>Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/a&gt; element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eb51c2ed10d90fabefd11edebac826ec5a888e" translate="yes" xml:space="preserve">
          <source>Suspends playing of an animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2786d475ed715b4b8f17c69aac4116b09a7ec78" translate="yes" xml:space="preserve">
          <source>Suspends the progression of time in the audio context, temporarily halting audio hardware access and reducing CPU/battery usage in the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b89186be68465754c871c625d2a11f299f90b1e" translate="yes" xml:space="preserve">
          <source>Swap out the perspective matrix to use orthographic projection. In the MDN WebGL shared code you'll find the &lt;code&gt;MDN.orthographicMatrix()&lt;/code&gt;. This can replace the &lt;code&gt;MDN.perspectiveMatrix()&lt;/code&gt; function in &lt;code&gt;CubeDemo.prototype.computePerspectiveMatrix()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a5a97308aa58d5015c9c7b9a1b8016dd85230d" translate="yes" xml:space="preserve">
          <source>Switch the audio transceiver into send-only mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64deb17e9e2e7d770786ceb671089f3def0f2d49" translate="yes" xml:space="preserve">
          <source>SwitchElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625eab76acb53b4821eeedfe6fd5f5111cc3a9cf" translate="yes" xml:space="preserve">
          <source>Switching between regular window and full screen will fire the &quot;resize&quot; event on the corresponding window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd796da2856d3d5d56323edd54f0e8cf8866a079" translate="yes" xml:space="preserve">
          <source>Switching between the front and rear cameras on a phone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d74ead05e759fb822a7c4d49b22f12bba13effa" translate="yes" xml:space="preserve">
          <source>Switching the source back to a &lt;code&gt;MediaStream&lt;/code&gt; adds tracks back to the stream and it works again as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3a7fe8bb80ae22aa184833bef9bf4635b1a6fd" translate="yes" xml:space="preserve">
          <source>Switching video cameras</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29641d2d8c1f22e394732db935fb6465525c7a6d" translate="yes" xml:space="preserve">
          <source>SymbolElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070a630c920a57eb9a5ca50209cb67179fede023" translate="yes" xml:space="preserve">
          <source>Sync objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9428d98fa58c291a6af3797a22edaf07bb8ee0bd" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d436690913a2f3b5f9238d6291fed8ebeb2df7b" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743fd8f0ce2c50b27959bb7450caecaba94f4f66" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbenvironment&quot;&gt;&lt;code&gt;IDBEnvironment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded71b2b42224b3ae0bf9c4f85b71182b9ec7c22" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbfactory&quot;&gt;&lt;code&gt;IDBFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01df0b7e2c457c3e7e1479dde5a58e20942bfe85" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3ad3fc98dee115e2d883113dfd1fcf53f42be8" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186d948bf0065adc19cb1f92d811369dd2027453" translate="yes" xml:space="preserve">
          <source>Sync version of &lt;a href=&quot;idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a869a2268661a05afca67e78b64e2444d4ab3bd" translate="yes" xml:space="preserve">
          <source>SyncEvent.lastChance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815090949fd71b923bb6acc82f4335675e9c455a" translate="yes" xml:space="preserve">
          <source>SyncEvent.tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5742aeb514f34e3ea873c21f0c380d868219ca" translate="yes" xml:space="preserve">
          <source>Synchronize the timer of a started daemon with the time of its invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f265a9f0fd2f49e6a345a62c1848f9b6896d1e3e" translate="yes" xml:space="preserve">
          <source>Synchronizing. The API is not designed to take care of synchronizing with a server-side database. You have to write code that synchronizes a client-side indexedDB database with a server-side database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c83871c15d13a49a5e1ab18ea503b5ee64eca3e" translate="yes" xml:space="preserve">
          <source>Synchronous XHR often causes hangs on the web. But developers typically don't notice the problem because the hang only manifests during poor network conditions or slow server response. Synchronous XHR is now in deprecation state. Developers are recommended to move away from the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda1257da15689d7dc66aaa8930f1dd60e58330c" translate="yes" xml:space="preserve">
          <source>Synchronous XHR restrictions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdea83bdfa65074f5e5ab418edf909bbe13822c9" translate="yes" xml:space="preserve">
          <source>Synchronous and asynchronous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f499549b6c87247f2bffbfcfd8a5e1a6798256e7" translate="yes" xml:space="preserve">
          <source>Synchronous display of frames produced by an &lt;code&gt;OffscreenCanvas&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a455c3646e68bbfe84d9122d6c9f0f77a9ffa0b" translate="yes" xml:space="preserve">
          <source>Synchronous request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7902644a4482e4c1ca4f48230526ad5ede8ac2e0" translate="yes" xml:space="preserve">
          <source>Synchronous requests block the execution of code which creates &quot;freezing&quot; on the screen and an unresponsive user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed95d8a0de2878cd6f4043769974cb2e97fe1c2" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/personalbar&quot;&gt;&lt;code&gt;window.personalbar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b22a6928d409f0e1f6096f9d59f7f7522bfd37" translate="yes" xml:space="preserve">
          <source>Synthesis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c7f417e07061b0776830dc4b9fd3bc2679fc0b" translate="yes" xml:space="preserve">
          <source>Synthesis.cancel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa6138238c686d9a0f1e03b2a0f2ce12b1d92cb" translate="yes" xml:space="preserve">
          <source>Synthesis.getVoices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49bef97036c0623e73ada8d7ac5262ec0d93de9" translate="yes" xml:space="preserve">
          <source>Synthesis.onvoiceschanged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bd832b40a19d53dc9283a188372ab484404626" translate="yes" xml:space="preserve">
          <source>Synthesis.pause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e07f84aafc7933a2cf0526e551ee7023b6d6aeb" translate="yes" xml:space="preserve">
          <source>Synthesis.paused</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c91060a3c7897a99507f6f37dac73a795f40578" translate="yes" xml:space="preserve">
          <source>Synthesis.pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6677e98b0ccb3c502723d5b68b2aa97865247782" translate="yes" xml:space="preserve">
          <source>Synthesis.resume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a152c56b787aeaaf912b6a13a99adecc6541de7e" translate="yes" xml:space="preserve">
          <source>Synthesis.speak</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b1079672a5d95bedb8883c2d13c77825712d41" translate="yes" xml:space="preserve">
          <source>Synthesis.speaking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032479aca8bc4c8f98c939208cc36a40ac392743" translate="yes" xml:space="preserve">
          <source>SynthesisErrorEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763c5ecb104c2b02aca2b4c82b5f5625397247f2" translate="yes" xml:space="preserve">
          <source>SynthesisErrorEvent.error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e506bee362b660994495d2495863179a13eb5891" translate="yes" xml:space="preserve">
          <source>SynthesisEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b1d383d9a8cf420cae5d877184d077b44d509a" translate="yes" xml:space="preserve">
          <source>SynthesisEvent.charIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ba86d8eadd7032e33fb28a473602067572c58" translate="yes" xml:space="preserve">
          <source>SynthesisEvent.elapsedTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702b777aa396538de4a0e9a5218bc674a05548a0" translate="yes" xml:space="preserve">
          <source>SynthesisEvent.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435cd7619e8274174d7c611ae17060b7cf561b0a" translate="yes" xml:space="preserve">
          <source>SynthesisEvent.utterance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193bf379b1d06f055d129d1579d9e0f3d5f64be5" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f4ad03d0b8e860f540eb7cf2ab2e23e400aa67" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b36e210d7793a0eb3b1148df1a45ab2f8dfa131" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.lang</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf15c100a8b478c3fc4397415da75020fe401c9" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onboundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eb2f75bb939a70d3747f76875ba4eafaef05ba" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661f9dfe6e35c4e9412a71417a55997e6dcab9ca" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onerror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8cee138f2143199480974aa431bf088165bcb3" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onmark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7559976bf9da9bb15ef8068e5b51e7481c3d4c30" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onpause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6025b499783eee3b0565ec025f76305b6c5b412" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onresume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e94666ce7398af6d33b6a3e42180dca46b9c93b" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.onstart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e07f47bd59d6522e420969cdbaa3e2e81b6433" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.pitch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7523d982e32fb8185d3e3939aaffd75386ce11" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.rate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec837f9e37d7782338a77997862f42f8d8773f3" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4701c0e1046ab9b614e7abc706c679cff92e1941" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.voice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46931fd7def5b523d9054182714d00886356401" translate="yes" xml:space="preserve">
          <source>SynthesisUtterance.volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9467a9ab44566bf9bbf3c7cfa94697df88b25d1a" translate="yes" xml:space="preserve">
          <source>SynthesisVoice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1699e0292bfb7ee22dbe9fedb57c6af9475650" translate="yes" xml:space="preserve">
          <source>SynthesisVoice.default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379706b4b5ae9ebaffdd6241e9cbc5666f27bf37" translate="yes" xml:space="preserve">
          <source>SynthesisVoice.lang</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3728d98f1b866c7bb44b57bcefa6b08593590ac9" translate="yes" xml:space="preserve">
          <source>SynthesisVoice.localService</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c9391b74ee34912815dd0ac53b4567d07095d0" translate="yes" xml:space="preserve">
          <source>SynthesisVoice.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8309697427676eb953ac35cafeb2290689201222" translate="yes" xml:space="preserve">
          <source>SynthesisVoice.voiceURI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2caa56dc846680167a94d5fc3161fc05b1d93e6c" translate="yes" xml:space="preserve">
          <source>System Update API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5675c771c439d7842cfcb3eab8080cc0ae1d808b" translate="yes" xml:space="preserve">
          <source>System.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370505295784b1ebaf5561a2d2dc50e9a1359486" translate="yes" xml:space="preserve">
          <source>System.root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dd30597771a222440040f8e6d1e761e268827a" translate="yes" xml:space="preserve">
          <source>SystemDirectoryEntry.createReader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f369d379dad5dc54f54aaa5f39538b2fa2e8ff" translate="yes" xml:space="preserve">
          <source>SystemDirectoryEntry.getDirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3698ed6b58af27f364d5397e4e90e1bfe98850ed" translate="yes" xml:space="preserve">
          <source>SystemDirectoryEntry.getFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a2129fe81d4372c7899a5cd55a54ddd2220591" translate="yes" xml:space="preserve">
          <source>SystemDirectoryEntry.removeRecursively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644c89a107d1f5bcc83a01f689ad52477ece1a5a" translate="yes" xml:space="preserve">
          <source>SystemDirectoryReader.readEntries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d835a796188adb1246109b5f0e043f200c9a3fb1" translate="yes" xml:space="preserve">
          <source>SystemEntry.copyTo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e268ed9baf880e06715d3cc51315edee0c71e865" translate="yes" xml:space="preserve">
          <source>SystemEntry.filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf93aafe0f6e117871f1a4629340deadd6e561b" translate="yes" xml:space="preserve">
          <source>SystemEntry.fullPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bc3475c426852daee0698d88cda50073647e95" translate="yes" xml:space="preserve">
          <source>SystemEntry.getMetadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd440b757bc3895eb2d222df504ced0f0ed3f68f" translate="yes" xml:space="preserve">
          <source>SystemEntry.getParent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0008bc7d29c5215f2c84b9ee521015ed561d91fb" translate="yes" xml:space="preserve">
          <source>SystemEntry.isDirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0deddaec998171ea822d9d20550cb5291ca603b6" translate="yes" xml:space="preserve">
          <source>SystemEntry.isFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f967f4627f8ac7e04b8fc7da47be1fdcdf0968" translate="yes" xml:space="preserve">
          <source>SystemEntry.moveTo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd37b84eb4d81d50e73dd2d82810854152e80e8" translate="yes" xml:space="preserve">
          <source>SystemEntry.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71a944d01604639e22de66f1131281d6f8de6d7" translate="yes" xml:space="preserve">
          <source>SystemEntry.remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e40e6a803f95c4c047a07d8236cac745a62710" translate="yes" xml:space="preserve">
          <source>SystemEntry.toURL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4ba4fcf66bd6fe1c5c3f9e7110ba5ff9681cd7" translate="yes" xml:space="preserve">
          <source>SystemFileEntry.createWriter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7069a785a33ad2bc151acdbaf20b3a3f1f0a982" translate="yes" xml:space="preserve">
          <source>SystemFileEntry.file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e85ca109f9d062a8ae658b92ae4c75290c9361" translate="yes" xml:space="preserve">
          <source>SystemFlags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e42ce6afdc557d5c40b56e366da45bf09c5250a" translate="yes" xml:space="preserve">
          <source>SystemFlags.create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a131e7edc219b528316db7fa1343cbafc1b014a6" translate="yes" xml:space="preserve">
          <source>SystemFlags.exclusive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6303a49483c1564f02d13e3fae9616cb4576fed" translate="yes" xml:space="preserve">
          <source>TBD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d97a9fa057ee5cff386ed7b907073848d50e2bb" translate="yes" xml:space="preserve">
          <source>TBD (does not yet appear to be supported anywhere).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda7149bf0793bd5a29837946640effab127c100" translate="yes" xml:space="preserve">
          <source>TBD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04963c8ec997f83be90c2f92bf3dca948cc8cc9" translate="yes" xml:space="preserve">
          <source>TCP Socket API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b837ac33d812e5462f5ad676e7c6138d81e4417" translate="yes" xml:space="preserve">
          <source>TCP candidate types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cecb93ea82aa72112025bf47100190ee4050547" translate="yes" xml:space="preserve">
          <source>TCP candidates (that is, candidates whose &lt;a href=&quot;../rtcicecandidate/protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;tcp&quot;&lt;/code&gt;) can be of these types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0badbc61ba28c87bdf8de17e149a0b453d2c26dc" translate="yes" xml:space="preserve">
          <source>TEXTURE_2D_ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccb801be7b323c6018f807bcc716ce8ae9431f2" translate="yes" xml:space="preserve">
          <source>TEXTURE_3D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0c59c21e28cb3aa3f4d595857b3fbc2d5133b6" translate="yes" xml:space="preserve">
          <source>TLS Handshake</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b623ccc8af9198198c71aea7d13860b7bb6c273" translate="yes" xml:space="preserve">
          <source>TODO: define what &quot;abort&quot; is. Closing the window via window manager? Stopping the load of the page? By which means and reasons (user, network/server)? At which stages would it fire / be catched? For IE, onabort is only available with &lt;code&gt;img&lt;/code&gt; tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19875a4eb4619f793c1d04617c2f28ea7dc9e18e" translate="yes" xml:space="preserve">
          <source>TSpanElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db12dbf71b224709dc5c0e8bed589b37de090ae" translate="yes" xml:space="preserve">
          <source>TURN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f8f37b3ab2593421cd3528ecfac659326fa31d" translate="yes" xml:space="preserve">
          <source>TV API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe06eb6459c87f0e497ce1805f076f104bfecf78" translate="yes" xml:space="preserve">
          <source>Tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b3acea3611ec11dc5676a4e8b1c9511ded8552" translate="yes" xml:space="preserve">
          <source>Tab order is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bf3fb196f52d005ad25748981418f72d447970" translate="yes" xml:space="preserve">
          <source>Table 1 - vertical values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6940a855bacc76006a63ac07716bcce83c470251" translate="yes" xml:space="preserve">
          <source>Table 2 - line examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b787e2acf96ec6f2a425deeb3b34ff967e52647" translate="yes" xml:space="preserve">
          <source>Table 3 - position examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b91091819c12db5cbb918a1318cbc826ef3435" translate="yes" xml:space="preserve">
          <source>Table 4 - size examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ea47cacbd5b3e1e6669bb1615a9bb403326055" translate="yes" xml:space="preserve">
          <source>Table 5 - align values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8e6fd6a182d76a5d807c339127e85b87b60441" translate="yes" xml:space="preserve">
          <source>Table 6 - Escape sequences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881192641a9219822b7ce1c98be19705602e14ca" translate="yes" xml:space="preserve">
          <source>Tabs running code that's using real-time network connections (&lt;a href=&quot;websockets_api&quot;&gt;WebSockets&lt;/a&gt; and &lt;a href=&quot;webrtc_api&quot;&gt;WebRTC&lt;/a&gt;) go unthrottled in order to avoid closing these connections timing out and getting unexpectedly closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8e04627ad470d8f3b322771e3c55fd66bfa8e5" translate="yes" xml:space="preserve">
          <source>Tabs which are playing audio are considered foreground and aren&amp;rsquo;t throttled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610e260eb737cde24d68d16f70f6610570bfaf43" translate="yes" xml:space="preserve">
          <source>Tag example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9380f48fff9b7529adceb125a4f84b50be07be12" translate="yes" xml:space="preserve">
          <source>Tainted (write-only) 2D canvases can't be used as WebGL textures. A 2D &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; becomes tainted, for example, when a cross-domain image is drawn on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8696b48629a607a3d2eddeff72c825bb7a2dc2e" translate="yes" xml:space="preserve">
          <source>Take this example for a test drive here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b76fd2e77715b51f4d5cc12dca8619c56bcff91" translate="yes" xml:space="preserve">
          <source>Taken directly from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebRTC&quot;&gt;WebRTC&lt;/a&gt;&lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; (such as a webcam or microphone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2079f4c453abb3aa8db72c89ec0568cb204baec" translate="yes" xml:space="preserve">
          <source>Taken from HTML media elements (such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa73c4fabf027d8f1bfe0144b869b73a0101cca" translate="yes" xml:space="preserve">
          <source>Takes a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with a &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906ab0eb5b07e24a09702235639609a8d8c81f3a" translate="yes" xml:space="preserve">
          <source>Takes a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with a &lt;a href=&quot;formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5361fe60b311b776ca1046f3e7722032b6aacd81" translate="yes" xml:space="preserve">
          <source>Takes a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; (text).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47cbf360433181b3aea23f3a3077a03f4a1b726" translate="yes" xml:space="preserve">
          <source>Takes a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; (text). The response is &lt;em&gt;always&lt;/em&gt; decoded using UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd2bade8e8b2addea95afbcbe36c11b832f57eb" translate="yes" xml:space="preserve">
          <source>Takes a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482c8256248d57787f33b97e22fbdeda31314460" translate="yes" xml:space="preserve">
          <source>Takes a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with the result of parsing the body text as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a57a745999f6378fa5690868b7bfcbde591ac1" translate="yes" xml:space="preserve">
          <source>Takes a URL, retrieves it and adds the resulting response object to the given cache. This is functionally equivalent to calling &lt;code&gt;fetch()&lt;/code&gt;, then using &lt;code&gt;put()&lt;/code&gt; to add the results to the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36cafde323298062574c5b1d7ced0f9a8e6aa8d" translate="yes" xml:space="preserve">
          <source>Takes a grammar present at a specific URI and adds it to the &lt;code&gt;SpeechGrammarList&lt;/code&gt; as a new &lt;a href=&quot;speechgrammar&quot;&gt;&lt;code&gt;SpeechGrammar&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be5a2ea1704e5a3dab49f103972cabbd9379607" translate="yes" xml:space="preserve">
          <source>Takes a grammar present in a specific &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; within the code base (e.g. stored in a variable) and adds it to the &lt;code&gt;SpeechGrammarList&lt;/code&gt; as a new &lt;a href=&quot;speechgrammar&quot;&gt;&lt;code&gt;SpeechGrammar&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f8be0b548efab1daff882a846ae6c9ead089c2" translate="yes" xml:space="preserve">
          <source>Takes a number that can be 0, negative, or positive. Negative values reverse the animation. The value is a scaling factor, so for example a value of 2 would double the playback rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb7a6b19399f5978d5d0385df28d77e76e399fa" translate="yes" xml:space="preserve">
          <source>Takes a single exposure using the video capture device sourcing a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; containing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1751a6b39cdf52efe474e0de1a6db329a8ae7919" translate="yes" xml:space="preserve">
          <source>Takes a snapshot of the live video in a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;, returning an &lt;a href=&quot;imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;, if successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa00ffaeb2df1dadb2a0a36b7eb271c8fb27d610" translate="yes" xml:space="preserve">
          <source>Takes a time-out value which indicates that redraw shall not occur until:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dd7760a8793953379b90cf66356606884d5579" translate="yes" xml:space="preserve">
          <source>Takes an IRI pointing to an SVG filter element which may be embedded in an external XML file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c4873ea1b34c69085cbe4c7af8ef06322dbcc7" translate="yes" xml:space="preserve">
          <source>Takes an array of URLs, retrieves them, and adds the resulting response objects to the given cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ae2afbc4dbc4f2e06e04e679f82858ac68f54d" translate="yes" xml:space="preserve">
          <source>Takes both a request and its response and adds it to the given cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2197cdacae03d5cae5878166a01bcf08c6ca23" translate="yes" xml:space="preserve">
          <source>Taking one step deeper into the process, we find that &lt;code&gt;localDescription&lt;/code&gt; and &lt;code&gt;remoteDescription&lt;/code&gt;, the properties which return these two descriptions, aren't as simple as they look. Because during renegotiation, an offer might be rejected because it proposes an incompatible format, it's necessary that each endpoint have the ability to propose a new format but not actually switch to it until it's accepted by the other peer. For that reason, WebRTC uses &lt;em&gt;pending&lt;/em&gt; and &lt;em&gt;current&lt;/em&gt; descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef720ac8919cb445a32e148e6ac38c7bbe5154a3" translate="yes" xml:space="preserve">
          <source>Taking still photos with WebRTC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6f9172c0051f04f117313c6ab84d4a5271027e" translate="yes" xml:space="preserve">
          <source>Taking video as an example, to obtain information about video decoding abilities, you create a video decoding configuration which you pass as a parameter to &lt;a href=&quot;../mediacapabilities/decodinginfo&quot;&gt;&lt;code&gt;MediaCapabilities.decodingInfo()&lt;/code&gt;&lt;/a&gt; method. This returns a promise that fulfills with information about the media capabilities as to whether the video can be decoded, and whether decoding will be smooth and power efficient. You can also test audio decoding as well as video and audio encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa5c1ddff37dad67d7c5c71c75f620126e2d5db" translate="yes" xml:space="preserve">
          <source>Target objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abdca47509401a0cbf02b2c841f5e390c0a44c9" translate="yes" xml:space="preserve">
          <source>Target.addEventListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cf93f79b60adb89ded87b254e179ef2106099a" translate="yes" xml:space="preserve">
          <source>Target.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ff879f3bac5ce86d24acb4078cb8da645d67df" translate="yes" xml:space="preserve">
          <source>Target.dispatchEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b17559448e221cc8c57b8569e47a62ee6809a73" translate="yes" xml:space="preserve">
          <source>Target.removeEventListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf86d7743500dacf864a217e379e15994ec7e9a6" translate="yes" xml:space="preserve">
          <source>Targeting an element to be observed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397d3f4e3146a202fb446bf4c8c6e7238b8c32b8" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d28ba8b60c56075fa64a1d1d8003dbd36bfdcd" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad927522e97f37c7205692cc140d4020a87cdce6" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe010945678d39c74455babcf5a5b41d39d6099" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerSrc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a19153ab805267feef493299a7722b12471d488" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681765661003c9ab4680c6bee5cdaa940de15949" translate="yes" xml:space="preserve">
          <source>TcpClient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad8024a2c7b1265fb5e22250fc7a31283cdbd36" translate="yes" xml:space="preserve">
          <source>TcpListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dccc86ed6306ae2d6c9171c76bb25261d9cbc4" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;ConstrainBoolean&lt;/code&gt; is actually based on an intermediary dictionary named &lt;code&gt;ConstrainBooleanParameters&lt;/code&gt;, which adds &lt;code&gt;exact&lt;/code&gt; and &lt;code&gt;ideal&lt;/code&gt; to the simple Boolean type. However, for the sake of documentation clarity, the intermediate type (present only because of quirks in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebIDL&quot;&gt;WebIDL&lt;/a&gt; syntax) is ignored here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c6a803252e41b8abec276e6d1a7dbb00a3cddc" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;ConstrainDOMString&lt;/code&gt; is actually based on an intermediary dictionary named &lt;code&gt;ConstrainDOMStringParameters&lt;/code&gt;, which adds &lt;code&gt;exact&lt;/code&gt; and &lt;code&gt;ideal&lt;/code&gt; to &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;. However, for the sake of documentation clarity, the intermediate type (present only because of quirks in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebIDL&quot;&gt;WebIDL&lt;/a&gt; syntax) is ignored here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c194709317f014a764c6209f6ea0651f78c29a2d" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;ConstrainDouble&lt;/code&gt; is actually based on an intermediary dictionary named &lt;code&gt;ConstrainDoubleRange&lt;/code&gt;, which adds &lt;code&gt;exact&lt;/code&gt; and &lt;code&gt;ideal&lt;/code&gt; to &lt;a href=&quot;doublerange&quot;&gt;&lt;code&gt;DoubleRange&lt;/code&gt;&lt;/a&gt;, with &lt;code&gt;ConstrainDouble&lt;/code&gt; being a type that can be either a long integer or a &lt;code&gt;DoubleRange&lt;/code&gt;. However, for the sake of documentation clarity, the intermediate type (present only because of quirks in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebIDL&quot;&gt;WebIDL&lt;/a&gt; syntax) is ignored here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa95882d3054c62b931defedfbd1537f7e6ae858" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;ConstrainLong&lt;/code&gt; is actually based on an intermediary dictionary named &lt;code&gt;ConstrainLongRange&lt;/code&gt;, which adds &lt;code&gt;exact&lt;/code&gt; and &lt;code&gt;ideal&lt;/code&gt; to &lt;a href=&quot;longrange&quot;&gt;&lt;code&gt;LongRange&lt;/code&gt;&lt;/a&gt;, with &lt;code&gt;ConstrainLong&lt;/code&gt; being a type that can be either a long integer or a &lt;code&gt;LongRange&lt;/code&gt;. However, for the sake of documentation clarity, the intermediate type (present only because of quirks in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebIDL&quot;&gt;WebIDL&lt;/a&gt; syntax) is ignored here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb0b390c6a0df040ef015a43e06e443d3c93aee" translate="yes" xml:space="preserve">
          <source>Technically, the URL-related properties, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;hash&lt;/code&gt;, have been moved to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLUtils&quot;&gt;&lt;code&gt;URLUtils&lt;/code&gt;&lt;/a&gt; interface, and &lt;code&gt;HTMLAreaElement&lt;/code&gt; implements this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b999ff0ce18ee629f8ef24ce6f8e67168e160" translate="yes" xml:space="preserve">
          <source>Technically, the URL-related properties, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;hash&lt;/code&gt;, have been moving to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLUtils&quot;&gt;&lt;code&gt;URLUtils&lt;/code&gt;&lt;/a&gt; interface, and &lt;code&gt;HTMLAreaElement&lt;/code&gt; implements this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44918023ca683f3ae53eac61a23f2c63c7b96328" translate="yes" xml:space="preserve">
          <source>Technically, the event-related properties &lt;code&gt;onafterprint&lt;/code&gt;, &lt;code&gt;onbeforeprint&lt;/code&gt;, &lt;code&gt;onbeforeunload&lt;/code&gt;, &lt;code&gt;onblur&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;onfocus&lt;/code&gt;, &lt;code&gt;onhashchange&lt;/code&gt;, &lt;code&gt;onlanguagechange&lt;/code&gt;, &lt;code&gt;onload&lt;/code&gt;, &lt;code&gt;onmessage&lt;/code&gt;, &lt;code&gt;onoffline&lt;/code&gt;, &lt;code&gt;ononline&lt;/code&gt;, &lt;code&gt;onpopstate&lt;/code&gt;, &lt;code&gt;onresize&lt;/code&gt;, &lt;code&gt;onstorage&lt;/code&gt;, and &lt;code&gt;onunload&lt;/code&gt;, have been moved to &lt;a href=&quot;windoweventhandlers&quot;&gt;&lt;code&gt;WindowEventHandlers&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;HTMLBodyElement&lt;/code&gt; implements this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299550e55f3f7add0d8ee0a772895c6d7b9b9642" translate="yes" xml:space="preserve">
          <source>Technically, the properties &lt;code&gt;tabindex&lt;/code&gt; and &lt;code&gt;accesskey&lt;/code&gt; are now defined on &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200d598861f67411dd5904aa71af39bdcc46c63f" translate="yes" xml:space="preserve">
          <source>Technically, the property &lt;code&gt;tabindex&lt;/code&gt; is now defined on &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf717036afa237583c9802ec5e8fea2209c2982" translate="yes" xml:space="preserve">
          <source>Technically, the tabindex and accesskey properties, as well as the blur(), click(), and focus() methods, are now defined on &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9233a9af8029fcc7de1b37ddd41107a4169dd197" translate="yes" xml:space="preserve">
          <source>Technique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6410cda1b4384dedd62d5bcbf57a960f808ad840" translate="yes" xml:space="preserve">
          <source>Teeing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab86dd3b355549bac876e20e2b345eeaa35e03c5" translate="yes" xml:space="preserve">
          <source>Teeing a stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b652bbe59f4df459ad9c59864879530ac800215" translate="yes" xml:space="preserve">
          <source>Teleconferencing systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491886ed1a93918103dcde93c33ed0cf05804a83" translate="yes" xml:space="preserve">
          <source>Telephony</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a174d95fdf54e196613efbb2a99ac26da6003ece" translate="yes" xml:space="preserve">
          <source>Telling the user to use a different browser that supports canvas does not help users who can't read the canvas at all, for example. Providing a useful fallback text or sub DOM helps to &lt;a href=&quot;hit_regions_and_accessibility&quot;&gt;make the canvas more accessible&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8634dcb278881ae33b4366e49e236801ab5ed389" translate="yes" xml:space="preserve">
          <source>Tells the &lt;code&gt;IntersectionObserver&lt;/code&gt; a target element to observe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27611c660412f4b49a1d878ecc299d8246b12f4" translate="yes" xml:space="preserve">
          <source>Tells the &lt;code&gt;IntersectionObserver&lt;/code&gt; to stop observing a particular target element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df50ff42b06c6448cfc5adb8bf799baba7d6330" translate="yes" xml:space="preserve">
          <source>Tells the ICE agent to gather ICE candidates for only RTP, and to multiplex RTCP atop them. If the remote peer doesn't support RTCP multiplexing, then session negotiation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c298cf8c26c047dfb75aa81a7ac22a0dd439d02" translate="yes" xml:space="preserve">
          <source>Tells the browser that an animation is in progress, requesting that the browser schedule a repaint of the window for the next animation frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec54838154e0b437425beceb0b898d7675022c2" translate="yes" xml:space="preserve">
          <source>Tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ba1d71401d1a12b78b941467c07474a33c438e" translate="yes" xml:space="preserve">
          <source>Temporary: This is data that doesn't need to persist for a very long time. This will be evicted under a least recently used (&lt;a href=&quot;#LRU_policy&quot;&gt;LRU policy&lt;/a&gt;) when &lt;a href=&quot;#Storage_limits&quot;&gt;Storage limits&lt;/a&gt; are reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7938f2f0294195a7fea6c993d3f756b55c240632" translate="yes" xml:space="preserve">
          <source>Terminates the current connection and fires &lt;code&gt;PresentationConnection.onterminated&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d483bb803d2964ffdb8f1c929468ee50bcf51782" translate="yes" xml:space="preserve">
          <source>Terminating a worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102ae98214022f47ffb61a9b95b903a454514cb6" translate="yes" xml:space="preserve">
          <source>Terms often used to describe or to identify the same window. It is the new window which was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2298dc06c16e825b8c35d0bc0c28177f1fbcc8a1" translate="yes" xml:space="preserve">
          <source>Terms often used to describe or to identify the same window. It is the window from which a new window will be created. It is the window on which the user clicked a link which lead to the creation of another, new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6da23ebf86e8bac9688f9e6b9f1e87f67ff6d4" translate="yes" xml:space="preserve">
          <source>Test the online live demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2119f29439139fa5c81a331d0837688a1ff1f144" translate="yes" xml:space="preserve">
          <source>TestUFO: Test your web browser for requestAnimationFrame() Timing Deviations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874fefc2e5680a3a6c37ffb434ff987afb50146f" translate="yes" xml:space="preserve">
          <source>Testing for availability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e549d4555741057347ca7fa3a48c2707b9ac92" translate="yes" xml:space="preserve">
          <source>Testing the DOM API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2627720f832bbd8d2f1ccfde8980328f11cc0e" translate="yes" xml:space="preserve">
          <source>Testing whether your storage has been populated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f6e4499847811a023c6f6dc3dd87433d94d75a" translate="yes" xml:space="preserve">
          <source>Tests whether a specific WebGL capability is enabled or not for this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be7cf55f27dacf27431e1a58fd804f5afdc7c8a" translate="yes" xml:space="preserve">
          <source>Text alignment setting. Possible values: &lt;code&gt;start&lt;/code&gt; (default), &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23b563fa0842b11920ff9960656b7d5a199242c" translate="yes" xml:space="preserve">
          <source>Text alignment setting. Possible values: &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;center&lt;/code&gt;. The default value is &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c29f95e64ae0005013c81cb17b9c17dfd649e5c" translate="yes" xml:space="preserve">
          <source>Text data format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97dee68c496d31a8cce2d6a8435e54a85d5df8ff" translate="yes" xml:space="preserve">
          <source>Text event module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3aa58edd73225f8e674893d2aca06ece32b864" translate="yes" xml:space="preserve">
          <source>Text node &lt;code&gt;myTextNode&lt;/code&gt; (containing the word &quot;world&quot;) still exists. The following code attaches &lt;code&gt;myTextNode&lt;/code&gt; to the recently created &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element, &lt;code&gt;myNewPTAGnode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8b650a4c52813d68d70ebe6dfd065ec43ff1f8" translate="yes" xml:space="preserve">
          <source>Text received over a WebSocket connection is in UTF-8 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e940dbe823f5f9701c5fdca321bd18a51c37fef6" translate="yes" xml:space="preserve">
          <source>Text styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73290795d10fbf1691d7cd6b6776dec0e95650f0" translate="yes" xml:space="preserve">
          <source>Text that contains text and tags to be converted to a document fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434a277d524382b61feac92d40667dd75524d5d4" translate="yes" xml:space="preserve">
          <source>Text track mode constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16da6ba06b094ebf016baa0cb7532e3e78579f49" translate="yes" xml:space="preserve">
          <source>Text.assignedSlot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ba278be17b8815b60e7c1ed5d0a99b0eb679e0" translate="yes" xml:space="preserve">
          <source>Text.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329f305e57169d1f9c4b582117fa8fa1d1628276" translate="yes" xml:space="preserve">
          <source>Text.isElementContentWhitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a256a273078c2bf18103fc7115a1ced9669989b1" translate="yes" xml:space="preserve">
          <source>Text.replaceWholeText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8a73bb18e8004804fdf63c24ff3a10424140f1" translate="yes" xml:space="preserve">
          <source>Text.splitText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6518e3c4651aad04c639780c00ecf6b94fcc203" translate="yes" xml:space="preserve">
          <source>Text.wholeText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb9e95b8112017920b5005ccf86da7f8051f880" translate="yes" xml:space="preserve">
          <source>TextContentElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840c7e38544dbd613fa0b1f9a59f6f627ea3dd88" translate="yes" xml:space="preserve">
          <source>TextDecoder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a9f5cd5c07bb122fe6b275d3e3df802f909616" translate="yes" xml:space="preserve">
          <source>TextDecoder.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8976f4a822c961ca81a8b628b26868b88cc15ad" translate="yes" xml:space="preserve">
          <source>TextDecoder.decode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa375504ceeb8bf1552c7fe4168afdcff0a4a01f" translate="yes" xml:space="preserve">
          <source>TextDecoder.encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123d74f97a268500684c9fe231bd1e9c51afc4da" translate="yes" xml:space="preserve">
          <source>TextElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ec439dd8ac6da12ff0821c5bfa7393b4881faa" translate="yes" xml:space="preserve">
          <source>TextEncoder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43414530f6e139dee429e69d237e7aa60f9dd51e" translate="yes" xml:space="preserve">
          <source>TextEncoder.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae906f2f4e0ca5bbebfe3982819b3bbaaedcdd57" translate="yes" xml:space="preserve">
          <source>TextEncoder.encode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be9ccf534785b47f31b4bcf952993336ca9a31d" translate="yes" xml:space="preserve">
          <source>TextEncoder.encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d4a26dfeb6fe515c1bd30f6921c66e729ad5b4" translate="yes" xml:space="preserve">
          <source>TextMetrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455c83ef2b76f0a9f28b7ab7e1380b025cd4178c" translate="yes" xml:space="preserve">
          <source>TextMetrics.width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac450731b131a99f0997923cef7dae4f7cdefbed" translate="yes" xml:space="preserve">
          <source>TextPathElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98513889f3760db4255c4fb144ba683a33d65937" translate="yes" xml:space="preserve">
          <source>TextPositioningElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbddfa7a66f14d6d967a24e549d97335b814ef7" translate="yes" xml:space="preserve">
          <source>TextTrack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5d3d9df1b6a4502e654ad9559dc8b170215125" translate="yes" xml:space="preserve">
          <source>TextTrack.mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dd580697bf26d1d8d5bf3ad0bfd661986a9866" translate="yes" xml:space="preserve">
          <source>TextTrackCue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181339fc1194e6639e206b6cc783a95032d23095" translate="yes" xml:space="preserve">
          <source>Textarea</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c4ccb8f4c9336f0631f79e58e4cd3a15c0a6c5" translate="yes" xml:space="preserve">
          <source>Textual representation of the declaration block. Setting this attribute changes the style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9afd079fbdf71164bdb6f9c818f655c7cfb394" translate="yes" xml:space="preserve">
          <source>Texture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16feb774bdf38a9b1614ef183aabc8d8e8963cd6" translate="yes" xml:space="preserve">
          <source>Texture Comparison function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43ab2bdb1a699ac0f2b8c8ea318e814d67dd636" translate="yes" xml:space="preserve">
          <source>Texture comparison mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af136caac308f4480d26fad825f396b3d3a987a" translate="yes" xml:space="preserve">
          <source>Texture magnification filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b80a39952f8418ad5d0394cb706251656e5453" translate="yes" xml:space="preserve">
          <source>Texture maximum level-of-detail value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45bdb821079a833a5668f5d24dd9cdb0a55487f" translate="yes" xml:space="preserve">
          <source>Texture minification filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b2cf033f3662bef728bc4e7fbef20ad02b7a6b" translate="yes" xml:space="preserve">
          <source>Texture minimum level-of-detail value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aea0d301774c800b1cadf5513e70a5e7c53dd1" translate="yes" xml:space="preserve">
          <source>Texture mipmap level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa8824d5c3096f4df15e810b0938086516cca9b" translate="yes" xml:space="preserve">
          <source>Textures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ffd50c0639dc28d21e50495b0966545eb028de" translate="yes" xml:space="preserve">
          <source>Textures from code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c501b12471c9cc3fdee84fe6fee8f711548a2e" translate="yes" xml:space="preserve">
          <source>That brings us to the JavaScript code which makes everything work. Let's start with the global variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6b7a82e5b36cf4c7bfa9f83104f83a6041ada6" translate="yes" xml:space="preserve">
          <source>That explains the basics of &amp;ldquo;default&amp;rdquo; readable streams. We&amp;rsquo;ll explain bytestreams in a separate future article, once they are available in browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be669dfd8a044162323fdd8f11f2604c5696302" translate="yes" xml:space="preserve">
          <source>That may sound confusing, but this simple example should illustrate the concepts. First, we'll define some customer data to use in our example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7030e055c7a6fb8a94be92e13ee1b1b68da936cc" translate="yes" xml:space="preserve">
          <source>That means it's time for the remote peer to reply. It does so by calling its &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;createAnswer()&lt;/code&gt;&lt;/a&gt; method. This generates a blob of SDP which describes the connection the remote peer is willing and able to establish. This configuration lies somewhere in the union of options that both peers can support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ffd3e988e4be865ae4931a5bb918690eb61fe5" translate="yes" xml:space="preserve">
          <source>That means that the variables and constants available to the containing function are also available to the event handler when using an arrow function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14845f76efb00ff6df67c9810f690a74d88f1c19" translate="yes" xml:space="preserve">
          <source>That means we need a way to execute our drawing functions over a period of time. There are two ways to control an animation like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ec257e76e8c450c2a9db8f0c58c7e721ae4c91" translate="yes" xml:space="preserve">
          <source>That same-origin iframe needs to have a location with a different base URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93732e0ad14cacc61d954232c244cfb51569bbc" translate="yes" xml:space="preserve">
          <source>That session description is then passed into &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;myPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. This establishes the received offer as the description of the remote (caller's) end of the connection. If this is successful, the promise fulfillment handler (in the &lt;code&gt;then()&lt;/code&gt; clause) starts the process of getting access to the callee's camera and microphone using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;, adding the tracks to the connection, and so forth, as we saw previously in &lt;code&gt;invite()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30e1d57a45584b7d60d1d2d1610995297910de7" translate="yes" xml:space="preserve">
          <source>That simple function controls the gain on both nodes. All we have to do is set the value of the &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../constantsourcenode/offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; parameter. That value becomes the node's constant output value, which is fed into all of its outputs, which are, as set above, &lt;code&gt;gainNode2&lt;/code&gt; and &lt;code&gt;gainNode3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6345d5d01e088d2ead8d78bd3ddb0a6804daf5e" translate="yes" xml:space="preserve">
          <source>That's a lot of code for a &quot;simple&quot; retrieval. Here's how you can shorten it up a bit, assuming that you handle errors at the database level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99033958e4ff49a252431ea9c142a71d603200ec" translate="yes" xml:space="preserve">
          <source>That's all of the relevant HTML. The rest is just some page layout fluff and a bit of text offering a link back to this page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27b743b816c425961f203792c8f3252056e3744" translate="yes" xml:space="preserve">
          <source>That's all there is to it!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83031fa29df8478cff7d7304dd58991ccf7b7cc" translate="yes" xml:space="preserve">
          <source>That's all we need to change on the server side of the equation. Now let's consider the signaling protocol we will implement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c9eb7fae2a65f25b1d10d7033ce6c2f703e1d5" translate="yes" xml:space="preserve">
          <source>That's done by removing all shipping options currently set on the request, then set up an object named &lt;code&gt;shippingAddressErrors&lt;/code&gt; which contains a &lt;code&gt;country&lt;/code&gt; property which is an error message describing why the stated country isn't being permitted as a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d207cd213806f36c0c0d14a13842b9d8316d8994" translate="yes" xml:space="preserve">
          <source>That's it for our IIRFilter demo. This should have shown you how to use the basics, and helped you to understand what it's useful for and how it works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd70a0776f0b80e2d6ae47a2353f636b3ffb71d" translate="yes" xml:space="preserve">
          <source>The &quot;%s&quot; string is missing from the specified protocol handler URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b5055a64e4c48a8f00194f5470b8e49075b05b" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt;&quot; problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a27e7c2292c1e86b1d3cbf1f73950866dc3fe4" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;this&lt;/code&gt;&quot; problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ac4c667971b579239b684482806db4af5dbdae" translate="yes" xml:space="preserve">
          <source>The &quot;Forget&quot; button, available in Firefox's customization options, can be used to clear service workers and their caches (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1252998&quot;&gt;bug 1252998&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e2b94e9c592fc076c9f0bac3b9cd6d9989957b" translate="yes" xml:space="preserve">
          <source>The &quot;Unicode Problem&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9b36f2ee14cbbeccb6e2e4eb8108def0994d39" translate="yes" xml:space="preserve">
          <source>The &quot;last access time&quot; of origins is updated when any of these are activated/deactivated &amp;mdash; origin eviction will delete data for all these quota clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d07e815f320acda03e010ffdae31932b0fb119" translate="yes" xml:space="preserve">
          <source>The &quot;name&quot; cursor isn't unique, so there could be more than one entry with the &lt;code&gt;name&lt;/code&gt; set to &lt;code&gt;&quot;Donna&quot;&lt;/code&gt;. In that case you always get the one with the lowest key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c420089abe2f017ff09a247b6905b4f92d6df1" translate="yes" xml:space="preserve">
          <source>The &quot;noise&quot; &amp;mdash; random noise buffer with biquad filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9704f82a34013f6e3961f33c8e21a8e6c4d2c2" translate="yes" xml:space="preserve">
          <source>The &quot;pulse&quot; &amp;mdash; low frequency oscillator modulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4cd6d66ca55b8a9641fd8a823731e124f09f4b" translate="yes" xml:space="preserve">
          <source>The &quot;sweep&quot; &amp;mdash; oscillators, periodic waves, and envelopes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467b5aaff929f6df7ad2f13aac338c40ca53396b" translate="yes" xml:space="preserve">
          <source>The &amp;lt;font&amp;gt; tag is not supported in HTML5 and as a result neither is &lt;code&gt;&amp;lt;font&amp;gt;.color&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccc49f1e4872a2540f8e7d8d9ce80b2cb891b6f" translate="yes" xml:space="preserve">
          <source>The &amp;lt;font&amp;gt; tag is not supported in HTML5 and as a result neither is &lt;code&gt;&amp;lt;font&amp;gt;.face &lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4821204152a006d1d68b310d51b3b4b1fc2493d" translate="yes" xml:space="preserve">
          <source>The &amp;lt;font&amp;gt; tag is not supported in HTML5 and as a result neither is &lt;code&gt;&amp;lt;font&amp;gt;.size &lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b991e80a7fed0de173ee1d9ac6e472ac5bd85f" translate="yes" xml:space="preserve">
          <source>The 0-based index of the character &lt;em&gt;after&lt;/em&gt; the last selected character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347d582cd0f23ec0dfb1a0664968250af8a54728" translate="yes" xml:space="preserve">
          <source>The 0-based index of the first selected character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab07bb4222a9fcb3f06c52468ff37a0d0c0ea5f" translate="yes" xml:space="preserve">
          <source>The 32-bit integer which identifies the source of the RTP packets this &lt;code&gt;RTCRtpStreamStats&lt;/code&gt; object covers. This value is generated per the &lt;a href=&quot;https://tools.ietf.org/html/rfc3550&quot;&gt;RFC 3550&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7b7355491ef54367f1612dbd77e45463b279e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#new-cookie_path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; parameter of a new cookie can accept only &lt;em&gt;absolute&lt;/em&gt; paths. If you want to use &lt;em&gt;relative&lt;/em&gt; paths, you'll need to convert them. The following function can translate &lt;em&gt;relative&lt;/em&gt; paths to &lt;em&gt;absolute&lt;/em&gt; paths. It is a general-purpose function, but can be of course successfully used for the &lt;a href=&quot;#new-cookie_path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; parameter of a new cookie, as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525d0d3e57692c2aacf32d55f6e3b4605838d745" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../document/getelementsbytagname&quot;&gt;&lt;code&gt;document.getElementsByTagName()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a389cc837013ab6f0aeae43ce9dbff9230ca9274" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../document/images&quot;&gt;&lt;code&gt;document.images&lt;/code&gt;&lt;/a&gt; collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e6dbed37924ce04ec0012aa5be741f7a00079b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt; provides a &lt;code&gt;toDataURL()&lt;/code&gt; method, which is useful when saving images. It returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/data_URIs&quot;&gt;data URI&lt;/a&gt; containing a representation of the image in the format specified by the &lt;code&gt;type&lt;/code&gt; parameter (defaults to &lt;a href=&quot;https://en.wikipedia.org/wiki/Portable_Network_Graphics&quot;&gt;PNG&lt;/a&gt;). The returned image is in a resolution of 96 dpi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352fa49cf59157a1c36d140a3d8155cae200ab24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object represents the underlying pixel data of an area of a canvas object. It contains the following read-only attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90ed3467fcf4718928134c4f95e6857c1138f6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../abstractworker&quot;&gt;&lt;code&gt;AbstractWorker&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539f4e58b05d9fe794e2a3d3eb1c86059e97a808" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;onfinish&lt;/strong&gt;&lt;/code&gt; property (from the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt;) is the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/finish&quot;&gt;finish&lt;/a&gt;&lt;/code&gt; event. This event is sent when the animation finishes playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6be318d4bef30a26d10a930ff03b43e417443d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../animationevent&quot;&gt;&lt;code&gt;AnimationEvent&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b6563bf677476b1939b0be6736cb4652af1424" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../animationtimeline/currenttime&quot;&gt;current time&lt;/a&gt; of the animation in milliseconds. If the &lt;code&gt;KeyframeEffect&lt;/code&gt; is not associated with an &lt;code&gt;Animation&lt;/code&gt;, its value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676b0143ad4a7d8dc9971f37f7fbcbd34fd6d93e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; comes with a &lt;code&gt;&lt;a href=&quot;../audiobuffersourcenode/playbackrate&quot;&gt;playbackRate&lt;/a&gt;&lt;/code&gt; property. Let's expose that to our UI, so we can speed up and slow down our sample. We'll do that in the same sort of way as before:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91ceca55b06c17cc15cff8f646b6739a4052a5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; in which all the audio nodes live.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b400809a5d7578938ec30acd42ca92a4a3a6f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;createWaveTable()&lt;/strong&gt;&lt;/code&gt; is now &lt;em&gt;obsolete&lt;/em&gt;; you should instead use the method &lt;a href=&quot;../baseaudiocontext/createperiodicwave&quot;&gt;&lt;code&gt;createPeriodicWave()&lt;/code&gt;&lt;/a&gt;. It was the older method for creating a periodic waveform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e27f76e86f7689345b8d295a00d910bfd4416f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt; object that was used to construct this &lt;code&gt;AudioNode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2607f0e497faf616efceb5e898d640d146f507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audiocontextoptions&quot;&gt;&lt;code&gt;AudioContextOptions&lt;/code&gt;&lt;/a&gt; dictionary (used when instantiating an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;) may contain a property named &lt;code&gt;&lt;strong&gt;latencyHint&lt;/strong&gt;&lt;/code&gt;, which indicates the &lt;em&gt;preferred&lt;/em&gt; maximum latency in seconds for the audio context. The value is specified either as a member of the string enum &lt;a href=&quot;../audiocontextlatencycategory&quot;&gt;&lt;code&gt;AudioContextLatencyCategory&lt;/code&gt;&lt;/a&gt; or a double-precision value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cd8b639bba7408c71cd269d2f9ec9923a5cb3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audiocontextoptions&quot;&gt;&lt;code&gt;AudioContextOptions&lt;/code&gt;&lt;/a&gt; dictionary (used when instantiating an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;) may contain a property named &lt;code&gt;&lt;strong&gt;sampleRate&lt;/strong&gt;&lt;/code&gt;, which indicates the sample rate to use for the new context. The value must be a floating-point value indicating the sample rate, in samples per second, for which to configure the new context; additionally, the value must be one which is supported by &lt;a href=&quot;../audiobuffer/samplerate&quot;&gt;&lt;code&gt;AudioBuffer.sampleRate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62ed77111312f54e149d70eb3d5ee2a4f6f43c6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audionode&quot;&gt;&lt;code&gt;AudioNode&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; to which to connect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe26c90a16267a2d1ae336534cf94c149c2ea74a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audionode/channelcount&quot;&gt;&lt;code&gt;AudioNode.channelCount&lt;/code&gt;&lt;/a&gt; property can be set between 0 and this value (both included). If &lt;code&gt;maxChannelCount&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, like in &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt;, the channel count cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dd51ddf184cb1eb0472ae2031a2054b554a52b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its &lt;a href=&quot;../audioparam/value&quot;&gt;&lt;code&gt;AudioParam.value&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e1f0f88ae192729e356a1c5e2c699ba5facba1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../baseaudiocontext/samplerate&quot;&gt;&lt;code&gt;sampleRate&lt;/code&gt;&lt;/a&gt; to be used by the &lt;code&gt;AudioContext&lt;/code&gt;, specified in samples per second. The value may be any value supported by &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt;. If not specified, the preferred sample rate for the context's output device is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc8863130996aa2c4ff1e6a3822d3c13c32ea23" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; containing the media data is available in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event's &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609bc0b19503b538c7d69842c43fe309aea0ea1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; from which to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fb71200a0124cccecf37c6f43ede19ba6971fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../blobevent&quot;&gt;&lt;code&gt;BlobEvent&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cf74dd1cb7adb66c4d51e2beaba4615b80a4bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../body&quot;&gt;&lt;code&gt;Body&lt;/code&gt;&lt;/a&gt; mixin defines the following methods to extract a body (implemented by both &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;). These all return a promise that is eventually resolved with the actual content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47913d3e6728b4a518c4b67095e123c37e9eba7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../body&quot;&gt;&lt;code&gt;Body&lt;/code&gt;&lt;/a&gt; mixin now includes the &lt;a href=&quot;../body/body&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; property, which is a simple getter exposing the body contents as a readable stream. This mixin is implemented by both the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interfaces, so it is available on both, although consuming the stream of a response body is perhaps a bit more obvious.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3816287c2bccba9d9deacccb36e7f23e47809c31" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../canvascapturemediastreamtrack&quot;&gt;&lt;code&gt;CanvasCaptureMediaStreamTrack&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;requestFrame()&lt;/code&gt; requests that a frame be captured from the canvas and sent to the stream. Applications that need to carefully control the timing of rendering and frame capture can use &lt;code&gt;requestFrame()&lt;/code&gt; to directly specify when it's time to capture a frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae47cf5511f62b28cd8f1b05980ae8dbd06db586" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../canvascapturemediastreamtrack&quot;&gt;&lt;code&gt;CanvasCaptureMediaStreamTrack&lt;/code&gt;&lt;/a&gt;&lt;code&gt;canvas&lt;/code&gt; read-only property returns the &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt; from which frames are being captured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a23c339a1b21b9dc850bbbf87e4afec377391cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;fillText()&lt;/strong&gt;&lt;/code&gt;, part of the Canvas 2D API, draws a text string at the specified coordinates, filling the string's characters with the current &lt;a href=&quot;fillstyle&quot;&gt;&lt;code&gt;fillStyle&lt;/code&gt;&lt;/a&gt;. An optional parameter allows specifying a maximum width for the rendered text, which the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; will achieve by condensing the text or by using a lower font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46e44e28674eaee4c2e743653690baf3e3e3d1b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getImageData()&lt;/strong&gt;&lt;/code&gt; of the Canvas 2D API returns an &lt;a href=&quot;../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object representing the underlying pixel data for a specified portion of the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ef7c81cf010f1617e5f1216dc433c43d817c0c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;lineTo()&lt;/strong&gt;&lt;/code&gt;, part of the Canvas 2D API, adds a straight line to the current sub-path by connecting the sub-path's last point to the specified &lt;code&gt;(x, y)&lt;/code&gt; coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325fd76ae31b289a0278a1c2597251112f617e42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;strokeText()&lt;/strong&gt;&lt;/code&gt;, part of the Canvas 2D API, strokes &amp;mdash; that is, draws the outlines of &amp;mdash; the characters of a text string at the specified coordinates. An optional parameter allows specifying a maximum width for the rendered text, which the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; will achieve by condensing the text or by using a lower font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f73e261d04f5a6236b34f74d247946dc7852b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../channel_messaging_api&quot;&gt;Channel Messaging API&lt;/a&gt; allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, or two documents via a &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0a8426289fd8df6f778dcb8dc43478a833ebe5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; pure interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bf6ecd9728c56ddbb15176a6724cbec2eaed63" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clients&quot;&gt;&lt;code&gt;Clients&lt;/code&gt;&lt;/a&gt; object associated with the specific worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6836cb10bcfd290043f3d3bbaded85fee5cc8ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clients/get&quot;&gt;&lt;code&gt;Clients.get()&lt;/code&gt;&lt;/a&gt; method could then be passed this ID to retrieve the associated client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43295f469f84d90f576c560456a9c36fc20ff0a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;writeText()&lt;/code&gt; property writes the specified text string to the system clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98cc2069f811bc462a3951d6f7c0e61187bc2ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;write()&lt;/code&gt; writes arbitrary data, such as images, to the clipboard. This can be used to implement cut and copy functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f2c82ca4ef535686110973e0361a7fb1c0249e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; object used to access the system clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670437029cc81427ea8408b89e008f4ee19b2ad4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clipboard_api&quot;&gt;Clipboard API&lt;/a&gt; adds to the &lt;strong&gt;&lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface the read-only &lt;code&gt;clipboard&lt;/code&gt; property, which returns the &lt;a href=&quot;../clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; object used to read and write the clipboard's contents. The Clipboard API can be used to implement cut, copy, and paste features within a web application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e4372f98c72f88fbe89d3b0e3913b54b468543" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../clipboardevent&quot;&gt;&lt;code&gt;ClipboardEvent&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ea0cd344acee856a650c047ec8b50bcf9ebce9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; used to control the values of &lt;code&gt;gainNode2&lt;/code&gt; and &lt;code&gt;gainNode3&lt;/code&gt; together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5c2b1cd5cf165db45ee5a2bc617f98d193274b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../coordinates&quot;&gt;&lt;code&gt;Coordinates&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017d520b9cb1f3d30c7e7bdd7bb3b3e95bffa809" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../coordinates&quot;&gt;&lt;code&gt;Coordinates&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;&lt;strong&gt;longitude&lt;/strong&gt;&lt;/code&gt; property is a double-precision floating point value which represents the longitude of a geographical position, specified in decimal degrees. Together with a &lt;a href=&quot;../domtimestamp&quot;&gt;&lt;code&gt;DOMTimeStamp&lt;/code&gt;&lt;/a&gt; indicating a time of measurement, the &lt;code&gt;Coordinates&lt;/code&gt; object is part of the &lt;a href=&quot;../position&quot;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/a&gt; interface which is the object type returned by Geolocation API functions that obtain and return a geographical position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7e7de7fc1e3cad7dde7b705fba836484a13781" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../credentialscontainer&quot;&gt;&lt;code&gt;CredentialsContainer&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c384d36c94fa5ba62ca51aeaf6b0100959c30842" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../css&quot;&gt;&lt;code&gt;CSS&lt;/code&gt;&lt;/a&gt; interface where this static method resides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43eb71ddd348e54de1a01fcd6ab08497046c88d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../csssupportsrule&quot;&gt;&lt;code&gt;CSSSupportsRule&lt;/code&gt;&lt;/a&gt; CSSOM class allowing to manipulate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@supports&quot;&gt;&lt;code&gt;@supports&lt;/code&gt;&lt;/a&gt; at-rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bd684a097dde67bff26484c6f7ae3e76bd499e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../customelementregistry&quot;&gt;&lt;code&gt;CustomElementRegistry&lt;/code&gt;&lt;/a&gt; already contains an entry with the same name or the same constructor (or is otherwise already defined), or &lt;code&gt;extends&lt;/code&gt; is specified and it is a &lt;a href=&quot;https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name&quot;&gt;valid custom element name&lt;/a&gt;, or &lt;code&gt;extends&lt;/code&gt; is specified but the element it is trying to extend is an unknown element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85867587e9c7302f01d0083ce23a92504c7b474" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;drag data's&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../datatransfer/types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; property returns a list of MIME-type like &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#text&quot;&gt;text/plain&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#image&quot;&gt;image/jpeg&lt;/a&gt;. You can also create your own types. The most commonly used types are listed in the article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types&quot;&gt;Recommended Drag Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5080d3bf1b0955d9deadec89155a6d567f0eab04" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;drag data&lt;/code&gt;&lt;/a&gt; contains two pieces of information, the type (or format) of the data, and the data value. The format is a type string (such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#text&quot;&gt;text/plain&lt;/a&gt; for text data), and the value is a string of text. When the drag begins, you add data by providing a type and the data. During the drag, in an event listener for the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events, you use the data types of the data being dragged to check whether a drop is allowed. For instance, a drop target that accepts links would check for the link type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt;. During a drop event, a listener would retrieve the data being dragged and insert it at the drop location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba2a4351a79b213ce5de3af5e3e08b418871903" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method takes one argument, the type of data to retrieve. It will return the string value that was set when &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; was called at the beginning of the drag operation. An empty string will be returned if data of that type does not exist. Naturally, though, you would likely know that the right type of data was available, as it was previously checked during a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b45ed36801c15ee5d241a05bd88c29a33bccaa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; object at the specified index in the item list. If the index is less than zero or greater than or equal to the number of items in the list (as indicated by the list's &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property, &lt;code&gt;undefined&lt;/code&gt; is returned. The returned value is never &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0639a424e212a32a83251afec233357c0ee939" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;clear()&lt;/code&gt; removes all &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; objects from the drag data items list, leaving the list empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffac955a9e998b79de68149b1116f85aba4961c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b88fc001831d618daeb78de3b9091c1c87dac12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; implemented the new interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2bc59a6e2b1f0e2beee3e361a71ae92028a3af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; equivalent: &lt;a href=&quot;../document/onfullscreenchange&quot;&gt;&lt;code&gt;onfullscreenchange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1846210e1f7fdc9ca264e44d27021f587314c11b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;exitFullscreen()&lt;/strong&gt;&lt;/code&gt; requests that the element on this document which is currently being presented in full-screen mode be taken out of full-screen mode, restoring the previous state of the screen. This usually reverses the effects of a previous call to &lt;a href=&quot;../element/requestfullscreen&quot;&gt;&lt;code&gt;Element.requestFullscreen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aefa5673a8e53749b7a4ea72651a5d2047db12e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getElementById()&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object representing the element whose &lt;a href=&quot;../element/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; property matches the specified string. Since element IDs are required to be unique if specified, they're a useful way to get access to a specific element quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c771380566dca0923c1752c663e8d08074d279" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;querySelector()&lt;/strong&gt;&lt;/code&gt; returns the first &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; within the document that matches the specified selector, or group of selectors. If no matches are found, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a130293856593c0bbcf40ea8f14277e3988325e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;&lt;strong&gt;importNode()&lt;/strong&gt;&lt;/code&gt; method creates a copy of a &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; from another document, to be inserted into the current document later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf3e6fe5ba2c3caaa9c1b36515ef7ea4dc1d0c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; provides some additional information that can be useful when developing fullscreen web applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4c6302221554f5bff2bc717e313d5c61a3f603" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; is still loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26cc5e7899cca494bdeb414a2c7b30f3c5b09ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea02c959a609bfc3d0896e796bae9ab409eb943" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../domimplementation&quot;&gt;&lt;code&gt;DOMImplementation&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fa12afae2063e268bfa5bb98a6fa97fa01fe1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;toJSON()&lt;/code&gt; returns a &lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt; object giving the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; form of the point object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da80233becc6db24f153922f9ce8f2807a1821df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dompointreadonly/tojson&quot;&gt;&lt;code&gt;DOMPointReadOnly.toJSON()&lt;/code&gt;&lt;/a&gt; method returns a &lt;code&gt;DOMPointInit&lt;/code&gt; object that describes the same point as the original point. By inheritance, this method is also available as &lt;a href=&quot;../dompointreadonly/tojson&quot;&gt;&lt;code&gt;DOMPoint.toJSON()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d458a68b38dd09963b7bd8f4cc0d17bc8a278a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; to be escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c4b7d09d76dc02ce127adae47456632a1b4d00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; to be written to the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79966d644d4612a1a4599de5e6cdabd91003ea41" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;EffectTiming&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;delay&lt;/code&gt; property in the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; represents the number of milliseconds to delay the start of the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9550c0c838f2b6341406d4da4d703d92950be238" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;EffectTiming&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;easing&lt;/code&gt; property in the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; specifies the timing function used to scale the time to produce easing effects, where &lt;em&gt;easing&lt;/em&gt; is the rate of the animation's change over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ad20c3d4e819dd01718d98bd1cc0b1bc1d9296" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; interfaces implemented the new interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b91714d400ffac7683d0d10a94830145d016f1c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; for which to get the computed style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289c112c77407b4984778916d60c4d9c015c32a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;onfullscreenchange&lt;/strong&gt;&lt;/code&gt;property is an event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; event that is fired when the element has transitioned into or out of full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aed3f09dbd8656d89e9745a17fd310da71c5b6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;onfullscreenerror&lt;/strong&gt;&lt;/code&gt; property is an event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenerror&quot;&gt;fullscreenerror&lt;/a&gt;&lt;/code&gt; event which is sent to the element when an error occurs while attempting to transition into or out of full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01c52c2c9eba7c9bd072f4667d58865ccbeb3b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;animate()&lt;/code&gt; method is a shortcut method which creates a new &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt;, applies it to the element, then plays the animation. It returns the created &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeca780386eb82c791db23632bd14c02209777f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72d98fa30e6d353382b5f3339586838bb927d7b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getElementsByClassName()&lt;/strong&gt;&lt;/code&gt; returns a live &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt; which contains every descendant element which has the specified class name or names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e47a0ca4728b4f7a0296b2330e66b5e583f87c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;querySelectorAll()&lt;/strong&gt;&lt;/code&gt; returns a static (not live) &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; representing a list of elements matching the specified group of selectors which are descendants of the element on which the method was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e58d06724160890e4318fd238b20c2a37179c9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;querySelectorAll()&lt;/strong&gt;&lt;/code&gt; returns a static (not live) &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; representing a list of the document's elements that match the specified group of selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279032a900cd359a78072d0135af70f3bfe2077f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;removeAttribute()&lt;/code&gt; removes the attribute with the specified name from the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcca60809b7fb865fde303172667796812f3c1e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object that's currently in full-screen mode; if full-screen mode isn't currently in use by the &lt;code&gt;document&lt;/code&gt;, the returned value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b534f9ed20403733f5af4261ad0d07ee9b898a43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;innerHTML&lt;/code&gt; gets or sets the HTML or XML markup contained within the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e2fadd35bb06a2fd1b7d5add6a34a9ac136292" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; to cease observing. If the specified element isn't being observed, this method does nothing and no exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d123f528e61557aa106d104e2441d23d80d6c52e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; which currently has focus, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt; if there is no focused element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8995b3ed56d2c2abfdc9b2c4a5240a2be86bbb4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element/animate&quot;&gt;&lt;code&gt;Element.animate()&lt;/code&gt;&lt;/a&gt; method will immediately run after it is called. To prevent the cake from eating itself up before the user has had the chance to click on it, we call &lt;a href=&quot;../animation/pause&quot;&gt;&lt;code&gt;Animation.pause()&lt;/code&gt;&lt;/a&gt; on it immediately after it is defined, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2ec27ac45cc3cd3bdc596745406d77ea14396e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../element/name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute can only be applied in (X)HTML documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb259c730cf3c0414db0f0126315efaacb48a49" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; interface is accessible from within the handler function, via the event object passed as the first argument. The following simple example shows how an event object is passed to the event handler function, and can be used from within one such function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fc74f1249bfe5cd8ccd5453a9d7d0b5f21c552" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;preventDefault()&lt;/code&gt; method tells the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls &lt;a href=&quot;stoppropagation&quot;&gt;&lt;code&gt;stopPropagation()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stopimmediatepropagation&quot;&gt;&lt;code&gt;stopImmediatePropagation()&lt;/code&gt;&lt;/a&gt;, either of which terminates propagation at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4b5abc322096e9a6ac94fe54c044ad06b5b95b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;bubbles&lt;/strong&gt;&lt;/code&gt; indicates whether the event bubbles up through the DOM or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f630e188e8d02c7748f811e353a15cbc34f4ee2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;returnValue&lt;/strong&gt;&lt;/code&gt; property indicates if the default action for this event has been prevented or not. It is set to &lt;code&gt;true&lt;/code&gt; by default, allowing the default action to occur. Setting this property to &lt;code&gt;false&lt;/code&gt; prevents the default action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0acae5c7d191d63bb711eaae830ad9bc653baa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; function of the event handler to remove from the event target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154785f052e7e11619582d94d69b6142768d88dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;handleEvent()&lt;/strong&gt;&lt;/code&gt; method is called by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; when an event is sent to the &lt;code&gt;EventListener&lt;/code&gt;, in order to handle events that occur on an observed &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87afcf80858abfc7da4cff184b29591aaa7f2fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; which will be invoked to handle &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; events sent to the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6f8ac60e0b2d80db8e05b6fa64a1bd5b744597" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; losing focus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1fe6da7e3f7b13a887021063e852ee17ac18b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;addEventListener()&lt;/strong&gt;&lt;/code&gt; sets up a function that will be called whenever the specified event is delivered to the target. Common targets are &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, but the target may be any object that supports events (such as &lt;code&gt;&lt;a href=&quot;../xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b953f3764c927f0340cb0e913c46f74d043648b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; receiving focus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a801e80359a9a387f04625d78c1cdf3f880c18" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; the pointing device entered to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ab6705b2df74c55d3b1d5e70ad543170644498" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; the pointing device exited from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3478f1797f9f4972810c9bc9c2a5d27bf7610bf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt; allows you to fetch resources across the network, providing a modern alternative to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/User%3Amaybe/webidl_mdn/XMLHttpRequest&quot;&gt;XHR&lt;/a&gt;. It has a number of advantages, and what is really nice about it is that browsers have recently added the ability to consume a fetch response as a readable stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5e56111b8b7870191271ac293ec3ab902d1e36" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt; provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt; method that provides an easy, logical way to fetch resources asynchronously across the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2841789c120c2bbb0eb269edc1e3d9b1fa292258" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt; provides an interface for fetching resources (including across the network). It will seem familiar to anyone who has used &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, but it provides a more powerful and flexible feature set. This article explains some of the basic concepts of the Fetch API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f4fc3ce52848837c965e2980727fadb8118898" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; object provided by the DOM lists all of the files selected by the user, each specified as a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object. You can determine how many files the user selected by checking the value of the file list's &lt;code&gt;length&lt;/code&gt; attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426a967cf9e5ef42ace98a06ac142ce8cd80f177" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;readAsArrayBuffer()&lt;/code&gt; method is used to start reading the contents of a specified &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. When the read operation is finished, the &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; becomes &lt;code&gt;DONE&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadend&quot;&gt;loadend&lt;/a&gt;&lt;/code&gt; is triggered. At that time, the &lt;a href=&quot;result&quot;&gt;&lt;code&gt;result&lt;/code&gt;&lt;/a&gt; attribute contains an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; representing the file's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65953e187212ec421d76904e0ee3a62794dd3cc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../focusevent&quot;&gt;&lt;code&gt;FocusEvent&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fcbe7208813e9f0f47e2ea63cbd5f4afb93dbb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; constructor lets you compile a set of key/value pairs to send using &lt;code&gt;XMLHttpRequest&lt;/code&gt;. Its primary use is in sending form data, but can also be used independently from a form in order to transmit user keyed data. The transmitted data is in the same format the form's &lt;code&gt;submit()&lt;/code&gt; method uses to send data, if the form's encoding type were set to &quot;multipart/form-data&quot;. FormData objects can be utilized in a number of ways with an &lt;code&gt;XMLHttpRequest&lt;/code&gt;. For examples, and explanations of how one can utilize FormData with XMLHttpRequests, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/FormData/Using_FormData_Objects&quot;&gt;Using FormData Objects&lt;/a&gt; page. For didactic purposes here is &lt;strong&gt;a &lt;em&gt;translation&lt;/em&gt; of &lt;a href=&quot;#A_little_vanilla_framework&quot;&gt;the previous example&lt;/a&gt; transformed to use the &lt;code&gt;FormData&lt;/code&gt; API&lt;/strong&gt;. Note the brevity of the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1843a4716e9cad494e96023090098da0935d5047" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../fullscreenoptions&quot;&gt;&lt;code&gt;FullscreenOptions&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;navigationUI&lt;/strong&gt;&lt;/code&gt; property is used when calling &lt;a href=&quot;../element/requestfullscreen&quot;&gt;&lt;code&gt;requestFullscreen()&lt;/code&gt;&lt;/a&gt; to specify to what extent the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; should include its standard user interface while the element is presented in full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f30085cbd1be3cbbc92d5dc4b12dd50a4cfea2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; event handler &lt;code&gt;onpointerdown&lt;/code&gt; is used to specify the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event, which is fired when the pointing device is initially pressed. This event can be sent to &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa552163ae8fdda708e7a48d010892d638de7a95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../globaleventhandlers&quot;&gt;global event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; event, which is delivered to a &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; when the pointer (mouse cursor, fingertip, etc.) exits its hit test area (for example, if the cursor exits an &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;'s content area). This event is part of the &lt;a href=&quot;../pointer_events&quot;&gt;Pointer Events API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef30253fc24d3b5c6e7ecab27069f31a295a1ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; interface allows you to create your own headers object via the &lt;a href=&quot;../headers/headers&quot;&gt;&lt;code&gt;Headers()&lt;/code&gt;&lt;/a&gt; constructor. A headers object is a simple multi-map of names to values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9d949002c52ca82e2336f861cb40a6536f9156" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../history&quot;&gt;&lt;code&gt;History&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa626df32253e2c362a9b9d685c3dea0e3341e4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;&lt;code&gt;captureStream()&lt;/code&gt; method returns a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; which includes a &lt;a href=&quot;../canvascapturemediastreamtrack&quot;&gt;&lt;code&gt;CanvasCaptureMediaStreamTrack&lt;/code&gt;&lt;/a&gt; containing a real-time video capture of the canvas's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e7c356e918da3508fc840a96c4aad48f7fcaec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;item()&lt;/code&gt; returns the node located at the specified offset into the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fcb2e52ea3e2b8480bad9eee3dc18f3d846e8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;hidden&lt;/code&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;true&lt;/code&gt; if the element is hidden; otherwise the value is &lt;code&gt;false&lt;/code&gt;. This is quite different from using the CSS property &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; to control the visibility of an element. The &lt;code&gt;hidden&lt;/code&gt; property applies to all presentation modes and should not be used to hide content that is meant to be directly accessible to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0164cdf9ba93b21486f4bb1a7dec9d792f576024" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlfontelement&quot;&gt;&lt;code&gt;HTMLFontElement&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d07d758489aebe897bb5417833e5ecc2765b69" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlformelement&quot;&gt;&lt;code&gt;HTMLFormElement&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; listing all the form controls contained in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element. Independently, you can obtain just the number of form controls using the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82dcb2e399ec4112e41f8e121e2316fcaa132f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlhyperlinkelementutils&quot;&gt;&lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22ff66b2c53fb8dce415a13b0802c3dd556a03e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlhyperlinkelementutils&quot;&gt;&lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt;&lt;/a&gt; mixin it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea2adee4f2883689ec2dc9576fe10f5dd169502" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlhyperlinkelementutils/origin&quot;&gt;&lt;code&gt;HTMLHyperlinkElementUtils.origin&lt;/code&gt;&lt;/a&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48bc2df32e29811b8ab59e5f30d6c5925c4ac44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;load()&lt;/strong&gt;&lt;/code&gt; resets the media element to its initial state and begins the process of selecting a media source and loading the media in preparation for playback to begin at the beginning. The amount of media data that is prefetched is determined by the value of the element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-preload&quot;&gt;preload&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c29a13831f57a31c8a7e0b5fd301d616ba1117" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;play()&lt;/strong&gt;&lt;/code&gt; attempts to begin playback of the media. It returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which is resolved when playback has been successfully started. Failure to begin playback for any reason, such as permission issues, result in the promise being rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa871b1f815319840ffe8e77397365fb3ea02104" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;frame&lt;/strong&gt;&lt;/code&gt; property is a string that indicates which of the table's exterior borders should be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c877c9fe06cf7e3ab6eeade379c1115e0e37c259" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmltimeelement&quot;&gt;&lt;code&gt;HTMLTimeElement&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2481393a26edacc2ff7733a64644838516434b29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlvideoelement/getvideoplaybackquality&quot;&gt;&lt;code&gt;HTMLVideoElement.getVideoPlaybackQuality()&lt;/code&gt;&lt;/a&gt; method for constructing and returning this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a579c8b19ee0102feb125fd198d5ae462460f4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; has been deleted or removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6895b8e5398a0e1f8e9628fc77df3dd9afc3f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; has been deleted or removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbcc3119570f7e8834349a747e9e648e2ba6d41" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; that the cursor is iterating over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9dc5cba51e86ed27bc06635baca597c2247706" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../indexeddb_api/basic_concepts_behind_indexeddb#gloss_keypath&quot;&gt;key path&lt;/a&gt; to be used by the new object store. If empty or not specified, the object store is created without a key path and uses &lt;a href=&quot;../indexeddb_api/basic_concepts_behind_indexeddb#gloss_outofline_key&quot;&gt;out-of-line keys&lt;/a&gt;. You can also pass in an array as a &lt;code&gt;keyPath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c499c4d7f9f72686e3bc7cd3583af857329d556" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersection_observer_api&quot;&gt;Intersection Observer API&lt;/a&gt; makes it easy to be asynchronously notified when elements of interest become more or less obscured by a shared ancestor node or element, including the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; itself. In this article, we'll build a mock blog which has a number of ads interspersed among the contents of the page, then use the Intersection Observer API to track how much time each ad is visible to the user. When an ad exceeds one minute of visible time, it will be replaced with a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70733270e420dd8c994c3d719f30db5b2b9369ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; for which the callback is being invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9cd569b199cd0947632631de0a316e400a1eee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;root&lt;/code&gt; property identifies the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; whose bounds are treated as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/bounding_box&quot;&gt;bounding box&lt;/a&gt; of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt; for the element which is the observer's target. If the &lt;code&gt;root&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the bounds of the actual document viewport are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6aff6fc8be4349cadec706156f6d6f2c1ebc7c4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;rootMargin&lt;/code&gt; property is a string with syntax similar to that of the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; property. Each side of the rectangle represented by &lt;code&gt;rootMargin&lt;/code&gt; is added to the corresponding side in the &lt;a href=&quot;root&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/bounding_box&quot;&gt;bounding box&lt;/a&gt; before the intersection test is performed. This lets you, for example, adjust the bounds outward so that the target element is considered 100% visible even if a certain number of pixels worth of width or height is clipped away, or treat the target as partially hidden if an edge is too close to the edge of the root's bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f2faf1728bea7c5b0ad4e4661544fe3d01593b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;thresholds&lt;/code&gt; property returns the list of intersection thresholds that was specified when the observer was instantiated with &lt;a href=&quot;intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver()&lt;/code&gt;&lt;/a&gt;. If only one threshold ratio was provided when instanitating the object, this will be an array containing that single value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d4bf9aa04d587ab6a886f7e1f3008759276c1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;disconnect()&lt;/strong&gt;&lt;/code&gt; stops watching all of its target elements for visibility changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4883585036f580a34940e9cc8663c164906df48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;observe()&lt;/strong&gt;&lt;/code&gt; adds an element to the set of target elements being watched by the &lt;code&gt;IntersectionObserver&lt;/code&gt;. One observer has one set of thresholds and one root, but can watch multiple target elements for visibility changes in keeping with those. To stop observing the element, call &lt;a href=&quot;unobserve&quot;&gt;&lt;code&gt;IntersectionObserver.unobserve()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b0cc63cb32bd4863216f42a869fdee6180aa22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;takeRecords()&lt;/strong&gt;&lt;/code&gt; returns an array of &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; objects, one for each targeted element which has experienced an intersection change since the last time the intersections were checked, either explicitly through a call to this method or implicitly by an automatic call to the observer's callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fbd52beefcde9e5a840f7154c8e2bf612dca24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;unobserve()&lt;/strong&gt;&lt;/code&gt; instructs the &lt;code&gt;IntersectionObserver&lt;/code&gt; to stop observing the specified target element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd7bdbe333820de50f0305c641024d63c1521fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;boundingClientRect&lt;/code&gt; property returns a &lt;a href=&quot;../domrectreadonly&quot;&gt;&lt;code&gt;DOMRectReadOnly&lt;/code&gt;&lt;/a&gt; which in essence describes a rectangle describing the smallest rectangle that contains the entire target element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2dc3b5d422b07cb9b94a2f2567fce666991552" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;intersectionRatio&lt;/code&gt; property tells you how much of the target element is currently visible within the root's intersection ratio, as a value between 0.0 and 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb91c7f76705f56ca230030ea3896b8b2ac8da4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;intersectionRect&lt;/code&gt; property is a &lt;a href=&quot;../domrectreadonly&quot;&gt;&lt;code&gt;DOMRectReadOnly&lt;/code&gt;&lt;/a&gt; object which describes the smallest rectangle that contains the entire portion of the target element which is currently visible within the intersection root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1dd168f99861a95c3f9e061625d4c1673ac3f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;isIntersecting&lt;/code&gt; property is a Boolean value which is &lt;code&gt;true&lt;/code&gt; if the target element intersects with the intersection observer's root. If this is &lt;code&gt;true&lt;/code&gt;, then, the &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; describes a transition into a state of intersection; if it's &lt;code&gt;false&lt;/code&gt;, then you know the transition is from intersecting to not-intersecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c95a23267cfd5483160b0ac052b0b030c085477" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;rootBounds&lt;/code&gt; property is a &lt;a href=&quot;../domrectreadonly&quot;&gt;&lt;code&gt;DOMRectReadOnly&lt;/code&gt;&lt;/a&gt; corresponding to the &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;'s root intersection rectangle, offset by the &lt;a href=&quot;../intersectionobserver/rootmargin&quot;&gt;&lt;code&gt;IntersectionObserver.rootMargin&lt;/code&gt;&lt;/a&gt; if one is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f5d3c562faf8fee98f7927cfd3affd0953377d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;target&lt;/code&gt; property indicates which targeted &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; has changed its amount of intersection with the intersection root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59933671d9eecc9a69d6a29bc09395acb71b5711" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; interface's read-only &lt;code&gt;time&lt;/code&gt; property is a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; that indicates the time at which the intersection change occurred relative to the time at which the document was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba391c1537877596d997e406643508119d23567" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../keyboardevent&quot;&gt;&lt;code&gt;KeyboardEvent&lt;/code&gt;&lt;/a&gt; this method belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8391bec7e6304f370659f3bf489fd54ef382522a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../keyframeeffect/composite&quot;&gt;&lt;code&gt;KeyframeEffect.composite&lt;/code&gt;&lt;/a&gt; operation used to combine the values specified in this keyframe with the underlying value. This will be &lt;code&gt;auto&lt;/code&gt; if the composite operation specified on the effect is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24198e7930d4e5195223bb1ffeefb91b99fa454b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d39b6cea2c8e524414fd909124873019d18dc4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../media_capabilities_api&quot;&gt;Media Capabilities API&lt;/a&gt; enables real time feedback about media playback to better enable adaptative streaming. It provides information about the audio and video decoding and encoding abilities of the device, exposing information such as whether a media configuration is supported and whether playback should be smooth and power efficient. In the future, it will provide access to display property information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4ad52fe95cfb4fcd8a2d62176bfa396da733a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediacapabilities&quot;&gt;&lt;code&gt;MediaCapabilities&lt;/code&gt;&lt;/a&gt; is published through the &lt;a href=&quot;../navigator/mediacapabilities&quot;&gt;&lt;code&gt;navigator.mediaCapabilities&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WorkerNavigator/mediaCapabilities&quot;&gt;&lt;code&gt;WorkerNavigator.mediaCapabilities&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034be947f85b834321d70af200eb25561c256b19" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediacapabilities/decodinginfo&quot;&gt;&lt;code&gt;MediaCapabilities.decodingInfo()&lt;/code&gt;&lt;/a&gt; method takes as a parameter a media decoding configuration. There are very specific ways to go about creating the configuration defined by the &lt;a href=&quot;../mediadecodingconfiguration&quot;&gt;&lt;code&gt;MediaDecodingConfiguration&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a925734c4aaff8e411e232b0bdd93e0e1788ffb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediadeviceinfo/deviceid&quot;&gt;&lt;code&gt;MediaDeviceInfo.deviceId&lt;/code&gt;&lt;/a&gt; of the audio output device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98360c7b4c66210873a368d10ecc67691f7c02a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediadevices&quot;&gt;&lt;code&gt;MediaDevices&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;enumerateDevices()&lt;/code&gt; requests a list of the available media input and output devices, such as microphones, cameras, headsets, and so forth. The returned &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is resolved with a &lt;a href=&quot;../mediadeviceinfo&quot;&gt;&lt;code&gt;MediaDeviceInfo&lt;/code&gt;&lt;/a&gt; array describing the devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f465800f2e3150be335ca9ee5dd220681e017e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediadevices&quot;&gt;&lt;code&gt;MediaDevices&lt;/code&gt;&lt;/a&gt; singleton object. Usually, you just use this object's members directly, such as by calling &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28779e2e57fb153a20a4d4c8310eac45a7b3e4d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediadevices&quot;&gt;&lt;code&gt;MediaDevices&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;strong&gt;getUserMedia()&lt;/strong&gt;&lt;/code&gt; method prompts the user for permission to use a media input which produces a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; with tracks containing the requested types of media. That stream can include, for example, a video track (produced by either a hardware or virtual video source such as a camera, video recording device, screen sharing service, and so forth), an audio track (similarly, produced by a physical or virtual audio source like a microphone, A/D converter, or the like), and possibly other track types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14105ed39436ddec9a16a4a0dc6d9ddb4de1a281" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;onerror&lt;/code&gt; event handler is called by the &lt;a href=&quot;../mediastream_recording_api&quot;&gt;MediaStream Recording API&lt;/a&gt; when an error occurs. You can provide an event handler to deal with errors that occur while creating or using a media recorder. The error object is of type &lt;a href=&quot;../mediarecordererrorevent&quot;&gt;&lt;code&gt;MediaRecorderErrorEvent&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;../mediarecordererrorevent/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; property contains a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; object that describes the error that occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fa9bb4c7069363638457c293bb28bbcbf2b0e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;start()&lt;/strong&gt;&lt;/code&gt;, which is part of the MediaStream Recording API, begins recording media into one or more &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects. You can record the entire duration of the media into a single &lt;code&gt;Blob&lt;/code&gt; (or until you call &lt;a href=&quot;requestdata&quot;&gt;&lt;code&gt;requestData()&lt;/code&gt;&lt;/a&gt;), or you can specify the number of milliseconds to record at a time. Then, each time that amount of media has been recorded, an event will be delivered to let you act upon the recorded media, while a new &lt;code&gt;Blob&lt;/code&gt; is created to record the next slice of the media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059b7cc2591e0a71b3ca120ca352b6b196c4ac62" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt; is not in the &lt;code&gt;&quot;open&quot;&lt;/code&gt;&lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65230709aa03ebd5bb9121a3414dd0ac23b13c2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediasource/duration&quot;&gt;&lt;code&gt;MediaSource.duration&lt;/code&gt;&lt;/a&gt; property is equal to &lt;code&gt;NaN&lt;/code&gt;, the &lt;code&gt;start&lt;/code&gt; parameter is negative or greater than &lt;a href=&quot;../mediasource/duration&quot;&gt;&lt;code&gt;MediaSource.duration&lt;/code&gt;&lt;/a&gt;, or the end parameter is less than or equal to start or equal to &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315c9da9ef41ee0732a05738229c8c56ea461498" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediasource/readystate&quot;&gt;&lt;code&gt;MediaSource.readyState&lt;/code&gt;&lt;/a&gt; property of the parent media source is not equal to &lt;code&gt;open&lt;/code&gt;, or this &lt;code&gt;SourceBuffer&lt;/code&gt; has been removed from the &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d056455643b259dedf3fe91b41a3c28c2a9898" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; is configured to disallow recording. This may be the case, for example, with sources obtained using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; when the user denies permission to use an input device. This also happens when a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; within the stream is marked as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/isolated&quot;&gt;&lt;code&gt;isolated&lt;/code&gt;&lt;/a&gt; due to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints/peerIdentity&quot;&gt;&lt;code&gt;peerIdentity&lt;/code&gt;&lt;/a&gt; constraint on the source stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3412aaba96eecaf7d34a3c8c4eba230d0c4aad48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; is configured to disallow recording. This may be the case, for example, with sources obtained using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; when the user denies permission to use an input device. This also happens when a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; within the stream is marked as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/isolated&quot;&gt;&lt;code&gt;isolated&lt;/code&gt;&lt;/a&gt; due to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints/peerIdentity&quot;&gt;&lt;code&gt;peerIdentity&lt;/code&gt;&lt;/a&gt; constraint on the source stream. This exception may also be delivered as an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event if the security options for the source media change after recording begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabc950eb730e45615b9599a2ea1df62873b9be8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; is created when the node is created and is accessible via the &lt;a href=&quot;../mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;strea&lt;dfn&gt;m&lt;/dfn&gt;&lt;/code&gt; attribute. This stream can be used in a similar way as a &lt;code&gt;MediaStream&lt;/code&gt; obtained via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt;&lt;code&gt;navigator.getUserMedia&lt;/code&gt;&lt;/a&gt; &amp;mdash; it can, for example, be sent to a remote peer using the &lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;code&gt;addStream()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa89db9dae9f8a6f298b662ced759ef80d59d4c9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; that will be recorded. This source media can come from a stream created using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; or from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ac67643f913aae701400125cf80abb28c7e041" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastream_recording_api&quot;&gt;MediaStream Recording API&lt;/a&gt; makes it easy to record audio and/or video streams. When used with &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt;, it provides an easy way to record from the user's input devices and instantly use the result in web apps. Both audio and video may be recorded, separately or together. This article aims to provide a basic guide on how to use the MediaRecorder interface, which provides this API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665cd7bc1b81aee9fab54d09e80b80ded7c12483" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastreamconstraints&quot;&gt;&lt;code&gt;MediaStreamConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;audio&lt;/code&gt; property is used to indicate what kind of audio track, if any, should be included in the &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; returned by a call to &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5234a54df97b28a59b86e6b064a300ac5f89b3ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastreamconstraints&quot;&gt;&lt;code&gt;MediaStreamConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;video&lt;/code&gt; property is used to indicate what kind of video track, if any, should be included in the &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; returned by a call to &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3302bebca31e995034adc989dc6fdca57623d84b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; the event is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063182c8e9c2868b06dfd9d2b85524e1a95b775b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;aspectRatio&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindouble&quot;&gt;&lt;code&gt;ConstrainDouble&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/aspectratio&quot;&gt;&lt;code&gt;aspectRatio&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4c355f96fc98d823514131d21ea9d25124f113" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;autoGainControl&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainboolean&quot;&gt;&lt;code&gt;ConstrainBoolean&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/autogaincontrol&quot;&gt;&lt;code&gt;autoGainControl&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af297127d61513d774588b2545268fa7bc521999" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;channelCount&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainlong&quot;&gt;&lt;code&gt;ConstrainLong&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/channelcount&quot;&gt;&lt;code&gt;channelCount&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a7071cdd24d5e475eb67873c07de3a9c4cb239" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;deviceId&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindomstring&quot;&gt;&lt;code&gt;ConstrainDOMString&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/deviceid&quot;&gt;&lt;code&gt;deviceId&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1773ff0076269607f475a756704eb8ea4d8d9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;echoCancellation&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainboolean&quot;&gt;&lt;code&gt;ConstrainBoolean&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/echocancellation&quot;&gt;&lt;code&gt;echoCancellation&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398ed025d70b3360df66ca59dc80b288f9bf65cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;facingMode&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindomstring&quot;&gt;&lt;code&gt;ConstrainDOMString&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/facingmode&quot;&gt;&lt;code&gt;facingMode&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb60ebd592c5ff823a64e21224d536e1cd56471" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;frameRate&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindouble&quot;&gt;&lt;code&gt;ConstrainDouble&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/framerate&quot;&gt;&lt;code&gt;frameRate&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7700b66bc2e626158c73122b76ae7d443732e8c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;groupId&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindomstring&quot;&gt;&lt;code&gt;ConstrainDOMString&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/groupid&quot;&gt;&lt;code&gt;groupId&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f96ef3d4ff0074a0470f168f5c3467e82b8fd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;height&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainlong&quot;&gt;&lt;code&gt;ConstrainLong&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d277d27dc23ac6d6c12d294896160009f816b9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;latency&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindouble&quot;&gt;&lt;code&gt;ConstrainDouble&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/latency&quot;&gt;&lt;code&gt;latency&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacc080bf316dd055af644c4a6af85d95fa23c00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;noiseSuppression&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainboolean&quot;&gt;&lt;code&gt;ConstrainBoolean&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/noisesuppression&quot;&gt;&lt;code&gt;noiseSuppression&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db1827839bf561730af088cf9b81a201f8c8c1c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;sampleRate&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainlong&quot;&gt;&lt;code&gt;ConstrainLong&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/samplerate&quot;&gt;&lt;code&gt;sampleRate&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b605cca395d5dcdcfa83361e991aec0ccbbbf8c7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;sampleSize&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainlong&quot;&gt;&lt;code&gt;ConstrainLong&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/samplesize&quot;&gt;&lt;code&gt;sampleSize&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da056ec91731d13050f5ae5389870f5c299daf5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;volume&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constraindouble&quot;&gt;&lt;code&gt;ConstrainDouble&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/volume&quot;&gt;&lt;code&gt;volume&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a36a6a92ed5b743fa738ba29edf2f913f1344a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;width&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../constrainlong&quot;&gt;&lt;code&gt;ConstrainLong&lt;/code&gt;&lt;/a&gt; describing the requested or mandatory constraints placed upon the value of the &lt;a href=&quot;../mediatracksettings/width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39caffe7b2f4f3c19f22a0e082439f012abf21d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;aspectRatio&lt;/strong&gt;&lt;/code&gt; property is a double-precision floating-point number indicating the aspect ratio of the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; as currently configured. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/aspectratio&quot;&gt;&lt;code&gt;MediaTrackConstraints.aspectRatio&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382883cbb1b0b08d915d9c5f4c10c5dfcf4214f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;autoGainControl&lt;/strong&gt;&lt;/code&gt; property is a Boolean value whose value indicates whether or not automatic gain control (AGC) is enabled on an audio track. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/autogaincontrol&quot;&gt;&lt;code&gt;MediaTrackConstraints.autoGainControl&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e906ee9e4017a8510ca4cd2bbee1c2f48064986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;channelCount&lt;/strong&gt;&lt;/code&gt; property is an integer indicating how many audio channel the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is currently configured to have. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/channelcount&quot;&gt;&lt;code&gt;MediaTrackConstraints.channelCount&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81130e7b5bf71ceaad989b8921782cf2f74bd9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;deviceId&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which uniquely identifies the source for the corresponding &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; for the origin corresponding to the browsing session. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/deviceid&quot;&gt;&lt;code&gt;MediaTrackConstraints.deviceId&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96fcba10b9e904e5aaa6721aea6ca750eefd212" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;echoCancellation&lt;/strong&gt;&lt;/code&gt; property is a Boolean value whose value indicates whether or not echo cancellation is enabled on an audio track. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/echocancellation&quot;&gt;&lt;code&gt;MediaTrackConstraints.echoCancellation&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8e7b460798aac9d760081558c7d55aa7f7b4d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;facingMode&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the direction in which the camera producing the video track represented by the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is currently facing. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/facingmode&quot;&gt;&lt;code&gt;MediaTrackConstraints.facingMode&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cdb526f92fa7a55cb8f0a0b5d07e6026f5ab34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;frameRate&lt;/strong&gt;&lt;/code&gt; property is a double-precision floating-point number indicating the frame rate, in frames per second, of the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; as currently configured. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/framerate&quot;&gt;&lt;code&gt;MediaTrackConstraints.frameRate&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7494fafb3df31ff4eaba4e2eee35b85b1c74b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;groupId&lt;/strong&gt;&lt;/code&gt; property is a browsing-session unique &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which identifies the group of devices which includes the source for the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/groupid&quot;&gt;&lt;code&gt;MediaTrackConstraints.groupId&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18bb02834720c1d82f7704dbd4a32fae46d41e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;height&lt;/strong&gt;&lt;/code&gt; property is an integer indicating the number of pixels tall &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is currently configured to be. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/height&quot;&gt;&lt;code&gt;MediaTrackConstraints.height&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115d6e4353ebeb7556a887a5d0fbd1d4dd6a509c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;latency&lt;/strong&gt;&lt;/code&gt; property is a double-precision floating-point number indicating the estimated latency (specified in seconds) of the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; as currently configured. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/latency&quot;&gt;&lt;code&gt;MediaTrackConstraints.latency&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc488c67046a6100f540822a8e4d6cea0580d6d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;noiseSuppression&lt;/strong&gt;&lt;/code&gt; property is a Boolean value whose value indicates whether or not noise suppression technology is enabled on an audio track. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/noisesuppression&quot;&gt;&lt;code&gt;MediaTrackConstraints.noiseSuppression&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3ed0fab8d1c2d55b307799cacf8ac01e1de817" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;sampleRate&lt;/strong&gt;&lt;/code&gt; property is an integer indicating how many audio samples per second the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is currently configured for. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/samplerate&quot;&gt;&lt;code&gt;MediaTrackConstraints.sampleRate&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be1cd7e36b897af15a3fe2b32aa242ec08bf334" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;sampleSize&lt;/strong&gt;&lt;/code&gt; property is an integer indicating the linear sample size (in bits per sample) the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is currently configured for. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/samplesize&quot;&gt;&lt;code&gt;MediaTrackConstraints.sampleSize&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb602521fbb8e91561cc71274c54d3217dd1df44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;volume&lt;/strong&gt;&lt;/code&gt; property is a double-precision floating-point number indicating the volume of the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; as currently configured, as a value from 0.0 (silence) to 1.0 (maximum supported volume for the device). This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/volume&quot;&gt;&lt;code&gt;MediaTrackConstraints.volume&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9ede59ff0ef4cd65d73a1e73f674cb222ebf2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;width&lt;/strong&gt;&lt;/code&gt; property is an integer indicating the number of pixels wide &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is currently configured to be. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the &lt;a href=&quot;../mediatrackconstraints/width&quot;&gt;&lt;code&gt;MediaTrackConstraints.width&lt;/code&gt;&lt;/a&gt; property you provided when calling either &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.applyConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c872963a781c6be1b4303752ef6c81b8c9029b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;width&lt;/strong&gt;&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;width&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0121807a8ac421585789349d4bfc9e95f4d87cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;aspectRatio&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;aspectRatio&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d954b3fc0622a6e71b86e8f64fe0ceb95b2d6bef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;autoGainControl&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;autoGainControl&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a8eb2853a244d1b4d05ba9caa14fb7eeea7eea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;channelCount&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;channelCount&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007c494b03deeeea2bf08a99ac361ced121fad51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;deviceId&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;deviceId&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7e3e7632abb3f762d60146a871179a0d52eb94" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;echoCancellation&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;echoCancellation&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6cd140d62c19b1b90c797e1375101c411ba810" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;facingMode&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;facingMode&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f2f893400718921c7284e3bf13b306d38f2b4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;frameRate&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;a href=&quot;../mediatrackconstraints/framerate&quot;&gt;&lt;code&gt;frameRate&lt;/code&gt;&lt;/a&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dca669c0df8ac078065f41c0b300178e0c95a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;groupId&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;groupId&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3baa34eb13b249237b00bd25ab35a338d77db7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;height&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;height&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f7c525f9052db2c2a2607b769880bc3cd60c58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;latency&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;latency&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a4d4cf92e2b92e14eeb0b82b52a1b71dbf3fda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;noiseSuppression&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;noiseSuppression&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed01c6930ce8ad1afdcae7ab4807cc6a5397cf3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;sampleRate&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;sampleRate&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4cdaa0188ca504c419de91c21343d941240051" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;sampleSize&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;sampleSize&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833393830ffdb2bbd07d93b9e80c8f402cf7b2f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;volume&lt;/code&gt; property is a read-only Boolean value which is present (and set to &lt;code&gt;true&lt;/code&gt;) in the object returned by &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; if and only if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; supports the &lt;code&gt;volume&lt;/code&gt; constraint. If the constraint isn't supported, it's not included in the list, so this value will never be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20932f54cc8ba5a1b040d6ea2717784918f65a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../merchantvalidationevent&quot;&gt;&lt;code&gt;MerchantValidationEvent&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;complete()&lt;/strong&gt;&lt;/code&gt; takes merchant-specific information previously received from the &lt;a href=&quot;validationurl&quot;&gt;&lt;code&gt;validationURL&lt;/code&gt;&lt;/a&gt; and uses it to validate the merchant. All you have to do is call &lt;code&gt;complete()&lt;/code&gt; from your handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event, passing in the data fetched from the &lt;code&gt;validationURL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe6d82ce7bc64a79dc1b66fb85fbc7218bed269" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../merchantvalidationevent&quot;&gt;&lt;code&gt;MerchantValidationEvent&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;methodName&lt;/strong&gt;&lt;/code&gt; is a read-only value which returns a string indicating the payment method identifier which represents the payment handler that requires merchant validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25fcd93be6db10c9c13ae221b9182531b30cf62" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../merchantvalidationevent&quot;&gt;&lt;code&gt;MerchantValidationEvent&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;validationURL&lt;/code&gt; is a read-only string value providing the URL from which to fetch the payment handler-specific data needed to validate the merchant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb109e92d3f29773a6f7d57dd1f46a53430280d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; this method belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9344698985c2031ea89b614bfce246c81632858" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mutationobserver&quot;&gt;&lt;code&gt;MutationObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;disconnect()&lt;/strong&gt;&lt;/code&gt; tells the observer to stop watching for mutations. The observer can be reused by calling its &lt;a href=&quot;observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3434adb344d94ffceea1d89e0d9869d36b3b70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mutationobserver&quot;&gt;&lt;code&gt;MutationObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;observe()&lt;/strong&gt;&lt;/code&gt; configures the &lt;code&gt;MutationObserver&lt;/code&gt; callback to begin receiving notifications of changes to the DOM that match the given options. Depending on the configuration, the observer may watch a single &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; in the DOM tree, or that node and some or all of its descendant nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4b54d650348086e6f18fb27802abbf6d28de37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mutationobserver&quot;&gt;&lt;code&gt;MutationObserver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;takeRecords()&lt;/strong&gt;&lt;/code&gt; returns a list of all matching DOM changes that have been detected but not yet processed by the observer's callback function, leaving the mutation queue empty. The most common use case for this is to immediately fetch all pending mutation records immediately prior to disconnecting the observer, so that any pending mutations can be processed when stopping down the observer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3499d29faf14bef17ec87144cc9791c0c5220c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; at the specified index, or &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;index&lt;/code&gt; is less than zero or greater than or equal to the length property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaf6cda62d8850d63073b475be5bcb268b5b8b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; before which the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; should start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d5f97fd0924d4b21df779609fd7ad1ead95819" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd4761bea0f396bff8b3decaaa54a674731e80e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to compare with the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894b60e6f7731d270281409bb87e3638c22717cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to end the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44cb284de889e22f994affe632b01d92445bbb4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to end the &lt;code&gt;Range&lt;/code&gt; before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65630f574cba3bfcb1a91ee8ba661e22137bcad3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to insert at the start of the &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b88380a5285337ffd7115d4e32fdca59b4dd78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to select within a &lt;code&gt;&lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fb2db1d8d589facf3b090d34c7d16951ecd38d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to start the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8bf534703a32450938aaa73e8a3772d2cfdf12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to use as the root of the DOM tree or subtree for which to construct an XML representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9087e0f5e7e0a12aa9db9ac3e7d8123dcd95dcd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; where the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; should end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d64955d9866b37c59e00b01fea39558b854e7d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; where the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; should start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f3c8b793b70f06dbf3427e3100d350cd414bfb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; whose contents will be selected within a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07555a186e1bf91d55bd93f291c78e82a7b2ffde" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nondocumenttypechildnode&quot;&gt;&lt;code&gt;NonDocumentTypeChildNode&lt;/code&gt;&lt;/a&gt; pure interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79697443e8231950b40cc8296fe38c6268b58705" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../notifications_api&quot;&gt;Notifications API&lt;/a&gt; lets a web page or app send notifications that are displayed outside the page at the system level; this lets web apps send information to a user even if the application is idle or in the background. This article looks at the basics of using this API in your own apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dad31d9a63b745b190543bad369532223d11cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; comes with basic waveforms out of the box &amp;mdash; sine, square, triangle or sawtooth. However, instead of using the standard waves that come by default, we're going to create our own using the &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; interface and values set in a wavetable. We can use the &lt;a href=&quot;../baseaudiocontext/createperiodicwave&quot;&gt;&lt;code&gt;BaseAudioContext.createPeriodicWave&lt;/code&gt;&lt;/a&gt; method to use this custom wave with an oscillator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435a5ef1314f1af50ff6b78d11f7da0a074cb5d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../pannernode/coneinnerangle&quot;&gt;&lt;code&gt;coneInnerAngle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../pannernode/coneouterangle&quot;&gt;&lt;code&gt;coneOuterAngle&lt;/code&gt;&lt;/a&gt; properties specify where the volume emanates from. By default, both are 360 degrees. Our boombox speakers will have smaller cones, which we can define. The inner cone is where gain (volume) is always emulated at a maximum and the outer cone is where the gain starts to drop away. The gain is reduced by the value of the &lt;a href=&quot;../pannernode/coneoutergain&quot;&gt;&lt;code&gt;coneOuterGain&lt;/code&gt;&lt;/a&gt; value. Let's create constants that store the values we'll use for these parameters later on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4944c3b3249d73e87e36b86020e6afd058d03be4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61ef27ad7a82847e11285c8a81d6703aa2da874" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; pure interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425055e6841b50490efb58e7060df5e9cc07ea5f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; mixin defines the &lt;code&gt;&lt;strong&gt;querySelector()&lt;/strong&gt;&lt;/code&gt; method as returning an &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; representing the first element matching the specified group of selectors which are descendants of the object on which the method was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db70f7620d2b1d6797eac99fbd6f9f5f62bb5ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; mixin defines the &lt;code&gt;&lt;strong&gt;querySelectorAll()&lt;/strong&gt;&lt;/code&gt; method as returning a &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; representing a list of elements matching the specified group of selectors which are descendants of the object on which the method was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e635d9c548d9847391f23eb4f489ed43703524" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;children&lt;/strong&gt;&lt;/code&gt; is a read-only property that returns a live &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt; which contains all of the child &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; of the node upon which it was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55924bc084d6ebc6dcc7a48e56198e4890e77946" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../payment_request_api&quot;&gt;Payment Request API&lt;/a&gt; makes it easy to handle payments in a web site or app. In this article, we'll take a look at how the API operates and what each of its components does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8844a99390842d0ee94ac2c2fcd822ed799abf76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../payment_request_api&quot;&gt;Payment Request API&lt;/a&gt; provides a browser-based method of connecting users and their preferred payment systems and platforms to merchants that they want to pay for goods and services. This article is a guide to making use of the &lt;a href=&quot;../payment_request_api&quot;&gt;Payment Request API&lt;/a&gt;, with examples and suggested best practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b045fcf27ad182584b093b7a05c91abcd6313c2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentcurrencyamount&quot;&gt;&lt;code&gt;PaymentCurrencyAmount&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;currency&lt;/code&gt; is a string which specifies the currency in which the &lt;a href=&quot;value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; is specified. The value is always specified using the 3-letter codes defined by the &lt;a href=&quot;https://www.iso.org/iso-4217-currency-codes.html&quot;&gt;ISO 4127&lt;/a&gt; standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683bb9916b15d960f04e7e7943ebf6038b8f364d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentcurrencyamount&quot;&gt;&lt;code&gt;PaymentCurrencyAmount&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;value&lt;/code&gt; is a string containing the decimal numeric value of the payment, specified in the currency units indicated by the &lt;a href=&quot;currency&quot;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; property. The contents of this string must be a valid decimal number; that is, some number of digits between 0 and 9 with up to one optional decimal point. An optional leading minus sign (&quot;-&quot;) can be included to indicate a negative value, such as to represent a refund or discount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa45361825b6bc140470b4f1b15330d93605a272" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentdetailsupdate&quot;&gt;&lt;code&gt;PaymentDetailsUpdate&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;shippingAddressErrors&lt;/strong&gt;&lt;/code&gt; property, if present, contains an &lt;a href=&quot;../addresserrors&quot;&gt;&lt;code&gt;AddressErrors&lt;/code&gt;&lt;/a&gt; object whose contents provide error messages for one or more of the values in the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; specified as &lt;a href=&quot;../paymentrequest/shippingaddress&quot;&gt;&lt;code&gt;PaymentRequest.shippingAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a54ba2d489d11afbdf8142a0e298504d387ca7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; event handler &lt;code&gt;&lt;strong&gt;onmerchantvalidation&lt;/strong&gt;&lt;/code&gt; is invoked when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; is fired, indicating that the payment handler (e.g., Apple Pay) requires the merchant to validate themselves. This is usually the first event to be fired, and the user won't be able to proceed with a payment until the merchant validate themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5c65970be4581f5e0afc059b1c3906e85a7676" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; event handler &lt;code&gt;&lt;strong&gt;onpaymentmethodchange&lt;/strong&gt;&lt;/code&gt; is invoked when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/paymentmethodchange&quot;&gt;paymentmethodchange&lt;/a&gt;&lt;/code&gt; is fired, indicating that the user has changed payment methods within a given payment handler. For example, when using Apple Pay, the user can swipe to select different credit cards, debit cards, and so forth. Each time the user does so, this event is fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c59368fb884fd02dadf29c60bd45864de2d9ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;complete()&lt;/strong&gt;&lt;/code&gt; of the &lt;a href=&quot;../payment_request_api&quot;&gt;Payment Request API&lt;/a&gt; notifies the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; that the user interaction is over, and causes any remaining user interface to be closed. This method must be called after the user accepts the payment request and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by the &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt; method is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3238c4a301f2a1f1a9ea751301f1733ce2c982d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;reply()&lt;/strong&gt;&lt;/code&gt; method makes it possible to ask the user to retry a payment after an error occurs during processing. This lets your app gracefully deal with situations such as invalid shipping addresses or declined credit cards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f21791c6ed1449b85564893603d62490178093" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;&lt;strong&gt;onpayerdetailchange&lt;/strong&gt;&lt;/code&gt; property is an event handler which is called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/payerdetailchange&quot;&gt;payerdetailchange&lt;/a&gt;&lt;/code&gt; event, which is sent to the &lt;code&gt;PaymentResponse&lt;/code&gt; when the user makes changes to their personal information while filling out a payment request form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e59ae83e61ac5898c0ed7bd7083e487421a1f70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface has a &lt;a href=&quot;../performance/onresourcetimingbufferfull&quot;&gt;&lt;code&gt;onresourcetimingbufferfull&lt;/code&gt;&lt;/a&gt; event handler that gets called (with an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; of type &lt;a href=&quot;../event/type&quot;&gt;&lt;code&gt;Event.type&lt;/code&gt;&lt;/a&gt; of &quot;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/resourcetimingbufferfull&quot;&gt;resourcetimingbufferfull&lt;/a&gt;&lt;/code&gt;&quot;) when the browser's resource performance entry buffer is full. The following code example sets a &lt;a href=&quot;../performance/onresourcetimingbufferfull&quot;&gt;&lt;code&gt;onresourcetimingbufferfull&lt;/code&gt;&lt;/a&gt; event callback in the &lt;code&gt;init()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c94234957c46d28f8f0bee2571f4f1cc1f594e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edf129d2ee488d902027c42fe612078f9b2bde1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../performancenavigation&quot;&gt;&lt;code&gt;PerformanceNavigation&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0beebecff8f1a43cd4c3d10cf9ec846b1d15b42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; interface has the same three &lt;code&gt;getEntries*()&lt;/code&gt; methods as the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface and these methods are used to retrieve &lt;em&gt;observed&lt;/em&gt; performance entries within the observer callback. These methods have been used in the above stated example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50566311c6abc58c094ce002f357f703cab6f2e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428d6a76fb3efb1266cc3de067ac5fd34cacef80" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; interface it belongs to.&lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.fetchStart&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a1bbbd454b12d8e52fafeed1151bee94be238a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../plugin&quot;&gt;&lt;code&gt;Plugin&lt;/code&gt;&lt;/a&gt; object exposes a small interface for getting information about the various plugins installed in your browser. A list of plugins is also available by entering &lt;code&gt;about:plugins&lt;/code&gt; in the browser's Location bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4741b79c7db4d90f0188edd708b20d3cc168639" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../pointerevent/pointerid&quot;&gt;&lt;code&gt;identifier&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;pointer event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f03d0d508e7892b0174f3da6dbe3bb028ee6c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../position&quot;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70db18fb842505f1d871f76e767007aa1dbd3511" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../position&quot;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/a&gt; interface, which is the top-level interface used to return geolocation data from the Geolocation API functions &lt;a href=&quot;../geolocation/getcurrentposition&quot;&gt;&lt;code&gt;Geolocation.getCurrentPosition()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../geolocation/watchposition&quot;&gt;&lt;code&gt;watchPosition()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714bae446922b719b386ce33bb660eee590b7be0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../positionerror&quot;&gt;&lt;code&gt;PositionError&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb9142c9ab994f70bb79ab65e6747fb792b3ab3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../positionoptions&quot;&gt;&lt;code&gt;PositionOptions&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451c65ef550ea6a85201e17fdcbf96c725cd2e80" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../progressevent&quot;&gt;&lt;code&gt;ProgressEvent&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c36c2453de5f10447ce704328f0f469449279a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../promiserejectionevent&quot;&gt;&lt;code&gt;PromiseRejectionEvent&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;promise&lt;/strong&gt;&lt;/code&gt; read-only property indicates the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which was rejected. You can examine the event's &lt;a href=&quot;reason&quot;&gt;&lt;code&gt;PromiseRejectionEvent.reason&lt;/code&gt;&lt;/a&gt; property to learn why the promise was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e870b001bb9404b32aac89c4ca86189bf23e8f19" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object that will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a4307c862912b578edd99f993b87c76787a026" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; that is the source of the media segment data you want to append to the &lt;code&gt;SourceBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c461055b46c1ac6e28cbbfb6dcee55f992816e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; to be controlled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32709d0f204adade0078c3e1ef3ef1ebed0a8a84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abbddcced030a5421f163a9485f1cf6e3df6d38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; want to return, if a specific key is desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b32aef328d1e6022108f7fa92076623a4e07b6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; you are attempting to find in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce15eff0a31f99e655cc0a9a8917c1711cb2090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; you are attempting to find in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt;. This can be a &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object or a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee35a5eb5d8eb68fb50426cd201ce252d7d8d93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; you are looking to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6568ca33b24ed04f1cfd72640597c257595eb802" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; you want to add to the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ca5a386dd821ec0a43c934bc36adc0959c5bb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; you want to match. This can be a &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object or a URL string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e84c9007958ab58580b39fc3d6d394f320eb2bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; you want to match up to the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3dcf64b884f66ad22fe1481175b4f795e3fcd7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../response/response&quot;&gt;&lt;code&gt;Response()&lt;/code&gt;&lt;/a&gt; constructor takes two optional arguments &amp;mdash; a body for the response, and an init object (similar to the one that &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; accepts.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8cc815a8b181feae0cb28eaed66bc15baf7265" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; interface is a feature of the &lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; which lets you open a channel between two peers over which you may send and receive arbitrary data. The API is intentionally similar to the &lt;a href=&quot;../websockets_api&quot;&gt;WebSocket API&lt;/a&gt;, so that the same programming model can be used for each.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25890335a2956352c5310ea84f4a8a10251bc962" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcdtmfsender&quot;&gt;&lt;code&gt;RTCDTMFSender&lt;/code&gt;&lt;/a&gt; interface's toneBuffer property returns a string containing a list of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTMF&quot;&gt;DTMF&lt;/a&gt; tones currently queued for sending to the remote peer over the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;. To place tones into the buffer, call &lt;a href=&quot;insertdtmf&quot;&gt;&lt;code&gt;insertDTMF()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91310fa39be335ddf1a42387eb28b0cb297fb192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcdtmfsender&quot;&gt;&lt;code&gt;RTCDTMFSender&lt;/code&gt;&lt;/a&gt; object for the connection. This will be obtained while setting up the connection, in the &lt;code&gt;gotStream()&lt;/code&gt; function shown in &lt;a href=&quot;#Adding_the_audio_to_the_connection&quot;&gt;Adding the audio to the connection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b54fb81d67c4b5033cd93627689be325d7209f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;toJSON()&lt;/strong&gt;&lt;/code&gt; converts the &lt;code&gt;RTCIceCandidate&lt;/code&gt; on which it's called into JSON in the form of an &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9109f6fef4031aab37aa181b0df2a57e31c1cf0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;credential&lt;/strong&gt;&lt;/code&gt; property is a string providing the credential to use when connecting to the described server. This is typically a password, key, or other secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f523396e426bf67d9b450586464aecf8f166facb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;credentialType&lt;/code&gt; property is a string value from the &lt;a href=&quot;#RTCIceCredentialType_enum&quot;&gt;&lt;code&gt;RTCIceCredentialType&lt;/code&gt; enum&lt;/a&gt; which indicates what type of credential the &lt;a href=&quot;credential&quot;&gt;&lt;code&gt;RTCIceServer.credential&lt;/code&gt;&lt;/a&gt; value is. The default is &quot;password&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b88b94bf31ca050f347564a0d85a10f3819ca5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;urls&lt;/code&gt; property specifies the URL or URLs of the servers to be used for ICE negotiations. These are typically STUN and/or TURN servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3720aba7271ef04903bec55aa8d6cbf80efb9dda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;username&lt;/code&gt; property is a string which specifies the username to use when authenticating with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; server being described.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48db12f4df403a6deafd49e0d2a22897b488d976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;onselectedcandidatepairchange&lt;/code&gt; event handler specifies a function to be called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/selectedcandidatepairchange&quot;&gt;selectedcandidatepairchange&lt;/a&gt;&lt;/code&gt; event, which is fired when the ICE agent selects a new candidate pair to be used for the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ae8d4691793a913ca8df914aa15d35340ad68d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; is currently gathering local candidates, or is waiting for the remote device to begin to transmit the remote candidates, or both. In this state, checking of candidates to look for those which might be acceptable has not yet begun.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fa131befcc7939b403ada44c1e7442f61bc173" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; is found by getting the list of &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; objects for the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;&lt;code&gt;pc&lt;/code&gt;. In the first &lt;code&gt;RTCRtpSender&lt;/code&gt;, we get the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport&quot;&gt;&lt;code&gt;RTCDtlsTransport&lt;/code&gt;&lt;/a&gt; over which the media data is being transmitted and finally, from that, the &lt;code&gt;RTCIceTransport&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0228cee412786f12e48f2481b7b7a0504dbb72f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; is newly created and has not yet started to gather ICE candidates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e87c6b31aeed96f805a68a29b84e286d541e065" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getSelectedCandidatePair()&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcicecandidatepair&quot;&gt;&lt;code&gt;RTCIceCandidatePair&lt;/code&gt;&lt;/a&gt; object containing the current best-choice pair of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; candidates describing the configuration of the endpoints of the transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ea1ffbe33f7e8ec1b2d49a75c4a0ec64de7e96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; object is serving as the controlling agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4713a6e57c1342256cf43d50b9e5ff18932a18fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9569caf520fdb662f27cbaa2d8a5c47f73fcd5ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;addTransceiver()&lt;/strong&gt;&lt;/code&gt; creates a new &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; and adds it to the set of transceivers associated with the &lt;code&gt;RTCPeerConnection&lt;/code&gt;. Each transceiver represents a bidirectional stream, with both an &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1783ddd066fc39506f1f5b09421359cf79ff71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getSenders()&lt;/strong&gt;&lt;/code&gt; returns an array of &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; objects, each of which represents the RTP sender responsible for transmitting one track's data. A sender object provides methods and properties for examining and controlling the encoding and transmission of the track's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea66b8d05ad0115f8ecdf2fcb90a1f1a8a0f2b03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getStats()&lt;/strong&gt;&lt;/code&gt; returns a promise which resolves with data providing statistics about either the overall connection or about the specified &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd9cc641ef8bc820d04fb73b5fceaf41d4b39e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;addTrack()&lt;/code&gt; adds a new media track to the set of tracks which will be transmitted to the other peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a96a7ce2619d70a09289f6c10385dd1a68f45c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; objects representing the caller and the receiver, respectively. These will be initialized when the call starts up, in our &lt;code&gt;connectAndDial()&lt;/code&gt; function, as shown in &lt;a href=&quot;#Starting_the_connection_process&quot;&gt;Starting the connection process&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c49d6b41a850c7dc1b154a7772a4455a875b2f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;ontrack&lt;/code&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; which specifies a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a track has been added to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;. The function receives as input the event object, of type &lt;a href=&quot;../rtctrackevent&quot;&gt;&lt;code&gt;RTCTrackEvent&lt;/code&gt;&lt;/a&gt;; this event is sent when a new incoming &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; has been created and associated with an &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; object which has been added to the set of receivers on connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c519220a422008707fd5cdac7f383554e9959a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; was instantiated without specifying any ICE servers. If, for example, the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection()&lt;/code&gt;&lt;/a&gt; constructor was called with no parameters, you would have to then call &lt;code&gt;setConfiguration()&lt;/code&gt; to add ICE servers before ICE negotiation could begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d593fc6fb62c598227e0d119e01af69091adc1cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getStats()&lt;/strong&gt;&lt;/code&gt; asynchronously requests an &lt;a href=&quot;../rtcstatsreport&quot;&gt;&lt;code&gt;RTCStatsReport&lt;/code&gt;&lt;/a&gt; object which provides statistics about incoming traffic on the owning &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, returning a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; whose fulfillment handler will be called once the results are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0913e0e993859ae2cddfc8989c786a934d920042" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; which is being used to receive the track's media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2a13731a9ac44b0769c7986295c5bea613b81a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getStats()&lt;/strong&gt;&lt;/code&gt; asynchronously requests an &lt;a href=&quot;../rtcstatsreport&quot;&gt;&lt;code&gt;RTCStatsReport&lt;/code&gt;&lt;/a&gt; object which provides statistics about outgoing traffic on the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which owns the sender, returning a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which is fulfilled when the results are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a586ef3e72dd2e516d79150de9724a0ac1e8d018" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;replaceTrack()&lt;/strong&gt;&lt;/code&gt; replaces the track currently being used as the sender's source with a new &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;. The new track must be of the same media kind (audio, video, etc) and switching the track should not require negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217a7dc7ada909b729b5c0cab541cf9515faafa2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; object which will be used to transmit the media data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4feb38da443d103ef5ec5b184839c87ec43c21f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;codecId&lt;/strong&gt;&lt;/code&gt; property is a string which uniquely identifies the object that was inspected to produce the data in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCCodecStats&quot;&gt;&lt;code&gt;RTCCodecStats&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTP&quot;&gt;RTP&lt;/a&gt; stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248b0774bf1aca2db414fd317d47291a8e5a7c88" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;ssrc&lt;/strong&gt;&lt;/code&gt; property is an integer which uniquely identifies the source of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTP&quot;&gt;RTP&lt;/a&gt; packets whose statistics are covered by the &lt;a href=&quot;../rtcstatsreport&quot;&gt;&lt;code&gt;RTCStatsReport&lt;/code&gt;&lt;/a&gt; that includes this &lt;code&gt;RTCRtpStreamStats&lt;/code&gt; dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355f1b866a3e58e492ce73164557e8f0fc72377a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;&lt;strong&gt;transportId&lt;/strong&gt;&lt;/code&gt; property is a string which uniquely identifies the object from which the statistics contained in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCTransportStats&quot;&gt;&lt;code&gt;RTCTransportStats&lt;/code&gt;&lt;/a&gt; properties in the &lt;a href=&quot;../rtcstatsreport&quot;&gt;&lt;code&gt;RTCStatsReport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ea8bbd7c9390480a4d57357cf53a03448d2d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;trackId&lt;/code&gt; property is a string which uniquely identifies the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCMediaStreamTrackStats&quot;&gt;&lt;code&gt;RTCMediaStreamTrackStats&lt;/code&gt;&lt;/a&gt; object which contains the track statistics for the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; for which statistics are provided in this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1287a0278b34fc46bf089d70a861158760b2a83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b890cb8fe8c45267706fbef4c4ed96e3d1efc140" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; associated with the sender has a &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property specifies a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../mediastreamtrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; is the same as the &lt;code&gt;kind&lt;/code&gt; of the &lt;code&gt;track&lt;/code&gt; parameter specified when calling &lt;code&gt;RTCPeerConnection.addTrack()&lt;/code&gt;. This ensures that a transceiver only handles audio or video and never both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a136bb92839fa798808c8ce94bd86e5bfe68e7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;setCodecPreferences()&lt;/code&gt; configures the transceiver's codecs given a list of &lt;a href=&quot;../rtcrtpcodecparameters&quot;&gt;&lt;code&gt;RTCRtpCodecParameters&lt;/code&gt;&lt;/a&gt; objects specifying the new preferences for each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/codec&quot;&gt;codec&lt;/a&gt;. The specified set of codecs and configurations will be used for all future connections including this transceiver until this method is called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afae43c724a129ba8e27a98017385fdeb4910fd2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; which pairs the &lt;code&gt;receiver&lt;/code&gt; with a sender and other properties which establish a single bidirectional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRTP&quot;&gt;SRTP&lt;/a&gt; stream for use by the &lt;a href=&quot;../rtctrackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; associated with the &lt;code&gt;RTCTrackEvent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7690309913aea283142a6c1d82487dfee68eb83f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; which pairs the &lt;code&gt;receiver&lt;/code&gt; with a sender and other properties which establish a single bidirectional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRTP&quot;&gt;SRTP&lt;/a&gt; stream for use by the &lt;a href=&quot;track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; associated with the &lt;code&gt;RTCTrackEvent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be370d6a8800adc3ea5e346f9a54845ae5f62658" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; specified by the &lt;code&gt;sessionDescription&lt;/code&gt; parameter is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0644b05713094f53dc6ab211694bff37d4f2811" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtcstats&quot;&gt;&lt;code&gt;RTCStats&lt;/code&gt;&lt;/a&gt; dictionary's property &lt;code&gt;&lt;strong&gt;type&lt;/strong&gt;&lt;/code&gt; is a string which specifies the type of statistic represented by the object, where the permitted values are drawn from the enum type &lt;a href=&quot;../rtcstatstype&quot;&gt;&lt;code&gt;RTCStatsType&lt;/code&gt;&lt;/a&gt;. The string can be used to determine which of the &lt;a href=&quot;../rtcstats&quot;&gt;&lt;code&gt;RTCStats&lt;/code&gt;&lt;/a&gt;-based dictionaries are the foundation of the statistics object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e724340a3eefb6e777212bd419855d2f22a0e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtctrackeventinit&quot;&gt;&lt;code&gt;RTCTrackEventInit&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;receiver&lt;/code&gt; property specifies the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f3abc612bc53db7cc763292c4ef941405fab54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtctrackeventinit&quot;&gt;&lt;code&gt;RTCTrackEventInit&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;track&lt;/code&gt; property specifies the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; associated with the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6036cc54689f6d95242d2edd8167d34e15da35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../rtctrackeventinit&quot;&gt;&lt;code&gt;RTCTrackEventInit&lt;/code&gt;&lt;/a&gt; dictionary's optional &lt;code&gt;streams&lt;/code&gt; property provides an array containing a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object for each of the streams associated with the event's track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516fc43d0ab3dd0eecce28394890588a0685fc54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../screen/lockorientation&quot;&gt;&lt;code&gt;Screen.lockOrientation()&lt;/code&gt;&lt;/a&gt; accepts a string (or series of strings) to define the kind of lock to apply. Accepted values are: &lt;code&gt;portrait-primary&lt;/code&gt;, &lt;code&gt;portrait-secondary&lt;/code&gt;, &lt;code&gt;landscape-primary&lt;/code&gt;, &lt;code&gt;landscape-secondary&lt;/code&gt;, &lt;code&gt;portrait&lt;/code&gt;, &lt;code&gt;landscape&lt;/code&gt; (See &lt;a href=&quot;../screen/lockorientation&quot;&gt;&lt;code&gt;Screen.lockOrientation&lt;/code&gt;&lt;/a&gt; to know more about each of those values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3eeac385fd90cbbf8034beac8fe86e54a907a53" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4998f3e77d9a30f0415b00d78e0606010ef1c9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; is not a member of the parent media source's &lt;a href=&quot;../mediasource/sourcebuffers&quot;&gt;&lt;code&gt;sourceBuffers&lt;/code&gt;&lt;/a&gt; list, or the buffer's &lt;a href=&quot;updating&quot;&gt;&lt;code&gt;updating&lt;/code&gt;&lt;/a&gt; property indicates that a previously queued &lt;a href=&quot;appendbuffer&quot;&gt;&lt;code&gt;appendBuffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; is still being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e324c23ef827717b3ab2acc94bf74115633c62" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;changeType()&lt;/strong&gt;&lt;/code&gt; sets the MIME type that future calls to &lt;a href=&quot;appendbuffer&quot;&gt;&lt;code&gt;appendBuffer()&lt;/code&gt;&lt;/a&gt; should expect the new media data to conform to. This makes it possible to change codecs or container type mid-stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0461b85e5e92a628c60baf5c9bffe16a09c71c14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object is being updated (i.e. its &lt;a href=&quot;updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; property is currently &lt;code&gt;true&lt;/code&gt;), the last media segment appended to &lt;code&gt;this &lt;/code&gt;SourceBuffer is incomplete, or this &lt;code&gt;SourceBuffer&lt;/code&gt; has been removed from the &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff107f9cd7b0ee1920cdb7bb4e06cacbba7b62c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6b2dfceea6b2b49f8bfb5c623a2c144d52e9a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../speechrecognitionresultlist&quot;&gt;&lt;code&gt;SpeechRecognitionResultList&lt;/code&gt;&lt;/a&gt; object is not an array, but it has a getter that allows it to be accessed by array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57737ea9c280e42cf9562c4b89a445ac6c986277" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../storage/getitem&quot;&gt;&lt;code&gt;Storage.getItem()&lt;/code&gt;&lt;/a&gt; method is used to get a data item from storage; in this case, we are testing to see whether the &lt;code&gt;bgcolor&lt;/code&gt; item exists; if not, we run &lt;code&gt;populateStorage()&lt;/code&gt; to add the existing customization values to the storage. If there are already values there, we run &lt;code&gt;setStyles()&lt;/code&gt; to update the page styling with the stored values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ce8eb6d0e38f69b785df3f33ef12029088353f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../storage_access_api&quot;&gt;Storage Access API&lt;/a&gt; should be used by embedded cross-origin documents to verify whether they have access to their first-party storage and, if not, to request access. We&amp;rsquo;ll briefly look at a common storage access scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e0e707a7970b82d3e87b81d3365c4661cc9d74" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../storageestimate&quot;&gt;&lt;code&gt;StorageEstimate&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;quota&lt;/code&gt; property is a conservative approximation of how much storage is allotted to the origin or Web app that called &lt;a href=&quot;../storagemanager/estimate&quot;&gt;&lt;code&gt;StorageManager.estimate()&lt;/code&gt;&lt;/a&gt;; there may be more space available, but there will not be less. This value is an estimate to help prevent its use for fingerprinting&amp;mdash;that is, identifying a device using an amalgamation of the values of seemingly innocuous properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c796d1b3820f88d3e1a98792a1cc56a1944520" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../storageestimate&quot;&gt;&lt;code&gt;StorageEstimate&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;usage&lt;/code&gt; property is a conservative approximation of how much storage is allotted to the origin or Web app that called &lt;a href=&quot;../storagemanager/estimate&quot;&gt;&lt;code&gt;StorageManager.estimate()&lt;/code&gt;&lt;/a&gt;; there may be more space available, but there will not be less. The value is an estimate because the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; may use compression, duplication prevention techniques, and other methods to improve storage efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a998383b0be3b788ac32793e5f5d9bed3a7c626" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../storageevent&quot;&gt;&lt;code&gt;StorageEvent&lt;/code&gt;&lt;/a&gt; is fired whenever a change is made to the &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object (note that this event is not fired for sessionStorage changes). This won't work on the same page that is making the changes &amp;mdash; it is really a way for other pages on the domain using the storage to sync any changes that are made. Pages on other domains can't access the same storage objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb280b22dd0e012025d8b2408b6fbb2da76c016" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../streams_api&quot;&gt;Streams API&lt;/a&gt; adds a very useful set of tools to the web platform, providing objects allowing JavaScript to programmatically access streams of data received over the network and process them as desired by the developer. Some of the concepts and terminology associated with streams might be new to you &amp;mdash; this article explains all you need to know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6347df63f4d3020c57f7dac5bf1f9eacff1f2de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236b029b3dd4f12cddd957894a00804ad91df32e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../textdecoder&quot;&gt;&lt;code&gt;TextDecoder&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221e7861fbd5d92483a0a596862b37da87798f99" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../textencoder&quot;&gt;&lt;code&gt;TextEncoder&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fda56c5fd7502c837ff4f3d1f7fe3219390d8c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; interface represents a single contact point on a touch-sensitive device. The contact point is typically referred to as a &lt;em&gt;touch point&lt;/em&gt; or just a &lt;em&gt;touch&lt;/em&gt;. A touch is usually generated by a finger or stylus on a touchscreen, pen or trackpad. A touch point's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Web/API/Touch#Properties&quot;&gt;properties&lt;/a&gt; include a unique identifier, the touch point's target element as well as the &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; coordinates of the touch point's position relative to the viewport, page, and screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeda636dc81e7d4a7e67be2802c5ddc8368f01f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../touch_events&quot;&gt;&lt;code&gt;touch&lt;/code&gt;&lt;/a&gt; interfaces enable applications to create enhanced user experiences on touch enabled devices. However, the reality is the vast majority of today's web content is designed only to work with mouse input. Consequently, even if a browser supports touch, the browser must still &lt;em&gt;emulate&lt;/em&gt; mouse events so content that assumes mouse-only input will work &lt;em&gt;as is&lt;/em&gt; without direct modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2f4aaf20d68ca38740ea37ebed02d471c0ebe9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; interface represents an event sent when the state of contacts with a touch-sensitive surface changes. The state changes are starting contact with a touch surface, moving a touch point while maintaining contact with the surface, releasing a touch point and canceling a touch event. This interface's attributes include the state of several &lt;em&gt;modifier keys&lt;/em&gt; (for example the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314e40ab114c0c07e930e0022d766cf4a92dd3ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; interface represents a &lt;em&gt;list&lt;/em&gt; of contact points with a touch surface, one touch point per contact. Thus, if the user activated the touch surface with one finger, the list would contain one item, and if the user touched the surface with three fingers, the list length would be three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8416edd76184e0782814f0a1eb48d01ff1a13414" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d31dd6db31bfc7b006b884eb44d318126c2181" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34114ee8a43fd6158938ed511460b261ac454ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../urlutilsreadonly&quot;&gt;&lt;code&gt;URLUtilsReadOnly&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16742c4766ed2e31a50062dfc1ba41d74c8cf308" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../videoplaybackquality&quot;&gt;&lt;code&gt;VideoPlaybackQuality&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1472774cd6f8b028f8d41563c2a4bc9b4fb08e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../vrdisplayevent&quot;&gt;&lt;code&gt;VRDisplayEvent&lt;/code&gt;&lt;/a&gt; constructor creates a &lt;code&gt;VRDisplayEvent&lt;/code&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916baca0c678aa4f7c1a4ac7c9c4aae9204c131d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; constructor creates a &lt;code&gt;VRFrameData&lt;/code&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8491c30770483cbc2637d1f982f5f13f9af50fb7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; object you want to populate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7295e940d4db8d0fc0eb333707379eb67c1b5cc5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; dictionary &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;EffectTiming&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;iterations&lt;/code&gt; property specifies the number of times the animation should repeat. The default value is 1, indicating that it should only play once, but you can set it to any floating-point value (including positive &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; defaults to &lt;code&gt;1&lt;/code&gt;, and can also take a value of &lt;code&gt;Infinity&lt;/code&gt; to make it loop infinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a325b8dd1b80f1448fd9170edf4838d1eec1411d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; opens the browser&amp;rsquo;s animation engine to developers and manipulation by JavaScript. This API was designed to underlie implementations of both &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations&quot;&gt;CSS Animations&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions&quot;&gt;CSS Transitions&lt;/a&gt;, and leaves the door open to future animation effects. It is one of the most performant ways to animate on the Web where supported, letting the browser make its own internal optimizations without hacks, coercion, or &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba94fc19d8f8c18122c1b077e494a9abc9f917e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt;'s &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;EffectTiming&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;fill&lt;/code&gt; property specifies a &lt;strong&gt;fill mode&lt;/strong&gt;, which defines how the element to which the animation is applied should look when the animation sequence is not actively running, such as before the time specified by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingProperties/iterationStart&quot;&gt;&lt;code&gt;iterationStart&lt;/code&gt;&lt;/a&gt; or after animation's end time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ce4b4bba82557f5396e741a4b2205b49ac2c25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../web_audio_api&quot;&gt;Web Audio API&lt;/a&gt; involves handling audio operations inside an &lt;a href=&quot;../audiocontext&quot;&gt;audio context&lt;/a&gt;, and has been designed to allow &lt;strong&gt;modular routing&lt;/strong&gt;. Basic audio operations are performed with &lt;strong&gt;audio nodes&lt;/strong&gt;, which are linked together to form an &lt;strong&gt;audio routing graph&lt;/strong&gt;. Several sources &amp;mdash; with different types of channel layout &amp;mdash; are supported even within a single context. This modular design provides the flexibility to create complex audio functions with dynamic effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee83df76ae179a2434f130e887f91508714d9e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; provides several constants that are passed into or returned by functions. All constants are of type &lt;a href=&quot;types&quot;&gt;&lt;code&gt;GLenum&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fce57db2ea2f037f1585107242cbe4438db4796" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webglcontextevent&quot;&gt;&lt;code&gt;WebGLContextEvent&lt;/code&gt;&lt;/a&gt; signals changes in the context state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb7441d9aff76629d45b8668502dfe64eeb54fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt; in which to locate the specified uniform variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062f98dab5f1120de49c6914169593a2560b5354" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;enableVertexAttribArray()&lt;/strong&gt;&lt;/code&gt;, part of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt;, turns on the generic vertex attribute array at the specified index into the list of attribute arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349a3a6fe8638d85438bf4f1725ea43f0bf0ed08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webglrenderingcontext/getsupportedextensions&quot;&gt;&lt;code&gt;WebGLRenderingContext.getSupportedExtensions()&lt;/code&gt;&lt;/a&gt; method returns an array of strings, one for each supported extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c1a5a5a697731ef56c4b1ddea0a151f9a027a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; interface &lt;a href=&quot;../rtctrackevent&quot;&gt;&lt;code&gt;RTCTrackEvent&lt;/code&gt;&lt;/a&gt;'s read-only &lt;code&gt;streams&lt;/code&gt; property specifies an array of &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; objects, one for each of the streams that comprise the track being added to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7f90ed66a09699a26c03f6fa924c2bb6853b20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; interface &lt;a href=&quot;../rtctrackevent&quot;&gt;&lt;code&gt;RTCTrackEvent&lt;/code&gt;&lt;/a&gt;'s read-only &lt;code&gt;track&lt;/code&gt; property specifies the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; that has been added to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1f02cc360f06af90465c47fce07f2e85f9cbb6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../webvr_api&quot;&gt;WebVR API&lt;/a&gt; is a nascent, but very interesting new feature of the web platform that allows developers to create web-based virtual reality experiences. It does this by providing access to VR headsets connected to your computer as &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; objects, which can be manipulated to start and stop presentation to the display, queried for movement data (e.g. orientation and position) that can be used to update the display on each frame of the animation loop, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5021cce479f97dbfe755257bf4ef3d596c3431" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../wheelevent&quot;&gt;&lt;code&gt;WheelEvent&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95634fd7cc8802f7c06dcb157c905220b31f60cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; global object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6de7485d9cb68c756c94218540c6899ef46e2b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;opener&lt;/strong&gt;&lt;/code&gt; property returns a reference to the window that opened the window using &lt;a href=&quot;open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377551bd38f9f08a789ca4e07acfc73bd46fd0c7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;open()&lt;/code&gt; method loads the specified resource into the browsing context (window, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; or tab) with the specified name. If the name doesn't exist, then a new window is opened and the specified resource is loaded into its browsing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7268353e82f14db3e2d18f0a11e0361af2f8a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;performance&lt;/code&gt; property returns a &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; object, which can be used to gather performance information about the current document. It serves as the point of exposure for the Performance Timeline API, the High Resolution Time API, the &lt;a href=&quot;../navigation_timing_api&quot;&gt;Navigation Timing API&lt;/a&gt;, the &lt;a href=&quot;../user_timing_api&quot;&gt;User Timing API&lt;/a&gt;, and the &lt;a href=&quot;../resource_timing_api&quot;&gt;Resource Timing API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d514e4572d96616900621054d0811856ed28c28" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;routeEvent()&lt;/code&gt;, which is &lt;em&gt;obsolete&lt;/em&gt; and no longer available, used to be called to forward an event to the next object that has asked to capture events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d91e310556812d44309f05f3e9f2aa8dc5c40b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;devicePixelRatio&lt;/strong&gt;&lt;/code&gt; returns the ratio of the resolution in &lt;em&gt;physical pixels&lt;/em&gt; to the resolution in &lt;em&gt;CSS pixels&lt;/em&gt; for the current display device. This value could also be interpreted as the ratio of pixel sizes: the size of one &lt;em&gt;CSS pixel&lt;/em&gt; to the size of one &lt;em&gt;physical pixel&lt;/em&gt;. In simpler terms, this tells the browser how many of the screen's actual pixels should be used to draw a single CSS pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00442ab4ddeeac52d1f216897b816749acbf4a2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../window/getcomputedstyle&quot;&gt;&lt;code&gt;getComputedStyle()&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;document.defaultView&lt;/code&gt; object returns all styles that have actually been computed for an element. See &lt;a href=&quot;https://developer.mozilla.org/en/Gecko_DOM_Reference/Examples#Example_6:_getComputedStyle&quot;&gt;Example 6: getComputedStyle&lt;/a&gt; in the examples chapter for more information on how to use this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d682c952bc9ea69ec8960917068afdc3e55c2455" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a416e6f100dcafceb59d5049948350ef9e72d164" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; interface spawns real OS-level threads, and mindful programmers may be concerned that concurrency can cause &amp;ldquo;interesting&amp;rdquo; effects in your code if you aren't careful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8324d4893cf2c2f414d6848ac33f9063958192a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf59fe46286b8f386aa08b5dab63db33367420d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; to be controlled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30510166764a1488af2332c9670a3dc9cfc3a2dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; to be written to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb0f02dd1c3949188888941c793b42f92dc67e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getAllResponseHeaders()&lt;/strong&gt;&lt;/code&gt; returns all the response headers, separated by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CRLF&quot;&gt;CRLF&lt;/a&gt;, as a string, or returns &lt;code&gt;null&lt;/code&gt; if no response has been received. If a network error happened, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a69516870d5e92c5d08dccf2512aad82d5db2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;getResponseHeader()&lt;/strong&gt;&lt;/code&gt; returns the string containing the text of of a particular header's value. If there are multiple response headers with the same name, then their values are returned as a single concatenated string, where each value is separated from the previous one by a pair of comma and space. The &lt;code&gt;getResponseHeader()&lt;/code&gt; method returns the value as a UTF byte sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f909cd0f86618b049d01a1b7ddc0e331d1c635" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;open()&lt;/strong&gt;&lt;/code&gt; initializes a newly-created request, or re-initializes an existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7da484adb41e9599ce5682c25493b12d20565e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;overrideMimeType()&lt;/strong&gt;&lt;/code&gt; specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as &lt;code&gt;&quot;text/xml&quot;&lt;/code&gt;, even if the server does not report it as such. This method must be called before calling &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23a1f150c654a6dd9dc9367a7249b8379090f7c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;send()&lt;/strong&gt;&lt;/code&gt; sends the request to the server. If the request is asynchronous (which is the default), this method returns as soon as the request is sent and the result is delivered using events. If the request is synchronous, this method doesn't return until the response has arrived.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cb37e9ecfaf1b879e89ec11da3c5c05b55c090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;setRequestHeader()&lt;/strong&gt;&lt;/code&gt; sets the value of an HTTP request header. When using &lt;code&gt;setRequestHeader()&lt;/code&gt;, you must call it after calling &lt;a href=&quot;open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, but before calling &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;. If this method is called several times with the same header, the values are merged into one single request header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf56b08047cd9f9a48e1b222341524141f80804" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;responseType&lt;/code&gt; is an enumerated string value specifying the type of data contained in the response. It also lets the author change the response type. If an empty string is set as the value of &lt;code&gt;responseType&lt;/code&gt;, the default value of &lt;code&gt;&quot;text&quot;&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bec6a045e220a0b665da139df7df8a9d25750a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;strong&gt;response&lt;/strong&gt;&lt;/code&gt; property returns the response's body content as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, depending on the value of the request's &lt;a href=&quot;responsetype&quot;&gt;&lt;code&gt;responseType&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b8feb243780d74b92bd8c7a930d60ce9ac0df8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;&lt;code&gt;upload&lt;/code&gt; property returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestUpload&quot;&gt;&lt;code&gt;XMLHttpRequestUpload&lt;/code&gt;&lt;/a&gt; object that can be observed to monitor the progress of an upload. It is an opaque object, but being an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget&quot;&gt;&lt;code&gt;XMLHttpRequestEventTarget&lt;/code&gt;&lt;/a&gt;, event listeners can be set on it to track its process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd6e39c689e311bc1136f688b24b47f3835aba6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../xmlserializer&quot;&gt;&lt;code&gt;XMLSerializer&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;serializeToString()&lt;/strong&gt;&lt;/code&gt; constructs a string representing the specified &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOM&lt;/a&gt; tree in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt; form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5b93f974983551d96cd10749321d154809faf9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;altkey#Example&quot;&gt;TouchEvent.altKey example&lt;/a&gt; includes an example of this property's usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddc32dc0a73fa28272cf1093e7e229ce121f10b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;audiocontextoptions/latencyhint&quot;&gt;&lt;code&gt;latencyHint&lt;/code&gt;&lt;/a&gt; property can be number specifying a preferred maximum latency in seconds or a string from the &lt;a href=&quot;audiocontextlatencycategory&quot;&gt;&lt;code&gt;AudioContextLatencyCategory&lt;/code&gt;&lt;/a&gt; enumerated string, which selects a standard value for a given type of audio usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb0ae2cd222a3fd1dafc6c55c05f7e3aacd17aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;audiotrack/language&quot;&gt;&lt;code&gt;language&lt;/code&gt;&lt;/a&gt; is in standard (&lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646&lt;/a&gt;) format. For US English, this would be &lt;code&gt;&quot;en-US&quot;&lt;/code&gt;, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41ab11af0da4d76e32389678c6a5c8713cc7786" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;baseaudiocontext/samplerate&quot;&gt;&lt;code&gt;sampleRate&lt;/code&gt;&lt;/a&gt; to be used by the &lt;code&gt;AudioContext&lt;/code&gt;, specified in samples per second. The value may be any value supported by &lt;a href=&quot;audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt;. If not specified, the preferred sample rate for the context's output device is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6821d1b2a32a3748946089bb38ecb9239f200fb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;battery_status_api&quot;&gt;Battery Status API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeda569c3d422e19ea14ac87d86b8d50b45c0bac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blob/blob&quot;&gt;&lt;code&gt;Blob() constructor&lt;/code&gt;&lt;/a&gt; allows one to create blobs from other objects. For example, to construct a blob from string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8089415e7c1415b583ace6df682f4058b7564ce7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;caches&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.caches&lt;/code&gt;&lt;/a&gt; read-only property returns the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object associated with the service worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ce4b865a0fcfc03dae14a49debe4dc072c6fad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; pure interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a588b407a4d59e31736cb09b35ce9ae83e6090d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;childnode/replacewith&quot;&gt;&lt;code&gt;Node.replaceWith()&lt;/code&gt;&lt;/a&gt; method (to replace an existing node with the new one)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666cd137e57c7cf2546d670f26dcf07662e1025d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;client/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; of the same-origin &lt;a href=&quot;client&quot;&gt;&lt;code&gt;client&lt;/code&gt;&lt;/a&gt; that initiated the fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4a8624cd83199f2f9539bf829b9315af4b9ebb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;composite&quot;&gt;&lt;code&gt;KeyframeEffect.composite&lt;/code&gt;&lt;/a&gt; operation used to combine the values specified in this keyframe with the underlying value. This will be &lt;code&gt;auto&lt;/code&gt; if the composite operation specified on the effect is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba3f0cdbe41ed79e7f01eb4653bfb8310f9e90e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;composite&quot;&gt;&lt;code&gt;KeyframeEffect.composite&lt;/code&gt;&lt;/a&gt; operation used to combine the values specified in this keyframe with the underlying value. This will be absent if the composite operation specified on the effect is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28f2241d0b46079da51630ac6cc171a1af03910" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;crypto&quot;&gt;&lt;code&gt;Window.crypto&lt;/code&gt;&lt;/a&gt; read-only property returns the &lt;a href=&quot;../crypto&quot;&gt;&lt;code&gt;Crypto&lt;/code&gt;&lt;/a&gt; object associated to the global object. This object allows web pages access to certain cryptographic related services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b697a900f6df3f7c0cf21fc2c227c2d5dbfc8279" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property is used to control the feedback (typically visual) the user is given during a drag and drop operation. It affects which cursor the browser displays while dragging. For example, when the user hovers over a target drop element, the browser's cursor may indicate the type of operation that will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0fcfbb2b175e46da2c846ece35d9a9710edcf0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; object is a list of &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; objects. The list object has methods to: add a drag item to the list, remove a drag item from the list and clear the list of all drag items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d4bfd6278104a51baa09d375cd08d1190e4c25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt; event provides an exact match for the distance between the device and the object through its &lt;a href=&quot;deviceproximityevent/value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; property. It also provides the closest and farthest distance the device is able to detect something through its &lt;a href=&quot;deviceproximityevent/min&quot;&gt;&lt;code&gt;min&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deviceproximityevent/max&quot;&gt;&lt;code&gt;max&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec62b1026128cf68f183f3b85e17460fce607d9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; methods &lt;a href=&quot;parentnode/append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;parentnode/prepend&quot;&gt;&lt;code&gt;prepend()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762f42d407b277e467558e8c55262f32d02d16d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;Document.exitPointerLock()&lt;/code&gt;&lt;/a&gt; method is used to exit pointer lock, and like &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock&lt;/code&gt;&lt;/a&gt;, works asynchronously using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; events, which you'll see more about below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cfd2550b447a9f59eccc97580f76f44e2c5331" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; type, as its name implies, represents a high resolution point in time. This type is a &lt;code&gt;double&lt;/code&gt; and is used by the performance interfaces. The value could be a discrete point in time or the difference in time between two discrete points in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0eafc1332ce50df74dd335b8fbb62c2104ab16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&quot;fieldset&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c0e4a43afdd93f2d38a1772fff8de0e0fc2f9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&quot;output&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cd4430d305fe084e7bf6eae9954fe058cbe661" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dragevent&quot;&gt;&lt;code&gt;DragEvent&lt;/code&gt;&lt;/a&gt; interface has a constructor and one property, the &lt;a href=&quot;dragevent/datatransfer&quot;&gt;&lt;code&gt;dataTransfer&lt;/code&gt;&lt;/a&gt; property which is a &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object. &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; objects include the drag event's state such as the type of drag being done (for example &lt;code&gt;copy&lt;/code&gt; or &lt;code&gt;move&lt;/code&gt;), the drag's data (one or more items) and the type of each &lt;em&gt;drag item&lt;/em&gt; (a MIME type). &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; objects also have methods to add items to the drag's data and to remove a drag item. The &lt;a href=&quot;dragevent&quot;&gt;&lt;code&gt;DragEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; interfaces should be the only ones needed to add HTML drag and drop capabilities to an application. However, note Firefox supports some &lt;a href=&quot;#Gecko_specific_interfaces&quot;&gt;Gecko-specific extensions&lt;/a&gt; to the &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object that may be used, although those extensions will only work on Firefox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9b57c1f2dc70a52e1a21538fe77eb8e58f08e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;effecttiming&quot;&gt;&lt;code&gt;EffectTiming&lt;/code&gt;&lt;/a&gt; object associated with the animation containing all the animation's timing values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f6116d89074a2a1dc4475c4673fee5c72a937a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; whose intersection with the root changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d061a0635711d6d1ab7baa03a5ae8ce4c79ff7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; base interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21c1ee3115ebbcaa728b80ef01eed42b78f1f58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fetch_api&quot;&gt;Fetch API&lt;/a&gt; requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; headers to be stripped before returning a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object from &lt;a href=&quot;windoworworkerglobalscope&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;. So a &lt;code&gt;Response&lt;/code&gt; stored in a Cache won't contain headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5d5fc62b083feaf75f0406642b09f6072edd64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; representing the requested file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da37f1e541d7c01a037b21f0681d1c49eda6eaf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt; interface that use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ae9b08e27cc734c9855480e7f0e217ceda102b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt; interface that uses it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b049d747ac6b8429b768dba853c13024ebef448a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;geolocation&quot;&gt;Geolocation&lt;/a&gt; API is published through the &lt;a href=&quot;navigator/geolocation&quot;&gt;&lt;code&gt;navigator.geolocation&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76e245f170725191fcf371e54abc94a101464be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;geolocation/watchposition&quot;&gt;&lt;code&gt;watchPosition()&lt;/code&gt;&lt;/a&gt; method returns an ID number that can be used to uniquely identify the requested position watcher; you use this value in tandem with the &lt;a href=&quot;geolocation/clearwatch&quot;&gt;&lt;code&gt;clearWatch()&lt;/code&gt;&lt;/a&gt; method to stop watching the user's location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ad408b0fe97d6dd3d2dd1b33efac0d6f984b8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; mixin defines these events as global events that are available on any element in the DOM that the user can interact with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14446fed961f0036262fceef1ccfe5388c7b68d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;hashchangeevent&quot;&gt;&lt;code&gt;HashChangeEvent&lt;/code&gt;&lt;/a&gt; event is fired when the fragment identifier of the URL has changed (the part of the URL that follows the # symbol, including the # symbol).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaee1bc43d6bc1c5fbe45ab5cee6e58dab710b00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;htmlimageelement&quot;&gt;&lt;code&gt;HTMLImageElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlsourceelement&quot;&gt;&lt;code&gt;HTMLSourceElement&lt;/code&gt;&lt;/a&gt; often used in conjunction with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6472a02dd9b025cc915dc3f6c295d674a4252a53" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;htmlvideoelement/getvideoplaybackquality&quot;&gt;&lt;code&gt;HTMLVideoElement.getVideoPlaybackQuality()&lt;/code&gt;&lt;/a&gt; method for constructing and returning this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4efa319ea884a97f17cd5c6b7d65e927d70b56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://cairographics.org/manual/cairo-cairo-t.html#cairo-fill-rule-t&quot;&gt;fill rule&lt;/a&gt; to use. This must be one of &lt;code&gt;evenodd&lt;/code&gt; or &lt;code&gt;nonzero&lt;/code&gt; (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91b8212d2faabef7f90ac2f962828b7fe42a8c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://codepen.io/collection/bpEza/&quot;&gt;full suite of Alice in Wonderland demos&lt;/a&gt; on CodePen for you to play with, fork, and share</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aef9c70508d0951dc5541f7bea84249ea031e8c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/DOM/&quot;&gt;W3C DOM&lt;/a&gt; and &lt;a href=&quot;https://dom.spec.whatwg.org&quot;&gt;WHATWG DOM&lt;/a&gt; standards are implemented in most modern browsers. Many browsers extend the standard, so care must be exercised when using them on the web where documents may be accessed by various browsers with different DOMs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7afea332c33966ff6924eef61412405550876d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://zimjs.com&quot;&gt;ZIM&lt;/a&gt; framework provides conveniences, components and controls for coding creativity on the canvas &amp;mdash; includes accessibility and hundreds of colorful tutorials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f46b0b06e6611bdf3808e227816e8c5277dfea5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://caniuse.com/#feat=pointer&quot;&gt;pointer events browser compatibility data&lt;/a&gt; indicates pointer event support among desktop and mobile browsers is available almost everywhere except in Safari.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d709a90808e58ae95507b4c5f8a99a729bdd76ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/Web/API/Touch_events#Browser_compatibility&quot;&gt;touch events browser compatibility data&lt;/a&gt; indicates touch event support among mobile browsers is relatively broad, with desktop browser support lagging although additional implementations are in progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6ba4179aa8bb8087494492dbc8ec0c00ddeb4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/GlobalEventHandlers/onselectionchange&quot;&gt;&lt;code&gt;GlobalEventHandlers.onselectionchange&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/GlobalEventHandlers/onselectstart&quot;&gt;&lt;code&gt;GlobalEventHandlers.onselectstart&lt;/code&gt;&lt;/a&gt; event handlers are supported as of Firefox 52.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4a80f87164bfa55cd78495796ddc7168b57cf1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/PHP&quot;&gt;PHP&lt;/a&gt; code for the example we're using here follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a19dc27aa8008951e28d138a9bb16cc3540de1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; always prefers candidates with the highest &lt;a href=&quot;../rtcicecandidate/priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt;, all else being equal. In the example above, the priority is &lt;code&gt;2043278322&lt;/code&gt;. The attributes are all separated by a single space character, and are in a specific order. The complete list of attributes for this example candidate is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbc100fb52d005b72834b9e041186ba6c8454ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; always prefers candidates with the highest &lt;a href=&quot;priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt;, all else being equal. In the example above, the priority is &lt;code&gt;2043278322&lt;/code&gt;. The attributes are all separated by a single space character, and are in a specific order. The complete list of attributes for this example candidate is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5940cfff04e77ce9b38f0bdbd31b0c001b0d3dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Origin&quot;&gt;origin&lt;/a&gt; of the window that sent the message at the time &lt;code&gt;postMessage&lt;/code&gt; was called. This string is the concatenation of the protocol and &quot;://&quot;, the host name if one exists, and &quot;:&quot; followed by a port number if a port is present and differs from the default port for the given protocol. Examples of typical origins are &lt;code&gt;https://example.org&lt;/code&gt; (implying port &lt;code&gt;443&lt;/code&gt;), &lt;code&gt;http://example.net&lt;/code&gt; (implying port &lt;code&gt;80&lt;/code&gt;), and &lt;code&gt;http://example.com:8080&lt;/code&gt;. Note that this origin is &lt;em&gt;not&lt;/em&gt; guaranteed to be the current or future origin of that window, which might have been navigated to a different location since &lt;code&gt;postMessage&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6daacb01edbd11304aa4c8c4736bdcc64841647" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; implemented the new interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e84eb57b2155fdfef9aa2dcacf7bc304817e3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozSetDataAt&quot;&gt;&lt;code&gt;mozSetDataAt()&lt;/code&gt;&lt;/a&gt; method allows you to add multiple items during a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event. This function similarly to &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7b882dfd8234420111bc158fe2b6c93a3e8cf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/pointerLockElement&quot;&gt;&lt;code&gt;pointerLockElement&lt;/code&gt;&lt;/a&gt; property is useful for determining if any element is currently pointer locked (e.g., for doing a Boolean check) and also for obtaining a reference to the locked element, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9975cc6c95ff2d9d3bda955920a07a49fa28f76e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;createReader&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader&quot;&gt;&lt;code&gt;FileSystemDirectoryReader&lt;/code&gt;&lt;/a&gt; object which can be used to read the entries in the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bc9d92e794bb85723f1dc988a241c5344d3b92" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;getDirectory&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; object corresponding to a directory contained somewhere within the directory subtree rooted at the directory on which it's called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2157b5c7b4892c4fc88b99e7f15cdf29e09986ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;getFile&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; object corresponding to a file contained somewhere within the directory subtree rooted at the directory on which it's called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4053e7cf1f4ef646d34e00c269f013bcff025b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;removeRecursively&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; removes the directory as well as all of its content, hierarchically iterating over its entire subtree of descendant files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6068529a31d098c4bc7d58973d45cf763936d547" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader&quot;&gt;&lt;code&gt;FileSystemDirectoryReader&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;readEntries()&lt;/code&gt; method retrieves the directory entries within the directory being read and delivers them in an array to a provided callback function. The objects in the array are all based upon &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt;. Generally, they are either &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; objects, which represent standard files, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; objects, which represent directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8bc3ce2c80c3d3d42d2a9d1dd4db91b2e18194" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;copyTo&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; copies the file specified by the entry to a new location on the file system. There are some typical restrictions on what you can do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f281caa3515a027d409fd33e52fa85fd3c29a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;getMetadata&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; obtains a &lt;a href=&quot;../metadata&quot;&gt;&lt;code&gt;Metadata&lt;/code&gt;&lt;/a&gt; object with information about the file system entry, such as its modification date and time and its size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2c7d78da46c68d3e4581afef5ef5afac264982" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;getParent&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; obtains a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f10ea126391faab829375c04db62da2b6e2a0da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;moveTo&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; moves the file specified by the entry to a new location on the file system, or renames the file if the destination directory is the same as the source. There are some typical restrictions on what you can do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc5806b76bcf42c2b2b44f241931f8f9bdd0fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;remove&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; deletes the file or directory from the file system. Directories must be empty before they can be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164321daf78e43878af37f4923ba124239ba7222" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;toURL&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; creates and returns a string containing a URL which can be used to identify the file system entry. This is done by exposing a new URL scheme&amp;mdash;&lt;code&gt;filesystem:&lt;/code&gt;&amp;mdash;that can be used as the value of &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;href&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3eaa06dd6059bd81d876af1321c28d0e6b7b1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; refers to an item which doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c64b01555061875636ab5421e17ecd57450936f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;&lt;strong&gt;file&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; returns a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object which can be used to read data from the file represented by the directory entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5babcdcb5012936b60de2d9f75f56f35c4bb2262" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; interface's method &lt;code&gt;createWriter()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileWriter&quot;&gt;&lt;code&gt;FileWriter&lt;/code&gt;&lt;/a&gt; object which can be used to write data into the file represented by the directory entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46084c96d3f6330959ac9013916b6b390653418b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; that the frequency domain data will be copied to. For any sample which is silent, the value is &lt;code&gt;-&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;Infinity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbade567ff8f0af7416301372586cfe008f3542" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; that the time domain data will be copied to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07f20471b01530e4cf5596422cba3c7cb492485" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/displayId&quot;&gt;&lt;code&gt;Gamepad.displayId&lt;/code&gt;&lt;/a&gt; property is the same as the &lt;code&gt;displayId&lt;/code&gt; of the headet the controller is associated with, and therefore useful for tying controller and headset information together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca430f183c307d192fd1051cdeabd411b35faaf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/index&quot;&gt;&lt;code&gt;Gamepad.index&lt;/code&gt;&lt;/a&gt; property is unique numerical index that identifies each connected controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9256e08b83b2b106806a610cfa00cd216e9f126e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API&quot;&gt;Gamepad API&lt;/a&gt; is a fairly well-supported API that allows developers to access gamepads/controllers connected to your computer and use them to control web apps. The basic Gamepad API provides access to connected controllers as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad&quot;&gt;&lt;code&gt;Gamepad&lt;/code&gt;&lt;/a&gt; objects, which can then be queried to find out what buttons are being pressed and thumbsticks (axes) are being moved at any point, etc.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
