<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="2153f7d8004598ac2fbd4d16d4205d6e81657077" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;code&gt;openCursor()&lt;/code&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1fd518abc2e6f0d259edf6cbb8abcb90bf3a2a" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a key cursor on the index using &lt;code&gt;openKeyCursor()&lt;/code&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661e7c3cacb1693d266978ce785db96652a78191" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;, then write the length of the list to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb8e79747df298ec02744826ec466d0cb841caf" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;, then write the value of the list to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fb2b98c2295ca8eb5c3796813d65b887f85f69" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then add a new token to the list, and write the list into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6314fe34a4c0773a5ad364e04bb1727ec3a892d1" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then remove a token from the list, and write the list into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8d3549bdaccd85694618343c44840dc8b75dde" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then replace a token in the list, and write the list into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cfdfabede97a3597014b8c77e99331d6f81f65" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then retrieve the last item in the list using &lt;em&gt;item(length-1)&lt;/em&gt;, and write it into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd4456897d73632161c4026bbd09eda383125bd" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then test for the existance of &quot;c&quot; in the list, and write the result into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4723cbb96ee6003379a085ede8636c82f49f1599" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the key/value pairs using &lt;code&gt;entries()&lt;/code&gt;, then iterate through each one using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt; loop, writing them to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a83f029918f125f9b06f315db005ff4c274e3b7" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the keys using &lt;code&gt;values()&lt;/code&gt;, then iterate through those keys using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt; loop, writing each one to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c84caeb0524ec397b2ed807abab877a001f12a6" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the values using &lt;code&gt;forEach()&lt;/code&gt;, writing each one to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt; inside the &lt;code&gt;forEach()&lt;/code&gt; inner function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4898e0c51bf694e8df16b5cae1e6a80feab8323" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the values using &lt;code&gt;values()&lt;/code&gt;, then iterate through those values using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt; loop, writing each one to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69e2d116fd184274ad84c6854087c8aa5445e9e" translate="yes" xml:space="preserve">
          <source>In the following example you can see the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler being used to update the database structure if a database with a higher version number is loaded. &lt;a href=&quot;createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; is used to create new indexes on the object store, after which we delete the unneeded old indexes with &lt;code&gt;deleteIndex()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4675addd7f45c9cd325e8724ce11ee6ba2cc68bb" translate="yes" xml:space="preserve">
          <source>In the following example you can see the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler being used to update the database structure if a database with a higher version number is loaded. &lt;code&gt;createIndex()&lt;/code&gt; is used to create new indexes on the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23b9b90041a93e60212c2af6b49484b331f08c5" translate="yes" xml:space="preserve">
          <source>In the following example you can see the onupgradeneeded handler being used to update the database structure if a database with a higher version number is loaded. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fd9196a1ac8412898f0b0bc25d6a4e218acd7c" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; specifies a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; events and the handler calls &lt;code&gt;sendBeacon()&lt;/code&gt; with the value of &lt;a href=&quot;../window/location&quot;&gt;&lt;code&gt;window.location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8b1dd516e3678411afd33e740d3bc2bdeab48c" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;getElementsByTagName()&lt;/code&gt; starts from a particular parent element and searches top-down recursively through the DOM from that parent element, building a collection of all descendant elements which match the tag &lt;code&gt;name&lt;/code&gt; parameter. This demonstrates both &lt;code&gt;document.getElementsByTagName()&lt;/code&gt; and the functionally identical &lt;a href=&quot;../element/getelementsbytagname&quot;&gt;&lt;code&gt;Element.getElementsByTagName()&lt;/code&gt;&lt;/a&gt;, which starts the search at a specific element within the DOM tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c239cd0ef33c89351889a414b03386a638b7915e" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;setAttribute()&lt;/code&gt; is used to set attributes on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a0f0de05f2bdbd6afba0e27ceea9a538c6f64f" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;toggleAttribute()&lt;/code&gt; is used to toggle the &lt;code&gt;readonly&lt;/code&gt; attribute of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2136ebdeb382da448c738322af6206e3691418a1" translate="yes" xml:space="preserve">
          <source>In the following example, a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; sends a beacon using the URL and data from the global context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c4b52405c33bb76581b3b25475df910f8055c2" translate="yes" xml:space="preserve">
          <source>In the following example, a &lt;code&gt;PaymentRequest&lt;/code&gt; object is instantiated before the &lt;code&gt;show()&lt;/code&gt; method is called. This method triggers the user agent's built-in process for retrieving payment information from the user. The &lt;code&gt;show()&lt;/code&gt; method returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object when the user interaction is complete. The developer then uses the information in the &lt;code&gt;PaymentResponse&lt;/code&gt; object to format and send payment data to the server. You should send the payment information to the server asynchronously so that the final call to &lt;a href=&quot;../paymentresponse/complete&quot;&gt;&lt;code&gt;paymentResponse.complete()&lt;/code&gt;&lt;/a&gt; can indicate the success or failure of the payment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ff12a4f3863904b511398d8dbb0bbb6fb2cca4" translate="yes" xml:space="preserve">
          <source>In the following example, an artifical &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; is created to stream HTML fragments fetched from another resource to the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074d15ec140caa2cf001de7db84d2c0f9c261301" translate="yes" xml:space="preserve">
          <source>In the following example, default touch behavior is disabled for some &lt;code&gt;button&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435f4702a2e343f1c7339da7a8f80d5950f63c17" translate="yes" xml:space="preserve">
          <source>In the following example, is &lt;a href=&quot;https://rsolomakhin.github.io/samples/paymentrequest/can-make-payment/&quot;&gt;excerpted from a demo&lt;/a&gt; that asynchronously builds a &lt;code&gt;PaymentRequest&lt;/code&gt; object for both Android Pay and credit cards. It wraps the call to &lt;code&gt;canMakePayment()&lt;/code&gt; in feature detection, and calls an appropriate callback depending on the resolution of the &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89cbe350cc5914c90c8f16cde6b42e2ba8e80cf" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;a href=&quot;paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor is used to create a new payment request, which takes three objects as parameters &amp;mdash; one containing details of the payment methods that can be used for the payment, one containing details of the actual order (such as items bought and shipping options), and an optional object containing further options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a4afce05318d660f9a2d64558901c1c08b8728" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;a href=&quot;paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor is used to create a new payment request, which takes three objects as parameters &amp;mdash; one containing details of the payment methods that can be used for the payment, one containing details of the actual order (such as items bought and shipping options), and an optional object that describes what data is needed to fullfil the payment (e.g., a shipping address).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9399fcb632d7fa954193a19bfe23757637053c4f" translate="yes" xml:space="preserve">
          <source>In the following example, the browser's default touch behavior is disabled for the &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4954c22bd76143fe072e377c4963440f2a90e26" translate="yes" xml:space="preserve">
          <source>In the following example, the observer only processes &quot;&lt;code&gt;frame&lt;/code&gt;&quot; entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1433807e8aed33cbe342c63308336b4d4f59743d" translate="yes" xml:space="preserve">
          <source>In the following example, the observer registers to be notified when several different &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry types&lt;/code&gt;&lt;/a&gt; are added to the performance timeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0a664d609a3f3c335bc180ae43dd32b5c2f10b" translate="yes" xml:space="preserve">
          <source>In the following example, the state of the animation will be &lt;code&gt;running&lt;/code&gt; when the &lt;strong&gt;current ready Promise&lt;/strong&gt; is resolved because the animation does not leave the &lt;code&gt;pending&lt;/code&gt; play state in between the calls to &lt;code&gt;pause&lt;/code&gt; and &lt;code&gt;play&lt;/code&gt; and hence the &lt;strong&gt;current ready Promise&lt;/strong&gt; does not change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63de5a71b8870039b14aa4bd411ec24bdfe2f0a" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the &lt;code&gt;*Start&lt;/code&gt; and &lt;code&gt;*End&lt;/code&gt; properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272a68d6fbc5f4442d1315c4d1b6de3e82eca052" translate="yes" xml:space="preserve">
          <source>In the following example, there are three messages sent. The first is just a comment, since it starts with a colon character. As mentioned previously, this can be useful as a keep-alive if messages may not be sent regularly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c03a598ed9c91ab1c9ee7e227c36c0439717838" translate="yes" xml:space="preserve">
          <source>In the following example, we use an onclick handler to open a webpage in a new tab (specified by the inclusion of the &lt;code&gt;'_blank'&lt;/code&gt; parameter) once a notification is clicked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad7ceb798d82f026b15c9c84b22426bc2473d27" translate="yes" xml:space="preserve">
          <source>In the following example, we will use an external image as the backdrop for a small line graph. Using backdrops can make your script considerably smaller because we can avoid the need for code to generate the background. In this example, we're only using one image, so I use the image object's &lt;code&gt;load&lt;/code&gt; event handler to execute the drawing statements. The &lt;code&gt;drawImage()&lt;/code&gt; method places the backdrop at the coordinate (0, 0), which is the top-left corner of the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ea89db3c927ff7b96eac5c3aa09d70af60c212" translate="yes" xml:space="preserve">
          <source>In the following example, when the &lt;code&gt;target&lt;/code&gt; element is touched, it will only pan in the horizontal direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27103044b8cb0dedb1968025603095f2edc97939" translate="yes" xml:space="preserve">
          <source>In the following example, you can see a new channel being created using the &lt;a href=&quot;messagechannel&quot;&gt;&lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267443cd206379d124942634e201ae0c8ab5d59b" translate="yes" xml:space="preserve">
          <source>In the following example, you can see an example of how the &lt;code&gt;createPanner()&lt;/code&gt; method, &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; would be used to control audio spatialisation. Generally you will define the position in 3D space that your audio listener and panner (source) occupy initially, and then update the position of one or both of these as the application is used. You might be moving a character around inside a game world for example, and wanting delivery of audio to change realistically as your character moves closer to or further away from a music player such as a stereo. In the example you can see this being controlled by the functions &lt;code&gt;moveRight()&lt;/code&gt;, &lt;code&gt;moveLeft()&lt;/code&gt;, etc., which set new values for the panner position via the &lt;code&gt;PositionPanner()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbc992a8d37b0d921869bc0d62f0d91d2f3c4f5" translate="yes" xml:space="preserve">
          <source>In the following example, you can see an example of how the &lt;code&gt;createPanner()&lt;/code&gt; method, &lt;a href=&quot;audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; would be used to control audio spatialisation. Generally you will define the position in 3D space that your audio listener and panner (source) occupy initially, and then update the position of one or both of these as the application is used. You might be moving a character around inside a game world for example, and wanting delivery of audio to change realistically as your character moves closer to or further away from a music player such as a stereo. In the example you can see this being controlled by the functions &lt;code&gt;moveRight()&lt;/code&gt;, &lt;code&gt;moveLeft()&lt;/code&gt;, etc., which set new values for the panner position via the &lt;code&gt;PositionPanner()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd1b59215ad923cdb79fd53376e012a6544888f" translate="yes" xml:space="preserve">
          <source>In the following illustration, the client area is show in white. (The segments labeled &quot;Top&quot;, &quot;Right&quot;, etc. have no significance regarding the client area.) The clientTop value is the distance from where the margin (yellow) area ends and the padding and content areas (white) begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474a83ac9b651165c2d3beae70139fedcda6414c" translate="yes" xml:space="preserve">
          <source>In the following simple example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;, add a class using &lt;a href=&quot;domtokenlist/add&quot;&gt;&lt;code&gt;DOMTokenList.add()&lt;/code&gt;&lt;/a&gt;, and then update the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; to equal the &lt;code&gt;DOMTokenList&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f8f0c900b82d25d4e356ac33ff134dd6e1af5c" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream &amp;mdash; see &lt;code&gt;controller.enqueue(string)&lt;/code&gt;. A &lt;code&gt;cancel()&lt;/code&gt; function is also provided to stop the generation if &lt;a href=&quot;../readablestream/cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cb84714140f3e5268fa616f6ba90deb1e77626" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream. A &lt;code&gt;cancel()&lt;/code&gt; fuction is also provided to stop the generation if &lt;a href=&quot;cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ff1cf79f45c57303c62ae0c938833b77546406" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream. A &lt;code&gt;cancel()&lt;/code&gt; function is also provided to stop the generation if &lt;a href=&quot;../readablestream/cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2870fcf6209e4e65b1b15b629e6b41a8003f8e" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream. A &lt;code&gt;cancel()&lt;/code&gt; function is also provided to stop the generation if &lt;a href=&quot;readablestream/cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b18390b90a48249fd37f0687cb1a40ede06b2e" translate="yes" xml:space="preserve">
          <source>In the following simple example, a previously-created custom &lt;code&gt;ReadableStream&lt;/code&gt; is read using a &lt;a href=&quot;../readablestreamdefaultreader&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;&lt;/a&gt; created using &lt;code&gt;getReader()&lt;/code&gt;. (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). Each chunk is read sequentially and output to the UI, until the stream has finished being read, at which point we return out of the recursive function and print the entire stream to another part of the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70da65ac6eaead2e5668e0c03b6541cc8e7d2e27" translate="yes" xml:space="preserve">
          <source>In the following simple example, a previously-created custom &lt;code&gt;ReadableStream&lt;/code&gt; is read using a &lt;a href=&quot;../readablestreamdefaultreader&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;&lt;/a&gt; created using &lt;code&gt;getReader()&lt;/code&gt;. (this code is based on our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt;). Each chunk is read sequentially and output to the UI, until the stream has finished being read, at which point we return out of the recursive function and print the entire stream to another part of the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3326db0ccb36af73ef9fce2fd3ca9bc5c2ece9" translate="yes" xml:space="preserve">
          <source>In the following simple example, a previously-created stream is teed, then both resulting streams (contained in two members of a generated array) are passed to a function that reads the data out of the two streams and prints each stream's chunks sequentially to a different part of the UI. See &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-tee-example/&quot;&gt;Simple tee example&lt;/a&gt; for the full code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22e74fba95ca0693e32f5fa4b058e21c5c71986" translate="yes" xml:space="preserve">
          <source>In the following simple example, we create a &lt;a href=&quot;../mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; (the example will therefore only work in Firefox and Chrome at this time.) The &lt;code&gt;MediaRecorder&lt;/code&gt; is set up to record information from the &lt;code&gt;MediaStreamDestinationNode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412081b079739248cd449f45f3df036233949d8a" translate="yes" xml:space="preserve">
          <source>In the following simple example, we create a &lt;a href=&quot;mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; (the example will therefore only work in Firefox and Chrome at this time.) The &lt;code&gt;MediaRecorder&lt;/code&gt; is set up to record information from the &lt;code&gt;MediaStreamDestinationNode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c15027522574712e5fe6ced6b122df70aed2c4" translate="yes" xml:space="preserve">
          <source>In the following snippet we do just this &amp;mdash; depending on whether the user can make a fast payment or needs to add payment credentials first, the title of the checkout button changes between &quot;Fast Checkout with W3C&quot; and &quot;Setup W3C Checkout&quot;. In both cases, the checkout button calls &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa744a3eb4f9113956367367e140c4cfafdff30" translate="yes" xml:space="preserve">
          <source>In the following snippet, a merchant page performs this check, and if it returns &lt;code&gt;true&lt;/code&gt; updates the checkout button to use &lt;code&gt;PaymentRequest&lt;/code&gt; instead of legacy web forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8de38c803e9a9a0c44ea1d4286580acb8d3f34" translate="yes" xml:space="preserve">
          <source>In the following snippet, found in our &lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;view it running live&lt;/a&gt;), we have a simple function that when called creates an &lt;code&gt;options&lt;/code&gt; object and then a new notification. At the end of the function, it also calls &lt;code&gt;close()&lt;/code&gt; inside a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; function to close the notification after 4 seconds (some browsers close spawned notifications automatically, and some such as Chrome and Opera do not.) Also note the use of &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind()&lt;/a&gt;&lt;/code&gt; to make sure the &lt;code&gt;close()&lt;/code&gt; call is associated with the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8c734a5c806c7eafd766294af616d92c5077a4" translate="yes" xml:space="preserve">
          <source>In the following snippet, we aim to download a video using the &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142af4e4f8156e83cae740b9eac83eea2036a02e" translate="yes" xml:space="preserve">
          <source>In the following snippet, we aim to download a video using the &lt;a href=&quot;fetch_api&quot;&gt;Fetch API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6ac752fbbf3cd68e0661ddea25be5b49e124b7" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new &lt;code&gt;AbortController&lt;/code&gt; object, and get its &lt;a href=&quot;../abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; (available in the &lt;code&gt;signal&lt;/code&gt; property). Later on we check whether or not it the signal has been aborted using the &lt;code&gt;aborted&lt;/code&gt; property, and send an appropriate log to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea686afe1ee305f352aed33c09e2ec95b6f72277" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new &lt;code&gt;AbortController&lt;/code&gt; object, and get its &lt;a href=&quot;../abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; (available in the &lt;code&gt;signal&lt;/code&gt; property). Later on we check whether or not it the signal has been aborted using the &lt;code&gt;onabort&lt;/code&gt; property, and send an appropriate log to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d1a678fcd8ff9ee037e00996cd0d0af7fc5746" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new header using the &lt;code&gt;Headers()&lt;/code&gt; constructor, add a new header to it using &lt;code&gt;append()&lt;/code&gt;, then return that header value using &lt;code&gt;get()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0113a15ee50c09fd5ed788dcb4b202cde3015285" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the method of the request in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047219316e77e34566358106fcfe3d1d2d36a8a4" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request &lt;code&gt;integrity&lt;/code&gt; value in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ec4b615ea56657916ea54950d286e832c9b90c" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request &lt;code&gt;redirect&lt;/code&gt; value in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5271e44768600db81781e8e63fb680a7e0a11ae4" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request credentials in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e497b0a8e103f4b14c38c2c3214304e313b28efe" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request headers in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81550d707e6017872865cc14baddebf7ce3d17b" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request mode in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a843eb07910b2ff896f7f83b80b2a3442e2c69" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request referrer in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dc59db46b69d55a1258db2220fd9408467cd5d" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request referrer policy in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb05d02bfd17a04454879b1e41ac2480db3aa891" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request's destination:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac1c73ce2c6e044a2258e3a144ec58e0a59af55" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the url of the request in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df97c2abfe2cd3b96a48bed84dcd9b3ae61a78f" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;code&gt;&lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; constructor (for an image file in the same directory as the script), then clone the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05be4f8cd3d08c8dd5e9bd42521389487107b774" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;code&gt;Request()&lt;/code&gt; constructor (for an image file in the same directory as the script), then return some property values of the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a050a87a9317524698c10863ce25e61d3b8f3c" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;code&gt;Request()&lt;/code&gt; constructor with some initial data and body content for an api request which need a body payload:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db0b32bd283d4e2b68536621d346008c46ee4ae" translate="yes" xml:space="preserve">
          <source>In the future, if neither &lt;code&gt;audioCapabilities&lt;/code&gt; nor &lt;code&gt;videoCapabilities&lt;/code&gt; is specified in the &lt;code&gt;supportedConfigurations&lt;/code&gt;, a &lt;code&gt;NotSupported&lt;/code&gt; exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e51f1e5e05401da9b84fce6191bdd16901080f3" translate="yes" xml:space="preserve">
          <source>In the future, service workers will be able to do a number of other useful things for the web platform that will bring it closer towards native app viability. Interestingly, other specifications can and will start to make use of the service worker context, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50f83c09ccffe7e16fac729e5c41ab3340af1e3" translate="yes" xml:space="preserve">
          <source>In the general case, however, it's safe to simply think of this as the bounds rectangle of the target element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166e236e27479f3359db19347c47ab1e24e726ea" translate="yes" xml:space="preserve">
          <source>In the image below, the red outline represents a clipping region shaped like a star. Only those parts of the checkerboard pattern that are within the clipping region get drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70633f113da8640ad30f56a1fbd952af0f8b1d7" translate="yes" xml:space="preserve">
          <source>In the last chapter we made some &lt;a href=&quot;basic_animations&quot;&gt;basic animations&lt;/a&gt; and got to know ways to get things moving. In this part we will have a closer look at the motion itself and are going to add some physics to make our animations more advanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80221b0d9d8d53e433ca3a37f0d52488ebb331c6" translate="yes" xml:space="preserve">
          <source>In the latest version of the box demo the &lt;code&gt;computeSimpleProjectionMatrix()&lt;/code&gt; method has been replaced with the &lt;code&gt;computePerspectiveMatrix()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca7779931f5cbdb5fc3ba8626ff7f5e34f21e93" translate="yes" xml:space="preserve">
          <source>In the main page of the demo, we have a simple form with a text input for entering messages to be sent to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;. We also have a paragraph which we will use later on to display confirmation messages that we will receive back from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52efceb8351056ff1daf867ac5e1b4160814385" translate="yes" xml:space="preserve">
          <source>In the main script, &lt;code&gt;onmessage&lt;/code&gt; would have to be called on a &lt;code&gt;Worker object&lt;/code&gt;, whereas inside the worker script you just need &lt;code&gt;onmessage&lt;/code&gt; because the worker is effectively the global scope (&lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b552ae71a5217f0ad239529ae236a44c5cd6279" translate="yes" xml:space="preserve">
          <source>In the main window, when it's time to open the panels, code like the following is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2caed150184b39aaa18dc62af2691d1ffc3fcbcd" translate="yes" xml:space="preserve">
          <source>In the next section we'll take this step of copying Z into the w slot and turn it into a matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a865ee829a3275fb2e2d62b456bffac6a8f483ca" translate="yes" xml:space="preserve">
          <source>In the original, we only passed in a URL to an image we wanted to load. In this version, we pass in a JSON fragment containing all the data for a single image (see what they look like in &lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/image-list.js&quot;&gt;image-list.js&lt;/a&gt;). This is because all the data for each promise resolve has to be passed in with the promise, as it is asynchronous. If you just passed in the url, and then tried to access the other items in the JSON separately when the &lt;code&gt;for()&lt;/code&gt; loop is being iterated through later on, it wouldn&amp;rsquo;t work, as the promise wouldn&amp;rsquo;t resolve at the same time as the iterations are being done (that is a synchronous process.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca9e228ce8cdc14458ead88cc18d84b81932129" translate="yes" xml:space="preserve">
          <source>In the past the &lt;a href=&quot;../request/url&quot;&gt;&lt;code&gt;FetchEvent.request.url&lt;/code&gt;&lt;/a&gt; was used as the final URL in all cases. The provided &lt;a href=&quot;../response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; was effectively ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afef193946887224bf55fa913f26ccd4e5fc44a" translate="yes" xml:space="preserve">
          <source>In the past we would resolve the relative URL against the current global, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb794add570268a52fda49abf02c1b035d242cb" translate="yes" xml:space="preserve">
          <source>In the past, when you called the &lt;code&gt;window&lt;/code&gt; object's &lt;code&gt;close()&lt;/code&gt; method directly, rather than calling &lt;code&gt;close()&lt;/code&gt; on a &lt;code&gt;window&lt;/code&gt;&lt;strong&gt;instance&lt;/strong&gt;, the browser closed the frontmost window, whether your script created that window or not. This is no longer the case; for security reasons, scripts are no longer allowed to close windows they didn't open. (Firefox 46.0.1: scripts can not close windows, they had not opened)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6cc36a3ecf8cc588fba453375e70e27575f7a4" translate="yes" xml:space="preserve">
          <source>In the previous example, &lt;code&gt;sp1&lt;/code&gt; could be inserted after &lt;code&gt;sp2&lt;/code&gt; using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1770efa08cde8987ce6c2d74d34f1b92eb66dca" translate="yes" xml:space="preserve">
          <source>In the second case, the event listeners only propagate as far as the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element itself, but not to the nodes inside the shadow boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d34b828fa7e048616d1778e2b694e7b26f1d8fe" translate="yes" xml:space="preserve">
          <source>In the second code block, we wait for a &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; to fire. We construct a custom response like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b53a7e8e7ffacee8a73ee954e83ca19d9ff6544" translate="yes" xml:space="preserve">
          <source>In the second gradient, we didn't assign the starting color (at position 0.0) since it wasn't strictly necessary, because it will automatically assume the color of the next color stop. Therefore, assigning the black color at position 0.5 automatically makes the gradient, from the start to this stop, black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2445149813d9ee0b54a74efc28c3220ce79ac4a" translate="yes" xml:space="preserve">
          <source>In the second syntax-form however, there is no &lt;code&gt;oldChild&lt;/code&gt; reference kept, so assuming your code has not kept any other reference to the node elsewhere, it will immediately become unusable and irretrievable, and will usually be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management&quot;&gt;automatically deleted&lt;/a&gt; from memory after a short time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0529bf6c0eb26ec1762e946292358a808cf01177" translate="yes" xml:space="preserve">
          <source>In the shader each position vertex is first transformed into a homogeneous coordinate (vec4), and then multiplied against the model matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe789ec50d5a4e802e089b2d79bf7730f6c4653a" translate="yes" xml:space="preserve">
          <source>In the worker thread, workers may close themselves by calling their own &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747faaac8adbae729530d9fafd2e204101332993" translate="yes" xml:space="preserve">
          <source>In the worker, we can respond when the message is received by writing an event handler block like this (&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/worker.js&quot;&gt;worker.js&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ee606f5a7096b9af4937eaa2543bd000f624c9" translate="yes" xml:space="preserve">
          <source>In their most basic forms, both create() and get() receive a very large random number called a challenge from the server and they return the challenge signed by the private key back to the server. This proves to the server that a user is in possession of the private key required for authentication without revealing any secrets over the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df9571818d6d981dd291e20430935363e55c7e1" translate="yes" xml:space="preserve">
          <source>In these cases, a recursive &lt;code&gt;setTimeout()&lt;/code&gt; pattern is preferred:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e039aad2c0155f950651a6dba4c3ff8927bffa24" translate="yes" xml:space="preserve">
          <source>In these environments, unfortunately, there's no way for web content to tell the difference between auto-repeating keys and keys that are just being pressed repeatedly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1b648527abedf64cd55d6727a0c77588c433e6" translate="yes" xml:space="preserve">
          <source>In these reference articles, you'll find the fundamental information you'll need to know about each of the interfaces and events that make up the Media Capture and Streams API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e918402b5cbdf8a6c4b40b28955c38a6e57c2da7" translate="yes" xml:space="preserve">
          <source>In this WebGL example, we create a canvas and within it render a rotating square using WebGL. The coordinate system we use to represent our scene is the same as the canvas's coordinate system. That is, (0, 0) is at the top-left corner and the bottom-right corner is at (600, 460).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c5f2cb2ab21a4fb634fdc399fb6ca277e9b128" translate="yes" xml:space="preserve">
          <source>In this application, a pointer move is represented by the target's border being set to &lt;code&gt;dashed&lt;/code&gt; to provide a clear visual indication that the element has received this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98f37ad364ba5fdee4fa5e8cf09ef457d4aa33f" translate="yes" xml:space="preserve">
          <source>In this application, this handler is also used for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerout&quot;&gt;pointerout&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a8ded075cda7fc6015e230452248e4bbb967c9" translate="yes" xml:space="preserve">
          <source>In this application, when a pointer is placed down on an element, the background color of the element changes, depending on the number of active touch points the element has. See the &lt;code&gt;&lt;a href=&quot;#Update_background_color&quot;&gt;update_background&lt;/a&gt;&lt;/code&gt; function for more details about the color changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4370ea5ea1c8d368335f2e8e67a642d611fb0861" translate="yes" xml:space="preserve">
          <source>In this article is published a library of ours whose aims are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b041da60b635adafbe970738766e44924736c766" translate="yes" xml:space="preserve">
          <source>In this article we'll explore the basics of using this technology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fba83f0d7f521e3a9c91ddf9e8cef09aa7106fe" translate="yes" xml:space="preserve">
          <source>In this article, we will further enhance the &lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;WebSocket chat&lt;/a&gt; first created as part of our WebSocket documentation (this article link is forthcoming; it isn't actually online yet) to support opening a two-way video call between users. You can &lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;try out this example on Glitch&lt;/a&gt;, and you can &lt;a href=&quot;https://glitch.com/edit/#!/remix/webrtc-from-chat&quot;&gt;remix the example&lt;/a&gt; to experiment with it as well. You can also &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;look at the full project&lt;/a&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b40ede08c4f8be0f417f21def083ee10592797" translate="yes" xml:space="preserve">
          <source>In this basic example, an &lt;code&gt;EventSource&lt;/code&gt; is created to receive events from the server; a page with the name &lt;code&gt;&quot;sse.php&quot;&lt;/code&gt; is responsible for generating the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7d6c348e32849c67816ae957749276867dc54b" translate="yes" xml:space="preserve">
          <source>In this basic example, the first element in the &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; with the class &quot;&lt;code&gt;myclass&lt;/code&gt;&quot; is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361df78b941d4fd8a47090d14f97a69c047a8d77" translate="yes" xml:space="preserve">
          <source>In this case, every image has a fixed width and height, as does the frame that's drawn around them. You could enhance the script so that it uses the image's width and height to make the frame fit perfectly around it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276ffafaadc51c838b49947876ba4aad8b0bd36a" translate="yes" xml:space="preserve">
          <source>In this case, the constraints indicate that any values are fine for nearly all properties, but that a standard high definition (HD) video size is desired, with the standard 16:9 aspect ratio. There's no guarantee that the resulting track will match any of these, but the user agent should do its best to match as many as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031f4c135971e59b7fae739ab01bab44a4cc4c16" translate="yes" xml:space="preserve">
          <source>In this case, the data value is &quot;Text to drag&quot; and is of the format &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#text&quot;&gt;text/plain&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cad29bf51cb46269d006567b6429c9032b4f4f8" translate="yes" xml:space="preserve">
          <source>In this case, the database will already have the object stores from the previous version of the database, so you do not have to create these object stores again. You only need to create any new object stores, or delete object stores from the previous version that are no longer needed. If you need to change an existing object store (e.g., to change the &lt;code&gt;keyPath&lt;/code&gt;), then you must delete the old object store and create it again with the new options. (Note that this will delete the information in the object store! If you need to save that information, you should read it out and save it somewhere else before upgrading the database.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eec1ad1f4b038a24465f660119efe22c851150" translate="yes" xml:space="preserve">
          <source>In this case, the file list passed to the &lt;code&gt;handleFiles()&lt;/code&gt; function contains one &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object for each file the user selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f699d83d33360e670c86e02d2f0b476f5ea229fa" translate="yes" xml:space="preserve">
          <source>In this case, we're simply returning white every time, since we're just drawing a white square, with no lighting in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d2e2bb48a9b84c4673956d3f1c7f44d996cb8b" translate="yes" xml:space="preserve">
          <source>In this case, we've offset the starting point slightly from the end point to achieve a spherical 3D effect. It's best to try to avoid letting the inside and outside circles overlap because this results in strange effects which are hard to predict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cbfec0be83d5c96de48b42542e47b7ad14af8c" translate="yes" xml:space="preserve">
          <source>In this code snippet we wait for an &lt;a href=&quot;../serviceworkerglobalscope/onactivate&quot;&gt;&lt;code&gt;activate&lt;/code&gt;&lt;/a&gt; event, and then run a &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; block that clears up any old, unused caches before a new service worker is activated. Here we have a whitelist containing the names of the caches we want to keep. We return the keys of the caches in the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object using &lt;code&gt;keys()&lt;/code&gt;, then check each key to see if it is in the whitelist. If not, we delete it using &lt;a href=&quot;delete&quot;&gt;&lt;code&gt;CacheStorage.delete&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b237c5b5122f635999f0f232a6e34ae7685ddc" translate="yes" xml:space="preserve">
          <source>In this code snippet we wait for an activate event, and then run a &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; block that clears up any old, unused caches before a new service worker is activated. Here we have a whitelist containing the name of the cache we want to keep. We return the keys of the caches in the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object using &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;CacheStorage.keys&lt;/code&gt;&lt;/a&gt;, then check each key to see if it is in the whitelist. If not, we delete it using &lt;code&gt;delete()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729125e1bb8d7b3b127e10d27b0d336716742c36" translate="yes" xml:space="preserve">
          <source>In this code snippet, &lt;code&gt;enumerateDevices()&lt;/code&gt; is used to examine the available input devices, locate those which are audio input devices, and create &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt; elements that are then added to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element representing an input source picker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50899138f59205c98ab66e512d5085dc24e9011d" translate="yes" xml:space="preserve">
          <source>In this code, &lt;code&gt;modifyText()&lt;/code&gt; is a listener for &lt;code&gt;click&lt;/code&gt; events registered using &lt;code&gt;addEventListener()&lt;/code&gt;. A click anywhere in the table bubbles up to the handler and runs &lt;code&gt;modifyText()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c16c5e0a79aa8b20c0ac21843dfc5a0f4947c7" translate="yes" xml:space="preserve">
          <source>In this code, the methods &lt;code&gt;checkAddress()&lt;/code&gt; and &lt;code&gt;checkShipping()&lt;/code&gt;, respectively, check the shipping address and the shipping option changes and supply in response either a &lt;a href=&quot;../paymentdetailsupdate&quot;&gt;&lt;code&gt;PaymentDetailsUpdate&lt;/code&gt;&lt;/a&gt; object or a promise to return one; this object contains the fields in the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; which have been or need to be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0154f1006d012823f6a39fe62981f3a8df912997" translate="yes" xml:space="preserve">
          <source>In this code, the offer is created, and once successful, the local end of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; is configured to match by passing the offer (which is represented using an object conforming to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescriptionInit&quot;&gt;&lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt;&lt;/a&gt;) into &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;setLocalDescription()&lt;/code&gt;&lt;/a&gt;. Once that's done, the offer is sent to the remote system over the signaling channel; in this case, by using a custom function called &lt;code&gt;sendToServer()&lt;/code&gt;. The implementation of the signaling server is independent from the WebRTC specification, so it doesn't matter how the offer is sent as long as both the caller and potential receiver are using the same one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf716c5032dda34dd3bfdc3edd8d240f757ee38" translate="yes" xml:space="preserve">
          <source>In this demonstration, we build upon the previous example by replacing our static textures with the frames of an mp4 video file that's playing. This is actually pretty easy to do and fun to watch, so let's get started. You can use similar code to use any sort of data (such as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;) as the source for your textures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512ac688aaef338832699370e37eefcc02030cf3" translate="yes" xml:space="preserve">
          <source>In this document, we&amp;rsquo;ll talk about the ethical use of web push notifications. Sometimes they can eliminate frustration and annoyance, and sometimes they can cause them, and it&amp;rsquo;s up to you as a developer to make wise recommendations (and decisions) about the use of push notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31734cebb1978c995b4bd29bc19331fec01dfba4" translate="yes" xml:space="preserve">
          <source>In this example the function &lt;code&gt;refreshPopupWindow()&lt;/code&gt; calls the &lt;code&gt;reload&lt;/code&gt; method of the popup's location object to refresh its data. If the popup hasn't been opened yet or the user has closed it a new window is opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15daa80588607e4477964dfd27a2fe7e339632a" translate="yes" xml:space="preserve">
          <source>In this example three lines are drawn, each with a different value for the &lt;code&gt;lineCap&lt;/code&gt; property. Two guides to see the exact differences between the three are added. Each of these lines starts and ends exactly on these guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e99c59aa9f04ae82e8b51902eeb459b88d9827" translate="yes" xml:space="preserve">
          <source>In this example we are creating a marching ants effect. It is an animation technique often found in selection tools of computer graphics programs. It helps the user to distinguish the selection border from the image background by animating the border. In a later part of this tutorial, you can learn how to do this and other &lt;a href=&quot;basic_animations&quot;&gt;basic animations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23213470633aad5a46d88e3d77045d3c2aefb809" translate="yes" xml:space="preserve">
          <source>In this example we are using the &lt;a href=&quot;../../canvasrenderingcontext2d/getimagedata&quot;&gt;getImageData() &lt;/a&gt;method to display the color under the mouse cursor. For this, we need the current position of the mouse with &lt;code&gt;layerX&lt;/code&gt; and &lt;code&gt;layerY&lt;/code&gt;, then we look up the pixel data on that position in the pixel array that &lt;a href=&quot;../../canvasrenderingcontext2d/getimagedata&quot;&gt;getImageData()&lt;/a&gt; provides us. Finally, we use the array data to set a background color and a text in the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to display the color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0173f6588cd0db49687ec868bac0c846da7ae952" translate="yes" xml:space="preserve">
          <source>In this example we are using the &lt;code&gt;evenodd&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de88f05f8db36432f807ddbf5990b1403a4ecb6" translate="yes" xml:space="preserve">
          <source>In this example we create a function that will apply three different transformations to the SVG element that has been clicked on. In order to do this we create a separate &lt;a href=&quot;svgtransform&quot;&gt;&lt;code&gt;SVGTransform&lt;/code&gt;&lt;/a&gt; object for each transformation -- such as &lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt;, and &lt;code&gt;scale&lt;/code&gt;. We apply multiple transformation by appending the transform object to the &lt;code&gt;SVGTransformList&lt;/code&gt; associated with an SVG element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be366d5af68084a9d740b3524dc0ea0b7e53bc44" translate="yes" xml:space="preserve">
          <source>In this example we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. The cursor does not require us to select the data based on a key; we can just grab all of it. Also note that in each iteration of the loop, you can grab data from the current record under the cursor object using &lt;code&gt;cursor.value.foo&lt;/code&gt;. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/IDBcursor-example/&quot;&gt;IDBCursor example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/IDBcursor-example/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eff65887bdd82101774699c3b48378b321fabe" translate="yes" xml:space="preserve">
          <source>In this example we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the value of the cursor with &lt;code&gt;cursor.value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860dfabd12474dd4d7cc2d9f1c57f37ebf422b33" translate="yes" xml:space="preserve">
          <source>In this example we define two event handler functions &amp;mdash; &lt;code&gt;onclick&lt;/code&gt; and &lt;code&gt;onauxclick&lt;/code&gt;. The former changes the color of the button background, while the latter changes the button foreground (text) color. You can see the two functions in action by trying the demo out with a multi-button mouse (&lt;a href=&quot;https://mdn.github.io/dom-examples/auxclick/&quot;&gt;see it live on GitHub&lt;/a&gt;; also &lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/auxclick/index.html&quot;&gt;see the source code&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab31ccd2a18eaed1766aed70644304d542527f9" translate="yes" xml:space="preserve">
          <source>In this example we iterate over all pixels to change their values, then we put the modified pixel array back to the canvas using &lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt;putImageData()&lt;/a&gt;. The invert function simply subtracts each color from the max value 255. The grayscale function simply uses the average of red, green and blue. You can also use a weighted average, given by the formula &lt;code&gt;x = 0.299r + 0.587g + 0.114b&lt;/code&gt;, for example. See &lt;a href=&quot;http://en.wikipedia.org/wiki/Grayscale&quot;&gt;Grayscale&lt;/a&gt; on Wikipedia for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0eaa3839370e9b11f9d498e774d53db59f6a7b" translate="yes" xml:space="preserve">
          <source>In this example we open a database connection, then use transaction() to open a transaction on the database. For a complete example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d3846222bbea70252b7fa2cadb65bab7d20dab" translate="yes" xml:space="preserve">
          <source>In this example we show how an embedded cross-origin &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; can access a user&amp;rsquo;s cookies under a storage access policy that blocks third-party cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8f39f9074021c348ce30b9c798ab6cc65a4382" translate="yes" xml:space="preserve">
          <source>In this example we style a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element, then retrieve the styles using &lt;code&gt;getComputedStyle()&lt;/code&gt;, printing them into the text content of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94287e1eb4ed92f83036ee2cbfb18265405d90e1" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;fetchValidationData()&lt;/code&gt; is a function which loads the payment handler specific identifying information from the address given by &lt;code&gt;validationURL&lt;/code&gt;. By then delivering this data (or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves to the loaded data) to the payment handler by passing it into &lt;code&gt;complete()&lt;/code&gt;, the payment handler can use the retrieved data and whatever algorithm and other data to support in order to verify that the merchant can use the payment handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce707d59c5c11b6a532cc1062262495b2c90eb98" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; text node will be split into two text nodes and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; inserted between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fec8bd0711c0a1fe288f8fa37f597c0bb9cdaa" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element with a number of options is used to let the user order various food items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db519acbd6cd12c65f39c5250157a86b8bb16f5" translate="yes" xml:space="preserve">
          <source>In this example, a Mutation Observer is set up to watch for changes to the &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; attributes in any elements contained within a subtree that displays the names of users in a chat room. This lets the code, for example, reflect changes to users' nicknames, or to mark them as away from keyboard (AFK) or offline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8623707ae19e43abaddd0a1897272aa0510e3414" translate="yes" xml:space="preserve">
          <source>In this example, a drop zone is created, which responds to the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event by scanning through the dropped files and directories, outputting a hierarchical directory listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d91397658b0538cadcece929660b8681e953c5" translate="yes" xml:space="preserve">
          <source>In this example, a function is presented whose job it is to locate within a user's app data directory a JSON file containing a user dictionary for a specified language, then load that dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecec12f9ac5b042101f2549655100905a801d26a" translate="yes" xml:space="preserve">
          <source>In this example, a listener is added for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event by using the &lt;code&gt;&lt;a href=&quot;../globaleventhandlers/ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445a4dff0fe37a28c74e711c64e405b0e130c9d2" translate="yes" xml:space="preserve">
          <source>In this example, a media source is assigned to a newly-created &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab2015bc6e851b3989e1bf634866a489c3bfcad" translate="yes" xml:space="preserve">
          <source>In this example, a new &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event is created. &lt;code&gt;dc&lt;/code&gt; is a data channel which already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa899bca8fd3cc5d52875f9d4d8a36584a28a153" translate="yes" xml:space="preserve">
          <source>In this example, a new stream whose source is the user's local camera and microphone is requested using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;. When that stream becomes available (that is, when the returned &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is fulfilled, a button on the page is updated based on whether or not the stream is currently active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0777b73f2904d4e63b0147cb708ba7e8be39350f" translate="yes" xml:space="preserve">
          <source>In this example, a panorama is scrolled left-to-right. We're using &lt;a href=&quot;http://commons.wikimedia.org/wiki/File:Capitan_Meadows,_Yosemite_National_Park.jpg&quot;&gt;an image of Yosemite National Park&lt;/a&gt; we took from Wikipedia, but you could use any image that's larger than the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b549b3af1035399e0042a4215c63b40485711610" translate="yes" xml:space="preserve">
          <source>In this example, a request is created and sent, and a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; handler is established to look for the &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; to indicate that the headers have been received; when that is the case, the value of the &lt;code&gt;Content-Type&lt;/code&gt; header is fetched. If the &lt;code&gt;Content-Type&lt;/code&gt; isn't the desired value, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; is canceled by calling &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;abort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd6c928683051ce0353aa453a116c96cbb919cd" translate="yes" xml:space="preserve">
          <source>In this example, a routine called &lt;code&gt;sendMessage()&lt;/code&gt; is created; it accepts an object as input and sends to the remote peer, over the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;, a JSON string with the specified object and a time stamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e800b02224e03b8e4508e406f32fc7ae938020" translate="yes" xml:space="preserve">
          <source>In this example, a video is presented in a web page. Pressing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7553087c5ea0bcb1176c2f4f434d8d4afcf61618" translate="yes" xml:space="preserve">
          <source>In this example, all of the audio tracks on a given element are muted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2753b38ccd7fd72e7681d2f0f313030c88d93803" translate="yes" xml:space="preserve">
          <source>In this example, an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; is created and filled with content, then a specific element within the document is scrolled into view in the frame. Once that's done, the vertical scroll position is checked by looking at the value of &lt;code&gt;pageYOffset&lt;/code&gt; in the frame's &lt;a href=&quot;../htmliframeelement/contentwindow&quot;&gt;&lt;code&gt;contentWindow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3283f576040dbc538fd2abec4ec5a475e73b4500" translate="yes" xml:space="preserve">
          <source>In this example, an &lt;code&gt;onmute&lt;/code&gt; handler is established to set the content HTML of an element to display the &quot;muted speaker&quot; Emoji.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cb8ae243a3dd66f800b23e5566571583b3449c" translate="yes" xml:space="preserve">
          <source>In this example, an audio context is created, then a &lt;code&gt;ConstantSourceNode&lt;/code&gt; is established with its &lt;code&gt;offset&lt;/code&gt; initialized to 0.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4988685974cd44d8c51603e933d72494389ccb17" translate="yes" xml:space="preserve">
          <source>In this example, an event handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/selectedcandidatepairchange&quot;&gt;selectedcandidatepairchange&lt;/a&gt;&lt;/code&gt; is set up to update an on-screen display showing the protocol used by the currently selected candidate pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd2936f85b53eeb145d70d84bc0691f43f4f2bb" translate="yes" xml:space="preserve">
          <source>In this example, an event handler is established so that clicking a button starts capturing the contents of a media element with the ID &lt;code&gt;&quot;playback&quot;&lt;/code&gt; into a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;. The stream can then be used for other purposes&amp;mdash;like a source for streaming over WebRTC, to allow sharing prerecorded videos with another person during a video call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b2efe73d871e19d88c213c4adbb245db86c7e0" translate="yes" xml:space="preserve">
          <source>In this example, an event listener is added to the window (the event target). If, from an external source, a tab, a link, marked text or a file is dragged and dropped onto this window, the alert is fired. Note how &lt;code&gt;event.stopPropagation();&lt;/code&gt; prevents the browser from loading the dropped tab, link or file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b690e5b6ba5733a149cf38c64d196c6e4b1e7021" translate="yes" xml:space="preserve">
          <source>In this example, before attempting to request full-screen mode for a video element, the value of &lt;code&gt;fullscreenEnabled&lt;/code&gt; is checked, in order to avoid making the attempt when not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612c8be2c94c9a550c727aa3fb9a83fe1a2915c5" translate="yes" xml:space="preserve">
          <source>In this example, constraints are applied at &lt;code&gt;getUserMedia()&lt;/code&gt; time, asking for an ideal set of options with fallbacks for the video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec34774fc07a9affedec82ac24370cd5d09c33a2" translate="yes" xml:space="preserve">
          <source>In this example, copy is the effect that is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580eb57dc98480d367a8456413811fa8359cd2ca" translate="yes" xml:space="preserve">
          <source>In this example, it has already been determined that ICE restart is needed, and that negotiation needs to be done using a different ICE server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd2235c4e7e3020e6a6c71b8df9ad0168a02431" translate="yes" xml:space="preserve">
          <source>In this example, one &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; is created for each logical processor reported by the browser and a record is created which includes a reference to the new worker as well as a Boolean value indicating whether or not we're using that worker yet; these objects are, in turn, stored into an array for later use. This creates a pool of workers we can use to process requests later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26c1e49c118d7a73b7002bf47ebd9673e0f5075" translate="yes" xml:space="preserve">
          <source>In this example, only HTML documents retrieved with the GET HTTP verb will be cached. If our &lt;code&gt;if()&lt;/code&gt; condition is false, then this fetch handler won't intercept the request. If there are any other fetch handlers registered, they will get a chance to call &lt;code&gt;event.respondWith()&lt;/code&gt;. If no fetch handlers call &lt;code&gt;event.respondWith()&lt;/code&gt;, the request will be handled by the browser as if there were no service worker involvement. If &lt;code&gt;fetch()&lt;/code&gt; returns a valid HTTP response with an response code in the 4xx or 5xx range, the &lt;code&gt;catch()&lt;/code&gt; will NOT be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae4cdf19eb6e5d809b1054493ff7f1d42907e63" translate="yes" xml:space="preserve">
          <source>In this example, only a copy is allowed. You can combine the values in various ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf772260b685eb66c6342eb172925afdb0e7fcd" translate="yes" xml:space="preserve">
          <source>In this example, playback of video is toggled off and on by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt;&lt;code&gt;playVideo()&lt;/code&gt; function. It tries to play the video, and if successful sets the class name of the &lt;code&gt;playButton&lt;/code&gt; element to &lt;code&gt;&quot;playing&quot;&lt;/code&gt;. If playback fails to start, the &lt;code&gt;playButton&lt;/code&gt; element's class is cleared, restoring its default appearance. This ensures that the play button matches the actual state of playback by watching for the resolution or rejection of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;play()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93abc1b7f6ad1ed74a87393f318cf42607eee37" translate="yes" xml:space="preserve">
          <source>In this example, taken from the &lt;code&gt;animateScene()&lt;/code&gt; method in the article &lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt;A basic 2D WebGL animation example&lt;/a&gt;, obtains the locations of three uniforms from the shading program, then sets the value of each of the three uniforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cef1164ab5b2f3be86d7a7527912b1a880ae0e" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and slider controls are used to change the &lt;code&gt;playbackRate&lt;/code&gt;, &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt; properties on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e191f3c43d3c9e76a208ca7989db6ff0625ab7f0" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and slider controls are used to change the &lt;code&gt;playbackRate&lt;/code&gt;, &lt;code&gt;loopStart&lt;/code&gt;, and &lt;code&gt;loopEnd&lt;/code&gt; properties on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1a8ca3c62625b8e7dc68235a2c841adebd9aea" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track, and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and a slider control is used to change the &lt;code&gt;playbackRate&lt;/code&gt; property value on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0e85313768f4fee34737467a678f39e1f405b8" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and a slider control is used to change the &lt;code&gt;playbackRate&lt;/code&gt; property value on the fly. When the audio is played, it loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163e2e79d4911243af806737cb607859685dd893" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;datachannel&lt;/code&gt; event handler is set up to save the data channel reference and set up handlers for the events which need to be monitored. The &lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt;&lt;code&gt;channel&lt;/code&gt;&lt;/a&gt; property provides the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; representing the connection to the other peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b49c5969e6d0a7e0e1124fcf0c205ef567427d" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;getData()&lt;/code&gt; function uses XHR to load an audio track, setting the &lt;code&gt;responseType&lt;/code&gt; of the request to &lt;code&gt;arraybuffer&lt;/code&gt; so that it returns an array buffer as its &lt;code&gt;response&lt;/code&gt; that we then store in the &lt;code&gt;audioData&lt;/code&gt; variable . We then pass this buffer into a &lt;code&gt;decodeAudioData()&lt;/code&gt; function; the success callback takes the successfully decoded PCM data, puts it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; created using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBufferSource&quot;&gt;&lt;code&gt;AudioContext.createBufferSource()&lt;/code&gt;&lt;/a&gt;, connects the source to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/destination&quot;&gt;&lt;code&gt;AudioContext.destination&lt;/code&gt;&lt;/a&gt; and sets it to loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2553f447b0a7f13d7f858289824a799f7edf6b6" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;tcpType&lt;/code&gt; are used to adjust the user interface for simultaneous-open TCP candidates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15416d370de442429f39af7e3c76d675ab370e0a" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is checked, and then debugging output is presented, based on the candidate type, including the candidate's &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;relatedAddress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201f60616bca196654e9402b2b58dfcb78cfa71c" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is checked, and then debugging output is presented, based on the candidate type, including the candidate's type, address (&lt;code&gt;ip&lt;/code&gt; and &lt;a href=&quot;port&quot;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/a&gt;), and related address (&lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;relatedPort&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c1518f1b3061d52806a8f57541db39fc55ffb7" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is used to present a modified user interface for host candidates (those where the &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; refers directly to the remote peer, rather than an intermediary).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6f3b02d5deab8a3b83310b17000c961201387b" translate="yes" xml:space="preserve">
          <source>In this example, the code first checks whether the browser supports service workers and if so registers one. Next, it adds and &lt;code&gt;updatefound&lt;/code&gt; event in which it uses the service worker registration to listen for further changes to the service worker's state. If the service worker hasn't changed since the last time it was registered, than the &lt;code&gt;updatefound&lt;/code&gt; event will not be fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa403877c4c43915e3268d68d935f629ac5ca29" translate="yes" xml:space="preserve">
          <source>In this example, the control point is red and the start and end points are blue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5baaf426e8d237b19f4d2fe7c1d60995299a72" translate="yes" xml:space="preserve">
          <source>In this example, the control points are red and the start and end points are blue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982ef6acb98509f633dea2c864771fc9ba468835" translate="yes" xml:space="preserve">
          <source>In this example, the current mouse coordinates are drawn while you mouse around after clicking and holding down on an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca785739fa3691c8d03322adc082ae3250ff3a6c" translate="yes" xml:space="preserve">
          <source>In this example, the drop-down menus dynamically update such DOM-accessible aspects of the web page as its background color (&lt;code&gt;bgColor&lt;/code&gt;), the color of the hyperlinks (&lt;code&gt;aLink&lt;/code&gt;), and color of the text (&lt;code&gt;text&lt;/code&gt;). However, you design your test pages, testing the interfaces as you read about them is an important part of learning how to use the DOM effectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465b3a82d486e0aec332aa8b645b205a38bbf8ad" translate="yes" xml:space="preserve">
          <source>In this example, the element with the class &lt;code&gt;droparea&lt;/code&gt; will receive a 1 pixel black border while it is a valid drop target, that is, if the &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; method was called during the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event. Note that you must cancel the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event for this pseudoclass to apply, as this state is not checked for the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6e83c0e3cf81e14e1c69317467e959134733b7" translate="yes" xml:space="preserve">
          <source>In this example, the entire document is placed into full-screen mode by calling &lt;a href=&quot;../element/requestfullscreen&quot;&gt;&lt;code&gt;requestFullscreen()&lt;/code&gt;&lt;/a&gt; on the document's &lt;a href=&quot;../document/documentelement&quot;&gt;&lt;code&gt;Document.documentElement&lt;/code&gt;&lt;/a&gt;, which is the document's root &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html&quot;&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367095866ab40684b1f0a53b14ca330364c3c585" translate="yes" xml:space="preserve">
          <source>In this example, the event handler will fire each time a new selection is made. &lt;code&gt;console.log(selection.type)&lt;/code&gt; will return &lt;code&gt;Caret&lt;/code&gt; or &lt;code&gt;Range&lt;/code&gt; depending on whether the caret is placed at a single point in the text, or a range has been selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f753d4b527f43838b7ad05090d3a32e196476272" translate="yes" xml:space="preserve">
          <source>In this example, the event returns false only if the data transfer contains the &lt;code&gt;application/x-moz-file&lt;/code&gt; type. During the drop event, the data associated with the file type is retrieved, and the filename of the file is added to the listbox. Note that the &lt;code&gt;instanceof&lt;/code&gt; operator is used here as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozGetDataAt&quot;&gt;&lt;code&gt;mozGetDataAt()&lt;/code&gt;&lt;/a&gt; method will return an &lt;code&gt;nsISupports&lt;/code&gt; that needs to be checked and converted into an nsIFile. This is also a good extra check in case someone made a mistake and added a non-file for this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35f4e83e991b38c8b525ed5db71d9282a02e058" translate="yes" xml:space="preserve">
          <source>In this example, the first element in the document with the class &quot;&lt;code&gt;myclass&lt;/code&gt;&quot; is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eda5ee6535afdac60c8225b0d92fac23d7db6ad" translate="yes" xml:space="preserve">
          <source>In this example, the path created by &lt;code&gt;arcTo()&lt;/code&gt; is &lt;strong&gt;thick and black&lt;/strong&gt;. Tangent lines are gray, control points are red, and the start point is blue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cda7d3e1d677b1c13eac19d45b39f188eb4bd0" translate="yes" xml:space="preserve">
          <source>In this example, the specified easing only applies from the keyframe where it is specified until the next keyframe. Any &lt;code&gt;easing&lt;/code&gt; value specified on the &lt;code&gt;options&lt;/code&gt; argument, however, applies across a single iteration of the animation &amp;mdash; for the entire duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267559976150f69d6d4d0c2b0d5569c75b7e94b1" translate="yes" xml:space="preserve">
          <source>In this example, the supported constraints are fetched, and a control that lets the user configure the frame rate is disabled if the &lt;code&gt;frameRate&lt;/code&gt; constraint isn't supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1714fe91905ce13bda4c1d188a50423345b1a9" translate="yes" xml:space="preserve">
          <source>In this example, the window will be resizable, it will render scrollbar(s) if needed, if the content overflows requested window dimensions and it will render the status bar. It will not render the menubar nor the location bar. Since the author knew about the size of the image (400 pixels wide and 200 pixels high), they added the margins applied to the root element in MSIE 6 which is 15 pixels for top margin, 15 pixels for the bottom margin, 10 pixels for the left margin and 10 pixels for the right margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6668171476bd59987c3b7afd0c6951a8ff53c28" translate="yes" xml:space="preserve">
          <source>In this example, we are creating a rectangle and a circle. Both are stored as a &lt;code&gt;Path2D&lt;/code&gt; object, so that they are available for later usage. With the new &lt;code&gt;Path2D&lt;/code&gt; API, several methods got updated to optionally accept a &lt;code&gt;Path2D&lt;/code&gt; object to use instead of the current path. Here, &lt;code&gt;stroke&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; are used with a path argument to draw both objects onto the canvas, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52f843befec7a52e6f5e41fd4174d560b5ab04a" translate="yes" xml:space="preserve">
          <source>In this example, we assume the user initiates a touch on an element with an id of &lt;code&gt;source&lt;/code&gt;, moves within the element or out of the element and then releases contact with the surface. When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; event handler is invoked, the changes in the &lt;a href=&quot;clientx&quot;&gt;&lt;code&gt;Touch.clientX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;clienty&quot;&gt;&lt;code&gt;Touch.clientY&lt;/code&gt;&lt;/a&gt; coordinates, from the starting touch point to the ending touch point, are calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0c118e28b688be6a0747aa72e0a1aa68c483fd" translate="yes" xml:space="preserve">
          <source>In this example, we create a function called &lt;code&gt;updateDeviceList()&lt;/code&gt;, which is called once when &lt;a href=&quot;getusermedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; successfully obtains a stream, and then is called any time the device list changes. It displays in the browser window two lists: one of audio devices and one of video devices, with both the device's label (name) and whether it's an input or an output device. Because the example provides a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; event, the list is refreshed any time a media device is attached to or removed from the device running the sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d7dc59eefb2ee5886f4e878b891431cb41de58" translate="yes" xml:space="preserve">
          <source>In this example, we create a two second buffer, fill it with white noise, and then play it via an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. The comments should clearly explain what is going on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab986e1b6786156fa6be771a1b43c8e4dbf2328" translate="yes" xml:space="preserve">
          <source>In this example, we create a two-second buffer, fill it with white noise, and then play it using an &lt;code&gt;AudioBufferSourceNode&lt;/code&gt;. The comments should clearly explain what is going on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e482baa2c8cd7d195256df32d2f9f1e92606735" translate="yes" xml:space="preserve">
          <source>In this example, we create an exerciser which lets you experiment with media constraints by editing the source code describing the constraint sets for audio and video tracks. You can then apply those changes and see the result, including both what the stream looks like and what the actual media settings are set to after applying the new constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd46de23b07410450ff05b715974c2d2c9756e48" translate="yes" xml:space="preserve">
          <source>In this example, we create three &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; blocks. The first and third have the same contents and attributes, while the second is different. Then we run some JavaScript to compare the nodes using &lt;code&gt;isEqualNode()&lt;/code&gt; and output the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bd8b1ecedb3b66ec35fd0745aeaf21cf758ef8" translate="yes" xml:space="preserve">
          <source>In this example, we create three &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; blocks. The first and third have the same contents and attributes, while the second is different. Then we run some JavaScript to compare the nodes using &lt;code&gt;isSameNode()&lt;/code&gt; and output the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce294ed21690ab98ca2ee9531ef435f32db0ec3d" translate="yes" xml:space="preserve">
          <source>In this example, we demonstrate how to handle any undelivered &lt;a href=&quot;../mutationrecord&quot;&gt;&lt;code&gt;MutationRecord&lt;/code&gt;&lt;/a&gt;s by calling &lt;code&gt;takeRecords()&lt;/code&gt; just before disconnecting the observer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cd073c24971ec516ca42696a4fac4a4aef872b" translate="yes" xml:space="preserve">
          <source>In this example, we grab a media (audio + video) stream from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt;&lt;code&gt;navigator.getUserMedia&lt;/code&gt;&lt;/a&gt;, feed the media into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element to play then mute the audio, but then also feed the audio into a &lt;a href=&quot;mediastreamaudiosourcenode&quot;&gt;&lt;code&gt;MediaStreamAudioSourceNode&lt;/code&gt;&lt;/a&gt;. Next, we feed this source audio into a low pass &lt;a href=&quot;biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; (which effectively serves as a bass booster), then a &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc58765134b1f7e62cc7ef555821b468da9d29c" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with a single button (see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When this button is pressed, &lt;code&gt;setValueCurveAtTime()&lt;/code&gt; is used to change the gain value between the values contained in the waveArray array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf0481644782b94cadbf7ac0020968d1b303da9" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;audio-param repo&lt;/a&gt; for the source code, or &lt;a href=&quot;http://mdn.github.io/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;exponentialRampToValueAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively. This is pretty useful for fade in/fade out effects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2188bb6508942db951a84aadd2a902856171d6ba" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;audio-param repo&lt;/a&gt; for the source code, or &lt;a href=&quot;http://mdn.github.io/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;linearRampToValueAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively. This is pretty useful for fade in/fade out effects, although &lt;a href=&quot;exponentialramptovalueattime&quot;&gt;&lt;code&gt;AudioParam.exponentialRampToValueAtTime()&lt;/code&gt;&lt;/a&gt; is often said to be a bit more natural.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea847032a52a9255c530666fe41bee22f86d8247" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;setTargetAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively, with the effect starting after 1 second, and the length of time the effect lasts being controlled by the timeConstant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9630380a9675da2560954aaf7b1eafa480b5cb09" translate="yes" xml:space="preserve">
          <source>In this example, we have an app that displays information about the number of channels available. To keep it up to date, handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; events are set up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c303f6da21dfb3d8c2b33d0a464e641f1dd2701" translate="yes" xml:space="preserve">
          <source>In this example, we have two paragraphs containing spans, each one containing a single word. The first one is set as the &lt;code&gt;anchorNode&lt;/code&gt; and the second is set as the &lt;code&gt;focusNode&lt;/code&gt;. We also have an additional paragraph that sits in between the two nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ca574b9f153f27f1c2ef8e8cb8240fc8d35f1d" translate="yes" xml:space="preserve">
          <source>In this example, we log to the screen which tone just finished playing. In a more advanced application, you might update the user interface, for example, to indicate which note is currently playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b7a389aa7c652466b303aba75d21853bc7296f" translate="yes" xml:space="preserve">
          <source>In this example, we make one canvas the drag image. As the canvas is 50 pixels wide and 50 pixels high, we use offsets of half of this (25 and 25) so that the image appears centered on the mouse pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46188d764f23e23d335bbe677679eb481f819f5" translate="yes" xml:space="preserve">
          <source>In this example, we obtain the usage estimates and present the percentage of storage capacity currently used to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9337e308804ef69389c8d203e7e002cfad5dbac6" translate="yes" xml:space="preserve">
          <source>In this example, we once again use two &lt;code&gt;for&lt;/code&gt; loops to draw a grid of rectangles, each in a different color. The resulting image should look something like the screenshot. There is nothing too spectacular happening here. We use the two variables &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to generate a unique RGB color for each square, and only modify the red and green values. The blue channel has a fixed value. By modifying the channels, you can generate all kinds of palettes. By increasing the steps, you can achieve something that looks like the color palettes Photoshop uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98af2039db8b66e977aa7991dd9d63518587d6f0" translate="yes" xml:space="preserve">
          <source>In this example, we provide a simple value of &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;audio&lt;/code&gt; property. This tells &lt;code&gt;getUserMedia()&lt;/code&gt; that we require an audio track, but we don't care about any specifics beyond that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb70d56b359412c2a32569e1159e9c723a8316c7" translate="yes" xml:space="preserve">
          <source>In this example, we provide a simple value of &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;video&lt;/code&gt; property. This tells &lt;code&gt;getUserMedia()&lt;/code&gt; that we require a video track, but we don't care about any specifics beyond that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39a66a1a2f22dad8eb5785967592dff2d095705" translate="yes" xml:space="preserve">
          <source>In this example, we see a function which receives as input an SDP string containing an ICE candidate received from the remote peer during the signaling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07de7f5b0b830e6f80bde783fd8477ffaba0c870" translate="yes" xml:space="preserve">
          <source>In this example, we see a function which stops a streamed video by calling &lt;code&gt;stop()&lt;/code&gt; on every track on a given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a762c8a948bcebca5803e4da85bcb88b890eb53" translate="yes" xml:space="preserve">
          <source>In this example, we see how to obtain the list of form controls as well as how to access its members by index and by name or ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e94b37ba240c064e307d3a473ef2d23402a3fc7" translate="yes" xml:space="preserve">
          <source>In this example, we see the client-side code needed to support merchant validation for a payment request called &lt;code&gt;payRequest&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397540554038af1abe7e13ccd4b7117cb5f6cbe6" translate="yes" xml:space="preserve">
          <source>In this example, we set the &lt;code&gt;myP&lt;/code&gt; variable to the DOM object for the second &lt;code&gt;p&lt;/code&gt; element inside the body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193a5e01e317a4cf3badfeacdf6f6924e166662a" translate="yes" xml:space="preserve">
          <source>In this example, we use the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/transitionrun&quot;&gt;transitionrun&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/transitionend&quot;&gt;transitionend&lt;/a&gt;&lt;/code&gt; events to detect when the transition begins and ends, to cause a text update to occur during the transition. This could also be used to trigger animations or other effects, to allow chaining of reactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfea6be697c26a8e3b806b6a604c6b803f975696" translate="yes" xml:space="preserve">
          <source>In this example, we use the &lt;code&gt;contains&lt;/code&gt; method to check if the type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt; is present in the list of types. If it is, we will cancel the event so that a drop may be allowed. If the drag data does not contain a link, the event will not be cancelled, and a drop cannot occur at that location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c125208a146c8df7cf111d5d4b663bb2d72f5078" translate="yes" xml:space="preserve">
          <source>In this example, we use two &lt;code&gt;for&lt;/code&gt; loops and the &lt;a href=&quot;arc&quot;&gt;&lt;code&gt;arc()&lt;/code&gt;&lt;/a&gt; method to draw a grid of circles, each having a different stroke color. To achieve this, we use the two variables &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to generate a unique RGB color for each circle, and only modify the green and blue values. (The red channel has a fixed value.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7ece5ac40d64b3011ce5d10aef00c57dce8beb" translate="yes" xml:space="preserve">
          <source>In this example, we use two &lt;code&gt;for&lt;/code&gt; loops to draw a grid of rectangles, each having a different fill color. To achieve this, we use the two variables &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to generate a unique RGB color for each square, and only modify the red and green values. (The blue channel has a fixed value.) By modifying the channels, you can generate all kinds of palettes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be30db5e965764d08737c1735711edf22d8bf31f" translate="yes" xml:space="preserve">
          <source>In this example, we watch for changes both to the charging status (whether or not we're plugged in and charging) and for changes to the battery level and timing. This is done by listening for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae1903a2ce8da21cbd358cb28830bbf3a11b07c" translate="yes" xml:space="preserve">
          <source>In this example, we will be altering the gain value of a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; using an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; with a slow frequency value. This technique is know as an &lt;em&gt;LFO&lt;/em&gt;-controlled parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f0b555340040f31f931795cc5628714d581fce" translate="yes" xml:space="preserve">
          <source>In this example, we will open an &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; connection linking two elements on the same page. While that's obviously a contrived scenario, it's useful for demonstrating the flow of connecting two peers. We'll cover the mechanics of accomplishing the connection and transmitting and receiving data, but we will save the bits about locating and linking to a remote computer for another example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc0efdb9335d1e7ab7fba33a0a6e566348c0244" translate="yes" xml:space="preserve">
          <source>In this example, we'll actually rotate our square plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ae0369b063e5cb8b02e4cd4f3cc3db65cf0a8d" translate="yes" xml:space="preserve">
          <source>In this example, we'll create two different gradients. As you can see here, both the &lt;code&gt;strokeStyle&lt;/code&gt; and &lt;code&gt;fillStyle&lt;/code&gt; properties can accept a &lt;code&gt;canvasGradient&lt;/code&gt; object as valid input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814128aec4e84ce67ab137a622034343272a35c8" translate="yes" xml:space="preserve">
          <source>In this example, we'll define four different radial gradients. Because we have control over the start and closing points of the gradient, we can achieve more complex effects than we would normally have in the &quot;classic&quot; radial gradients we see in, for instance, Photoshop (that is, a gradient with a single center point where the gradient expands outward in a circular shape).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf24155846543a1d608deadac53d6bae4401a7a" translate="yes" xml:space="preserve">
          <source>In this example, we'll demonstrate how changing the orientation parameters of a &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; in combination with &lt;a href=&quot;coneinnerangle&quot;&gt;&lt;code&gt;coneInnerAngle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;coneouterangle&quot;&gt;&lt;code&gt;coneOuterAngle&lt;/code&gt;&lt;/a&gt; affects volume. To help us visualise how the orientation vector affects, we can use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Right-hand_rule&quot;&gt;Right-hand rule&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bd2e6da323133b67c6f5dd47b77a02943750d6" translate="yes" xml:space="preserve">
          <source>In this example, we'll draw a background of four different colored squares. On top of these, we'll draw a set of semi-transparent circles. The &lt;code&gt;globalAlpha&lt;/code&gt; property is set at &lt;code&gt;0.2&lt;/code&gt; which will be used for all shapes from that point on. Every step in the &lt;code&gt;for&lt;/code&gt; loop draws a set of circles with an increasing radius. The final result is a radial gradient. By overlaying ever more circles on top of each other, we effectively reduce the transparency of the circles that have already been drawn. By increasing the step count and in effect drawing more circles, the background would completely disappear from the center of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e6f189c11322e25d3b6e4f1f02eabbb327fe6b" translate="yes" xml:space="preserve">
          <source>In this example, we'll draw three lines, each with a different value for the &lt;code&gt;lineCap&lt;/code&gt; property. I also added two guides to see the exact differences between the three. Each of these lines starts and ends exactly on these guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f43b2c421608328632877c3d333f1f5d4347714" translate="yes" xml:space="preserve">
          <source>In this example, we'll take a look at how you can use &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;requestIdleCallback()&lt;/code&gt;&lt;/a&gt; to run time-consuming, low-priority tasks during time the browser would otherwise be idle. In addition, this example demonstrates how to schedule updates to the document content using &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e17790be8217891122ba9446c743e32e6b8ece" translate="yes" xml:space="preserve">
          <source>In this example, we'll use a circular clipping path to restrict the drawing of a set of random stars to a particular region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266ee78f5cef2206a78b0c9edd7e566f1c1b980e" translate="yes" xml:space="preserve">
          <source>In this example, we'll use an image as a wallpaper and repeat it several times on the canvas. This is done simply by looping and placing the scaled images at different positions. In the code below, the first &lt;code&gt;for&lt;/code&gt; loop iterates over the rows. The second &lt;code&gt;for&lt;/code&gt; loop iterates over the columns. The image is scaled to one third of its original size, which is 50x38 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022a2e3e42b8d904439f150fc539e6602925f0ad" translate="yes" xml:space="preserve">
          <source>In this example, we'll use the &lt;code&gt;rotate()&lt;/code&gt; method to first rotate a rectangle from the canvas origin and then from the center of the rectangle itself with the help of &lt;code&gt;translate()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58fa8c8ea0380b25ba655c866f0bb3a7fd8a411" translate="yes" xml:space="preserve">
          <source>In this example, we'll use the same rhino as in the previous example, but we'll slice out its head and composite it into a picture frame. The picture frame image is a 24-bit PNG which includes a drop shadow. Because 24-bit PNG images include a full 8-bit alpha channel, unlike GIF and 8-bit PNG images, it can be placed onto any background without worrying about a matte color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ea17c4f059e35225af14b1428fb4f8cc607a3f" translate="yes" xml:space="preserve">
          <source>In this example, we're not computing any lighting at all, since we haven't yet applied any to the scene. That will come later, in the example &lt;a href=&quot;lighting_in_webgl&quot;&gt;Lighting in WebGL&lt;/a&gt;. Note also the lack of any work with textures here; that will be added in &lt;a href=&quot;using_textures_in_webgl&quot;&gt;Using textures in WebGL&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f0f67e4ce391ad82aaecc6f16683f4555d0d01" translate="yes" xml:space="preserve">
          <source>In this example, we're turning the element with the ID &lt;code&gt;dropbox&lt;/code&gt; into our drop zone. This is done by adding listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fd2479a473fe2accd8672d7ae0f1020810c674" translate="yes" xml:space="preserve">
          <source>In this example, when selecting &lt;code&gt;&quot;.outer .inner&quot;&lt;/code&gt; in the context the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with the class &lt;code&gt;&quot;select&quot;&lt;/code&gt;, the element with the class &lt;code&gt;&quot;.inner&quot;&lt;/code&gt; is still found, even though &lt;code&gt;.outer&lt;/code&gt; is not a descendant of the base element on which the search is performed (&lt;code&gt;&quot;.select&quot;&lt;/code&gt;). By default, &lt;code&gt;querySelectorAll()&lt;/code&gt; only verifies that the last element in the selector is within the search scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca8b2079efbc5a79438c07b451ae507ba7434a5" translate="yes" xml:space="preserve">
          <source>In this example, you use the &lt;a href=&quot;../pointer_events&quot;&gt;&lt;code&gt;pointer events&lt;/code&gt;&lt;/a&gt; to simultaneously detect two pointing devices of any type, including fingers, mice, and pens. The pinch in (zoom out ) gesture, which moves the two pointers toward each other, changes the target element's background color to &lt;code&gt;lightblue&lt;/code&gt;. The pinch out (zoom in) gesture, which moves the two pointers away from each other, changes the target element's background color to &lt;code&gt;pink&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5046379abd72346ca7dcb8f46945c3c6656e0318" translate="yes" xml:space="preserve">
          <source>In this first example, the first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element which either has no type or has type &quot;text/css&quot; in the HTML document body is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda36049e9aa613d57cbac65ccca7948c4968fc7" translate="yes" xml:space="preserve">
          <source>In this game, Alice has an animation that causes her to go from small to big which we control via a bottle and a cupcake. Both of these have their own animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb79012abaf6107ed9af637c940e7ec0f1c7c46e" translate="yes" xml:space="preserve">
          <source>In this group, &lt;code&gt;mozilla.org&lt;/code&gt;, &lt;code&gt;www.mozilla.org&lt;/code&gt;, and &lt;code&gt;joe.blogs.mozilla.org&lt;/code&gt; can aggregately use a maximum of 20% of the global limit. &lt;code&gt;firefox.com&lt;/code&gt; has a separate maximum of 20%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e182f7ec1df8b63f7f0149897b2fd1b4dac845" translate="yes" xml:space="preserve">
          <source>In this guide, we'll take a look at how to use &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to issue &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP&quot;&gt;HTTP&lt;/a&gt; requests in order to exchange data between the web site and a server. Examples of both common and more obscure use cases for &lt;code&gt;XMLHttpRequest&lt;/code&gt; are included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f5b5a68fd39578d554023865d5245c7df478f2" translate="yes" xml:space="preserve">
          <source>In this last example, we'll create a pattern to assign to the &lt;code&gt;fillStyle&lt;/code&gt; property. The only thing worth noting is the use of the image's &lt;code&gt;onload&lt;/code&gt; handler. This is to make sure the image is loaded before it is assigned to the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef73d8b96e3c24bc5aaa79fb46030447718ec1c" translate="yes" xml:space="preserve">
          <source>In this last example, we'll draw shapes with different scaling factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ca7ed45b8da0b66d08458393d793cf5ef4808a" translate="yes" xml:space="preserve">
          <source>In this revised example, the audio and video capabilities include possible codecs which should be permitted, and therefore are valid requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51085302b40fcc099af63f040e198ec714817da9" translate="yes" xml:space="preserve">
          <source>In this sample from a hypothetical instant messaging client, a data channel is created, then handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; events are set up to enable and disable user interface objects based on the state of the channel. This way, the message entry field and the send button are only enabled for use when the connection is actually open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379d3246f5406ec54e7fd0d095b9573687300cf0" translate="yes" xml:space="preserve">
          <source>In this second example, we do something similar to the one above, but instead of drawing circles on top of each other, I've drawn small rectangles with increasing opacity. Using &lt;code&gt;rgba()&lt;/code&gt; gives you a little more control and flexibility because we can set the fill and stroke style individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2cb59106a8f250c21ba056000d24c7048b0a78" translate="yes" xml:space="preserve">
          <source>In this section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f0061b9db31137ebd46a70468da2be4481cf47" translate="yes" xml:space="preserve">
          <source>In this section we will first cover the older callback-based system and then the newer promise-based syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e6a6420d067c107db21582be6db10d8306f1d7" translate="yes" xml:space="preserve">
          <source>In this section we'll discuss the &lt;code&gt;displayPoseStats()&lt;/code&gt; function, which displays our updated pose data on each frame. The function is fairly simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc82d7cefd9413d0371a52786476131facb6c5f" translate="yes" xml:space="preserve">
          <source>In this simple example, an event listener for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; event is set up to enable a &quot;Start&quot; button in the user interface when the node stops playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95f20b6e939798cff1ad8b1476f55e7ed05bbb3" translate="yes" xml:space="preserve">
          <source>In this simple example, an intersection callback is used to update a counter of how many targeted elements are currently intersecting with the &lt;a href=&quot;../intersectionobserver/root&quot;&gt;intersection root&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f69406f44746401693b0b0ca00283839421f947" translate="yes" xml:space="preserve">
          <source>In this simple example, an intersection callback sets each target element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt; to the intersection ratio of that element with the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8770d442b646ceb6f776efde1f482da12ad52e60" translate="yes" xml:space="preserve">
          <source>In this simple example, an intersection callback stores the intersection rectangle for later use by the code that draws the target elements' contents, so that only the visible area is redrawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83744b534492cb2ff2bd028e44378cb72e7e58c5" translate="yes" xml:space="preserve">
          <source>In this simple example, each targeted element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt; is set to its &lt;a href=&quot;intersectionratio&quot;&gt;&lt;code&gt;intersectionRatio&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3628ae8209202b0b2c37b436dfd071255a3fef" translate="yes" xml:space="preserve">
          <source>In this simple example, some basic style properties of an HTML paragraph element are accessed using the style object on the element and that object's CSS style properties, which can be retrieved and set from the DOM. In this case, you are manipulating the individual styles directly. In the next example (see Example 4), you can use stylesheets and their rules to change styles for whole documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc9de96d086a09ee6097fc69fdf1594bb8c872e" translate="yes" xml:space="preserve">
          <source>In this simple example, we declare both an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;OfflineAudioContext&lt;/code&gt; object. We use the &lt;code&gt;AudioContext&lt;/code&gt; to load an audio track via XHR (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt;&lt;/a&gt;), then the &lt;code&gt;OfflineAudioContext&lt;/code&gt; to render the audio into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; and play the track through. After the offline audio graph is set up, you need to render it to an &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;startrendering&quot;&gt;&lt;code&gt;OfflineAudioContext.startRendering&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e4af4070c1ad769f784c88b76d773a5e5c44ea" translate="yes" xml:space="preserve">
          <source>In this simple example, we declare both an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;OfflineAudioContext&lt;/code&gt; object. We use the &lt;code&gt;AudioContext&lt;/code&gt; to load an audio track via XHR (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt;&lt;/a&gt;), then the &lt;code&gt;OfflineAudioContext&lt;/code&gt; to render the audio into an &lt;a href=&quot;audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; and play the track through. After the offline audio graph is set up, you need to render it to an &lt;a href=&quot;audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;offlineaudiocontext/startrendering&quot;&gt;&lt;code&gt;OfflineAudioContext.startRendering&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681ab51c9dd14526c8ee92e5a13e0431bfa956dd" translate="yes" xml:space="preserve">
          <source>In this simple example, we fetch the user's location and display the resulting coordinates once they're returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05d3336a426baa2f1e1a5bcaabb75b821cb1751" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then count the number of records in the store using &lt;code&gt;count()&lt;/code&gt; &amp;mdash; when the success handler fires, we log the count value (an integer) to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55594aaf4907355f8a97d6ded8e81c58aeddff5c" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. If the &lt;code&gt;albumTitle&lt;/code&gt; of the current cursor is &quot;A farewell to kings&quot;, we update year the album was released using &lt;code&gt;var request = cursor.update();&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d622d98b6db09b89272000416c2a7cda1761e9c2" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. If the &lt;code&gt;albumTitle&lt;/code&gt; of the current cursor is &quot;Grace under pressure&quot;, we delete that entire record using &lt;code&gt;var request = cursor.delete();&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32aec80fac39a5ef7f1168b19d20800c4854adba" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. The cursor does not require us to select the data based on a key; we can just grab all of it. Also note that in each iteration of the loop, you can grab data from the current record under the cursor object using &lt;code&gt;cursor.value.foo&lt;/code&gt;. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/indexeddb-examples/tree/master/idbcursor&quot;&gt;IDBCursor example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/indexeddb-examples/idbcursor/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832a70d0e060bd84daa7eb798d106c513fdb77c8" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the direction of the cursor, something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814c0e566f410daf5c70e8490e53955f7fb4b66a" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the key of the cursor to the console, something like this (its the album title in each case, which is our key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cba140ebb5bc58e4a4354e3c40ea79f806a0635" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the primary key of the cursor to the console, something like this (its the album title in each case, which is our primarykey):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850d106da3d9514aacc08416cf7006deab08d008" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the source of the cursor, which will log our &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBobjectStore&lt;/code&gt;&lt;/a&gt; object to the console, something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc976e76f4d1f788c617666a202ae23adcd40597" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fb75273e3c5815b5208459099c0e2ff4fc42b0" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through the records in the object store. Here we use &lt;code&gt;cursor.advance(2)&lt;/code&gt; to jump 2 places forward each time, meaning that only every other result will be displayed. &lt;code&gt;advance()&lt;/code&gt; works in a similar way to &lt;a href=&quot;continue&quot;&gt;&lt;code&gt;IDBCursor.continue&lt;/code&gt;&lt;/a&gt;, except that it allows you to jump multiple records at a time, not just always go onto the next record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1368dbb1dc7c76c5a140767ff39a952918de0875" translate="yes" xml:space="preserve">
          <source>In this snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;, the &lt;code&gt;HTMLFormControlsCollections&lt;/code&gt; is defined for the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718876f635ac57f7855f3588069fc256e51f6006" translate="yes" xml:space="preserve">
          <source>In this snippet of code, &lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt; is set to 64kB, and a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; event is established by setting the &lt;a href=&quot;onbufferedamountlow&quot;&gt;&lt;code&gt;RTCDataChannel.onbufferedamountlow&lt;/code&gt;&lt;/a&gt; property to a function which should send more data into the buffer by calling &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d046b27ce4e913f19c224b17b7bc56c497466156" translate="yes" xml:space="preserve">
          <source>In this snippet, a node is being examined for its &lt;a href=&quot;localname&quot;&gt;&lt;code&gt;Node.localName&lt;/code&gt;&lt;/a&gt; and its &lt;code&gt;namespaceURI&lt;/code&gt;. If the &lt;code&gt;namespaceURI&lt;/code&gt; returns the XUL namespace and the &lt;code&gt;localName&lt;/code&gt; returns &quot;browser&quot;, then the node is understood to be a XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12214e1122c220323a9395fe6a1c4c8c5e179dca" translate="yes" xml:space="preserve">
          <source>In this snippet, a previously-created reader is queried to see if the stream has been closed. When it is closed, the promise fulfills and the message is logged to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde13d5e875bf0d7b9496c1520b0ac0209a347fa" translate="yes" xml:space="preserve">
          <source>In this snippet, an attribute is being examined for its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalName&quot;&gt;&lt;code&gt;localName&lt;/code&gt;&lt;/a&gt; and its &lt;code&gt;namespaceURI&lt;/code&gt;. If the &lt;code&gt;namespaceURI&lt;/code&gt; returns the XUL namespace and the &lt;code&gt;localName&lt;/code&gt; returns &quot;browser&quot;, then the node is understood to be a XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cfa68d879ef6fc5ac4f7bcb7a16d97b33017d1" translate="yes" xml:space="preserve">
          <source>In this snippet, an element is being examined for its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalName&quot;&gt;&lt;code&gt;localName&lt;/code&gt;&lt;/a&gt; and its &lt;code&gt;namespaceURI&lt;/code&gt;. If the &lt;code&gt;namespaceURI&lt;/code&gt; returns the XUL namespace and the &lt;code&gt;localName&lt;/code&gt; returns &quot;browser&quot;, then the node is understood to be a XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cfcc3513c79670f3066a2722a670929030b0e7" translate="yes" xml:space="preserve">
          <source>In this snippet, the video track referenced by &lt;code&gt;videoTrack&lt;/code&gt; is updated so that its resolution as closely as possible matches 1920x1080 pixels (1080p high definition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b731c82fc7714591ccf7a5143c009282ccc24be2" translate="yes" xml:space="preserve">
          <source>In this snippet, which is part of an event handler, the event is checked to see if it generates a character; if it does, the value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/which&quot;&gt;&lt;code&gt;UIEvent.which&lt;/code&gt;&lt;/a&gt; is appended to a string which buffers the typed characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f609b09d74ad2c79f4f7660d4aad6ef45e6828" translate="yes" xml:space="preserve">
          <source>In this tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be11e027321d8795073b405e53b37ee7625eec0b" translate="yes" xml:space="preserve">
          <source>In this tutorial, we're going to cover sound creation and modification, as well as timing and scheduling. We're going to introduce sample loading, envelopes, filters, wavetables, and frequency modulation. If you're familiar with these terms and you're looking for an introduction to their application within with the Web Audio API, you've come to the right place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8279e87f0ef0b99ee25e194ffc668a2709260d1" translate="yes" xml:space="preserve">
          <source>In upcoming pages we'll see two alternative methods for &lt;code&gt;clearRect()&lt;/code&gt;, and we'll also see how to change the color and stroke style of the rendered shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c20088053fbe20aac17f1a6dd9ab682f57c6d8e" translate="yes" xml:space="preserve">
          <source>In version 28, if a negative value is passed to %d, it will be rounded down to the closest negative integer, so -0.1 becomes -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a957b2719e6714e1b0526c3b37a182f3c19afb94" translate="yes" xml:space="preserve">
          <source>In version 45, the ability to have multiple shadow roots was deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c59c43a51e4c2dbe1031b63a5139168c96dee40" translate="yes" xml:space="preserve">
          <source>In web pages, the window object is also a &lt;em&gt;global object&lt;/em&gt;. This means:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522d23cd43af81ed0ba9fefced6ae28e6b51c6e5" translate="yes" xml:space="preserve">
          <source>In your application, you may find that some objects need to move or change frequently, while others remain relatively static. A possible optimization in this situation is to layer your items using multiple &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691a6d3c26002fd244c2fe3e46d9247ac2325e8d" translate="yes" xml:space="preserve">
          <source>Inactive tabs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d57a8f5a6ecb6d09aa18654fd3572fb220d7cea" translate="yes" xml:space="preserve">
          <source>Inappropriate use cases include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63be67330c43c8775d88e054ce632bca21a2f3d0" translate="yes" xml:space="preserve">
          <source>Include adapter.js in your project: &lt;code&gt;&amp;lt;script src=&quot;adapter.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05be5fcbf7db5f7d55a0aa8a3de0c822294f95a8" translate="yes" xml:space="preserve">
          <source>Includes the &lt;a href=&quot;serviceworkerglobalscope/onnotificationclick&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onnotificationclick&lt;/code&gt;&lt;/a&gt; handler, for firing custom functions when a notification is clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5845804c66387a55465958f317c01f71b1975eb" translate="yes" xml:space="preserve">
          <source>Includes the &lt;a href=&quot;serviceworkerregistration/shownotification&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.showNotification()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;serviceworkerregistration/getnotifications&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt;&lt;/a&gt; method, for controlling the display of notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52e6ec9948618f31dc8ee651ae745196bcda323" translate="yes" xml:space="preserve">
          <source>Incomplete list of MIME types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d19249d0e4e2f912d2fd965cdb9d08c08e04ae" translate="yes" xml:space="preserve">
          <source>Incorrect behavior before Firefox 23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4d1aecb9f6b7b06b53111d8cf03d80b27e2925" translate="yes" xml:space="preserve">
          <source>Incorrectly stated as the &lt;code&gt;target&lt;/code&gt; parameter in the specification, see &lt;a href=&quot;https://www.khronos.org/bugzilla/show_bug.cgi?id=674&quot;&gt;https://www.khronos.org/bugzilla/show_bug.cgi?id=674&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b4ddc4bf449509a0538e7bc8033f88af302e1f" translate="yes" xml:space="preserve">
          <source>Increments the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; by (&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-step&quot;&gt;step&lt;/a&gt;&lt;/code&gt; * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8081736d1ac6dcda760e249c8dd2d4f3a584e610" translate="yes" xml:space="preserve">
          <source>Increments the current stencil buffer value. Clamps to the maximum representable unsigned value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7dac374eed7d82dbad5faa66c622391d223c33" translate="yes" xml:space="preserve">
          <source>Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aea63c3a868fe32a3a54b5c4ef59776e7299d1" translate="yes" xml:space="preserve">
          <source>Indents the line containing the selection or insertion point. In Firefox, if the selection spans multiple lines at different levels of indentation, only the least indented lines in the selection will be indented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="f181eb8ab18eb11eb9aae7d4b052bf6fdaf30b56" translate="yes" xml:space="preserve">
          <source>Index as &lt;code&gt;before&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453f6f1b30bdb747c10d7094a2d3af0d476d8525" translate="yes" xml:space="preserve">
          <source>Index parameter is optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb00000e0c9d14d8226a6c223add0eff48fa40b4" translate="yes" xml:space="preserve">
          <source>Indexed Database 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d637246c1fa4afc50f71e4295df237a3e1d668ab" translate="yes" xml:space="preserve">
          <source>Indexed Database API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e2528e7cab3047343ca8911db09e908af3adee" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c2bf57140cb50bdcb4435cfe3c8cc98fec9e3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBCursorWithValue' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f3ada24ea8441c7e501f0b2e64fb6a58609b22" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBDatabase' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebc95c88d7838ee71145c4c1d52559715d2af58" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBFactory' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4709b9a3c74acfccad8b4d50368e7de06c1193" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBIndex' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b626ead75d74638447876f47c7267e6bd563b32" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBKeyRange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98dce7586528c81295a33dfffd89abea038c094" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBObjectStore' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fd5a547291e4f1c1df2167564c7cf8cdcbbc0b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBOpenDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366ff2b766d3fde0f46eadb9652a8028403e5871" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e172db036c5b8cc18472ce1f243ae21fce1fdfa5" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBTransaction' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ca6a350879afcd58319e7901de7b5f12a1999f" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBVersionChangeEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2483d48ea22b253fe19e230fe96da18b3465a79a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'ObjectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d24555331c5da72096e5808f4cf4f8f4586ddc9" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'abort()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef67f38e90ded178d6e114a73d151cf44193234" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'add()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565444d18890dfed22bb1a7971dd2beb5877acfd" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'advance()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd38b18571abe02ec1a94bef07451fad57adefbc" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'autoIncrement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72acb3c050df56eacc5354cd716dfd7e6be561a0" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'bound()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bf4516b0f0ddb4d168b48ebe7cfdd57ef313f4" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'clear()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d097be1f46dadf6b1dcc606f63890d4e870be42" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e458e7eca4d070001c437ecab313a7149206cea5" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'cmp()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56afd053a165dfa5223c2b27963eaede2d59cb5b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'continue()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbba46e3985e689aef7a567540cda47e5247aee" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'continuePrimaryKey()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359ceb4fb14bbfa71e680cef243281286a923668" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'count()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2084cf90d209d8bd05f2d57bf91333837fd3f5e3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'createIndex()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d835d91443e674d0acf51eb142631a285c04119e" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'createObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef995c0b2febfecfdd36cea57b732d7cdcf5287a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'cursor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f10f8380a6b5e6f41186c0db1a2fd0aa5008b3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'db' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4ef8021ea3bc36e24afea70d3820230221ab43" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a031a0e3660058b826aee6042781d2cc9bd1b9" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'deleteDatabase()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeeb7bf7ab32d139a370c8c2a2148627df043fde" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'deleteIndex()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f7694c88487bcfa1c66e035a6d91b0b256565b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'deleteObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb8e411e9d145a59bb655cb831927e34daf9f25" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'direction' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52b88ece91077a2b5378c0907e0dac19f03916a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'error' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83a41406b8b5f39de7880f14b05813739bcec78" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c361dd3c30f0851a14dcf525ea68c948d7001b93" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'getAll()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305f735a2d1b3d60a72e45fdd86d0c679dd71627" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'getAllKeys()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa59a8416303ad16526b18f1671b9ceca2ea6f8d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'getKey()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4cb455566f19c2d93aab75e4b8d3f286785b8a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'includes()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b93aae7f4eb8320462c857f5d3cdc4638db4b6" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'index()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007d5c9a531de84aaa0c98128f53bb4ec2c3eb46" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'indexNames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20330097346a31e05a3fe659347ba59d8c400bb3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'indexedDB' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f19c90186ce0514aa7567d95d834f6ef7846877" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'key' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d96905469d788cc6a2838d4438ce2e215b9f114" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'keyPath' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bc75669286d94288860b321ad9de3973e7c6f1" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'lower' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62d5b107a11062b448f57e6feba433bdcc04762" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'lowerBound()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532c8a2bcb059f2160bc13c34853948e535f5b2d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'lowerOpen' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbaff618042c850c4e25af8b3275ec9392745749" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'mode' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd80db335f83115f3ae3dadc4dc9ebc25c17635" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'multiEntry' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fec81ff92d176d83e3c578beeaa47cea22bdefa" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'name' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dccef01c2cb593520a4b8f11545557c9afb29b2" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'newVersion' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c39e376f73640df7311df01c47ac0608485eb63" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'objectStore' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3eb819ce5c4ef8cdb37001b2b7095d9dfe8f47" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'objectStore()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b273e10893aa4e25d3c25e1b2b2020f154ade55" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'objectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22250b0c4fd94c03083ffa26e2ef4a0b499582ba" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'oldVersion' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb36b1b2f8719f68e8c8155c09f77faeb217d242" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onabort' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072af3276aff47a544daf4cd8c1d262c6d04e204" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onblocked' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acd6c4dc9e3904bea456d4fd31b565ea5d424bb" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onclose' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edcc07b8f1185e4de4d83920f58e1970eb1253a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'oncomplete' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b590997d05ce08a4bcaa509a8e4fcd64de2c2e21" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onerror' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82318a50f4f3255d202e60c9711e7cddcbe9d5f3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'only' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3101a1e90405213a2b367b75e4b0f09456dbbb1f" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onsuccess' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5a05937565b3a5392bfbc6a807476076035242" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onupgradeneeded' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f75cbcc12a953edfaadfbdc33dd852bbda49ab" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onversionchange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b15bc9ed72d370db298363aa5dcb2e327a511a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08aef57453e96a590cfdb4704d8ac32d8553c93" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'openCursor()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc35c36a616f6ae5cd109302290383d4cde131eb" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'openKeyCursor()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6923cf52253c0f54321f165f7222f9c99cec00df" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'primaryKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47645c292faaa766aa017cc085dccc6f7f77a4b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'put()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85873746ba77a4fd2f0df44d19a60de5c6815a3e" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'readyState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d82d66e55aacb498e6f243e14a62612fbaf25" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'result' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155af68f307f309c95deef47ca761a3159b2249d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372945225136d520564d1a611136c27aef6db228" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'transaction' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333f1e58387e849584fc5699a8d4ecd08e4bd652" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'transaction()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d171cc085fbfa94541307a9a1a95b03ba0d34be0" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'unique' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728f83f7a25ed968510be6dd9028044f8593be0b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'update()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cff63d7bfa3639b141b79293eabf745fddba769" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'upper' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f92c56692d621729245708a1fac2e1e1c6925d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'upperBound()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdde0e8f904e8ab718432532831461eb15560522" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'upperOpen' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c7169e9eab2e6e102cb332a6512b739114862f" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'version' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dd037fabe26353d744a49a2f3f211c22e56655" translate="yes" xml:space="preserve">
          <source>Indexed Database API Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dcefe503ae939f4d17016b014badae64406aaf" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBCursorWithValue' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2db3332262a4e4e1516f47a4e074d9c3bdf85a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBDatabase' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd2d3b95a559c2b8aea5a2912b6511187e33b1f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBEnvironment' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46811739e8fac3983c25412940cb2332f15a4ad" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBFactory' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691e781932751d3292cb3b4930ffe52f73b1b236" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBIndex' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611be58c07c404d8526d854df25f66003f3069de" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBKeyRange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59daffd89ec28d7ac3ec5a4305617ef9d4d0dd8f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBObjectStore' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a273cc23ce36ea16ffcd1302e7070903b844cd71" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBOpenDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56288fe09d641575439a9776988cac2de8190eb9" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e771b04c61cb47b8fd38c5469fa4ef34fc63418a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBTransaction' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eac9aceead0e96a04fe93cf32beb3ef59db3744" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBVersionChangeEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911b9d35b9530c35a7308c9169b41e19c79ce383" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'ObjectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2628e177531c037e4196c6c10e80fa051100ebe4" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'abort()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e854dcb956fee1f0c995f9c1109b2236e9792b2" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'add()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09deb334bcb221a11b4b2bb85f2af98f1bd6e7a9" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'advance()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0b42c6453d106fce6d153ce2c4ad8dee2c45db" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'autoIncrement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3a37a443be19177f4b8a495b6b8ead0e939114" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'bound()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13169fcf1e2a1ae929256c6afb3b6693c263022" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'clear()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd403a9ad6105cd7308fde4d75697466aea1897" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6f0d44727ae5724a2d2328eec2a30ebee648b5" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'cmp()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac95acdc1b19269ed03ed418901a15294428e44" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'continue()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81384d7528eb5071f34276d3ebf3059631ad224b" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'count()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb73699dc23b20b21c5ac80302856ee5846d539" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'createIndex()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2218d0fa34d3b35bd2b4e90f1450937fa10e85a8" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'createObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c88861c3b22110048d091e0f25bd0e15a5016cf" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'cursor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a25c2af2c83eedfeaa08dafeafa0f36cd0897a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'db' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10332307eaa30b008b1f909ca434651e20a4de05" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92a85ba7b79ae5331b78373c58d2cbba760e4e3" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'deleteDatabase()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f6ea3b718a1de1a3801aa5227dc0a1d4b3206f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'deleteIndex()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c95de7954581905c3d2a169dbd4854c07514db4" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'deleteObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdebea39b4d10372f3bd9b38d97777aabadb4918" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'direction' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d04c2bc1c2197776407094c820f131c73a2233e" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'error' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b414db91d4e5e32efd881af45685602ef03fc6c4" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1c2603e2276e829282532ef2b7fddeef87b394" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'getKey()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0632408e0d9f890ce40439718d26b59d0b1ea9c3" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'index()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8855870f8b8cb2b6cbfa7b6b57a027123de15ab5" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'indexNames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7447d1d70f58dbf59be79029e014a48a670a8b66" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'indexedDB' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1ef5cf6723bc22d79ce3d27a87ae7424a21d94" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'key' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc2dcf3076abf39177a6c0831fdbaddbaa7967a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'keyPath' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4513b97a9353b1be9f780446325b384579a6cf" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'lower' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f568c0456b800d0587f407a78978657ed10df745" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'lowerBound()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c9f91b2e8731ca81a8316a0ef2c6e46ed37eb8" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'lowerOpen' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1a5bf21683ff2acc2c5f37f0b5460647c37f40" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'mode' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69166e3532729ebc28c86dcaa75d2f1773da8058" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'multiEntry' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828a60b756ce091624a5cc20173b4cfd65fbcea0" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'name' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63c2b5977ffbfb35ec6e0b22f15b35dbdc1712d" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'newVersion' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bf406431d9396c6b1e91be881710f07da13e27" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'objectStore' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b22b41c914108d17a37775e566ddc2e935b823f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'objectStore()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a62dc7e40b0a3bbb8e5e9b8d63f89ccbca8fa8" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'objectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cbc4b8126cfd58744831fa92c33e196fd4e803" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'oldVersion' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4181dd53726ade87755f3806355f1892c5a3321" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onabort' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e33e65ebd3f08212d6591dc0f80a049ba8d713" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onblocked' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ff0853c470806b03e60173a8c999b9b58e9cf7" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'oncomplete' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dcb861d8f2b331f5416bb77e539a57bf6ca9ea" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onerror' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76da573a9c2ab3e2f40bf6f41daa5c14b1d2e87" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'only' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804a05dbfac297e19d36ab76864338397c155b69" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onsuccess' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cd5e96470a4716e2eb5a3c5b4b77ec6cb47deb" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onupgradeneeded' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb89d54c8ed5af9d4203d9310a24b3b778bf78e" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onversionchange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb1b277067a6f7dd2b2d0187b643f2bc75236c1" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc9ab6ebf006c17f8ad11c842247cfd490bff97" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'openCursor()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdc69a06bf643bea974ceb8cbfa6a363a18ab6c" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'openKeyCursor()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43cde1e437281ba65cdee6155261c6634c428bc" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'primaryKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c5862b6a8d0d25c0599486e840a3a36f22bab5" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'put()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04c81f2d77ecadc1e89604e8da0caa81bf928a1" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'readyState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d39fab67c17ff72cc77f575520a7faef2db3bc" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'result' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54f04b4eb11eed7d16db47e65b3df2a59ad815b" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24fef6d73be8a9b808c19676f0becf79aaea3a2" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'transaction' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b815919711c3e32c862a428849c2c61e8a45e5d2" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'transaction()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5502e65b6c775cb9069ddf69202a9b5e7c84f8fb" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'unique' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e73f2eca00cd3a258eb079d51b2a2467aa8c3d1" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'update()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b58c63f1f55a0ea874370904bb189c2046cfc40" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'upper' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e055db0e658a620506779abf1d6bf260040502df" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'upperBound()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee1dd1553968d42120e87c5e1773f94fa20cf0c" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'upperOpen' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd6ae14a8af64bff9a712771fb91b75e832f09a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'version' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cb9fad0cca0cd58b28b495a70bd84a63329164" translate="yes" xml:space="preserve">
          <source>IndexedDB</source>
          <target state="translated">IndexedDB</target>
        </trans-unit>
        <trans-unit id="92305269bb35c9337865684e253bfb77eb72c316" translate="yes" xml:space="preserve">
          <source>IndexedDB &amp;mdash; The Store in Your Browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532f0f31fc0dc48e0188546b9833978d0aae4b88" translate="yes" xml:space="preserve">
          <source>IndexedDB &lt;a href=&quot;https://mxr.mozilla.org/mozilla-central/find?text=&amp;amp;string=dom%2FindexedDB%2F.*%5C.idl&amp;amp;regexp=1&quot;&gt;interface files&lt;/a&gt; in the Firefox source code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e8a68a5966ec79c4cfedb6fedc772a2a03acc9" translate="yes" xml:space="preserve">
          <source>IndexedDB API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c08a2cbfe1907178688e0f31d8d060b8974f8ab" translate="yes" xml:space="preserve">
          <source>IndexedDB API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd580e87eab9b24853e0a6b1592a0793dd57d15" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Basic Concepts Behind IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f627958554992cdc01d435d1566efedb5d88fe1" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Browser storage limits and eviction criteria</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424b4cf4029e03a1ae19e57459b914283c39c31c" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Using IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1def3c340fdfe28cbce10fc9a0a803d9f4f57d" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Using IndexedDB in chrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147e826602f19e0ac009e2bd0ea268d779b0f279" translate="yes" xml:space="preserve">
          <source>IndexedDB databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce537135320d542bbf2ed585262978a7deda8fdf" translate="yes" xml:space="preserve">
          <source>IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data. While &lt;a href=&quot;web_storage_api&quot;&gt;Web Storage&lt;/a&gt; is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution. This is the main landing page for MDN's IndexedDB coverage &amp;mdash; here we provide links to the full API reference and usage guides, browser support details, and some explanation of key concepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1663032a22b6bf6e4418d1765f05a8f9e117cd" translate="yes" xml:space="preserve">
          <source>IndexedDB is a transactional database system, like an SQL-based RDBMS. However, unlike SQL-based RDBMSes, which use fixed-column tables, IndexedDB is a JavaScript-based object-oriented database. IndexedDB lets you store and retrieve objects that are indexed with a &lt;strong&gt;key&lt;/strong&gt;; any objects supported by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm&quot;&gt;structured clone algorithm&lt;/a&gt; can be stored. You need to specify the database schema, open a connection to your database, and then retrieve and update data within a series of &lt;strong&gt;transactions&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a9af6a45ae874e6ab4548cbadc35f2cdbac1de" translate="yes" xml:space="preserve">
          <source>IndexedDB is a way for you to persistently store data inside a user's browser. Because it lets you create web applications with rich query abilities regardless of network availability, your applications can work both online and offline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ba47cda434e153228419f3d5a637fffd7d4b3e" translate="yes" xml:space="preserve">
          <source>IndexedDB is an &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#Asynchronous_API&quot;&gt;asynchronous&lt;/a&gt; API that can be used in most contexts, including &lt;a href=&quot;../web_workers_api/using_web_workers&quot;&gt;Web Workers&lt;/a&gt;. It used to include a &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#Synchronous_API&quot;&gt;synchronous&lt;/a&gt; version also, for use in web workers, but this was removed from the spec due to lack of interest by the web community.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d92b8f877cc367a585ef74ae7cf6ec2470db87" translate="yes" xml:space="preserve">
          <source>IndexedDB is designed to cover most cases that need client-side storage. However, it is not designed for a few cases like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b63894d086dcec12e25d8e17051a3412213e28" translate="yes" xml:space="preserve">
          <source>IndexedDB lets you store and retrieve objects that are indexed with a &quot;key.&quot; All changes that you make to the database happen within transactions. Like most web storage solutions, IndexedDB follows a &lt;a href=&quot;http://www.w3.org/Security/wiki/Same_Origin_Policy&quot;&gt;same-origin policy&lt;/a&gt;. So while you can access stored data within a domain, you cannot access data across different domains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8bbfa15d98e608887f8a17bd492f4cfb52892d" translate="yes" xml:space="preserve">
          <source>IndexedDB used to have a competing spec, WebSQL Database, but the W3C deprecated it on November 18, 2010. While both IndexedDB and WebSQL are solutions for storage, they do not offer the same functionalities. WebSQL Database is a relational database access system, whereas IndexedDB is an indexed table system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16c113e5edf37916985279b120ad28b6f0ce5b8" translate="yes" xml:space="preserve">
          <source>IndexedDB uses the same-origin principle, which means that it ties the store to the origin of the site that creates it (typically, this is the site domain or subdomain), so it cannot be accessed by any other origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e739a8052896b204b56c67f413dc1f61084d45fa" translate="yes" xml:space="preserve">
          <source>Indicates an occurrence of a of dual-tone multi-frequency (DTMF). This event does not bubble (except where otherwise stated) and is not cancelable (except where otherwise stated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943e0bc6f637339f8291a07a89984e56e8deb86e" translate="yes" xml:space="preserve">
          <source>Indicates how far along the animation is through its current iteration with values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the animation is not running or its &lt;code&gt;KeyframeEffect&lt;/code&gt; isn't associated with an &lt;code&gt;Animation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d83f6c1c7cc711aef429748efd49ce074848343" translate="yes" xml:space="preserve">
          <source>Indicates how peaked the frequency is around the cutoff. The greater the value is, the greater is the peak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f2983f4478702c91cef6d0b9af81733779d6e3" translate="yes" xml:space="preserve">
          <source>Indicates how peaked the frequency is around the cutoff. The greater the value, the greater the peak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d419ed0fcbf4bcc8e8433f5f3b80f03eb22d20" translate="yes" xml:space="preserve">
          <source>Indicates how the violated policy is configured to be treated by the user agent. This will be &lt;code&gt;&quot;enforce&quot;&lt;/code&gt; or &lt;code&gt;&quot;report&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f9825b7b6213674627e80352ff75e27100f384" translate="yes" xml:space="preserve">
          <source>Indicates if a certain node is part of the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc053b6c7ef02ee44213f9913f0ebb3bc3ca087b" translate="yes" xml:space="preserve">
          <source>Indicates if the device has sensed a nearby physical object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a88e82c3afff7c9f6ddf9b702753e7f8b74e3f6" translate="yes" xml:space="preserve">
          <source>Indicates if the document is loading from a cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8728b80cde2cc4e2ed417e1c13080c30fb7ef778" translate="yes" xml:space="preserve">
          <source>Indicates if the pointer represents the primary pointer of this pointer type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c459e8ad4fb869276addd12b5b14c86486e1f0eb" translate="yes" xml:space="preserve">
          <source>Indicates that a new incoming &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; was created and an associated &lt;a href=&quot;rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; object was added to the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afc3807453f24c4f66868b645b61a2573a07625" translate="yes" xml:space="preserve">
          <source>Indicates that the availability of the presentation display has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c86b5d39c8b81b39a074ef35d899dac126f042" translate="yes" xml:space="preserve">
          <source>Indicates that the text track has been loaded with no fatal errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857f4cf4987d80b1a5814654e9f9797314e49641" translate="yes" xml:space="preserve">
          <source>Indicates that the text track is loading and there have been no fatal errors encountered so far. Further cues might still be added to the track by the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda4b30bd8d00a73daae2e5c7b50e1f510f556e9" translate="yes" xml:space="preserve">
          <source>Indicates that the text track was enabled, but when the user agent attempted to obtain it, this failed in some way. Some or all of the cues are likely missing and will not be obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de229eca824b55dc0a01ef5e8e646022795469c5" translate="yes" xml:space="preserve">
          <source>Indicates that the text track's cues have not been obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1e7a27262732663c8aaccb2e6965933d2d3f8d" translate="yes" xml:space="preserve">
          <source>Indicates that the text will be displayed vertically rather than horizontally, such as in some Asian languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756ceef19a8802f6fa9c6c724bbde5c8c0b00f67" translate="yes" xml:space="preserve">
          <source>Indicates the accuracy of the derivative calculation for the GLSL built-in functions: &lt;code&gt;dFdx&lt;/code&gt;, &lt;code&gt;dFdy&lt;/code&gt;, and &lt;code&gt;fwidth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f476999b5fc6af5989004522caf60a6b77aaef4" translate="yes" xml:space="preserve">
          <source>Indicates the amount of time, in seconds, that remain until the battery is fully charged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb14f029e722d38e78fa8c314af9264028e5e5f" translate="yes" xml:space="preserve">
          <source>Indicates the amount of time, in seconds, that remains until the battery is fully discharged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcdce9af50fb71fd294b26eadee66245c48b589" translate="yes" xml:space="preserve">
          <source>Indicates the current battery charge level as a value between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2752511a47f92f5ae331dc73946fdb5c8286874a" translate="yes" xml:space="preserve">
          <source>Indicates the current offset of the audio stream that was created by a call to &lt;code&gt;mozWriteAudio()&lt;/code&gt;. This offset is specified as the number of samples since the beginning of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33387dcb2fc19aefe8db1d79d43f13804b752ce6" translate="yes" xml:space="preserve">
          <source>Indicates the device type that caused the event (mouse, pen, touch, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670facc19573cdf9413def0fb93eb003831bace7" translate="yes" xml:space="preserve">
          <source>Indicates the font-face's loading status. It will be one of &lt;code&gt;'loading'&lt;/code&gt; or &lt;code&gt;'loaded'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e10815e3517b0bfc615ce72f4978ae81859a1f" translate="yes" xml:space="preserve">
          <source>Indicates the function to call when the specified action type is invoked. This is a void function, with no parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a6696cb0c1a9574f3a98901317ec74d1eff0f7" translate="yes" xml:space="preserve">
          <source>Indicates the horizontal alignment of the cell data in the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0215c62713d8a1f2a26586bf95a98eba8d402e" translate="yes" xml:space="preserve">
          <source>Indicates the horizontal distance the shadow should extend from the object. This value isn't affected by the transformation matrix. The default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a3683fb1126e821280de7cf8bdcf1feed014bd" translate="yes" xml:space="preserve">
          <source>Indicates the name of the identity assertion provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c0bd6d459586c0f92e582d37373292e23d800a" translate="yes" xml:space="preserve">
          <source>Indicates the name of the style sheet set that's currently in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c65e8efdd80c668c59ea6823544ef4127545d1" translate="yes" xml:space="preserve">
          <source>Indicates the number of the endpoint to clear. The promise will reject if an invalid endpoint is supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a476d7abc82a932b12b8e9df8568e20909ed28d" translate="yes" xml:space="preserve">
          <source>Indicates the provider of the identity assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abb26c645db9c1f05e28bb68d1f62f8736b62af" translate="yes" xml:space="preserve">
          <source>Indicates the size of the blurring effect; this value doesn't correspond to a number of pixels and is not affected by the current transformation matrix. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39462415955f44d1e8b23904530abcbdd9bb7332" translate="yes" xml:space="preserve">
          <source>Indicates the type of message. May be one of &lt;code&gt;license-request&lt;/code&gt;, &lt;code&gt;license-renewal&lt;/code&gt;, &lt;code&gt;license-renewal&lt;/code&gt;, or &lt;code&gt;individualization-request&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71623b83c5b10a6500c1b3253d31f4375fb05d7a" translate="yes" xml:space="preserve">
          <source>Indicates the vertical alignment of the cell data in the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c659be4f9bebe1ad9886bfa1ca77e5943e12f522" translate="yes" xml:space="preserve">
          <source>Indicates the vertical distance the shadow should extend from the object. This value isn't affected by the transformation matrix. The default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f892da6b733d5eaf06855ec14d1cac874f2091f" translate="yes" xml:space="preserve">
          <source>Indicates the visibility of the current client. This value can be one of &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;visible&lt;/code&gt;, &lt;code&gt;prerender&lt;/code&gt;, or &lt;code&gt;unloaded&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263abb9e83a986ee34435d657f244e87bb128285" translate="yes" xml:space="preserve">
          <source>Indicates whether a context is capable of using features that require secure contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3e675f73f1593382fcae2b67992a8859c9a1fa" translate="yes" xml:space="preserve">
          <source>Indicates whether a persistent distinctive identifier is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ac7218d9aa20e78da6980428d1b9a2e0d7bc5f" translate="yes" xml:space="preserve">
          <source>Indicates whether a session has been started with a paired USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e538254f76e96fb281a0e7a4e9ce69d2ede8aef" translate="yes" xml:space="preserve">
          <source>Indicates whether or not &lt;a href=&quot;event/preventdefault&quot;&gt;&lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt; has been called on the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c2fd8a58e98d8b4b46b757d418223f6e55bf4a" translate="yes" xml:space="preserve">
          <source>Indicates whether or not messages sent on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; are required to arrive at their destination in the same order in which they were sent (&lt;code&gt;true&lt;/code&gt;), or if they're allowed to arrive out-of-order (&lt;code&gt;false&lt;/code&gt;). &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cfac20185cac0f489e4c931060f626ad8c19ff" translate="yes" xml:space="preserve">
          <source>Indicates whether or not sending and receiving using the paired &lt;code&gt;RTCRtpSender&lt;/code&gt; and &lt;code&gt;RTCRtpReceiver&lt;/code&gt; has been permanently disabled, either due to SDP offer/answer, or due to a call to &lt;a href=&quot;rtcrtptransceiver/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cf01226259dc793b3314431ae2e36c9963f453" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the device is providing orientation data absolutely (that is, in reference to the Earth's coordinate frame) or using some arbitrary frame determined by the device. See &lt;a href=&quot;https://developer.mozilla.org/en/DOM/Orientation_and_motion_data_explained&quot;&gt;Orientation and motion data explained&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78957535526dc4925910f8b70f5c4bf6b8a81ec8" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the event was initiated by the browser (after a user click for instance) or by a script (using an event creation method, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/initEvent&quot;&gt;event.initEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c357a065bf3d6f657e2df70fd5dd6997e7eb26" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the response is the result of a redirect; that is, its URL list has more than one entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c821825b0c76f63357ee9e9fbd99a620ac826fc3" translate="yes" xml:space="preserve">
          <source>Indicates whether or not there is currently an active stream of video running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be80c9199209ddc4eaf845c7c68cde13dbbfcaca" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;code&gt;MediaRecorder&lt;/code&gt; instance will record input when the input &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is muted. If this attribute is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;MediaRecorder&lt;/code&gt; will record silence for audio and black frames for video. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c3cb6e0b5aba8e748535d09bddd2e84d045ba9" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;code&gt;PaymentRequest&lt;/code&gt; object can make a payment before calling &lt;code&gt;show()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5331ca4d2f8ff22635a9bbda0c4ffc343528c0" translate="yes" xml:space="preserve">
          <source>Indicates whether the ability to persist state is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcb541000db277de6a73be2618295168fa554ce" translate="yes" xml:space="preserve">
          <source>Indicates whether the animation is currently waiting for an asynchronous operation such as initiating playback or pausing a running animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5ee5b6414063f4374fdf05be2729ba9380a7e6" translate="yes" xml:space="preserve">
          <source>Indicates whether the attribute is an &quot;ID attribute&quot;. An &quot;ID attribute&quot; being an attribute which value is expected to be unique across a DOM Document. In HTML DOM, &quot;id&quot; is the only ID attribute, but XML documents could define others. Whether or not an attribute is unique is often determined by a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTD&quot;&gt;DTD&lt;/a&gt; or other schema description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5bea75b1380592d1126bd58fe92433f4180ae3" translate="yes" xml:space="preserve">
          <source>Indicates whether the current media session is playing. Valid values are &lt;code&gt;&quot;none&quot;&lt;/code&gt;, &lt;code&gt;&quot;paused&quot;&lt;/code&gt;, or &lt;code&gt;&quot;playing&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbec7f6539d606f3f1db5c5a4b158313bfe93759" translate="yes" xml:space="preserve">
          <source>Indicates whether the devices input or output should be cleared. Valid values are &lt;code&gt;'in'&lt;/code&gt; or &lt;code&gt;'out'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d007cc5129d76ac92234990a583e3589562ab12" translate="yes" xml:space="preserve">
          <source>Indicates whether the document is rendered in &lt;a href=&quot;https://developer.mozilla.org/en/Quirks_Mode_and_Standards_Mode&quot;&gt;Quirks mode&lt;/a&gt; or Standards mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9979a4e1c75f19075eb4234f278473d1471d513" translate="yes" xml:space="preserve">
          <source>Indicates whether the document is rendered in &lt;em&gt;quirks&lt;/em&gt; or &lt;em&gt;strict&lt;/em&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920a3ad7650a5914adadcf90f00d4875e9b89311" translate="yes" xml:space="preserve">
          <source>Indicates whether the element on which it is invoked has pointer capture for the pointer identified by the given pointer ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52877506a30c4059937d86864e7d92ec1837bc62" translate="yes" xml:space="preserve">
          <source>Indicates whether the option is currently selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42405514ac15e244a1866a08f02a537ed7c51a0" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified property is in the &lt;code&gt;StylePropertyMapReadOnly&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aaec07420325168a56eaaa04ee7ad690d01cef" translate="yes" xml:space="preserve">
          <source>Indicates whether the upper bound excludes the endpoint value. The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3711be406bf25bfdb58e502f4c5613e3c5583099" translate="yes" xml:space="preserve">
          <source>Indicates whether the user agent is controlled by automation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a349b6ccf98bb02b9d50a2a55022dc73b09207cf" translate="yes" xml:space="preserve">
          <source>Indicates whether the video can be rendered more efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fc56c6e337be9e7958cc1d91e67239d5828050" translate="yes" xml:space="preserve">
          <source>Indicates which phase of the event flow is being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65d49bd8da934bd8237e4eb10f374f5e2fc4a5a" translate="yes" xml:space="preserve">
          <source>Indicates which phase of the event flow is currently being evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313a0571fda078724f569e72a0578a3cbaa3ebae" translate="yes" xml:space="preserve">
          <source>Indicates why the connection was closed. This property takes one of the following values: &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;closed&lt;/code&gt;, or &lt;code&gt;wentaway&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2436fa32b60c93f3ae0214f7abc8af02c91c34" translate="yes" xml:space="preserve">
          <source>Indication</source>
          <target state="translated">Indication</target>
        </trans-unit>
        <trans-unit id="107c579b95c81170e17edde104041a737b9b922b" translate="yes" xml:space="preserve">
          <source>Individual &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects can be retrieved by simply accessing the list as an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd19e8167746bd3a2c71c2b016e8f9128b4aa837" translate="yes" xml:space="preserve">
          <source>Individual transformations of points and polygons in space in WebGL are handled by the basic transformation matrices like translation, scale, and rotation. These matrices can be composed together and grouped in special ways to make them useful for rendering complicated 3d scenes. These composed matrices ultimately move the original model data around into a special coordinate space called clip space. This is a 2 unit wide cube. The center coordinate is (0,0,0), while the corners range from (-1,-1,-1) to (1,1,1). This clip space is compressed down into a 2d space and rasterized into an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcc9a981a51e3ebc371a32152669ea9066624b1" translate="yes" xml:space="preserve">
          <source>Information exchanged during signaling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376bc1157a4b933fae2a9dfb20684a86ce2cf24d" translate="yes" xml:space="preserve">
          <source>Information needed in order to set up the connection: the IP addressing and port information needed for the peers to be able to talk to one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ec802f7446ac769ada0d55fecb94ce5fbb4d81" translate="yes" xml:space="preserve">
          <source>Information on working with event handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedc2e372d5cb458a850dc90bc72925df23a2fa5" translate="yes" xml:space="preserve">
          <source>Informative logging of information. You may use &lt;a href=&quot;console#Using_string_substitutions&quot;&gt;string substitution&lt;/a&gt; and additional arguments with this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="7864bef4e98617d80cf4ddb1b5036da383315b0c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;authenticatorresponse/clientdatajson&quot;&gt;&lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt;&lt;/a&gt;. Includes the client data for the authentication, such as origin and challenge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c45c31b4d0dcea6ac286ee958b4a4a4570cf91" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; and overridden to be the &lt;a href=&quot;windowbase64/base64_encoding_and_decoding&quot;&gt;base64url encoding&lt;/a&gt; of PublicKeyCredential.rawId.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e18e44079bb7f7a831ff7f2d4adaf758db6e18" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt;. Always set to &quot;public-key&quot; for PublicKeyCredentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3041d69f79ff14b70c9a0438662f5882cc0505d2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f177b463fc294bdcc09de6dbbf7ff775050cc0" translate="yes" xml:space="preserve">
          <source>Inherited from WorkerGlobalScope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7951150c36a5b0078509be63ec158d0a10f3f90a" translate="yes" xml:space="preserve">
          <source>Inherited properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f16ef56773ff7e3a91862b69e96c346f436cf4" translate="yes" xml:space="preserve">
          <source>Inherits from: &lt;a href=&quot;eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c0c56df543c82fcefc44413b3ac85e77b0f769" translate="yes" xml:space="preserve">
          <source>Inherits from: &lt;a href=&quot;eventtarget&quot;&gt;EventTarget&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9714939fe6408b5bc2e98878b76913f55c712ab" translate="yes" xml:space="preserve">
          <source>Inherits from: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBRequest&quot;&gt;IDBRequest&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cb9bffa021be1c70926c7c04cf3e99959a6e0a" translate="yes" xml:space="preserve">
          <source>Inherits methods from its parent interface, &lt;a href=&quot;idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2934e25eb4a8ca0fc3ce529391eeb98fe33cba7" translate="yes" xml:space="preserve">
          <source>Inherits methods from its parent, &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe8191bb0774c32f0167b16772b5dcaf8299d17" translate="yes" xml:space="preserve">
          <source>Inherits properties from its parent interface, &lt;a href=&quot;idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b42937afb55f5c7827416aa911796e83c49c0d" translate="yes" xml:space="preserve">
          <source>Inherits properties from its parent, &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d508e28156c7e964397687023c44172ddeee6e9" translate="yes" xml:space="preserve">
          <source>Initial (older) definition, which is now outdated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f764caa3bea8e54772a7830f20925d8c69dbdf" translate="yes" xml:space="preserve">
          <source>Initial (older) definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035932ce61bd03f6681a2dfbb742b6af7b651dcc" translate="yes" xml:space="preserve">
          <source>Initial Definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e915d7086e42ba7ad8fb470ce6fd37be732353b" translate="yes" xml:space="preserve">
          <source>Initial definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05a13b2525f74836ec1dfae834faa32544e2380" translate="yes" xml:space="preserve">
          <source>Initial definition (&lt;a href=&quot;https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html#keys-modifier&quot;&gt;Modifier Keys spec&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b0dbba5b7b00a290af593cd2b5e8d5860d6d28" translate="yes" xml:space="preserve">
          <source>Initial definition (DOM Level 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dad956cc1872349ad5efc994aa62cd85f1c1fb6" translate="yes" xml:space="preserve">
          <source>Initial definition (Note: This event is specified in the Push API, but accessed through &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f82f8b30c03539c90f752f0acf6bdde2d12e45" translate="yes" xml:space="preserve">
          <source>Initial definition (as an obsolete property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bc585995f4384d0038313f4051b21a82ad9267" translate="yes" xml:space="preserve">
          <source>Initial definition (implements &lt;code&gt;URLUtils&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fe4cce703b9897ba32b003276af3ef1a9476c7" translate="yes" xml:space="preserve">
          <source>Initial definition for WebGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1f93feb2f3bfdbbb984cac6c6a774c6bf12318" translate="yes" xml:space="preserve">
          <source>Initial definition for the interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3e29ae4544172ea15498e979ce6e1fdfcf9df3" translate="yes" xml:space="preserve">
          <source>Initial definition in the DOM 1 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50beb284a7176e1493be211730ab0c49ca4a53e1" translate="yes" xml:space="preserve">
          <source>Initial definition in the DOM 2 Events specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38ed773e0e13defb944605bec75dfe2aa4b20d9" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;PerformanceObserver()&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabb3ed7c33e82a10614679f9e35dc2eaee58c7f" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;PerformanceObserver&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88268710602bd6eaccf32feac9b1e7c525b37729" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;disconnect()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a3de73f0e3220ea5de9b77004d45bb529a8999" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;getEntriesByName()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb74f8ce571789279cc896e18ad0b05c31469e31" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;getEntriesByType()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252bd294b03bcca2e27217155bf30813ef9cb582" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;observe()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8671988156f022034f5168efce00429d73b77250" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;takeRecords()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5a5c6262be02332c66eab4bf367bd9a030763e" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;toJSON()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1113be36362e8733f10569daacac2dbc77f447" translate="yes" xml:space="preserve">
          <source>Initial definition, as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; was associated with an &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; before that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22604826ce7839aacd9494e8bdf74cbc0fe1acf" translate="yes" xml:space="preserve">
          <source>Initial definition, included &lt;a href=&quot;https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html&quot;&gt;code values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abb7831e174c8e76df3cd001d41996c6533a878" translate="yes" xml:space="preserve">
          <source>Initial definition, included key values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5219982ee9454fa5b7b6d90858dc0c8ef94330b4" translate="yes" xml:space="preserve">
          <source>Initial definition, on the &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020c5ef04c8e0349aef5df24ce031e6c67e3bd41" translate="yes" xml:space="preserve">
          <source>Initial definition, snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d5fd7eb564370744ddfdfc409121e6028c5008" translate="yes" xml:space="preserve">
          <source>Initial definition, snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1996078361460df53a1d2f9e9930c7c26d7f873c" translate="yes" xml:space="preserve">
          <source>Initial definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b547c0e3963f5dc594e276ea01a9690d086e3fc" translate="yes" xml:space="preserve">
          <source>Initial definition. Based on OpenGL ES 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ff8be5558c7f502c55f3a230f8bd98f0622ce6" translate="yes" xml:space="preserve">
          <source>Initial definition. Older versions of this spec were called &quot;Media Capture Output&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c211f960f5d88cc90b25080b6c3a905417d435f8" translate="yes" xml:space="preserve">
          <source>Initial definition. This event is specified in the Push API, but accessed through &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad0f5594d284a1d7d442f941281392d4637da77" translate="yes" xml:space="preserve">
          <source>Initial definition. This property is specified on the &lt;a href=&quot;../notifications_api&quot;&gt;&lt;code&gt;Notifications_API&lt;/code&gt;&lt;/a&gt; even though it's part of &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a806ce0a9f8bc786f4eb5fc74231ac2baf8dd9" translate="yes" xml:space="preserve">
          <source>Initial definition. Unlike OpenGL, WebGL requires &lt;code&gt;zNear&lt;/code&gt; and &lt;code&gt;zFar&lt;/code&gt; values to be clamped to the range 0 to 1. Additionally, &lt;code&gt;zNear&lt;/code&gt; must be less than or equal to &lt;code&gt;zFar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cb0e86655e97503e5060e4c704294482fa666c" translate="yes" xml:space="preserve">
          <source>Initial definition; living specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022515f406a57864f40cd1203eb4dcb41febf436" translate="yes" xml:space="preserve">
          <source>Initial defintion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ea0d21e059f23d3bd03e3e331e0629c38b7aa4" translate="yes" xml:space="preserve">
          <source>Initial oscillator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05c468492e894bf720cb26fc99830351a2cef87" translate="yes" xml:space="preserve">
          <source>Initial specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f03130f43d80f7b832367da10284552d03021e1" translate="yes" xml:space="preserve">
          <source>Initial specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33627a6943eb41fb54dab553888b9b11f79e79fd" translate="yes" xml:space="preserve">
          <source>Initial specification; snapshot of an early version&lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb1ddc45496d5bd9bbb1d0e3e24a58c56f33281" translate="yes" xml:space="preserve">
          <source>Initial value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94193ed67d9a7ccb8f78c1137546b993638b466f" translate="yes" xml:space="preserve">
          <source>Initial version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2745c6a52a8530e3d1ae44888db948ce2624e9" translate="yes" xml:space="preserve">
          <source>Initial version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="ffa659950aa5f6b232f7f21e3d97090137ebd5db" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;AnimationEvent&lt;/code&gt; created using the deprecated &lt;a href=&quot;document/createevent&quot;&gt;&lt;code&gt;Document.createEvent(&quot;AnimationEvent&quot;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e3a109f29ee532cd63abc0ee0effe5fe2e1e61" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;CustomEvent&lt;/code&gt; object. If the event has already being dispatched, this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6732f0a3699c1db29b9e02c9c049eb47ae50eaca" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;KeyboardEvent&lt;/code&gt; object. This is now deprecated. You should instead use the &lt;a href=&quot;keyboardevent/keyboardevent&quot;&gt;&lt;code&gt;KeyboardEvent()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d78528a797d39b036860b58b63de9ba562bb324" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;KeyboardEvent&lt;/code&gt; object. This was implemented only by Firefox, and is no longer supported even there; instead, you should use the &lt;a href=&quot;keyboardevent/keyboardevent&quot;&gt;&lt;code&gt;KeyboardEvent()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c4db6f5861ca66a43d4d8492ae9dcaee84972c" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;ProgressEvent&lt;/code&gt; created using the deprecated &lt;a href=&quot;document/createevent&quot;&gt;&lt;code&gt;Document.createEvent(&quot;ProgressEvent&quot;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e7c3f59972e88347dd0157c94890b0aaee4bae" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;TransitionEvent&lt;/code&gt; created using the deprecated &lt;a href=&quot;document/createevent&quot;&gt;&lt;code&gt;Document.createEvent(&quot;TransitionEvent&quot;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9636f89accefad2958ace45cedc9145593a860d" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;UIEvent&lt;/code&gt; object. If the event has already being dispatched, this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7faf8950ff40b7f1d5367cdb4b3f759a853c2b0" translate="yes" xml:space="preserve">
          <source>Initializes a message event. &lt;strong&gt;Do not use this anymore&lt;/strong&gt; &amp;mdash; &lt;strong&gt;use the &lt;a href=&quot;messageevent/messageevent&quot;&gt;&lt;code&gt;MessageEvent()&lt;/code&gt;&lt;/a&gt; constructor instead.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc72a97513e03452903940f5a3175e175471678d" translate="yes" xml:space="preserve">
          <source>Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIXMLHttpRequest#openRequest()&quot;&gt;&lt;code&gt;openRequest()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f1d8f720489f222bea703914d6dde97722af0a" translate="yes" xml:space="preserve">
          <source>Initializes a request. This method is to be used from native code; to initialize a request from JavaScript code, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIXMLHttpRequest#open()&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; instead. See the documentation for &lt;code&gt;open()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acd7bc886002218be09386ceda041709a986e82" translate="yes" xml:space="preserve">
          <source>Initializes and creates the buffer object's data store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662441d69fafea09e1cbd1dcab8079ebbb3b52b6" translate="yes" xml:space="preserve">
          <source>Initializes the attributes of a &lt;code&gt;CompositionEvent&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b30e6ba4d6da9f93a54a79fa3a16b11835d28b7" translate="yes" xml:space="preserve">
          <source>Initializes the event in a manner analogous to the similarly-named method in the DOM Events interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cae6813da6309eb2702605c41e8ccd6dc0e0aa7" translate="yes" xml:space="preserve">
          <source>Initializes the object for use from C++ code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fea38e764b61808f3dc21af351183323340a29a" translate="yes" xml:space="preserve">
          <source>Initializes the value of a &lt;code&gt;CloseEvent&lt;/code&gt; created. If the event has already being dispatched, this method does nothing. Do not use this method anymore, use the &lt;a href=&quot;closeevent/closeevent&quot;&gt;&lt;code&gt;CloseEvent()&lt;/code&gt;&lt;/a&gt; constructor instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99afa371f39ad6cb5ad2b7c5dd4889017665940a" translate="yes" xml:space="preserve">
          <source>Initializes the value of a &lt;code&gt;MouseEvent&lt;/code&gt; created. If the event has already being dispatched, this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3e4c3cf54f38745050cedd7f18833099798cfb" translate="yes" xml:space="preserve">
          <source>Initializes the value of an Event created. If the event has already being dispatched, this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573b5b6de349656f4fef286e1811251aef4d4b1c" translate="yes" xml:space="preserve">
          <source>Initializing ImageData with an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d87bc69ebaed7dbd4d56b900875e09f3daf25d" translate="yes" xml:space="preserve">
          <source>Initializing the chroma-key player</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697cac7fff1bf187eb6c1c4b427beda45b688da2" translate="yes" xml:space="preserve">
          <source>Initializing the program is handled through a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler called &lt;code&gt;startup()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c64e10224eb904a609cdf362200a3d555c5e0" translate="yes" xml:space="preserve">
          <source>Initializing the shaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b892e8007c1dc132c62aa70ab89ebceb38052cbf" translate="yes" xml:space="preserve">
          <source>Initially, the element is in default mode, and so the contents of the element represent both the value of the element and its default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b670fa7dcdf1eee0fdb8b5eb0f0bfb32e790e4f8" translate="yes" xml:space="preserve">
          <source>Initially, this method was returning a &lt;code&gt;NodeList&lt;/code&gt;; it was then changed to reflect the spec change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd656a78dd481247e783b5be565d858b1dc3d8f" translate="yes" xml:space="preserve">
          <source>Initiates or reconnects to a presentation made by a controlling browsing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c19052a8f26aaaebf861bf35063562486d35aa" translate="yes" xml:space="preserve">
          <source>Inject the content into the body of a &lt;a href=&quot;../documentfragment&quot;&gt;document fragment&lt;/a&gt; via &lt;code&gt;fragment.body.innerHTML&lt;/code&gt; and traverse the DOM of the fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e31f31621b2b2c96108c691b61747cdf07b860" translate="yes" xml:space="preserve">
          <source>Inner structure of a WebVTT file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="d9da3dd2d2fbe2bab51f830bc33170422fbdab95" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'InputEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4a4993a5df231f30f5a18ac543ebd7ac8b70b8" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'data' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437455a9abade3441d0df35892bd7bc2af4865a1" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'dataTransfer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14c73becb4bf8e4f3fc4cc2032947ca56afc58d" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'getTargetRanges()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cec7374ec334792691792b74c817e86f782261d" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'inputType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d0116d32048d9ab214211ec1523e226958d96f" translate="yes" xml:space="preserve">
          <source>Input Port API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d980366df121db4b1956c37b9110632881299b" translate="yes" xml:space="preserve">
          <source>Input channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95da1bce38f52cee1035ff4f22a6afc78da3e92c" translate="yes" xml:space="preserve">
          <source>Input device capabilities concepts and usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c4d64d691c433c68f619cc19dac9a8c6c1547d" translate="yes" xml:space="preserve">
          <source>Input devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f37e64e1fb0569e1f9eac1670a8c657e750c404" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities</source>
          <target state="translated">InputDeviceCapabilities</target>
        </trans-unit>
        <trans-unit id="d985897548b763bac8d0429f38523fedeeb12231" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee398ed5d6d97b18e4bf72f5615ec3d1c483f69" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities.constructor</source>
          <target state="translated">InputDeviceCapabilities.constructor</target>
        </trans-unit>
        <trans-unit id="8801a8bb7b406d600a25ac86b66a4e1a68673b3d" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities.firesTouchEvents</source>
          <target state="translated">InputDeviceCapabilities.firesTouchEvents</target>
        </trans-unit>
        <trans-unit id="e891f6963a79ad31742aa8577785624c73d984cb" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities&lt;br/&gt;&lt;small&gt;The definition of 'fireTouchEvents' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2e8ab5f23551daffbc3adc0778e5f4008990ef" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities&lt;br/&gt;&lt;small&gt;The definition of 'sourceCapabilities' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec99bd83c71d3d8a08f77e563059a952e996dff6" translate="yes" xml:space="preserve">
          <source>InputEvent</source>
          <target state="translated">InputEvent</target>
        </trans-unit>
        <trans-unit id="db405689c885ffc9cc491389bcf8d84e692afd89" translate="yes" xml:space="preserve">
          <source>InputEvent.constructor</source>
          <target state="translated">InputEvent.constructor</target>
        </trans-unit>
        <trans-unit id="d15e51806926190c3df82872202c0f939c48fad8" translate="yes" xml:space="preserve">
          <source>InputEvent.data</source>
          <target state="translated">InputEvent.data</target>
        </trans-unit>
        <trans-unit id="48cbcf65de3e4c182e3fca4276375a3269f458b6" translate="yes" xml:space="preserve">
          <source>InputEvent.dataTransfer</source>
          <target state="translated">InputEvent.dataTransfer</target>
        </trans-unit>
        <trans-unit id="d6a6b797bed1c610ef20390f06850b601524b857" translate="yes" xml:space="preserve">
          <source>InputEvent.getTargetRanges</source>
          <target state="translated">InputEvent.getTargetRanges</target>
        </trans-unit>
        <trans-unit id="82ebd5a248dd7f3fe04ab6f879b2dfdcd0f9ef70" translate="yes" xml:space="preserve">
          <source>InputEvent.inputType</source>
          <target state="translated">InputEvent.inputType</target>
        </trans-unit>
        <trans-unit id="d07007435ff1dacf72421bb3156159bbb6e415d8" translate="yes" xml:space="preserve">
          <source>InputEvent.isComposing</source>
          <target state="translated">InputEvent.isComposing</target>
        </trans-unit>
        <trans-unit id="434b0f50e01b1e9b69ea2e02d51cd44a3d4a98bb" translate="yes" xml:space="preserve">
          <source>InputStream</source>
          <target state="translated">InputStream</target>
        </trans-unit>
        <trans-unit id="1965ac7f3c5c7f389e62a29e10303ce93360fd9f" translate="yes" xml:space="preserve">
          <source>Insert HTML tags example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae922ecf5095e3e2fe8c510278b6030c90ed9264" translate="yes" xml:space="preserve">
          <source>Insert a &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; at the start of a &lt;code&gt;Range&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d717b5377b7eec0113939e7508465cd29001e1" translate="yes" xml:space="preserve">
          <source>Insert an element before the first child element, using the &lt;a href=&quot;firstchild&quot;&gt;firstChild&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ab3203efcbe8c3ecf469b814689e10adcaf751" translate="yes" xml:space="preserve">
          <source>Insert some HTML tags or &lt;em&gt;smiles&lt;/em&gt; or any custom text in a textarea.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994f2ea1394789d1f139c8de08078c350364e57f" translate="yes" xml:space="preserve">
          <source>Inserting Elements with appendChild(..)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c5d3255605eb901fa336f1912cde4b54d0033c" translate="yes" xml:space="preserve">
          <source>Inserting an element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0652d25bcd4cdec684cce236de4c9dacf309fd35" translate="yes" xml:space="preserve">
          <source>Inserting an element and text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12f5e0042cd2f9fa12df63031d30e4caa49b8fe" translate="yes" xml:space="preserve">
          <source>Inserting nodes into a DOM based on XML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a38d6d632941f0ea8c458a3b8bc942694d75445" translate="yes" xml:space="preserve">
          <source>Inserting text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3f13b9d73e6f7ffe0149524ed91514865833b6" translate="yes" xml:space="preserve">
          <source>Inserting to an Existing Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0d6ae61fcfcd1ce695d3f562854a697f8bd34e" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr&quot;&gt;&lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;&lt;/a&gt; element at the insertion point, or replaces the selection with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d375aa3df90c1211891dd7ca9148d1357e5a7429" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;paragraph&lt;/a&gt; around the selection or the current line. (Internet Explorer inserts a paragraph at the insertion point and deletes the selection.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c401c34a03720ae87319424959251642e43866d2" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; before the reference node as a child of a specified parent node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32f0cf62f3fe8e784980780da27c28810bad28f" translate="yes" xml:space="preserve">
          <source>Inserts a given element node at a given position relative to the element it is invoked upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9198c76ff394c0e1571f89ea8465da728f4d1789" translate="yes" xml:space="preserve">
          <source>Inserts a given text node at a given position relative to the element it is invoked upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16b7a1720921c090ef71907a89d6ebd2154a3ef" translate="yes" xml:space="preserve">
          <source>Inserts a new cell just before the given position in the row. If the given position is not given or is &lt;code&gt;-1&lt;/code&gt;, it appends the cell to the row. If the given position is greater (or equal as it starts at zero) than the amount of cells in the row, or is smaller than &lt;code&gt;-1&lt;/code&gt;, it raises a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IndexSizeError&lt;/code&gt; value. Returns a reference to a &lt;a href=&quot;htmltablecellelement&quot;&gt;HTMLTableCellElement [en-US]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c42eae009d646ef6832ce53a717794ef241fde" translate="yes" xml:space="preserve">
          <source>Inserts a new item at the end of the list. If &lt;code&gt;newItem&lt;/code&gt; is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0551168480c2030ca5cd18674f1d710020d09a7d" translate="yes" xml:space="preserve">
          <source>Inserts a new item into the list at the specified position. The first item is number 0. If &lt;code&gt;newItem&lt;/code&gt; is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to insert before is before the removal of the item. If the &lt;code&gt;index&lt;/code&gt; is equal to 0, then the new item is inserted at the front of the list. If the index is greater than or equal to &lt;code&gt;numberOfItems&lt;/code&gt;, then the new item is appended to the end of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369c39b0458869aaf69518b3a1bc61eb2a25a309" translate="yes" xml:space="preserve">
          <source>Inserts a new keyframe rule into the current CSSKeyframesRule. The parameter is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a keyframe in the same format as an entry of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;&lt;code&gt;@keyframes&lt;/code&gt;&lt;/a&gt; at-rule. If it contains more than one keyframe rule, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84958f861217deb4b18189950e9034063e4b115" translate="yes" xml:space="preserve">
          <source>Inserts a new row just before the given position in the section. If the given position is not given or is &lt;code&gt;-1&lt;/code&gt;, it appends the row to the end of section. If the given position is greater (or equal as it starts at zero) than the amount of rows in the section, or is smaller than &lt;code&gt;-1&lt;/code&gt;, it raises a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IndexSizeError&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14fe1d3a033b778600fe743acddbdb35bc53f11" translate="yes" xml:space="preserve">
          <source>Inserts a new rule at the specified position in the style sheet, given the textual representation of the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff86515e72a20292677bcf708c9044255a02f2f5" translate="yes" xml:space="preserve">
          <source>Inserts a new style rule into the current style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af864a925b9475a7f37efadcbfc3afebc06fb41" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; objects or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects after the last child of the &lt;code&gt;ParentNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2b812dd4a0b3289d236fb0c28314cdbc30e68d" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; objects or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects before the first child of the &lt;code&gt;ParentNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6cbf3211322474fdd816ebff27c4249e7adc30" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects in the children list of this &lt;code&gt;ChildNode&lt;/code&gt;'s parent, just after this &lt;code&gt;ChildNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594b3f4e14345ff52decd720033fb77c43bddd51" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects in the children list of this &lt;code&gt;ChildNode&lt;/code&gt;'s parent, just before this &lt;code&gt;ChildNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16851c6926d05979e9da774b4492f88c23b9de3" translate="yes" xml:space="preserve">
          <source>Inserts an HTML string at the insertion point (deletes selection). Requires a valid HTML string as a value argument. (Not supported by Internet Explorer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2734ffd87350ff1d4336985aea37b4a052b6c023" translate="yes" xml:space="preserve">
          <source>Inserts an image at the insertion point (deletes selection). Requires a URL string for the image's &lt;code&gt;src&lt;/code&gt; as a value argument. The requirements for this string are the same as &lt;code&gt;createLink&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38efcf96ae2a45c10979bf8c1b8b42feb2f89769" translate="yes" xml:space="preserve">
          <source>Inserts the given plain text at the insertion point (deletes selection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5031da81798bc50c2dc9cb234cb9c2f39822f01c" translate="yes" xml:space="preserve">
          <source>Inserts the specified video effect into the media pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5400ca437b7ea06a46e3c149d5a4ad34005be5e" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;waitUntil()&lt;/code&gt; we use the &lt;a href=&quot;../cachestorage/open&quot;&gt;&lt;code&gt;caches.open()&lt;/code&gt;&lt;/a&gt; method to create a new cache called &lt;code&gt;v1&lt;/code&gt;, which will be version 1 of our site resources cache. This returns a promise for a created cache; once resolved, we then call a function that calls &lt;code&gt;addAll()&lt;/code&gt; on the created cache, which for its parameter takes an array of origin-relative URLs to all the resources you want to cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca031060ac3d32f4982b877e58e26db111f79013" translate="yes" xml:space="preserve">
          <source>Inside each ad, for demonstration purposes, we draw the current value of its &lt;code&gt;totalViewTime&lt;/code&gt;, converted into minutes and seconds. This is handled by passing the ad's element into the &lt;code&gt;drawAdTimer()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c112b37be107bb5972963b46f67c326b629a27" translate="yes" xml:space="preserve">
          <source>Inside our &lt;code&gt;if() { ... }&lt;/code&gt; block, we run the &lt;a href=&quot;../navigator/getvrdisplays&quot;&gt;&lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt;&lt;/a&gt; function. This returns a promise, which is fulfilled with an array containing all the VR display devices connected to the computer. If none are connected, the array will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1b0ccb3a85ffc80137a0b7686c08e182631d5d" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;&amp;lt;custom-square&amp;gt;&lt;/code&gt; element's class definition we include some life cycle callbacks that make a call to an external function, &lt;code&gt;updateStyle()&lt;/code&gt;, which actually applies the size and color to the element. You'll see that we are passing it &lt;code&gt;this&lt;/code&gt; (the custom element itself) as a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1546e0ffda0dddfade36a903f9a6b7fd69e43648" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;drawVRScene()&lt;/code&gt; function, you'll find this bit of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d24c97484d712bff9735e4c9280ceaa1436730" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;inputForm.onsubmit&lt;/code&gt; handler, we stop the form submitting with &lt;a href=&quot;../event/preventdefault&quot;&gt;preventDefault()&lt;/a&gt;, create a new &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; instance containing the text from the text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;, set the utterance's voice to the voice selected in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and start the utterance speaking via the &lt;a href=&quot;../speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9527350bb6153413577f95b1696c63969b3fc3" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;inputForm.onsubmit&lt;/code&gt; handler, we stop the form submitting with &lt;a href=&quot;event/preventdefault&quot;&gt;preventDefault()&lt;/a&gt;, create a new &lt;a href=&quot;speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; instance containing the text from the text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;, set the utterance's voice to the voice selected in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and start the utterance speaking via the &lt;a href=&quot;speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc1cec2069ec0bc76d28172357e7319e953ccff" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;inputForm.onsubmit&lt;/code&gt; handler, we stop the form submitting with &lt;a href=&quot;event/preventdefault&quot;&gt;preventDefault()&lt;/a&gt;, use the &lt;a href=&quot;speechsynthesisutterance/speechsynthesisutterance&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt; to create a new utterance instance containing the text from the text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;, set the utterance's &lt;a href=&quot;speechsynthesisutterance/voice&quot;&gt;&lt;code&gt;voice&lt;/code&gt;&lt;/a&gt; to the voice selected in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and start the utterance speaking via the &lt;a href=&quot;speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a90d492da1d8e3c5c1d52e4dc717d5d29a4b2f4" translate="yes" xml:space="preserve">
          <source>Inside the Party Bus: Building a Web App with Multiple Live Video Streams + Interactive Graphics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e8023a8c1a5f58d27c2b9ce8b7711e24f4836d" translate="yes" xml:space="preserve">
          <source>Inside the context, create sources &amp;mdash; such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;, oscillator, or stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a727ae8299354e94b0a6b4ac1738c5351ea2f2" translate="yes" xml:space="preserve">
          <source>Inside the context, create sources &amp;mdash; such as &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;, oscillator, stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14163be7049f8f1fe99917c7452746adbb8f5ddf" translate="yes" xml:space="preserve">
          <source>Inside the event handler function you can include code to upgrade the database structure, as shown in the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e746ae8ae6de16f0bd864a1387244108a586ac5" translate="yes" xml:space="preserve">
          <source>Inside the promise &lt;code&gt;then()&lt;/code&gt; block, we check whether the array length is more than 0; if so, we set the value of our &lt;code&gt;vrDisplay&lt;/code&gt; variable to the 0 index item inside the array. &lt;code&gt;vrDisplay&lt;/code&gt; now contains a &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; object representing our connected display!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c461de447110f1457abba012d174dbab22fc6b" translate="yes" xml:space="preserve">
          <source>Inside the rendering loop, you grab the data required to display the current frame (&lt;a href=&quot;../vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt;), draw the displayed scene twice &amp;mdash; once for the view in each eye &amp;mdash; then submit the rendered view to the display to show to the user via (&lt;a href=&quot;../vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa217054091fd3c22a64c7040a9c9c31244eca8" translate="yes" xml:space="preserve">
          <source>Inside the rendering loop, you grab the data required to display the current frame (&lt;a href=&quot;vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt;), draw the displayed scene twice &amp;mdash; once for the view in each eye, then submit the rendered view to the display to show to the user (&lt;a href=&quot;vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9bf201d11fd65f401fdc0af621b6fc48106873" translate="yes" xml:space="preserve">
          <source>Inside the worker we use the &lt;a href=&quot;sharedworkerglobalscope/onconnect&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope.onconnect&lt;/code&gt;&lt;/a&gt; handler to connect to the same port discussed above. The ports associated with that worker are accessible in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt; event's &lt;code&gt;ports&lt;/code&gt; property &amp;mdash; we then use &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;&lt;code&gt;start()&lt;/code&gt; method to start the port, and the &lt;code&gt;onmessage&lt;/code&gt; handler to deal with messages sent from the main threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2fff1d6a493b498dce4ab64858d000cd8f051f" translate="yes" xml:space="preserve">
          <source>Inspired by the same &lt;code&gt;WebGLRenderingContext&lt;/code&gt; method it returns &lt;code&gt;true&lt;/code&gt; if the Canvas context has been lost, or &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="529ef97d2434980bc3da73a6c23dfa087b8d8566" translate="yes" xml:space="preserve">
          <source>Install and activate: populating your cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9acc3abc056e12e0be26f1eea479d335744427" translate="yes" xml:space="preserve">
          <source>InstallEvent</source>
          <target state="translated">InstallEvent</target>
        </trans-unit>
        <trans-unit id="fcbdb4d8154e422d310072d516c8bb815d0591d2" translate="yes" xml:space="preserve">
          <source>InstallEvent.activeWorker</source>
          <target state="translated">InstallEvent.activeWorker</target>
        </trans-unit>
        <trans-unit id="233bf443ea9be7bb1a5a76f34e4b353c0523472c" translate="yes" xml:space="preserve">
          <source>InstallEvent.constructor</source>
          <target state="translated">InstallEvent.constructor</target>
        </trans-unit>
        <trans-unit id="d83be3eea0c30e92a95fc7899aa4f1c848b8659b" translate="yes" xml:space="preserve">
          <source>Installation is attempted when the downloaded file is found to be new &amp;mdash; either different to an existing service worker (byte-wise compared), or the first service worker encountered for this page/site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c86f4d4fe63b59e961d4b906df36f8231533a5" translate="yes" xml:space="preserve">
          <source>Installation of the worker is attempted when service worker-controlled pages are accessed subsequently. An Install event is always the first one sent to a service worker (this can be used to start the process of populating an IndexedDB, and caching site assets). This is really the same kind of procedure as installing a native or Firefox OS app &amp;mdash; making everything available for use offline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b9e1efb77595d8bce0403d0a0273eb38fcd6ba" translate="yes" xml:space="preserve">
          <source>Installing a global &lt;code&gt;error&lt;/code&gt; event handler is useful for automated collection of error reports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab7d1d49dd26afc2c53ee28fa81799fd390b0a3" translate="yes" xml:space="preserve">
          <source>Instance methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f424042c7e8bee2655a6672ddd3752109cc8d7" translate="yes" xml:space="preserve">
          <source>Instance properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a6e5b943089530e0ea57a11cccb06af28aa459" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;XMLHttpRequest&lt;/code&gt; can be used to submit forms in two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b792d4c91114fd0db1546cefe814b8b7c1e7b3a8" translate="yes" xml:space="preserve">
          <source>Instead of assigning a color value to the fragment's color, the fragment's color is computed by fetching the &lt;strong&gt;texel&lt;/strong&gt; (that is, the pixel within the texture) based on the value of &lt;code&gt;vTextureCoord&lt;/code&gt; which like the colors is interpolated bewteen vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f4766ccc7c14d5ece280d88a05d02ccad87579" translate="yes" xml:space="preserve">
          <source>Instead of creating a &lt;code&gt;Clipboard&lt;/code&gt; object through instantiation, you access the system clipboard through the &lt;a href=&quot;navigator/clipboard&quot;&gt;&lt;code&gt;Navigator.clipboard&lt;/code&gt;&lt;/a&gt; global:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea086f7f803f51e2394fba444d8215ce65c15b39" translate="yes" xml:space="preserve">
          <source>Instead of immediately failing, you could choose to call &lt;a href=&quot;../paymentresponse/retry&quot;&gt;&lt;code&gt;retry()&lt;/code&gt;&lt;/a&gt; on the response object to ask the user agent to try to process the payment again; this should usually only be done after the user has made any needed corrections to the order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892e8c8924ea72198052c8b2b57cba1d81281f31" translate="yes" xml:space="preserve">
          <source>Instead of passing a path to the resource you want to request into the &lt;code&gt;fetch()&lt;/code&gt; call, you can create a request object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, and pass that in as a &lt;code&gt;fetch()&lt;/code&gt; method argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897f41e243ba6de41d3899c837ab683df9cde303" translate="yes" xml:space="preserve">
          <source>Instead of the assigning the promise to a variable, we can post the values returned by the promise to console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5279508d21cd4bf74a53ce4f52858fd97ca5b254" translate="yes" xml:space="preserve">
          <source>Instead of trying to juggle shaders, geometry, and working with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GPU&quot;&gt;GPU&lt;/a&gt; memory, already in the first program, the examples here explore WebGL in an incremental way. We believe that it leads to a more effective learning experience and ultimately a deeper understanding of the underlying concepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f28e0e2862b2735d471d2510b9d28fb96c4842f" translate="yes" xml:space="preserve">
          <source>Instead, use another method, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7319116bc29acba4a03e6c679da2d8dc5eb0a039" translate="yes" xml:space="preserve">
          <source>Instead, we could build our own promise to handle this kind of case. (See our &lt;a href=&quot;https://github.com/mdn/promises-test&quot;&gt;Promises test&lt;/a&gt; example for the source code, or &lt;a href=&quot;https://mdn.github.io/promises-test/&quot;&gt;look at it running live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8ca590a89d1b2ae2151afad76c0729e4148590" translate="yes" xml:space="preserve">
          <source>Instructs the ICE agent to gather both &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTP&quot;&gt;RTP&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP&lt;/a&gt; candidates. If the remote peer can multiplex RTCP, then RTCP candidates are multiplexed atop the corresponding RTP candidates. Otherwise, both the RTP and RTCP candidates are returned, separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="73e231f79604a7c61096425e88c9207010167d1c" translate="yes" xml:space="preserve">
          <source>Integer attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f83d80fb724e4b2e585f21faccf00e673b14a5e" translate="yes" xml:space="preserve">
          <source>Integer specifying the number of channels for this node's input, defaults to 2. Values of up to 32 are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8c70135aeb9e67664f194885c20f5b37b1b0d0" translate="yes" xml:space="preserve">
          <source>Integer specifying the number of channels for this node's output, defaults to 2. Values of up to 32 are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24c43fa84cfe1c396462aae4deb27e4ca5db45f" translate="yes" xml:space="preserve">
          <source>Intel Mac OS X x.y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af1a09e7db4b8180679ccbe171043bd28271d6a" translate="yes" xml:space="preserve">
          <source>Intend to supersede DOM 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba11397e0f22632da727f4ce21cc937cbe0e1f7" translate="yes" xml:space="preserve">
          <source>Intended for HD backing stores, but removed from canvas specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4041c96ee493f72ebc3bb0487c361430bd19f0d0" translate="yes" xml:space="preserve">
          <source>Intended for metering purposes, it returns a value in dB, or &lt;code&gt;0&lt;/code&gt; (no gain reduction) if no signal is fed into the &lt;code&gt;DynamicsCompressorNode&lt;/code&gt;. The range of this value is between &lt;code&gt;-20&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; (in dB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e84ce8df7e2c8110c50fc187d1de51e7e6ced8" translate="yes" xml:space="preserve">
          <source>Inter-App Connection API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa4c0b1f03f5de1eda4e13416854c2ad45a0c73" translate="yes" xml:space="preserve">
          <source>Interaction between privileged and non-privileged pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdff695781360f6bfbf6b35887cdae6fa3a391f2" translate="yes" xml:space="preserve">
          <source>Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd27452e2c44dc5939e52298713f123e1301d10e" translate="yes" xml:space="preserve">
          <source>Interactive cross-browser demo on navigator properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4db7ef1fa23cfb5e115a2a2c89d46a6a2ebc4a" translate="yes" xml:space="preserve">
          <source>Interface</source>
          <target state="translated">Interface</target>
        </trans-unit>
        <trans-unit id="200d3784af8f514ef960c6d538b2d33d53c7a4ed" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;SVGTransformable&lt;/code&gt; contains properties and methods that apply to all elements which have attribute &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform&quot;&gt;transform&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a097b716fe935f0c7f35b06867b3a019d2aeda0" translate="yes" xml:space="preserve">
          <source>Interface overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="75cd03c9d18a39dee265e66002f9eb352dda00c6" translate="yes" xml:space="preserve">
          <source>Interfaces and Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d039372089feeb8f7b5e2b217b7232a938b564b8" translate="yes" xml:space="preserve">
          <source>Interfaces based on CSSStyleValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d003a38c073224d2eec165303e57b8d05c1ab063" translate="yes" xml:space="preserve">
          <source>Interfaces based on Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a1f856fa6933c89f743692324e6bfc3c2ab42f" translate="yes" xml:space="preserve">
          <source>Interfaces based on OrientationSensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8654abfd9f308122059e4edfb87fcb0c7cd8a0c6" translate="yes" xml:space="preserve">
          <source>Interfaces based on Sensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa37d0a32838a7026ed67c57aa06d63af52c7bd" translate="yes" xml:space="preserve">
          <source>Interfaces for defining effects that you want to apply to your audio sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f16ffefd099418416bc8d49b8c9be9e4d87ae5" translate="yes" xml:space="preserve">
          <source>Interfaces implementing it: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d1dedf699526e24b11c85c09fcdc4706fc0746" translate="yes" xml:space="preserve">
          <source>Interfaces implementing this one: &lt;a href=&quot;htmlanchorelement&quot;&gt;&lt;code&gt;HTMLAnchorElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlareaelement&quot;&gt;&lt;code&gt;HTMLAreaElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c761c11f5b380121d50fbeca5cbf0136988a6d5" translate="yes" xml:space="preserve">
          <source>Interfaces implementing this one: &lt;a href=&quot;workerlocation&quot;&gt;&lt;code&gt;WorkerLocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38913081b01712423aec4e92268089a3f2fb07c4" translate="yes" xml:space="preserve">
          <source>Interfaces replaced by this one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7ec68825639c82f7b25867f9f387b96e50316e" translate="yes" xml:space="preserve">
          <source>Interfaces that define audio sources for use in the Web Audio API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dac7fdb60427fc4607925175b94125a7743dcd" translate="yes" xml:space="preserve">
          <source>Internal APIs (chrome-context only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23575f35a521e9c261d274ac4cb29c2f05b261ac" translate="yes" xml:space="preserve">
          <source>Internal Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a53f80d4bfb545a817aa4be8fc50db0b968da0" translate="yes" xml:space="preserve">
          <source>Internal queues and queuing strategies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bd2ceb08e4a5d50bba8c2633d3ee72cb8d1cf7" translate="yes" xml:space="preserve">
          <source>Internal queues employ a &lt;strong&gt;queuing strategy&lt;/strong&gt;, which dictates how to signal backpressure based on the &lt;strong&gt;internal queue state.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c5def8456e9130773962ecb46f93b2f558e543" translate="yes" xml:space="preserve">
          <source>Internationalized sorting. Not all languages sort strings in the same way, so internationalized sorting is not supported. While the database can't store data in a specific internationalized order, you can sort the data that you've read out of the database yourself. Note, however, that &lt;a href=&quot;using_indexeddb#Locale-aware_sorting&quot;&gt;locale-aware sorting&lt;/a&gt; has been allowed with an experimental flag enabled (currently for Firefox only) since Firefox 43.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03887c574e7609584247c1dc45635792d4d52fd" translate="yes" xml:space="preserve">
          <source>Internet Explorer &amp;gt;= 9 adds a CustomEvent object to the window, but with correct implementations, this is a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36730ef5b3fae8fd6837cf0ada16e5527d7def5b" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10 only accepts a single &lt;code&gt;Transferable&lt;/code&gt; object as parameter, but not an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9bf37e39eaa80c318c1a6a895c912d54338aca" translate="yes" xml:space="preserve">
          <source>Internet Explorer 6, 7 and 8 supported it, but erroneously includes &lt;code&gt;Comment&lt;/code&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f87e1558b88bf435e07f147e4eb5473e8aaa1c" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 and below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5a6bf6ef1b13b714fa28384998addfccffbcd1" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 only supported CSS2 selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321f9b0702114d2d0ddc3c879aa38d4020430654" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9 and 10 have bugs where the 'interactive' state can be fired too early before the document has finished parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1e56ffaa0df47108ad119a5d256266079549ad" translate="yes" xml:space="preserve">
          <source>Internet Explorer does not respect the &lt;code&gt;null&lt;/code&gt; return value and will display this to users as &quot;null&quot; text. You have to use &lt;code&gt;undefined&lt;/code&gt; to skip the prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78283551735980c886a9f943c6acdea859eec07" translate="yes" xml:space="preserve">
          <source>Internet Explorer does not support &lt;code&gt;Transferable&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0f36aeb064db637e15c4206716c531b3e71be2" translate="yes" xml:space="preserve">
          <source>Internet Explorer does not support all methods from the &lt;code&gt;Node&lt;/code&gt; interface in the &lt;code&gt;Document&lt;/code&gt; interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974c74554a2c740bbaab7f62eb340e382a4fd683" translate="yes" xml:space="preserve">
          <source>Internet Explorer introduced &lt;a href=&quot;../htmlelement/innertext&quot;&gt;&lt;code&gt;node.innerText&lt;/code&gt;&lt;/a&gt;. The name is similar but with the following differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3d935a1d27629eebfb46736e87be347f2aa4be" translate="yes" xml:space="preserve">
          <source>Internet Explorer notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13b6015cafa8b77a3da77f2ce0a5311a56d4ea" translate="yes" xml:space="preserve">
          <source>Internet Explorer version 5 and 6 supported ajax calls using &lt;code&gt;ActiveXObject()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be94f21a917395d10d819266e1b94a207a85c12c" translate="yes" xml:space="preserve">
          <source>Internet Explorer versions 8 and 9 supported cross-domain requests (CORS) using &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc288060%28VS.85%29.aspx&quot;&gt;XDomainRequest&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5353630ac8202f9529279378817f08f0536098" translate="yes" xml:space="preserve">
          <source>Internet Explorer will change the value to be lowercased; thus, &lt;code&gt;linkMove&lt;/code&gt; will become &lt;code&gt;linkmove&lt;/code&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca4c296b865be51eca1942efaf87c466c5c67f5" translate="yes" xml:space="preserve">
          <source>Internet Explorer will take into account the zoom setting when reporting the screen height. It will only return the real height of the screen if the zoom is set to 100%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263c07c0d0df35f0b6fb25d02a9c1d2221f2de7d" translate="yes" xml:space="preserve">
          <source>Internet Explorer will take into account the zoom setting when reporting the screen width. It will only return the real width of the screen if the zoom is set to 100%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52503cafba7d6d55aa188b27272b077d7f5217da" translate="yes" xml:space="preserve">
          <source>Internet Explorer windows provide visible security information to the user to help them ascertain the source of the Web page and the security of the communication with that page. When these elements are not in view, the user might think they are on a more trusted page or interacting with a system process when they are actually interacting with a malicious host. (...)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee8f70e7d8b9c0f444242c7791f8de975f2a89" translate="yes" xml:space="preserve">
          <source>Interoperability</source>
          <target state="translated">Interoperability</target>
        </trans-unit>
        <trans-unit id="15470fd033e12b800743519c6e594f7da0f4f0f0" translate="yes" xml:space="preserve">
          <source>Interpretation</source>
          <target state="translated">Interpretation</target>
        </trans-unit>
        <trans-unit id="bf6e8279d6c8df872e7d451b3340c0dc6953fb8b" translate="yes" xml:space="preserve">
          <source>Interpupillary distace ( IPD ) can be calculated using &lt;a href=&quot;../vreyeparameters/offset&quot;&gt;&lt;code&gt;VREyeParameters.offset&lt;/code&gt;&lt;/a&gt; in WebVR, which is equal to half the IPD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee51ad6f112fe3c90e4e0d2025120a09e79fc7a2" translate="yes" xml:space="preserve">
          <source>Interpupillary distance ( IPD )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0970e8592ea47c5acc7a523bb472bee2f741929a" translate="yes" xml:space="preserve">
          <source>Intersection Observer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c54a3422cc19facf8a4a38d37179f160c433d6" translate="yes" xml:space="preserve">
          <source>Intersection Observer API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd50c1f940210836a14542317817f4f3b791ff04" translate="yes" xml:space="preserve">
          <source>Intersection Observer API: Timing element visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0568429c907bf8fba980c05bc604a3f43360decb" translate="yes" xml:space="preserve">
          <source>Intersection Observer polyfill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe535bf8a3ab997c17612d04b4d6374af61481e8" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver constructor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d513a93a5c3f57e959c333e514b9be91d9e1d9c" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abe765f67447f12549240b720036891b0e2633c" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver.disconnect()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00af74bd0d249bfbb2030936262d874d8d53b640" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver.observe()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbba0c0e73e58a3e91da346335366714a967daf9" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver.rootMargin' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa946fad2228f6022da302d460096c7c25b5538d" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver.takeRecords()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87114e5877f9f4e5958b8354e77f000bb25f42bb" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver.thresholds' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54a9f6635a60848907c25177b63ecdd22f1dd23" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserver.unobserve()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063534651dfc0d616b7798aa99e3ccea2598e7e2" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9a4fa9dc94ecc0093e5a325fdf732c140e2f07" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.boundingClientRect' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ecd413318f26bb11a5efe09db1ea742d8a9022" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.intersectionRect' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6abecb13b9dad7fec067f5cd6334dd0f5348f2" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.intersectionratio' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f767ebcbca3f65e671c1f2d3d0d605c6b54f917" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.isIntersecting' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32038ac2738647ac63f54664272044a3a82e3950" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.rootBounds' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0247b16250bf635e626520e8a920ef90e3d9f024" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.target' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c793963c68510568726f004c32999b63973692" translate="yes" xml:space="preserve">
          <source>Intersection Observer&lt;br/&gt;&lt;small&gt;The definition of 'IntersectionObserverEntry.time' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067bb00ae5fec177afd9c4f60baa9c5c5d7c46a4" translate="yes" xml:space="preserve">
          <source>Intersection change callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b2bec0b60308989f74c0a6b570487ca9906bac" translate="yes" xml:space="preserve">
          <source>Intersection observer concepts and usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7178f222de5345dc5b3c352f85341a17550aeaa" translate="yes" xml:space="preserve">
          <source>Intersection observer options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2647ef5ffb1d8472d7547ec5dd7cde5b67216f6f" translate="yes" xml:space="preserve">
          <source>IntersectionObserver</source>
          <target state="translated">IntersectionObserver</target>
        </trans-unit>
        <trans-unit id="5ea7c4cbd4b7c3ced54faa6d88f84029e1860b4d" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.constructor</source>
          <target state="translated">IntersectionObserver.constructor</target>
        </trans-unit>
        <trans-unit id="a8ff0469b8be89e505d4a3e0b834cf8d08998448" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.disconnect</source>
          <target state="translated">IntersectionObserver.disconnect</target>
        </trans-unit>
        <trans-unit id="401be3a74a4af870b1302505b940d702da9757fd" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.observe</source>
          <target state="translated">IntersectionObserver.observe</target>
        </trans-unit>
        <trans-unit id="8f814dcff218c1f81e7d107e4f4838311900b071" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.root</source>
          <target state="translated">IntersectionObserver.root</target>
        </trans-unit>
        <trans-unit id="fe1ea85ee136c85b72f68ffff5992e18a6eb65f6" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.rootMargin</source>
          <target state="translated">IntersectionObserver.rootMargin</target>
        </trans-unit>
        <trans-unit id="b868a75bbb4dd9dc344bd825fac9cbd32b52f55c" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.takeRecords</source>
          <target state="translated">IntersectionObserver.takeRecords</target>
        </trans-unit>
        <trans-unit id="0d1bfde8a41230e3bcac80fddab51415785ebfcb" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.thresholds</source>
          <target state="translated">IntersectionObserver.thresholds</target>
        </trans-unit>
        <trans-unit id="82288cde3e451ccd503b64b450f4b04a0755e114" translate="yes" xml:space="preserve">
          <source>IntersectionObserver.unobserve</source>
          <target state="translated">IntersectionObserver.unobserve</target>
        </trans-unit>
        <trans-unit id="99d7a36fe8c46405548643cf76f7e03b441e8566" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry</source>
          <target state="translated">IntersectionObserverEntry</target>
        </trans-unit>
        <trans-unit id="a5c679aeb3994834d7f2ce215af0f22a29cee503" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.boundingClientRect</source>
          <target state="translated">IntersectionObserverEntry.boundingClientRect</target>
        </trans-unit>
        <trans-unit id="f38208ca0fde3b82e401a7a06a0f29aab4de75b2" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.intersectionRatio</source>
          <target state="translated">IntersectionObserverEntry.intersectionRatio</target>
        </trans-unit>
        <trans-unit id="ccc60b92d0952d9cd11fbac6bf4ea0f2ab8ccc29" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.intersectionRect</source>
          <target state="translated">IntersectionObserverEntry.intersectionRect</target>
        </trans-unit>
        <trans-unit id="5fcb04dbd04baa1d0b54a502e1c253a2cb79950b" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.isIntersecting</source>
          <target state="translated">IntersectionObserverEntry.isIntersecting</target>
        </trans-unit>
        <trans-unit id="7a2fd53f85c50751f1af0466193698a5122ddd58" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.rootBounds</source>
          <target state="translated">IntersectionObserverEntry.rootBounds</target>
        </trans-unit>
        <trans-unit id="4a216968640ba9a5dd39540084783fe6ec12f076" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.target</source>
          <target state="translated">IntersectionObserverEntry.target</target>
        </trans-unit>
        <trans-unit id="73ccaf3110f7c899ea1fae42fd8069496ef54b92" translate="yes" xml:space="preserve">
          <source>IntersectionObserverEntry.time</source>
          <target state="translated">IntersectionObserverEntry.time</target>
        </trans-unit>
        <trans-unit id="52b04ec73c2b0eda9f8af0f6be19b580fe85b44e" translate="yes" xml:space="preserve">
          <source>Intranet sites are set to Compatibility View, which will emulate IE7 and omit &lt;code&gt;window.location.origin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a8370a8a7ad98c03114528fa3359fc87f3d0d6" translate="yes" xml:space="preserve">
          <source>Intranet sites are set to Compatibility View, which will emulate IE7 and omit &lt;code&gt;window.location.toString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8fab16e324bae590d0d76b5cbd33b689365cda" translate="yes" xml:space="preserve">
          <source>Introduced</source>
          <target state="translated">Introduced</target>
        </trans-unit>
        <trans-unit id="86c0b6e67c8f4c864f6fe4f3ca2914cde64bb662" translate="yes" xml:space="preserve">
          <source>Introduced in in Gecko 1.9, deprecated in favor of the &lt;a href=&quot;canvasrenderingcontext2d/font&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.font&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e0a65357067561d84fabb5ce9337b558abfcc0" translate="yes" xml:space="preserve">
          <source>Introduced, based on the &lt;a href=&quot;https://github.com/rocallahan/innerText-spec&quot;&gt;draft of the innerText specification&lt;/a&gt;. See &lt;a href=&quot;https://github.com/whatwg/html/issues/465&quot;&gt;whatwg/html#465&lt;/a&gt; and &lt;a href=&quot;https://github.com/whatwg/compat/issues/5&quot;&gt;whatwg/compat#5&lt;/a&gt; for history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b779bec3ff238924349d238dad58939464fbe9ec" translate="yes" xml:space="preserve">
          <source>Introducing a real demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78d54a0f26fbf14cd62a1c9fcc7069766a38396" translate="yes" xml:space="preserve">
          <source>Introducing an example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702f1282880dac0d44ed44c7d4deeb292a967304" translate="yes" xml:space="preserve">
          <source>Introducing our demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe28e9cfab5a2f7c1deb3fcc748e31cc307eb5d" translate="yes" xml:space="preserve">
          <source>Introducing the Payment Request API for Apple Pay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="ad058a7930eb46a360a38144c0224a618ed128a0" translate="yes" xml:space="preserve">
          <source>Introduction to Touch events in JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94d61cd1953f916eb6a14ecd73cf2a6a23079ae" translate="yes" xml:space="preserve">
          <source>Introduction to WebRTC protocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5d4fc6b87098ecea87313caf6a87321fcf701a" translate="yes" xml:space="preserve">
          <source>Introduction to events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f426c016099b5f664f1e39e6247678f1b9e5312" translate="yes" xml:space="preserve">
          <source>Introduction to the DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8b6ab8fdf88ac5a640952f3c75ef19aedbe8e1" translate="yes" xml:space="preserve">
          <source>Introduction to the File System API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa84d710f88bb37263173223619da83ac5fcdff6" translate="yes" xml:space="preserve">
          <source>Introduction to the Real-time Transport Protocol (RTP)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0eeb53d4ab504a5c937902749a6bfaef3b2b1a" translate="yes" xml:space="preserve">
          <source>Invalid frame payload data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384a2ebdc451195494bb50d769d9a0750af97e63" translate="yes" xml:space="preserve">
          <source>InvalidAccessError</source>
          <target state="translated">InvalidAccessError</target>
        </trans-unit>
        <trans-unit id="481473203583ea7610d087be71ee57fdd69bc534" translate="yes" xml:space="preserve">
          <source>InvalidStateError</source>
          <target state="translated">InvalidStateError</target>
        </trans-unit>
        <trans-unit id="9d83af9d9234dc096d69650ed5d8e03f3241d84c" translate="yes" xml:space="preserve">
          <source>Invalidates portions of the contents of attachments in a framebuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295cf33b6bd716b731b13985a680c7ff33d392f0" translate="yes" xml:space="preserve">
          <source>Invalidates the contents of attachments in a framebuffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4dc15f686722ec98fc4a8b974af76dc9eafcae" translate="yes" xml:space="preserve">
          <source>Inverts the current stencil buffer value bitwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6810df4722ce037a7af23074310b574e228fdff" translate="yes" xml:space="preserve">
          <source>Invoked when an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/abort_(dom_abort_api)&quot;&gt;abort&lt;/a&gt;&lt;/code&gt; event fires, i.e. when the DOM request(s) the signal is communicating with is/are aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ef2000a2b55de8ef64add6132e8bb678d8acb9" translate="yes" xml:space="preserve">
          <source>Invokes the native sharing mechanism of the current platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a72eb3c5844abe6e1fa8c64707f35043d1e22fb" translate="yes" xml:space="preserve">
          <source>Invokes the specified callback with the drag data item string as its argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca32c731c3580787135c6888785ddbaa260f184" translate="yes" xml:space="preserve">
          <source>Invoking this method creates a reader and locks it to the stream &amp;mdash; no other reader may read this stream until this reader is released, e.g. by invoking &lt;a href=&quot;../readablestreamdefaultreader/releaselock&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader.releaseLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6761633294d631ef0fa148a1de8f8cf707a80baf" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;float&lt;/code&gt; giving the amount of time the animation has been running, in seconds, when this event fired, excluding any time the animation was paused. For an &lt;code&gt;&quot;animationstart&quot;&lt;/code&gt; event, &lt;code&gt;elapsedTime&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt; unless there was a negative value for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay&quot;&gt;animation-delay&lt;/a&gt;&lt;/code&gt;, in which case the event will be fired with &lt;code&gt;elapsedTime&lt;/code&gt; containing &lt;code&gt;(-1 * &lt;/code&gt;&lt;em&gt;delay&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;. It defaults to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548d26b1762adbfebdd1f66c3fa40d681859bdb5" translate="yes" xml:space="preserve">
          <source>Is ServiceWorker ready?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b1fe6b79e8f7beede08d3bc0586500205ee682" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing one or more CSS selectors separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee75ebdd8cb3d456e0eb31f14d9852253f8216f" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the &lt;code&gt;PUBLIC&lt;/code&gt; identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73d107a9d77c859d4500e0167cd1af77f2687b7" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the &lt;code&gt;SYSTEM&lt;/code&gt; identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe47c55b99548493174b19cf0225a176993a55e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the URL of the page to navigate to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b387281ce6fdec15efae5f5488107a43e6e23529" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the context identifier defining the drawing context associated to the canvas. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091df59a55b180091810e17a77a53e63c5b1200d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the event, like &lt;code&gt;&quot;icecandidate&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8938f906b0b1b14029c3f380636d0ccd72693ac4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the event, like &lt;code&gt;addstream&lt;/code&gt; or &lt;code&gt;removestream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55853efa645da8163ac57e85bc2d2910b98d7417" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the feature to test. This is the same name which can be passed to the method &lt;code&gt;hasFeature&lt;/code&gt; on &lt;a href=&quot;../document/implementation&quot;&gt;DOMImplementation&lt;/a&gt;. Possible values defined within the core DOM specification are listed on the DOM Level 2 &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/introduction.html#ID-Conformance&quot;&gt;Conformance Section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5ab553ece22b9ff0960529f3c579da19756fab" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the namespace URI of the document to be created, or &lt;code&gt;null&lt;/code&gt; if the document doesn't belong to one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae6023813f8abee310c52e805819d70c413fa23" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the qualified name, like &lt;code&gt;svg:svg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0992245cbb9b5cbb4bff2896ab237f820854d07" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the qualified name, that is an optional prefix and colon plus the local root element name, of the document to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae05054d94322d0baea253d8b13d60cc65b1b800" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the text to encode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aea20bc44134516ebb715a133d0699fa2c48693" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the title to give the new HTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e971df5c31b4f01eac5fceb7350d7f43818225" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/property-name&quot;&gt;&lt;code&gt;property-name&lt;/code&gt;&lt;/a&gt; CSS property associated with the transition. It defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cf3639a4e232bec05bd0bd01c3c33ae2a3a45f" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the version number of the feature to test. In DOM Level 2, version 1, this is the string &lt;code&gt;2.0&lt;/code&gt;. If the version is not specified, supporting any version of the feature will cause the method to return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5468767bbeeab30c5dc0f2f0c0d535c438b3623b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; corresponding to the stream to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a7d158ec76e7f688cf1555527b5628150b41b5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; is the domain name where the IdP is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5ca736fe283f46d86782c98f464929fbfcb69e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the channel; there is one single channel with this name for all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/browsing_context&quot;&gt;browsing contexts&lt;/a&gt; with the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;origin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b80928216c6cffeb54bb32aba5e24ebb224555e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the event (see &lt;a href=&quot;https://developer.mozilla.org/Web/API/PointerEvent#Pointer_event_types&quot;&gt;PointerEvent event types&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9503098ae120baf2879eda1b7cc3cc1b8d72a5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21570def0b387ba7bdb7b1365b81c9d4873a407" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the type of the &lt;code&gt;ClipboardEvent&lt;/code&gt;. It is case-sensitive and can be: &lt;code&gt;'copy'&lt;/code&gt;, &lt;code&gt;'cut'&lt;/code&gt;, or &lt;code&gt;'paste'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e1e9edb4763152b265054413e60fcec70a8abc" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the type of the &lt;code&gt;ProgressEvent&lt;/code&gt;. It is case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d3dedee8d3d1765ad08ef2385272fe130408d5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the type of the &lt;code&gt;TransitionEvent&lt;/code&gt;. It is case-sensitive and can only be: &lt;code&gt;'&lt;/code&gt;transitionend&lt;code&gt;'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd723ebef4ab0e11f195d99eb833ecf1dfa5593" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the protocol used to communicate with the IdP. It defaults to &lt;code&gt;&quot;default&quot;&lt;/code&gt; and is used to determine the URL where the IdP is listening.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8044dd17ccce07512adca2b6f52ebb463ce46525" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the username associated with the IdP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e59772683738c88ffa6ad5c66e3658eb386901" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, defaulting to &lt;code&gt;&quot;utf-8&quot;&lt;/code&gt;, containing the &lt;em&gt;label&lt;/em&gt; of the encoder. Each label is associated with a specific encoding type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ec79c8f69960e69e4c0daa0d4a07b9996e7a0b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, starting with &lt;code&gt;&quot;::&quot;&lt;/code&gt;, containing the name of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements&quot;&gt;pseudo-element&lt;/a&gt; the animation runs on. If the animation doesn't run on a pseudo-element but on the element itself, specify an empty string: &lt;code&gt;&quot;&quot;&lt;/code&gt;. It defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbd0801edab7a5822f007461eda4b05ea838761" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, starting with &lt;code&gt;&quot;::&quot;&lt;/code&gt;, containing the name of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements&quot;&gt;pseudo-element&lt;/a&gt; the animation runs on. If the animation doesn't run on a pseudo-element but on the element, an empty string: &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;code&gt;.&lt;/code&gt; It defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efef3520b496853e445c21afef9811957418d1b6" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; being the object to check against the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6840be46cb9471475b52d40a620def541e9e1b9" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; containing a decibel value representing the range above the threshold where the curve smoothly transitions to the compressed portion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e133f6f7b838feac7bdbc586daa7c6d3a531ca" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing detuning of playback in &lt;a href=&quot;http://en.wikipedia.org/wiki/Cent_%28music%29&quot;&gt;cents&lt;/a&gt;. This value is compounded with &lt;code&gt;playbackRate&lt;/code&gt; to determine the speed at which the sound is played. Its default value is &lt;code&gt;0&lt;/code&gt; (meaning no detuning), and its nominal range is -&amp;infin; to &amp;infin;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a31c75ed647c58b8e2ec0a378a13dc0433ad64" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the amount of change, in dB, needed in the input for a 1 dB change in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9d7ace284bb3478860db7b620cacfb53d6caee" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the amount of time, in seconds, required to increase the gain by 10 dB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba64d5d90c3a00b19cd300156b057e3a87f02edd" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the amount of time, in seconds, required to reduce the gain by 10 dB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114959468e13fe522968fc8ddd4a66ef2455d2cf" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the decibel value above which the compression will start taking effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ab256b3974baf2b4aaad928a7600ec6426e087" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains how the font &lt;em&gt;stretches&lt;/em&gt;. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-stretch&quot;&gt;&lt;code&gt;font-stretch&lt;/code&gt;&lt;/a&gt; descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d39b33366386df17a1798d323853179cf9b2c74" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains the &lt;em&gt;family&lt;/em&gt; of the font. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-family&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt; descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb74ee19d890ae6e92259768a284ac75988c8bca" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains the &lt;em&gt;features&lt;/em&gt; of the font. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-feature-settings&quot;&gt;&lt;code&gt;font-feature-settings&lt;/code&gt;&lt;/a&gt;descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7707c10034c4f3523024a22cb607edf7d90f552a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains the &lt;em&gt;range of code&lt;/em&gt; encompassed the font. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/unicode-range&quot;&gt;&lt;code&gt;unicode-range&lt;/code&gt;&lt;/a&gt; descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330f6642d97235e3cd740852322c1711af21d5d4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains the &lt;em&gt;style&lt;/em&gt; of the font. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-style&quot;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt; descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0709b2392ab8d3808581bf0d264e3089e56aaf" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains the &lt;em&gt;variant&lt;/em&gt; of the font. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-variant&quot;&gt;&lt;code&gt;font-variant&lt;/code&gt;&lt;/a&gt; descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f04c56aca2f48a166f01e0beb4ff338b18f26d1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that contains the &lt;em&gt;weight&lt;/em&gt; of the font. It is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-weight&quot;&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/a&gt; descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe48148a54de35349734e573e3c5dfc073cdbaf0" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssomstring&quot;&gt;&lt;code&gt;CSSOMString&lt;/code&gt;&lt;/a&gt; that determines how a font face is displayed based on whether and when it is downloaded and ready to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda1486a1e318a8fe5df55773bcf20a2822232ca" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt;, an object representing the declarations of an element's style attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960d7ef8bdde5624d080490fdf7ff09cf7cda806" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object containing the data affected by the user-initiated &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/cut&quot;&gt;cut&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/copy&quot;&gt;copy&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/paste&quot;&gt;paste&lt;/a&gt;&lt;/code&gt; operation, along with its MIME type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e4a90c4fbe0aa4ba6303f5af57e39f751c3c2d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; being a synonym for the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406ea03493c5081db7c3db06428032ad138043eb" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; being the height of the frame margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d325453187b486100fb51836439db8241de9f2" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; being the width of the frame margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7110d3ee7cebb66256105906ae73bc3e6f4166be" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'#'&lt;/code&gt; followed by the fragment identifier of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c77d726d7815ef30cc316f298d30a5d4404497b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'#'&lt;/code&gt; followed by the fragment identifier of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb86f6c6fc13eb2d5d3353100c7b1d8fbe008be" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'?'&lt;/code&gt; followed by the parameters of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d9cf3056eea683a1565cf5011c6f1ff3cb41d6" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'?'&lt;/code&gt; followed by the parameters of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2819ecbc2ed992b915917aec111d47046767b445" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'?'&lt;/code&gt; followed by the parameters or &quot;querystring&quot; of the URL. Modern browsers provide &lt;a href=&quot;urlsearchparams/get#Example&quot;&gt;URLSearchParams&lt;/a&gt; and &lt;a href=&quot;url/searchparams#Example&quot;&gt;URL.searchParams&lt;/a&gt; to make it easy to parse out the parameters from the querystring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2300fd3a6fc6fd63d102085b1c1d8f12e5743b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a description of the purpose or the structure of the table. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-summary&quot;&gt;summary&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f850e15f0e19bf4878a2bb558015d667cd27c3" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a human-readable error message describing the problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579a92753e9b2294c154fd3e61da2e9973f5d528" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a integer indicating how many characters must be left at the right (for left-to-right scripts; or at the left for right-to-left scripts) of the character defined by &lt;code&gt;HTMLTableRowElement.ch&lt;/code&gt;. This property was optional and was not very well supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7d26954e1e3b4b97c1bae953b507a871f8947a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a single character that switches input focus to the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617bff707fbdd90f0dd06ebf691b8cfd5edcef6b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing an enumerated value reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-align&quot;&gt;align&lt;/a&gt;&lt;/code&gt; attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, and &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8623825975d9f59afd132a06629cfe00767385" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing an enumerated value reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-align&quot;&gt;align&lt;/a&gt;&lt;/code&gt; attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, and &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2d00d63d1666e16bdd31df3ac82c4e8a14a29b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing an initial &lt;code&gt;'/'&lt;/code&gt; followed by the path of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149743cffafa75bccacd147fad04c140295f1a56" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing an initial &lt;code&gt;'/'&lt;/code&gt; followed by the path of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e5a0d7404841b561f6dcc09791b31d7b6a072d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing one single character. This character is the one to align all the cell of a column on. It reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-char&quot;&gt;char&lt;/a&gt;&lt;/code&gt; and default to the decimal points associated with the language, e.g. &lt;code&gt;'.'&lt;/code&gt; for English, or &lt;code&gt;','&lt;/code&gt; for French. This property was optional and was not very well supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3882067af8c0076be5ec4e290cd7cb0eb2de55bf" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing one single chararcter. This character is the one to align all the cell of a column on. It reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-char&quot;&gt;char&lt;/a&gt;&lt;/code&gt; and default to the decimal points associated with the language, e.g. &lt;code&gt;'.'&lt;/code&gt; for English, or &lt;code&gt;','&lt;/code&gt; for French. This property was optional and was not very well supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4233c10f283b7129d33b45f7e8bf1091d1fa48a1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area#attr-hreflang&quot;&gt;hreflang&lt;/a&gt;&lt;/code&gt; HTML attribute, indicating the language of the linked resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d3266070a6c2cbc0fc54993bde552b81efa528" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; HTML attribute, indicating target media of the linked resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12e12b1b5ccf031afc68cf1d91cb8222f3e8c28" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the background color of the cells. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-bgcolor&quot;&gt;bgcolor&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81466ebd95e2f550e9aedf508e5e03bdb824b030" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the background color of the cells. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-bgcolor&quot;&gt;bgcolor&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55139ddc53fd671b165ac0887e31a5052040240" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the domain (that is the &lt;em&gt;hostname&lt;/em&gt;) followed by (if a port was specified) a &lt;code&gt;':'&lt;/code&gt; and the &lt;em&gt;port&lt;/em&gt; of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e83474b5377beef398eba2592518e8fc8d6520" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the domain of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372b0beb51c517a6a3a3853bfbcbf4c31f8de36c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the domain of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512b4ffeb93e226b773cac94e0101b66d64c29d8" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the entire URL. If changed, the associated document navigates to the new page. It can be set from a different origin than the associated document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dc2317d45e501d1276a2c8003fa1af8090873b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the host, that is the &lt;em&gt;hostname&lt;/em&gt;, a &lt;code&gt;':'&lt;/code&gt;, and the &lt;em&gt;port&lt;/em&gt; of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93becee6eccc95d932d8dc3542ab67da00b5b488" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the host, that is the &lt;em&gt;hostname&lt;/em&gt;, a &lt;code&gt;':'&lt;/code&gt;, and the &lt;em&gt;port&lt;/em&gt; of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6655501ccd2ef712a275e7f4490fe39e6744fae0" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the length in pixels or in percentage of the desired width fo the entire table. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-width&quot;&gt;width&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c2f6773afaae98a70271fe9ddded65ab3ffddc" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name CSS property associated with the transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca89977c886a25865634b5948d2270ce62af6b1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the decoder, that is a string describing the method the &lt;code&gt;TextDecoder&lt;/code&gt; will use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dad8caa59c2fb534ef2c705760c5eab68deba9a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the encoder, that is a string describing the method the &lt;code&gt;TextEncoder&lt;/code&gt; will use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ea17a34ca71b3acd73acca1a7f52ca7a64d75f" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the script file in which the error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3e14887348a4f2897a492c1c3f883fe08ab8b4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the password specified before the domain name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d48c7e04834b3e1838fb7696a30935301d6a3a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the port number of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343413e0f63122f1a9a099aa58e78ae83894fbbf" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the port number of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30822cfc561c0fce5030068a80337b98e46c04c1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the protocol scheme of the URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;, including the final &lt;code&gt;':'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a667cee2f9f99398a0053404aa427e860e64c1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the protocol scheme of the URL, including the final &lt;code&gt;':'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884512635b36cf529423340751d21b25eb6da83d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the text that appears in a popup box when mouse is over the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b57812964d92e92536b7e682d7fddb940a81667" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the type of the &lt;code&gt;value&lt;/code&gt;. It reflects the &lt;code&gt;&lt;code&gt;valuetype&lt;/code&gt;&lt;/code&gt; attribute and has one of the values: &lt;code&gt;&quot;data&quot;&lt;/code&gt;, &lt;code&gt;&quot;ref&quot;&lt;/code&gt;, or &lt;code&gt;&quot;object&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2747ace2987b365acb82ebe590a244688b799133" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the type of the external borders of the table. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-frame&quot;&gt;frame&lt;/a&gt;&lt;/code&gt; attribute and can take one of the following values: &lt;code&gt;&quot;void&quot;&lt;/code&gt;, &lt;code&gt;&quot;above&quot;&lt;/code&gt;, &lt;code&gt;&quot;below&quot;&lt;/code&gt;, &lt;code&gt;&quot;hsides&quot;&lt;/code&gt;, &lt;code&gt;&quot;vsides&quot;&lt;/code&gt;, &lt;code&gt;&quot;lhs&quot;&lt;/code&gt;, &lt;code&gt;&quot;rhs&quot;&lt;/code&gt;, &lt;code&gt;&quot;box&quot;&lt;/code&gt;, or &lt;code&gt;&quot;border&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfbdb7514966cafc3bd582aad49a5843cde2ef9" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the type of the internal borders of the table. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-rules&quot;&gt;rules&lt;/a&gt;&lt;/code&gt; attribute and can take one of the following values: &lt;code&gt;&quot;none&quot;&lt;/code&gt;, &lt;code&gt;&quot;groups&quot;&lt;/code&gt;, &lt;code&gt;&quot;rows&quot;&lt;/code&gt;, &lt;code&gt;&quot;cols&quot;&lt;/code&gt;, or &lt;code&gt;&quot;all&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaf8477ed473741aa6a4010335d7e302c7793da" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the type of the parameter when &lt;code&gt;valueType&lt;/code&gt; has the &lt;code&gt;&quot;ref&quot;&lt;/code&gt; value. It reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param#attr-type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4056fa688ae88d8e111f1fa285bc3c472d13be4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the username specified before the domain name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecf37cdcac9092070d156075cb759990a5c22df" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt; CSS property associated with the transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996bc96fab5c812639bb83cd547445e649484abc" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the whole URL of the script executed in the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5906e5f8a356984d2972aaf0e899f2366fbee1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the whole URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e701d166896d2d5d4c4acdcf0d35383d9ac4824e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the width in pixels of the border of the table. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-border&quot;&gt;border&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748b1ac20da5cdcff0620bb9d173dc065bf81c5c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the width in pixels of the horizontal and vertical sapce between cell content and cell borders. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-cellpadding&quot;&gt;cellpadding&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14bfd062ee0b52ba64bf157e6e76d252e6046f3" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the width in pixels of the horizontal and vertical separation between cells. It reflects the obsolete &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#attr-cellspacing&quot;&gt;cellspacing&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7648165e328d77e22b8b3d3e484d4fdfefcb4587" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/domain_name&quot;&gt;domain name&lt;/a&gt; of the identity provider (idp) generating the error response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aceecf0e3b80319c6677dd6bb18f95350d40ad4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing the Idp protocol in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4e849a829ec1dbe1fe25d8ccdf557d00f46579" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; giving the URL where the user can complete the authentication. It can be &lt;code&gt;null&lt;/code&gt; and is provided by the identity provider (idp).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf329d243b2ff9dd4835e026be051a0d84be0d22" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1102c92fc0bc808569c00cf73c9dcfa4ecb4d5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes&quot;&gt;CORS setting&lt;/a&gt; for this media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a53cd1ec20250875047f5e775e3818cb86f1fe" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the alignment of the image with respect to the surrounding context. The possible values are &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, &lt;code&gt;&quot;justify&quot;&lt;/code&gt;, and &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92debc4b78bb2c7f4278f12c05bd33b8f1b2cb6b" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the behavior of the button. This is an enumerated attribute with the following possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad59110601412c56dc1c78b1a7c58b8466d2ee5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the flow of text around floating objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a8a90375cef582891453c46437f9fd18cc0ba3" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the single-character keyboard key to give access to the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a662e9011574dc91c6de5ed83bcffbf874923aef" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/additive-symbols&quot;&gt;&lt;code&gt;additive-symbols&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a83ca76c7ec730b1515a0c291a325f7fc7d925" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/fallback&quot;&gt;&lt;code&gt;fallback&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748958abc7ccff7c29be3893a79c6a271d0928d2" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/negative&quot;&gt;&lt;code&gt;negative&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8d3a9c252bfe3a59e26fa2bd9a04cdf32bc813" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/pad&quot;&gt;&lt;code&gt;pad&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8113a14f63015a05f705640f70e32fc93212d02a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f0d27fd85220ffc75304f538e1321c849c822c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea41723212e2a569f2379009f6f3eb47a751d7df" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/speak-as&quot;&gt;&lt;code&gt;speak-as&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf0b38e257d64b15d12b157586c37052ce18aae" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/suffix&quot;&gt;&lt;code&gt;suffix&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0500aa086e299d4badac1b2a747abeb489a0c2cd" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/symbols&quot;&gt;&lt;code&gt;symbols&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0f068dd59529836c028e5331636809dcbdc128" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/system&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; descriptor defined for the associated rule. If the descriptor was not specified in the associated rule, the attribute returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918f9c4f8c8e77678d66c3da0dc3fb8ba3c68014" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object that contains the serialization of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counter-style-name&quot;&gt;&lt;code&gt;&amp;lt;counter-style-name&amp;gt;&lt;/code&gt;&lt;/a&gt; defined for the associated rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a7a09e37a82febe7bf4a7af3f4d621cde5d9d8" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting a name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element that owns this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63930dd20d7af929e5c6cf18683d1d71272159fa" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote#attr-cite&quot;&gt;cite&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a URL for the source of the quotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b64cd067bac997d8410001e9d8450b928caa22" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a machine-readable form of the element's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bd83ccf9b3202d7a88d397608fb6fd764594bb" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del#attr-cite&quot;&gt;cite&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a URI of a resource explaining the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d64f61c279943c6f8d2088febbbcdf449eb52e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del#attr-datetime&quot;&gt;datetime&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a date-and-time string representing a timestamp for the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30777bba034a24c9c081359a1e4fbc40e476bb8d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; HTML attribute, containing the displayed height of the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24362891c0c6f74c856b60ec8f733adc0ccd2c45" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes&quot;&gt;sizes&lt;/a&gt;&lt;/code&gt; HTML attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b637e2a13209687337991ddd98d2872d25aca" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset&quot;&gt;srcset&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a list of candidate images, separated by a comma (&lt;code&gt;',', U+002C COMMA&lt;/code&gt;). A candidate image is a URL followed by a &lt;code&gt;'w'&lt;/code&gt; with the width of the images, or an &lt;code&gt;'x'&lt;/code&gt; followed by the pixel density.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a8915c6e695558ec9bb14c6f9022d56aa9127c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the HTTP method that the browser uses to submit the form. If specified, this attribute overrides the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-method&quot;&gt;method&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element that owns this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8285d5b710417efcaaa42d94bf21a1a372536cc7" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the URI of a resource that processes information submitted by the button. If specified, this attribute overrides the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-action&quot;&gt;action&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element that owns this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a587374401d8209bde1bf5d4e950e45e2773ae" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the type of content that is used to submit the form to the server. If specified, this attribute overrides the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype&quot;&gt;enctype&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element that owns this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8299b5713a0eacf95144ef9439790f29540a521" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a comma-separated list of coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1955e62de60272c19bdfbf9e1a6364ef5c80739d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb1a9884100b6743942591753d1b254983d9fc5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a list of one or more media formats to which the resource applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51ecdbdccff4c911b99e0466e012b9bc0dc4d4e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a single character that switches input focus to the hyperlink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec462c3e957f30ae3e6145a6f56262b88cc7dfc" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a text to be prompted for the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f30f6234a80caf23dd3e461ae2da982635c45d4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing an enumerated attribute indicating alignment of the heading with respect to the surrounding context. The possible values are &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, &lt;code&gt;&quot;justify&quot;&lt;/code&gt;, and &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ecd5692ff0aab525785cb06c524d6f0fb29bfd" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, &lt;code&gt;&quot;center&quot;&lt;/code&gt;, and &lt;code&gt;&quot;justify&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df0f377774577f5aa509cd44faeaef357214812" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, &lt;code&gt;&quot;justify&quot;&lt;/code&gt;, and &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c65ea0f2050af79d46f40c5ad4eb253fc64b499" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing an enumerated value indicating how the content of the cell must be vertically aligned. It reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-valign&quot;&gt;valign&lt;/a&gt;&lt;/code&gt; attribute and can have one of the following values: &lt;code&gt;&quot;top&quot;&lt;/code&gt;, &lt;code&gt;&quot;middle&quot;&lt;/code&gt;, &lt;code&gt;&quot;bottom&quot;&lt;/code&gt;, or &lt;code&gt;&quot;baseline&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4966c4f0a33a5f32ace084b581d208aa123d3691" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing that the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-rev&quot;&gt;rev&lt;/a&gt;&lt;/code&gt; HTML attribute, specifying the relationship of the link object to the target object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa848d0abc08eac9a393ecd2b81929f38f3c6d8" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map&quot;&gt;&lt;code&gt;&amp;lt;map&amp;gt;&lt;/code&gt;&lt;/a&gt; element for referencing it other context. If the &lt;code&gt;id&lt;/code&gt; attribute is set, this must have the same value; and it cannot be &lt;code&gt;null&lt;/code&gt; or empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395ab16bf27369f57c00c0ae18ffaf0e12f1d62e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the CORS setting for this image element. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes&quot;&gt;CORS settings attributes&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643d6b08774e4726e4005b998a3f443517528085" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the MIME type of the linked resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f733975d55fcc66195ec9be00faa735d8e1a96e1" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the URI for the target resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621a36a7bcee2fe4ae718296836e1fe7c6c645be" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the URI of a long description of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f221146e72cb3ee08d17fc2236a07ae64ed6de" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the URIs of one or more metadata profiles (white space separated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd0608a3494a5a60924ad37a60d75f23a3b95fb" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the access key assigned to the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a346c4af608904099de2e6201f1e6e1e33191757" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the anchor name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff57f942c1d4e2b5d468b21a8a59b2b12b17903" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the character encoding for the target resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214c4e80ee317c40b1f0659ca3fcd89e0059613f" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the character encoding of the linked resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285e4a4e231bf03e1f7f5f5808ca848393936ecf" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the class of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ec77ca1d91331b80b30ad1729552856a86285c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the current form control value of the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fecbcd20b2a0863de3404dd7dbea98884b154b8" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the font size as either a numeric or relative value. Numeric values range from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;7&lt;/code&gt; with &lt;code&gt;1&lt;/code&gt; being the smallest and &lt;code&gt;3&lt;/code&gt; the default. Relative value starts with a &lt;code&gt;'+'&lt;/code&gt; or a &lt;code&gt;'-&lt;/code&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d757797db35c5a547142ec975899edeb526be443" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the forward relationship of the linked resource from the document to the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ef65ce351ca28ea68077b8dec7d35e1b92f9c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the id of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12040e1087ecd142f491705cc332f82e6575d71e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the intended destination medium for style information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083281caef40ab342e3e3f688115cecd32e62bf4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the item ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581d81dc48fe40974cf40a541cba2d19e3089402" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the label for the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24677471492f1176f01491e971bf0ec9ffc173da" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the language code for the linked resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfaa0aee29598bc90e3e59124a184f2cfddd287" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the language of an element's attributes, text, and element contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074a5d9ced7d13193fb3b3c3b74d0c6465ea68ae" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (&lt;code&gt;willValidate&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;), or it satisfies its constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c607712ef6d041da3d90271a142b2903cd4523" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the markup of the element including its content. When used as a setter, replaces the element with nodes parsed from the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22a5f931bfdf2e3b8da1983cd70afbbdb2f6048" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the markup of the element's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42819e3d6d695b27018944da51299053dfe94700" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of an applet class file, containing either the applet's subclass, or the path to get to the class, including the class file itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84337b86d42d12075e1826524655528f4eeb8d91" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d7d1e8bf1e239d39712aeadd8794904c338a3c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the embedded object.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
