<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="72319e411b050a833e4e2fef804075be3e376f67" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because the user-agent couldn't identify an audio output device (for example, the user may need to connect a speaker or configure system settings.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7fa79dc0bebe50942a2f62c837a9b987a775a1" translate="yes" xml:space="preserve">
          <source>The operation exceeded the user's storage quota, or there isn't enough storage space left to complete the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fd5c70a9be72cd6163eff8ff5c7094303f2683" translate="yes" xml:space="preserve">
          <source>The operation failed because the file system's state doesn't permit it. This can happen, for example, if the file system's cached state differs from the actual state of the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4215e122c1599c4e1bd49c016b0ab263426f2b4" translate="yes" xml:space="preserve">
          <source>The operation failed because the synthesis engine raised an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7990b36d05bb2058df2f34eed94768f79744bf" translate="yes" xml:space="preserve">
          <source>The operation failed for an operation-specific reason (No legacy code value and constant name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0460c8d89ffcdb47e998b86b38565c6bc7da49d6" translate="yes" xml:space="preserve">
          <source>The operation failed for an unknown transient reason (e.g. out of memory) (No legacy code value and constant name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e70ced63244d86c2732cd5c7ef5d0f7bb13a45" translate="yes" xml:space="preserve">
          <source>The operation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8179843bede49cc35e8af373a9a96ce62382a4fe" translate="yes" xml:space="preserve">
          <source>The operation is insecure. (Legacy code value: &lt;code&gt;18&lt;/code&gt; and legacy constant name: &lt;code&gt;SECURITY_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c6afeafc421c91565ed72430de5d1ddd0d53e4" translate="yes" xml:space="preserve">
          <source>The operation is not allowed by Namespaces in XML. (Legacy code value: &lt;code&gt;14&lt;/code&gt; and legacy constant name: &lt;code&gt;NAMESPACE_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4674fe241883acd18246b3ff8a4cfe502e78ba9a" translate="yes" xml:space="preserve">
          <source>The operation is not supported. (Legacy code value: &lt;code&gt;9&lt;/code&gt; and legacy constant name: &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abc1c927caf62bf5612c72a9f7035498e232422" translate="yes" xml:space="preserve">
          <source>The operation timed out. (Legacy code value: &lt;code&gt;23&lt;/code&gt; and legacy constant name: &lt;code&gt;TIMEOUT_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd77f8325b3b8bb21472be5cd84785b9f71d492b" translate="yes" xml:space="preserve">
          <source>The operation was aborted. (Legacy code value: &lt;code&gt;20&lt;/code&gt; and legacy constant name: &lt;code&gt;ABORT_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea425794be437df93f4611cfa5725413bbeed8c" translate="yes" xml:space="preserve">
          <source>The opposite is also true; as elements no longer match the set of names, they are immediately removed from the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60908bd55ea145417d31b32778b7fc3ea6d39397" translate="yes" xml:space="preserve">
          <source>The opposite method: &lt;a href=&quot;../node/normalize&quot;&gt;&lt;code&gt;Node.normalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b306af294b644bd95f6adae0bfd63a81e28daf4" translate="yes" xml:space="preserve">
          <source>The opposite operation: &lt;a href=&quot;clearwatch&quot;&gt;&lt;code&gt;Geolocation.clearWatch()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1a28c9cb866819a30bff6192494c0dbb736b2f" translate="yes" xml:space="preserve">
          <source>The opposite transformation, that maps a key to an attribute name, uses the following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f279c0cbb4899ed63ca4a99959478b87c148cf9a" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;weight&lt;/code&gt; property of the &lt;a href=&quot;../speechgrammar&quot;&gt;&lt;code&gt;SpeechGrammar&lt;/code&gt;&lt;/a&gt; interface sets and returns the weight of the &lt;code&gt;SpeechGrammar&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499b863f029e98f4519d6c9fba5d1b887a451c0a" translate="yes" xml:space="preserve">
          <source>The optional password to use for authentication purposes; by default, this is the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de4b0df255b1d8f56a0469f0d03d010be140b32" translate="yes" xml:space="preserve">
          <source>The optional property &lt;code&gt;&lt;strong&gt;candidate&lt;/strong&gt;&lt;/code&gt; in the &lt;strong&gt;&lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary specifies the value of the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../rtcicecandidate/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60ee1c172872118bb493369bd6588e8a27a6d82" translate="yes" xml:space="preserve">
          <source>The optional property &lt;code&gt;sdpMLineIndex&lt;/code&gt; in the &lt;strong&gt;&lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary specifies the value of the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../rtcicecandidate/sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7174634b3b24aa8083d424c5158aa41fd42c1eb7" translate="yes" xml:space="preserve">
          <source>The optional property &lt;code&gt;sdpMid&lt;/code&gt; in the &lt;strong&gt;&lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary specifies the value of the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../rtcicecandidate/sdpmid&quot;&gt;&lt;code&gt;sdpMid&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c80562b89755ca152491ca6c53d3541d7d2ec8" translate="yes" xml:space="preserve">
          <source>The optional property &lt;code&gt;usernameFragment&lt;/code&gt; in the &lt;strong&gt;&lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary specifies the value of the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../rtcicecandidate/usernamefragment&quot;&gt;&lt;code&gt;usernameFragment&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db8b4f0104bd76ac7ec7c48901b070bc089bda2" translate="yes" xml:space="preserve">
          <source>The optional user name to use for authentication purposes; by default, this is the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22037cf4626ee0eb5cccd820a22bcf935d7e66f3" translate="yes" xml:space="preserve">
          <source>The options are configured such that nothing will actually be monitored (for example, if &lt;a href=&quot;../mutationobserverinit/childlist&quot;&gt;&lt;code&gt;MutationObserverInit.childList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mutationobserverinit/attributes&quot;&gt;&lt;code&gt;MutationObserverInit.attributes&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../mutationobserverinit/characterdata&quot;&gt;&lt;code&gt;MutationObserverInit.characterData&lt;/code&gt;&lt;/a&gt; are all false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29094d778fb9d54422c44d474839d3dcd11abdd7" translate="yes" xml:space="preserve">
          <source>The options for creating a credential via &lt;a href=&quot;credentialscontainer/create&quot;&gt;navigator.credentials.create() &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06df6f180968a2ea27e817c3f7bd1db59e0374c0" translate="yes" xml:space="preserve">
          <source>The options for using a credential via &lt;a href=&quot;credentialscontainer/get&quot;&gt;navigator.credentials.get() &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b28af4859e513eea595bf9456210c04d2bcbff" translate="yes" xml:space="preserve">
          <source>The options include ICE server and transport settings and identity information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b10ad5491dbb9c708d1b1c0e7b982f5298b1d77" translate="yes" xml:space="preserve">
          <source>The options parameter only supports &lt;code&gt;ignoreSearch&lt;/code&gt;, and &lt;code&gt;cacheName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65059aad69962001404921ce3391677bf8603608" translate="yes" xml:space="preserve">
          <source>The options that should be used when piping to the &lt;code&gt;writable&lt;/code&gt; stream. It will be used in a call like &lt;a href=&quot;pipeto&quot;&gt;&lt;code&gt;pipeTo&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(writable, options)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f272573b68c1ab57a1d330d74a6db468c18d21dc" translate="yes" xml:space="preserve">
          <source>The options which can be configured using the &lt;code&gt;RTCDataChannelInit&lt;/code&gt; dictionary represent the script-settable subset of the properties on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07d7e8de0b707b69c445ff25775fbb2ae10e11c" translate="yes" xml:space="preserve">
          <source>The order in this collection represents the order of the values in the CSS style property. If the index is greater than or equal to the number of values in the list, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4816bad264a695a716a0138156d3a5de306a8504" translate="yes" xml:space="preserve">
          <source>The order of the returned &lt;code&gt;RTCRtpSender&lt;/code&gt;s is not defined by the specification, and may change from one call to &lt;code&gt;getSenders()&lt;/code&gt; to the next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e72c1d4d5e20a50fb110a6c449756616790724" translate="yes" xml:space="preserve">
          <source>The order of the returned RTCReceiver instances is not defined by the specification, and may change from one call to &lt;code&gt;getSenders()&lt;/code&gt; to the next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60950a9dc5f8031aadce2e80616c863baa645be4" translate="yes" xml:space="preserve">
          <source>The order that matrices are multiplied in matters. When multiplying numbers a * b = c, and b * a = c are both true. For example 3 * 4 = 12, and 4 * 3 = 12. In math these numbers would be described as &lt;strong&gt;commutative&lt;/strong&gt;. Matrices are not guaranteed to be the same if the order is switched, so matrices are &lt;strong&gt;non-commutative&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891518607b6e419d130e6b9679066c2ee0d40220" translate="yes" xml:space="preserve">
          <source>The orientation and position value are set and retrieved using different syntaxes, since they're stored as &lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; values. Retrieval is done by accessing, for example, &lt;code&gt;PannerNode.positionX&lt;/code&gt;. While setting the same property is done with &lt;code&gt;PannerNode.positionX.value&lt;/code&gt;. This is why these values are not marked read only, which is how they appear in the WebIDL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff13b1bfee83554914ad68420f53e74b86630b42" translate="yes" xml:space="preserve">
          <source>The orientation into which to lock the screen. This is either a string or an array of strings. Passing several strings lets the screen rotate only in the selected orientations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7571380efa9f571eebca8289b0b043a05b952d7a" translate="yes" xml:space="preserve">
          <source>The orientation media query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c650d73c71bd66f8612f6db8597cb6e18f7361d" translate="yes" xml:space="preserve">
          <source>The orientation yaw (rotation around the y axis) is relative to the initial yaw of the sensor when it was first read or the yaw of the sensor at the point that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/resetPose&quot;&gt;&lt;code&gt;VRDisplay.resetPose()&lt;/code&gt;&lt;/a&gt; was last called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfe0a8092d54c6ac2e0dc62fbec4f1460981c01" translate="yes" xml:space="preserve">
          <source>The origin the message is to be sent to. &lt;code&gt;*&lt;/code&gt; means &quot;any origin&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8efc91a386144182510c7b25f9266cbfb5a3d4b" translate="yes" xml:space="preserve">
          <source>The original target of the event, before any retargetings (Mozilla-specific).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793f440af4e5a102d18b46406052a4126fc3a067" translate="yes" xml:space="preserve">
          <source>The original value of the &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; when the &lt;code&gt;key&lt;/code&gt; has been newly added and therefore doesn't have any previous value. &lt;strong&gt;Read only.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8024e23b312a003a74fa5b79dfb7be6cc936d374" translate="yes" xml:space="preserve">
          <source>The oscillator's frequency is set to the value specified in the &lt;code&gt;freq&lt;/code&gt; parameter by setting the value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Oscillator/frequency&quot;&gt;&lt;code&gt;Oscillator.frequency&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; object. Then, at last, the oscillator is started up so that it begins to produce sound by calling the oscillator's inherited &lt;a href=&quot;../audioscheduledsourcenode/start&quot;&gt;&lt;code&gt;AudioScheduledSourceNode.start()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed369bbf0f1c507483b56a9fef1df98bfb765856" translate="yes" xml:space="preserve">
          <source>The other &lt;code&gt;Node&lt;/code&gt; with which to compare document positioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee38ab366c13cd50b4db805bcd784bfca4adaebe" translate="yes" xml:space="preserve">
          <source>The other browsing context can listen for the message using &lt;a href=&quot;messageport/onmessage&quot;&gt;&lt;code&gt;MessagePort.onmessage&lt;/code&gt;&lt;/a&gt;, and grab the contents of the message using the event's &lt;code&gt;data&lt;/code&gt; attribute. You could then respond by sending a message back to the original document using &lt;a href=&quot;messageport/postmessage&quot;&gt;&lt;code&gt;MessagePort.postMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a4e1c5d0fc4e3c939c25871f79844c8eb432e6" translate="yes" xml:space="preserve">
          <source>The other coordinate properties: &lt;a href=&quot;x&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;y&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;z&quot;&gt;&lt;code&gt;z&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf0de2d5e64350ad8ed117b8b960da9f685efc4" translate="yes" xml:space="preserve">
          <source>The other coordinate properties: &lt;a href=&quot;x&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;y&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/a&gt;, and the perspective value, &lt;a href=&quot;w&quot;&gt;&lt;code&gt;w&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0c57579ea6c5505b9b53dd9a3044ffa4e9bb7f" translate="yes" xml:space="preserve">
          <source>The other coordinate properties: &lt;a href=&quot;x&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;z&quot;&gt;&lt;code&gt;z&lt;/code&gt;&lt;/a&gt;, and the perspective value, &lt;a href=&quot;w&quot;&gt;&lt;code&gt;w&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a741620f4afd604c759ea4e6abd1241c9e2243b" translate="yes" xml:space="preserve">
          <source>The other coordinate properties: &lt;a href=&quot;y&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;z&quot;&gt;&lt;code&gt;z&lt;/code&gt;&lt;/a&gt;, and the perspective value, &lt;a href=&quot;w&quot;&gt;&lt;code&gt;w&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b3d994f69a0fe29ec4648a230fe320e9e758ac" translate="yes" xml:space="preserve">
          <source>The other event handlers for &lt;code&gt;RTCIceTransport&lt;/code&gt;: &lt;a href=&quot;ongatheringstatechange&quot;&gt;&lt;code&gt;ongatheringstatechange&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;onselectedcandidatepairchange&quot;&gt;&lt;code&gt;onselectedcandidatepairchange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73781559c8311d85d8b1313b0eaa19c2a23b225a" translate="yes" xml:space="preserve">
          <source>The other event handlers for &lt;code&gt;RTCIceTransport&lt;/code&gt;: &lt;a href=&quot;onstatechange&quot;&gt;&lt;code&gt;onstatechange&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;onselectedcandidatepairchange&quot;&gt;&lt;code&gt;onselectedcandidatepairchange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f306e583232f3b3d8d31007c827bfd5d4ad2874c" translate="yes" xml:space="preserve">
          <source>The other event handlers for &lt;code&gt;RTCIceTransport&lt;/code&gt;: &lt;a href=&quot;onstatechange&quot;&gt;&lt;code&gt;onstatechange&lt;/code&gt;&lt;/a&gt; and&lt;a href=&quot;ongatheringstatechange&quot;&gt;&lt;code&gt;ongatheringstatechange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e7c54688fd2bd86aae1e1d88b33d60080a10ad" translate="yes" xml:space="preserve">
          <source>The other option is to use the static &lt;a href=&quot;dompointreadonly/frompoint&quot;&gt;&lt;code&gt;DOMPointReadOnly.fromPoint()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa7b45298a96bba70f78eac3343428d883b6812" translate="yes" xml:space="preserve">
          <source>The other property controlling the size of the canvas, &lt;a href=&quot;height&quot;&gt;&lt;code&gt;HTMLCanvasElement.height&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3d8ab8da6264a88319092eb8c71a2bdc101003" translate="yes" xml:space="preserve">
          <source>The other property controlling the size of the canvas, &lt;a href=&quot;width&quot;&gt;&lt;code&gt;HTMLCanvasElement.width&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a574b9532f064351190e38b48d7b49e8a7f332d1" translate="yes" xml:space="preserve">
          <source>The other thing you&amp;rsquo;ll notice is that it&amp;rsquo;s &lt;code&gt;iterations&lt;/code&gt;, not &lt;code&gt;iteration-count&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ab4432794ae0f463d9893fb70abf9e54a4186e" translate="yes" xml:space="preserve">
          <source>The other variables store references to different parts of the VR pose data display box, which you can see in the bottom right hand corner of the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9894d50a6ac857abd3ff730a9e44dd97c84b3e" translate="yes" xml:space="preserve">
          <source>The outer block performs a feature detection test to make sure service workers are supported before trying to register one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed032a4b7772129de4e5043073ef1fcea079e8fc" translate="yes" xml:space="preserve">
          <source>The output from the example above shows the time taken by the user to dismiss the first alert box, followed by the time it took for the user to dismiss the second alert:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c378834999fa57a545f15fd921e33fd7d537c5de" translate="yes" xml:space="preserve">
          <source>The output height of the image will be computed given the &lt;code&gt;width&lt;/code&gt; and the aspect ratio of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2281770b16dc32d04f8fdfdc5bb7186b64e6c0" translate="yes" xml:space="preserve">
          <source>The output in the console looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6cb7262fa8732ea5ef5a2f1cb3f9fe99480f2" translate="yes" xml:space="preserve">
          <source>The output information falls into four categories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931ac897fa8f6aaf44b01b73d678c842b993097c" translate="yes" xml:space="preserve">
          <source>The output looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a67f8dce48e751bff02756a2c2f0dce372f6f4e" translate="yes" xml:space="preserve">
          <source>The output looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb38bd24609828f4673e9fc306c4c7b6a071270" translate="yes" xml:space="preserve">
          <source>The output will be &lt;code&gt;/page2&lt;/code&gt; and not &lt;code&gt;/test&lt;/code&gt; in &lt;code&gt;index.html&lt;/code&gt;, since setting the &lt;code&gt;usefinalURL&lt;/code&gt; means that the response's URL is not set to request's URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45acd3cfc318d4e67da0a2ddd0346b60f23bbac8" translate="yes" xml:space="preserve">
          <source>The output would be something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db307fc455ff041b62b6c25fa2765582c922a50" translate="yes" xml:space="preserve">
          <source>The output, showing if your browser supports the &lt;code&gt;frameRate&lt;/code&gt; constraint, is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27fb2ed539aebc62e8868e9e63e6c08cdca61fb" translate="yes" xml:space="preserve">
          <source>The page content is being prerendered and is not visible to the user (considered hidden for purposes of &lt;code&gt;&lt;a href=&quot;hidden&quot;&gt;document.hidden&lt;/a&gt;&lt;/code&gt;). The document may start in this state, but will never transition to it from another value. Note: browser support is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96118559046b3d01b5ed307122898538cc43afd" translate="yes" xml:space="preserve">
          <source>The page content is not visible to the user. In practice this means that the document is either a background tab or part of a minimized window, or the OS screen lock is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648a22e2abc7446b439bb26a12ba02657cb3f6c0" translate="yes" xml:space="preserve">
          <source>The page content may be at least partially visible. In practice this means that the page is the foreground tab of a non-minimized window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f81d0ca5f408eb33b6350cbe615f15021efe586" translate="yes" xml:space="preserve">
          <source>The page is in the process of being unloaded from memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d91429ab5b9b1881e550b4fa962543568b78891" translate="yes" xml:space="preserve">
          <source>The page structure defined here is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, giving us full control over the page layout by enabling the use of CSS. We'll skip layout detail in this guide, but &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat/chat.css&quot;&gt;take a look at the CSS&lt;/a&gt; on Github to see how we handled it. Take note of the two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, one for your self-view, one for the connection, and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf870e417f8f6be8ce6fd87539e2552b48fa154" translate="yes" xml:space="preserve">
          <source>The page was accessed by clicking the Reload button or via the &lt;a href=&quot;../location/reload&quot;&gt;&lt;code&gt;Location.reload()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67598b957c8442734c1908f115efe2b4853c83c8" translate="yes" xml:space="preserve">
          <source>The page was accessed by clicking the Reload button or via the &lt;a href=&quot;location/reload&quot;&gt;&lt;code&gt;Location.reload()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abb83b732765450c62aaf2618b2e72cee49a392" translate="yes" xml:space="preserve">
          <source>The page was accessed by following a link, a bookmark, a form submission, a script, or typing the URL in the address bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6ceab40687825acc3b4dcfd0e734e7497f46e0" translate="yes" xml:space="preserve">
          <source>The page was accessed by following a link, a bookmark, a form submission, or a script, or by typing the URL in the address bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121dbf45ed2ecba893eb384b470f87d71230acd4" translate="yes" xml:space="preserve">
          <source>The page was accessed by navigating into the history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f546ffc16a9d10f07e5ed003aba609dd2b130fe" translate="yes" xml:space="preserve">
          <source>The page's content is being prerendered and is not visible to the user. A document may start in the &lt;code&gt;prerender&lt;/code&gt; state, but will never switch to this state from any other state, since a document can only prerender once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6353bc490a72d794932e99e1399cf6d82adff91" translate="yes" xml:space="preserve">
          <source>The page's content is not visible to the user, either due to the document's tab being in the background or part of a window that is minimized, or because the device's screen is off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa92f7b0d7471b38d06534c1b34f8c60ae7c9e36" translate="yes" xml:space="preserve">
          <source>The panner node is spatialized in relation to the AudioContext's &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; (defined by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/listener&quot;&gt;&lt;code&gt;AudioContext.listener&lt;/code&gt;&lt;/a&gt; attribute), which represents the position and orientation of the person listening to the audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f5355be912ba9e87603da2ed858442e61ed1b6" translate="yes" xml:space="preserve">
          <source>The panner's position is described with right-hand Cartesian coordinates; its movement using a velocity vector, necessary for creating Doppler effects, and its directionality using a directionality cone.The cone can be very large, e.g. for omnidirectional sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c990a0d77dceffdaa817ba179c569fcc975a2478" translate="yes" xml:space="preserve">
          <source>The parameter is now optional and default to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54eb708683ef2787af1feef0b24c1d28674b9ac" translate="yes" xml:space="preserve">
          <source>The parameter of &lt;code&gt;insertCell&lt;/code&gt; is now optional and default to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec84068ca9da2f6740e888d8bfb53e1812a160bd" translate="yes" xml:space="preserve">
          <source>The parameter of &lt;code&gt;insertCell&lt;/code&gt; is now optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82057e47917e693e9b2dbc33d542159083ca74bd" translate="yes" xml:space="preserve">
          <source>The parameter passed into the &lt;a href=&quot;serviceworkerglobalscope/onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; handler, &lt;code&gt;FetchEvent&lt;/code&gt; represents a fetch action that is dispatched on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;serviceworker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt;. It contains information about the request and resulting response, and provides the &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith()&lt;/code&gt;&lt;/a&gt; method, which allows us to provide an arbitrary response back to the controlled page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa453a49a4c0e7d861e01f3dcffc9ab8e856df4" translate="yes" xml:space="preserve">
          <source>The parameter passed into the &lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt;&lt;code&gt;oninstall&lt;/code&gt;&lt;/a&gt; handler, the &lt;code&gt;InstallEvent&lt;/code&gt; interface represents an install action that is dispatched on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;serviceworker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt;. As a child of &lt;a href=&quot;extendableevent&quot;&gt;&lt;code&gt;ExtendableEvent&lt;/code&gt;&lt;/a&gt;, it ensures that functional events such as &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; are not dispatched during installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c525f8a5587d425fa56e198b847c58a7183075" translate="yes" xml:space="preserve">
          <source>The parameter passed into the &lt;a href=&quot;serviceworkerglobalscope/onnotificationclick&quot;&gt;&lt;code&gt;onnotificationclick&lt;/code&gt;&lt;/a&gt; handler, the &lt;code&gt;NotificationEvent&lt;/code&gt; interface represents a notification click event that is dispatched on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;serviceworker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697ceec7934a5617d321d2d6e99188f5adf56c17" translate="yes" xml:space="preserve">
          <source>The parameter was not converted to its lowercase variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fb2cb8f325a107565ccd9dc1b11f23c40dbc8c" translate="yes" xml:space="preserve">
          <source>The parameters &lt;a href=&quot;mouseevent/movementx&quot;&gt;&lt;code&gt;movementX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/movementy&quot;&gt;&lt;code&gt;movementY&lt;/code&gt;&lt;/a&gt; are valid regardless of the mouse lock state, and are available even when unlocked for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698dcb6bce0d4a956ad7f52b32df3924963ca837" translate="yes" xml:space="preserve">
          <source>The parameters of this function are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cc8c3a519aefc166535c36711dff761695ef48" translate="yes" xml:space="preserve">
          <source>The parent &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; of the start and end of the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; will be the reference node. The &lt;code&gt;startOffset&lt;/code&gt; is 0, and the &lt;code&gt;endOffset&lt;/code&gt; is the number of child &lt;code&gt;Nodes&lt;/code&gt; or number of characters contained in the reference node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8222cffa870006363c79b6316b5a3d8c065c5e58" translate="yes" xml:space="preserve">
          <source>The parsing errors are also reported to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Error_Console&quot;&gt;Error Console&lt;/a&gt;, with the document URI (see below) as the source of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695554fd9f74570c23fabe698d2afafd576bad2b" translate="yes" xml:space="preserve">
          <source>The password and the &lt;code&gt;&lt;em&gt;iv&lt;/em&gt;&lt;/code&gt; will be required for the &lt;a href=&quot;decrypt&quot;&gt;&lt;code&gt;SubtleCrypto.decrypt()&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c0c865747522c0eb54c681bfa7458bb5eef34a" translate="yes" xml:space="preserve">
          <source>The patch version number of the device in a semantic versioning scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcd49b29aa48c904f1d7dbfbb16eb49f7576797" translate="yes" xml:space="preserve">
          <source>The path must be &lt;strong&gt;absolute&lt;/strong&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;). For more information on how to use relative paths, see &lt;a href=&quot;#Using_relative_URLs_in_the_path_parameter&quot;&gt;this paragraph&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce41f87a3bbd06af6f0d2ac3d5b0f7f4635e058" translate="yes" xml:space="preserve">
          <source>The path specified is not a directory; it's probably a file, but might be an unsupported file descriptor such as a pipe; this depends on the user agent to some extent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243823b4ab6d035d988aa1b630b67fc78e5bbd6b" translate="yes" xml:space="preserve">
          <source>The path specified is not a file; it's probably a directory, but might be an unsupported file descriptor such as a pipe; this depends on the user agent to some extent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b6fb177b31dc0b7bf733af1984c3af78ee220a" translate="yes" xml:space="preserve">
          <source>The path to your service worker file is not written correctly &amp;mdash; it needs to be written relative to the origin, not your app&amp;rsquo;s root directory. In our example, the worker is at &lt;code&gt;https://mdn.github.io/sw-test/sw.js&lt;/code&gt;, and the app&amp;rsquo;s root is &lt;code&gt;https://mdn.github.io/sw-test/&lt;/code&gt;. But the path needs to be written as &lt;code&gt;/sw-test/sw.js&lt;/code&gt;, not &lt;code&gt;/sw.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2a7cc525f6b179580e162429a99deeb8c8f8fd" translate="yes" xml:space="preserve">
          <source>The path will move to point (&lt;code&gt;M10 10&lt;/code&gt;) and then move horizontally 80 points to the right (&lt;code&gt;h 80&lt;/code&gt;), then 80 points down (&lt;code&gt;v 80&lt;/code&gt;), then 80 points to the left (&lt;code&gt;h -80&lt;/code&gt;), and then back to the start (&lt;code&gt;z&lt;/code&gt;). You can see this example on the &lt;a href=&quot;../../path2d/path2d#Using_SVG_paths&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt; constructor&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132bdb157a8a4ad9f31d7acba069d6bc760911fb" translate="yes" xml:space="preserve">
          <source>The payer details are comprised of the payer's name, phone number, and email address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc717cba09a46c6e611855fb5b8fef2e1cffb2b5" translate="yes" xml:space="preserve">
          <source>The payload is where the main information or content is located. In normal usage the payload contains the subtitles to be displayed. The payload text may contain newlines but it cannot contain a blank line, which is equivalent to two consecutive newlines. A blank line signifies the end of a cue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75ed5a9cfd9faebc383b5a2bf6f301d28155c89" translate="yes" xml:space="preserve">
          <source>The payment handler would include the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f42c2f61049bcd2e8a4f450596180a04f544995" translate="yes" xml:space="preserve">
          <source>The payment has already completed, or &lt;code&gt;complete()&lt;/code&gt; was called while a request to retry the payment is pending. You can't treat a payment as complete after requesting that the payment be tried again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779136ae1017bddc3f7d8a0329390996fffd1f52" translate="yes" xml:space="preserve">
          <source>The payment was not successfully processed. The failure may or may not be announced to the user by the user agent, depending on its design.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8d99f181c15592f8e9b995c9409da4d1a63a9a" translate="yes" xml:space="preserve">
          <source>The payment was successfully processed. The user agent may or may not present some form of &quot;payment successful&quot; indication to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4855b0746a0d08a2e8b024839db8840acfb4c2c4" translate="yes" xml:space="preserve">
          <source>The peer connection was just created and hasn't done any networking yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39641445be66b6b3be09ac3e12027f1e4e5a436" translate="yes" xml:space="preserve">
          <source>The performance tool's &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Flame_Chart&quot;&gt;flame chart&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Call_Tree&quot;&gt;call tree&lt;/a&gt;&lt;/em&gt; tabs provide data to help analyze the site's JavaScript usage. The call tree shows where the application is spending most of its time, whereas the flame chart shows the state of the JavaScript stack for the code at every millisecond during the performance profile. This provides a way to know exactly which function was executing at any point during the recording, how long it ran, and where it was called from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f24cf47d7cc171c113e6ac6b1723b1878924dee" translate="yes" xml:space="preserve">
          <source>The periodic wave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1285ae02619bd215717f000528e1f2fc934e76a2" translate="yes" xml:space="preserve">
          <source>The permitted values of this property are defined by the Web site or app using the data channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a24675e4df8b2f7894f18abe62c1525cededfb8" translate="yes" xml:space="preserve">
          <source>The person or organization making a purchase using a web site or app. The payer authenticates themselves, then authorizes payment, as required by the payment method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cb10c8c10f6d3dbc63d1a6acdc3967d4a4299b" translate="yes" xml:space="preserve">
          <source>The perspective matrix is a type of projection matrix that accomplishes all of these requirements. The math also starts to get a bit more involved and won't be fully explained in these examples. In short it combines dividing by w (as done with the previous examples) with some ingenious manipulations based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Similarity_%28geometry%29&quot;&gt;similar triangles&lt;/a&gt;. If you want to read a full explanation of the math behind it check out some of the following links:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a261d09d69d4c191663b1de48f37f4f14cefa39c" translate="yes" xml:space="preserve">
          <source>The perspective value of the &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8a37a6a4ca4bcd39abec09cad3aebbab2d563b" translate="yes" xml:space="preserve">
          <source>The perspective value of the new &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897a93a482a5d766f35731fcc1e66978016b3045" translate="yes" xml:space="preserve">
          <source>The pitch of the audio is corrected by default and is the same for every speed. Some browsers implement the non-standard &lt;code&gt;preservespitch&lt;/code&gt; property to control this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025c4bd3cb60738e57d7ab43eea311bd8e6c943d" translate="yes" xml:space="preserve">
          <source>The pixel coordinates on the sensor of one or more points of interest. This is either an object in the form { x:&lt;em&gt;value&lt;/em&gt;, y:&lt;em&gt;value&lt;/em&gt; } or an array of such objects, where &lt;em&gt;value &lt;/em&gt; is a double-precision integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd12faa67229dce7d8b1ca6b7e2889b56b2ed3a" translate="yes" xml:space="preserve">
          <source>The plane angle (in degrees, in the range of -90 to 90) between the X-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the X axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d7fdce3c24b7ba57dc6dbb29f655fd104f9929" translate="yes" xml:space="preserve">
          <source>The plane angle (in degrees, in the range of -90 to 90) between the Y-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the Y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc45638931298b74859eca0bf77db7da11e63b18" translate="yes" xml:space="preserve">
          <source>The player's playback rate is 0 or the animation's playback rate is greater than 0 and the end time of the animation is infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25adeeec0b7d07593919454e52e39e45c71f738" translate="yes" xml:space="preserve">
          <source>The plugin's version number string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd16c102c55210983158c054aacfbefc828ca445" translate="yes" xml:space="preserve">
          <source>The point of having the &lt;code&gt;window&lt;/code&gt; property refer to the object itself, was likely to make it easy to refer to the global object. Otherwise, you'd have to do a manual &lt;code&gt;var window = this;&lt;/code&gt; assignment at the top of your script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02a8afae30096df8eff8ccffb0a20a1671e41dc" translate="yes" xml:space="preserve">
          <source>The point's depth coordinate, &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988a0b1a8431d12493eefabab2efc04aba05f141" translate="yes" xml:space="preserve">
          <source>The point's horizontal coordinate, &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15410db728d91488a2e7f1667a1e961e86b2450e" translate="yes" xml:space="preserve">
          <source>The point's perspective value, &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0579750aeee688071a13be0b6d3ef60763a0eafb" translate="yes" xml:space="preserve">
          <source>The point's vertical coordinate, &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b952c226a74e1f1075d3aaadc64d11af8cd76ca" translate="yes" xml:space="preserve">
          <source>The point's w perspective value given as an unrestricted floating-point number. The default is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aec1b81f35b427711b3b9ac9394940bc823fa8" translate="yes" xml:space="preserve">
          <source>The pointer event model can simplify an application's input processing since a pointer represents input from any input device. Additionally, the pointer event types are very similar to mouse event types (for example, &lt;code&gt;pointerdown&lt;/code&gt;&lt;code&gt;pointerup&lt;/code&gt;) thus code to handle pointer events closely matches mouse handling code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b204a6bc0f3a0a033e4c44e442d80276aa717a0" translate="yes" xml:space="preserve">
          <source>The pointer event's unique identifier number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2079992725c5596ce32109fa7e69c9a9463ac894" translate="yes" xml:space="preserve">
          <source>The pointer lock methods are currently prefixed, so next we'll fork them for the different browser implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8348fd5ac40d64aea748372db8bcbc2ba88fc525" translate="yes" xml:space="preserve">
          <source>The pointerType read-only property of the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface indicates the device type that caused the pointer event. The supported values are the following strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91dcdab34a2439de2be8b3d9831748655c4ab7a" translate="yes" xml:space="preserve">
          <source>The polyfill is limited in functionality. It's currently unable to polyfill out-of-document-elements (e.g. elements created by &lt;code&gt;document.createElement&lt;/code&gt; before they are &lt;code&gt;appendChild&lt;/code&gt;'ed to a parent node) in IE6-7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8187e58736e59df42f81cfd81584c7dfe01c960" translate="yes" xml:space="preserve">
          <source>The polygon offset fill is disabled by default. To enable or disable polygon offset fill, use the &lt;a href=&quot;enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;disable&quot;&gt;&lt;code&gt;disable()&lt;/code&gt;&lt;/a&gt; methods with the argument &lt;code&gt;gl.POLYGON_OFFSET_FILL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c155805fce673526138b8815cc94f96e1f5ae1e" translate="yes" xml:space="preserve">
          <source>The popstate event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be0e40555ebcd7e8b3a340f6d9565eb577c1885" translate="yes" xml:space="preserve">
          <source>The port connection needs to be started either implicitly by use of the &lt;code&gt;onmessage&lt;/code&gt; event handler or explicitly with the &lt;code&gt;start()&lt;/code&gt; method before any messages can be posted. Calling &lt;code&gt;start()&lt;/code&gt; is only needed if the &lt;code&gt;message&lt;/code&gt; event is wired up via the &lt;code&gt;addEventListener()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bcbbb10a61298e816f0d3da09c3eb49856ce83" translate="yes" xml:space="preserve">
          <source>The port number is found in the sixth field, which is &lt;code&gt;&quot;44323&quot;&lt;/code&gt;. In this case, the value of &lt;code&gt;port&lt;/code&gt; will be 44323.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198f684ba5d1cfe8c0d50d4162279138987fc79f" translate="yes" xml:space="preserve">
          <source>The port to which the connection is being attempted is being blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bc807e66f0f4412e6334637e5335189df93072" translate="yes" xml:space="preserve">
          <source>The position and size feature elements require a number to be set. The toolbars and window functionalities can be set with a &lt;var&gt;yes&lt;/var&gt; or &lt;var&gt;no&lt;/var&gt;; you can use &lt;var&gt;1&lt;/var&gt; instead of &lt;var&gt;yes&lt;/var&gt; and &lt;var&gt;0&lt;/var&gt; instead of &lt;var&gt;no&lt;/var&gt;. The toolbar and functionality feature elements also accept the shorthand form: you can turn a feature on by simply listing the feature name in the &lt;var&gt;features&lt;/var&gt; string. If you supply the &lt;var&gt;features&lt;/var&gt; parameter, then the &lt;code&gt;titlebar&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; are still &lt;var&gt;yes&lt;/var&gt; by default, but the other features which have a &lt;var&gt;yes&lt;/var&gt;/&lt;var&gt;no&lt;/var&gt; choice will be &lt;var&gt;no&lt;/var&gt; by default and will be turned off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bd3a4a927554decce56e7a911e6b7a8ee47945" translate="yes" xml:space="preserve">
          <source>The position of the &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to be returned. Elements appear in an &lt;code&gt;HTMLCollection&lt;/code&gt; in the same order in which they appear in the document's source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044ef793d6e1447902f58b3ae5923487d7308246" translate="yes" xml:space="preserve">
          <source>The position of the option within the list of options it belongs to, in tree-order. If the option is not part of a list of options, like when it is part of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist&quot;&gt;&lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt;&lt;/a&gt; element, the value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac010c287ad9104202e67fc3a0feff844911766" translate="yes" xml:space="preserve">
          <source>The position of the vertical scrollbar in right&amp;ndash;to&amp;ndash;left text direction set on the element will depend on the &lt;a href=&quot;http://kb.mozillazine.org/Layout.scrollbar.side&quot;&gt;&lt;code&gt;layout.scrollbar.side&lt;/code&gt; preference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c43a4a30e6f21e0be8764b9fe1a02a86d84f4f8" translate="yes" xml:space="preserve">
          <source>The position variable was defined in the &lt;code&gt;draw()&lt;/code&gt; method and passed in as an attribute to the shader. This is a three dimensional point, but the &lt;code&gt;gl_Position&lt;/code&gt; variable that ends up getting passed down through the pipeline is actually 4 dimensional &amp;mdash; instead of &lt;code&gt;(x,y,z)&lt;/code&gt; it is &lt;code&gt;(x,y,z,w)&lt;/code&gt;. There is no letter after z, so for convention this fourth dimension is labeled w. In the above example the w coordinate is being set to 1.0. The obvious question is &quot;why the extra dimension?&quot; It turns out that this addition allows for lots of nice techniques for manipulating 3D data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e37eda0e00fcd94def930e39d0ffbe061650e8a" translate="yes" xml:space="preserve">
          <source>The position, forward, and up value are set and retrieved using different syntaxes. Retrieval is done by accessing, for example, &lt;code&gt;AudioListener.positionX&lt;/code&gt;, while setting the same property is done with &lt;code&gt;AudioListener.positionX.value&lt;/code&gt;. This is why these values are not marked read only, which is how they appear in the specification's IDL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babb6d02de2dbd16a125778561834955c8df8c0a" translate="yes" xml:space="preserve">
          <source>The possible &lt;code&gt;oversample&lt;/code&gt; values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd20dbfca5716045475b59209e7d9fe892533278" translate="yes" xml:space="preserve">
          <source>The possible inclusion of text nodes must be allowed for when traversing the DOM using &lt;code&gt;nextSibling&lt;/code&gt;. See the resources &lt;a href=&quot;#Notes&quot;&gt;in the Notes section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1fa4a8257e18304bbbf6488af0bb3bca53dc41" translate="yes" xml:space="preserve">
          <source>The possible values are &lt;code&gt;&quot;speakers&quot;&lt;/code&gt; or &lt;code&gt;&quot;discrete&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa955a1a3eb756f56d0766badbe2773b839a70" translate="yes" xml:space="preserve">
          <source>The possible values are &lt;code&gt;&quot;speakers&quot;&lt;/code&gt; or &lt;code&gt;&quot;discrete&quot;&lt;/code&gt;. (See &lt;a href=&quot;audionode/channelcountmode&quot;&gt;&lt;code&gt;AudioNode.channelCountMode&lt;/code&gt;&lt;/a&gt; for more information including default values.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124e3a5ed366616d77cabf0c8a0ffe46478800f6" translate="yes" xml:space="preserve">
          <source>The possible values are a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; with on of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2f0d952596297588279752df76683922bc45b3" translate="yes" xml:space="preserve">
          <source>The possible values are defined by an enum of type RTCSdpType.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9e7a48b4e6de40fca853d75057c28cd78eb921" translate="yes" xml:space="preserve">
          <source>The possible values are those of an enum of type &lt;code&gt;RTCIceGatheringState&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db1cb2f96f8e457c216a520b4f81146af2fe62f" translate="yes" xml:space="preserve">
          <source>The possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22ef86cd09aa7079d33c0e3fa42d54faeac7ad2" translate="yes" xml:space="preserve">
          <source>The possible values correspond to the uniform names returned by &lt;a href=&quot;getactiveuniform&quot;&gt;&lt;code&gt;getActiveUniform&lt;/code&gt;&lt;/a&gt;; see that function for specifics on how declared uniforms map to uniform location names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1fa960cd9087f77745afdff398aa8b03f03618" translate="yes" xml:space="preserve">
          <source>The possible values of &lt;code&gt;channelCountMode&lt;/code&gt; and their meanings are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda41ea9b8730091a534f9a73b8e94156abfed63" translate="yes" xml:space="preserve">
          <source>The pound/hash sign (&quot;#&quot;) and the asterisk (&quot;*&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57dbe9563dda97e52eb6d644a36525ee634131d" translate="yes" xml:space="preserve">
          <source>The preferred maximum latency for the &lt;code&gt;AudioContext&lt;/code&gt;. There are two ways this value can be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f46db0c32e201d8b2afc64ed2d0151fa8243d49" translate="yes" xml:space="preserve">
          <source>The prefs that control this behaviour are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0609482c298278c770d717cee3c6025779506fd4" translate="yes" xml:space="preserve">
          <source>The premise of service workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7594d811a270d219c6d4cb90272de22db76001" translate="yes" xml:space="preserve">
          <source>The presence of whitespace in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM&quot;&gt;DOM&lt;/a&gt; can make manipulation of the content tree difficult in unforeseen ways. In Mozilla, all whitespace in the text content of the original document is represented in the DOM (this does not include whitespace within tags). (This is needed internally so that the editor can preserve formatting of documents and so that &lt;code&gt;white-space: pre&lt;/code&gt; in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS&quot;&gt;CSS&lt;/a&gt; will work.) This means that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75126d25c0098e4b05d3d1ddfae05a6a76e148da" translate="yes" xml:space="preserve">
          <source>The presenting state of a &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; can be checked using the &lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt;&lt;code&gt;VRDisplay.isPresenting&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30662affaa03b931b7812a4a14823dbdf9cc9e1" translate="yes" xml:space="preserve">
          <source>The preset values can be set by &lt;a href=&quot;clearcolor&quot;&gt;&lt;code&gt;clearColor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cleardepth&quot;&gt;&lt;code&gt;clearDepth()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;clearstencil&quot;&gt;&lt;code&gt;clearStencil()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad92c8ccdbcd87ecdc00d8016026b4c31ce6397" translate="yes" xml:space="preserve">
          <source>The previous URL from which the window was navigated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086613de45c37328de7347cbffd1622333619a75" translate="yes" xml:space="preserve">
          <source>The previous attempt &amp;mdash; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache&quot;&gt;AppCache&lt;/a&gt; &amp;mdash; seemed to be a good idea because it allowed you to specify assets to cache really easily. However, it made many assumptions about what you were trying to do and then broke horribly when your app didn&amp;rsquo;t follow those assumptions exactly. Read Jake Archibald's &lt;a href=&quot;http://alistapart.com/article/application-cache-is-a-douchebag&quot;&gt;Application Cache is a Douchebag&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb44fc68f697d5b75aa030127877d859a13e76a4" translate="yes" xml:space="preserve">
          <source>The primary audio track with audio descriptions mixed into it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09d6f3da9b5035d2c61662b05feefff13dd19a8" translate="yes" xml:space="preserve">
          <source>The primary audio track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fcc44b77abb19ca1b432d104f17bfe4494d206" translate="yes" xml:space="preserve">
          <source>The primary feature here is that the grid position is set to place the body content in column 2, row 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912c7f2ff4eafa6f3324a50f035e0b41bbe8c1e1" translate="yes" xml:space="preserve">
          <source>The primary interface for connecting to a WebSocket server and then sending and receiving data on the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f34afeb93e46020910b390c819f4db434f0fa5" translate="yes" xml:space="preserve">
          <source>The primary interface for the Intersection Observer API. Provides methods for creating and managing an observer which can watch any number of target elements for the same intersection configuration. Each observer can asynchronously observe changes in the intersection between one or more target elements and a shared ancestor element or with their top-level &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt;. The ancestor or viewport is referred to as the &lt;strong&gt;root&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935b27a3f538d041f25e9e4201bbcb105213073a" translate="yes" xml:space="preserve">
          <source>The primary interface is the &lt;a href=&quot;pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface which has a &lt;a href=&quot;pointerevent/pointerevent&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt; plus several event types and associated global event handlers. The standard also includes some extensions to the &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interfaces. The following sub-sections contain short descriptions of each interface and property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ff85bbaca861e2aa78e390536582a6d5b4acd6" translate="yes" xml:space="preserve">
          <source>The primary interface that implements the MediaStream Recording API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691ead714f5ed58f041c3c02f5770af8af25c9b7" translate="yes" xml:space="preserve">
          <source>The primary key of the record you want to update (e.g. from &lt;a href=&quot;../idbcursor/primarykey&quot;&gt;&lt;code&gt;IDBCursor.primaryKey&lt;/code&gt;&lt;/a&gt;). This is only needed for object stores that have an &lt;code&gt;autoIncrement&lt;/code&gt; primary key, therefore the key is not in a field on the record object. In such cases, calling &lt;code&gt;put(item)&lt;/code&gt; will always insert a new record, because it doesn't know what existing record you might want to modify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674109fe43cd0748ff8c8bd36f3d3657340fc23b" translate="yes" xml:space="preserve">
          <source>The primary key to position the cursor at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99785dee37c508d26414eec2bb605e7e9febe78b" translate="yes" xml:space="preserve">
          <source>The primary purpose for WebRTC's DTMF support is to allow WebRTC-based communication clients to be connected to a &lt;a href=&quot;https://en.wikipedia.org/wiki/public-switched%20telephone%20network&quot;&gt;public-switched telephone network&lt;/a&gt; (PSTN) or other legacy telephone service, including extant voice over IP (VoIP) services. For that reason, DTMF can't be used between two WebRTC-based devices, because there is no mechanism provided by WebRTC for receiving DTMF codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e23c60e486166edaee46fbaa3adc61e9d5dd422" translate="yes" xml:space="preserve">
          <source>The primary reason for this interface to exist was to add a &lt;code&gt;stop()&lt;/code&gt; method to its &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; parent interface. However, control over playback of media has been moved to the individual &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; objects, so this is no longer necessary. Instead, media is stopped by calling &lt;a href=&quot;mediastreamtrack/stop&quot;&gt;&lt;code&gt;MediaStreamTrack.stop()&lt;/code&gt;&lt;/a&gt; on each track that needs to be stopped. The example for &lt;code&gt;MediaStreamTrack.stop()&lt;/code&gt; demonstrates how to stop a multi-track stream, which is what &lt;code&gt;LocalMediaStream.stop()&lt;/code&gt; used to be used for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811fe59d666c01f92b84cecaa02ac2309c58bb86" translate="yes" xml:space="preserve">
          <source>The primary technology used to make you feel present in a 360&amp;ordm; scene, thanks to the gyroscope, accelerometer, and magnetometer (compass) included in the HMD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5593573cc090ba8f2a9511c6577b54c7a5ca95d8" translate="yes" xml:space="preserve">
          <source>The primary use of this type is the definition of the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element's &lt;a href=&quot;htmlcanvaselement/getcontext&quot;&gt;&lt;code&gt;HTMLCanvasElement.getContext()&lt;/code&gt;&lt;/a&gt; method, which returns a &lt;code&gt;RenderingContext&lt;/code&gt; (meaning it returns any one of the rendering context types).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdb043c530a42c6b624a389f57242eab41d9d93" translate="yes" xml:space="preserve">
          <source>The primary video track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6800bd7700470c73dfac4301625b8e4af41b1a" translate="yes" xml:space="preserve">
          <source>The prioritization of the properties is simple: if two properties' requested values are mutually exclusive, then the one listed first in the constraint set will be used. As an example, if the browser running the code above couldn't provide a 1920x1080 track but could do 1920x900, then that's what would be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4bae641d0a96279c40a558cb0e6a54d59a8b0a" translate="yes" xml:space="preserve">
          <source>The priority is the number after the protocol, so it's the fourth field in the candidate string. In this example, the priority is 2043278322.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9400005c3bca2486ac5d4f71c851ac612c4135" translate="yes" xml:space="preserve">
          <source>The problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3326858879ab48db81fa04350eee1070495d3a2" translate="yes" xml:space="preserve">
          <source>The problem for users is that each individual computer on the Internet no longer necessarily has a unique IP address, and, in fact, each device&amp;rsquo;s IP address may change not only if they move from one network to another, but if their network&amp;rsquo;s address is changed by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt; and/or &lt;a href=&quot;https://en.wikipedia.org/wiki/DHCP&quot;&gt;DHCP&lt;/a&gt;. For developers trying to do peer-to-peer networking, this introduces a conundrum: without a unique identifier for every user device, it&amp;rsquo;s not possible to instantly and automatically know how to connect to a specific device on the Internet. Even though you know who you want to talk to, you don&amp;rsquo;t necessarily know how to reach them or even what their address is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb58d773999a39c033ab186136e7b3782eea6470" translate="yes" xml:space="preserve">
          <source>The problem with this method is that only one handler can be set per element and per event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb8aa60671167dbe57d9300e67515af7edbd834" translate="yes" xml:space="preserve">
          <source>The process of aborting any ongoing activities will cause any outstanding &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;s returned by &lt;a href=&quot;play&quot;&gt;&lt;code&gt;play()&lt;/code&gt;&lt;/a&gt; being resolved or rejected as appropriate based on their status before the loading of new media can begin. Pending play promises are aborted with an &lt;code&gt;&quot;AbortError&quot;&lt;/code&gt;&lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b425c14be1d771c7130498e7a20ed56b58abfff" translate="yes" xml:space="preserve">
          <source>The process of changing descriptions actually involves intermediary steps handled by the WebRTC layer to ensure that an active connection can be changed without losing the connection if the change does not succeed. See &lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt; for more details on this process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c840706c0665cdaae4669a837d35d6fecc06426c" translate="yes" xml:space="preserve">
          <source>The process of closing the underlying data transport has begun. It is no longer possible to queue new messages to be sent, but previously queued messages may still be send or received before entering the &lt;code&gt;&quot;closed&quot;&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97878ba152c00a4a2d3697c8536839e4bd8e55d9" translate="yes" xml:space="preserve">
          <source>The process of negotiating a connection between two peers involves exchanging &lt;code&gt;RTCSessionDescription&lt;/code&gt; objects back and forth, with each description suggesting one combination of connection configuration options that the sender of the description supports. Once the two peers agree upon a configuration for the connection, negotiation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe87a3e09c221b5545cba0dc6db15324e9e8c118" translate="yes" xml:space="preserve">
          <source>The process of recording a stream is simple:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749d5585ad50b12fd5a13e7f4222805ce35af4c9" translate="yes" xml:space="preserve">
          <source>The process of retrieving an image or video stream happens as described below. The example code is adapted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/&quot;&gt;Chrome's Image Capture examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5398d4ad39ec0fd326bdc6bc4cc4921381462eb" translate="yes" xml:space="preserve">
          <source>The process the browser uses to determine a target element for a pointer event. Typically, this is determined by considering the pointer's location and also the visual layout of elements in a document on screen media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fb54c91b9b1c28b9fca9582f2d39222b7ba29f" translate="yes" xml:space="preserve">
          <source>The process works like this (using &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; as an example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6b27d703a7d22ba815197b0f42c55c9d3ffa9b" translate="yes" xml:space="preserve">
          <source>The profileEnd method stops recording a profile previously started with &lt;a href=&quot;profile&quot;&gt;&lt;code&gt;Console.profile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44d912bd21d32ccd784a144c54ecabbd94f7bb8" translate="yes" xml:space="preserve">
          <source>The program relies on a number of utility functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bbbe18b76984aa4ad7a937a935c8c9388879c9" translate="yes" xml:space="preserve">
          <source>The progress box uses a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress&quot;&gt;&lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt;&lt;/a&gt; element to show the progress, along with a label with sections that are changed to present numeric information about the progress. In addition, there's a &quot;Start&quot; button (creatively given the ID &quot;startButton&quot;), which the user will use to start the data processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fac964d18e8e7e81243107b0371722f0ae74e3f" translate="yes" xml:space="preserve">
          <source>The progress event handler, specified by the &lt;code&gt;updateProgress()&lt;/code&gt; function in this example, receives the total number of bytes to transfer as well as the number of bytes transferred so far in the event's &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;loaded&lt;/code&gt; fields. However, if the &lt;code&gt;lengthComputable&lt;/code&gt; field is false, the total length is not known and will be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f258858fff2a9fd90367d97d209aecdb2a6a15" translate="yes" xml:space="preserve">
          <source>The promise handler receives as its input parameter an array of the incoming connections. We iterate over these using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt;, appending a new item to the &lt;code&gt;connectionView&lt;/code&gt; list element for each connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ceef634c9315e605fe448460295953a0bf9b7c0" translate="yes" xml:space="preserve">
          <source>The promise is also rejected with &lt;code&gt;AbortError&lt;/code&gt; if the user cancels the payment request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f4f3acf4d4c24e466c507b90b23e3027eb24b8" translate="yes" xml:space="preserve">
          <source>The promise is rejected when any exception is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8993fbb7a713f5d272403b149f8f08edc7d775b" translate="yes" xml:space="preserve">
          <source>The promise is rejected when one of the following exceptions are encountered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65c916eaa4ff472069a693577b954d9dd23f29b" translate="yes" xml:space="preserve">
          <source>The promise is rejected when one of the following exceptions is encountered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50316d75cfcc30a67f78742e5f889daa5168aa6" translate="yes" xml:space="preserve">
          <source>The promise is rejected when the following exception is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43b45afbc45a01a70b0d04365bf04dfe66a67f3" translate="yes" xml:space="preserve">
          <source>The promise is rejected when the following exception is encountered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e16f0a68b16bb03bf7155f5764359e5e132e629" translate="yes" xml:space="preserve">
          <source>The promise is rejected when the following exceptions are encountered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3828292d88aed64ef8a365bc14c4feaaf2559544" translate="yes" xml:space="preserve">
          <source>The promise rejects with a &lt;code&gt;NotSupportedError&lt;/code&gt; if the user agent does not support the payment methods specified when the &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; constructor was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e174b99d544d8e6dc446ca148089b708be53b5ad" translate="yes" xml:space="preserve">
          <source>The promise rejects with a &lt;code&gt;SecurityError&lt;/code&gt; if the call to &lt;code&gt;show()&lt;/code&gt; was not in response to a user action, such as a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keyup&quot;&gt;keyup&lt;/a&gt;&lt;/code&gt; event. Other reasons a &lt;code&gt;SecurityError&lt;/code&gt; may be thrown are at the discretion of the user agent, and may include situations such as too many calls to &lt;code&gt;show()&lt;/code&gt; being made in a short time or &lt;code&gt;show()&lt;/code&gt; being called while payment requests are blocked by parental controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae3aa738ede6d2d62671ae694bfd58b776590d9" translate="yes" xml:space="preserve">
          <source>The promise rejects with an &lt;code&gt;InvalidStateError&lt;/code&gt; if the same payment has already been shown for this request (its state is &lt;code&gt;interactive&lt;/code&gt; because it is being shown already).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ce2b9567e28fe6f9088b0c023a8f988741f83b" translate="yes" xml:space="preserve">
          <source>The promise's &lt;strong&gt;rejection handler&lt;/strong&gt; is called with an exception name passed in as its sole input parameter (as opposed to a traditional exception being thrown). Possible errors include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3059c92c1aab101e2d8aed05a1efcb3e68094aa6" translate="yes" xml:space="preserve">
          <source>The promise's resolve handler does nothing, but if the promise is rejected, an error message is displayed by calling &lt;a href=&quot;../window/alert&quot;&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f85b836772df5229d64ca69fa907e18bb8d3b3" translate="yes" xml:space="preserve">
          <source>The properties &lt;code&gt;document.charset&lt;/code&gt; and &lt;code&gt;document.inputEncoding&lt;/code&gt; are legacy aliases for &lt;code&gt;document.characterSet&lt;/code&gt;. Do not use them any more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c546455a6d04e3f9595e951de7ca654923261bdd" translate="yes" xml:space="preserve">
          <source>The properties &lt;code&gt;shadowOffsetX&lt;/code&gt; and &lt;code&gt;shadowOffsetY&lt;/code&gt; indicate how far the shadow should extend from the object in the X and Y directions; these values aren't affected by the current transformation matrix. Use negative values to cause the shadow to extend up or to the left, and positive values to cause the shadow to extend down or to the right. These are both 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63c046701449f926f4bbedc26f257b7215f5568" translate="yes" xml:space="preserve">
          <source>The properties of event objects differs greatly between browsers, the &lt;a href=&quot;https://dom.spec.whatwg.org&quot;&gt;WHATWG DOM Standard&lt;/a&gt; lists the standard properties, however many browsers have extended these greatly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2af13a2887cf482cf4d8d4ed5dc80c9af85da8" translate="yes" xml:space="preserve">
          <source>The properties of the dispatched message are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7e5b2079af33581d76f31f0d6a407b29bc5434" translate="yes" xml:space="preserve">
          <source>The properties which are returned as 0 by default when loading a resource form a domain other than the one of the web page itself: &lt;code&gt;redirectStart&lt;/code&gt;, &lt;code&gt;redirectEnd&lt;/code&gt;, &lt;code&gt;domainLookupStart&lt;/code&gt;, &lt;code&gt;domainLookupEnd&lt;/code&gt;, &lt;code&gt;connectStart&lt;/code&gt;, &lt;code&gt;connectEnd&lt;/code&gt;, &lt;code&gt;secureConnectionStart&lt;/code&gt;, &lt;code&gt;requestStart&lt;/code&gt;, and &lt;code&gt;responseStart&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b20bdb2317d286023f65a57aef8c85c220dddd6" translate="yes" xml:space="preserve">
          <source>The properties which are returned as 0 by default when loading a resource from a domain other than the one of the web page itself: &lt;code&gt;redirectStart&lt;/code&gt;, &lt;code&gt;redirectEnd&lt;/code&gt;, &lt;code&gt;domainLookupStart&lt;/code&gt;, &lt;code&gt;domainLookupEnd&lt;/code&gt;, &lt;code&gt;connectStart&lt;/code&gt;, &lt;code&gt;connectEnd&lt;/code&gt;, &lt;code&gt;secureConnectionStart&lt;/code&gt;, &lt;code&gt;requestStart&lt;/code&gt;, and &lt;code&gt;responseStart&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ee6f4279d57a3edb8305f7b4129b3af08bf429" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;&lt;strong&gt;binaryType&lt;/strong&gt;&lt;/code&gt; on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which specifies the type of JavaScript object which should be used to represent binary data received on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;. Values allowed by the &lt;a href=&quot;../websocket/binarytype&quot;&gt;&lt;code&gt;WebSocket.binaryType&lt;/code&gt;&lt;/a&gt; property are also permitted here: &lt;code&gt;&quot;blob&quot;&lt;/code&gt; if &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects are being used or &lt;code&gt;&quot;arraybuffer&quot;&lt;/code&gt; if &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects are being used. The default is &lt;code&gt;&quot;blob&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e05d7db5ba1f546b95e38ee5a68cbc2707bf547" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;&lt;strong&gt;binaryType&lt;/strong&gt;&lt;/code&gt; on the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which specifies the type of JavaScript object which should be used to represent binary data received on the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;. Values allowed by the &lt;a href=&quot;websocket/binarytype&quot;&gt;&lt;code&gt;WebSocket.binaryType&lt;/code&gt;&lt;/a&gt; property are also permitted here: &lt;code&gt;&quot;blob&quot;&lt;/code&gt; if &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects are being used or &lt;code&gt;&quot;arraybuffer&quot;&lt;/code&gt; if &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects are being used. The default is &lt;code&gt;&quot;blob&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6881d9bf49aba14ae62873535bc92939a7030057" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;RTCSessionDescription.sdp&lt;/code&gt; is a read-only &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; which describes the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfa528ffa2072d3f86af8c3277c898ab06a3bb6" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;RTCSessionDescription.type&lt;/code&gt; is a read-only value of type &lt;code&gt;RTCSdpType&lt;/code&gt; which describes the description's type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79749b8319351f278305cf7b5353759d8e04d2f1" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;accessKey&lt;/code&gt; is now defined on &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41170e93014991b3590233c609d7e9aef5d4fc53" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;defaultValue&lt;/code&gt; doesn't contain the initial value of the &lt;code&gt;value&lt;/code&gt; attribute, but the initial value of the content of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cc390349d6c3b954ce55315eca609c1155b200" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;onbeforeprint&lt;/code&gt; sets and returns the &lt;code&gt;onbeforeprint&lt;/code&gt; event handler code for the current window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f591727bf76f417017bcfc37666c864b7d4e981" translate="yes" xml:space="preserve">
          <source>The property for which to check for the existence of a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebf1fc55568a0d9907ae691f7ffc4cc6c18b0a" translate="yes" xml:space="preserve">
          <source>The property for which to retrieve the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3ede19b97836b9cffc911bc6194e23b6c61d9d" translate="yes" xml:space="preserve">
          <source>The property has been given a value outside the accepted range (0&amp;ndash;1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312b6b07521a44f996bc047e8297a724abeb1f60" translate="yes" xml:space="preserve">
          <source>The property has been given a value that is outside the accepted range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6693b09ff36e58618cd1e56c2ecb1b3fa28e462c" translate="yes" xml:space="preserve">
          <source>The property is now read only &amp;mdash; it is possible to set the value to programmatically show or hide the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e93e77a3dce2b40b05b1c293407bad64f52995" translate="yes" xml:space="preserve">
          <source>The property itself is read-only, meaning you can substitute the &lt;a href=&quot;../domtokenlist&quot;&gt;&lt;code&gt;DOMTokenList&lt;/code&gt;&lt;/a&gt; by another one, but the content of the returned list can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2103c0b03bbb4929a2506f8ceb44605ce18b5012" translate="yes" xml:space="preserve">
          <source>The property itself is read-only, meaning you can't substitute the &lt;a href=&quot;../domtokenlist&quot;&gt;&lt;code&gt;DOMTokenList&lt;/code&gt;&lt;/a&gt; with another one, but its contents can still be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7de2f1d43082e5cbfa6f0d3cb01cfc4c6e8d7dd" translate="yes" xml:space="preserve">
          <source>The property returns &lt;code&gt;null&lt;/code&gt; if there is no DTD associated with the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d4bda14f5e178360e4ec2e04e6d37e3724d3c9" translate="yes" xml:space="preserve">
          <source>The property to remove from the data set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cf0bff5d91c7d3472d2e57f4bc9961552b4a9f" translate="yes" xml:space="preserve">
          <source>The property to remove from the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d0cd3489eca8bee85e90838301585e0664560b" translate="yes" xml:space="preserve">
          <source>The property whose value is to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db1816ca964ddbad0816abfe4e8ce0fd7399ed1" translate="yes" xml:space="preserve">
          <source>The property's new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b1be2a15ab66d3326b976ab83fe23154b5f611" translate="yes" xml:space="preserve">
          <source>The proposed &lt;code&gt;getAllKeys()&lt;/code&gt; method of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface would instantly retrieve the keys of all objects inside the index, setting them as the &lt;code&gt;result&lt;/code&gt; of the request object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7333084e4a8a8d4b3e04a12a804b7db7ea8948cb" translate="yes" xml:space="preserve">
          <source>The protocol the site wishes to handle, specified as a string. For example, you can register to handle SMS text message links by registering to handle the &quot;sms&quot; scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb53c065a04d5f6e53d89cc2372eaab7e1414ce" translate="yes" xml:space="preserve">
          <source>The prototype chain does not get walked and duplicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e2595fb01cfe431a88682c2ccfd95ec8705bd2" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;stream&lt;/code&gt; value is not a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;, or it is locked to another writer already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000e52b116b278d686b56693958d2615018ee319" translate="yes" xml:space="preserve">
          <source>The provided mode value is not &lt;code&gt;byob&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbae8d8ca0da337e2613d0fd03e194df7a685fd" translate="yes" xml:space="preserve">
          <source>The provided name is not a &lt;a href=&quot;https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name&quot;&gt;valid custom element name&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c827bd460a69e26457ac5daa320708bdb652ce" translate="yes" xml:space="preserve">
          <source>The purpose is to warn users in advance of context changes to minimize confusion on the user's part: changing the current window or popping up new windows can be very disorienting to users (Back toolbar button is disabled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07437c1dd894d0b7b6b134f52169380678b1fe1c" translate="yes" xml:space="preserve">
          <source>The purpose of attestation is to cryptographically prove that a newly generated key pair came from a specific device. This provides a root of trust for a newly generated key pair as well as being able to identify the attributes of a device being used (how the private key is protected; if / what kind of biometric is being used; whether a device has been certified; etc.).   It should be noted that while attestation provides the capability for a root of trust, validating the root of trust is frequently not necessary. When registering an authenticator for a new account, typically a Trust On First Use (TOFU) model applies; and when adding an authenticator to an existing account, a user has already been authenticated and has established a secure session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678280b91ea61aff572f75ab19406d742e7c5b2e" translate="yes" xml:space="preserve">
          <source>The push notification should be useful and time-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8ec306e5ef85ad015093f01421cd16e04b5ea7" translate="yes" xml:space="preserve">
          <source>The pushState() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb3471afc6adb6f37dfbf1d5ad95c4a59d7b1d" translate="yes" xml:space="preserve">
          <source>The put method is an&lt;em&gt;update or insert&lt;/em&gt;method. See the &lt;a href=&quot;add&quot;&gt;&lt;code&gt;IDBObjectStore.add&lt;/code&gt;&lt;/a&gt; method for an &lt;em&gt;insert only&lt;/em&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb4e66719c57d112e64f945a93bf9bfeeedd05c" translate="yes" xml:space="preserve">
          <source>The query result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb06e226e5dc6bfcc7c90f9ae958385f811b6d56" translate="yes" xml:space="preserve">
          <source>The quota has been exceeded. (Legacy code value: &lt;code&gt;22&lt;/code&gt; and legacy constant name: &lt;code&gt;QUOTA_EXCEEDED_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf57fdbdd70b316c13b853aba2e88f72dbd7c78d" translate="yes" xml:space="preserve">
          <source>The radius of the end circle. Must be non-negative and finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c8ba6d00e0f4b2c22bafc0ff9872e89065074b" translate="yes" xml:space="preserve">
          <source>The radius of the start circle. Must be non-negative and finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cbfab41b0aca203cf526cae7b029365137d488" translate="yes" xml:space="preserve">
          <source>The range is 0 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd0cae1d90d979f13c0844a3109d4915e502ab4" translate="yes" xml:space="preserve">
          <source>The range is 0 to &lt;code&gt;Infinity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8049b05f3202a6d18ab5f919869702c23d417c" translate="yes" xml:space="preserve">
          <source>The range slider below the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element controls the amount of gain given to the lowpass filter &amp;mdash; increase the value of the slider to make the audio sound more bass heavy!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f75dd9a23e82aaabaf5d4e595635ecf81a27813" translate="yes" xml:space="preserve">
          <source>The rate at which the device is rotating about its X axis; that is, front to back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa7c9b4a52d6a47811f952e4b075b1cad2c2f53" translate="yes" xml:space="preserve">
          <source>The rate at which the device is rotating about its Y axis; that is, side to side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73a9bfad38a4b823db0e6b81ea98a5f56d16395" translate="yes" xml:space="preserve">
          <source>The rate at which the device is rotating about its Z axis; that is, being twisted about a line perpendicular to the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6d4de4ece6c1371688033fc7a724abbd434cd5" translate="yes" xml:space="preserve">
          <source>The rate of the animation's change over time. Accepts the pre-defined values &lt;code&gt;&quot;linear&quot;&lt;/code&gt;, &lt;code&gt;&quot;ease&quot;&lt;/code&gt;, &lt;code&gt;&quot;ease-in&quot;&lt;/code&gt;, &lt;code&gt;&quot;ease-out&quot;&lt;/code&gt;, and &lt;code&gt;&quot;ease-in-out&quot;&lt;/code&gt;, or a custom &lt;code&gt;&quot;cubic-bezier&quot;&lt;/code&gt; value like &lt;code&gt;&quot;cubic-bezier(0.42, 0, 0.58, 1)&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;linear&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7926277b4691c852e8ae0ecbc39c5ca8008bc9b8" translate="yes" xml:space="preserve">
          <source>The ray-caster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0d9214098fa94aea52bece75dd6d0585ba53d4" translate="yes" xml:space="preserve">
          <source>The read operation is complete. This could mean that: the entire &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; has been read into memory, a file read error occurred, or &lt;code&gt;&lt;a href=&quot;abort&quot;&gt;abort()&lt;/a&gt;&lt;/code&gt; was called and the read was cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d442013f9478043373b84612c52e94a146320f" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;items&lt;/code&gt; property is a &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;data transfer items&lt;/code&gt;&lt;/a&gt; in a drag operation. The list includes one item for each item in the operation and if the operation had no items, the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9233ba5c697b3fff1cad7f26409a05405a73ae2" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;rows&lt;/strong&gt;&lt;/code&gt; returns a live &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt; of all the rows in the table, including the rows contained within any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead&quot;&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot&quot;&gt;&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody&quot;&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8617db7fe3024f25300ff8eb2696fe713f42a41" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../promiserejectionevent&quot;&gt;&lt;code&gt;PromiseRejection&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;reason&lt;/code&gt; read-only property is any JavaScript value or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; which provides the reason passed into &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject&quot;&gt;&lt;code&gt;Promise.reject()&lt;/code&gt;&lt;/a&gt;. This in theory provides information about why the promise was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba3ee77c96c016994c935d592b6238ab1eb22f0" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;mid&lt;/strong&gt;&lt;/code&gt; property specifies the negotiated media ID (&lt;code&gt;mid&lt;/code&gt;) which the local and remote peers have agreed upon to uniquely identify the stream's pairing of sender and receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bd453c594a5e9672970afc081351a0cfbfeb70" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;currentDirection&lt;/strong&gt;&lt;/code&gt; is a string which indicates the current directionality of the transceiver. Its value is one of the strings defined by the &lt;a href=&quot;../rtcrtptransceiverdirection&quot;&gt;&lt;code&gt;RTCRtpTransceiverDirection&lt;/code&gt;&lt;/a&gt; enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc912cce0a37007e230ba9c464302806d0f72617" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;direction&lt;/strong&gt;&lt;/code&gt; is a string which indicates the transceiver's preferred directionality. Its value must be one of the strings defined by the &lt;a href=&quot;../rtcrtptransceiverdirection&quot;&gt;&lt;code&gt;RTCRtpTransceiverDirection&lt;/code&gt;&lt;/a&gt; enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93319f06abae6c844e691509ec660e2916cf02f4" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../screen&quot;&gt;&lt;code&gt;Screen&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;availHeight&lt;/strong&gt;&lt;/code&gt; property returns the height, in CSS pixels, of the space available for Web content on the screen. Since &lt;a href=&quot;../screen&quot;&gt;&lt;code&gt;Screen&lt;/code&gt;&lt;/a&gt; is exposed on the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;../window/screen&quot;&gt;&lt;code&gt;window.screen&lt;/code&gt;&lt;/a&gt; property, you access &lt;code&gt;availHeight&lt;/code&gt; using &lt;code&gt;window.screen.availHeight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227ffad14aea0aa23502166a571f66efbc648610" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;event&lt;/strong&gt;&lt;/code&gt; returns the &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; which is currently being handled by the site's code. Outside the context of an event handler, the value is always &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13727c93fe1c29191687731c1e6cdaf93c540d1" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;pageYOffset&lt;/code&gt; is an alias for &lt;a href=&quot;scrolly&quot;&gt;&lt;code&gt;scrollY&lt;/code&gt;&lt;/a&gt;; as such, it returns the number of pixels the document is currently scrolled along the vertical axis (that is, up or down) with a value of 0.0, indicating that the top edge of the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; is currently aligned with the top edge of the window's content area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b65369028c14a308b25cbecfa2dff29818d24a" translate="yes" xml:space="preserve">
          <source>The read-only &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;responseText&lt;/code&gt; returns the text received from a server following a request being sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608f9d9fcba456929a799c5402f6fdeefeee72e1" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;Animation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.pending&lt;/code&gt; property of the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; indicates whether the animation is currently waiting for an asynchronous operation such as initiating playback or pausing a running animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab665ded7660c46c3fd092f0d86db7c9432ac7e" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;BroadcastChannel.name&lt;/strong&gt;&lt;/code&gt; property returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, which uniquely identifies the given channel with its name. This name is passed to the &lt;a href=&quot;broadcastchannel&quot;&gt;&lt;code&gt;BroadcastChannel()&lt;/code&gt;&lt;/a&gt; constructor at creation time and is therefore read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1684eda8babff8966152eac1d009f4c848a9d3" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;ImageBitmap.height&lt;/strong&gt;&lt;/code&gt; property returns the &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt; object's height in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a52d2c5fcd322ce7e742be80a2bbfdcc15433e" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;ImageBitmap.width&lt;/strong&gt;&lt;/code&gt; property returns the &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt; object's width in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aec9e7a4a94db72d8b0823e7362ae348209af0c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;Node.nodeType&lt;/strong&gt;&lt;/code&gt; property that represents the type of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c50cc848059817d4bd6a02750b7c393661bb374" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;WebGLContextEvent.statusMessage&lt;/strong&gt;&lt;/code&gt; property contains additional event status information, or is an empty string if no additional information is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2758a880e4b2a4f396c9d83ab67a24301770f1b" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;WebGLRenderingContext.drawingBufferHeight&lt;/strong&gt;&lt;/code&gt; property represents the actual height of the current drawing buffer. It should match the &lt;code&gt;height&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element associated with this context, but might differ if the implementation is not able to provide the requested height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60dd6722aec6fd320e6b177816927b988ebf5ef" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;WebGLRenderingContext.drawingBufferWidth&lt;/strong&gt;&lt;/code&gt; property represents the actual width of the current drawing buffer. It should match the &lt;code&gt;width&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element associated with this context, but might differ if the implementation is not able to provide the requested width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc60859fb6b26584001da4cfda80c67b1b7b9ac" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;XMLHttpRequest.responseURL&lt;/strong&gt;&lt;/code&gt; property returns the serialized URL of the response or the empty string if the URL is &lt;code&gt;null&lt;/code&gt;. If the URL is returned, any URL fragment present in the URL will be stripped away. The value of &lt;code&gt;responseURL&lt;/code&gt; will be the final URL obtained after any redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b381e959119c546dad27302cd9de09172d6330fa" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;XMLHttpRequest.status&lt;/strong&gt;&lt;/code&gt; property returns the numerical status code of the response of the &lt;code&gt;XMLHttpRequest&lt;/code&gt;. &lt;code&gt;status&lt;/code&gt; will be an &lt;code&gt;unsigned short&lt;/code&gt;. Before the request is complete, the value of &lt;code&gt;status&lt;/code&gt; will be &lt;code&gt;0&lt;/code&gt;. It is worth noting that browsers report a status of 0 in case of XMLHttpRequest errors too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22db2e7c6346c86b7b71e110e59a3574cc2d170" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;XMLHttpRequest.statusText&lt;/strong&gt;&lt;/code&gt; property returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the response's status message as returned by the HTTP server. Unlike &lt;a href=&quot;../xmlhttprequest/status&quot;&gt;&lt;code&gt;XMLHTTPRequest.status&lt;/code&gt;&lt;/a&gt; which indicates a numerical status code, this property contains the &lt;em&gt;text&lt;/em&gt; of the response status, such as &quot;OK&quot; or &quot;Not Found&quot;. If the request's &lt;code&gt;&lt;a href=&quot;readystate&quot;&gt;readyState&lt;/a&gt;&lt;/code&gt; is in &lt;code&gt;UNSENT&lt;/code&gt; or &lt;code&gt;OPENED&lt;/code&gt; state, the value of &lt;code&gt;statusText&lt;/code&gt; will be an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd285f6aef6ef2202ee6b67e1412a3a982796fb" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;fullscreenEnabled&lt;/strong&gt;&lt;/code&gt; property on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface indicates whether or not full-screen mode is available. Full-screen mode is available only for a page that has no windowed plug-ins in any of its documents, and if all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; elements which contain the document have their &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-allowfullscreen&quot;&gt;allowfullscreen&lt;/a&gt;&lt;/code&gt; attribute set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058786ff26b816e0038602e96b3094c49ba44460" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface returns the number of items currently in the drag item list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3d76ccd688f95fb002e0e472572b64c4828009" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;methodDetails&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../paymentmethodchangeevent&quot;&gt;&lt;code&gt;PaymentMethodChangeEvent&lt;/code&gt;&lt;/a&gt; interface is an object containing any data the payment handler may provide to describe the change the user has made to their payment method. The value is &lt;code&gt;null&lt;/code&gt; if no details are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309ed21989a5879a8b7316f3c97dd00b92084f3c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;methodName&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../paymentmethodchangeevent&quot;&gt;&lt;code&gt;PaymentMethodChangeEvent&lt;/code&gt;&lt;/a&gt; interface is a string which uniquely identifies the payment handler currently selected by the user. The payment handler may be a payment technology, such as Apple Pay or Android Pay, and each payment handler may support multiple payment methods; changes to the payment method within the payment handler are described by the &lt;code&gt;PaymentMethodChangeEvent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8a069778cba1401890942720e5f79496d27881" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;receiver&lt;/strong&gt;&lt;/code&gt; property of WebRTC's &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; interface indicates the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; responsible for receiving and decoding incoming media data for the transceiver's stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a553c8a401fb760d27d4953ef3dafa23e29d5cb4" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;receiver&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../rtctrackevent&quot;&gt;&lt;code&gt;RTCTrackEvent&lt;/code&gt;&lt;/a&gt; interface indicates the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; which is used to receive data containing media for the &lt;a href=&quot;track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; to which the event refers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e09a3412842a70a8d9614223b5f2fa532820fca" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;scrollX&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface returns the number of pixels that the document is currently scrolled horizontally. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number. You can get the number of pixels the document is scrolled vertically from the &lt;a href=&quot;scrolly&quot;&gt;&lt;code&gt;scrollY&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beae97849b546d452a1dd74fb6eec83839ba4a5c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;scrollY&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface returns the number of pixels that the document is currently scrolled vertically. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number. You can get the number of pixels the document is scrolled horizontally from the &lt;a href=&quot;scrollx&quot;&gt;&lt;code&gt;scrollX&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a417ca24f326093dde4a06ccca18512cc2d360b4" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;sdpMLineIndex&lt;/strong&gt;&lt;/code&gt; property on the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; interface is a zero-based index of the m-line describing the media associated with the candidate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5e85720507116b44b9b4bc8b4e81972a8bf8e5" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;track&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; interface specifies the media track object to which the event applies. This will be an &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../texttrack&quot;&gt;&lt;code&gt;TextTrack&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0787772514ca9f0fa2aff1de53830fb0a36cd43" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;Animation.ready&lt;/code&gt; property of the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves when the animation is ready to play. A new promise is created every time the animation enters the &lt;code&gt;&quot;pending&quot;&lt;/code&gt;&lt;a href=&quot;playstate&quot;&gt;play state&lt;/a&gt; as well as when the animation is canceled, since in both of those scenarios, the animation is ready to be started again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1b75bf1f4f48a63cd2a4ca37695bf7d7a45153" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;DataTransferItem.kind&lt;/code&gt; property returns a &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; representing the &lt;em&gt;drag data item&lt;/em&gt; kind: some text or some file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0af4d8a513e94f9e580a632b0d15c10106cfdf" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;DataTransferItem.type&lt;/code&gt; property returns the type (format) of the &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; object representing the drag data item. The &lt;code&gt;type&lt;/code&gt; is a Unicode string generally given by a MIME type, although a MIME type is not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ef2a96ca94fdddde633237550696981af103bb" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;HTMLLabelElement.control&lt;/code&gt; property returns a reference to the control (in the form of an object of type &lt;a href=&quot;../htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; or one of its derivatives) with which the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt; element is associated, or &lt;code&gt;null&lt;/code&gt; if the label isn't associated with a control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71e41689fb193e50f753bbda4d8bdafa913520b" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;HTMLLabelElement.form&lt;/code&gt; property returns an &lt;a href=&quot;../htmlformelement&quot;&gt;&lt;code&gt;HTMLFormElement&lt;/code&gt;&lt;/a&gt; object which represents the form of which the label's associated control is a part, or null if there is either no associated control, or if that control isn't in a form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14dec08f3211b96f8b78f8aeb3a9a04d1f5eeb2" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;HTMLMediaElement.paused&lt;/code&gt; property tells whether the media element is paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43146af2e009cf2a71762ecdedd15c31ba7da012" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;bufferedAmount&lt;/strong&gt;&lt;/code&gt; returns the number of bytes of data currently queued to be sent over the data channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4633f7f26f25bb7bd8b16ae1f95a2056ebf992ce" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;bufferedAmount&lt;/strong&gt;&lt;/code&gt; returns the number of bytes of data currently queued to be sent over the data channel. The queue may build up as a result of calls to the &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; method. This only includes data buffered by the user agent itself; it doesn't include any framing overhead or buffering done by the operating system or network hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1424bad52863d98be75bfda8b5bdb5432f852f" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/code&gt; returns an ID number (between 0 and 65,534) which uniquely identifies the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;. This ID is set at the time the data channel is created, either by the user agent (if &lt;a href=&quot;negotiated&quot;&gt;&lt;code&gt;RTCDataChannel.negotiated&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;) or by the site or app script (if &lt;code&gt;negotiated&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bda9be0d4388701ead1bdbca7745f23a41d216d" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/code&gt; returns an ID number (between 0 and 65,534) which uniquely identifies the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784fed2a15881e4177e17235fa4fed5f4c63bd9d" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;label&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a name describing the data channel. These labels are not required to be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bea2e834b55741d26992d729bb8f57ac3bcd42" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;label&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a name describing the data channel. These labels are not required to be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a13f749ed36b639200e59e9211db3d263712dc" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;maxPacketLifeTime&lt;/strong&gt;&lt;/code&gt; returns the amount of time, in milliseconds, the browser is allowed to take to attempt to transmit a message, as set when the data channel was created, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630c0d266e753c5d890c62f06f7fd29792776775" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;maxPacketLifeTime&lt;/strong&gt;&lt;/code&gt; returns the amount of time, in milliseconds, the browser is allowed to take to attempt to transmit a message, as set when the data channel was created, or &lt;code&gt;null&lt;/code&gt;. This limits how long the browser can continue to attempt to transmit and retransmit the message before giving up when in unordered mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9c35c1765b3e58b2d3f37967a2da560cab29c5" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;maxRetransmits&lt;/strong&gt;&lt;/code&gt; returns the maximum number of times the browser should try to transmit a message before giving up when in unordered mode, as set when the data channel was created, or &lt;code&gt;null&lt;/code&gt;, which indicates that there is no maximum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ce3b313340f0f92be18ebec571463ab9ff838a" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;maxRetransmits&lt;/strong&gt;&lt;/code&gt; returns the maximum number of times the browser should try to transmit a message before giving up when in unordered mode, as set when the data channel was created, or &lt;code&gt;null&lt;/code&gt;, which indicates that there is no maximum. This can only be set when the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; is created by calling &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt;, using the &lt;code&gt;maxRetransmits&lt;/code&gt; field in the specified &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a3f6cbb5509ecd964c8eb8934105fa13d757e8" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;negotiated&lt;/strong&gt;&lt;/code&gt; indicates whether the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;'s connection was negotiated by the Web app (&lt;code&gt;true&lt;/code&gt;) or by the WebRTC layer (&lt;code&gt;false&lt;/code&gt;). &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0bf8bef5154f62df098c930e3fdba705c9b92f" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;negotiated&lt;/strong&gt;&lt;/code&gt; indicates whether the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;'s connection was negotiated by the Web app (&lt;code&gt;true&lt;/code&gt;) or by the WebRTC layer (&lt;code&gt;false&lt;/code&gt;). &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a9f244ce0625918d531cd29101714d1db0f2dd" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;ordered&lt;/strong&gt;&lt;/code&gt; indicates whether or not the data channel guarantees in-order delivery of messages; the default is &lt;code&gt;true&lt;/code&gt;, which indicates that the data channel is indeed ordered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f903ca710f906bcb1aad1304232e9905b657da" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;ordered&lt;/strong&gt;&lt;/code&gt; indicates whether or not the data channel guarantees in-order delivery of messages; the default is &lt;code&gt;true&lt;/code&gt;, which indicates that the data channel is indeed ordered. This is set when the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; is created, by setting the &lt;code&gt;ordered&lt;/code&gt; property on the &lt;code&gt;&lt;a href=&quot;../rtcpeerconnection/createdatachannel#RTCDataChannelInit_dictionary&quot;&gt;RTCDataChannelInit&lt;/a&gt;&lt;/code&gt; object passed as &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b382dee48934bd270d1740ed2c3545b78cc28e7" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;protocol&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the subprotocol in use. If no protocol was specified when the data channel was created, then this property's value is &quot;&quot; (the empty string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afb4892091d8cff420e4356cde0a3a49262f7af" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;protocol&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the name of the subprotocol in use. If no protocol was specified when the data channel was created, then this property's value is &quot;&quot; (the empty string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530f78566c8feb271346dab4db1f13e9c5cfb793" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;readyState&lt;/strong&gt;&lt;/code&gt; returns an enum of type &lt;code&gt;RTCDataChannelState&lt;/code&gt; which indicates the state of the data channel's underlying data connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0577bcb4202d92d2df64c26c4dda9c5218da997" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;reliable&lt;/strong&gt;&lt;/code&gt; indicates whether or not the data channel is reliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fac54b7e13332e9da9a824c1836c5b28bffdd75" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;WebGLActiveInfo.name&lt;/code&gt; property represents the name of the requested data returned by calling the &lt;a href=&quot;../webglrenderingcontext/getactiveattrib&quot;&gt;&lt;code&gt;getActiveAttrib()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../webglrenderingcontext/getactiveuniform&quot;&gt;&lt;code&gt;getActiveUniform()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a55a9a04965ae7f949af40e3a286d0f15a66395" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;WebGLActiveInfo.size&lt;/code&gt; property is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; representing the size of the requested data returned by calling the &lt;a href=&quot;../webglrenderingcontext/getactiveattrib&quot;&gt;&lt;code&gt;getActiveAttrib()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../webglrenderingcontext/getactiveuniform&quot;&gt;&lt;code&gt;getActiveUniform()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837c5b665f6023a2dcdcc9fff85c84b2e63b5d43" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;WebGLActiveInfo.type&lt;/code&gt; property represents the type of the requested data returned by calling the &lt;a href=&quot;../webglrenderingcontext/getactiveattrib&quot;&gt;&lt;code&gt;getActiveAttrib()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../webglrenderingcontext/getactiveuniform&quot;&gt;&lt;code&gt;getActiveUniform()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcd18498da1294e549627093184ecb20e03a99b" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;WebGLShaderPrecisionFormat.precision&lt;/code&gt; property returns the number of bits of precision that can be represented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0bb07bd4a7e4c64620793786eb793cca75515c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;WebGLShaderPrecisionFormat.rangeMax&lt;/code&gt; property returns the base 2 log of the absolute value of the maximum value that can be represented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1390784406cd5b475b2930a2770f1f216b5aa28" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;WebGLShaderPrecisionFormat.rangeMin&lt;/code&gt; property returns the base 2 log of the absolute value of the minimum value that can be represented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845c5b711d5e140b1375a0c0fcf25c2042f71bee" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;audioLevel&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpcontributingsource&quot;&gt;&lt;code&gt;RTCRtpContributingSource&lt;/code&gt;&lt;/a&gt; interface indicates the audio level contained in the last RTP packet played from the described source. audioLevel will be the level value defined in [RFC6465] if the RFC 6465 header extension is present, and otherwise null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f863b1e5eb88ec10a31fec049a1307650bc0e8ce" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;audioTracks&lt;/code&gt; property on &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; objects returns an &lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt; object listing all of the &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt; objects representing the media element's audio tracks. The media element may be either an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa3b2280efd36d8e97cf488fcaab0f06afd5396" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;component&lt;/code&gt; property on the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; interface is a string which indicates whether the candidate is an &lt;a href=&quot;../webrtc_api/intro_to_rtp&quot;&gt;RTP&lt;/a&gt; or an RTCP candidate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3760431dd3d16b12d798862dfc318ecd9fef9210" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;composed&lt;/code&gt; property of the &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which indicates whether or not the event will propagate across the shadow DOM boundary into the standard DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37130a4612fb59697d51a87dd6817db79191b2a0" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;connectionState&lt;/code&gt; property of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; interface indicates the current state of the peer connection by returning one of the string values specified by the enum &lt;code&gt;&lt;a href=&quot;#RTCPeerConnectionState_enum&quot;&gt;RTCPeerConnectionState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e2f4e5ef29ea78beb937fd53aa876c09b38d00" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;connectionState&lt;/code&gt; property of the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; interface indicates the current state of the peer connection by returning one of the string values specified by the enum &lt;code&gt;&lt;a href=&quot;#RTCPeerConnectionState_enum&quot;&gt;RTCPeerConnectionState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d8f094438a152b22a4b50745f57c09ea18c39d" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;context&lt;/code&gt; property of the &lt;a href=&quot;../audionode&quot;&gt;&lt;code&gt;AudioNode&lt;/code&gt;&lt;/a&gt; interface returns the associated &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt;, that is the object representing the processing graph the node is participating in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1dc11a7a14e459b80bcf6f4b75a50283ddaa62" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;dependentLocality&lt;/code&gt; property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface is a string containing a sublocality designation within a city, such as a neighborhood, borough, district, or, in the United Kingdom, a dependent locality. Also known as a &lt;em&gt;post town&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4b3feefea3ace7d58fb22602a37d4dbe53cfdf" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;didTimeout&lt;/code&gt; property on the &lt;strong&gt;&lt;a href=&quot;../idledeadline&quot;&gt;&lt;code&gt;IdleDeadline&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface is a Boolean value which indicates whether or not the idle callback is being invoked because the timeout interval specified when &lt;a href=&quot;../window/requestidlecallback&quot;&gt;&lt;code&gt;Window.requestIdleCallback()&lt;/code&gt;&lt;/a&gt; was called has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38432db15c221ce99180e5c6a9e0fc0ec1c8a13c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;dtmf&lt;/code&gt; property on the &lt;strong&gt;&lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface returns a &lt;a href=&quot;../rtcdtmfsender&quot;&gt;&lt;code&gt;RTCDTMFSender&lt;/code&gt;&lt;/a&gt; object which can be used to send &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTMF&quot;&gt;DTMF&lt;/a&gt; tones over the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; . See &lt;a href=&quot;../webrtc_api/using_dtmf&quot;&gt;Using DTMF&lt;/a&gt; for details on how to make use of th&lt;code&gt;e&lt;/code&gt; returned &lt;code&gt;RTCDTMFSender&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee01890d04d406ea19757b5afb5bc92ad0e2838" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;error&lt;/code&gt; property in the &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecordingErrorEvent&quot;&gt;&lt;code&gt;MediaRecordingErrorEvent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface is a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; object providing details about the exception that was thrown by a &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7554ea358340579c9f884efa3ea92f96f1cd2ce5" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;filesystem&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface contains a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; object that represents the file system on which the entry resides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90b495c0190f72c2af47950bff83a3c53637f31" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;fullPath&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; specifying the full, absolute path from the file system's root to the file represented by the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df15eba27e9d03dbf40d3bda8ded3de577cdec9b" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;isDirectory&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface is &lt;code&gt;true&lt;/code&gt; if the entry represents a directory (meaning it's a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt;) and &lt;code&gt;false&lt;/code&gt; if it's not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751768cf8a724e2ee9df418d646e031c182a9905" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;isFile&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface is &lt;code&gt;true&lt;/code&gt; if the entry represents a file (meaning it's a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt;) and &lt;code&gt;false&lt;/code&gt; if it's not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbd94c4ae46cf5c693179b76d20fea7048f7c8f" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;localStorage&lt;/code&gt; property allows you to access a &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object for the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;'s origin; the stored data is saved across browser sessions. &lt;code&gt;localStorage&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;sessionstorage&quot;&gt;sessionStorage&lt;/a&gt;&lt;/code&gt;, except that while data stored in &lt;code&gt;localStorage&lt;/code&gt; has no expiration time, data stored in &lt;code&gt;sessionStorage&lt;/code&gt; gets cleared when the page session ends &amp;mdash; that is, when the page is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff21297161db06c17fc375d28efa206abac4c42" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;modificationTime&lt;/code&gt; property of the &lt;a href=&quot;../metadata&quot;&gt;&lt;code&gt;Metadata&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object which specifies the date and time the file system entry (or the data referenced by the entry) was last modified.A file system entry is considered to have been modified if the metadata or the contents of the referenced file (or directory, or whatever other kind of file system entry might exist on the platform in use) has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54e6a89af64a1e38c2264f51d6b8ca1ca0e1b60" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; interface indicates the file system's name. This &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; is unique among all file systems currently exposed by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API&quot;&gt;File and Directory Entries API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79337dbaf657a1d4a5ec9fac8fa549848c54c821" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; specifying the entry's name; this is the entry within its parent directory (the last component of the path as indicated by the &lt;a href=&quot;fullpath&quot;&gt;&lt;code&gt;fullPath&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bd0cffb7be3ff0f7dd963b986dc40bf93ac7a3" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;offset&lt;/code&gt; property of the &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; object indicating the numeric &lt;a href=&quot;../audioparam#a-rate&quot;&gt;a-rate&lt;/a&gt; value which is always returned by the source when asked for the next sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b70d240e06a2299cae7f38e994976c748428d2" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;phone&lt;/code&gt; property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a string containing the telephone number of the recipient or contact person.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0560c806d833a9872773bc47e0635d25e4c8a3" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;recipient&lt;/code&gt; property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a string containing the name of the recipient, purchaser, or contact person at the payment address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82eb2f2445e57a13f97557b2f980a7c4e67dcd31" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;redirected&lt;/code&gt; property of the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interface indicates whether or not the response is the result of a request you made which was redirected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0606f8affbefa383c2fc92bea5683d248c7a9c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;region&lt;/code&gt; property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a string containing the top-level administrative subdivision of the country in which the address is located. For example, this may be a state, province, oblast, or prefecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecaa3c7040db59e1ed9f80029292823f9071139" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;root&lt;/code&gt; property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; object representing the root directory of the file system, for use with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API&quot;&gt;File and Directory Entries API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f15804d70ad4fc2796939a5d69140a5ddbc6f" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;sctp&lt;/code&gt; property on the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../rtcsctptransport&quot;&gt;&lt;code&gt;RTCSctpTransport&lt;/code&gt;&lt;/a&gt; describing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SCTP&quot;&gt;SCTP&lt;/a&gt; transport over which SCTP data is being sent and received. If SCTP hasn't been negotiated, this value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21af3a04509b5f6c0236b3ed2a42e0e6051f3c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;sctp&lt;/code&gt; property on the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;rtcsctptransport&quot;&gt;&lt;code&gt;RTCSctpTransport&lt;/code&gt;&lt;/a&gt; describing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SCTP&quot;&gt;SCTP&lt;/a&gt; transport over which SCTP data is being sent and received. If SCTP hasn't been negotiated, this value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f82d2bee06c58abe70608cb3b74829926c3c7e" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;sender&lt;/code&gt; property of WebRTC's &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; interface indicates the &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; responsible for encoding and sending outgoing media data for the transceiver's stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3059b807ee53941f84888da0b9d20caebc4fba0" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;signalingState&lt;/code&gt; property on the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; interface returns one of the string values specified by the &lt;code&gt;RTCSignalingState&lt;/code&gt; enum; these values describe the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer. See &lt;a href=&quot;../webrtc_api/session_lifetime#Signaling&quot;&gt;Signaling&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/session_lifetime&quot;&gt;Lifetime of a WebRTC session&lt;/a&gt; for more details about the signaling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f709ad76fb6080ca823a3db0129235f5849705" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;signalingState&lt;/code&gt; property on the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; interface returns one of the string values specified by the &lt;code&gt;RTCSignalingState&lt;/code&gt; enum; these values describe the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer. See &lt;a href=&quot;webrtc_api/session_lifetime#Signaling&quot;&gt;Signaling&lt;/a&gt; in &lt;a href=&quot;webrtc_api/session_lifetime&quot;&gt;Lifetime of a WebRTC session&lt;/a&gt; for more details about the signaling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ac494f034d59d3209a31ab2167e8970ea6b568" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;size&lt;/code&gt; property of the &lt;a href=&quot;../metadata&quot;&gt;&lt;code&gt;Metadata&lt;/code&gt;&lt;/a&gt; interface specifies the size, in bytes, of the referenced file or other file system object on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840c26a34d972d7d25335f0d0f81c27ca90eec85" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;source&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpcontributingsource&quot;&gt;&lt;code&gt;RTCRtpContributingSource&lt;/code&gt;&lt;/a&gt; interface returns the source identifier of a particular stream of RTP packets. The value is the contributing source (CSRC) or synchronization source (SSRC) identifier, depending on whether the object is an &lt;code&gt;RTCRtpContributingSource&lt;/code&gt; or &lt;a href=&quot;../rtcrtpsynchronizationsource&quot;&gt;&lt;code&gt;RTCRtpSynchronizationSource&lt;/code&gt;&lt;/a&gt;, which is based on the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e5d3f91fa9210332c8e7df2f7717ae2fca83e7" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;stopped&lt;/code&gt; property on the &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; interface indicates whether or not the transceiver's associated sender and receiver have both been stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33eed8a9b00249a34c0f087b05743ad86fb7c867" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;timestamp&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpcontributingsource&quot;&gt;&lt;code&gt;RTCRtpContributingSource&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; indicating the most recent time of playout of an RTP packet from the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242fe97d4d17ff77e0e75046a4a4e13b81e4e61c" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;usernameFragment&lt;/code&gt; property on the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; interface is a string indicating the username fragment (&quot;ufrag&quot;) that uniquely identifies a single ICE interaction session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dce1d27f1331a5e6e0c5e7e1449099afc852b5" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;videoTracks&lt;/code&gt; property on &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; objects returns a &lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt; object listing all of the &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt; objects representing the media element's video tracks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcb0423bf611486159e75c05b6f1d6732e45cbc" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;voiceActivityFlag&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpsynchronizationsource&quot;&gt;&lt;code&gt;RTCRtpSynchronizationSource&lt;/code&gt;&lt;/a&gt; interface indicates whether or not the most recent RTP packet on the source includes voice activity. This is only present if the stream is using the voice activity detection feature; see the &lt;code&gt;RTCOfferOptions&lt;/code&gt; flag &lt;code&gt;&lt;a href=&quot;../rtcpeerconnection/createoffer#RTCOfferOptions_dictionary&quot;&gt;voiceActivityDetection&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bffc484905a8c28b192b9bc0acc34d24fe6599" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;label&lt;/strong&gt;&lt;/code&gt; returns a string specifying the audio track's human-readable label, if one is available; otherwise, it returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad00da04ca27e7642aac1ec6506f8e7c3c1a51cb" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;language&lt;/code&gt; returns a string identifying the language used in the audio track. For tracks that include multiple languages (such as a movie in English in which a few lines are spoken in other languages), this should be the video's primary language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815399ea32061a038a72d2a28ec861d58e4503b9" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;sourceBuffer&lt;/code&gt; returns the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; that created the track, or null if the track was not created by a &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; has been removed from the &lt;a href=&quot;../mediasource/sourcebuffers&quot;&gt;&lt;code&gt;MediaSource.sourceBuffers&lt;/code&gt;&lt;/a&gt; attribute of its parent media source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e92b2171087a6e3e32825ce159a7a17243b680" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; returns the number of entries in the &lt;code&gt;AudioTrackList&lt;/code&gt;, each of which is an &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt; representing one audio track in the media element. A value of 0 indicates that there are no audio tracks in the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49aa4776bcbdc49a6ecfa4beb01ba8bef767754" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;component&lt;/strong&gt;&lt;/code&gt; specifies whether the object is serving to transport RTP or RTCP. The value is one of the strings in &lt;a href=&quot;../rtcicecomponent&quot;&gt;&lt;code&gt;RTCIceComponent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f43c79cddd45fdca98ec976dcf532b6bfb03748" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;role&lt;/strong&gt;&lt;/code&gt; indicates which &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; role the transport is fulfilling: that of the controlling agent, or the agent that is being controlled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f1668307f1de50f974246838ca22122bbfd243" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;gatheringState&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; from the enumerated type &lt;a href=&quot;../rtcicegathererstate&quot;&gt;&lt;code&gt;RTCIceGathererState&lt;/code&gt;&lt;/a&gt; that indicates what gathering state the ICE agent is currently in: &lt;code&gt;&quot;new&quot;&lt;/code&gt;, &lt;code&gt;&quot;gathering&quot;&lt;/code&gt;, or &lt;code&gt;&quot;complete&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814827a0eb052e183aa929399b647d4e7882898b" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;state&lt;/code&gt; returns the current state of the ICE transport, so you can determine the state of ICE gathering in which the ICE agent currently is operating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02913cef63994d8521d6841542d92057d70aec2" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;canTrickleIceCandidates&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which indicates whether or not the remote peer can accept &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-mmusic-trickle-ice&quot;&gt;trickled ICE candidates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fbd1436f124054ff33540d5024837e0470d17d" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;label&lt;/strong&gt;&lt;/code&gt; returns a string specifying the video track's human-readable label, if one is available; otherwise, it returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80d95879bcfe136a6e8696f622aaa6c3659f8a4" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;language&lt;/code&gt; returns a string identifying the language used in the video track. For tracks that include multiple languages (such as a movie in English in which a few lines are spoken in other languages), this should be the video's primary language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9137d22f9a4125e9966e785b2cc852d39542b74" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;sourceBuffer&lt;/code&gt; returns the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; that created the track, or null if the track was not created by a &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; has been removed from the &lt;a href=&quot;../mediasource/sourcebuffers&quot;&gt;&lt;code&gt;MediaSource.sourceBuffers&lt;/code&gt;&lt;/a&gt; attribute of its parent media source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5205bd189c9e56ffdc064de8e3302f5f45c21e" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; returns the number of entries in the &lt;code&gt;VideoTrackList&lt;/code&gt;, each of which is a &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt; representing one video track in the media element. A value of 0 indicates that there are no video tracks in the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cc95c2fa93e9f003e064bab76b71f77b8e9e5d" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;selectedIndex&lt;/strong&gt;&lt;/code&gt; returns the index of the currently selected track, if any, or &lt;code&gt;-1&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebdc6892ba887ca39ba72a15a2f7ebab5f6312f" translate="yes" xml:space="preserve">
          <source>The read-only &lt;strong&gt;&lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;canTrickleIceCandidates&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which indicates whether or not the remote peer can accept &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-mmusic-trickle-ice&quot;&gt;trickled ICE candidates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6cb9adb484260066d8e3d97f8c9cfce9d26111" translate="yes" xml:space="preserve">
          <source>The read-only height of the current drawing buffer. Should match the height of the canvas element associated with this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59284c4cf14bc6723d9a6b52c03eb78bf321870" translate="yes" xml:space="preserve">
          <source>The read-only name of the requested variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a8f3ddcb3da148b5cffb34a03414e4ecebc9ea" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;MediaError.code&lt;/strong&gt;&lt;/code&gt; returns a numeric value which represents the kind of error that occurred on a media element. To get a text string with specific diagnostic information, see &lt;a href=&quot;message&quot;&gt;&lt;code&gt;MediaError.message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b614e3bfb198af0442a0e9dd208c60af9e669d" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;MediaError.message&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which contains a human-readable string offering specific diagnostic details related to the error described by the &lt;code&gt;MediaError&lt;/code&gt; object, or an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) if no diagnostic information can be determined or provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e13a9ea7e686121ab23cb49932c5f447e267ad" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;MediaStreamTrack.id&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a unique identifier (GUID) for the track; it is generated by the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46f1b56c300a474e7837810ec1ae75dda896077" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;MediaStreamTrack.kind&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;&quot;audio&quot;&lt;/code&gt; if the track is an audio track and to &lt;code&gt;&quot;video&quot;&lt;/code&gt;, if it is a video track. It doesn't change if the track is deassociated from its source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c976e34ccf88600dd43e818576c8a29fa0c2627" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;MediaStreamTrack.label&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a user agent-assigned label that identifies the track source, as in &lt;code&gt;&quot;internal microphone&quot;&lt;/code&gt;. The string may be left empty and is empty as long as no source has been connected. When the track is deassociated from its source, the label is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffd032d5ef43f34f98672d65deba6715b952413" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;MediaStreamTrack.readyState&lt;/strong&gt;&lt;/code&gt; returns an enumerated value giving the status of the track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728d66b1efa67276e5cfb41dda993c268f78fb5c" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCDataChannelEvent&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.channel&lt;/code&gt; returns the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aef6cda18832645f44d1f52deb51cabdd924a5" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCDataChannelEvent&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.channel&lt;/code&gt; returns the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d6c92b92e4af43eea04f333e9bbc725f88d299" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCIdentityErrorEvent.idp&lt;/strong&gt;&lt;/code&gt; returns the &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/domain_name&quot;&gt;domain name&lt;/a&gt; of the identity provider (idp) generating the error response event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af633b6d790edbeaccfd90df01267bbaa9443470" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCIdentityErrorEvent.loginUrl&lt;/strong&gt;&lt;/code&gt; is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; giving the URL where the user can complete the authentication. It can be &lt;code&gt;null&lt;/code&gt; and is provided by the identity provider (idp).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8039198f824c408997676409463424a9e36df2" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCIdentityErrorEvent.protocol&lt;/strong&gt;&lt;/code&gt; is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing the Idp protocol in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffcde054c0ff55a68f0ecc42d2f55fac3e01af3" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.currentLocalDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing the local end of the connection as it was most recently successfully negotiated since the last time the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e6ee9386657cad2cfd7e3e080b027365a6e55e" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.currentLocalDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing the local end of the connection as it was most recently successfully negotiated since the last time the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce9812d372df15a43b1a3723d37d03dd5e00f39" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.currentRemoteDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing the remote end of the connection as it was most recently successfully negotiated since the last time the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06c5164c1ca572f312f9cdbbdfc20c382597a32" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.currentRemoteDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing the remote end of the connection as it was most recently successfully negotiated since the last time the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce229ac2706b45de72dbde52ec9517eb3edbe8c" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.defaultIceServers&lt;/strong&gt;&lt;/code&gt; returns an array of objects based on the &lt;a href=&quot;../rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary, which indicates what, if any, ICE servers the browser will use by default if none are provided to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; in its &lt;a href=&quot;../rtcconfiguration&quot;&gt;&lt;code&gt;RTCConfiguration&lt;/code&gt;&lt;/a&gt;. However, browsers are &lt;strong&gt;not&lt;/strong&gt; required to provide any default ICE servers at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a149e58520f8adcfc423b1c32ddd32e41fbc1b95" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.defaultIceServers&lt;/strong&gt;&lt;/code&gt; returns an array of objects based on the &lt;a href=&quot;rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary, which indicates what, if any, ICE servers the browser will use by default if none are provided to the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; in its &lt;a href=&quot;rtcconfiguration&quot;&gt;&lt;code&gt;RTCConfiguration&lt;/code&gt;&lt;/a&gt;. However, browsers are &lt;strong&gt;not&lt;/strong&gt; required to provide any default ICE servers at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e639c45a09ec78aa79d6e0b3df20e9b97e8e0819" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.iceConnectionState&lt;/strong&gt;&lt;/code&gt; returns an enum of type &lt;code&gt;RTCIceConnectionState&lt;/code&gt; which state of the ICE agent associated with the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06aca3159f320708412576c00cd4096fa3e71c19" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.iceConnectionState&lt;/strong&gt;&lt;/code&gt; returns an enum of type &lt;code&gt;RTCIceConnectionState&lt;/code&gt; which state of the ICE agent associated with the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3576dfc5ac4bf42da92dc60da33decaafd9fa6c2" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.iceGatheringState&lt;/strong&gt;&lt;/code&gt; returns an enum of type &lt;code&gt;RTCIceGatheringState&lt;/code&gt; that describes connection's ICE gathering state. This lets you detect, for example, when collection of ICE candidates has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f392a6057f8061373e2540a5dd02202a329b540" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.localDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; describing the session for the local end of the connection. If it has not yet been set, this is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d697a5ffbb3fa3b97117719ded2adf7ba38f255" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.localDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; describing the session for the local end of the connection. If it has not yet been set, this is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9663a8d3e6eefbe6cc378c81ba7b68af21c0c0c9" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.peerIdentity&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcidentityassertion&quot;&gt;&lt;code&gt;RTCIdentityAssertion&lt;/code&gt;&lt;/a&gt;, containing a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; once set and verified. If no peer has yet been set and verified, this property will return &lt;code&gt;null&lt;/code&gt;. Once set, via the appropriate method, it can't be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8784af58c643825390b36ad227bca30f040c7f2" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.peerIdentity&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;rtcidentityassertion&quot;&gt;&lt;code&gt;RTCIdentityAssertion&lt;/code&gt;&lt;/a&gt;, containing a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; once set and verified. If no peer has yet been set and verified, this property will return &lt;code&gt;null&lt;/code&gt;. Once set, via the appropriate method, it can't be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b082b55938ee693bf5e5b8e54dbc914915e7c941" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.pendingLocalDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing a pending configuration change for the local end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use &lt;a href=&quot;currentlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.currentLocalDescription&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;localdescription&quot;&gt;&lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt;&lt;/a&gt; to get the current state of the endpoint. For details on the difference, see &lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa74b540c780a2f1811fc77c9b6e9793f10f10dc" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.pendingLocalDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing a pending configuration change for the local end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use &lt;a href=&quot;rtcpeerconnection/currentlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.currentLocalDescription&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;rtcpeerconnection/localdescription&quot;&gt;&lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt;&lt;/a&gt; to get the current state of the endpoint. For details on the difference, see &lt;a href=&quot;webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cd92595fd035eb0d765868b0c6b0015f3d2749" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.pendingRemoteDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing a pending configuration change for the remote end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use &lt;a href=&quot;currentremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.currentRemoteDescription&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;remotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt;&lt;/a&gt; to get the current session description for the remote endpoint. For details on the difference, see &lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acb3a8e83dd4373c5f683e3a74a9cd7794d02b9" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.pendingRemoteDescription&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object describing a pending configuration change for the remote end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use &lt;a href=&quot;rtcpeerconnection/currentremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.currentRemoteDescription&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;rtcpeerconnection/remotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt;&lt;/a&gt; to get the current session description for the remote endpoint. For details on the difference, see &lt;a href=&quot;webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df51e20fa92d5b840510c7ac4d37ea33f0d2b0ed" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.remoteDescription&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; describing the session (which includes configuration and media information) for the remote end of the connection. If this hasn't been set yet, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe77a2fb55d43a96a3311d770e2d239399e0828" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;RTCPeerConnection.remoteDescription&lt;/strong&gt;&lt;/code&gt; returns a &lt;a href=&quot;rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; describing the session (which includes configuration and media information) for the remote end of the connection. If this hasn't been set yet, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2512f02b1ad208e329c897b7d0f112685f57068a" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;&lt;strong&gt;candidate&lt;/strong&gt;&lt;/code&gt; on the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing the candidate in detail. Most of the other properties of &lt;code&gt;RTCIceCandidate&lt;/code&gt; are actually extracted from this string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497e3788961e0a84d3421e17ac58b4a8b962abfe" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;MediaStreamEvent.stream&lt;/code&gt; returns the &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba821527493d7c1b6e12e575b8b8636014325ab3" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;RTCDTMFToneChangeEvent.tone&lt;/code&gt; returns the DTMF character which has just begun to play, or an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;). if all queued tones have finished playing (that is, &lt;a href=&quot;../rtcdtmfsender/tonebuffer&quot;&gt;&lt;code&gt;RTCDTMFSender.toneBuffer&lt;/code&gt;&lt;/a&gt; is empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddfacb34aa9087a158dc1b7bc0f048dd2e5b0c5" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;RTCIdentityEvent.assertion&lt;/code&gt; returns the &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a blob being the coded assertion associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9208d18482c461bbdf95fc1a1e5f19e23239db7" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;RTCPeerConnectionIceEvent.candidate&lt;/code&gt; returns the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280bd6598284b27d9ca7b8aa1ad426f44e12dff4" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;ValidityState.badInput&lt;/code&gt; indicates if the user has provided input that the browser is unable to convert. For example, if you have a number input element whose content is a string. &lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; While this is unsupported in Internet Explorer, any non-numeric value will be dismissed from the field if it is a number input.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4e162e0235f07cc97e288e8a84774c802e59ab" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;ValidityState.tooLong&lt;/code&gt; indicates if the value of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt;, after having been edited by the user, exceeds the maximum code-unit length established by the element's &lt;code&gt;maxlength&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ca7c7820b2f7e15a5a8f0f5ab467ebe73bdc43" translate="yes" xml:space="preserve">
          <source>The read-only property &lt;code&gt;sdpMid&lt;/code&gt; on the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; specifying the media stream identification tag of the media component with which the candidate is associated. This ID uniquely identifies a given stream for the component with which the candidate is associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06a056cdf74f9804e44a6de03d67f0bb93e90e5" translate="yes" xml:space="preserve">
          <source>The read-only property returns an integer that represents the number of style declarations in this CSS declaration block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83daebc4101fbc9cd0b63f9868893e022ad5fdc" translate="yes" xml:space="preserve">
          <source>The read-only size of the requested variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41bd268e704bc9977ff9f56633292b549fdebb2" translate="yes" xml:space="preserve">
          <source>The read-only type of the requested variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d67587a15c1142f0ee03b313cfc3942bec74f45" translate="yes" xml:space="preserve">
          <source>The read-only width of the current drawing buffer. Should match the width of the canvas element associated with this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7d8f894c1f04a7c084dba95710355266a6fa1e" translate="yes" xml:space="preserve">
          <source>The readonly &lt;code&gt;&lt;strong&gt;ImageData.data&lt;/strong&gt;&lt;/code&gt; property returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray&quot;&gt;&lt;code&gt;Uint8ClampedArray&lt;/code&gt;&lt;/a&gt; that contains the &lt;a href=&quot;../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object's pixel data. Data is stored as a one-dimensional array in the RGBA order, with integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt; (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd8986ccae2c89b36fa74aa82b48292cf287b8c" translate="yes" xml:space="preserve">
          <source>The readonly &lt;code&gt;&lt;strong&gt;ImageData.height&lt;/strong&gt;&lt;/code&gt; property returns the number of rows in the &lt;a href=&quot;../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659755849675413c0bb4a50b6aa4e6f25fc36c81" translate="yes" xml:space="preserve">
          <source>The readonly &lt;code&gt;&lt;strong&gt;TextMetrics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.width&lt;/code&gt; property contains the text's advance width (the width of that inline box) in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668b5472a8121d8af5cb2fb1e36e8666383366a8" translate="yes" xml:space="preserve">
          <source>The readonly &lt;code&gt;ImageData.width&lt;/code&gt; property returns the number of pixels per row in the &lt;a href=&quot;../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7f8d0fc0399f5d943e492075a242968581d048" translate="yes" xml:space="preserve">
          <source>The real magic happens in the &lt;code&gt;drop()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5389c89e5fcf11c3f05e99ee021e7481449d6f2" translate="yes" xml:space="preserve">
          <source>The real power of matrices come from matrix composition. When matrices of a certain class are multiplied together they preserve the history of the transformations and are reversible. This means that if a translation, rotation, and scale matrix are all combined together, when the order of the matrices is reversed and re-applied then the original points are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2abbc6511d1de330b2cf725d793551915c69a67" translate="yes" xml:space="preserve">
          <source>The reason for the &lt;a href=&quot;#Syntax&quot;&gt;syntax&lt;/a&gt; of the &lt;code&gt;document.cookie&lt;/code&gt; accessor property is due to the client-server nature of cookies, which differs from other client-client storage methods (like, for instance, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage&quot;&gt;localStorage&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef458bb52c2f11ac57190a2dd72c82f04f814ca0" translate="yes" xml:space="preserve">
          <source>The reason for the difference in behavior is that the keywords &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, and &lt;code&gt;exact&lt;/code&gt; are inherently mandatory, whereas plain values and a keyword called &lt;code&gt;ideal&lt;/code&gt; are not. Here's a fuller example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b49982c13482c8f7ae0fe09c5c43fb30d99c7f" translate="yes" xml:space="preserve">
          <source>The reason we have the &lt;code&gt;this.onerror=null&lt;/code&gt; in the function is that the browser will be stuck in an endless loop if the onerror image itself generates an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b9e0e47c2d2a472b05c855f93365325c5ccebb" translate="yes" xml:space="preserve">
          <source>The received offer is stored as the remote description by calling &lt;code&gt;setRemoteDescription()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff3e3f0d91cec4dc6e065aad931128d63de2c94" translate="yes" xml:space="preserve">
          <source>The receiver sends a FIR packet to the sender any time it falls bahind or loses packets and cannot decode the incoming stream any longer because of the lost data. This tells the sender to send a full frame instead of a delta frame, so that the receiver can catch up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd483012680c564dc239261f0b928f7453292793" translate="yes" xml:space="preserve">
          <source>The recipient calls &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription(createdAnswer)&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription(createdAnswer)&lt;/code&gt;&lt;/a&gt; to set the answer as its local description. The recipient now knows the configuration of both ends of the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc0258099173230b2edad9a270e2f0c684bace0" translate="yes" xml:space="preserve">
          <source>The recipient does any setup it needs to do for its end of the call: capture its local media, and attach each media tracks into the peer connection via &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt;&lt;code&gt;RTCPeerConnection.addTrack()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188fae6f57073b5ef4251ac5ddf9dc3f5aa77f06" translate="yes" xml:space="preserve">
          <source>The recipient receives the offer and calls &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt; to record it as the &lt;em&gt;remote description&lt;/em&gt; (the description of the other end of the connection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5153995139709c24e66829d3fd2a26aeb69914" translate="yes" xml:space="preserve">
          <source>The recipient then creates an answer by calling &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa21f466be0d1d855d96ed3f7fbcf47525b864bb" translate="yes" xml:space="preserve">
          <source>The recipient uses the signaling server to send the answer to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071adf505dbc1ceb7e22ee85fe9ba3c10d279241" translate="yes" xml:space="preserve">
          <source>The recommended encoding for the Web: &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07e2d450cae4d2263886111a7cf2b3072f9e104" translate="yes" xml:space="preserve">
          <source>The recommended way to enable cross-site scripting is to use the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; HTTP header in the response to the XMLHttpRequest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16eb601ba921724f1f08ab687e82299dcf6ddfc4" translate="yes" xml:space="preserve">
          <source>The reconnection time to use when attempting to send the event. This must be an integer, specifying the reconnection time in milliseconds. If a non-integer value is specified, the field is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cabfdf68ec944ceb43d22da4785136888a7564b" translate="yes" xml:space="preserve">
          <source>The recording process's resolution handler receives as input an array of media data &lt;code&gt;Blob&lt;/code&gt;s locally known as &lt;code&gt;recordedChunks&lt;/code&gt;. The first thing we do is merge the chunks into a single &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; whose MIME type is &lt;code&gt;&quot;video/webm&quot;&lt;/code&gt; by taking advantage of the fact that the &lt;a href=&quot;../blob/blob&quot;&gt;&lt;code&gt;Blob()&lt;/code&gt;&lt;/a&gt; constructor concatenates arrays of objects into one object. Then &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL()&lt;/code&gt;&lt;/a&gt; is used to create an URL that references the blob; this is then made the value of the recorded video playback element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute (so that you can play the video from the blob) as well as the target of the download button's link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2134a96743ea1d6ff4132336bf0180de162ca7" translate="yes" xml:space="preserve">
          <source>The rectangle used as the bounds of the intersection root can be adjusted by setting the &lt;strong&gt;root margin&lt;/strong&gt;, &lt;code&gt;rootMargin&lt;/code&gt;, when creating the &lt;a href=&quot;intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt;. The values in &lt;code&gt;rootMargin&lt;/code&gt; define offsets added to each side of the intersection root's bounding box to create the final intersection root bounds (which are disclosed in &lt;a href=&quot;intersectionobserverentry/rootbounds&quot;&gt;&lt;code&gt;IntersectionObserverEntry.rootBounds&lt;/code&gt;&lt;/a&gt; when the callback is executed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3d2a33659ae6b1a6ec6cf13251999c0ea5a19b" translate="yes" xml:space="preserve">
          <source>The rectangle's corner is located at (10, 20). It has a width of 150 and a height of 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3317a070c3e4a9a5e7a69acd981e586b9aeb49e6" translate="yes" xml:space="preserve">
          <source>The rectangle's height. Positive values are down, and negative are up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0b3d19d56aee5fdc41199e31ada0ffa1950259" translate="yes" xml:space="preserve">
          <source>The rectangle's top-left corner is at (20, 10). It has a width of 150 and a height of 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747ba377aad5018d35ac16582799df4f1495e01d" translate="yes" xml:space="preserve">
          <source>The rectangle's top-left corner is at (20, 10). It has a width of 160 and a height of 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fecc4b449834ca8e6dbb4837635297b0fb2ac9" translate="yes" xml:space="preserve">
          <source>The rectangle's width. Positive values are to the right, and negative to the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6c37773602e5790ea6c201c1eda0de4815a83c" translate="yes" xml:space="preserve">
          <source>The referenced &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; does not have the correct number of channels, or it has a different sample rate to the associated &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0764ce8edbfe505581d6ec5be92bbfd20bf4e183" translate="yes" xml:space="preserve">
          <source>The referenced constructor is not a constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873c045ab6022308fae691dc86bda0095d9e6044" translate="yes" xml:space="preserve">
          <source>The region code is derived from the ISO 3166-2 country subdivision name standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508d05ed5087be1c2926f89f7072d5bc16167468" translate="yes" xml:space="preserve">
          <source>The registration steps are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f878d9de8b722f6ba7191492dc79715996d5c11" translate="yes" xml:space="preserve">
          <source>The related address (&lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt;) and port are not used at all by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; itself; they are provided for analysis and diagnostic purposes only, and their inclusion may be blocked by security systems, so do not rely on them having non-&lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b8d4ce82f123b3e45028a3c607199bdead99e5" translate="yes" xml:space="preserve">
          <source>The related address and port (&lt;a href=&quot;relatedport&quot;&gt;&lt;code&gt;relatedPort&lt;/code&gt;&lt;/a&gt;) are not used at all by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; itself; they are provided for analysis and diagnostic purposes only, and their inclusion may be blocked by security systems, so do not rely on them having non-&lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859c97afb55b2230c01fbb2b9cbaeb6490f8e9e8" translate="yes" xml:space="preserve">
          <source>The related address and port are not used by ICE itself, and are only present for diagnostic and Quality-of-Service purposes. They may in fact be omitted for security reasons, but if present can be a useful tool during debugging. See the &lt;a href=&quot;#Example&quot;&gt;example&lt;/a&gt;, which shows a bit of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8209ed828c28b1bf8c056e1bf6bb463ffd9097" translate="yes" xml:space="preserve">
          <source>The related address is included in ICE candidates despite not being used by ICE itself. &lt;code&gt;relatedAddress&lt;/code&gt; can be used for diagnostic purposes; by observing the relationships between the various types of candidates and their addresses and related addresses. &lt;code&gt;relatedAddress&lt;/code&gt; can also be used by Quality-of-Service (QoS) mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994cda59ad90900e8d1d859dc8f07eb7b758271b" translate="yes" xml:space="preserve">
          <source>The reload may be blocked and a &lt;code&gt;SECURITY_ERROR&lt;/code&gt;&lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; thrown. This happens if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;origin&lt;/a&gt; of the script calling &lt;code&gt;Location.reload()&lt;/code&gt; differs from the origin of the page that owns the &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; object. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;Same-origin policy&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd65bea5c2bf99b66779096918fd06c3960bd61b" translate="yes" xml:space="preserve">
          <source>The remaining bytes are the encoded message payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1ed264b0ea311445d4bfd82278c235bdabd844" translate="yes" xml:space="preserve">
          <source>The remote address, &lt;code&gt;relatedAddress&lt;/code&gt;, is the dotted quad (for IPv4) or colon-delineated 64-bit address (for IPv6) immediately following the text &lt;code&gt;&quot;raddr&quot;&lt;/code&gt;, or &lt;code&gt;&quot;192.168.2.77&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361e01fa77654428c1e44850ddbdd38f90f15870" translate="yes" xml:space="preserve">
          <source>The remote end is set up similarly, except that we don't need to explicitly create an &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; ourselves, since we're going to be connected through the channel established above. Instead, we set up a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event handler; this will be called when the data channel is opened; this handler will receive an &lt;code&gt;RTCDataChannel&lt;/code&gt; object; you'll see this below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f75df3072cae7f45f5b98ce602bb30d12dfbf3c" translate="yes" xml:space="preserve">
          <source>The remote peer has created an offer and used the signaling server to deliver it to the local peer, which has set the offer as the remote description by calling &lt;a href=&quot;rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9b7f8c7559eb9aa8c0cd05240e2dfe392d8af8" translate="yes" xml:space="preserve">
          <source>The remote peer has created an offer and used the signaling server to deliver it to the local peer, which has set the offer as the remote description by calling &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df468de7c7e323e70d131c35295c43529333c12" translate="yes" xml:space="preserve">
          <source>The remote peer's parameters are received during ICE signaling and delivered to the transport when the client calls &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2298766cd1dbb3162eeeef5e28dd104db35f2b17" translate="yes" xml:space="preserve">
          <source>The remote port, &lt;code&gt;relatedPort&lt;/code&gt;, is the number immediately following the &lt;code&gt;&quot;rport&quot;&lt;/code&gt; label on the a-line, or 32768.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef6814c72ba0f7a47b8f4b9b8f2af03ee3ad8d5" translate="yes" xml:space="preserve">
          <source>The removed child node still exists in memory, but is no longer part of the DOM. With the first syntax-form shown, you may reuse the removed node later in your code, via the &lt;code&gt;oldChild&lt;/code&gt; object reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a613df5aa31214116a5fb4b88d70819cd30e9d8d" translate="yes" xml:space="preserve">
          <source>The rendering context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2523c90c093abb39b3b95b8a12aa44b83eb77d22" translate="yes" xml:space="preserve">
          <source>The rendering context interfaces: &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d20a3db025778bee0a2c3dc2ec5206415624e10" translate="yes" xml:space="preserve">
          <source>The replaceState() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46d9e8717c0c871ca0b263d61f2894dfa87fcb5" translate="yes" xml:space="preserve">
          <source>The request is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75db6fe0e0ef303255be381b6c11bae49b45690" translate="yes" xml:space="preserve">
          <source>The request is not allowed by the user agent or the platform in the current context, possibly because the user denied permission (No legacy code value and constant name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512a093e36f7645eb1c8d58121804754efd9e914" translate="yes" xml:space="preserve">
          <source>The request is pending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df767edb9345455a270d9c68f67c7e38f655d0f" translate="yes" xml:space="preserve">
          <source>The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the &lt;code&gt;IDBRequest&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dac5628e73c21ceed20c8e430d90f116dd513a6" translate="yes" xml:space="preserve">
          <source>The request to access the directory was denied for security reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dfd3c31ffaa4d6bfd9b0c5a68dc96690034947" translate="yes" xml:space="preserve">
          <source>The request to access the file was denied for security reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc500f248f5490044b7c3d5687f9b9355866b75" translate="yes" xml:space="preserve">
          <source>The request to change the version of a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e547001be2c2d115b6d70c187e369329c7633789" translate="yes" xml:space="preserve">
          <source>The request to upload the image file is opened by calling &lt;code&gt;XMLHttpRequest&lt;/code&gt;'s &lt;code&gt;open()&lt;/code&gt; method to start generating a POST request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eebed2d8b7862d62041e0a79d8ac24f70f8a6d" translate="yes" xml:space="preserve">
          <source>The request violates a policy decision, or the origin is not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#Definition_of_an_origin&quot;&gt;a valid scheme/host/port tuple&lt;/a&gt; (this can happen if the origin uses the &lt;code&gt;file:&lt;/code&gt; or &lt;code&gt;data:&lt;/code&gt; scheme, for example). For example, the user may have their browser configured to deny permission to persist data for the specified origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27d73de0540bb0692df6d6250082266d6f50b91" translate="yes" xml:space="preserve">
          <source>The request was aborted (using &lt;a href=&quot;../abortcontroller/abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607056b8b47965c02a8233e97e2b3f4759533495" translate="yes" xml:space="preserve">
          <source>The request was made on a source object that has been deleted or removed, or if the transaction has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa807f87641f9e0b486b56184761dceb44c25573" translate="yes" xml:space="preserve">
          <source>The request you want to add to the cache. This can be a &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object or a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8b0b96d7c70e6535c4fbc1c65b9b7a3dabbb27" translate="yes" xml:space="preserve">
          <source>The requested &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object from the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the index is not less than the length of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f37bcb36579fbce95ea654afa78855e5708690c" translate="yes" xml:space="preserve">
          <source>The requested object store is not in this transaction's scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe77f19dbe24767280455534758b1131f1ffc92" translate="yes" xml:space="preserve">
          <source>The requested operation involves an impossible change, such as moving a directory inside itself or one of its own child directories, or copying an item within the same directory without renaming it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4472535826f6fe7d50e095f9d6e8833b12ed614" translate="yes" xml:space="preserve">
          <source>The requests are returned in the same order that they were inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7307810df0c38a4ca489033dadb2b26ac5a98e" translate="yes" xml:space="preserve">
          <source>The reset event is raised when the user clicks a reset button in a form (&lt;code&gt;&amp;lt;input type=&quot;reset&quot;/&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a91b415bc4afd08502779d842c1712403c541f" translate="yes" xml:space="preserve">
          <source>The resize event is fired after the window has been resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49273aaa88397ea54b03c030416faabde97ba268" translate="yes" xml:space="preserve">
          <source>The resolved URL of the requested resource. This value doesn't change even if the request is redirected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c629d7e05cab99885dd8b46a33c633cdd707b4" translate="yes" xml:space="preserve">
          <source>The resource type to be fetched is a Blob, and the method is not &lt;code&gt;GET&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2444df27cdf44070530e5d367cab75cadd0a0d48" translate="yes" xml:space="preserve">
          <source>The response &lt;a href=&quot;body&quot;&gt;&lt;code&gt;Body&lt;/code&gt;&lt;/a&gt; returned by a successful &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is exposed by default as a &lt;a href=&quot;readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;, and can have a reader attached to it, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f18c6b0b83630c802184b795148ae47ebb924a" translate="yes" xml:space="preserve">
          <source>The response data: &lt;a href=&quot;response&quot;&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;responsetext&quot;&gt;&lt;code&gt;responseText&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;responsexml&quot;&gt;&lt;code&gt;responseXML&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87cb2448fc507148fd6cbcfd00d30b4eb75f1a1" translate="yes" xml:space="preserve">
          <source>The response is easy to build, but might be a little bit difficult to understand. The full explanation of the Server handshake can be found in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/RFC%206455,%20section%204.2.2&quot;&gt;RFC 6455, section 4.2.2&lt;/a&gt;. For our purposes, we'll just build a simple response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3606f8a953dde150808e49ac7d1a8d829205e52c" translate="yes" xml:space="preserve">
          <source>The response provided is defined by the &lt;a href=&quot;../mediacapabilitiesinfo&quot;&gt;&lt;code&gt;MediaCapabilitiesInfo&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3673f3628212dfc870dcc0b50b902d51b8bbe0ce" translate="yes" xml:space="preserve">
          <source>The response types are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fd09e21b5921b05618722f76b78f939ae78413" translate="yes" xml:space="preserve">
          <source>The rest of the code is pretty simple: it adds an event listener to the &quot;Animate&quot; button so that when it's clicked by the user, the box is animated by calling &lt;a href=&quot;../element/animate&quot;&gt;&lt;code&gt;Element.animate()&lt;/code&gt;&lt;/a&gt; on it, providing the &lt;code&gt;boxRotationKeyframes&lt;/code&gt; and &lt;code&gt;boxRotationTiming&lt;/code&gt; objects to describe the animation that should occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d288332d1f4218f56eec5abce2d48616b8d15fe" translate="yes" xml:space="preserve">
          <source>The restriction in the rules above ensures that the two transformations are the inverse one of the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ba511d53c095cc32cdef050c3e33a268243e22" translate="yes" xml:space="preserve">
          <source>The restrictions established in the rules above ensures that the two transformations are the inverse one of the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9adf1dd7c53ed530d36c4484bc331a2cf5fc8f4" translate="yes" xml:space="preserve">
          <source>The result follows. Note that the frame's contents have been scrolled to show the section named &quot;Overview&quot;, and that the value of the &lt;code&gt;pageYOffset&lt;/code&gt; property is shown with the corresponding value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74442998644fa81a03c875edcf0a67bba8bcd353" translate="yes" xml:space="preserve">
          <source>The result from this function is a string that can be used when calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; functions to set drawing colors. For example, for a &lt;a href=&quot;../pointerevent/pointerid&quot;&gt;&lt;code&gt;PointerEvent.pointerId&lt;/code&gt;&lt;/a&gt; value of 10, the resulting string is &quot;#aaa&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32062773a6801cc268d0a821a177430ea447bc3d" translate="yes" xml:space="preserve">
          <source>The result from this function is a string that can be used when calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; functions to set drawing colors. For example, for a &lt;a href=&quot;touch/identifier&quot;&gt;&lt;code&gt;Touch.identifier&lt;/code&gt;&lt;/a&gt; value of 10, the resulting string is &quot;#aaa&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49851887c433699f2076e7466e96c422b4856ac6" translate="yes" xml:space="preserve">
          <source>The result is a &lt;code&gt;Boolean&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the event can be canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6576a258bad58cb7390e3906b9fc2a0151cef2b" translate="yes" xml:space="preserve">
          <source>The result is an array, &lt;code&gt;noteFreq&lt;/code&gt;, with an object for each octave. Each octave object has named properties in it where the property name is the name of the note (such as &quot;C#&quot; to represent C-sharp) and the property's value is the note's frequency in Hertz. In part, the resulting object looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e8eae11e2f313ea62138a7cc136b0aafc3114f" translate="yes" xml:space="preserve">
          <source>The result is something similar to the below. Note the Panels window filling all available vertical space at the left of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faacd46ba2798dfe6d96de925d3e8fb01c4350a" translate="yes" xml:space="preserve">
          <source>The result looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061a88a5ecfcb957cdf9bad679f80fbc216e9aad" translate="yes" xml:space="preserve">
          <source>The result of parsing push event data as JSON. This could be anything that can be represented by JSON &amp;mdash; an object, an array, a string, a number...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0181bf395956eaa8e6c4dcfcda95ab848347f46" translate="yes" xml:space="preserve">
          <source>The result of running the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-prohibits-mixed-security-contexts-algorithm&quot;&gt;prohibits mixed security contexts algorithm&lt;/a&gt; on the document's &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-settings-object&quot;&gt;settings object&lt;/a&gt; is &lt;code&gt;&quot;Prohibits Mixed Security Contexts&quot;&lt;/code&gt; and &lt;var&gt;presentationUrl&lt;/var&gt; is an &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-a-priori-unauthenticated-url&quot;&gt;a priori unauthenticated URL&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df607b065cf643a3451172aed026012697450952" translate="yes" xml:space="preserve">
          <source>The result types are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3455678ce34c7022464ddcfbe2a52a3ac8b738e4" translate="yes" xml:space="preserve">
          <source>The result value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; object containing the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9810149429af37fde91790b342f962cb2ddfaa96" translate="yes" xml:space="preserve">
          <source>The resulting &lt;a href=&quot;pushsubscription&quot;&gt;&lt;code&gt;PushSubscription&lt;/code&gt;&lt;/a&gt; includes all the information that the application needs to send a push message: an endpoint and the encryption key needed for sending data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3168945f35db497a0f2d50af9c758ca20ff9e8" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;trackList&lt;/code&gt; contains an array of audio tracks whose &lt;code&gt;kind&lt;/code&gt; is one of those in the array &lt;code&gt;wantedKinds&lt;/code&gt;, with each entry providing the track's &lt;a href=&quot;audiotrack/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;audiotrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;audiotrack/label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34f695e85c55f5df64a31d399b39d414e29ba61" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;trackList&lt;/code&gt; contains an array of audio tracks whose &lt;code&gt;kind&lt;/code&gt; is one of those in the array &lt;code&gt;wantedKinds&lt;/code&gt;, with each entry providing the track's &lt;a href=&quot;id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b7ff2dc8605ce04e326572550556a711e5fd14" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;trackList&lt;/code&gt; contains an array of video tracks whose &lt;code&gt;kind&lt;/code&gt; is one of those in the array &lt;code&gt;wantedKinds&lt;/code&gt;, with each entry providing the track's &lt;a href=&quot;id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4eb7de97ff96c3ef8e7751d0d53942e01274c2b" translate="yes" xml:space="preserve">
          <source>The resulting XML is compatible with the HTML parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45821af9ef37cc9d6f3f114623d01f51d467f501" translate="yes" xml:space="preserve">
          <source>The resulting canvas looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff396e51c38446712a126a8fbf757087a912524b" translate="yes" xml:space="preserve">
          <source>The resulting content looks like this in action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e37f55043fcbab763a7fa9abbaa22098a479e5" translate="yes" xml:space="preserve">
          <source>The resulting content looks like this. You can see output into the log by moving the mouse in and out of the box, clicking in it, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c091004d1767cc52725e473ff8565a391bf6f094" translate="yes" xml:space="preserve">
          <source>The resulting content looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befa351a04ef44a451c00c34d0f2d0bf82b18317" translate="yes" xml:space="preserve">
          <source>The resulting graph looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcde48402a2462f3bc831b7a33e5b161c6f4e4c" translate="yes" xml:space="preserve">
          <source>The resulting image looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90886ed52c554b57d377d2b2fd4860703c4edc6" translate="yes" xml:space="preserve">
          <source>The resulting output is shown below. Try tapping, clicking, or touching the box and see what happens. For full effect, try it with a variety of pointer types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ef6f89fc13ab7f4bd455502ada1bababe78a1a" translate="yes" xml:space="preserve">
          <source>The resulting page looks like this. Try experimenting with scrolling around and watch how visibility changes affect the timers in each ad. Also note that each ad is replaced after one minute of visibility, and how the timers pause while the document is tabbed into the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea58325cd9fcc1a1d00e9ad78750b4e08922132" translate="yes" xml:space="preserve">
          <source>The results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8621f7c8196933369309a802ebe3861dd908cb5a" translate="yes" xml:space="preserve">
          <source>The results can be one of three different types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b849cffa33c5731828317c0494c0e6528931b7" translate="yes" xml:space="preserve">
          <source>The retrieved value from the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e3c304a751250f3e1dda784c85aa11103e7ba3" translate="yes" xml:space="preserve">
          <source>The retrieved value from the referenced object store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa9aef0d09af0cbf7ffbf6acc317ea621c8e900" translate="yes" xml:space="preserve">
          <source>The retuned value is the &lt;a href=&quot;../fontfaceset&quot;&gt;&lt;code&gt;FontFaceSet&lt;/code&gt;&lt;/a&gt; interface of the document. The &lt;code&gt;FontFaceSet&lt;/code&gt; interface is useful for loading new fonts, checking the status of previously loaded fonts etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f090ad4350c55f76594b6d7011111620e72bd19a" translate="yes" xml:space="preserve">
          <source>The return value depends on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt;&lt;code&gt;MutationRecord.type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7609f8ba659c518eab333221e0f174f7b034b366" translate="yes" xml:space="preserve">
          <source>The return value depends on the subtype of the &lt;code&gt;PerformanceEntry&lt;/code&gt; object and affects the value of the &lt;a href=&quot;name&quot;&gt;&lt;code&gt;PerformanceEntry.name&lt;/code&gt;&lt;/a&gt; property as shown by the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cf1d88d2111cda9aec0739639d299971527df3" translate="yes" xml:space="preserve">
          <source>The return value depends on the subtype of the &lt;code&gt;PerformanceEntry&lt;/code&gt; object and the value of &lt;a href=&quot;entrytype&quot;&gt;&lt;code&gt;PerformanceEntry.entryType&lt;/code&gt;&lt;/a&gt;, as shown by the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410e1491980d3639e4dc9871cb54876d4d742e09" translate="yes" xml:space="preserve">
          <source>The return value for this method indicates whether the preference that controls Java is on or off - not whether the browser offers Java support in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e967358507ddf121f0ac1b3504f12f3631341013" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;false&lt;/code&gt; if event is cancelable and at least one of the event handlers which handled this event called &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;Event.preventDefault()&lt;/code&gt;&lt;/a&gt;. Otherwise it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7653ac2320958b27745f5f3621e3a9548c2a8f" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;null&lt;/code&gt; if no pair of candidates has been selected yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbb43a9d3caaef1dd5937bf1333d44bf07d7365" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;null&lt;/code&gt; if the extension is not supported, or an extension object otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13343519b37aeadeec4ed6fe2879547e0cac6073" translate="yes" xml:space="preserve">
          <source>The return value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which, when the offer has been created, is resolved with a &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object containing the newly-created offer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e0c1e37c30e3b00d6e443ae6747b4758b64d6a" translate="yes" xml:space="preserve">
          <source>The return value is a bitmask with the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938619992f18f10f1ee59f8d2e856e2a346ab476" translate="yes" xml:space="preserve">
          <source>The return value to be returned to the function that called &lt;a href=&quot;window/showmodaldialog&quot;&gt;&lt;code&gt;window.showModalDialog()&lt;/code&gt;&lt;/a&gt; to display the window as a modal dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2a5ba74bd33d5cabf5a1202d16f49ef0402c31" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt; object will contain active values for all supported CSS property &lt;u&gt;longhand&lt;/u&gt; names. An example longhand name is &lt;code&gt;border-bottom-width&lt;/code&gt; with &lt;code&gt;border-width&lt;/code&gt; and &lt;code&gt;border&lt;/code&gt; being example &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties&quot;&gt;shorthand property names&lt;/a&gt;. It is safest to query for values using only longhand names like &lt;code&gt;font-size&lt;/code&gt;. Querying with shorthand names like &lt;code&gt;font&lt;/code&gt; will not work with the majority of browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5622d6c4c072120dea0af197aa531ca8773c2763" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; Collection contains &lt;em&gt;all&lt;/em&gt; elements with the given &lt;code&gt;name&lt;/code&gt;, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;, and even elements which do not support the &lt;code&gt;name&lt;/code&gt; attribute at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b0718d92d37add2f041e9dee0a0852da65398" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;DOMRect&lt;/code&gt; object can be modified in modern browsers. This was not true with older versions which effectively returned &lt;code&gt;DOMRectReadOnly&lt;/code&gt;. With IE and Edge, not being able to add missing properties to their returned &lt;code&gt;ClientRect&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/hh826029(VS.85).aspx&quot;&gt;MSDN: ClientRect&lt;/a&gt;&lt;/code&gt; object prevents backfilling &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a17165b565b0a6638ebce46b2b2f436944057ee" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;RTCStatsReport&lt;/code&gt; accumulates the statistics for all of the streams being sent using the &lt;code&gt;RTCRtpSender&lt;/code&gt;, as well as the statistics for any dependencies those streams have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19791d28f53beb77653811016221392c8895ac3" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;intervalID&lt;/code&gt; is a numeric, non-zero value which identifies the timer created by the call to &lt;code&gt;setInterval()&lt;/code&gt;; this value can be passed to &lt;a href=&quot;clearinterval&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.clearInterval()&lt;/code&gt;&lt;/a&gt; to cancel the timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b05287f7e12f40b78ff349d3fb435494388ca6a" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;style&lt;/code&gt; is a &lt;em&gt;live&lt;/em&gt;&lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt; object, which updates itself automatically when the element's style is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cff674b07fc60e34164f728426989af27937c5" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;timeoutID&lt;/code&gt; is a positive integer value which identifies the timer created by the call to &lt;code&gt;setTimeout()&lt;/code&gt;; this value can be passed to &lt;a href=&quot;cleartimeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt; to cancel the timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b58a93d212645977e19d3497d85d1bb4cc0a2c5" translate="yes" xml:space="preserve">
          <source>The returned clone is copied by value, not reference, so a change in either &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; does not affect the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2eaae48e06722a63ea0d6c08b2ffb7c4bd3ea15" translate="yes" xml:space="preserve">
          <source>The returned configuration is the last configuration applied via &lt;a href=&quot;setconfiguration&quot;&gt;&lt;code&gt;setConfiguration()&lt;/code&gt;&lt;/a&gt;, or if &lt;code&gt;setConfiguration()&lt;/code&gt; hasn't been called, the configuration the &lt;code&gt;RTCPeerConnection&lt;/code&gt; was constructed with. The configuration includes a list of the ICE servers used by the connection, information about transport policies, and identity information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8736d48817dc8745fce81a8ba9960479f5b618f" translate="yes" xml:space="preserve">
          <source>The returned document is pre-constructed with the following HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3c8819b060a50055604491d20af948b28f08e4" translate="yes" xml:space="preserve">
          <source>The returned key is a &lt;a href=&quot;../cryptokey&quot;&gt;&lt;code&gt;CryptoKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0df41f7d8066d842c54604301531b84d9096f34" translate="yes" xml:space="preserve">
          <source>The returned key is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CryptoKeyPair&quot;&gt;&lt;code&gt;CryptoKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667adeaeec65b91a8d704ed868a36ae350e281ff" translate="yes" xml:space="preserve">
          <source>The returned list is &lt;em&gt;live&lt;/em&gt;; that is, as tracks are added to and removed from the media element, the list's contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new audio tracks are added or existing ones removed. See &lt;a href=&quot;../audiotracklist#Event_handlers&quot;&gt;Event handlers&lt;/a&gt; in &lt;a href=&quot;../audiotracklist&quot;&gt;AudioTrackList&lt;/a&gt; to learn more about watching for changes to a media element's track list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9759ff7e3df82bf1ca89f7b935bbfc4f9779dbf5" translate="yes" xml:space="preserve">
          <source>The returned list is &lt;em&gt;live&lt;/em&gt;; that is, as tracks are added to and removed from the media element, the list's contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new video tracks are added or existing ones removed. See &lt;a href=&quot;../videotracklist#Event_handlers&quot;&gt;Event handlers&lt;/a&gt; in &lt;a href=&quot;../videotracklist&quot;&gt;VideoTrackList&lt;/a&gt; to learn more about watching for changes to a media element's track list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eb8237b20206eb048d55287e8a8f77dc095792" translate="yes" xml:space="preserve">
          <source>The returned list is ordered as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb186396730abedfd776c0a109c41f857dba9300" translate="yes" xml:space="preserve">
          <source>The returned object identifies the current values of every constrainable property, including those which are platform defaults rather than having been expressly set by the site's code. To instead fetch the most-recently established constraints for the track's properties, as specified by the site's code, use &lt;a href=&quot;getconstraints&quot;&gt;&lt;code&gt;getConstraints()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a98a8966021ff481bf1d75570550a8cb22ac5c" translate="yes" xml:space="preserve">
          <source>The returned object is a &lt;a href=&quot;../stylesheetlist&quot;&gt;&lt;code&gt;StyleSheetList&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../cssstylesheet&quot;&gt;&lt;code&gt;CSSStyleSheet&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b525b06d4a82fe6e00c84533a05b84c03b625d" translate="yes" xml:space="preserve">
          <source>The returned object is of the same &lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt; type as the object returned from the element's &lt;a href=&quot;../htmlelement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property; however, the two objects have different purposes. The object returned from &lt;code&gt;getComputedStyle&lt;/code&gt; is read-only and can be used to inspect the element's style (including those set by a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element or an external stylesheet). The &lt;code&gt;&lt;em&gt;elt&lt;/em&gt;.style&lt;/code&gt; object should be used to set styles on a specific element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c941210909a18b4ac66a53effc03e914b798d672" translate="yes" xml:space="preserve">
          <source>The returned promise rejects with an &lt;code&gt;AbortError&lt;/code&gt; if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; is already showing a payment panel. Only one payment panel may be visible at a time &lt;em&gt;across all documents loaded by the user agent&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bfe3bc61044a91f007af037c4823a00409980e" translate="yes" xml:space="preserve">
          <source>The returned rectangles do not include the bounds of any child elements that might happen to overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3a9e1ce4aa4cea5846abb527c26e05a45b7999" translate="yes" xml:space="preserve">
          <source>The returned set of constraints doesn't necessarily describe the actual state of the media; if any of the constraints couldn't be met, they are still included in the returned object as originally set by the site's code. To get the currently active settings for all constrainable properties, you should instead call &lt;a href=&quot;getsettings&quot;&gt;&lt;code&gt;getSettings()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9a30372212f8970e2abee4ec276c5b5d850147" translate="yes" xml:space="preserve">
          <source>The returned statistics include those from all streams which are coming in through the &lt;code&gt;RTCRtpReceiver&lt;/code&gt;, as well as any of their dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3131c7a22bdef483a6a84d41ff965bfa8d4985" translate="yes" xml:space="preserve">
          <source>The returned type depends on the uniform type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59c554e80873a880007d53cd5349f87a62f1a78" translate="yes" xml:space="preserve">
          <source>The returned value can be of any type. If no semantic interpretation has been returned by the speec recognition system, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddf9ee4d23d9aa520859d7d2e10a6f2c8dbcb06" translate="yes" xml:space="preserve">
          <source>The returned value is a &lt;a href=&quot;../domrect&quot;&gt;&lt;code&gt;DOMRect&lt;/code&gt;&lt;/a&gt; object which is the union of the rectangles returned by &lt;a href=&quot;getclientrects&quot;&gt;&lt;code&gt;getClientRects()&lt;/code&gt;&lt;/a&gt; for the element, i.e., the CSS border-boxes associated with the element. The result is the smallest rectangle which contains the entire element, with read-only &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; properties describing the overall border-box in pixels. Properties other than &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are relative to the top-left of the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4e5b0c068b7ade0b6e0ca985a7312147f6317b" translate="yes" xml:space="preserve">
          <source>The returned value is a SVGPoint object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8878b306d212afaeba4ee8530e4a3e8d4837fc5" translate="yes" xml:space="preserve">
          <source>The returned value is a collection of &lt;a href=&quot;../domrect&quot;&gt;&lt;code&gt;DOMRect&lt;/code&gt;&lt;/a&gt; objects, one for each CSS border box associated with the element. Each &lt;a href=&quot;../domrect&quot;&gt;&lt;code&gt;DOMRect&lt;/code&gt;&lt;/a&gt; object contains read-only &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; properties describing the border box, in pixels, with the top-left relative to the top-left of the viewport. For tables with captions, the caption is included even though it's outside the border box of the table. When called on SVG elements other than an outer-&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; the &quot;viewport&quot; that the resulting rects are relative to is the viewport that the element's outer-&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; establishes (and to be clear, the rects are also transformed by the outer-&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;'s &lt;code&gt;viewBox&lt;/code&gt; transform, if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6807f6034f505a685e2c64bc436096156c5a9ed5" translate="yes" xml:space="preserve">
          <source>The returned value is not a JavaScript array, but has the &lt;code&gt;length&lt;/code&gt; property and supports accessing individual items using bracket notation (&lt;code&gt;plugins[2]&lt;/code&gt;), as well as via &lt;code&gt;item(&lt;var&gt;index&lt;/var&gt;)&lt;/code&gt; and &lt;code&gt;namedItem(&lt;em&gt;&quot;name&quot;&lt;/em&gt;)&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8e2398bdcc9e228696df8b15f034eb71c17066" translate="yes" xml:space="preserve">
          <source>The returned value is the added child except when &lt;code&gt;newNode&lt;/code&gt; is a &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, in which case the empty &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae11efea977cd753074bdbc8ecdb20f8ec6d636" translate="yes" xml:space="preserve">
          <source>The returned value is the appended child except when the given child is a &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, in which case the empty &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afd77f92b7e7adf2b0d82f560ad3d4b4da3c36e" translate="yes" xml:space="preserve">
          <source>The returned value is, in certain known cases, expressly inaccurate by deliberate intent. In particular, to avoid the so called CSS History Leak security issue, browsers may expressly &quot;lie&quot; about the used value for a link and always return values as if a user has never visited the linked site. See &lt;a href=&quot;http://blog.mozilla.com/security/2010/03/31/plugging-the-css-history-leak/&quot;&gt;http://blog.mozilla.com/security/2010/03/31/plugging-the-css-history-leak/&lt;/a&gt; and &lt;a href=&quot;http://hacks.mozilla.org/2010/03/privacy-related-changes-coming-to-css-vistited/&quot;&gt;http://hacks.mozilla.org/2010/03/privacy-related-changes-coming-to-css-vistited/&lt;/a&gt; for details of the examples of how this is implemented. Most other modern browsers have applied similar changes to the application of pseudo-selector styles and the values returned by &lt;code&gt;getComputedStyle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae60d368f6b0b0f03d972c0c34aedb57c22e31fb" translate="yes" xml:space="preserve">
          <source>The returned value represents the time elapsed since the &lt;a href=&quot;../domhighrestimestamp#The_time_origin&quot;&gt;time origin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ead2b329112670a95f289d67147efed8ecfb29" translate="yes" xml:space="preserve">
          <source>The returned value typically reflects a remote description which has been received over the signaling server (as either an offer or an answer) and then put into effect by your code calling &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt; in response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6102d5c332d39c9f4042ae3fb5712997e1cfccec" translate="yes" xml:space="preserve">
          <source>The returned values for different types of nodes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1468b597055dcd9e049643b06a32c037abd703" translate="yes" xml:space="preserve">
          <source>The root node at which to begin the &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;'s traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea94d19372280a9f2f2325bb0df0d1909bedfb9" translate="yes" xml:space="preserve">
          <source>The rotation angle, clockwise in radians. You can use &lt;code&gt;&lt;em&gt;degree&lt;/em&gt; * Math.PI / 180&lt;/code&gt; if you want to calculate from a degree value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e69a0834a5df9bfd5ffbd13b3c5f170c6764fe" translate="yes" xml:space="preserve">
          <source>The rotation center point is always the canvas origin. To change the center point, we will need to move the canvas by using the &lt;code&gt;translate()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81aa90391349db503bb8a2579cca11e81c664ffa" translate="yes" xml:space="preserve">
          <source>The rotation center point is always the canvas origin. To change the center point, you will need to move the canvas by using the &lt;a href=&quot;translate&quot;&gt;&lt;code&gt;translate()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bc300ea4f57106ce2d46be6f7625cdabf088a8" translate="yes" xml:space="preserve">
          <source>The rotation of the ellipse, expressed in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda8665d82b881c57254f6321051831be6338912" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;../authenticatorassertionresponse/authenticatordata&quot;&gt;AuthenticatorAssertionResponse.authenticatorData&lt;/a&gt;. Note that in AuthenticatorAssertionResponse the authenticatorData is exposed as a property in a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;Object&lt;/a&gt;. In AuthenticatorAttestationResponse the authenticatorData is a property in a &lt;a href=&quot;https://tools.ietf.org/html/rfc7049&quot;&gt;CBOR&lt;/a&gt; map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0488978a6c94ffe6f14e20614cc9f4a1835fdaf1" translate="yes" xml:space="preserve">
          <source>The same can be achieved by passing an array of arrays or an object literal to the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e2277404986c8646782c36e548a928abcb7f58" translate="yes" xml:space="preserve">
          <source>The sample rate is the number of those samples (or frames, since all samples of a frame play at the same time) that will play in one second, measured in Hz. The higher the sample rate, the better the sound quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a53bece156d138dd4d0d9e37ae07112bd0366ff" translate="yes" xml:space="preserve">
          <source>The sample rate of the linear audio data in sample-frames per second. All browsers must support sample rates in at least the range 8,000 Hz to 96,000 Hz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b818f24d4545205fcdbb039648087a6427c1af" translate="yes" xml:space="preserve">
          <source>The sample-rate of the linear audio data in sample-frames per second. All user agents are required to support a range of 22050kHz to 96000kHz, and may support a wider range than that. The most commonly-used rate is 44100kHz, which is the sample rate used by CD audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c59341f6cb181d9c89ffd6b78666adf41f59221" translate="yes" xml:space="preserve">
          <source>The scan looks for the tracks whose &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; values are &lt;code&gt;&quot;main&quot;&lt;/code&gt; and &lt;code&gt;&quot;commentary&quot;&lt;/code&gt; and remembers those &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt; objects. Once those have been found, the values of the two tracks' &lt;code&gt;enabled&lt;/code&gt; properties are exchanged, which results in swapping which of the two tracks is currently active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6859f790550a4fe289283bd7aeb36bdc095d6b54" translate="yes" xml:space="preserve">
          <source>The scissor box, dithering, and buffer writemasks can affect the &lt;code&gt;clear()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494be47190a22179fd3d1f1077dafabc8923313e" translate="yes" xml:space="preserve">
          <source>The script includes a function called &lt;code&gt;draw()&lt;/code&gt;, which is executed once the page finishes loading; this is done by listening for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event on the document. This function, or one like it, could also be called using &lt;a href=&quot;../../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;window.setTimeout()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval&quot;&gt;&lt;code&gt;window.setInterval()&lt;/code&gt;&lt;/a&gt;, or any other event handler, as long as the page has been loaded first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5108595f772906398427ea25f4c5897675a60fe4" translate="yes" xml:space="preserve">
          <source>The script itself is very simple. Each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; is assigned an ID attribute, which makes them easy to select using &lt;a href=&quot;../../document/getelementbyid&quot;&gt;&lt;code&gt;document.getElementById()&lt;/code&gt;&lt;/a&gt;. We then simply use &lt;code&gt;drawImage()&lt;/code&gt; to slice the rhino out of the first image and scale him onto the canvas, then draw the frame on top using a second &lt;code&gt;drawImage()&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339579b776e66cc71352f9512d3bfab055d24bf1" translate="yes" xml:space="preserve">
          <source>The scrollTo() method of the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface scrolls to a particular set of coordinates inside a given element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05705dfbe4dc126bb63f18da6157e9102e10c4d2" translate="yes" xml:space="preserve">
          <source>The second and subsequent values are sine and cosine components. You can think of it as the result of a Fourier transform, where you get frequency domain values from time domain value. Here, with &lt;code&gt;createPeriodicWave()&lt;/code&gt;, you specify the frequencies, and the browser performs a an inverse Fourier transform to get a time domain buffer for the frequency of the oscillator. Here, we only set one component at full volume (1.0) on the fundamental tone, so we get a sine wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c66b3128d4915bf5df26d7566de84b0d44379b" translate="yes" xml:space="preserve">
          <source>The second and subsequent values are sine and cosine components. You can think of it as the result of a Fourier transform, where you get frequency domain values from time domain value. Here, with &lt;code&gt;createPeriodicWave()&lt;/code&gt;, you specify the frequencies, and the browser performs an inverse Fourier transform to get a time domain buffer for the frequency of the oscillator. Here, we only set one component at full volume (1.0) on the fundamental tone, so we get a sine wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed26ff02e3d7088eec70e63c9c6a7d414762dc84" translate="yes" xml:space="preserve">
          <source>The second box has a single threshold, at the 50% mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aac47b05085ea6280179ef3e4b81364d7da5ce" translate="yes" xml:space="preserve">
          <source>The second byte, which currently has a value of 131, is another bitfield that breaks down as such:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca541d55c54504f874f98d3a61dacff566eb512a" translate="yes" xml:space="preserve">
          <source>The second example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server at &lt;code&gt;turnserver.example.org&lt;/code&gt; to negotiate connections. Logging into the TURN server will use the username &quot;webrtc&quot; and the creative password &quot;turnpassword&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62614c9bf8b8fdb8f9fbcc6481d8b0630a34083" translate="yes" xml:space="preserve">
          <source>The second key to compare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831762e517c29b73ad50f4418f3bcae9f02467e0" translate="yes" xml:space="preserve">
          <source>The second line indicates a type of term that we want to recognise. &lt;code&gt;public&lt;/code&gt; declares that it is a public rule, the string in angle brackets defines the recognised name for this term (&lt;code&gt;color&lt;/code&gt;), and the list of items that follow the equals sign are the alternative values that will be recognised and accepted as appropriate values for the term. Note how each is separated by a pipe character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5524f8a1ab13219601ef75e7cdd15ed5a9f77c" translate="yes" xml:space="preserve">
          <source>The second message contains a data field with the value &quot;some text&quot;. The third message contains a data field with the value &quot;another message\nwith two lines&quot;. Note the newline special character in the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146571a33096dd4aab510669ec4f88183560995e" translate="yes" xml:space="preserve">
          <source>The second of three properties that declare the USB protocol version supported by the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31525c3279d984f6b85c3ffe842e42099b1cb979" translate="yes" xml:space="preserve">
          <source>The second one takes a &lt;code&gt;VRFieldOfViewInit&lt;/code&gt; object as a single argument, which is just a dictionary containing the four degree values mentioned above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6ad41d031586cde59345b15fe4d4c995c868d5" translate="yes" xml:space="preserve">
          <source>The second parameter to the open method is the version of the database. The version of the database determines the database schema &amp;mdash; the object stores in the database and their structure. If the database doesn't already exist, it is created by the &lt;code&gt;open&lt;/code&gt; operation, then an &lt;code&gt;onupgradeneeded &lt;/code&gt;event is triggered and you create the database schema in the handler for this event. If the database does exist but you are specifying an upgraded version number, an &lt;code&gt;onupgradeneeded &lt;/code&gt;event is triggered straight away, allowing you to provide an updated schema in its handler. More on this later in &lt;a href=&quot;#Updating_the_version_of_the_database&quot;&gt;Updating the version of the database&lt;/a&gt; below, and the &lt;a href=&quot;../idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; reference page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15ac684032b6507cb10e8c88450f3558d923ba8" translate="yes" xml:space="preserve">
          <source>The second step is calling the methods that actually specify the paths to be drawn. We'll see these shortly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad2fb7f41394ea505b5c587de832e7591048821" translate="yes" xml:space="preserve">
          <source>The second syntax takes one parameter matching the condition of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@supports&quot;&gt;&lt;code&gt;@supports&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075c6fb4bcdc344f95b0169b72f4a74477d1c400" translate="yes" xml:space="preserve">
          <source>The second transformation method is &lt;code&gt;rotate()&lt;/code&gt;. We use it to rotate the canvas around the current origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48379bfed9b5442efebc3b3c79b91f14592a467" translate="yes" xml:space="preserve">
          <source>The second type of constructor (see above) creates a clone of an existing &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; object instance. Its parameter is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874350516c4d667faee4014681a3e8bd08626904" translate="yes" xml:space="preserve">
          <source>The second variant of the &lt;code&gt;drawImage()&lt;/code&gt; method adds two new parameters and lets us place scaled images on the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bde358f0ebdbdf55e470fdc293be0b3806b8472" translate="yes" xml:space="preserve">
          <source>The second way is the JavaScript Screen orientation API that can be used to get the current orientation of the screen itself and eventually lock it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e340ec145ebc47288d5d277f10100e180afe61" translate="yes" xml:space="preserve">
          <source>The secondary target for the event, if there is one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9ee1cd757818e675a53bef1f3a29f6327d33d8" translate="yes" xml:space="preserve">
          <source>The sections below will take an in-depth look into the ideas and implementation of the model, view, and projection matrices. These matrices are core to moving data around on the screen, and are concepts that transcend individual frameworks and engines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d096fabc984e721bc86630a492de1f38071eab" translate="yes" xml:space="preserve">
          <source>The security boundary imposed on IndexedDB prevents applications from accessing data with a different origin. For example, while an app or a page in &lt;a href=&quot;http://www.example.com/app/&quot;&gt;http://www.example.com/app/&lt;/a&gt; can retrieve data from &lt;a href=&quot;http://www.example.com/dir/&quot;&gt;http://www.example.com/dir/&lt;/a&gt;, because they have the same origin, it cannot retrieve data from &lt;a href=&quot;http://www.example.com:8080/dir/&quot;&gt;http://www.example.com:8080/dir/&lt;/a&gt; (different port) or &lt;a href=&quot;https://www.example.com/dir/&quot;&gt;https://www.example.com/dir/&lt;/a&gt; (different protocol), because they have different origins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a8c2cb8dd22b91e1096de78547a3ceafef5f63" translate="yes" xml:space="preserve">
          <source>The select event only fires when text inside a text input or textarea is selected. The event is fired &lt;em&gt;after&lt;/em&gt; the text has been selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29adac25e8497f7c379c8f6c111b977c7692f60" translate="yes" xml:space="preserve">
          <source>The selector methods accept one or more comma-separated selectors to determine what element or elements should be returned. For example, to select all paragraph (&lt;code&gt;p&lt;/code&gt;) elements in a document whose CSS class is either &lt;code&gt;warning&lt;/code&gt; or &lt;code&gt;note&lt;/code&gt;, you can do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c37c3fc44d8b8dd4957996d4f37739a773871af" translate="yes" xml:space="preserve">
          <source>The semantics around third-party cookie blocking policies in particular differ from browser to browser, but the core functionality is similar: cross-origin resources embedded in a third-party context are not given access to the same cookies and site storage that they would have access to when loaded in a first-party context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822837c0384344d1952ebf068a7fdd2eb9d5fdb0" translate="yes" xml:space="preserve">
          <source>The sender's set of associated streams is set to the list of streams passed into this method, &lt;code&gt;stream...&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e617a32f3da93b5d72400526d8ffaef033093f81" translate="yes" xml:space="preserve">
          <source>The sender's username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fc610c6c5769b21b9c993db011733aa4cc28c8" translate="yes" xml:space="preserve">
          <source>The sequence of events which occurs in response to this method being called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c486d33c3c797884060e506c5e915d224f6884f8" translate="yes" xml:space="preserve">
          <source>The serial number for the specified USB device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3916be0825bc2bb46c6eadb8295d6c8561d7401" translate="yes" xml:space="preserve">
          <source>The server can send other headers like Set-Cookie, or ask for authentication or redirects via other status codes, before sending the reply handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fe4ae6cb76d4a62c9b899f5a712d07f2f53397" translate="yes" xml:space="preserve">
          <source>The server can't send more than one &lt;code&gt;Sec-Websocket-Protocol&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a02828fd6a5ac3cfffb60c5ea83d12187b0777" translate="yes" xml:space="preserve">
          <source>The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a516278052e69251a5a3ced630467986bad27ef" translate="yes" xml:space="preserve">
          <source>The server is terminating the connection because it is restarting. [&lt;a href=&quot;https://www.ietf.org/mail-archive/web/hybi/current/msg09670.html&quot;&gt;Ref&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ee26cb2f7986dfd0d82fce92b96f30552f4bb3" translate="yes" xml:space="preserve">
          <source>The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients. [&lt;a href=&quot;https://www.ietf.org/mail-archive/web/hybi/current/msg09670.html&quot;&gt;Ref&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8403aea26709cc27beb4e5d5ba162e8568044f2" translate="yes" xml:space="preserve">
          <source>The server tells the client to store a cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c764d39afc9105e8d1590114e7315b770b4dbbac" translate="yes" xml:space="preserve">
          <source>The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31117ae99ca7f7d95f6a98228f50fd5ea4d17631" translate="yes" xml:space="preserve">
          <source>The server-sent event API is contained in the &lt;a href=&quot;../eventsource&quot;&gt;&lt;code&gt;EventSource&lt;/code&gt;&lt;/a&gt; interface; to open a connection to the server to begin receiving events from it, create a new &lt;code&gt;EventSource&lt;/code&gt; object, specifying the URI of a script that generates the events. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741fdbe1dd0736ea32151b5296a1ea12104c9ba2" translate="yes" xml:space="preserve">
          <source>The server-side script that sends events needs to respond using the MIME type text/event-stream. Each notification is sent as a block of text terminated by a pair of newlines. For details on the format of the event stream, see &lt;a href=&quot;#Event_stream_format&quot;&gt;Event stream format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a6a516a14a652c33ce9915a368f2d61cfab548" translate="yes" xml:space="preserve">
          <source>The service worker URL is fetched and registered via &lt;a href=&quot;../serviceworkercontainer/register&quot;&gt;&lt;code&gt;serviceWorkerContainer.register()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da106160d1a9f219947bb24bd7fa9691dc4c058" translate="yes" xml:space="preserve">
          <source>The service worker being pointed to is on a different origin to that of your app. This is also not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c872ff50f135605683d107bfd7b3041776cb52" translate="yes" xml:space="preserve">
          <source>The service worker in this state is considered a waiting worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aedd2552933ab54c3722625aceed324751c14df" translate="yes" xml:space="preserve">
          <source>The service worker in this state is considered an active worker ready to handle functional events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f759c29be008f3324fcf23925d9f7266039d19" translate="yes" xml:space="preserve">
          <source>The service worker in this state is considered an active worker. During this state, &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; can be called inside the &lt;code&gt;onactivate&lt;/code&gt; event handler to extend the life of the active worker until the passed promise resolves successfully. No functional events are dispatched until the state becomes activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acaf48ed91d252c27b4dd40c395d1e41d0b87ee" translate="yes" xml:space="preserve">
          <source>The service worker in this state is considered an installing worker. During this state, &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; can be called inside the &lt;code&gt;install&lt;/code&gt; event handler to extend the life of the installing worker until the passed promise resolves successfully. This is primarily used to ensure that the service worker is not active until all of the core caches are populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8f1cd7ae0767641e49b3c72e4ab2bccf203d21" translate="yes" xml:space="preserve">
          <source>The service worker is immediately downloaded when a user first accesses a service worker&amp;ndash;controlled site/page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f97ff1e616306fc9d7fcd167f134e6e428695c2" translate="yes" xml:space="preserve">
          <source>The service worker is now ready to process events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ae1cddf902bc7acb73ec91137483f674d6217d" translate="yes" xml:space="preserve">
          <source>The service worker lifecycle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed09139f6be1aaeaa37955e5bdf7f06f5cd2934" translate="yes" xml:space="preserve">
          <source>The service worker will be started as necessary to handle incoming push messages, which are delivered to the &lt;a href=&quot;serviceworkerglobalscope/onpush&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onpush&lt;/code&gt;&lt;/a&gt; event handler. This allows apps to react to push messages being received, for example, by displaying a notification (using &lt;a href=&quot;serviceworkerregistration/shownotification&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.showNotification()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25c9a8b3bde8bf7f9f0d318715052e188beaea2" translate="yes" xml:space="preserve">
          <source>The service worker will only catch requests from clients under the service worker's scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb53deda846662b31aaa0bb3d6f35149781faab" translate="yes" xml:space="preserve">
          <source>The session description object describes a provisional answer; that is, it's a response to a previous offer or provisional answer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be15df2c7256a5d00d6eb0f4a9f039457fec8be5" translate="yes" xml:space="preserve">
          <source>The session description object describes the initial proposal in an offer/answer exchange. The session negotiation process begins with an offer being sent from the caller to the callee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844e4c1ecc4107bf7164bc13f0e42c78682db593" translate="yes" xml:space="preserve">
          <source>The set of object stores and indexes to which a transaction applies. The scopes of read-only transactions can overlap and execute at the same time. On the other hand, the scopes of writing transactions cannot overlap. You can still start several transactions with the same scope at the same time, but they just queue up and execute one after another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad2bee530126823941b80fe1d0f08b1a55cf25f" translate="yes" xml:space="preserve">
          <source>The settings bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6267bf8dbe49b42a79b9a9f4d55ea622a0e656c" translate="yes" xml:space="preserve">
          <source>The shader code looks like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d0de7518f92ff9c71d3c0fca6d0c3c9e9cc571" translate="yes" xml:space="preserve">
          <source>The shader code will be identical to the previous example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd4fd3806c2f25efd0f1fcbea1955e1da14cb0a" translate="yes" xml:space="preserve">
          <source>The shader now uses three matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8389ee223f204eb3bbdf79b95d68ea40e337ed61" translate="yes" xml:space="preserve">
          <source>The shader program also needs to be updated to use the textures instead of solid colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d03f0910fb0f663693dfa89a359a0b9bd09ed4b" translate="yes" xml:space="preserve">
          <source>The shader set is passed into the function &lt;code&gt;buildShaderProgram()&lt;/code&gt;, which returns the compiled and linked shader program. We'll look at how this works next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df975a0f7eb99c50f763baa7399b6d123ed50f34" translate="yes" xml:space="preserve">
          <source>The shader's source code is sent to the shader by calling &lt;a href=&quot;../../webglrenderingcontext/shadersource&quot;&gt;&lt;code&gt;gl.shaderSource()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ded55b25238a3bffac9be52262b10fb0238bc8d" translate="yes" xml:space="preserve">
          <source>The shaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d704cccff13e506017014f045d564e745d123482" translate="yes" xml:space="preserve">
          <source>The shaders are the bits of code written in GLSL that take our data points and ultimately render them to the screen. For convenience these shaders are stored in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element that is brought into the program through the custom function &lt;code&gt;MDN.createWebGLProgramFromIds()&lt;/code&gt;. This function is part of a collection of &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt; written for these tutorials and is not explained in depth here. This function handles the basics of taking some GLSL source code and compiling it into a WebGL program. The function takes three parameters &amp;mdash; the context to render the program in, the ID of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element containing the vertex shader, and the ID of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element containing the fragment shader. The vertex shader positions the vertices, and the fragment shader colours each pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8b5e9dbc4ca3f514853871086c89d805e2c35d" translate="yes" xml:space="preserve">
          <source>The shape of the wave produced by the node. Valid values are '&lt;code&gt;sine&lt;/code&gt;', '&lt;code&gt;square&lt;/code&gt;', '&lt;code&gt;sawtooth&lt;/code&gt;', '&lt;code&gt;triangle&lt;/code&gt;' and '&lt;code&gt;custom&lt;/code&gt;'. The default is '&lt;code&gt;sine&lt;/code&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4021fc2e8405b71761bf7970dcbcbeeccce7a2" translate="yes" xml:space="preserve">
          <source>The shipping options the user may choose from. If this sequence is blank, it indicates the merchant cannot ship to the current shipping address. The default shipping option may be indicated in this sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce264f4f5971af6bac9eee6dde137b59b1b98a4" translate="yes" xml:space="preserve">
          <source>The short example above, like nearly all of the examples in this reference, is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JavaScript&quot;&gt;JavaScript&lt;/a&gt;. That is to say, it's &lt;em&gt;written&lt;/em&gt; in JavaScript, but it &lt;em&gt;uses&lt;/em&gt; the DOM to access the document and its elements. The DOM is not a programming language, but without it, the JavaScript language wouldn't have any model or notion of web pages, HTML documents, XML documents, and their component parts (e.g. elements). Every element in a document&amp;mdash;the document as a whole, the head, tables within the document, table headers, text within the table cells&amp;mdash;is part of the document object model for that document, so they can all be accessed and manipulated using the DOM and a scripting language like JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a9144b8e06ae359671a78fbef1e01230160115" translate="yes" xml:space="preserve">
          <source>The sidebar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d108f857be11a3fd6f5a4036ef24f6ac7a0f3f7e" translate="yes" xml:space="preserve">
          <source>The signaling process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710bd759f247691ed4a15f6fba17d0d778cbdeaa" translate="yes" xml:space="preserve">
          <source>The signaling process involves this exchange of messages among a num</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5863d8154619ef49d4e2a9c3ae1e92e2980cd8a8" translate="yes" xml:space="preserve">
          <source>The signaling process involves this exchange of messages between two peers using an intermediary, the signaling server. The exact process will vary, of course, but in general there are a few key points at which signaling messages get handled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fab85d2b440cbd542c9f9f6c0a9e62e3625120" translate="yes" xml:space="preserve">
          <source>The signaling server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af19ae1c8903044970f9f188a8d76dc8b722ec9" translate="yes" xml:space="preserve">
          <source>The signaling server delivers each ICE candidate to the destination peer using whatever method it chooses; in our example this is as JSON objects, with a &lt;code&gt;type&lt;/code&gt; property containing the string &lt;code&gt;&quot;new-ice-candidate&quot;&lt;/code&gt;. Our &lt;code&gt;handleNewICECandidateMsg()&lt;/code&gt; function is called by our main &lt;a href=&quot;../websockets_api&quot;&gt;WebSocket&lt;/a&gt; incoming message code to handle these messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa7232a5044a376fc1b510e2a6dd08cb219b946" translate="yes" xml:space="preserve">
          <source>The signature of the utility function &lt;em&gt;&lt;strong&gt;loadFile&lt;/strong&gt;&lt;/em&gt; declares (i) a target URL to read (via HTTP GET), (ii) a function to execute on successful completion of the XHR operation, and (iii) an arbitrary list of additional arguments that are &quot;passed through&quot; the XHR object to the success callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0ec7e39ecf86e90537cea0e3b1651a2a2cbbae" translate="yes" xml:space="preserve">
          <source>The simplest way to use the logging methods is to output a single object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65762bb4872148b14d0cec2ee5e426a56d53147d" translate="yes" xml:space="preserve">
          <source>The single argument passed to the specified event handler function is a &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; object. Within the handler, &lt;code&gt;this&lt;/code&gt; will be the element upon which the event was triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3781471be52e8d9c0e3a8e60070813486ca52c" translate="yes" xml:space="preserve">
          <source>The site storage system described by the Storage Standard and interacted with using the Storage API consists of a single &lt;strong&gt;site storage unit&lt;/strong&gt; for each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;origin&lt;/a&gt;. In essence, every Web site or Web application has its own storage unit into which its data gets placed. The diagram below shows a site storage pool with three storage units within, showing how storage units can have different data types stored within and may have different quotas (maximum storage limits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9e210ba1a7c97d5f8aad724ce76a10f6d927ab" translate="yes" xml:space="preserve">
          <source>The site's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; is configured here to use one of a number of common sans-serif fonts, and to use &lt;code&gt;&quot;aliceblue&quot;&lt;/code&gt; as the background color. Then the &lt;code&gt;&quot;wrapper&quot;&lt;/code&gt; class is defined; it wraps the entire blog, including the header, sidebar, and body content (articles and ads).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a15284956ca7bdf77b1d2b353cb0e7827134e0d" translate="yes" xml:space="preserve">
          <source>The site's structure is not too complicated. We'll be using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout&quot;&gt;CSS Grid&lt;/a&gt; to style and lay out the site, so we can be pretty straightforward here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ba60eb31e93447d36b92e0bff8b3cc91442c31" translate="yes" xml:space="preserve">
          <source>The size (in octets) received from the fetch (HTTP or cache) of the message body, after removing any applied content-codings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a1e98ed3a61d2391779f4813ea4c5166dcb0e6" translate="yes" xml:space="preserve">
          <source>The size and type of the recorded media are output to the log area below the two videos and the download button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b66adc2182bf1d77d84e7f1c99ffd631df5a466" translate="yes" xml:space="preserve">
          <source>The size of an application's resources can affect an application's performance so getting accurate data on resource size can be important (especially for non-hosted resources). The &lt;a href=&quot;../performanceresourcetiming&quot;&gt;&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;&lt;/a&gt; interface has three properties that can be used to obtain size data about a resource. The &lt;a href=&quot;../performanceresourcetiming/transfersize&quot;&gt;&lt;code&gt;transferSize&lt;/code&gt;&lt;/a&gt; property returns the size (in octets) of the fetched resource including the response header fields plus the response payload body. The &lt;a href=&quot;../performanceresourcetiming/encodedbodysize&quot;&gt;&lt;code&gt;encodedBodySize&lt;/code&gt;&lt;/a&gt; property returns the size (in octets) received from the fetch (HTTP or cache), of the &lt;em&gt;payload body&lt;/em&gt;, &lt;strong&gt;before&lt;/strong&gt; removing any applied content-codings. &lt;a href=&quot;../performanceresourcetiming/decodedbodysize&quot;&gt;&lt;code&gt;decodedBodySize&lt;/code&gt;&lt;/a&gt; returns the size (in octets) received from the fetch (HTTP or cache) of the &lt;em&gt;message body&lt;/em&gt;, &lt;strong&gt;after&lt;/strong&gt; removing any applied content-codings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc2ce3e7e64b530a60f52396159112f4b9be3ae" translate="yes" xml:space="preserve">
          <source>The size of the file in bytes as a read-only 64-bit integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246f08f44e2f6ec14136aac3469550568dc6fd3c" translate="yes" xml:space="preserve">
          <source>The size of the first canvas is set to the styled &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; size, determined by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSS&quot;&gt;CSS&lt;/a&gt;. This is done by assigning the &lt;a href=&quot;htmlcanvaselement/width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;htmlcanvaselement/height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; properties of the canvas to the values of the &lt;a href=&quot;element/clientwidth&quot;&gt;&lt;code&gt;clientWidth&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;element/clientheight&quot;&gt;&lt;code&gt;clientHeight&lt;/code&gt;&lt;/a&gt; properties, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c722b1adb2a33c7f0d411c1547f3c6374c36d9" translate="yes" xml:space="preserve">
          <source>The size of the input and output buffer are defined at the creation time, when the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor&quot;&gt;&lt;code&gt;AudioContext.createScriptProcessor()&lt;/code&gt;&lt;/a&gt; method is called (both are defined by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor&quot;&gt;&lt;code&gt;AudioContext.createScriptProcessor()&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;bufferSize&lt;/code&gt; parameter). The buffer size must be a power of 2 between &lt;code&gt;256&lt;/code&gt; and &lt;code&gt;16384&lt;/code&gt;, that is &lt;code&gt;256&lt;/code&gt;, &lt;code&gt;512&lt;/code&gt;, &lt;code&gt;1024&lt;/code&gt;, &lt;code&gt;2048&lt;/code&gt;, &lt;code&gt;4096&lt;/code&gt;, &lt;code&gt;8192&lt;/code&gt; or &lt;code&gt;16384&lt;/code&gt;. Small numbers lower the &lt;em&gt;latency&lt;/em&gt;, but large number may be necessary to avoid audio breakup and glitches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e062d397c67a6327cace71377a28e3dafead91" translate="yes" xml:space="preserve">
          <source>The size property is now an unsigned long. The type property must be entirely given in lowercase characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c72c982d051750a1da7d5d060e62b3536c8a64" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the data contained in the &lt;code&gt;Blob&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31569b3f7eea97f6c43ad83f820de09f3ab5304a" translate="yes" xml:space="preserve">
          <source>The snippet below includes a function which changes the contents of a block with the ID &quot;bufferSize&quot; to a string indicating the number of bytes currently buffered on an &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eece8a51628f7550e564a37f2924316f0112393" translate="yes" xml:space="preserve">
          <source>The solution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1248ed61be0d88fb042759b361f88000040e5929" translate="yes" xml:space="preserve">
          <source>The solution is simple, and it involves using an audio node type which, at first glance, doesn't look all that useful: &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd39d110ec7cc65e198352502412da2b4637717" translate="yes" xml:space="preserve">
          <source>The source buffer list containing the &lt;code&gt;SourceBuffer&lt;/code&gt;s appended to a particular &lt;code&gt;MediaSource&lt;/code&gt; can be retrieved using the &lt;a href=&quot;mediasource/sourcebuffers&quot;&gt;&lt;code&gt;MediaSource.sourceBuffers&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c739b0f023e023a80bb691c4dd37693df40292" translate="yes" xml:space="preserve">
          <source>The source code is sent into the new shader by passing it into &lt;a href=&quot;../webglrenderingcontext/shadersource&quot;&gt;&lt;code&gt;gl.shaderSource()&lt;/code&gt;&lt;/a&gt;, and then the shader is compiled using &lt;a href=&quot;../webglrenderingcontext/compileshader&quot;&gt;&lt;code&gt;gl.compileShader()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ce4bc6f56788fdd5475f98eb6bce7d2eb0b2da" translate="yes" xml:space="preserve">
          <source>The source code of this example is also available on &lt;a href=&quot;https://github.com/idofilin/webgl-by-example/tree/master/canvas-size-and-webgl&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63065f3b6ed06605457ee38550ee24987453fd0f" translate="yes" xml:space="preserve">
          <source>The source code of this example is also available on &lt;a href=&quot;https://github.com/idofilin/webgl-by-example/tree/master/detect-webgl&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577ac69ff49fe944679e9ae959ee9fd644480d23" translate="yes" xml:space="preserve">
          <source>The source image is taken from the coordinates (33, 71), with a width of 104 and a height of 124. It is drawn to the canvas at (21, 20), where it is given a width of 87 and a height of 104.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b983c029323992169e8d5b49d3e5003afec2241" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableByteStreamController&lt;/code&gt;, or the stream cannot be read for some other reason, or the chunk is not an object, or the chunk's internal array buffer is non-existant or detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0919243972bbb081d301a1657d243c1d5215a06" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableByteStreamController&lt;/code&gt;, or the stream is not readable for some other reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767826133aa1c50c02b3c76d2960235213f56e7d" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamBYOBReader&lt;/code&gt;, or a read request is pending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073668b1037ca0ff042675094b50e834c559bd03" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamBYOBReader&lt;/code&gt;, or the stream has no owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97eb0cead1b1681583b0c0e9739c564755ca44d3" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamBYOBReader&lt;/code&gt;, the stream has no owner, the view is not an object or has become detached, or the view's length is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b366cc4e07f4ebf28927c466555ca0e3dd144deb" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamBYOBRequest&lt;/code&gt;, or there is no associated controller, or the associated internal array buffer is detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540ca27ced1a85adacb2e73a66744e2d7a546c7a" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamBYOBRequest&lt;/code&gt;, or there is no associated controller, or the associated internal array buffer is non-existant or detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b900bb9e3896a1407966412332a9238f5a3d5e" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;, or the stream is not readable for some other reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1768d779629e9383dd5c5a19326ae177b25b207" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b86d45e3b8d66a56fa8a92451180acaf7ded97" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;, or a read request is pending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939645985e7808c6e1063bbe6dbb86461aa0e4bb" translate="yes" xml:space="preserve">
          <source>The source object is not a &lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;, or the stream has no owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a96ef22b7fa1fd7fa08be1d1eebf2af37ba238" translate="yes" xml:space="preserve">
          <source>The source object store has been deleted, or the transaction for the object store has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db31ab46dfff03416af5923ff8d5d220323b0d9" translate="yes" xml:space="preserve">
          <source>The source of the request, such as an &lt;a href=&quot;idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt;. If no source exists (such as when calling &lt;a href=&quot;idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt;), it returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0ee2b721f71d4e09223fde186d66aa76bf0201" translate="yes" xml:space="preserve">
          <source>The source stream is not a &lt;code&gt;ReadableStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf981ebbcdec565c40d5cf4aaf26fdf3840ab01" translate="yes" xml:space="preserve">
          <source>The spec description of &lt;code&gt;abort()&lt;/code&gt; is somewhat confusing &amp;mdash; consider for example step 1 of &lt;a href=&quot;http://w3c.github.io/media-source/index.html#sourcebuffer-reset-parser-state&quot;&gt;reset parser state&lt;/a&gt;. The MSE API is fully asynchronous, but this step seems to suggest a synchronous (blocking) operation, which doesn't make sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d93c0bb94b10235529c9d52c159854386454c7" translate="yes" xml:space="preserve">
          <source>The spec requires that the passed &lt;code&gt;supportedConfigurations&lt;/code&gt; option contain at least one of &lt;code&gt;audioCapabilities&lt;/code&gt; or &lt;code&gt;videoCapabilities&lt;/code&gt;, and that said parameters include a codec string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57771c3386eb435987e08796620579efcaa8a59d" translate="yes" xml:space="preserve">
          <source>The special keys &lt;code&gt;offset&lt;/code&gt;, &lt;code&gt;easing&lt;/code&gt;, and &lt;code&gt;composite&lt;/code&gt; (described below) may be specified alongside the property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda4226d4b04537818a34df3fb01d9ef8f5255e2" translate="yes" xml:space="preserve">
          <source>The specification asks browsers to provide as little information via this field as possible. Never assume that the value of this property will stay the same in future versions of the same browser. Try not to use it at all, or only for current and past versions of a browser. New browsers may start using the same UA, or part of it, as an older browser: you really have no guarantee that the browser agent is indeed the one advertised by this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb3dff423d9d50b2b88b5c7a3094d8da671df00" translate="yes" xml:space="preserve">
          <source>The specification doesn't go into a lot of detail about things like how many audio contexts a user agent should support, or minimum or maximum latency requirements (if any), so these details can vary from browser to browser. Be sure to check the values if they matter to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23dbe0437d8793ee7fffabfa2c4f165af2f441d" translate="yes" xml:space="preserve">
          <source>The specification explicitly allows the future definition of new speaker layouts. This fallback is therefore not future proof as the behavior of the browsers for a specific number of channels may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d505254bb790ba86099c1e01b09c705042c7f74" translate="yes" xml:space="preserve">
          <source>The specified &lt;a href=&quot;../rtcicecandidate/usernamefragment&quot;&gt;&lt;code&gt;ufrag&lt;/code&gt;&lt;/a&gt; doesn't match the &lt;code&gt;ufrag&lt;/code&gt; field in any of the remote descriptions being considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a93068cd382f440a7208db8d7efcbb4b379f06c" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;RTCIceCandidateInit&lt;/code&gt; has values of &lt;code&gt;null&lt;/code&gt; in both the &lt;a href=&quot;../rtcicecandidateinit/sdpmid&quot;&gt;&lt;code&gt;sdpMid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcicecandidateinit/sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e30332b0d11a65fe4bf379254d646d3a868a0d5" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;data&lt;/code&gt; is too large for the other peer to receive. Since there are multiple techniques for breaking up large data into smaller pieces for transfer, it's possible to encounter scenarios in which the other peer does not support the same ones. For example, if one peer is a modern browser that supports using the &lt;code&gt;EOR&lt;/code&gt; (End of Record) flag to indicate when a received message is the last piece of a multi-part object sent using &lt;code&gt;send()&lt;/code&gt;. For more information about message size restrictions, see &lt;a href=&quot;../webrtc_api/using_data_channels#Understanding_message_size_limits&quot;&gt;Understanding message size limits&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/using_data_channels&quot;&gt;Using WebRTC data channels&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ae2dff33216e23a9addc55f56ba8ec7a48e327" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;data&lt;/code&gt; would need to be buffered, and there isn't room for it in the buffer. In this scenario, the underlying transport is immediately closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04df17b9353bd2cce5b5050a40771210731555b" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;index&lt;/code&gt; is invalid; that is, it's greater than or equal to the maximum number of entries permitted in the context's vertex attribute list, as indicated by the value of &lt;code&gt;WebGLRenderingContext.MAX_VERTEX_ATTRIBS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33924a20ef413840655ecb73b17bda2c0cc42c7" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;methodName&lt;/code&gt; does not correspond to a known and supported merchant or is not a well-formed standard payment method identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a5d9b2e7921886b40a0d926151c79f103c0483" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;mimeType&lt;/code&gt; isn't supported by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/User_agent&quot;&gt;&lt;code&gt;user agent&lt;/code&gt;&lt;/a&gt;, or is not compatible with the MIME types of other &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; objects that are already included in the media source's &lt;a href=&quot;sourcebuffers&quot;&gt;&lt;code&gt;sourceBuffers&lt;/code&gt;&lt;/a&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986ba1657bc050d3e6dbe08c0e09b4f0161435b7" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;min&lt;/code&gt; and/or and &lt;code&gt;max&lt;/code&gt; values are &lt;em&gt;required&lt;/em&gt;. If no match can be found that is within the given range, an error will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea3831465c99c2a63602fc1916d5f136a4f71d9" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;rootMargin&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11107edd8a6c4b41e24350c1cd3f18f68332017f" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;rootNode&lt;/code&gt; is not a compatible node type. The root node must be either &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ed9b57d9b8b1696b32966ca3842ddd1440fbf9" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;sampleRate&lt;/code&gt; isn't supported by the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d42b167268deec1ecdf154fc7b10f0f49262c18" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;selectors&lt;/code&gt; are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdd6064b62c1f0bff7f265562f9c017901c22da" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;src&lt;/code&gt; URL is the same as the URL of the page the user is currently on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f527629e3a0bdb00f41f224d39a5c17dc9e2dc02" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;startTime&lt;/code&gt; is either negative or a non-finite value, or &lt;code&gt;duration&lt;/code&gt; is not a finite, strictly positive number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c004159dddbf4d03e59b41a6adfc4a7ec621eb3f" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;track&lt;/code&gt; doesn't necessarily have to already be part of any of the specified &lt;code&gt;stream&lt;/code&gt;s. Instead, the &lt;code&gt;stream&lt;/code&gt;s are simply a way to group tracks together on the receiving end of the connection, making sure they are synchronized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a733d7799954e6284ec1ff550c88039ca4458e92" translate="yes" xml:space="preserve">
          <source>The specified MIME type is not supported, or is not supported with the types of &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; objects present in the &lt;a href=&quot;../mediasource/sourcebuffers&quot;&gt;&lt;code&gt;MediaSource.sourceBuffers&lt;/code&gt;&lt;/a&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7a52b7ed625aadb0eaf20ee45de244c1d19e6e" translate="yes" xml:space="preserve">
          <source>The specified URL is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f8f974e9ba6441ef6a23b877f9ab4ad3a4ca02" translate="yes" xml:space="preserve">
          <source>The specified array of &lt;code&gt;values&lt;/code&gt; has fewer than 2 items in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b10a72f5a8d6e23576b0390f053cb1872494e24" translate="yes" xml:space="preserve">
          <source>The specified attribute &lt;code&gt;name&lt;/code&gt; contains one or more characters which are not valid in attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892f173a80eb9e09715fe0110259693c7fbf5691" translate="yes" xml:space="preserve">
          <source>The specified candidate's &lt;a href=&quot;../rtcicecandidate/sdpmid&quot;&gt;&lt;code&gt;sdpMid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcicecandidate/sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt; are both &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efaf13916d8a6a1360f3ece6eddaa5959ad9d2f" translate="yes" xml:space="preserve">
          <source>The specified command is not allowed for the current state. The command is ignored and the error flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52626c073350f961b3f07ac552aa24ec77fcb22b" translate="yes" xml:space="preserve">
          <source>The specified connection would create a cycle (in which the audio loops back through the same nodes repeatedly) and there are no &lt;a href=&quot;../delaynode&quot;&gt;&lt;code&gt;DelayNode&lt;/code&gt;&lt;/a&gt;s in the cycle to prevent the resulting waveform from getting stuck constructing the same audio frame indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcb06ec2f2c69bb98b9dc83d315d6210cc29d1f" translate="yes" xml:space="preserve">
          <source>The specified constraints resulted in no candidate devices which met the criteria requested. The error is an object of type &lt;code&gt;OverconstrainedError&lt;/code&gt;, and has a &lt;code&gt;constraint&lt;/code&gt; property whose string value is the name of a constraint which was impossible to meet, and a &lt;code&gt;message&lt;/code&gt; property containing a human-readable string explaining the problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f86aa6125cef2284460ac8a4670c5554aeb933c" translate="yes" xml:space="preserve">
          <source>The specified entry was the file system's root directory, or the specified entry is a directory which isn't empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56507a710136ea9ad2f572d84a5e17844f8e51ca" translate="yes" xml:space="preserve">
          <source>The specified image is corrupted in some way that prevents it from being loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34282a2000cd8bfb926bd0ddbe674a06fed8c601" translate="yes" xml:space="preserve">
          <source>The specified image is in a format not supported by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99f24cf8f28a71127b05e513c0c858c216e8457" translate="yes" xml:space="preserve">
          <source>The specified image's metadata is corrupted in such a way that it's impossible to retrieve its dimensions, and no dimensions were specified in the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element's attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07ad3f3cc747c9c2d0ca1c7930040cda21aa4cf" translate="yes" xml:space="preserve">
          <source>The specified key or key range is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3427614ddbc9a9ba2dd49d8df321749cff7f8f46" translate="yes" xml:space="preserve">
          <source>The specified path could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22d74ed13b90fb869ada7a710dc6397d0a2542" translate="yes" xml:space="preserve">
          <source>The specified root node&amp;mdash;and all of its descendants&amp;mdash;must be compatible with the XML serialization algorithm. The root node itself must be either a &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c3faf6665d181654770e30348d046693daf507" translate="yes" xml:space="preserve">
          <source>The specified selector string is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba6949ec498902c5a1c83567ee843d7c4ff7b6b" translate="yes" xml:space="preserve">
          <source>The specified source element isn't supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba086ad820a9c97e8bc92a97910dcc09a1c4b1bb" translate="yes" xml:space="preserve">
          <source>The specified status is not a redirect status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d7798a87c6c40d708dc3f0dc18fa7262631eaf" translate="yes" xml:space="preserve">
          <source>The specified string is empty, rather than indicating a valid MIME type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efde4661e2e210e9a9cdcd37716ebbd93b2e93a0" translate="yes" xml:space="preserve">
          <source>The specified track (or all of its underlying streams) is already part of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04c9e1711d0bfe1182e12e1f726014e33417ac5" translate="yes" xml:space="preserve">
          <source>The specified value is either a string other than &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, a number less than zero, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, or some other type of object entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0e95d4363f13700bfda9d4ca04ab0eeb49f5f9" translate="yes" xml:space="preserve">
          <source>The specified value is parsed as HTML or XML (based on the document type), resulting in a &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; object representing the new set of DOM nodes for the new elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4cbc7193ded0b10fa2de83d1fdf68de9dca9f2" translate="yes" xml:space="preserve">
          <source>The specified value of &lt;a href=&quot;../rtcicecandidate/sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt; is greater than or equal to the number of media descriptions included in the remote description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a424490c56d3e8106dbbb2a6282dba603f0fe42" translate="yes" xml:space="preserve">
          <source>The standard &lt;a href=&quot;../mouseevent/pagex&quot;&gt;&lt;code&gt;MouseEvent.pageX&lt;/code&gt;&lt;/a&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b1134c35e5704d8e22f70dc1a8dcc88a374fb7" translate="yes" xml:space="preserve">
          <source>The standard WebGL global &lt;code&gt;gl_Position&lt;/code&gt; is then set to the transformed and rotated vertex's position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e21cca553b4bf76f77f4276ed0dc5ae42f0a1c3" translate="yes" xml:space="preserve">
          <source>The standard for using SDP in an offer/answer protocol &lt;a href=&quot;https://tools.ietf.org/html/rfc3264&quot;&gt;RFC 3264&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c31dab99f9a2ee731ab648c01061e9f717ab41" translate="yes" xml:space="preserve">
          <source>The start of the pipe chain is called the &lt;strong&gt;original source&lt;/strong&gt;, and the end is called the &lt;strong&gt;ultimate sink&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d23d1c151091a561af76cfec468fc35ef50caf" translate="yes" xml:space="preserve">
          <source>The start of the seekable range to set in seconds measured from the beginning of the source. If the duration of the media source is positive infinity, then the &lt;a href=&quot;../timeranges&quot;&gt;&lt;code&gt;TimeRanges&lt;/code&gt;&lt;/a&gt; object returned by the &lt;a href=&quot;../htmlmediaelement/seekable&quot;&gt;&lt;code&gt;HTMLMediaElement.seekable&lt;/code&gt;&lt;/a&gt; property will have a start timestamp no greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5c2ee82efcc491bd93a4b3f89d46f768b7ecd6" translate="yes" xml:space="preserve">
          <source>The startup() function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdacc37cb73dc8272070af1fe13002c75086aa0" translate="yes" xml:space="preserve">
          <source>The state names are different in versions of Internet Explorer earlier than 11. Instead of &lt;code&gt;UNSENT&lt;/code&gt;, &lt;code&gt;OPENED&lt;/code&gt;,&lt;code&gt; HEADERS_RECEIVED&lt;/code&gt;,&lt;code&gt; LOADING&lt;/code&gt; and &lt;code&gt;DONE&lt;/code&gt;, the names &lt;code&gt;READYSTATE_UNINITIALIZED&lt;/code&gt; (0), &lt;code&gt;READYSTATE_LOADING&lt;/code&gt; (1), &lt;code&gt;READYSTATE_LOADED&lt;/code&gt; (2), &lt;code&gt;READYSTATE_INTERACTIVE&lt;/code&gt; (3) and &lt;code&gt;READYSTATE_COMPLETE&lt;/code&gt; (4) are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a3b661d3fd71c8c1454b0487f3b2abc89b3557" translate="yes" xml:space="preserve">
          <source>The state object can be anything that can be serialized. Because Firefox saves state objects to the user's disk so they can be restored after the user restarts the browser, we impose a size limit of 640k characters on the serialized representation of a state object. If you pass a state object whose serialized representation is larger than this to &lt;code&gt;pushState()&lt;/code&gt;, the method will throw an exception. If you need more space than this, you're encouraged to use &lt;code&gt;sessionStorage&lt;/code&gt; and/or &lt;code&gt;localStorage&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fb6a3c17bcf39c7958a50de17a28c457128915" translate="yes" xml:space="preserve">
          <source>The state of the request. Every request starts in the &lt;code&gt;pending&lt;/code&gt; state. The state changes to &lt;code&gt;done&lt;/code&gt; when the request completes successfully or when an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31a65f15b7fcb580ec8230cc5cdfc57f5ea922c" translate="yes" xml:space="preserve">
          <source>The state of the underlying file system prevents any writing to a file or a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331bd1c148afd69676fa91c3a93de9bff2e61299" translate="yes" xml:space="preserve">
          <source>The statement for the &lt;code&gt;clockwise&lt;/code&gt; parameter results in the first and third row being drawn as clockwise arcs and the second and fourth row as counterclockwise arcs. Finally, the &lt;code&gt;if&lt;/code&gt; statement makes the top half stroked arcs and the bottom half filled arcs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577d8bf96ed3b6fa75f15d769b65e5698b8b5f61" translate="yes" xml:space="preserve">
          <source>The static &lt;strong&gt;&lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;fromPoint()&lt;/code&gt; creates and returns a new mutable &lt;code&gt;DOMPoint&lt;/code&gt; object given a source point. The source point is specified as a &lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt;-compatible object, which includes both &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e12b68f2540319c4cfa72a0874fcf44ad20915f" translate="yes" xml:space="preserve">
          <source>The static &lt;strong&gt;&lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;fromPoint()&lt;/code&gt; creates and returns a new &lt;code&gt;DOMPointReadOnly&lt;/code&gt; object given a source point. The source point is specified as a &lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt;-compatible object, which includes both &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bf1fe5a21c427e88244d74166852bf07378dbe" translate="yes" xml:space="preserve">
          <source>The static function &lt;a href=&quot;../dompointreadonly/frompoint&quot;&gt;&lt;code&gt;DOMPointReadOnly.fromPoint()&lt;/code&gt;&lt;/a&gt; takes an object that complies with &lt;code&gt;DOMPointInit&lt;/code&gt; as its sole input parameter, to specify the coordinates and perspective value of the new point to be created. This method is, by inheritance, also available as &lt;a href=&quot;../dompoint/frompoint&quot;&gt;&lt;code&gt;DOMPoint.fromPoint()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96445685591c8d5036bbc74767c94833038bde04" translate="yes" xml:space="preserve">
          <source>The status bar is a security feature of Internet Explorer windows that provides Internet Explorer security zone information to the user. This zone cannot be spoofed (...)&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0676006f71728df66debe96251b127d47e133d0c" translate="yes" xml:space="preserve">
          <source>The status codes returned are the standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes&quot;&gt;HTTP status codes&lt;/a&gt;. For example, &lt;code&gt;status&lt;/code&gt;&lt;code&gt;200&lt;/code&gt; denotes a successful request. If the server response doesn't explicitly specify a status code, &lt;code&gt;XMLHttpRequest.status&lt;/code&gt; will assume the default value of &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02538a979af5813bd33e461426e37d9b702157bd" translate="yes" xml:space="preserve">
          <source>The status is simply presented as text in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a19252aea43169a39a6ac3e0cbd9a7fcde336d4" translate="yes" xml:space="preserve">
          <source>The stencil testing is disabled by default. To enable or disable stencil testing, use the &lt;a href=&quot;enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;disable&quot;&gt;&lt;code&gt;disable()&lt;/code&gt;&lt;/a&gt; methods with the argument &lt;code&gt;gl.STENCIL_TEST&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e87ac497a9d3d65000097fee0c6af0a58e3cad" translate="yes" xml:space="preserve">
          <source>The step where you do the actual frame rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ea75f69d18c49c87d5d0fe4ec4754659e05ed4" translate="yes" xml:space="preserve">
          <source>The steps taken here are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cf9ca683a2fb579dbdbf14fd883c62907bab49" translate="yes" xml:space="preserve">
          <source>The steps taken inside the &lt;code&gt;try&lt;/code&gt; block here are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451307bb5e565f30ad9bf4fad2abf4aa791beb56" translate="yes" xml:space="preserve">
          <source>The steps to actually do some work with the program involve telling the GPU to use the program, bind the appropriate data and configuration options, and finally draw something to the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e641adce34e7152e7ccd8f3966ec1507a9456d51" translate="yes" xml:space="preserve">
          <source>The storage API methods are implemented on the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755f27657251e3ba7e3a8ebc82f67c55ff16cc7f" translate="yes" xml:space="preserve">
          <source>The stream you are trying to abort is not a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;, or it is locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c29f03a49442e7bc930ce54324f216ff8abe22a" translate="yes" xml:space="preserve">
          <source>The stream you are trying to cancel is not a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;, or it is locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21fdeaf94d0055e3db66cd5f970c89fd18a7869" translate="yes" xml:space="preserve">
          <source>The stream you are trying to close is not a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c7ad81acbb23bc0b00c47503766541df1c2727" translate="yes" xml:space="preserve">
          <source>The stream you are trying to create a reader for is not a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81db69ba1998e9751105992ed13a37ffc1e59d7c" translate="yes" xml:space="preserve">
          <source>The stream you are trying to create a reader for is not a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a5d5771ee7d50c3e1cde1ac0615228d88bafff" translate="yes" xml:space="preserve">
          <source>The stream you are trying to error is not a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c689cd2e4b975f579925d5a709447874efbd94b9" translate="yes" xml:space="preserve">
          <source>The string &quot;&lt;code&gt;--&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a20b5e0e5aa2b5e7e07addc78a61d6d8728b362" translate="yes" xml:space="preserve">
          <source>The string &quot;&lt;code&gt;Gecko&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4b94b5bed720bfca4e7818339b7b28df6e0a92" translate="yes" xml:space="preserve">
          <source>The string &quot;&lt;code&gt;Mozilla&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0771901470adc6e93c4a98586b3930a44324a353" translate="yes" xml:space="preserve">
          <source>The string &quot;&lt;code&gt;Netscape&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dab2e343379688edbba1a33400d60515ea2b415" translate="yes" xml:space="preserve">
          <source>The string &quot;&lt;code&gt;WEBVTT&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6549216a20c563130dfef7bfaa733ea97f967b" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;NOTE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab831925fff21ba6dd0136cbfd351cd1ae42fb16" translate="yes" xml:space="preserve">
          <source>The string argument pass to &lt;code&gt;querySelector&lt;/code&gt; must follow the CSS syntax. To match ID or selectors that do not follow the CSS syntax (by using semicolon or space inappropriately for example), it's mandatory to escape the wrong character with a double back slash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec19efe650e46d05a2509e7f34921d37b2bd939e" translate="yes" xml:space="preserve">
          <source>The string contains invalid characters. (Legacy code value: &lt;code&gt;5&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_CHARACTER_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f617d2a0dc0307881893426432a92c64be8611c7" translate="yes" xml:space="preserve">
          <source>The string did not match the expected pattern. (Legacy code value: &lt;code&gt;12&lt;/code&gt; and legacy constant name: &lt;code&gt;SYNTAX_ERR&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a544f06fef3113706617116c663238b3cfa861c7" translate="yes" xml:space="preserve">
          <source>The string given in parameter is converted to lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37098bb3f00e884cb097750c39b5a96499a9560b" translate="yes" xml:space="preserve">
          <source>The string is the MIME type of the container, optionally followed by a list of codecs. While the MIME type is fairly simple to figure out, we can get the codec string using the &lt;a href=&quot;http://nickdesaulniers.github.io/mp4info/&quot;&gt;mp4info&lt;/a&gt; utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1d0b760ad01696a5b5d12f93f000d276cf0179" translate="yes" xml:space="preserve">
          <source>The string returned by this property may not match the one specified when the &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; was instantiated. The browser is permitted to alter the values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6e096379a600c581a4c70f04af1df9ab53ed1d" translate="yes" xml:space="preserve">
          <source>The string specified as &lt;code&gt;validationURL&lt;/code&gt; could not be parsed as a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb8120b38e47716e7c97b8db8b0ed8e3cdf0de7" translate="yes" xml:space="preserve">
          <source>The structure of a WebVTT consists of the following components, some of them optional, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a754784d1f506dae065b909c1a835322358ef9" translate="yes" xml:space="preserve">
          <source>The structured clone algorithm is an algorithm &lt;a href=&quot;http://www.w3.org/html/wg/drafts/html/master/infrastructure.html#safe-passing-of-structured-data&quot;&gt;defined by the HTML5 specification&lt;/a&gt; for copying complex JavaScript objects. It is used internally when transferring data to and from &lt;a href=&quot;../worker&quot;&gt;Workers&lt;/a&gt; via &lt;code&gt;&lt;a href=&quot;../worker/postmessage&quot;&gt;postMessage()&lt;/a&gt;&lt;/code&gt; or when storing objects with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IndexedDB&quot;&gt;IndexedDB&lt;/a&gt;. It builds up a clone by recursing through the input object while maintaining a map of previously visited references in order to avoid infinitely traversing cycles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52792025c60c4e1ddb23efcbe18d0fc8a436cd6d" translate="yes" xml:space="preserve">
          <source>The styleSheets property on the document object returns a list of the stylesheets that have been loaded on that document. You can access these stylesheets and their rules individually using the stylesheet, style, and CSSRule objects, as demonstrated in this example, which prints out all of the style rule selectors to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ac97ebb9a29baddc01764b2dedfc5ead56130d" translate="yes" xml:space="preserve">
          <source>The styles used by the example are shown here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2724bf96478beb0b36f03351f8230811483f9a" translate="yes" xml:space="preserve">
          <source>The sub-protocol selected by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e7126d13cca2b0df7dd403feb106cc281e5e1e" translate="yes" xml:space="preserve">
          <source>The submit event is not raised when the user calls &lt;code&gt;form.submit()&lt;/code&gt; function directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb02b8a4d6bfc33da4f32ecd7c06f0257650ec3e" translate="yes" xml:space="preserve">
          <source>The submit event is raised when the user clicks a submit button in a form (&lt;code&gt;&amp;lt;input type=&quot;submit&quot;/&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16331a44e08b1967a275b893bbca45f84dff846a" translate="yes" xml:space="preserve">
          <source>The subset of the &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; interface available to workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b72a5e36af0cf477291da0f1da9a882fbc9095" translate="yes" xml:space="preserve">
          <source>The subset of the &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface available to workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aee7650cb011b04e7ec422dde302906f44bed6" translate="yes" xml:space="preserve">
          <source>The subtree rooted by the specified element is serialized to a byte stream using the character set specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cbdae5f77cfe70c513f978c75fcbd4d3ad5974" translate="yes" xml:space="preserve">
          <source>The success callback for the &lt;code&gt;createWriter()&lt;/code&gt; call takes the text which was passed in and creates a new &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; object of type &lt;code&gt;text/plain&lt;/code&gt; that contains the passed text. This blob is then output to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileWriter&quot;&gt;&lt;code&gt;FileWriter&lt;/code&gt;&lt;/a&gt; object to be written to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fad3e6b1f44b09775316a257c8286594268740" translate="yes" xml:space="preserve">
          <source>The success callback receives a &lt;code&gt;stream&lt;/code&gt; object as input. It is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element's source to our new stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a64e559ea2bce4cdf2ec0cb556f9d50c14ba6fd" translate="yes" xml:space="preserve">
          <source>The success or failure status of the transaction is unknown or irrelevant, and the user agent should not present any notification, even if it normally would. &lt;em&gt;This is the default value.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18faef7c1e15f6c4cac61e98f55d52e4707be4e4" translate="yes" xml:space="preserve">
          <source>The sum of the Quantization Parameter (QP) values associated with every frame received to date on the video track described by this &lt;code&gt;RTCRtpStreamStats&lt;/code&gt; object. In general, the higher this number is, the more heavily compressed the video track was. Combined with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCReceivedRtpStreamStats/framesDecoded&quot;&gt;&lt;code&gt;RTCReceivedRtpStreamStats.framesDecoded&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSentRtpStreamStats/framesEncoded&quot;&gt;&lt;code&gt;RTCSentRtpStreamStats.framesEncoded&lt;/code&gt;&lt;/a&gt;, you can approximate the average QP over those frames, keeping in mind that codecs often vary the quantizer values even within frames. Also keep in mind that the values of QP can vary from codec to codec, so this value is only potentially useful when compared against the same codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bd852daf1e4fcedb4822cf8cdfaec392cdf548" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;language&lt;/code&gt; is not a valid language code, e.g. &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bc5bdc8ba771b52b5641a7c0c4e1ef33761a4d" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;stream&lt;/code&gt; parameter is not a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;, or it already has an associated controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4f6d1c839dc65fa46810526e40c8d1382307c0" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;stream&lt;/code&gt; parameter is not a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;, or it is already locked for reading by another reader, or its stream controller is not a &lt;a href=&quot;../readablebytestreamcontroller&quot;&gt;&lt;code&gt;ReadableByteStreamController&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593b5c1f4eeae4f1ac7a954f7198152ce9b1122e" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;stream&lt;/code&gt; parameter is not a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;, or it is already locked for reading by another reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9e386211f41e758a2378ff16906dad49368f27" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;stream&lt;/code&gt; parameter is not a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;, or it already has an associated controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fe8eac6f87f5b8a5cb1b0865009376898978ce" translate="yes" xml:space="preserve">
          <source>The supplied key was not a valid key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1218869abb7021dc4ba37b118871fd8ddbaef385" translate="yes" xml:space="preserve">
          <source>The supplied sourceBuffer doesn't exist in &lt;a href=&quot;sourcebuffers&quot;&gt;&lt;code&gt;MediaSource.sourceBuffers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6840a8fad0146faa8f4db6ac94a9fbc11c5c02" translate="yes" xml:space="preserve">
          <source>The supplied type value is neither &lt;code&gt;bytes&lt;/code&gt; nor &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08d2bb8419ab83ac16f8e4acb31088e77af30e0" translate="yes" xml:space="preserve">
          <source>The support for this feature is currently disabled by default in Firefox. To enable WebVR support in Firefox Nightly/Developer Edition, you can go to &lt;code&gt;about:config&lt;/code&gt; and enable the &lt;code&gt;dom.vr*&lt;/code&gt; prefs. A better option however is to install the &lt;a href=&quot;http://www.mozvr.com/downloads/webvr-addon-0.1.0.xpi&quot;&gt;WebVR Enabler Add-on&lt;/a&gt;, which does this for you and sets up other necessary parts of the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/WebVR_API/WebVR_environment_setup&quot;&gt;environment&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399918afee19579d43434d2f14ee94e53cec54ae" translate="yes" xml:space="preserve">
          <source>The support for this feature is currently disabled by default in Firefox. To enable WebVR support in Firefox Nightly/Developer Edition, you can go to &lt;code&gt;about:config&lt;/code&gt; and enable the &lt;code&gt;dom.vr*&lt;/code&gt; prefs. A better option however is to install the &lt;a href=&quot;http://www.mozvr.com/downloads/webvr-addon-0.1.0.xpi&quot;&gt;WebVR Enabler Add-on&lt;/a&gt;, which does this for you and sets up other necessary parts of the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/WebVR_API/WebVR_environment_setup&quot;&gt;environment&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768844048440afa55ab32001ac23946eeee633b3" translate="yes" xml:space="preserve">
          <source>The support in Chrome is currently experimental. To find information on Chrome's WebVR implementation status including supporting builds, check out &lt;a href=&quot;http://blog.tojicode.com/2014/07/bringing-vr-to-chrome.html&quot;&gt;Bringing VR to Chrome&lt;/a&gt; by Brandon Jones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475a1966fea9a0442976d429d6b384b8344b689c" translate="yes" xml:space="preserve">
          <source>The synchronization source objects add a &lt;a href=&quot;../rtcrtpsynchronizationsource/voiceactivityflag&quot;&gt;&lt;code&gt;voiceActivityFlag&lt;/code&gt;&lt;/a&gt; property, which indicates if the last RTP packet received contained voice activity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427f986048832688e8e1ca937cf99f1d22676c9" translate="yes" xml:space="preserve">
          <source>The syntax for reading the localStorage item is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8dd2ea59b3af0f3eb2e449329553e4e68d6f2a" translate="yes" xml:space="preserve">
          <source>The syntax for removing all the localStorage items is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f7f5cc1a700b3851e701ea040e87c21ae70d5c" translate="yes" xml:space="preserve">
          <source>The syntax for removing the localStorage item is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7198f5d13422db6318794fed189ffa25bee9f57" translate="yes" xml:space="preserve">
          <source>The syntax is described using the &lt;a href=&quot;http://dev.w3.org/2006/webapi/WebIDL/&quot;&gt;WebIDL&lt;/a&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffaebfe6bb7acfe79f68a2b18aed5db2619e9bc2" translate="yes" xml:space="preserve">
          <source>The syntax is described using the &lt;a href=&quot;https://dev.w3.org/2006/webapi/WebIDL/&quot;&gt;WebIDL&lt;/a&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67adebe199aeab8fbc12dacc639188503c6bb97d" translate="yes" xml:space="preserve">
          <source>The syntax of Selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927116fb9125da9bc6cc2726d73e9a334aa4bcba" translate="yes" xml:space="preserve">
          <source>The syntax of the candidate string is described in &lt;a href=&quot;https://tools.ietf.org/html/rfc5245#section-15.1&quot;&gt;RFC 5245, section 15.1&lt;/a&gt;. For an a-line (attribute line) that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0224fe95c7eb4d08111d2c5b18d86bb13f56233f" translate="yes" xml:space="preserve">
          <source>The syntax of the specified &lt;code&gt;selectors&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c89dbf0c36504164b292851295f0010fa8ce35" translate="yes" xml:space="preserve">
          <source>The syntax of the specified &lt;code&gt;selectors&lt;/code&gt; string is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bbbcf15be2b28788338aa49ca5e884e32fdfd3" translate="yes" xml:space="preserve">
          <source>The syntax skeleton looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bf66bb887d6d22b0fb6a52e00f0e13e90f866c" translate="yes" xml:space="preserve">
          <source>The syntax to activate this script is simply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6e9d90a4dac1000a7a5a3897297ec8254a6b55" translate="yes" xml:space="preserve">
          <source>The system clipboard is exposed through the global &lt;a href=&quot;navigator/clipboard&quot;&gt;&lt;code&gt;Navigator.clipboard&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89cd2803ba1efe3127aa18cdec6d91164d0cf00" translate="yes" xml:space="preserve">
          <source>The system notification system will vary of course by platform and browser, but this is ok, and the Notifications API is written to be general enough for compatibility with most system notification systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db18bcf753fdee82efe02aabcdfa424b41083e11" translate="yes" xml:space="preserve">
          <source>The table below describes the result of each possible combination of these flags depending on whether or not the target file or directory path already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a53d94156b422a029fa52da11ea34744a88e99a" translate="yes" xml:space="preserve">
          <source>The table which maps note names and octaves to their frequenies is created by calling &lt;code&gt;createNoteTable()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3071d97d409734ac2dc64b07c57873edc569b404" translate="yes" xml:space="preserve">
          <source>The tag names of elements in an XML DOM tree are returned in the same case in which they're written in the original XML file. If an XML document includes a tag &lt;code&gt;&quot;&amp;lt;SomeTag&amp;gt;&quot;&lt;/code&gt;, then the &lt;code&gt;tagName&lt;/code&gt; property's value is &lt;code&gt;&quot;SomeTag&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0647b46ac19837410ccd205654dc8ac65698893e" translate="yes" xml:space="preserve">
          <source>The target effect, as an object based on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly&quot;&gt;&lt;code&gt;AnimationEffectReadOnly&lt;/code&gt;&lt;/a&gt; interface, to assign to the animation. Although in the future other effects such as &lt;code&gt;SequenceEffect&lt;/code&gt;s or &lt;code&gt;GroupEffect&lt;/code&gt;s might be possible, the only kind of effect currently available is &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt;. This can be &lt;code&gt;null&lt;/code&gt; (which is the default) to indicate that there should be no effect applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae9f9ec5710f90aa5c3d6d598cbeb0d2d8bbcec" translate="yes" xml:space="preserve">
          <source>The target element (node) should be large enough to accommodate the largest contact surface area (typically a finger touch). If the target area is too small, touching it could result in firing other events for adjacent elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccff50c97e7bab3bd1d3cefd7bbaaae3311b970" translate="yes" xml:space="preserve">
          <source>The target element of the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5584c7f9878782be0c1b69eadee330089ae591" translate="yes" xml:space="preserve">
          <source>The target is a document (HTML or XML).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243949f9e106aa010af7ee144b345e3ccabd4853" translate="yes" xml:space="preserve">
          <source>The target is a font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed2e8d1d7e6d89728d29ae7402b730a86bd10c1" translate="yes" xml:space="preserve">
          <source>The target is a manifest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9641b4d627e5d07706b5051d439a8cf4bb9f7bf4" translate="yes" xml:space="preserve">
          <source>The target is a paint worklet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a297a90bd6460dbecbc11d2fffba6c99a75eb2" translate="yes" xml:space="preserve">
          <source>The target is a report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ef8dd73884af5f119be9d20d234bbb891d460f" translate="yes" xml:space="preserve">
          <source>The target is a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318b6076e7033ee54da2655b2766f0423047bb48" translate="yes" xml:space="preserve">
          <source>The target is a service worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf1d03fdbf29c701756b7abf33f99e82eb7650a" translate="yes" xml:space="preserve">
          <source>The target is a shared worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b03d02c83d63d948dbefcd5df6cf4785536739b" translate="yes" xml:space="preserve">
          <source>The target is a style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688162616fc1f1f118dc971e835fec82e42ff7de" translate="yes" xml:space="preserve">
          <source>The target is a worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a501f294f605f738504269491a07a44932ad7845" translate="yes" xml:space="preserve">
          <source>The target is an HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6761230630314e170c74eeef6c48ade24f1031" translate="yes" xml:space="preserve">
          <source>The target is an XLST transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714996a4b3ae91d36baa34cb0b1eab0990994eff" translate="yes" xml:space="preserve">
          <source>The target is an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656ae8b316d52f9736cbd07dd1137f037bf0793d" translate="yes" xml:space="preserve">
          <source>The target is an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd0ca7cb93640731e378e4b603b79869dcb00f8" translate="yes" xml:space="preserve">
          <source>The target is audio data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8511d2ed2f97809a789e57c0d56049d77ac7769" translate="yes" xml:space="preserve">
          <source>The target is data being fetched for use by an audio worklet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6624214b8297ffec17fa09ba4e03738c5012d910" translate="yes" xml:space="preserve">
          <source>The target is embedded content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740528456a2d49c95c41a5d9d7f6dd508b03a2c0" translate="yes" xml:space="preserve">
          <source>The target is video data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701e1cf5eb182f566867c1b3fb3567dd2d26ed51" translate="yes" xml:space="preserve">
          <source>The target stream is not a writable stream, or it does not have an owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7799312b9f8b35897c8e83ac8ba2f9e6bf65347" translate="yes" xml:space="preserve">
          <source>The target touch element or node should be large enough to accommodate a finger touch. If the target area is too small, touching it could result in firing other events for adjacent elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52c4f89ff89a2e48db3ae510abc8902445c17d1" translate="yes" xml:space="preserve">
          <source>The task handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45360e4329bdf4867b491d50252ecf1cc148bc11" translate="yes" xml:space="preserve">
          <source>The technique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3443407e40021ddf57e89d2894ae4a72e22b934c" translate="yes" xml:space="preserve">
          <source>The technology itself is here, and the more expensive headsets will only get cheaper over time so more people can experience virtual reality on their own in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b4f32856cf9e781e3b21b7c90afa6f6f79238" translate="yes" xml:space="preserve">
          <source>The term &quot;&lt;a href=&quot;https://www.w3.org/TR/html52/semantics-embedded-content.html#normalized-timeranges-object&quot;&gt;normalized TimeRanges object&lt;/a&gt;&quot; indicates that ranges in such an object are ordered, don't overlap, aren't empty, and don't touch (adjacent ranges are folded into one bigger range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d4e2c781e1c32faadf8c82cc555acc550d63c0" translate="yes" xml:space="preserve">
          <source>The terms used to describe trees show up often in the DOM Level 1 Core. Each of the boxes I drew in the tree above is a node in the tree. The line above a node expresses a parent-child relationship: the node on top is the parent, and the node on the bottom is the child. Two children of the same parent are therefore siblings. Similarly, one can refer to ancestors and descendants. (Cousins are too messy, though.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbafd347c86241d363c215ac09bd25edabf5189" translate="yes" xml:space="preserve">
          <source>The text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to measure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea4316f5e1f962f880b3ca966fd8cb50488253b" translate="yes" xml:space="preserve">
          <source>The text baseline is the bottom of the bounding box. This differs from the ideographic baseline in that the ideographic baseline doesn't consider descenders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e869b0abca1005fce419ee0dddeed51ac2c37674" translate="yes" xml:space="preserve">
          <source>The text baseline is the hanging baseline. (Used by Tibetan and other Indic scripts.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fdbd56d23b1d083676482de05344734da9f4af" translate="yes" xml:space="preserve">
          <source>The text baseline is the ideographic baseline; this is the bottom of the body of the characters, if the main body of characters protrudes beneath the alphabetic baseline. (Used by Chinese, Japanese, and Korean scripts.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb0bf1dcd5db88b603f29ffe44d5a8057e66f2d" translate="yes" xml:space="preserve">
          <source>The text baseline is the middle of the em square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4249e4c1661fed2ad0f169980bd26b0046b5c52" translate="yes" xml:space="preserve">
          <source>The text baseline is the normal alphabetic baseline. Default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da6cfe37d2eaeb0a5438bbc1f7cfff7a79200b5" translate="yes" xml:space="preserve">
          <source>The text baseline is the top of the em square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6a21c0086aabc042a627ab69fed049377c62e5" translate="yes" xml:space="preserve">
          <source>The text before the directive will not be affected, but the text after the directive will be styled using the CSS declarations in the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edbfc2b75b465a9031c98acc2741bc61ff305f8" translate="yes" xml:space="preserve">
          <source>The text below uses the term &quot;finger&quot; when describing the contact with the surface, but it could, of course, also be a stylus, mouse, or other method of pointing at a location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff981fd5cf7542dfe1dfda304ec91f3f6ef96703" translate="yes" xml:space="preserve">
          <source>The text direction is inherited from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element or the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c3980de62bd3949bad2f70b6fb6ba0bce34e9f" translate="yes" xml:space="preserve">
          <source>The text direction is left-to-right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c47bad62a037b0b5542cea2f6f66e474a13926" translate="yes" xml:space="preserve">
          <source>The text direction is right-to-left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c34a6f83adf22558fde52b2703d1c5a003d995" translate="yes" xml:space="preserve">
          <source>The text direction of the notification as specified in the constructor's &lt;code&gt;options&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613894d04dca8c08689549413b8e2517ed7b1831" translate="yes" xml:space="preserve">
          <source>The text is aligned at the normal end of the line (right-aligned for left-to-right locales, left-aligned for right-to-left locales).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9964c6ddf27801aca540598ddbcd39b3cf4fae" translate="yes" xml:space="preserve">
          <source>The text is aligned at the normal start of the line (left-aligned for left-to-right locales, right-aligned for right-to-left locales).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61de38401870be75538de83e3d348ca274792104" translate="yes" xml:space="preserve">
          <source>The text is centered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0376b8182acb6c439304e12e353fffc4c01f4a49" translate="yes" xml:space="preserve">
          <source>The text is filled using the current &lt;code&gt;fillStyle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63f091f36970af2cd61cf3e71bc1803686bcea0" translate="yes" xml:space="preserve">
          <source>The text is filled using the current &lt;code&gt;strokeStyle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9abfde275507a356751a6aeb12ebe08a774816" translate="yes" xml:space="preserve">
          <source>The text is left-aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327be8ef7656485a4ba38ce30a7b491d47c1c77b" translate="yes" xml:space="preserve">
          <source>The text is rendered using the font and text layout configuration as defined by the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;textalign&quot;&gt;&lt;code&gt;textAlign&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;textbaseline&quot;&gt;&lt;code&gt;textBaseline&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ddecdfbda39b189aa1cffe5287e1d56dd14ca5" translate="yes" xml:space="preserve">
          <source>The text is right-aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e921e9420150b94ffa4e3af4de6563af8d065d" translate="yes" xml:space="preserve">
          <source>The text may be provided as plain text, or a well-formed &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/&quot;&gt;SSML&lt;/a&gt; document. The SSML tags will be stripped away by devices that don't support SSML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9912d1d59d3ce779384010ad9d08a8fb3dd89f7" translate="yes" xml:space="preserve">
          <source>The text should also include, when possible, advice about how to go about correcting the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec62828590bcf53b57c3bc2fb8eb50076f87ff4" translate="yes" xml:space="preserve">
          <source>The text track is currently active but the cues aren't being displayed. If the user agent hasn't tried to obtain the track's cues yet, it will do so soon (thereby populating the track's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/cues&quot;&gt;&lt;code&gt;TextTrack.cues&lt;/code&gt;&lt;/a&gt; property). The user agent is keeping a list of the active cues (in the track's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/activeCues&quot;&gt;&lt;code&gt;activeCues&lt;/code&gt;&lt;/a&gt; property) and events are being fired at the corresponding times, even though the text isn't being displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85e4f2e2f5b03d437d8776491b4ae7e90ace19d" translate="yes" xml:space="preserve">
          <source>The text track is currently disabled. While the track's presence is exposed in the DOM, the user agent is otherwise ignoring it. No cues are active, no events are being fired, and the user agent won't attempt to obtain the track's cues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5071e89db723020405ee5255548e70a7145e57" translate="yes" xml:space="preserve">
          <source>The text track is currently enabled and is visible. If the track's cues list hasn't been obtained yet, it will be soon. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/activeCues&quot;&gt;&lt;code&gt;activeCues&lt;/code&gt;&lt;/a&gt; list is being maintained and events are firing at the appropriate times; the track's text is also being drawn appropriately based on the styling and the track's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff81fde5ab93f09b0eff65f20fd5a564fe2c1ee0" translate="yes" xml:space="preserve">
          <source>The text track mode&amp;mdash;sometimes identified using the IDL enum &lt;code&gt;TextTrackMode&lt;/code&gt;&amp;mdash;must be one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c5ced674991543f9a1496fbb9154556a120d2f" translate="yes" xml:space="preserve">
          <source>The text writing directionality of an element is which direction that text goes (for support of different language systems). Arabic languages and Hebrew are typical languages using the RTL directionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556fa02201170f3d9d42b92807d27dd7ab2a7a3c" translate="yes" xml:space="preserve">
          <source>The texture (&lt;a href=&quot;../webgltexture&quot;&gt;&lt;code&gt;WebGLTexture&lt;/code&gt;&lt;/a&gt;) or renderbuffer (&lt;a href=&quot;../webglrenderbuffer&quot;&gt;&lt;code&gt;WebGLRenderbuffer&lt;/code&gt;&lt;/a&gt;) of the attached image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1da37ff11b220619df6f1b403bef92c866b014" translate="yes" xml:space="preserve">
          <source>The texture unit to make active. The value is a &lt;code&gt;gl.TEXTURE&lt;em&gt;I&lt;/em&gt;&lt;/code&gt; where &lt;em&gt;I&lt;/em&gt; is within the range from 0 to &lt;code&gt;gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b67fd8a2b67c0dbbae7fa80acedb057e911b17a" translate="yes" xml:space="preserve">
          <source>The third and last variant of the &lt;code&gt;drawImage()&lt;/code&gt; method has eight parameters in addition to the image source. It lets us cut out a section of the source image, then scale and draw it on our canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4e9e087d8b95c8527a342a4b58d7536f169218" translate="yes" xml:space="preserve">
          <source>The third argument is used when creating images using lossy compression (namely, &lt;code&gt;image/jpeg&lt;/code&gt;) to specify the quality of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5e7729dc0575875af4041251b82b1d01be68f9" translate="yes" xml:space="preserve">
          <source>The third argument of &lt;code&gt;createDocument()&lt;/code&gt;, &lt;em&gt;doctype&lt;/em&gt;, is now optional and default to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c843b16043cf1b19823bb41b1869e5ccee90e2a" translate="yes" xml:space="preserve">
          <source>The third box has thresholds every 10% of visibility (0%, 10%, 20%, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae525c99b4083229da25c16185e819978f9e56f" translate="yes" xml:space="preserve">
          <source>The third field, &lt;code&gt;&quot;udp&quot;&lt;/code&gt;, is the protocol type, indicating that the candidate would use the UDP transport protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4000d41fc9ddb30e4ee8f266f739687faca29edf" translate="yes" xml:space="preserve">
          <source>The third line here is a bit complex-looking, so let's explain it step by step. The &lt;a href=&quot;../speechrecognitionevent/results&quot;&gt;&lt;code&gt;SpeechRecognitionEvent.results&lt;/code&gt;&lt;/a&gt; property returns a &lt;a href=&quot;../speechrecognitionresultlist&quot;&gt;&lt;code&gt;SpeechRecognitionResultList&lt;/code&gt;&lt;/a&gt; object containing &lt;a href=&quot;../speechrecognitionresult&quot;&gt;&lt;code&gt;SpeechRecognitionResult&lt;/code&gt;&lt;/a&gt; objects. It has a getter so it can be accessed like an array &amp;mdash; so the &lt;code&gt;[last]&lt;/code&gt; returns the &lt;code&gt;SpeechRecognitionResult&lt;/code&gt; at the last position. Each &lt;code&gt;SpeechRecognitionResult&lt;/code&gt; object contains &lt;a href=&quot;../speechrecognitionalternative&quot;&gt;&lt;code&gt;SpeechRecognitionAlternative&lt;/code&gt;&lt;/a&gt; objects that contain individual recognised words. These also have getters so they can be accessed like arrays &amp;mdash; the &lt;code&gt;[0]&lt;/code&gt; therefore returns the &lt;code&gt;SpeechRecognitionAlternative&lt;/code&gt; at position 0. We then return its transcript property to get a string containing the individual recognised result as a string, set the background color to that color, and report the color recognised as a diagnostic message in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18953466701a20beff83d0f5ba6d0c6e42cbf610" translate="yes" xml:space="preserve">
          <source>The third, and an optional step, is to call &lt;code&gt;closePath()&lt;/code&gt;. This method tries to close the shape by drawing a straight line from the current point to the start. If the shape has already been closed or there's only one point in the list, this function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2169749696510da9c0cbbf51c917b62399fe332e" translate="yes" xml:space="preserve">
          <source>The three &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; instances which provide the volume levels for each of the three oscillators. &lt;code&gt;gainNode2&lt;/code&gt; and &lt;code&gt;gainNode3&lt;/code&gt; will be linked together to have the same, adjustable, value using the &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea672b3ea7c10642e6cf77ca0f86a56ad126ed22" translate="yes" xml:space="preserve">
          <source>The three &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt;s used to generate the chord.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fa8ab165e5b51a942b43d22d7cee537232bb42" translate="yes" xml:space="preserve">
          <source>The three arrays provided are not all of the same length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549b1798c9cdd99edc96ff92c4f917b86748f33a" translate="yes" xml:space="preserve">
          <source>The three lines of code within the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt;try&lt;/a&gt;&lt;/code&gt; block perform the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3569aded5edc0854af679dfcab354715e07e17" translate="yes" xml:space="preserve">
          <source>The three modes of transactions are: &lt;code&gt;readwrite&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;versionchange&lt;/code&gt;. The only way to create and delete object stores and indexes is by using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/versionchange_indexedDB&quot;&gt;&lt;code&gt;versionchange&lt;/code&gt;&lt;/a&gt; transaction. To learn more about transaction types, see the reference article for &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB&quot;&gt;IndexedDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d9f685cd1f66458fcfb21f3bb8780f3f056b7d" translate="yes" xml:space="preserve">
          <source>The three parameters &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; are unitless and describe a direction vector in 3D space using the right-hand Cartesian coordinate system. The default value of the direction vector is &lt;code&gt;(1,&lt;/code&gt;&lt;code&gt;0,&lt;/code&gt;&lt;code&gt;0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cf5ba814325b1f5ee22b41baf5f2149d188758" translate="yes" xml:space="preserve">
          <source>The three parameters &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; are unitless and describe the listener's position in 3D space according to the right-hand Cartesian coordinate system. &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; objects use this position relative to individual audio sources for spatialisation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379d0e971ec0898dc67e5855fd2099c9e82328e9" translate="yes" xml:space="preserve">
          <source>The three versions of this method (&lt;code&gt;uniformMatrix2fv()&lt;/code&gt;, &lt;code&gt;uniformMatrix3fv()&lt;/code&gt;, and &lt;code&gt;unifomMatrix4fv()&lt;/code&gt;) take as the input value 2-component, 3-component, and 4-component vectors, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee0d4a8bf82ba474e0383f1483a9a7ab23ccc21" translate="yes" xml:space="preserve">
          <source>The time after which the keys in the current session can no longer be used to decrypt media data, or &lt;code&gt;NaN&lt;/code&gt; if no such time exists. This value is determined by the CDM and measured in milliseconds since January 1, 1970, UTC. This value may change during a session lifetime, such as when an action triggers the start of a window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f7b0a6d2af3493816cd4278304c87d2bba90a3" translate="yes" xml:space="preserve">
          <source>The time allowed to acquire the geolocation, defined by &lt;a href=&quot;../positionoptions/timeout&quot;&gt;&lt;code&gt;PositionOptions.timeout&lt;/code&gt;&lt;/a&gt; information that was reached before the information was obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d5c3cef8339a33f9a130b9fd0c61506053153e" translate="yes" xml:space="preserve">
          <source>The time allowed to acquire the geolocation, defined by &lt;a href=&quot;positionoptions/timeout&quot;&gt;&lt;code&gt;PositionOptions.timeout&lt;/code&gt;&lt;/a&gt; information was reached before the information was obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1264da00e1a038142c41d32850380240dc66a01" translate="yes" xml:space="preserve">
          <source>The time at which the event was created (in milliseconds). By specification, this value is time since epoch, but in reality browsers' definitions vary; in addition, work is underway to change this to be a &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad995297139d60770dad88980c4967846ad351c" translate="yes" xml:space="preserve">
          <source>The time in milliseconds since epoch at which the current animation cycle began. Use &lt;a href=&quot;animation/starttime&quot;&gt;&lt;code&gt;Animation.startTime&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9b359e7d5d09f451e7a07a7c7e89e40f4ff4a7" translate="yes" xml:space="preserve">
          <source>The time in milliseconds, relative to the time at which the document was created, at which the ad's visibility count was last updated, or the ad last became visible. 0 if the ad was not visible as of the last time it was checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5639a0979dc1da3d562c34ea86df8fef68e93b" translate="yes" xml:space="preserve">
          <source>The time is given in milliseconds elapsed since the UNIX epoch (the first moment of January 1, 1970, UTC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50408244a0c5e00507e98a6e100943c14600cdc8" translate="yes" xml:space="preserve">
          <source>The time lapse (in number of milliseconds) between each invocation (read/write).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7298c1becab2c29fbf072d589c54191fc8a64092" translate="yes" xml:space="preserve">
          <source>The time lapse (in number of milliseconds) between each invocation. The default value is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92acabfde31f4969686ebe8441648e97c847d79" translate="yes" xml:space="preserve">
          <source>The time origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867afebddae388c176e23fa31070ebf7653a7c03" translate="yes" xml:space="preserve">
          <source>The time that the exponential transition will begin, in the same time coordinate system as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt;. If it is less than or equal to &lt;code&gt;AudioContext.currentTime&lt;/code&gt;, the parameter will start changing immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29622cbe450b79ef9ec17df210dbd9cee84fe65" translate="yes" xml:space="preserve">
          <source>The time value of the timeline of the animation that generated the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01da2101f619c9ce83850ed3d2dfe6005e6f3a8" translate="yes" xml:space="preserve">
          <source>The time values for this timeline are calculated as a fixed offset from the global clock such that the &lt;strong&gt;zero time&lt;/strong&gt; corresponds to the &lt;a href=&quot;../performancetiming/navigationstart&quot;&gt;&lt;code&gt;navigationStart&lt;/code&gt;&lt;/a&gt; moment plus a signed delta known as the &lt;strong&gt;origin time.&lt;/strong&gt; Prior to establishing the &lt;code&gt;navigationStart&lt;/code&gt; moment, the document timeline is &lt;strong&gt;inactive&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b5fa2c63996c7fdfbd808a5e201b95fc14986b" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds (thousandths of a second), the timer should delay in between executions of the specified function or code. If this parameter is less than 10, a value of 10 is used. Note that the actual delay may be longer; see &lt;a href=&quot;settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt; in &lt;a href=&quot;settimeout&quot;&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850b9f5cb43165130dc41ff0223235e32c577837" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds (thousandths of a second), the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute &quot;immediately&quot;, or more accurately, as soon as possible. Note that in either case, the actual delay may be longer than intended; see &lt;a href=&quot;#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51006b28f5faba42d4672163066ad3390258f6b9" translate="yes" xml:space="preserve">
          <source>The time, in seconds, at which the sound should begin to play, in the same time coordinate system used by the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;when&lt;/code&gt; is less than (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt;, or if it's 0, the sound begins to play at once. &lt;strong&gt;The default value is 0.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e05ba2c974a8ecf45111e52225c19d0be8dfa9" translate="yes" xml:space="preserve">
          <source>The time, in seconds, at which the sound should begin to play. This value is specified in the same time coordinate system as the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; is using for its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;currentTime&lt;/code&gt;&lt;/a&gt; attribute. A value of 0 (or omitting the &lt;code&gt;when&lt;/code&gt; parameter entirely) causes the sound to start playback immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de721c0ebd2363a7d37ba12727e8f481ca6bc4ca" translate="yes" xml:space="preserve">
          <source>The time, in seconds, at which the sound should stop playing. This value is specified in the same time coordinate system as the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; is using for its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;currentTime&lt;/code&gt;&lt;/a&gt; attribute. Omitting this parameter, specifying a value of 0, or passing a negative value causes the sound to stop playback immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff515c865d89c92c8dee5b1d05868434639ce60" translate="yes" xml:space="preserve">
          <source>The time-constant value, given in seconds, of an exponential approach to the target value. The larger this value is, the slower the transition will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e574a26804b5de2e91612c05c785e69595c21b93" translate="yes" xml:space="preserve">
          <source>The timer callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782825efa2c52abf8232cbd032d5370fc0ebf366" translate="yes" xml:space="preserve">
          <source>The timer callback is called initially when the video starts playing (when the &quot;play&quot; event occurs), then takes responsibility for establishing itself to be called periodically in order to launch the keying effect for each frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fafb170f3c7c0a68f8a7861b6c62ab8a0b0810" translate="yes" xml:space="preserve">
          <source>The timer starts when all commands prior to &lt;code&gt;beginQueryEXT&lt;/code&gt; have been fully executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445b8b3f2e4d819ea352ecc1fdb32a4073922f1c" translate="yes" xml:space="preserve">
          <source>The timer stops when all commands prior to &lt;code&gt;endQueryEXT&lt;/code&gt; have been fully executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640b01d16eab106fe19825a6056a594ec94ae6e8" translate="yes" xml:space="preserve">
          <source>The timestamp is not actually high-resolution. To mitigate security threats such as &lt;a href=&quot;https://spectreattack.com/&quot;&gt;Spectre&lt;/a&gt;, browsers currently round the results to varying degrees. (Firefox started rounding to 1 millisecond in Firefox 60.) Some browsers may also slightly randomize the timestamp. The precision may improve again in future releases; browser developers are still investigating these timing attacks and how best to mitigate them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e9df1fe9899269380543392d645a2efa407814" translate="yes" xml:space="preserve">
          <source>The timestamp must be greater that the cue's start timestamp, greater than any previous timestamp in the cue payload, and less than the cue's end timestamp. The &lt;em&gt;active text&lt;/em&gt; is the text between the timestamp and the next timestamp or to the end of the payload if there is not another timestamp in the payload. Any text before the &lt;em&gt;active text&lt;/em&gt; in the payload is &lt;em&gt;previous text&lt;/em&gt; . Any text beyond the &lt;em&gt;active text&lt;/em&gt; is &lt;em&gt;future text&lt;/em&gt; . This enables karaoke style captions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5213f404dce715e1713ed560319be777bde95aae" translate="yes" xml:space="preserve">
          <source>The timestamp starts at 0 the first time &lt;a href=&quot;../vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt; is invoked for a given &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c970abca33b011cf473e2f7a4fda6869aa401b9" translate="yes" xml:space="preserve">
          <source>The timestamps must be in one of two formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909f3c114e0aa5eb5ac893ea322f701875814631" translate="yes" xml:space="preserve">
          <source>The title is often specified in the &lt;a href=&quot;ownernode&quot;&gt;&lt;code&gt;ownerNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e914e958c9ff10be273db21a78b3c6376ac168fb" translate="yes" xml:space="preserve">
          <source>The title of the notification as specified in the first parameter of the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f9d357b5b22dd8d2ecb84f379a64df18a66580" translate="yes" xml:space="preserve">
          <source>The title that must be shown within the notification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b28b8da17d35eef9685e68ff700ab5cec9638f" translate="yes" xml:space="preserve">
          <source>The toString method of &lt;code&gt;URL&lt;/code&gt; is the &lt;code&gt;href&lt;/code&gt; property, so the constructor can be used to normalise and encode a URL directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee4119c91f8a1badb85d78f595ae789b942e5f6" translate="yes" xml:space="preserve">
          <source>The toggle that turns the IIR filter on and off is set up in the similar way. First, the HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42c1854b696df7c89a29e1ee487255c55337f4c" translate="yes" xml:space="preserve">
          <source>The tone buffer is a string which can contain any combination of the characters that are permitted by the DTMF standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca09bcbbc51c780ff95622a177690c6dae64acc" translate="yes" xml:space="preserve">
          <source>The tools will save you!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629c60ad22b2e49ba0563f81bd1ac6bc775c6e26" translate="yes" xml:space="preserve">
          <source>The top offset of the bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdfa09e08f24c498e3b21067c290384bff87f61" translate="yes" xml:space="preserve">
          <source>The topmost &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object located at the specified coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc1ea739aef9066f9668d9261127934215b793a" translate="yes" xml:space="preserve">
          <source>The total amount of the payment request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b377389cf9498431176c546586e6ad2eecc58e12" translate="yes" xml:space="preserve">
          <source>The total number of invocations. It can be a positive integer or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; (read/write).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04b2f447ee3184b11324f42431cbd8a83666695" translate="yes" xml:space="preserve">
          <source>The total number of invocations. It can be a positive integer or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;. The default value is &lt;code&gt;Infinity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4205439a54a5b9de7ccd7e959de355934aeae94" translate="yes" xml:space="preserve">
          <source>The total number of milliseconds the ad has been visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbaf5a9bd48514e6795006702f39f4448be288d" translate="yes" xml:space="preserve">
          <source>The total number of objects that share the current key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c9f7ff60a5d7e86dbfa945c5978961442b340a" translate="yes" xml:space="preserve">
          <source>The touch event interfaces support application-specific single and multi-touch interactions. However, the interfaces can be a bit tricky for programmers to use because touch events are very different from other DOM input events, such as &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;mouse events&lt;/code&gt;&lt;/a&gt;. The application described in this guide shows how to use touch events for simple single and multi-touch interactions, the basics needed to build application-specific gestures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edc98a1f2b9901a36d0d94b2c66332f67fb8c0c" translate="yes" xml:space="preserve">
          <source>The touch events interfaces are relatively low-level APIs that can be used to support application specific multi-touch interactions such as a two-finger gesture. A multi-touch interaction starts when a finger (or stylus) first touches the contact surface. Other fingers may subsequently touch the surface and optionally move across the touch surface. The interaction ends when the fingers are removed from the surface. During this interaction, an application receives touch events during the start, move and end phases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beff4c11c07afa0e901a406aaf1ea248ea8e0de9" translate="yes" xml:space="preserve">
          <source>The touch events interfaces support application specific single and multi-touch interactions such as a two-finger gesture. A multi-touch interaction starts when a finger (or stylus) first touches the contact surface. Other fingers may subsequently touch the surface and optionally move across the touch surface. The interaction ends when the fingers are removed from the surface. During this interaction, an application receives touch events during the start, move, and end phases. The application may apply its own semantics to the touch inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6283c768ccaa829ad6d9878f0380525c911a392" translate="yes" xml:space="preserve">
          <source>The touch events standard defines a few browser requirements regarding touch and mouse interaction (see the &lt;a href=&quot;https://w3c.github.io/touch-events/#mouse-events&quot;&gt;&lt;em&gt;Interaction with Mouse Events and click&lt;/em&gt;&lt;/a&gt; section for details), noting &lt;em&gt;the browser may fire both touch events and mouse events in response to the same user input&lt;/em&gt;. This section describes the requirement that may affect an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ee74df19c923f314935c82bd18b52b7f8a2410" translate="yes" xml:space="preserve">
          <source>The touch list(s) an application uses depends on the semantics of the application's &lt;em&gt;gestures&lt;/em&gt;. For example, if an application supports a single touch (tap) on one element, it would use the &lt;a href=&quot;../touchevent/targettouches&quot;&gt;&lt;code&gt;targetTouches&lt;/code&gt;&lt;/a&gt; list in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; event handler to process the touch point in an application-specific manner. If an application supports two-finger swipe for any two touch points, it will use the &lt;a href=&quot;../touchevent/changedtouches&quot;&gt;&lt;code&gt;changedTouches&lt;/code&gt;&lt;/a&gt; list in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; event handler to determine if two touch points had moved and then implement the semantics of that gesture in an application-specific manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73b4b89d15c3895b44a7237a1b15981fea96485" translate="yes" xml:space="preserve">
          <source>The touch point (or points) that were removed from the surface can be found in the &lt;a href=&quot;touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; specified by the &lt;code&gt;changedTouches&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52bae5d2f9dc4e3a6516dd3d4266274d9ffc68c" translate="yes" xml:space="preserve">
          <source>The touch point has left the document window and moved into the browser's UI area, a plug-in, or other external content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8023f5a6ac801de2a7a18759fe7f3530f9edb776" translate="yes" xml:space="preserve">
          <source>The touch-sensitive surface. This may be a screen or trackpad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe1e6ba2fca467897f0a0650843642f5c4c6ac2" translate="yes" xml:space="preserve">
          <source>The track ID can also be used as the fragment of a URL that loads the specific track (if the media supports media fragments).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dca6f449de7fbd38ffaa0e71829e564d53b6b9" translate="yes" xml:space="preserve">
          <source>The track doesn't have an explicit kind, or the kind provided by the track's metadata isn't recognized by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff537a33dfad3306ad59b75a947cdafd593e34d3" translate="yes" xml:space="preserve">
          <source>The track element's text track data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0825ac05d2db655b16da9c5b872556904b1f604" translate="yes" xml:space="preserve">
          <source>The track has the resolution offered by the camera, its driver or the OS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f162da9352bd3d61d36c4487e9a599c815f8da3c" translate="yes" xml:space="preserve">
          <source>The track on which this method was called is stopped rather than running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06e911ff8cd0f8fa123d435e88a3008534b8ada" translate="yes" xml:space="preserve">
          <source>The track to which the event refers; this is &lt;code&gt;null&lt;/code&gt; by default, but should be set to a &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../texttrack&quot;&gt;&lt;code&gt;TextTrack&lt;/code&gt;&lt;/a&gt; as appropriate given the type of track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bc09ce77a9b8f036ecb2fc850ffde24c0430b2" translate="yes" xml:space="preserve">
          <source>The track's &lt;code&gt;getConstraints()&lt;/code&gt; method returns the set of constraints passed into the most recent call to &lt;code&gt;applyConstraints()&lt;/code&gt;. This may not represent the actual current state of the track, due to properties whose requested values had to be adjusted and because platform default values aren't represented. For a complete representation of the track's current configuration, use &lt;code&gt;getSettings()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd7a0c84eb0a8340dc3e5c095a1fad5fb8c56a1" translate="yes" xml:space="preserve">
          <source>The track's resolution might be the result of the user agent using cropping or downscaling from a higher camera resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d39d291d0b6cecac0b9ce7d0506b2ede7ae391" translate="yes" xml:space="preserve">
          <source>The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn't define an order, the relative order in which the tracks are declared by the media resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ede6a1865145e849014d1cd9fa6348cd95cbf1" translate="yes" xml:space="preserve">
          <source>The transaction associated with this operation is in read-only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBTransaction#mode_constants&quot;&gt;mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790d7f4dcc8015404aa32ea08a5f5d5832d429b7" translate="yes" xml:space="preserve">
          <source>The transaction for the request. This property can be null for certain requests, for example those returned from &lt;a href=&quot;idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; unless an upgrade is needed. (You're just connecting to a database, so there is no transaction to return).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b086ac3f530e7c1f8037842f89024f8968d55ce" translate="yes" xml:space="preserve">
          <source>The transaction has already been committed or aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4370da52d8110f7068395471a13a88ac5ec58c72" translate="yes" xml:space="preserve">
          <source>The transaction mode is read only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a359917bbf88b7cbc7829d523a9dc5e4893260b" translate="yes" xml:space="preserve">
          <source>The transaction mode is read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587b551e2e586619bd702e80c54ff67fc53c4b9d" translate="yes" xml:space="preserve">
          <source>The transceiver is stopped if the &lt;a href=&quot;stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; method has been called or if a change to either the local or the remote description has caused the transceiver to be stopped for some reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a931b6d3e9d45e6144e8884a22dbf52e732e9" translate="yes" xml:space="preserve">
          <source>The transceiver's &lt;em&gt;current&lt;/em&gt; direction is indicated by the &lt;a href=&quot;currentdirection&quot;&gt;&lt;code&gt;currentDirection&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952b2d393e2696de7effdcb93c261112f610d0ec" translate="yes" xml:space="preserve">
          <source>The transceiver's direction is set to &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt;, indicating that it should resume both sending and receiving audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d07773c828fc015203b6f6f967d008c7d59040" translate="yes" xml:space="preserve">
          <source>The transceiver's incoming audio track is re-enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09df1284c9a831725c76fda5d5045aa61f1bd925" translate="yes" xml:space="preserve">
          <source>The transfer is complete; all data is now in the &lt;code&gt;response&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdd52022778e2869ae37169401a4b4c1765680e" translate="yes" xml:space="preserve">
          <source>The transformation matrix is described by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702990099850889afd78dbce74c10ba3b60b0305" translate="yes" xml:space="preserve">
          <source>The transformations that have been applied (i.e. &lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; &amp;ndash; see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0938c394e3c541b3c3b12c679a2a1f3c53d9665" translate="yes" xml:space="preserve">
          <source>The transition is cancelled when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198a607957cf3b1ca125ea9c68b9e43bc64e6f02" translate="yes" xml:space="preserve">
          <source>The transition is stopped before it has run to completion, e.g. by moving the mouse off a hover-transitioning element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3d45d20e64f2a6352734d98e23d14ff46ec983" translate="yes" xml:space="preserve">
          <source>The transport has finished gathering ICE candidates and has sent the end-of-candidates indicator to the remote device. The transport won't gather any further candidates unless an &lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICE restart&lt;/a&gt; occurs, at which point the gathering process starts over from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1a4363e1a1fcf331a0d446fd826fd447658e33" translate="yes" xml:space="preserve">
          <source>The transport has finished gathering ICE candidates and has sent the end-of-candidates indicator to the remote device. The transport won't gather any further candidates unless an &lt;a href=&quot;webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICE restart&lt;/a&gt; occurs, at which point the gathering process starts over from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf7aff2fc2968adb3f76725ce2e81292e258b96" translate="yes" xml:space="preserve">
          <source>The transport has finished gathering local candidates and has received a notification from the remote peer that no more candidates will be sent. In addition, all candidate pairs have been considered and a pair has been selected for use. If consent checks fail on all successful candidate pairs, the transport state will change to &lt;code&gt;&quot;failed&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084685374341c863ee6d7e21ddee94fffe624dee" translate="yes" xml:space="preserve">
          <source>The transport has shut down and is no longer responding to STUN requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3b8d3abc14ff6b64a86db8fc5ea4ec232895ec" translate="yes" xml:space="preserve">
          <source>The transport is in the process of gathering candidates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495f9ca4d3523122a61e086c41608b8906d4f99e" translate="yes" xml:space="preserve">
          <source>The transport is the controlled agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97414990bb7c492655e8d040bdec7ae25d535835" translate="yes" xml:space="preserve">
          <source>The transport layer deals with any buffered messages; the protocol layer decides whether to send them or discard them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e078ccc7a8a69185c33b9e5d0a48252c9207d57b" translate="yes" xml:space="preserve">
          <source>The transport may revert from the &lt;code&gt;&quot;connected&quot;&lt;/code&gt; state to the &lt;code&gt;&quot;checking&quot;&lt;/code&gt; state if either peer decides to cancel consent to use the selected candidate pair, and may revert to &lt;code&gt;&quot;disconnected&quot;&lt;/code&gt; if there are no candidates left to check but one or both clients are still gathering candidates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ff00f1b8bb2211881e44f4f40a3adbae268344" translate="yes" xml:space="preserve">
          <source>The transport over which Real-time Transport Control Protocol (RTCP) information is exchanged. This value is &lt;code&gt;null&lt;/code&gt; before the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport&quot;&gt;&lt;code&gt;RTCDtlsTransport&lt;/code&gt;&lt;/a&gt; object is created. When bundling is in use, more than one &lt;code&gt;RTCRtpSender&lt;/code&gt; can share the same transport, sending all RTP and RTCP information over that one transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ec674a7939f141910ada02b77f1641d98e5582" translate="yes" xml:space="preserve">
          <source>The transport will receive incoming connection attempts but won't attempt a connection itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678912387f961d7deb65c71f07ac2a1c9751f31f" translate="yes" xml:space="preserve">
          <source>The transport will receive incoming connection requests but won't try to open an outbound connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2baf4550e297591b808a18f2ae4d56852f2a810" translate="yes" xml:space="preserve">
          <source>The transport will try to open a connection simultaneously with its peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b54b001afea6e3deb1f526f12598fa9e9d8a77a" translate="yes" xml:space="preserve">
          <source>The transport will try to open an outbound connection but won't receive incoming connection requests. This is the most common type, and the only one that most user agents will gather.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95fd5542bf289bf620175077307c06d90bcec6e" translate="yes" xml:space="preserve">
          <source>The transport will try to open an outbound connection but won't receive inoming connection requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e476fe6d79eeaa45b5a8ddb1a0bccd6a9e8734" translate="yes" xml:space="preserve">
          <source>The transport will try to simultaneously open a connection with its peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cbc00820cb51110f2615e500ccf52507b22803" translate="yes" xml:space="preserve">
          <source>The tree could not be successfully serialized, probably due to issues with the content's compatibility with XML serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c369798b238dce1ae0653c95d1ca6bb2a91c3f2" translate="yes" xml:space="preserve">
          <source>The triangle's corners are at (20, 150), (120, 20), and (220, 150).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03de2d9234cf1e36953cbe7efbca1b33e0f5adc8" translate="yes" xml:space="preserve">
          <source>The twin concepts of &lt;strong&gt;constraints&lt;/strong&gt; and &lt;strong&gt;capabilities&lt;/strong&gt; let the browser and Web site or app exchange information about what &lt;strong&gt;constrainable properties&lt;/strong&gt; the browser's implementation supports and what values it supports for each one. This article discusses capabilities and constraints, as well as media settings, and includes an example we call the &lt;a href=&quot;#Example:_Constraint_exerciser&quot;&gt;Constraint Exerciser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33af60cde98654d6176e7524c265199b5877270a" translate="yes" xml:space="preserve">
          <source>The twin concepts of &lt;strong&gt;constraints&lt;/strong&gt; and &lt;strong&gt;capabilities&lt;/strong&gt; let the browser and Web site or app exchange information about what &lt;strong&gt;constrainable properties&lt;/strong&gt; the browser's implementation supports and what values it supports for each one. This article discusses capabilities and constraints, as well as media settings, and includes an example we call the &lt;a href=&quot;#Example:_Constraint_exerciser&quot;&gt;Constraint Exerciser&lt;/a&gt;. The Constraint Exerciser lets you experiment with the results of different constraint sets being applied to the audio and video tracks coming from the computer's A/V input devices (such as its webcam and microphone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185e8f6caa796c1a44f238bf3126739dd43d706e" translate="yes" xml:space="preserve">
          <source>The two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for&quot;&gt;&lt;code&gt;for&lt;/code&gt; loops&lt;/a&gt; are for looping through the rows and columns of arcs. For each arc, we start a new path by calling &lt;code&gt;beginPath()&lt;/code&gt;. In the code, each of the parameters for the arc is in a variable for clarity, but you wouldn't necessarily do that in real life.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bddbe13a65160a8541e9c04786a58dfed229250" translate="yes" xml:space="preserve">
          <source>The two available values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e21381005166edaca9bf7079c820222cd23eea" translate="yes" xml:space="preserve">
          <source>The two limits react differently to limits being reached:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac9924cd210101fe4e7d8b4485df00e49c34481" translate="yes" xml:space="preserve">
          <source>The two mechanisms within Web Storage are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a5fc46bf5df01feca8bb629c243ea2697f42ac" translate="yes" xml:space="preserve">
          <source>The two methods &lt;code&gt;blur()&lt;/code&gt; and &lt;code&gt;focus()&lt;/code&gt; are inherited from &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; from HTML5 on, but were defined on &lt;code&gt;HTMLTextAreaElement&lt;/code&gt; in DOM Level 2 HTML and earlier specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e943d3167c339f9c26bfd83ec2c58ca03faa2d19" translate="yes" xml:space="preserve">
          <source>The two most common use cases for DASH involve watching content &amp;ldquo;on demand&amp;rdquo; or &amp;ldquo;live.&amp;rdquo; On demand allows a developer to take their time transcoding the assets into multiple resolutions of various quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aca506cfd8375b0bfce8880f1b126a7927043e" translate="yes" xml:space="preserve">
          <source>The two output arrays, &lt;code&gt;magResponseOutput&lt;/code&gt; and &lt;code&gt;phaseResponseOutput&lt;/code&gt;, must be created before calling this method; they must be the same size as the array of input frequency values (&lt;code&gt;frequencyArray&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40cde4e1b1bf397a39232b2fe0f836063e52e4f" translate="yes" xml:space="preserve">
          <source>The two properties &lt;code&gt;tabIndex&lt;/code&gt; and &lt;code&gt;accessKey&lt;/code&gt; are inherited from &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; from HTML5 on, but were defined on &lt;code&gt;HTMLTextAreaElement&lt;/code&gt; in DOM Level 2 HTML and earlier specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfc18f529aa722d4cd22d93ea96f2b173b752a9" translate="yes" xml:space="preserve">
          <source>The two values are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb1d60746ec982aa6e91d7aee47f4ea1d0cc7d3" translate="yes" xml:space="preserve">
          <source>The two vectors must be separated by an angle of 90&amp;deg; &amp;mdash; in linear analysis terms, they must be perpendicular to each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf975c7db946bc9239d7f9c321b13a4af5815edf" translate="yes" xml:space="preserve">
          <source>The type argument to the &lt;a href=&quot;../datatransfer/cleardata&quot;&gt;&lt;code&gt;clearData()&lt;/code&gt;&lt;/a&gt; method is optional. If the type is not specified, the data associated with all types is removed. If the drag contains no drag data items, or all of the items have been subsequently cleared, then no drag will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639f6c11b96e6871d52cfb55747acca73e3692c7" translate="yes" xml:space="preserve">
          <source>The type information associated with this attribute. While the type information contained in this attribute is guaranteed to be correct after loading the document or invoking &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/normalizeDocument&quot;&gt;&lt;code&gt;Document.normalizeDocument&lt;/code&gt;&lt;/a&gt;, this property may not be reliable if the node was moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd0f3155fa102714913f1aadfd8340e7fed0d31" translate="yes" xml:space="preserve">
          <source>The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77897b9cfb0213cb24bf9140c1ef3098cb37d95" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;MessageEvent&lt;/code&gt; that will be created. This can be one of XXX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9004e450d170d58eaff77bb99a80c23b4fba2c98" translate="yes" xml:space="preserve">
          <source>The type of box represented by the &lt;code&gt;DOMRect&lt;/code&gt; is specified by the method or property that returned it. For example, &lt;a href=&quot;vreyeparameters/renderrect&quot;&gt;&lt;code&gt;VREyeParameters.renderRect&lt;/code&gt;&lt;/a&gt; from the WebVR API specifies the viewport of a &lt;a href=&quot;htmlcanvaselement&quot;&gt;canvas&lt;/a&gt; into which visuals for one eye of a head mounted display should be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d01dd27461147d5b48f3650189165491a1ba6e" translate="yes" xml:space="preserve">
          <source>The type of device that generated the event (one of the &lt;code&gt;MOZ_SOURCE_*&lt;/code&gt; constants listed below). This lets you, for example, determine whether a mouse event was generated by an actual mouse or by a touch event (which might affect the degree of accuracy with which you interpret the coordinates associated with the event).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d590994b67d46d16aa8a5c5dab6f24afda64fe" translate="yes" xml:space="preserve">
          <source>The type of entry to retrieve such as &quot;&lt;code&gt;frame&lt;/code&gt;&quot;. The valid entry types are listed in &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;PerformanceEntry.entryType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f1f1a83dad11563b21f25286f5f5a00190ccbc" translate="yes" xml:space="preserve">
          <source>The type of entry to retrieve such as &quot;&lt;code&gt;mark&lt;/code&gt;&quot;. The valid entry types are listed in &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;PerformanceEntry.entryType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55dbde0fa9fb2c2552554a954108fff76c2a8c2" translate="yes" xml:space="preserve">
          <source>The type of performance metric (for example, &quot;&lt;code&gt;mark&lt;/code&gt;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9737820522ceeb66868cf8d924893cc4b51434f" translate="yes" xml:space="preserve">
          <source>The type of playback that the context will be used for, as a value from the &lt;a href=&quot;../audiocontextlatencycategory&quot;&gt;&lt;code&gt;AudioContextLatencyCategory&lt;/code&gt;&lt;/a&gt; enum or a double-precision floating-point value indicating the preferred maximum latency of the context in seconds. The user agent may or may not choose to meet this request; check the value of &lt;a href=&quot;baselatency&quot;&gt;&lt;code&gt;AudioContext.baseLatency&lt;/code&gt;&lt;/a&gt; to determine the true latency after creating the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4709fb5f2b012f0275faea3bc1a59068805550" translate="yes" xml:space="preserve">
          <source>The type of playback that the context will be used for, as a value from the &lt;a href=&quot;audiocontextlatencycategory&quot;&gt;&lt;code&gt;AudioContextLatencyCategory&lt;/code&gt;&lt;/a&gt; enum or a double-precision floating-point value indicating the preferred maximum latency of the context in seconds. The user agent may or may not choose to meet this request; check the value of &lt;a href=&quot;audiocontext/baselatency&quot;&gt;&lt;code&gt;AudioContext.baseLatency&lt;/code&gt;&lt;/a&gt; to determine the true latency after creating the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b7d6f224e876897b91381cce53cb41c65bebf1" translate="yes" xml:space="preserve">
          <source>The type of pseudo class is determined by the selector it is using and working is similar in nature as it works in HTML. Following CSS pseudo classes can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584491962a6d71144cea4ca5026641b9d2a30e47" translate="yes" xml:space="preserve">
          <source>The type of the &lt;code&gt;methodDetails&lt;/code&gt; property depends on the payment method. For example, if &lt;code&gt;methodName&lt;/code&gt; is &lt;code&gt;basic-card&lt;/code&gt;, indicating that the basic card payment method is being used for validation, the &lt;code&gt;methodDetails&lt;/code&gt; field must be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BasicCardChangeDetails&quot;&gt;&lt;code&gt;BasicCardChangeDetails&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ac76f8efd2b77355811c84ae61a14a87201624" translate="yes" xml:space="preserve">
          <source>The type of the Event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996d506b927c165f61cd2bebabe1d092da5838ef" translate="yes" xml:space="preserve">
          <source>The type of the ExtendableEvent, for example &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/install&quot;&gt;install&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/activate&quot;&gt;activate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955cc4dc874d68d77a4b02d7be8c137075f1c69d" translate="yes" xml:space="preserve">
          <source>The type of the alignment value as specified by one of the SVG_PRESERVEASPECTRATIO_* constants defined on this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978109c7e8978b8fd7fbcdabcf48636f10ce3310" translate="yes" xml:space="preserve">
          <source>The type of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158ed15176fd5a4b3d4a74e2802f08145ae16090" translate="yes" xml:space="preserve">
          <source>The type of the meet-or-slice value as specified by one of the SVG_MEETORSLICE_* constants defined on this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62cfc8dcbe0d91dbebdc9b3b482246c11fb72a1" translate="yes" xml:space="preserve">
          <source>The type of the object does not match the expected type. (Legacy code value: &lt;code&gt;17&lt;/code&gt; and legacy constant name: &lt;code&gt;TYPE_MISMATCH_ERR&lt;/code&gt;) This value is deprecated; the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is now raised instead of a &lt;code&gt;DOMException&lt;/code&gt; with this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05edd3ecc1d2a9e7c9fd01cddb1aad6e8d5510e0" translate="yes" xml:space="preserve">
          <source>The type of the value as specified by one of the &lt;code&gt;SVG_ANGLETYPE_*&lt;/code&gt; constants defined on this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023380d1b9698644a59c5c5668f188e75a0923da" translate="yes" xml:space="preserve">
          <source>The type of the value as specified by one of the SVG_LENGTHTYPE_* constants defined on this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2137324c641c753a480c5dca815fb036fb4bfb" translate="yes" xml:space="preserve">
          <source>The type of the value as specified by one of the SVG_TRANSFORM_* constants defined on this interface.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
