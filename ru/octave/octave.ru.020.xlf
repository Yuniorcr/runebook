<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="6694cbea309be3d07fa68eb73e0312a4aa916be9" translate="yes" xml:space="preserve">
          <source>When called without a line number specification all breakpoints in the named function are cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f206124f910cee0ed19cd3983d529f8be5d6e938" translate="yes" xml:space="preserve">
          <source>When called without an argument the current figure is redrawn. Otherwise, the figure with graphic handle &lt;var&gt;h&lt;/var&gt; is redrawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8246cfc782453f98e6ae01a93256f1849e0e556c" translate="yes" xml:space="preserve">
          <source>When called without an argument, display the NEWS file for Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c552223b9156456dfdddfcfea4931dd237bd62" translate="yes" xml:space="preserve">
          <source>When called without an argument, return a cell array of strings of the current tick labels as specified in the &lt;code&gt;&quot;xticklabel&quot;&lt;/code&gt; axes property. These labels can be changed by calling &lt;code&gt;xticklabels&lt;/code&gt; with a cell array of strings. Note: a vector of numbers will be mapped to a cell array of strings. If fewer labels are specified than the current number of ticks, blank labels will be appended to the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed27e3402ba4e6e395be593483eaed341b1d346a" translate="yes" xml:space="preserve">
          <source>When called without an argument, return the current tick locations as specified in the &lt;code&gt;&quot;xtick&quot;&lt;/code&gt; axes property. These locations can be changed by calling &lt;code&gt;xticks&lt;/code&gt; with a vector of tick values. Note: ascending order is not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1dae37ea5a9406c3323965b8438018c7ed08a4" translate="yes" xml:space="preserve">
          <source>When called without an input argument the function prints the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f521d6579e5fbae52e74a396bd3803a4834876" translate="yes" xml:space="preserve">
          <source>When called without any input or output arguments, &lt;code&gt;optimset&lt;/code&gt; prints a list of all valid optimization parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b652053c08aee6c96b1ee015582724c50b74e6c2" translate="yes" xml:space="preserve">
          <source>When called without arguments, return a structure containing the last error message and other information related to this error. The elements of the structure are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffeb3349717a5ea6e5ebe9441cdaaea6ccb03ec" translate="yes" xml:space="preserve">
          <source>When called without arguments, return all graphic objects beginning with the root object (0) and including all of its descendants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd551e706b3a786fc9ef37f94ea55be3799d1e8" translate="yes" xml:space="preserve">
          <source>When called without input arguments, return the last error message and message identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c04bc5c73bd45a302c7c59d991848d20c1f0d1" translate="yes" xml:space="preserve">
          <source>When called without input arguments, return the last warning message and message identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acb36b2dd8b7f4ab8d95581c9bf6d948951503a" translate="yes" xml:space="preserve">
          <source>When coding tests the Octave convention is that lines that begin with a block type do not have a semicolon at the end. Any code that is within a block, however, is normal Octave code and usually will have a trailing semicolon. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6327505875051cc15a914bdc81d11774470f92ae" translate="yes" xml:space="preserve">
          <source>When comparing two different expressions (&lt;var&gt;f&lt;/var&gt;, &lt;var&gt;f2&lt;/var&gt;), the slope of the line on the speedup ratio graph should be larger than 1 if the new expression is faster. Better algorithms have a shallow slope. Generally, vectorizing an algorithm will not change the slope of the execution time graph, but will shift it relative to the original. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1acaee673146515a13fb3836ea2e51f246e251b" translate="yes" xml:space="preserve">
          <source>When computing the digamma function (when &lt;var&gt;k&lt;/var&gt; equals zero), &lt;var&gt;z&lt;/var&gt; can have any value real or complex value. However, for polygamma functions (&lt;var&gt;k&lt;/var&gt; higher than 0), &lt;var&gt;z&lt;/var&gt; must be real and non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f191c82b9ebed23a055e35f9f979db6fe2b5f7" translate="yes" xml:space="preserve">
          <source>When confronted with two objects of equal precedence, Octave will use the method of the object that appears first in the list of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06cf2b00922677997931b8f80496054df044865" translate="yes" xml:space="preserve">
          <source>When creating a directory permissions will be set to &lt;code&gt;0777&amp;nbsp;-&amp;nbsp;UMASK&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc19c82fe91829272524132f0d3c6dd0cdc58ecd" translate="yes" xml:space="preserve">
          <source>When creating an object of &lt;code&gt;some_class&lt;/code&gt;, &lt;var&gt;prop1&lt;/var&gt; has the default value &lt;code&gt;[]&lt;/code&gt; and reading from and writing to &lt;var&gt;prop1&lt;/var&gt; is defined by a single &lt;var&gt;mode&lt;/var&gt;. For &lt;var&gt;prop2&lt;/var&gt; the read and write access can be set differently. Finally, &lt;var&gt;prop3&lt;/var&gt; is a constant property which can only be initialized once within the &lt;code&gt;properties&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e265960151a192f7c2426fcca000628d595ffbd" translate="yes" xml:space="preserve">
          <source>When creating an oct-file that uses an external library, the function might spend a significant portion of its time in the external library. It is not generally possible to use the &lt;code&gt;OCTAVE_QUIT&lt;/code&gt; macro in this case. The alternative code in this case is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dfbfb1dba7b18af62229e83227992ac71fb30c" translate="yes" xml:space="preserve">
          <source>When creating simple one-shot programs it can be very convenient to see which variables are available at the prompt. The function &lt;code&gt;who&lt;/code&gt; and its siblings &lt;code&gt;whos&lt;/code&gt; and &lt;code&gt;whos_line_format&lt;/code&gt; will show different information about what is in memory, as the following shows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29039b72d25728ebe81238451317e87aca705d0e" translate="yes" xml:space="preserve">
          <source>When doing integer arithmetic one should consider the possibility of underflow and overflow. This happens when the result of the computation can&amp;rsquo;t be represented using the chosen integer type. As an example it is not possible to represent the result of &lt;em&gt;10 - 20&lt;/em&gt; when using unsigned integers. Octave makes sure that the result of integer computations is the integer that is closest to the true result. So, the result of &lt;em&gt;10 - 20&lt;/em&gt; when using unsigned integers is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc95e7ba3da9cb245327837c987fe379e98b8806" translate="yes" xml:space="preserve">
          <source>When doing integer division Octave will round the result to the nearest integer. This is different from most programming languages, where the result is often floored to the nearest integer. So, the result of &lt;code&gt;int32 (5) ./ int32 (8)&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fd9a1973be6415573c43a48c38f4d052ad1555" translate="yes" xml:space="preserve">
          <source>When enabled, Java arrays of class Byte or Integer are converted to matrices of class uint8 or uint32 respectively. The default value is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac57dc9f4abafb7d33006777fdde3b51e7950e9b" translate="yes" xml:space="preserve">
          <source>When enabled, display an error if the objective function returns an invalid value (a complex number, NaN, or Inf). Must be set to &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt; [default]. Note: the functions &lt;code&gt;fzero&lt;/code&gt; and &lt;code&gt;fminbnd&lt;/code&gt; correctly handle Inf values and only complex values or NaN will cause an error in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae2b43505f91d58401c69b03e959eaf71cb29df" translate="yes" xml:space="preserve">
          <source>When executing interactively, Octave displays the primary prompt when it is ready to read a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fd9c31048aa48ea11038ff2f145a78260a1ccc" translate="yes" xml:space="preserve">
          <source>When exiting, Octave will attempt to run the m-file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddcd0da6db3e15c5bf6423e7672571edcddefb5" translate="yes" xml:space="preserve">
          <source>When given a matrix value, Octave&amp;rsquo;s formatted output functions cycle through the format template until all the values in the matrix have been printed. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949b179ff7c16c24d53d0cd401334a3b3cab6e15" translate="yes" xml:space="preserve">
          <source>When given a package name &lt;var&gt;package&lt;/var&gt;, display the current NEWS file for that package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e3680ce984bd1c925627a48d573e36141a0f55" translate="yes" xml:space="preserve">
          <source>When given a second argument that is not 0, &lt;code&gt;svd&lt;/code&gt; returns an economy-sized decomposition, eliminating the unnecessary rows or columns of &lt;var&gt;U&lt;/var&gt; or &lt;var&gt;V&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490cee5d23950bcc2151b74333b970b5928904aa" translate="yes" xml:space="preserve">
          <source>When given a second argument, &lt;var&gt;dim&lt;/var&gt;, return the size of the corresponding dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b86af1b3bb246ac6514fcd117fc6b83cf17cd92" translate="yes" xml:space="preserve">
          <source>When given the additional argument &lt;var&gt;hax&lt;/var&gt;, the hold state is modified for this axes rather than the current axes returned by &lt;code&gt;gca&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccdaa71e0b1554c1da665263e68b03e4b4b3d2f" translate="yes" xml:space="preserve">
          <source>When given the identifier &lt;var&gt;id&lt;/var&gt; of a specific timer, return the number of seconds elapsed since the timer &lt;var&gt;id&lt;/var&gt; was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb71d4e82f60fa3b929ba3c68fd896a62d4d7d93" translate="yes" xml:space="preserve">
          <source>When in debug mode the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc25ddd49d122da05972a7508bb62c76723970a1" translate="yes" xml:space="preserve">
          <source>When invoked with no arguments, edit the previously executed command; With one argument, edit the specified command &lt;var&gt;cmd_number&lt;/var&gt;; With two arguments, edit the list of commands between &lt;var&gt;first&lt;/var&gt; and &lt;var&gt;last&lt;/var&gt;. Command number specifiers may also be negative where -1 refers to the most recently executed command. The following are equivalent and edit the most recently executed command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3ef84b721dff7355ab3a8750a9d2adc65f4641" translate="yes" xml:space="preserve">
          <source>When invoked with no arguments, run the previously executed command;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618327053302cd00635f43590c596fc0bb977e45" translate="yes" xml:space="preserve">
          <source>When involved in expressions with other element-by-element operators, &lt;code&gt;.*&lt;/code&gt;, &lt;code&gt;./&lt;/code&gt;, &lt;code&gt;.\&lt;/code&gt; or &lt;code&gt;.^&lt;/code&gt;, an implicit conversion to full matrix will take place. This is not always strictly necessary but chosen to facilitate better consistency with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860fa78bdc95a09a7c64cf0bb44ff0417c8f8388" translate="yes" xml:space="preserve">
          <source>When it is called with no input arguments it produces the following error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f317b7ce4e27024f317b56efb50bd0e31bc7d369" translate="yes" xml:space="preserve">
          <source>When it is necessary to extract subsets of entries out of an array whose indices cannot be written as a Cartesian product of components, linear indexing together with the function &lt;code&gt;sub2ind&lt;/code&gt; can be used. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dffb6ab5b928c87f6f7335f82e460361f916efb" translate="yes" xml:space="preserve">
          <source>When linking, the limits from the first axes in &lt;var&gt;hax&lt;/var&gt; are applied to the other axes in the list. Subsequent changes to any one of the axes will be propagated to the others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd8a7f2a12022873bd9cd0fcb59bf7b26e8c3f4" translate="yes" xml:space="preserve">
          <source>When no &lt;var&gt;dim&lt;/var&gt; is specified, each element of &lt;var&gt;A&lt;/var&gt; becomes a 1x1 element in the output &lt;var&gt;C&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ae31f8556aa8c5fde2a41b550c91fa259f501c" translate="yes" xml:space="preserve">
          <source>When no &lt;var&gt;type&lt;/var&gt; is specified the function is equivalent to &lt;code&gt;ishghandle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28412b6fe0f759a2380465ff14c74b9b1f617aff" translate="yes" xml:space="preserve">
          <source>When no Jacobian is supplied (as in the example above) it is approximated numerically. This requires more function evaluations, and hence is less efficient. In the example above we could compute the Jacobian analytically as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb1bf45b2dff4d2bc5b67b46e96501583613c3f" translate="yes" xml:space="preserve">
          <source>When no figure handle is specified this function uses the current figure. If the figure handle is invalid or there is no current figure, this functions returns immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878f92df5836e9b5653370e1d9afc2883e5f16da" translate="yes" xml:space="preserve">
          <source>When no return argument is given the info is printed to the screen. Otherwise, the output cell array &lt;var&gt;jmem&lt;/var&gt; contains Maximum, Total, and Free memory (in bytes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bcd8ebf61caa1a6871fad3a87d0826233898a4" translate="yes" xml:space="preserve">
          <source>When opening a new file that does not yet exist, permissions will be set to &lt;code&gt;0666 - &lt;var&gt;umask&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c08bad3c333e8e7dd19724ff7666e3c46ba855" translate="yes" xml:space="preserve">
          <source>When operators of equal precedence are used together, the leftmost operator groups first, except for the assignment operators, which group in the opposite order. Thus, the expression &lt;code&gt;a - b + c&lt;/code&gt; groups as &lt;code&gt;(a - b) + c&lt;/code&gt;, but the expression &lt;code&gt;a = b = c&lt;/code&gt; groups as &lt;code&gt;a = (b = c)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d772a29d1a55c5f65df78e2dfc2b95de648328cf" translate="yes" xml:space="preserve">
          <source>When overloading the &lt;code&gt;display&lt;/code&gt; method instead, one has to take care of properly displaying the object&amp;rsquo;s name. This can be done by using the &lt;code&gt;inputname&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a6fd75e800eed82c0b4d62fd904785a546842e" translate="yes" xml:space="preserve">
          <source>When processing input datestrings, &lt;var&gt;f&lt;/var&gt; is the format string used to interpret date strings (see &lt;code&gt;datestr&lt;/code&gt;). If no format &lt;var&gt;f&lt;/var&gt; is specified, then a relatively slow search is performed through various formats. It is always preferable to specify the format string &lt;var&gt;f&lt;/var&gt; if it is known. Formats which do not specify a particular time component will have the value set to zero. Formats which do not specify a date will default to January 1st of the current year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3be3f857fce3e4fd014693f1f7c1c39f26defb9" translate="yes" xml:space="preserve">
          <source>When putting this in a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f4145dd70d9175f9bffdd15642b9fad6a90395" translate="yes" xml:space="preserve">
          <source>When reading data from a file it must be opened for reading first, and likewise when writing to a file. The &lt;code&gt;fopen&lt;/code&gt; function returns a pointer to an open file that is ready to be read or written. Once all data has been read from or written to the opened file it should be closed. The &lt;code&gt;fclose&lt;/code&gt; function does this. The following code illustrates the basic pattern for writing to a file, but a very similar pattern is used when reading a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dcfeac2fdb491013632910b09a821ef536a8e1" translate="yes" xml:space="preserve">
          <source>When recycling is enabled, commands which would permanently erase files instead move them to a temporary location (such as the directory labeled Trash).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc41404f437ca91e947c0efc6578486433ea148" translate="yes" xml:space="preserve">
          <source>When rotating, the original color 1 becomes color 2, color 2 becomes color 3, etc. A positive or negative increment is allowed and a higher value of &lt;var&gt;inc&lt;/var&gt; will cause faster cycling through the colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8a93351f0f5e71323841fa3156454a2c3d2bc0" translate="yes" xml:space="preserve">
          <source>When running interactively, Octave normally sends all output directly to the Command Window. However, when using the CLI version of Octave this can create a problem because large volumes of data will stream by before you can read them. In such cases, it is better to use a paging program such as &lt;code&gt;less&lt;/code&gt; or &lt;code&gt;more&lt;/code&gt; which displays just one screenful at a time. With &lt;code&gt;less&lt;/code&gt; (and some versions of &lt;code&gt;more&lt;/code&gt;) you can also scan forward and backward, and search for specific items. The pager is enabled by the command &lt;code&gt;more on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db881e1cc3624a841c0e3e051e96d6dd9a01ea" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the function to be minimized must return a second argument which is the Jacobian, or first derivative, of the function at the point &lt;var&gt;x&lt;/var&gt;. If set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; [default], the Jacobian is computed via finite differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cef237980e8b6925869165e8e4e8a7fd4e6787e" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;&quot;on&quot;&lt;/code&gt;, the function to be minimized must return a second argument which is the gradient, or first derivative, of the function at the point &lt;var&gt;x&lt;/var&gt;. If set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; [default], the gradient is computed via finite differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18d11f45949dda2656a48009a598e91ead5ff45" translate="yes" xml:space="preserve">
          <source>When set to a value other than &lt;code&gt;&quot;none&quot;&lt;/code&gt;, the edges of the object are drawn with light and shadow effects. Supported values are &lt;code&gt;&quot;none&quot;&lt;/code&gt; (no lighting effects), &lt;code&gt;&quot;flat&quot;&lt;/code&gt; (facetted look) and &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; (linear interpolation of the lighting effects between the vertices). &lt;code&gt;&quot;phong&quot;&lt;/code&gt; is deprecated and has the same effect as &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbeea3f3fe093b633a6c8083a61c3cb1f42b268" translate="yes" xml:space="preserve">
          <source>When set to a value other than &lt;code&gt;&quot;none&quot;&lt;/code&gt;, the faces of the object are drawn with light and shadow effects. Supported values are &lt;code&gt;&quot;none&quot;&lt;/code&gt; (no lighting effects), &lt;code&gt;&quot;flat&quot;&lt;/code&gt; (facetted look) and &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; (linear interpolation of the lighting effects between the vertices). &lt;code&gt;&quot;phong&quot;&lt;/code&gt; is deprecated and has the same effect as &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167b3ec3a8b6e898b84e9a22c53540a93a8bab05" translate="yes" xml:space="preserve">
          <source>When solving linear equations involving sparse matrices Octave determines the means to solve the equation based on the type of the matrix (see &lt;a href=&quot;sparse-linear-algebra#Sparse-Linear-Algebra&quot;&gt;Sparse Linear Algebra&lt;/a&gt;). Octave probes the matrix type when the div (/) or ldiv (\) operator is first used with the matrix and then caches the type. However the &lt;em&gt;matrix_type&lt;/em&gt; function can be used to determine the type of the sparse matrix prior to use of the div or ldiv operators. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1405807c7422e5fd117e293b8a959e6d393baaf6" translate="yes" xml:space="preserve">
          <source>When specified, &lt;var&gt;timeout&lt;/var&gt; defines the number of seconds to wait for the figure deletion or the &lt;code&gt;uiresume&lt;/code&gt; call. The timeout value must be at least 1. If a smaller value is specified, a warning is issued and a timeout value of 1 is used instead. If a non-integer value is specified, it is truncated towards 0. If &lt;var&gt;timeout&lt;/var&gt; is not specified, the program execution is suspended indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f39fb46b41663fdec28df8b49fb4c347a502f0" translate="yes" xml:space="preserve">
          <source>When supplied, the gradient function &lt;code&gt;&lt;var&gt;phi&lt;/var&gt;{2}&lt;/code&gt; must accept one vector argument and return a vector. When supplied, the Hessian function &lt;code&gt;&lt;var&gt;phi&lt;/var&gt;{3}&lt;/code&gt; must accept one vector argument and return a matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ad09f874d020b9dd8b00ff65c369e66c6b9ce4" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;error&lt;/code&gt; function is called, it prints the given message and returns to the Octave prompt. This means that no code following a call to &lt;code&gt;error&lt;/code&gt; will be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea4be38550afab1322e4a1f04b07339ecb81a11" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;keyboard&lt;/code&gt; function is executed, Octave prints a prompt and waits for user input. The input strings are then evaluated and the results are printed. This makes it possible to examine the values of variables within a function, and to assign new values if necessary. To leave the prompt and return to normal execution type &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9870a6850f0ddb2891a2c7daa96a38dd80a1dc6d" translate="yes" xml:space="preserve">
          <source>When the argument &lt;var&gt;x&lt;/var&gt; is omitted an equally spaced &lt;var&gt;x&lt;/var&gt; vector with unit spacing (1) is assumed. &lt;code&gt;cumtrapz (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; evaluates the integral with respect to the spacing in &lt;var&gt;x&lt;/var&gt; and the values in &lt;var&gt;y&lt;/var&gt;. This is useful if the points in &lt;var&gt;y&lt;/var&gt; have been sampled unevenly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b709e86a64f0fbd8c0c5756081d24fbcd4254f" translate="yes" xml:space="preserve">
          <source>When the elements of &lt;var&gt;x&lt;/var&gt; are sorted, say &lt;code&gt;&lt;var&gt;s&lt;/var&gt; = sort (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;, the median is defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9840ffeec3e94259769e1beb64e76b574be788d" translate="yes" xml:space="preserve">
          <source>When the error is a scalar all points share the same error value. The errorbars are symmetric and are drawn from &lt;var&gt;data&lt;/var&gt;-&lt;var&gt;err&lt;/var&gt; to &lt;var&gt;data&lt;/var&gt;+&lt;var&gt;err&lt;/var&gt;. The &lt;var&gt;fmt&lt;/var&gt; argument determines whether &lt;var&gt;err&lt;/var&gt; is in the x-direction, y-direction (default), or both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4098d392bb35e281fe111fd179d0528831df4c" translate="yes" xml:space="preserve">
          <source>When the first argument is &lt;code&gt;&quot;minor&quot;&lt;/code&gt; all subsequent commands modify the minor grid rather than the major grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f85f961ff28123b8f7ed22b6e599195d45b0890" translate="yes" xml:space="preserve">
          <source>When the first input is an existing options structure &lt;var&gt;old&lt;/var&gt;, the values are updated from either the &lt;var&gt;par&lt;/var&gt;/&lt;var&gt;val&lt;/var&gt; list or from the options structure &lt;var&gt;new&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505b8a8c24435c8ec41b96f263b6c60f72ebbd07" translate="yes" xml:space="preserve">
          <source>When the force flag &lt;code&gt;'f'&lt;/code&gt; is given any existing files will be overwritten without prompting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c263a2d6ea110d422412580e2ba83fe0a0decff" translate="yes" xml:space="preserve">
          <source>When the input is a Java object &lt;var&gt;javaobj&lt;/var&gt; or a string containing the name of a Java class &lt;var&gt;javaclassname&lt;/var&gt;, the names are the public fields (data members) of the object or class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b71cbc4f56a37817767b60847f1d27564c8f4b" translate="yes" xml:space="preserve">
          <source>When the input is a grayscale image &lt;var&gt;I&lt;/var&gt;, the output colormap will contain one entry for every unique intensity value in the original image. In the worst case the new map could have as many rows as the number of pixels in the original image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ff0b3c0258f662df1c10345c2a693149d80aed" translate="yes" xml:space="preserve">
          <source>When the input is a handle &lt;var&gt;h&lt;/var&gt;, the camera is set to point toward the center of the bounding box of &lt;var&gt;h&lt;/var&gt;. The camera&amp;rsquo;s position is adjusted so the bounding box approximately fills the field of view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4632dd61f8238869e8a201078cda4a31c6ee7b5c" translate="yes" xml:space="preserve">
          <source>When the input is a structure &lt;var&gt;struct&lt;/var&gt;, the names are the elements of the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788b6a9d9111f7b9efff59b57bbf6bd6361d5adf" translate="yes" xml:space="preserve">
          <source>When the input is an Octave object &lt;var&gt;obj&lt;/var&gt;, the names are the public properties of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd1c3ec819daef6735f8e31903041bf1a0459c9" translate="yes" xml:space="preserve">
          <source>When the input is an RGB image (an MxNx3 array), the output colormap will contain one entry for every unique color in the original image. In the worst case the new map could have as many rows as the number of pixels in the original image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7d72a3c07de9e96e22dd08d0ca6f81ebd79731" translate="yes" xml:space="preserve">
          <source>When the input is an indexed image (&lt;var&gt;X&lt;/var&gt; with colormap &lt;var&gt;map&lt;/var&gt;) the output is a colormap &lt;var&gt;newmap&lt;/var&gt; from which any repeated rows have been eliminated. The output image, &lt;var&gt;Y&lt;/var&gt;, is the original input image with the indices adjusted to match the new, possibly smaller, colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c2057362e8ce4dbcda957c9f25939eb5e4babd" translate="yes" xml:space="preserve">
          <source>When the number of words in &lt;var&gt;str&lt;/var&gt; doesn&amp;rsquo;t match an exact multiple of the number of format conversion specifiers, strread&amp;rsquo;s behavior depends on the last character of &lt;var&gt;str&lt;/var&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f97cf0a527472c50a7e991aec8e9b69916887a5" translate="yes" xml:space="preserve">
          <source>When the number of words in &lt;var&gt;str&lt;/var&gt; or &lt;var&gt;fid&lt;/var&gt; doesn&amp;rsquo;t match an exact multiple of the number of format conversion specifiers, &lt;code&gt;textscan&lt;/code&gt;&amp;rsquo;s behavior depends on whether the last character of the string or file is an end-of-line as specified by the &lt;code&gt;EndOfLine&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddb8b157d9423834202f01290b462b98af30c9a" translate="yes" xml:space="preserve">
          <source>When the optional argument &lt;var&gt;normalization&lt;/var&gt; is &lt;code&gt;&quot;norm&quot;&lt;/code&gt;, compute the fully normalized associated Legendre function. The fully normalized associated Legendre function is related to the unnormalized associated Legendre functions by the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23b3ec00b58f1f167f38171504e88f95b06028f" translate="yes" xml:space="preserve">
          <source>When the optional argument &lt;var&gt;normalization&lt;/var&gt; is &lt;code&gt;&quot;sch&quot;&lt;/code&gt;, compute the Schmidt semi-normalized associated Legendre function. The Schmidt semi-normalized associated Legendre function is related to the unnormalized Legendre functions by the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46687a245fc986fd2126ccf3fc859f2d10dd3483" translate="yes" xml:space="preserve">
          <source>When the optional argument &lt;var&gt;normalization&lt;/var&gt; is &lt;code&gt;&quot;unnorm&quot;&lt;/code&gt;, compute the associated Legendre function of degree &lt;var&gt;n&lt;/var&gt; and order &lt;var&gt;m&lt;/var&gt; and return all values for &lt;var&gt;m&lt;/var&gt; = 0 &amp;hellip; &lt;var&gt;n&lt;/var&gt;. The return value has one dimension more than &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8643c6cecffffedc1b41d7d2d60ce00dffbfe8d9" translate="yes" xml:space="preserve">
          <source>When the remainder is zero in the first &lt;code&gt;while&lt;/code&gt; statement, Octave immediately &lt;em&gt;breaks out&lt;/em&gt; of the loop. This means that Octave proceeds immediately to the statement following the loop and continues processing. (This is very different from the &lt;code&gt;exit&lt;/code&gt; statement which stops the entire Octave program.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f4ef189eaeb97b0f605ab41238a32725c8b387" translate="yes" xml:space="preserve">
          <source>When the second assignment gives &lt;code&gt;foo&lt;/code&gt; a string value, the fact that it previously had a numeric value is forgotten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2425c663d151e694de1ef722173bccea3f7771" translate="yes" xml:space="preserve">
          <source>When the third argument is a matrix, return the convolution of the matrix &lt;var&gt;m&lt;/var&gt; by the vector &lt;var&gt;v1&lt;/var&gt; in the column direction and by the vector &lt;var&gt;v2&lt;/var&gt; in the row direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f8844168cf79b13ab08485e735589c96c14694" translate="yes" xml:space="preserve">
          <source>When the third output, &lt;var&gt;mu&lt;/var&gt;, is present the coefficients, &lt;var&gt;p&lt;/var&gt;, are associated with a polynomial in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b32d4f359c469f8764dd4e3e51a31b7ef04c9f" translate="yes" xml:space="preserve">
          <source>When the underlying function to provide a fit to is periodic, &lt;code&gt;splinefit&lt;/code&gt; is able to apply the boundary conditions needed to manifest a periodic fit. This is demonstrated by the code below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b6117c997a6e9a58b663794d33dd6ce1ad5e28" translate="yes" xml:space="preserve">
          <source>When the user function is passed as a string the treatment of the function is different. In some cases it is necessary to have the user supplied function as an &lt;code&gt;octave_function&lt;/code&gt; object. In that case the string argument can be used to create a temporary function as demonstrated below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582d49dea5855b8f9bfba9efe8353b3f77513a22" translate="yes" xml:space="preserve">
          <source>When using a page-based format (PDF, PostScript, printer) ignore the &lt;code&gt;&quot;paperposition&quot;&lt;/code&gt; property and have the plot occupy the entire page. The option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e428c12fb9265f94e8b913e2b40f51180a08e076" translate="yes" xml:space="preserve">
          <source>When using ranges, specifying a larger number for the first command than the last command reverses the list of commands before they are placed in the buffer to be edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac707a4f1670bb286ca9cf73e46e95e9661f2b42" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;~&lt;/code&gt; placeholder, commas&amp;mdash;not whitespace&amp;mdash;must be used to separate output arguments. Otherwise, the interpreter will view &lt;code&gt;~&lt;/code&gt; as the logical not operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1684b492629a9d8d475810d14ff0049c9636b11d" translate="yes" xml:space="preserve">
          <source>When you encounter a problem, the first thing to do is to see if it is already known. See &lt;a href=&quot;trouble#Trouble&quot;&gt;Trouble&lt;/a&gt;. If it isn&amp;rsquo;t known, then you should report the problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36aea23346be4ca6fb2326d6f4626581da7af819" translate="yes" xml:space="preserve">
          <source>When you type a matrix or the name of a variable whose value is a matrix, Octave responds by printing the matrix in with neatly aligned rows and columns. If the rows of the matrix are too large to fit on the screen, Octave splits the matrix and displays a header before each section to indicate which columns are being displayed. You can use the following variables to control the format of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9699280e915cce53f8a79a3ef857727a9dc73064" translate="yes" xml:space="preserve">
          <source>When you use a kill command, the text is saved in a &lt;em&gt;kill-ring&lt;/em&gt;. Any number of consecutive kills save all of the killed text together, so that when you yank it back, you get it in one clean sweep. The kill ring is not line specific; the text that you killed on a previously typed line is available to be yanked back later, when you are typing another line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9709fecb00e81d0c589c909ece6dabb5cfca77" translate="yes" xml:space="preserve">
          <source>Whenever it&amp;rsquo;s possible to categorize according to indices the elements of an array when performing a computation, accumulation functions can be useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a453382ee6b703c11dad3c837aa07e8cc3bd45" translate="yes" xml:space="preserve">
          <source>Where both Pn(s) and Qn(s) are &lt;var&gt;N&lt;/var&gt;th-order rational functions defined by the following expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c3ccac295e28304107f846d7653fd68df61545" translate="yes" xml:space="preserve">
          <source>Where to submit your bug report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0557121d2cb12fdb33c8e1cad0174174ab7753a" translate="yes" xml:space="preserve">
          <source>While it would be possible to call the extra functions directly, properly configuring Octave with &lt;code&gt;imformats&lt;/code&gt; allows one to keep a consistent code that is abstracted from file formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a563ffae3e95e68571d73fde07b4a17171d521" translate="yes" xml:space="preserve">
          <source>While many numerical computations can&amp;rsquo;t be carried out in integers, Octave does support basic operations like addition and multiplication on integers. The operators &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;.*&lt;/code&gt;, and &lt;code&gt;./&lt;/code&gt; work on integers of the same type. So, it is possible to add two 32 bit integers, but not to add a 32 bit integer and a 16 bit integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ed681405996f1277b952cccdcc1876311af3b2" translate="yes" xml:space="preserve">
          <source>While strings can in principal store arbitrary content, most functions expect them to be UTF-8 encoded Unicode strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7af606336e5e9167879c03ffe45fbf36a826bbf" translate="yes" xml:space="preserve">
          <source>While the above example shows how easy it is to compute the value of a polynomial, it isn&amp;rsquo;t the most stable algorithm. With larger polynomials you should use more elegant algorithms, such as Horner&amp;rsquo;s Method, which is exactly what the Octave function &lt;code&gt;polyval&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17fba927ec7a12797f51924363ac43e74a9ff1c" translate="yes" xml:space="preserve">
          <source>While the program is suspended Octave still handles figures painting and graphics callbacks execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2d5967fbf20f9bd0d5a20ef659861fb8db1d5a" translate="yes" xml:space="preserve">
          <source>While the program is suspended graphics events are still processed normally, allowing callbacks to modify the state of graphics objects. This function is reentrant and can be called from a callback, while another &lt;code&gt;waitfor&lt;/code&gt; call is pending at the top-level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37619fc13053f82b7cb7da3d24ceb1598ab6d05c" translate="yes" xml:space="preserve">
          <source>White</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2d259e207766b82de4177f48afe7153a55552f" translate="yes" xml:space="preserve">
          <source>Whitespace characters are always removed &lt;strong&gt;prior&lt;/strong&gt; to the application of the &lt;code&gt;&quot;ReplacementStyle&quot;&lt;/code&gt;. Lowercase letters following a whitespace will be changed to uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b463cd7fea0973d575c3df300e0d735a8bd867e5" translate="yes" xml:space="preserve">
          <source>Whitespace surrounding the single quote character (&amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d351e7967574f4a6a79bebb32f5e2a2bf24676f" translate="yes" xml:space="preserve">
          <source>Width of the line object measured in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce605aef6533367e6da32555c13e517bddac8af3" translate="yes" xml:space="preserve">
          <source>Width of the main axes lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aef9a54d53df727ec0a56ff948d079b0b1dab63" translate="yes" xml:space="preserve">
          <source>Width of the outline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348617b5dfe6943f54c4cb4e28905136d73282e2" translate="yes" xml:space="preserve">
          <source>Wildcards may also be used in the field name specifications when using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23c761c0bd0bacd1cfb094e0c4ec2f81539ef53" translate="yes" xml:space="preserve">
          <source>Wilkinson matrices are symmetric and tridiagonal with pairs of nearly, but not exactly, equal eigenvalues. They are useful in testing the behavior and performance of eigenvalue solvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1652141df02802d915c2c40f4fa2bb06a3938f6a" translate="yes" xml:space="preserve">
          <source>Wisdom data can be used to significantly accelerate the calculation of the FFTs, but implies an initial cost in its calculation. When the &lt;small&gt;FFTW&lt;/small&gt; libraries are initialized, they read a system wide wisdom file (typically in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef93161a8b94be8fd8cc762e3ac0b225202c1d" translate="yes" xml:space="preserve">
          <source>With 1 real argument &lt;var&gt;x&lt;/var&gt;, return the complex result &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;+&amp;nbsp;0i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50350d1e1deba95b870a17f5726f8e4cb012c75f" translate="yes" xml:space="preserve">
          <source>With 2 real arguments, return the complex result &lt;code&gt;&lt;var&gt;re&lt;/var&gt;&amp;nbsp;+&amp;nbsp;&lt;var&gt;im&lt;/var&gt;i&lt;/code&gt;. &lt;code&gt;complex&lt;/code&gt; can often be more convenient than expressions such as &lt;code&gt;a&amp;nbsp;+&amp;nbsp;b*i&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98c2c44ec29f6214cb3e39c8fc3e8c945b741c3" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;assignin&lt;/code&gt;, you could write &lt;code&gt;load&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf903bd25b29a94e956f2b5a2be3722d0aac66d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;evalin&lt;/code&gt;, you could write &lt;code&gt;save&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a5e4cee957e63dc938fdddd22faf6b3c5dfcd7" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;keypressfcn&lt;/code&gt;, the keyboard callback functions. These callback functions are called when a key is pressed/released respectively. The functions are called with two input arguments. The first argument holds the handle of the calling figure. The second argument holds an event structure which has the following members:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0332cf36dda2091770224dbf65ee9c6e759d0a7b" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;windowbuttondownfcn&lt;/code&gt; and &lt;code&gt;windowbuttonmotionfcn&lt;/code&gt;, the mouse callback functions. These callback functions are called when a mouse button is pressed, dragged, or released respectively. When these callback functions are executed, the &lt;code&gt;currentpoint&lt;/code&gt; property holds the current coordinates of the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e795ffa62699eea1e5e511b4f839a7cb5266f50" translate="yes" xml:space="preserve">
          <source>With a single output argument &lt;code&gt;dmperm&lt;/code&gt; performs the row permutations &lt;var&gt;p&lt;/var&gt; such that &lt;code&gt;&lt;var&gt;S&lt;/var&gt;(&lt;var&gt;p&lt;/var&gt;,:)&lt;/code&gt; has no zero elements on the diagonal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0657d0484bd5d638f776791735774268ad387aff" translate="yes" xml:space="preserve">
          <source>With a single output argument, &lt;code&gt;size&lt;/code&gt; returns a row vector. When called with multiple output arguments, &lt;code&gt;size&lt;/code&gt; returns the size of dimension N in the Nth argument. The number of rows, dimension 1, is returned in the first argument, the number of columns, dimension 2, is returned in the second argument, etc. If there are more dimensions in &lt;var&gt;a&lt;/var&gt; than there are output arguments, &lt;code&gt;size&lt;/code&gt; returns the total number of elements in the remaining dimensions in the final output argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf358ec2a11383751deee17298182c9741be231" translate="yes" xml:space="preserve">
          <source>With no arguments, &lt;code&gt;echo&lt;/code&gt; toggles the current echo state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767f22e4d9a768a590c7135030478b9df6c942dc" translate="yes" xml:space="preserve">
          <source>With no arguments, return a structure containing the current autoload map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dd9a9c69d1fccaa74f9403b4416c43714d3353" translate="yes" xml:space="preserve">
          <source>With no arguments, return the number of seconds elapsed on the internal timer since the last call to &lt;code&gt;tic&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9387ce3734385465c3002711ee533c9df60a74" translate="yes" xml:space="preserve">
          <source>With no arguments, toggle the current pan mode on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a814d04a417f838f34c8e871603bc6f4fc86958f" translate="yes" xml:space="preserve">
          <source>With no arguments, toggle the current rotate mode on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbfec00c746a1d394c78fa147d439767045e85e" translate="yes" xml:space="preserve">
          <source>With no arguments, toggle the current zoom mode on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de839bf2db8e0dafc1fa878494f6f002bb71990" translate="yes" xml:space="preserve">
          <source>With no input argument &lt;code&gt;warning ()&lt;/code&gt; is equivalent to &lt;code&gt;warning (&quot;query&quot;, &quot;all&quot;)&lt;/code&gt; except that in the absence of an output argument, the state of warnings is displayed on &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a6e4a198039e5d11dc097e16f5ecd15d2e6885" translate="yes" xml:space="preserve">
          <source>With no input arguments, &lt;code&gt;colormap&lt;/code&gt; returns the current color map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1f6764e3d4ee12f72b7c0492461fe3dddf1257" translate="yes" xml:space="preserve">
          <source>With no input arguments, return information about the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7a2eb8a41c7f7503de5f7736c858070d2a03a0" translate="yes" xml:space="preserve">
          <source>With no input or output arguments, &lt;code&gt;diary&lt;/code&gt; toggles the current diary state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996d3f85f9929390e47dfbd99a53200ff9b1fa29" translate="yes" xml:space="preserve">
          <source>With no inputs, return the current default graphics toolkit. If the input is a list of figure graphic handles, &lt;var&gt;hlist&lt;/var&gt;, then return the name of the graphics toolkit in use for each figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac20be606c29d20fedfd3e92106ed04fcd825ba" translate="yes" xml:space="preserve">
          <source>With no options, this function is equivalent to the left division operator (&lt;code&gt;x&amp;nbsp;=&amp;nbsp;A&amp;nbsp;\&amp;nbsp;b&lt;/code&gt;) or the matrix-left-divide function (&lt;code&gt;x&amp;nbsp;=&amp;nbsp;mldivide&amp;nbsp;(A,&amp;nbsp;b)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b7c615b95962a124f3fa8fc76025362c0ad14b" translate="yes" xml:space="preserve">
          <source>With no output arguments, the results are immediately plotted. With two output arguments, the 2-D plot data is returned. The data can subsequently be plotted manually with &lt;code&gt;plot (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2746ff52010daaa14aa2d0f6b5f7855797725b" translate="yes" xml:space="preserve">
          <source>With no return argument, the plot is immediately displayed. If an output argument is provided, the plot is returned as an array of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f390fc129f08c9b586b666fa2724207eb243b6fd" translate="yes" xml:space="preserve">
          <source>With one argument, run the specified command &lt;var&gt;cmd_number&lt;/var&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137f9027047d1bad6d8e3677f8d969effd60edd1" translate="yes" xml:space="preserve">
          <source>With one argument, set the last error message to &lt;var&gt;msg&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af301a96625b7c53483e66fa1b2623e2f1938fe" translate="yes" xml:space="preserve">
          <source>With one argument, set the last warning message to &lt;var&gt;msg&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a99b375b82c2b47adfac2699983c8ba1f2388b6" translate="yes" xml:space="preserve">
          <source>With one input argument, compute 2 .^ x for each element of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535ce54aab3fed67f45be8c5a1930e1a9b1ed171" translate="yes" xml:space="preserve">
          <source>With one output argument, &lt;code&gt;&lt;var&gt;limits&lt;/var&gt; = axis&lt;/code&gt; returns the current axis limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f7c345a494a2599abfdd228a769083f282ada5" translate="yes" xml:space="preserve">
          <source>With one vector argument, &lt;var&gt;th&lt;/var&gt;, plot the histogram with 20 angular bins. If &lt;var&gt;th&lt;/var&gt; is a matrix then each column of &lt;var&gt;th&lt;/var&gt; produces a separate histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4131c382400025b1f31086df772eaf4c65da98" translate="yes" xml:space="preserve">
          <source>With one vector input argument, &lt;var&gt;y&lt;/var&gt;, plot a histogram of the values with 10 bins. The range of the histogram bins is determined by the range of the data (difference between maximum and minimum value in &lt;var&gt;y&lt;/var&gt;). Extreme values are lumped into the first and last bins. If &lt;var&gt;y&lt;/var&gt; is a matrix then plot a histogram where each bin contains one bar per input column of &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16cd9476e28125214a0f0830d4856b34c02e0d3" translate="yes" xml:space="preserve">
          <source>With only &lt;var&gt;file&lt;/var&gt; given, a HTML report is generated in a subdirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8380b604c69835080f4462f594b3e14b2c359162" translate="yes" xml:space="preserve">
          <source>With optional argument &lt;var&gt;n&lt;/var&gt;, omit the &lt;var&gt;n&lt;/var&gt; innermost stack frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f9b13415db5a302ce9fce83bc53566128f52b4" translate="yes" xml:space="preserve">
          <source>With some restrictions&lt;a href=&quot;#FOOT3&quot; name=&quot;DOCF3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;, recursive function calls are allowed. A &lt;em&gt;recursive function&lt;/em&gt; is one which calls itself, either directly or indirectly. For example, here is an inefficient&lt;a href=&quot;#FOOT4&quot; name=&quot;DOCF4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; way to compute the factorial of a given integer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833854cdb9f2c66ca44339ec911f85c632e10112" translate="yes" xml:space="preserve">
          <source>With that said, Octave offers a versatile interface for including chunks of compiled code as dynamically linked extensions. These dynamically linked functions can be called from the interpreter in the same manner as any ordinary function. The interface is bi-directional and external code can call Octave functions (like &lt;code&gt;plot&lt;/code&gt;) which otherwise might be very difficult to develop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf62ea471992d0dc9c4757817fca0a2b4b77450f" translate="yes" xml:space="preserve">
          <source>With the exception of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c0c3fbaa3eb7bc1a122981e27ad83081201295" translate="yes" xml:space="preserve">
          <source>With the input query &lt;code&gt;&quot;mode&quot;&lt;/code&gt;, return the current x-limit calculation mode which is either &lt;code&gt;&quot;auto&quot;&lt;/code&gt; or &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb0dcacae6078597c93a3ee104190c685c9be07" translate="yes" xml:space="preserve">
          <source>With the optional argument &lt;code&gt;&quot;expose&quot;&lt;/code&gt;, only graphic objects are updated and no other events or callbacks are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1878785fb0a72e0095c3b81e15b42d8be16512d0" translate="yes" xml:space="preserve">
          <source>With the optional argument &lt;code&gt;&quot;rows&quot;&lt;/code&gt;, each row of the set &lt;var&gt;a&lt;/var&gt; is considered one element of the set. The input must be a 2-D numeric matrix to use this argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e13e917393ee6598be3ef16c3d632a67e83b3a" translate="yes" xml:space="preserve">
          <source>With the optional second argument &lt;code&gt;&quot;cell&quot;&lt;/code&gt;, return a cell array of strings instead of a character array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6332fe12555114ce17ed6b8c6332993865e856b7" translate="yes" xml:space="preserve">
          <source>With the optional string arguments &lt;code&gt;&quot;verbose&quot;&lt;/code&gt;, additional status messages are printed to the command window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273d2fcbdfc615bfd70ce7b5853178d54061f039" translate="yes" xml:space="preserve">
          <source>With the polynomial class, consider the case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60fc01f1450cff22a78057b2374bb551fb04295" translate="yes" xml:space="preserve">
          <source>With the second calling form, set a field of a structure array. The input &lt;var&gt;sidx&lt;/var&gt; selects an element of the structure array, &lt;var&gt;field&lt;/var&gt; specifies the field name of the selected element, and &lt;var&gt;fidx&lt;/var&gt; selects which element of the field (in the case of an array or cell array). The &lt;var&gt;sidx&lt;/var&gt;, &lt;var&gt;field&lt;/var&gt;, and &lt;var&gt;fidx&lt;/var&gt; inputs can be repeated to address nested structure array elements. The structure array index and field element index must be cell arrays while the field name must be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850710341997df2a5509bd79862958d6f9c23d2d" translate="yes" xml:space="preserve">
          <source>With two arguments the diagonals to extract are given by the vector &lt;var&gt;d&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78a7a4dbae07f1fa89729e2c81861ff1dd8ead4" translate="yes" xml:space="preserve">
          <source>With two arguments, also set the last message identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8390f9337774dc10cf435ed3f0912f593fbda635" translate="yes" xml:space="preserve">
          <source>With two arguments, run the list of commands between &lt;var&gt;first&lt;/var&gt; and &lt;var&gt;last&lt;/var&gt;. Command number specifiers may also be negative where -1 refers to the most recently executed command. For example, the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a5ac8f11500f4c80e8928bc47d09505f7ad850" translate="yes" xml:space="preserve">
          <source>With two input arguments, return f .* (2 .^ e).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f910d58c8235db64ceff10e6b4d4dbc4df60ca5e" translate="yes" xml:space="preserve">
          <source>With two output arguments, return the unique prime factors &lt;var&gt;pf&lt;/var&gt; and their multiplicities. That is, &lt;code&gt;prod (&lt;var&gt;pf&lt;/var&gt; .^ &lt;var&gt;n&lt;/var&gt;) == &lt;var&gt;q&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b6ab144b03b674ca6f1daa64e4202d3e483363" translate="yes" xml:space="preserve">
          <source>With two output arguments, returns the permuted forms of the upper and lower triangular matrices, such that &lt;code&gt;&lt;var&gt;A&lt;/var&gt; = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt;. With one output argument &lt;var&gt;y&lt;/var&gt;, then the matrix returned by the &lt;small&gt;LAPACK&lt;/small&gt; routines is returned. If the input matrix is sparse then the matrix &lt;var&gt;L&lt;/var&gt; is embedded into &lt;var&gt;U&lt;/var&gt; to give a return value similar to the full case. For both full and sparse matrices, &lt;code&gt;lu&lt;/code&gt; loses the permutation information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe5045d51e6934db25f9a1049aff429d7810b0e" translate="yes" xml:space="preserve">
          <source>With two outputs, &lt;code&gt;ilu&lt;/code&gt; returns a unit lower triangular matrix &lt;var&gt;L&lt;/var&gt; and an upper triangular matrix &lt;var&gt;U&lt;/var&gt;. For &lt;var&gt;opts&lt;/var&gt;.type == &lt;code&gt;&quot;ilutp&quot;&lt;/code&gt;, one of the factors is permuted based on the value of &lt;var&gt;opts&lt;/var&gt;.milu. When &lt;var&gt;opts&lt;/var&gt;.milu == &lt;code&gt;&quot;row&quot;&lt;/code&gt;, &lt;var&gt;U&lt;/var&gt; is a column permuted upper triangular factor. Otherwise, &lt;var&gt;L&lt;/var&gt; is a row-permuted unit lower triangular factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfb2c84077f1524ed3848d174ce944c2de12ce8" translate="yes" xml:space="preserve">
          <source>Within Octave is it also possible to iterate over matrices or cell arrays using the &lt;code&gt;for&lt;/code&gt; statement. For example consider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f9ea5a21eece68b63490e7895e00f769be3755" translate="yes" xml:space="preserve">
          <source>Within a function, return a logical value indicating whether the argument &lt;var&gt;k&lt;/var&gt; will be assigned to a variable on output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a6e46a064257deb19a0fb6f2b6248dcedd8768" translate="yes" xml:space="preserve">
          <source>Within a pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528cfa0c723836db2245a65992704ff49ed7b823" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;unwind_protect&lt;/code&gt;, the value of &lt;var&gt;frobnosticate&lt;/var&gt; would not be restored if an error occurs while evaluating the first part of the &lt;code&gt;unwind_protect&lt;/code&gt; block because evaluation would stop at the point of the error and the statement to restore the value would not be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f621c9c4c0eeec6026f33c31d0af9c0f2754036" translate="yes" xml:space="preserve">
          <source>Without &lt;var&gt;dim&lt;/var&gt; this is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(:)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46691fd06062de571d3c78d0a15ce22a7fa39650" translate="yes" xml:space="preserve">
          <source>Without an argument, &lt;code&gt;more&lt;/code&gt; toggles the current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b8607c1e77489157442683d2cf54d8ce3c7198" translate="yes" xml:space="preserve">
          <source>Without an argument, capture the current axes excluding ticklabels, title, and x/y/zlabels. The returned structure &lt;var&gt;frame&lt;/var&gt; has a field &lt;code&gt;cdata&lt;/code&gt;, which contains the actual image data in the form of an NxMx3 (RGB) uint8 matrix, and a field &lt;code&gt;colormap&lt;/code&gt; which is provided for &lt;small&gt;MATLAB&lt;/small&gt; compatibility but is always empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd6ea68389ed8913a9c560880fe2fc0ceb7c4e6" translate="yes" xml:space="preserve">
          <source>Without any arguments, &lt;code&gt;axis&lt;/code&gt; turns autoscaling on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6565522a6112eca11b62b325fd00306928d53f" translate="yes" xml:space="preserve">
          <source>Without broadcasting, &lt;code&gt;x + y&lt;/code&gt; would be an error because the dimensions do not agree. However, with broadcasting it is as if the following operation were performed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb33d3711f23fa744b4bd307e1869b1a6f562bfa" translate="yes" xml:space="preserve">
          <source>Without specifying &lt;var&gt;context&lt;/var&gt;, this is equivalent to executing commands from a script file, but without requiring the file to be named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1735b4ac925fe197c69fe551a913765e871f809" translate="yes" xml:space="preserve">
          <source>Working with Matrices and Arrays in Mex-Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8d5b332166e660bf60f6d91e1fb8bded6a3819" translate="yes" xml:space="preserve">
          <source>Write a string to the standard output with no formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3e6b2159d7c2f9b75003d378a2ac6c1e3923aa" translate="yes" xml:space="preserve">
          <source>Write audio data from the matrix &lt;var&gt;y&lt;/var&gt; to &lt;var&gt;filename&lt;/var&gt; at sampling rate &lt;var&gt;fs&lt;/var&gt; with the file format determined by the file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90f2105733de2cf905ec337a9546cc33e2b7545" translate="yes" xml:space="preserve">
          <source>Write data in binary form to the file specified by the file descriptor &lt;var&gt;fid&lt;/var&gt;, returning the number of values &lt;var&gt;count&lt;/var&gt; successfully written to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bf7853bfa550cc73b5bc0d8e446efccb651e8a" translate="yes" xml:space="preserve">
          <source>Write images in various file formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6893def1ade5d526ebd9bd7574c8c03acc7b7e" translate="yes" xml:space="preserve">
          <source>Write the change log entries for your changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad063fd788cf34b30dfc3935d9599841d9979c19" translate="yes" xml:space="preserve">
          <source>Write the current history to the file &lt;var&gt;file&lt;/var&gt;. If the name is omitted, use the default history file (normally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d84b8e0ea5e775d63a50676ad83a6c7f1d3260" translate="yes" xml:space="preserve">
          <source>Write the numeric matrix &lt;var&gt;M&lt;/var&gt; to the text file &lt;var&gt;file&lt;/var&gt; using a delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0919beb4a3a382f3491b224324eb2d7043cdcf3" translate="yes" xml:space="preserve">
          <source>Write the numeric matrix &lt;var&gt;x&lt;/var&gt; to the file &lt;var&gt;filename&lt;/var&gt; in comma-separated-value (CSV) format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f312208204e863f3531c0f48ef5db08f5c1055aa" translate="yes" xml:space="preserve">
          <source>Write the string &lt;var&gt;string&lt;/var&gt; to the file with file descriptor &lt;var&gt;fid&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60841bf1ad2d01720515c6eb9b3efbeb2e0f7656" translate="yes" xml:space="preserve">
          <source>WriteMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c484743d1f349d95a70eeadeefb4ec37a06e6828" translate="yes" xml:space="preserve">
          <source>X = qr (A) # non-sparse A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee6cfbdaf09aebb3512f194f176c20d20633d3e" translate="yes" xml:space="preserve">
          <source>X = sylvester (A, B, C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995f7f3b6afe0583c11b1897215fd620be2cd7a4" translate="yes" xml:space="preserve">
          <source>X resolution of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e74eb3b23dd998cdc457abdfebaaedc14e54a4" translate="yes" xml:space="preserve">
          <source>XFig. For the Gnuplot graphics toolkit, the additional options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e6a1c4c4a03ead53c57db4f60ca3195eaf6462" translate="yes" xml:space="preserve">
          <source>XResolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2398108af545b71ecb977f916b46e84e483c927" translate="yes" xml:space="preserve">
          <source>Y = bessely (alpha, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7031516a092e5e43e62b70377831a396ba6067a6" translate="yes" xml:space="preserve">
          <source>Y = bessely (alpha, x, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860b726c2e8796ed487a8e8f65c8f5ba99bd2e65" translate="yes" xml:space="preserve">
          <source>Y resolution of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8793e9852531ee9e6e8229bc26de1861bdb735d8" translate="yes" xml:space="preserve">
          <source>Y. Saad &quot;SPARSKIT: A basic toolkit for sparse matrix computation&quot;, 1994, &lt;a href=&quot;https://www-users.cs.umn.edu/~saad/software/SPARSKIT/paper.ps&quot;&gt;https://www-users.cs.umn.edu/~saad/software/SPARSKIT/paper.ps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54e5474ea031ac8003fd81cd473c0a7abe21260" translate="yes" xml:space="preserve">
          <source>Y. Saad,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3423ed4350a54b29dffac61043df8b5d4c98321" translate="yes" xml:space="preserve">
          <source>YResolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44d5c13846f234cf182be5ad2c30664216384e4" translate="yes" xml:space="preserve">
          <source>Y_a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e670d298c209789c6a36625f2ee290524ab21d77" translate="yes" xml:space="preserve">
          <source>Y_d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6522577101d4c974000a04d4aa197b0b181fc24" translate="yes" xml:space="preserve">
          <source>Yank the most recently killed text back into the buffer at the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ca8a8b13266b68c5d907b25ec9a63e2ae5bd15" translate="yes" xml:space="preserve">
          <source>Year (1970-).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759d663768812aadfe8cd504d009b35551719511" translate="yes" xml:space="preserve">
          <source>Years can be negative and/or fractional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb8d21350acaaa0407b9654c42980a7b455057c" translate="yes" xml:space="preserve">
          <source>Years since 1900.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3526f607bcd4f51ad0bc05f814579a42c2c0ba57" translate="yes" xml:space="preserve">
          <source>Yellow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d740055a4844236c2238f70139bd765a025f2506" translate="yes" xml:space="preserve">
          <source>You are in the child process. You can call &lt;code&gt;exec&lt;/code&gt; to start another process. If that fails, you should probably call &lt;code&gt;exit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebb39f061945ea1de516ad57629d93443947b56" translate="yes" xml:space="preserve">
          <source>You are in the parent process. The value returned from &lt;code&gt;fork&lt;/code&gt; is the process id of the child process. You should probably arrange to wait for any child processes to exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf315fc623499f13fb6688043d4c988c5426804" translate="yes" xml:space="preserve">
          <source>You can add titles, axis labels, legends, and arbitrary text to an existing plot. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aae63817e9da6fe4128f4210ff68ca034bd9913" translate="yes" xml:space="preserve">
          <source>You can also create test scripts for built-in functions and your own C++ functions. To do so, put a file with the bare function name (no .m extension) in a directory in the load path and it will be discovered by the &lt;code&gt;test&lt;/code&gt; function. Alternatively, you can embed tests directly in your C++ code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b9431d2bfc73561fe89028eb01b44bfb093afe" translate="yes" xml:space="preserve">
          <source>You can also do the comparison yourself, but still have assert generate the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda51b63dd4aa9c776e29ec685a1939ab5df314d" translate="yes" xml:space="preserve">
          <source>You can also share test functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f684abea2df78f54e37adb948dbe9daf2b86953" translate="yes" xml:space="preserve">
          <source>You can also specify a field width of &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23b576b3f3dccb4301de2af3c4add975ed5db84" translate="yes" xml:space="preserve">
          <source>You can also specify a precision of &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4cfa60060ae2f6cdc54b760c600457bf4ee217" translate="yes" xml:space="preserve">
          <source>You can also specify the name of a file on the command line, and Octave will read and execute the commands from the named file and then exit when it is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73e041d2fc7b5a75fce9f202487f33eced12549" translate="yes" xml:space="preserve">
          <source>You can also use ANSI escape sequences if your terminal supports them. This can be useful for coloring the prompt. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab489a7a6355b2538c5fb28b78ab8689d921ebf" translate="yes" xml:space="preserve">
          <source>You can control formatting more precisely by writing &lt;em&gt;modifiers&lt;/em&gt; between the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2d6da5d4086164b7ad4c0c37afff95d6387a0c" translate="yes" xml:space="preserve">
          <source>You can create any graphics object primitive by calling the function of the same name as the object; In other words, &lt;code&gt;figure&lt;/code&gt;, &lt;code&gt;axes&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;surface&lt;/code&gt;, and &lt;code&gt;light&lt;/code&gt; functions. These fundamental graphic objects automatically become children of the current axes object as if &lt;code&gt;hold on&lt;/code&gt; was in place. Separately, axes will automatically become children of the current figure object and figures will become children of the root object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b193c678712a6391cf1c2864ab51906376653c5b" translate="yes" xml:space="preserve">
          <source>You can further control how Octave starts by using the command-line options described in the next section, and Octave itself can remind you of the options available. Type &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab1b94aacfa95a31fe119fb1c3aa4ce8156e339" translate="yes" xml:space="preserve">
          <source>You can open multiple plot windows using the &lt;code&gt;figure&lt;/code&gt; function. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372a4dc8747bf3e6677f1041940e0c377de8d575" translate="yes" xml:space="preserve">
          <source>You can overrule the precedence of the operators by using parentheses. You can think of the precedence rules as saying where the parentheses are assumed if you do not write parentheses yourself. In fact, it is wise to use parentheses whenever you have an unusual combination of operators, because other people who read the program may not remember what the precedence is in this case. You might forget as well, and then you too could make a mistake. Explicit parentheses will help prevent any such mistake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c7ec5af6d93af0c37948a6371c88e8fab1e579" translate="yes" xml:space="preserve">
          <source>You can query the state of the random number generator using the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d59a6368596b656d45858faebff8a1249f6ad9" translate="yes" xml:space="preserve">
          <source>You can read this as &amp;ldquo;&lt;code&gt;sqrt (2)&lt;/code&gt; evaluates to 1.4142&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4686eb97dd8d4382e0f3d8ec87f43c78cf8f822b" translate="yes" xml:space="preserve">
          <source>You can select the program to run as the pager with the &lt;code&gt;PAGER&lt;/code&gt; function, and configure the pager itself with the &lt;code&gt;PAGER_FLAGS&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f3808d57094fa908b3368266eb5fdd7cd3f2c8" translate="yes" xml:space="preserve">
          <source>You can set and use variables at the command prompt using the context &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efca955f993c898fa4a935f7b2ab7099e5facf1" translate="yes" xml:space="preserve">
          <source>You can share several variables at the same time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4de7237b7144a8a69b631d8b7b459616cbf3852" translate="yes" xml:space="preserve">
          <source>You can specify options for the creation of the JVM inside a file named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef062dcf044f18cc9351b6d5461d5df54ed1d9bb" translate="yes" xml:space="preserve">
          <source>You can use an assignment anywhere an expression is called for. For example, it is valid to write &lt;code&gt;x != (y = 1)&lt;/code&gt; to set &lt;code&gt;y&lt;/code&gt; to 1 and then test whether &lt;code&gt;x&lt;/code&gt; equals 1. But this style tends to make programs hard to read. Except in a one-shot program, you should rewrite it to get rid of such nesting of assignments. This is never very hard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c522d9337b0290b17ec498920db2a4936484a2e" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;daspk_options&lt;/code&gt; to set optional parameters for &lt;code&gt;daspk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3458821f037dca9f16ea59b0456e6e85e91e40b" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;dasrt_options&lt;/code&gt; to set optional parameters for &lt;code&gt;dasrt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a183636b9a507d4b41fa963667663d707a7763e1" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;dassl_options&lt;/code&gt; to set optional parameters for &lt;code&gt;dassl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a74ca56e638533bc06d1f00a5b7251d9814beda" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;lsode_options&lt;/code&gt; to set optional parameters for &lt;code&gt;lsode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8ebe11784f20b586e0a8803019ff8206213b54" translate="yes" xml:space="preserve">
          <source>You later want to load the values back from &lt;code&gt;mydata&lt;/code&gt; in a different context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65a47d1255c7aa1d77355098f627ec2bb89b488" translate="yes" xml:space="preserve">
          <source>You may also initialize the state vector from an arbitrary vector of length &amp;le; 625 for &lt;var&gt;v&lt;/var&gt;. This new state will be a hash based on the value of &lt;var&gt;v&lt;/var&gt;, not &lt;var&gt;v&lt;/var&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadbfe24cf179a524a53bd49e03a3dd7f76b4bda" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;isdebugmode&lt;/code&gt; to determine whether the debugger is currently active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4ed18594e2d81052e3ca7801701b5627bf349c" translate="yes" xml:space="preserve">
          <source>You may also want to build a shared version of &lt;code&gt;libstdc++&lt;/code&gt;, if your system doesn&amp;rsquo;t already have one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b095f408f9a9542102ea2b87adf3287f6617e26d" translate="yes" xml:space="preserve">
          <source>You may build a default annotation by specifying only the &lt;var&gt;type&lt;/var&gt; of the annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c498de537c613a8659641deb72c6784356b4eac5" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;&quot;facecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;color&quot;&lt;/code&gt;, &lt;code&gt;&quot;linestyle&quot;&lt;/code&gt;, and &lt;code&gt;&quot;linewidth&quot;&lt;/code&gt; properties to customize the rectangle background color and edge appearance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3ceb73bf70ce0f533e287e640fcccd01a52a8b" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;feval&lt;/code&gt; to call a function using function handle, or simply write the name of the function handle followed by an argument list. If there are no arguments, you must use an empty argument list &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c6a3c46fef208e113602413a019494fd6559c7" translate="yes" xml:space="preserve">
          <source>You must ensure that all Fortran sources except those in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5cfb3f8852d4d0d807e000292e8b024eea8cc6" translate="yes" xml:space="preserve">
          <source>You should probably have a shared version of &lt;code&gt;libstdc++&lt;/code&gt;. A patch is needed to build shared versions of version 2.7.2 of &lt;code&gt;libstdc++&lt;/code&gt; on the HP-PA architecture. You can find the patch at &lt;a href=&quot;ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix&quot;&gt;ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d00be874d7df39106e0c1805a34f853f4d0c944" translate="yes" xml:space="preserve">
          <source>You will need a recent version of GNU Make as Octave relies on certain features not generally available in all versions of make. Modifying Octave&amp;rsquo;s makefiles to work with other make programs is probably not worth your time; instead, we simply recommend installing GNU Make.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca64af4cd58286d47d947e80085efeb7b07b481" translate="yes" xml:space="preserve">
          <source>You will usually need the development version of an external dependency so that you get the libraries and header files for building software, not just for running already compiled programs. These packages typically have names that end with the suffix &lt;code&gt;-dev&lt;/code&gt; or &lt;code&gt;-devel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c178d565af5b04e789975327e6d794a3854b8408" translate="yes" xml:space="preserve">
          <source>Your bug reports play an essential role in making Octave reliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796662a49348e9a4d52363e441757ae83902bc1a" translate="yes" xml:space="preserve">
          <source>Your own default copyright and license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e12e5ae0230961c5895303253f1d0d80cf25e8" translate="yes" xml:space="preserve">
          <source>Zero or more &lt;em&gt;flag characters&lt;/em&gt; that modify the normal behavior of the conversion specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca81f0416286adc410136515809090f99c7894c" translate="yes" xml:space="preserve">
          <source>Zero-length matches are not returned. (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e4b806676c51065eb1a93490f3cb3ef8b1abc6" translate="yes" xml:space="preserve">
          <source>Zeros Treatment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f31f49f64027c5841eafe70cb10b2b1314ae3" translate="yes" xml:space="preserve">
          <source>Ziggurat Method for Generating Random Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5e263eae71cf001c8fe22f5ca352bb5c7ee11b" translate="yes" xml:space="preserve">
          <source>Zoom the camera in or out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fca03b1a8f9c3387dd78a0cc03e93679a3d311" translate="yes" xml:space="preserve">
          <source>Zoom the current axes object or control the interactive zoom mode of a figure in the GUI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eecb9f2be1516e264dab1f63597c1a51c109cec" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = builtin (f, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff61c5d112ca3c072ed98cbb5d52fb11085f4bd" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = curl (fx, fy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac614d2882660bf3fa59c3fcba89367f69f515a9" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = curl (fx, fy, fz)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d577f1ed4af9e9318d920b893de0ee015e0510" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = dos (&quot;command&quot;, &quot;-echo&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd51c17faba2a93ec37aee6384264e3aa3927486" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = eig (&amp;hellip;, eigvalOption)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca38ae22f67cf277e233e6e9af905f9b9cdceb7a" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = eig (A, B, algorithm)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931f4ecec93dbddc844af8a0e6f8440f6b3d3a93" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = eig (A, balanceOption)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e63cac422804f548c61f3f5fc73034f4049a16d" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = ferror (fid, &quot;clear&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a53cc2a6ced59d2919f948d72cae275f61780ea" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = gradient (f, x0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1be135c7c3496c1cb3be7e142327fc908e1a8a" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = gradient (f, x0, s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327bcc5f8342dc02ddf18902f40b9c7bf07cf0f2" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = gradient (f, x0, x, y, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c185bb4132d62e87c078e96072aa2c63766f9d8" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = gradient (m, s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275a300b20eb8001b9033894d40837cc25313188" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = gradient (m, x, y, z, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff5631956e703ebba84d4c0769e6836071d1031" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = imread (&amp;hellip;, ext)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811a8d50a69233acaed9ea5619c1c0bbad85e0d2" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = imread (&amp;hellip;, idx)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ce41b7a748e1aab5eb45946153a5188893f70a" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = imread (&amp;hellip;, param1, value1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed744d65e33f7d2c2fb71a68f8f7952770fbb942" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = imread (url)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4190b9c522dc771aff25619d88d29e59ed887b27" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = lu (&amp;hellip;, &quot;vector&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c7faeee0f57c14acbbfdf0c05aeed94bf0a724" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = lu (S, thres)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3bae11041cc542e3789f0a0c884de753d45dd8" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = qr (&amp;hellip;, &quot;matrix&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846795c8c2eafe8c0d84748a5a9183207c541145" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = qr (&amp;hellip;, &quot;vector&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91efe140bfcd87aa8f7703a4305bba2e335bdf8" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = qr (&amp;hellip;, 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce36986411a9f53e392ec626813bb31b7bdd573d" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = regexp (str, pat, &quot;opt1&quot;, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db883eb78a86b9319921b73b485c9dc9942ff07" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = regexpi (str, pat, &quot;opt1&quot;, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a61dbbb91de7a55488d5c306c46b39c502bfe8" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = sqp (x0, phi, g)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bccf2b17dff89ad8d7aa19e7d39f602324de91" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = sqp (x0, phi, g, h)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf07b5d10d45605d534e610655461bcd4fde9e1" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = sqp (x0, phi, g, h, lb, ub)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7766072509a1aef613cb88e370bcb0b2d1ba3c3d" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = sqp (x0, phi, g, h, lb, ub, maxiter)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4239ebbd124014661d817317af234bb6bf9405" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = sqp (x0, phi, g, h, lb, ub, maxiter, tol)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46ad1a3a47d17bfcaf52e91f2617fcba2123796" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = symbfact (S, typ)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a05627b704ded7821f8ae574bf2a8f2791ca3b6" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = symbfact (S, typ, mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08d7b6e4ee68bf2527bded2d657f6064ed978ad" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = uigetfile (&amp;hellip;, &quot;MultiSelect&quot;, mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55c4dbbc8de0eb8c814d213e81ebf3e27c78a1b" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = uigetfile (&amp;hellip;, &quot;Position&quot;, [px py])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af267b2041c23762b9f2fdfea29d65e3cb56605f" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = uigetfile (flt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7810fe937d5d83cfd7076bc3ec72da7553657fcf" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = uigetfile (flt, dialog_name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea7f6bf221f74ee38006300ed3f02471119892c" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = uigetfile (flt, dialog_name, default_file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0757842b37d0bc7957e66e80de6d4b2b6e7fc729" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = unix (&quot;command&quot;, &quot;-echo&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1ee2a8423f7db593518eea3078aee062a6d8ef" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;] = urlread (url, method, param)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4567f1ef5d8a3f8a644e7e8c130d41836d0688d0" translate="yes" xml:space="preserve">
          <source>[-10, 10]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7974990205d6005275a43a5298ff66c7d8252dd" translate="yes" xml:space="preserve">
          <source>[0 0]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434c9029e49002e40ba7e6e373f23d38af59002b" translate="yes" xml:space="preserve">
          <source>[1 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ec4528ce3898415b337bd94a8049ea192624b1" translate="yes" xml:space="preserve">
          <source>[1] W. Hackbusch,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b96df625aa514c0f83013db4d82f3ad2c9e695" translate="yes" xml:space="preserve">
          <source>[1] Y. Saad. &quot;Preconditioning Techniques.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc2ed99115bae7dfec13f37346bde7abee4ab91" translate="yes" xml:space="preserve">
          <source>[2] M. Jones, P. Plassmann:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56daf77424ac14f300aceccdfbe02c89ebe0bdab" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;vx&lt;/var&gt;, &lt;var&gt;vy&lt;/var&gt;] = voronoi (&amp;hellip;) returns the Voronoi vertices instead of plotting the diagram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217ae92a5fb4bc9dd6dc7f520c552d4405fcc4dc" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;y1&lt;/var&gt;, &lt;var&gt;y2&lt;/var&gt;, &amp;hellip;, &lt;var&gt;y&lt;/var&gt;n] = ndgrid (&lt;var&gt;x&lt;/var&gt;, &amp;hellip;, &lt;var&gt;x&lt;/var&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbee721913ffc844741c23aa5a9d1790001bef0d" translate="yes" xml:space="preserve">
          <source>[A, &amp;hellip;] = structfun (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3fa993ed59666f615a865da4640f3736900dd9" translate="yes" xml:space="preserve">
          <source>[A, delimiter, header_rows] = importdata (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3da6577721112dd06e9e75657b9f84a03e04696" translate="yes" xml:space="preserve">
          <source>[A, delimiter] = importdata (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f8976d9ee9064206c79b72645bf0eb6eb4ca4e" translate="yes" xml:space="preserve">
          <source>[AA, BB, Q, Z, V, W, lambda] = qz (A, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9296dd90d797770b0e128d7541397fd0e1118eb5" translate="yes" xml:space="preserve">
          <source>[AA, BB, Z, lambda] = qz (A, B, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d416ecf68db362f6f288157eb4a87504a0d4b" translate="yes" xml:space="preserve">
          <source>[AA, BB, Z] = qz (A, B, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9098f99427ab9506ecbb4eadde190ab9b01e4d2c" translate="yes" xml:space="preserve">
          <source>[B, d] = spdiags (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd0b67155b043be30b3ba73e8f7e0c3f5f16983" translate="yes" xml:space="preserve">
          <source>[C, F] = voronoin (pts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac6e264abbe2c25956562c27e52ae57240ac504" translate="yes" xml:space="preserve">
          <source>[C, F] = voronoin (pts, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb27daefd1f9465d8952a73021cd8e0f05a0691d" translate="yes" xml:space="preserve">
          <source>[C, R] = qr (A, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21b2e17290e9cac4f0b9029cf46ab5cd70e9d07" translate="yes" xml:space="preserve">
          <source>[C, position, errmsg] = textscan (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a71a6693f150b81bcdfd651de9b4b92fb24d55a" translate="yes" xml:space="preserve">
          <source>[CC, DD, AA, BB] = balance (A, B, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0b669d349119f7b0a35e96ad8f9380c322514f" translate="yes" xml:space="preserve">
          <source>[D, P, AA] = balance (A, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1664ddcb6458e77d26f4e201446390b0ebc5e2f5" translate="yes" xml:space="preserve">
          <source>[DD, AA] = balance (A, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c035dd364fd807a59ff181c609e079d8c6aea2" translate="yes" xml:space="preserve">
          <source>[G, y] = planerot (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b032ee47ebd3f0fd85a7c72b269b72f189f0c6f" translate="yes" xml:space="preserve">
          <source>[H, V] = convhull (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee805db0e2bc5e1a6969b528b98bbdb64b330d5" translate="yes" xml:space="preserve">
          <source>[H, ierr] = besselh (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ed25c4dc30d45110acfe434b7d66ca45d72e01" translate="yes" xml:space="preserve">
          <source>[I, ierr] = besseli (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5a3c9530e8a4f7ff5d82bf7bd1424bcbcab843" translate="yes" xml:space="preserve">
          <source>[J, ierr] = besselj (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc68751f7b46ca1910f663470a5d927eab43039" translate="yes" xml:space="preserve">
          <source>[K, ierr] = besselk (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6fab6d822436b95c096e7ef4bf64c6edcb5929" translate="yes" xml:space="preserve">
          <source>[L, &amp;hellip;] = chol (&amp;hellip;, &quot;lower&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e9ed5d7d0549f630fbc2aaf25ebf8ebc30f57a" translate="yes" xml:space="preserve">
          <source>[L, U, P, Q, R] = lu (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1503dd386c61db21003c4b3b843eb3570e85e16b" translate="yes" xml:space="preserve">
          <source>[L, U, P, Q] = lu (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbe7ef5baa5732e7702072621879d75234d768f" translate="yes" xml:space="preserve">
          <source>[L, U, P] = ilu (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38596786edd69c0bd6e256d4483c31f228582e15" translate="yes" xml:space="preserve">
          <source>[L, U, P] = lu (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c89a115aa4aa24fdd1abe606546e89e6922fa9" translate="yes" xml:space="preserve">
          <source>[L, U, P] = luupdate (L, U, P, x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5831a4eb5bc9e357bbf5173930a06a4b9d5aa11e" translate="yes" xml:space="preserve">
          <source>[L, U] = ilu (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201819cdaffa2f3e40f99d6fa5f632b27f79613a" translate="yes" xml:space="preserve">
          <source>[L, U] = lu (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29be9ffe17050ec68fd64c46b372c2f24ea8226" translate="yes" xml:space="preserve">
          <source>[L, U] = luupdate (L, U, x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ef50bd9364aab37772219ae5395c48b60b08b4" translate="yes" xml:space="preserve">
          <source>[P, H] = hess (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d52f42b12851a0676ca69817457d4838149693f" translate="yes" xml:space="preserve">
          <source>[Pxx, f] = periodogram (&amp;hellip;, &quot;range&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b235dcbf0f5b14da1c59c73b98a93a12eb5547" translate="yes" xml:space="preserve">
          <source>[Pxx, f] = periodogram (x, win, nfft, Fs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138243c922a2e64ddcfacf63c6a19aa5a6c37724" translate="yes" xml:space="preserve">
          <source>[Pxx, w] = periodogram (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69389fcc414691cf206ee590c9b3979ddac94c7" translate="yes" xml:space="preserve">
          <source>[Pxx, w] = periodogram (x, win)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe1b153c067c59b6b9a7a4d1a8ca12948d4805d" translate="yes" xml:space="preserve">
          <source>[Pxx, w] = periodogram (x, win, nfft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2240b6fdecf99a9b768e97dc2a3fcd3e0f003307" translate="yes" xml:space="preserve">
          <source>[Q, R, P] = qr (A) # non-sparse A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9435c3f55ca47c7d82f9415037949d452c9cbd7d" translate="yes" xml:space="preserve">
          <source>[Q, R] = qr (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312c2c1da71056c8c3b69d574df31517a26e86fc" translate="yes" xml:space="preserve">
          <source>[Q1, R1] = qrdelete (Q, R, j, orient)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054e9216d2662656e590a234e4d932231350154c" translate="yes" xml:space="preserve">
          <source>[Q1, R1] = qrinsert (Q, R, j, x, orient)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5535adf4157522a78fb7f90128bd89b22770887d" translate="yes" xml:space="preserve">
          <source>[Q1, R1] = qrshift (Q, R, i, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63eb5317b8ad34f46e1404f367216785c6b545ab" translate="yes" xml:space="preserve">
          <source>[Q1, R1] = qrupdate (Q, R, u, v)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca74805f5f201f9bf9fc2569d2b83da509dadc5" translate="yes" xml:space="preserve">
          <source>[R, &amp;hellip;] = chol (&amp;hellip;, &quot;upper&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a133d5a4ef75c1e3884694e97a7064428e847df1" translate="yes" xml:space="preserve">
          <source>[R, G, B] = ind2rgb (x, map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572a1b650c736acc4e68311bf71ee20bc583fa3a" translate="yes" xml:space="preserve">
          <source>[R, p, Q] = chol (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3890e52081b589d3f400dc2947a82b2a41e138" translate="yes" xml:space="preserve">
          <source>[R, p, Q] = chol (A, &quot;vector&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58282a5e3db36f6391d3d35667ef9ba89abebd83" translate="yes" xml:space="preserve">
          <source>[R, p] = chol (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827c2cec4d5ba87d62b76b7ed092532612205da6" translate="yes" xml:space="preserve">
          <source>[R1, info] = cholinsert (R, j, u)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cb3776d62c6fe50017813615bbc23c7948e9e8" translate="yes" xml:space="preserve">
          <source>[R1, info] = cholupdate (R, u, op)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20524e504b888ce03a01cb15f7175f2d406a99b6" translate="yes" xml:space="preserve">
          <source>[U, S, V] = svd (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4f4e391f07dae747c1e7ed4d15dd8c89e0f205" translate="yes" xml:space="preserve">
          <source>[U, S, V] = svd (A, &quot;econ&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450c24b3e09b95fff01f6ad3dd7bbcd697afa72c" translate="yes" xml:space="preserve">
          <source>[U, S, V] = svd (A, 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3985c546dd9b255b3510a265cb5a8fc1be93b20" translate="yes" xml:space="preserve">
          <source>[U, S] = schur (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa4868747a456e9182deea97af629ce35077db0" translate="yes" xml:space="preserve">
          <source>[U, T] = rsf2csf (UR, TR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2893732335423b7793e8c621b7ce9b6e5366206b" translate="yes" xml:space="preserve">
          <source>[U, V, X, C, S] = gsvd (A, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdb83fb9be544d370bc89fe2bdd183f064dec62" translate="yes" xml:space="preserve">
          <source>[U, V, X, C, S] = gsvd (A, B, 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedda3f5c55ec886e07cf4bf79fb71c2ecaf387a" translate="yes" xml:space="preserve">
          <source>[UR, SR] = ordschur (U, S, select)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a78ce35baed325b9959426f2cfdf644cd02e1a6" translate="yes" xml:space="preserve">
          <source>[V, d, flag] = eigs (A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c08f1d95903570f5202a7af6a3c5bf05ee3208f" translate="yes" xml:space="preserve">
          <source>[V, d, flag] = eigs (af, n, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6fa6ed34f042a3aeaf52085e70938af63bfd6a" translate="yes" xml:space="preserve">
          <source>[V, d] = eigs (A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4124eb7f9da7de9d9286538a13b83edf2715040" translate="yes" xml:space="preserve">
          <source>[V, d] = eigs (af, n, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f3dfdc24a7f14a2067cfbe41ee08bc6718b6f9" translate="yes" xml:space="preserve">
          <source>[V, lambda, W] = eig (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f148759f86af1f7e0ba7a34f62a7b8745bffe9bf" translate="yes" xml:space="preserve">
          <source>[V, lambda, W] = eig (A, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcb0e3d882df0281f8ce1f960da3845e443c607" translate="yes" xml:space="preserve">
          <source>[V, lambda] = eig (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a9bfa2fc25b331480595c5201752edc1d39b06" translate="yes" xml:space="preserve">
          <source>[V, lambda] = eig (A, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0308648e104199a5554377423699a2c7f5bed69" translate="yes" xml:space="preserve">
          <source>[Y, ierr] = bessely (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b9b70c9b3c4a6e7773538010452b571fb31dd9" translate="yes" xml:space="preserve">
          <source>[Y, newmap] = cmpermute (X, map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3be3c6dc8f24b5bf7d48d78e89b1eb336869d4" translate="yes" xml:space="preserve">
          <source>[Y, newmap] = cmpermute (X, map, index)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948f2ca47c2a9f945824c8adbd232eb2086f5d2d" translate="yes" xml:space="preserve">
          <source>[Y, newmap] = cmunique (I)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16f38fabf918b2763b0dd95abe199dd9ef651c4" translate="yes" xml:space="preserve">
          <source>[Y, newmap] = cmunique (RGB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af15eda3721e191f8f3c06b05595c2d0e7cc2509" translate="yes" xml:space="preserve">
          <source>[Y, newmap] = cmunique (X, map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d170e1550eee4afc0af065b78cda302a97674c" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af8aadc48820e8f462721ceeed7e3f333407ff0" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = cellfun (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6e25e89ed04d4939b93301ab2f0b4c88c5359f" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = strread (str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61657dfb6124e55e1dbbc702246e7f90c37334b9" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = strread (str, format)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6569a517abd6be1e25c38f7eacd1ef4f5fed933" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = strread (str, format, format_repeat)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789dc0cff535c0358e5fe2ce0c278c88b5bc1231" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = strread (str, format, format_repeat, prop1, value1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977919999a98dd705ead45ab514aa91573ba82db" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = strread (str, format, prop1, value1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba08e0285970ba2ef08c59a1ea9ce94cdae16669" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = textread (filename)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4daa59727b7373dfff90a3de5c064187304cb7ef" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = textread (filename, format)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c0c1d6734eb30a772ea6bf8545ecc0ca860650" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = textread (filename, format, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b77f2f95d66ea36a00c62e2b76783efc4dc882" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = textread (filename, format, n, prop1, value1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013c63854547340b2b41d355c86583389c18f9f2" translate="yes" xml:space="preserve">
          <source>[a, &amp;hellip;] = textread (filename, format, prop1, value1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9556311f57fbc4ffbe41da2b56cdabb65bb1a972" translate="yes" xml:space="preserve">
          <source>[a, b] = arch_fit (y, x, p, iter, gamma, a0, b0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee3c6b6e070af5024d90f86ce183d8b4570ca3c" translate="yes" xml:space="preserve">
          <source>[a, b] = gallery (&quot;wilk&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42403d8381992b6433c643210ff4614e0a377c13" translate="yes" xml:space="preserve">
          <source>[a, ierr] = airy (k, z, opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176e1ab0dadc7cfb664f61d7d456570d80ebc1f7" translate="yes" xml:space="preserve">
          <source>[a, t] = gallery (&quot;neumann&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9ae5aed33890ac64cfed36f9c83cfb5677473c" translate="yes" xml:space="preserve">
          <source>[a, v] = yulewalker (c)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afecedce1751f115e782d8d9c18cab8b95a9f2e" translate="yes" xml:space="preserve">
          <source>[aa, bb, q, z] = qzhess (A, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72305013c6cf29b1795951e365048da9fc1b27ec" translate="yes" xml:space="preserve">
          <source>[ax, h1, h2] = plotyy (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b43f899f5ff8ab538e2ce3703c9efbe7831f370" translate="yes" xml:space="preserve">
          <source>[azimuth, elevation] = view ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e2c88de288f2a595112ed35885c2c928013fea" translate="yes" xml:space="preserve">
          <source>[b, a] = residue (r, p, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05592f6de7b231461af59f86959e7d425832c78a" translate="yes" xml:space="preserve">
          <source>[b, a] = residue (r, p, k, e)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d38da7f44de97aba7e32d56b563f365524d881" translate="yes" xml:space="preserve">
          <source>[b, r] = deconv (y, a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43f4a8d20e34fc113e00ff557ff2a34f77144eb" translate="yes" xml:space="preserve">
          <source>[beta, sigma, r] = ols (y, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2347ec3bbf1a12b3af0b4378c22442ff6dad0f3" translate="yes" xml:space="preserve">
          <source>[beta, v, r] = gls (y, x, o)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1c19176325008650f98ed11db8ec033dc17f43" translate="yes" xml:space="preserve">
          <source>[c, d, e] = gallery (&quot;dorr&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94de1d988d85449c22a209b2295cc7afea8fa750" translate="yes" xml:space="preserve">
          <source>[c, d, e] = gallery (&quot;dorr&quot;, n, theta)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3e289c137269a8f75cf48df3539092af8a590b" translate="yes" xml:space="preserve">
          <source>[c, h] = contour (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28110b5ef55f8e2d0f282ccd082e77104bdcf0c6" translate="yes" xml:space="preserve">
          <source>[c, h] = contour3 (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ec016c9487ccb6e755bbca3a6d5586bef85353" translate="yes" xml:space="preserve">
          <source>[c, h] = contourf (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d892b42c8b2bb0305331947d52fe85adae01bc0" translate="yes" xml:space="preserve">
          <source>[c, ia, ib] = intersect (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00e5f8f17e413878bd517fb87d36edf10cbc530" translate="yes" xml:space="preserve">
          <source>[c, ia, ib] = setxor (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6dbec8fe373d2fe5043a869cd33b2b01109391" translate="yes" xml:space="preserve">
          <source>[c, ia, ib] = union (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8643d6817db93576e67d934426e6fffe9cbadd3" translate="yes" xml:space="preserve">
          <source>[c, ia] = setdiff (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a58289963e62dffb7a658ddae46ebfe1c8d030d" translate="yes" xml:space="preserve">
          <source>[c, lev] = contourc (x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e9510525fad39217ed02eac9413bd4d94bf9c3" translate="yes" xml:space="preserve">
          <source>[c, lev] = contourc (x, y, z, vn)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ba14865367f88dc0bf1e8f9b93b3527e8c0a21" translate="yes" xml:space="preserve">
          <source>[c, lev] = contourc (z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3224133db808af67515427297ae548603c211d53" translate="yes" xml:space="preserve">
          <source>[c, lev] = contourc (z, vn)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7a308ee18cd02de9611cebe6d2f4f504425fe9" translate="yes" xml:space="preserve">
          <source>[c, maxsize, endian] = computer ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e642011f3a49eae4a56c7a75d293f9aa0d4ea0" translate="yes" xml:space="preserve">
          <source>[c, maxsize] = computer ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83b4d44bc5b14bead433bbdd214d5e8206f697a" translate="yes" xml:space="preserve">
          <source>[c, s] = givens (x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ec2c0c039ea9e7f06ee195fa2e36c7a9b11c5f" translate="yes" xml:space="preserve">
          <source>[cest, v] = condest (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34e2faeb2308f6030b14175358f723edaa21639" translate="yes" xml:space="preserve">
          <source>[cname, status, msg] = canonicalize_file_name (fname)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b292f4a5a415a6523c2a5a7221f15f54f995e2" translate="yes" xml:space="preserve">
          <source>[code, idx] = test (&quot;name&quot;, &quot;grabdemo&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfde1b1c66f106bad8a0b277bdcb454aec54e400" translate="yes" xml:space="preserve">
          <source>[count, h, parent, post, R] = symbfact (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4773484112ac99207eba9e8cfdf31701d510a951" translate="yes" xml:space="preserve">
          <source>[count, mean, var] = spstats (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993e42ad2f2b6a0b09a283e6c2abf406923183b6" translate="yes" xml:space="preserve">
          <source>[count, mean, var] = spstats (S, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770f5bcc3ff8518757fc9573630dfee8051d4c04" translate="yes" xml:space="preserve">
          <source>[count, value] = runlength (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e63883b6bb2b1e2be6ba52910b3861ae781267" translate="yes" xml:space="preserve">
          <source>[cstr, matches] = strsplit (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848ffd3d8e9a4e7df46f22414ef9dff9f9e10ac" translate="yes" xml:space="preserve">
          <source>[cstr] = ostrsplit (s, sep)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061673da6ee44e1a4ae4a59db3e15c08c53db7fc" translate="yes" xml:space="preserve">
          <source>[cstr] = ostrsplit (s, sep, strip_empty)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c008ff68208d5b55d4958473dbc8a8086060ef3a" translate="yes" xml:space="preserve">
          <source>[cstr] = strsplit (&amp;hellip;, name, value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b927d09c40ab8ae1ec8ff5c2b403a47654b91c4" translate="yes" xml:space="preserve">
          <source>[cstr] = strsplit (str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da6fbab1af8384225d5025540be66db8a07788b" translate="yes" xml:space="preserve">
          <source>[cstr] = strsplit (str, del)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e194f08b5bf9aa207de8e71b7d814b9a586c37b" translate="yes" xml:space="preserve">
          <source>[cx, cy, cz, v] = curl (x, y, z, fx, fy, fz)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b72bda23e542a28afd8af61080675babee27c9" translate="yes" xml:space="preserve">
          <source>[cz, v] = curl (x, y, fx, fy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9db3416af1cb2ae4ec42cb297da0bc15a24e29" translate="yes" xml:space="preserve">
          <source>[d, dd] = diffpara (x, a, b)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b59dcb31f153d5974ced34a089154f0572eb8c" translate="yes" xml:space="preserve">
          <source>[d, rcond] = det (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d39b0b61aa4195fedcc9b9820d02ee5b9879ef5" translate="yes" xml:space="preserve">
          <source>[days, secs] = datenum (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9699eef1db3eab0989a57422122945ec7abe1508" translate="yes" xml:space="preserve">
          <source>[dir, name, ext] = fileparts (filename)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1d79baf98d5a684f7f44cca0c756392849529e" translate="yes" xml:space="preserve">
          <source>[dpath, spath] = javaclasspath ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4acc6c064fb6099ad5e744e8d9b18389797a6c" translate="yes" xml:space="preserve">
          <source>[dx, dy, dz, &amp;hellip;] = gradient (m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8222bc942fbc4ec0ce8c59c0b32243bde3437c1d" translate="yes" xml:space="preserve">
          <source>[err, msg] = exec (file, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0661a61d31b36353d1f7aa36e69419852b3fbe2b" translate="yes" xml:space="preserve">
          <source>[err, msg] = fcntl (fid, request, arg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c325f64e3dc62f9d84c47db5eede99b64dd444" translate="yes" xml:space="preserve">
          <source>[err, msg] = kill (pid, sig)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183c74788317eeebd9b0642fd030177288db75e6" translate="yes" xml:space="preserve">
          <source>[err, msg] = link (old, new)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e30ceab0f01316ae1367bdb4995a3ee364b7fb" translate="yes" xml:space="preserve">
          <source>[err, msg] = mkfifo (name, mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f743de525a1b8642bec2155464c31526875e85" translate="yes" xml:space="preserve">
          <source>[err, msg] = rename (old, new)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32589bfc744f82d36ddac78548d78851c818ab69" translate="yes" xml:space="preserve">
          <source>[err, msg] = symlink (old, new)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a5de33d3c53569caab37f908e93c1b4b3a87da" translate="yes" xml:space="preserve">
          <source>[err, msg] = unlink (file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593e69b02e18ca650ee497dc9fd22b53895eb5fd" translate="yes" xml:space="preserve">
          <source>[err, yi, &amp;hellip;] = common_size (xi, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b29ee871d2fc5e65d9add2512332e1a233d376" translate="yes" xml:space="preserve">
          <source>[f, e] = log2 (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a77a74ce2d833f29ccd5ac0c03ea2109fde3e49" translate="yes" xml:space="preserve">
          <source>[f, success, message] = urlwrite (url, localfile)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f939c92c77a70c62b428bfa035094e3f0d4ad46" translate="yes" xml:space="preserve">
          <source>[f, success] = urlwrite (url, localfile)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebfcd67e82260d74ffa51731278a9ae03ee51fa" translate="yes" xml:space="preserve">
          <source>[f, v, c] = isosurface (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aaeab2d3e86639819d87bbeab5a04ced31519a" translate="yes" xml:space="preserve">
          <source>[f, v] = isosurface (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df5704f8422b4f892636a03c92625eadb858804" translate="yes" xml:space="preserve">
          <source>[faces, vertices, fvcdata] = isocaps (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c938fe14f8bbf1cc3c7571260fbea2b933cf70" translate="yes" xml:space="preserve">
          <source>[fcn, help1str] = lookfor (&quot;-all&quot;, str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070393488f38cbe1b9fcfe4e88580d67e9c3f69e" translate="yes" xml:space="preserve">
          <source>[fcn, help1str] = lookfor (str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5220b53ca5f151851a28f698c73d8ae599dc4d8b" translate="yes" xml:space="preserve">
          <source>[fid, msg] = dup2 (old, new)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ced22729b8f56d77f819028d9de23132ce5ccd9" translate="yes" xml:space="preserve">
          <source>[fid, msg] = fopen (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce861e84e03b92cba346e5958d96f6a8fc7e17c7" translate="yes" xml:space="preserve">
          <source>[fid, msg] = tmpfile ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac74d8b827d05bc3062989a038c3d917e0086f2a" translate="yes" xml:space="preserve">
          <source>[fid, name, msg] = mkstemp (&quot;template&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cfb3c041364f49b2b33b5baeed8ab836e0f3c3" translate="yes" xml:space="preserve">
          <source>[fid, name, msg] = mkstemp (&quot;template&quot;, delete)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43656ac3645f260f4e031488c1b421e6b39efe1a" translate="yes" xml:space="preserve">
          <source>[file, mode, arch] = fopen (fid)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b701324a4cdfcc96dfc701c11c0808a5d16817" translate="yes" xml:space="preserve">
          <source>[files, err, msg] = readdir (dir)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f89593a85df9fc3455145c376b3f45fe296c804" translate="yes" xml:space="preserve">
          <source>[fname, fpath, fltidx] = uigetfile ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f29844e1af9d1c276e45a31e4c8893a1b7735d" translate="yes" xml:space="preserve">
          <source>[fname, fpath, fltidx] = uiputfile ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1096e0de0f633964312decbfdbea08da06fe3124" translate="yes" xml:space="preserve">
          <source>[fname, fpath, fltidx] = uiputfile (flt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be1e261ced8e472a34c40ea7ae05da1bd01da2a" translate="yes" xml:space="preserve">
          <source>[fname, fpath, fltidx] = uiputfile (flt, dialog_name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66c6d578f465268d4fddc7ba782dad0d648c149" translate="yes" xml:space="preserve">
          <source>[fname, fpath, fltidx] = uiputfile (flt, dialog_name, default_file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d64a223c6e3fa1f1fe14ab81f5efdb2204cd4" translate="yes" xml:space="preserve">
          <source>[format, formatspacing] = format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7642260a72a4508761b022991114f01a1584f86" translate="yes" xml:space="preserve">
          <source>[g, v1, &amp;hellip;] = gcd (a1, a2, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9829ac0e4da37b79367a294ff3da247fbe12dcae" translate="yes" xml:space="preserve">
          <source>[h, ax, bigax, p, pax] = plotmatrix (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd62818f3b783b3d7d3de5d64accbcf99cb92f16" translate="yes" xml:space="preserve">
          <source>[h, fig] = gcbo ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0dd2e71be8e29308b1620445a497d20ef40400" translate="yes" xml:space="preserve">
          <source>[h, old_prop] = hgload (filename, prop_struct)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f759ae22e4b4c4230e69b92a3ade318b6eccf73e" translate="yes" xml:space="preserve">
          <source>[h, v] = convhulln (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41062399076e36b6a6c9c9b3554b8ef3d8736952" translate="yes" xml:space="preserve">
          <source>[h, w] = freqz (&amp;hellip;, Fs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470a7bc64c844b6fc2d7dc4d46dd86da5c085d51" translate="yes" xml:space="preserve">
          <source>[h, w] = freqz (b)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e47e2b06fc89561adc23356940afaed3467362" translate="yes" xml:space="preserve">
          <source>[h, w] = freqz (b, a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b859075621ee4ca20c9f5accdfd86fbf83fc871" translate="yes" xml:space="preserve">
          <source>[h, w] = freqz (b, a, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0ce2febcd91a6dc26db64a29f8c0af59e739df" translate="yes" xml:space="preserve">
          <source>[h, w] = freqz (b, a, n, &quot;whole&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62e64ca5ade25fc720e2361393bae19364e7966" translate="yes" xml:space="preserve">
          <source>[hleg, hleg_obj, hplot, labels] = legend (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff2ee1201f1aef52f9cca56c81bb46dd5d8ceac" translate="yes" xml:space="preserve">
          <source>[housv, beta, zer] = housh (x, j, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0c7ae1b3a75ed32bd08a9583349feb086117cd" translate="yes" xml:space="preserve">
          <source>[i, j, v] = find (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905e1d80821fa882204275766ab35d56c88b9bf9" translate="yes" xml:space="preserve">
          <source>[i, j] = find (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3671ba59121ae0c0e2be0cb57d52db3af455cb46" translate="yes" xml:space="preserve">
          <source>[i, j] = strchr (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ffe5002f4d0dbc45039faacb2026ccb4166629" translate="yes" xml:space="preserve">
          <source>[idx, d] = dsearchn (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6988257ad434ca26e255cb14913f7ddabc6234ab" translate="yes" xml:space="preserve">
          <source>[idx, p] = tsearchn (x, t, xi)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7f5bf9124d985e7700567f1987b0d8af6c6f82" translate="yes" xml:space="preserve">
          <source>[img, map, alpha] = imread (filename)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747eb903ca0a7f847c0f43d2824a412e64c281a7" translate="yes" xml:space="preserve">
          <source>[img, map] = gray2ind (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9557fbfa8adca6e7f58d5633ef0e3d5d5fb3b1" translate="yes" xml:space="preserve">
          <source>[in, on] = inpolygon (x, y, xv, yv)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de7a7c8e32cf3136e50951763be69ff83caf317" translate="yes" xml:space="preserve">
          <source>[in, out, pid] = popen2 (command, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96915e891b43f73b620395a47b7395db93d56e5" translate="yes" xml:space="preserve">
          <source>[info, err, msg] = lstat (fid)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0604aca80b04809f3334f0a9cf62fec54801f9ce" translate="yes" xml:space="preserve">
          <source>[info, err, msg] = lstat (file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f2312b64af3b1b1381ed43cca141536d9a5d5f" translate="yes" xml:space="preserve">
          <source>[info, err, msg] = stat (fid)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793b2bc45a606db7e0f9e712b01aa571d31a9e2b" translate="yes" xml:space="preserve">
          <source>[info, err, msg] = stat (file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a48e6ea269349263fbae4134cc246260e468b57" translate="yes" xml:space="preserve">
          <source>[k, e] = ellipke (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f06e300d0ed28e32fc7f5856dcec69b0a2bcae" translate="yes" xml:space="preserve">
          <source>[k] = polyder (a, b)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab8a79c712781f4f540bb30c6adf4b4a0b66605" translate="yes" xml:space="preserve">
          <source>[keys, vals] = spparms ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bfc27175de95851872cbdb89327f3a64b89491" translate="yes" xml:space="preserve">
          <source>[list] = dir (directory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f8ce74afae8f8ae15ea78f03c13f23437bb3c6" translate="yes" xml:space="preserve">
          <source>[lower, upper] = bandwidth (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8623a3c010336c829962440929f2ee54a25e014c" translate="yes" xml:space="preserve">
          <source>[m, f, c] = mode (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9732e7f794149ac37631dc7b1ddb18bfa026d539" translate="yes" xml:space="preserve">
          <source>[msg, err] = ferror (fid)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda523f4397db7fcdc96967186df53d4a1aa60a8" translate="yes" xml:space="preserve">
          <source>[msg, msgid] = lasterr ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512f103bdc563a6baf8d2756d01106d819b4bb1c" translate="yes" xml:space="preserve">
          <source>[msg, msgid] = lastwarn ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fae2bcc37ac530d9fe05f513e63cac06a5c81e" translate="yes" xml:space="preserve">
          <source>[multp, idxp] = mpoles (p)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3be284243a841f0c39779428ca1d63be5cf007" translate="yes" xml:space="preserve">
          <source>[multp, idxp] = mpoles (p, tol)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9768f0368b336b15b4097ff990d79e2a81fceb" translate="yes" xml:space="preserve">
          <source>[multp, idxp] = mpoles (p, tol, reorder)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817acfadd6ae67b4f32c7a2859daddf430195b96" translate="yes" xml:space="preserve">
          <source>[n, d] = rat (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2468230ce0eb71f56ffdeeedaa45732a6937c2" translate="yes" xml:space="preserve">
          <source>[n, idx] = histc (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a57ca32f09478f1eaa02c6c1b294abe9506670" translate="yes" xml:space="preserve">
          <source>[n, nmax, nxfail, nbug, nskip, nrtskip, nregression] = test (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bb0dbb31d51bbbf06570c08c10dde2d1f735dd" translate="yes" xml:space="preserve">
          <source>[n, s] = weekday (d)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867322554da2bf709d710b298feec4d381b8c159" translate="yes" xml:space="preserve">
          <source>[n, s] = weekday (d, format)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdf7167f7702e0ee34c5a7e0ae8349e7409225d" translate="yes" xml:space="preserve">
          <source>[nest, iter] = normest (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af94516cd6f1f64010b0fc08d146bb20cc79056" translate="yes" xml:space="preserve">
          <source>[nest, v, w, iter] = normest1 (A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12757d7aa9ddec1fc81267090df3c507ebc802aa" translate="yes" xml:space="preserve">
          <source>[nest, v, w] = normest1 (A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53432405aa9ea8f080eb2fc2aea7240fb8caee23" translate="yes" xml:space="preserve">
          <source>[nest, v] = normest1 (A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720b184140cb685d45e91ab30c6f136ac766ee55" translate="yes" xml:space="preserve">
          <source>[nf, nv] = shrinkfaces (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d03f8a9a064a8e95d3427d71930b56421aeaf0" translate="yes" xml:space="preserve">
          <source>[nn, xx] = hist (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69412d1cd4fe38083c67ecb08c55c3e3fad0abb7" translate="yes" xml:space="preserve">
          <source>[num, den] = padecoef (T)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe31afa61f43f38eaf1c27ccc0964289ba9ec6a4" translate="yes" xml:space="preserve">
          <source>[num, den] = padecoef (T, N)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695ed193d0318c8c12b7f7e5254641fe73828d48" translate="yes" xml:space="preserve">
          <source>[nx, ny, nz, nv] = reducevolume (v, r)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b898ca873f76471d4b8dd82d7d669a62b942d75" translate="yes" xml:space="preserve">
          <source>[nx, ny, nz, nv] = reducevolume (x, y, z, v, r)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7c779f137f1c27a5a572eb1d3f8112410cc8f" translate="yes" xml:space="preserve">
          <source>[nx, ny, nz] = surfnorm (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3803275f69adfd480785f47008c615b17575756" translate="yes" xml:space="preserve">
          <source>[old_prog, old_args] = gnuplot_binary (new_prog)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fc1b6101331db037a37ce6547e1b0949f242e4" translate="yes" xml:space="preserve">
          <source>[old_prog, old_args] = gnuplot_binary (new_prog, arg1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dec8267cf098602fefce3f8ccb7033bdd4ff387" translate="yes" xml:space="preserve">
          <source>[order, n, T_f, T_f2] = speed (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71604daceeac51c7c0563de70938a6d6798bfce8" translate="yes" xml:space="preserve">
          <source>[out1, &amp;hellip;] = pkg (command, &amp;hellip; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5855ddde691d4128bd44a36d3215410698dea83" translate="yes" xml:space="preserve">
          <source>[output, status] = mkoctfile (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdab4f540c5f47ff204f1499e295071b9917f47" translate="yes" xml:space="preserve">
          <source>[output, status] = perl (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad58584b255fa77208303b817334c0c128c7c14" translate="yes" xml:space="preserve">
          <source>[output, status] = python (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9c76f2792bbfd7bad50a9cb9137136f3c1ff13" translate="yes" xml:space="preserve">
          <source>[p, q, r, S] = dmperm (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01baf4c15b7d9ed04f8957528a8da59e51f57bc5" translate="yes" xml:space="preserve">
          <source>[p, q] = etree (S, typ)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2a6057aa70078b70e9541d0619ffea59c6708a" translate="yes" xml:space="preserve">
          <source>[p, s, mu] = polyfit (x, y, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933bf526f9ad1d420b9f613e73761d93cef34e32" translate="yes" xml:space="preserve">
          <source>[p, s] = polyfit (x, y, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3a0fc29d5ea614e0fa42a07476ff7d0cc5c7cf" translate="yes" xml:space="preserve">
          <source>[p, stats] = ccolamd (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4682206294e1182a37e0a03a4535ed504ba3af64" translate="yes" xml:space="preserve">
          <source>[p, stats] = colamd (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109aa0abc33d08935c8f09fd52c028ebe70a7af0" translate="yes" xml:space="preserve">
          <source>[p, stats] = colamd (S, knobs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168040982248eace9aef22350db1942430f52e1d" translate="yes" xml:space="preserve">
          <source>[p, stats] = csymamd (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787cc30bd0e50bb0527cc23c770efcd3d83ba413" translate="yes" xml:space="preserve">
          <source>[p, stats] = symamd (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f90667bcbf10fb713361da708752e48482d09e" translate="yes" xml:space="preserve">
          <source>[p, stats] = symamd (S, knobs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7457f9e90967f8e83c18280b83cbc4e3e5f721" translate="yes" xml:space="preserve">
          <source>[pf, n] = factor (q)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153166e571109bf09f7285a85f7961271f1fbd7b" translate="yes" xml:space="preserve">
          <source>[pid, msg] = fork ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d93443476b0752051f648a02c8adabe5786995" translate="yes" xml:space="preserve">
          <source>[pid, status, msg] = waitpid (pid, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889b99cd40c928489f7ab6090e7d6b07e68198d0" translate="yes" xml:space="preserve">
          <source>[prog, args] = gnuplot_binary ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6f3f6a1e5054991102059a442cb24f621ee497" translate="yes" xml:space="preserve">
          <source>[pval, lm] = arch_test (y, x, p)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a631a022abdab08298043351dea0a16017764d" translate="yes" xml:space="preserve">
          <source>[q, d] = polyder (b, a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af2c6366950f873c6189bab2a9fb385c130faa2" translate="yes" xml:space="preserve">
          <source>[q, err, iter] = quad2d (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47c67a2c7606048d62d14607efa8261cda16a98" translate="yes" xml:space="preserve">
          <source>[q, err, nr_points] = quadcc (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6794c56d48428523f34944177e7b26ee0d9e3632" translate="yes" xml:space="preserve">
          <source>[q, err] = integral2 (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f78bd980944d3a90a2bd96c1c6c02d20e52b55" translate="yes" xml:space="preserve">
          <source>[q, err] = quadgk (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2baf8d837e94c03f75e585e52b5528af35a6b3e" translate="yes" xml:space="preserve">
          <source>[q, ier, nfun, err] = quad (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb873d03d67bb07fe3a7dee6c3a1fa71a0f4e94" translate="yes" xml:space="preserve">
          <source>[q, nfun] = quadl (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71b3d823cb42ca97a95cee5a529eff6d4faeb17" translate="yes" xml:space="preserve">
          <source>[q, nfun] = quadv (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd45bca938ed2ae6dfa93dad816de48c44d0b478" translate="yes" xml:space="preserve">
          <source>[r, amat, bmat, q] = colloc (n, &quot;left&quot;, &quot;right&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556eb0e0ccbe93ae6fc98a25693ed3ae73b72fcf" translate="yes" xml:space="preserve">
          <source>[r, k] = rref (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df637a106264d9411cc208a82654c99c2c581c63" translate="yes" xml:space="preserve">
          <source>[r, p, k, e] = residue (b, a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cf5169dd04e760afc624c296d5d9af810341e5" translate="yes" xml:space="preserve">
          <source>[r, p, lci, hci] = corrcoef (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c7369a1d15b263f7438b7964b9262bbcc45341" translate="yes" xml:space="preserve">
          <source>[r, p] = corrcoef (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9e73d362fbcde4fb83463a9966a89be8348882" translate="yes" xml:space="preserve">
          <source>[r1, r2, &amp;hellip;, rn] = deal (a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a08ffe8ed4f4d91a4643ff39c8cc16c7c056133" translate="yes" xml:space="preserve">
          <source>[r1, r2, &amp;hellip;, rn] = deal (a1, a2, &amp;hellip;, an)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8cf559222fc3223f943c0a8bb1d52de775c9db" translate="yes" xml:space="preserve">
          <source>[read_fd, write_fd, err, msg] = pipe ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e90a077b1f1cc394e7e1c4109855eac768cf348" translate="yes" xml:space="preserve">
          <source>[reduced_faces, reduces_vertices] = reducepatch (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcece622f2c36fa1fb00052b284ee53d2bfb689" translate="yes" xml:space="preserve">
          <source>[reg, prop] = parseparams (params)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1efcac01d57bfda907b50e01c607b05d86fab86" translate="yes" xml:space="preserve">
          <source>[reg, var1, &amp;hellip;] = parseparams (params, name1, default1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90419ad43e91a8191bbad3dd72832cdbd4e629ff" translate="yes" xml:space="preserve">
          <source>[result, err, msg] = readlink (symlink)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c03833fc48d4349066031f3f9525884b96044d" translate="yes" xml:space="preserve">
          <source>[retval, errmsg] = license (&quot;checkout&quot;, feature)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10626e56eb50d9b0ad86fba02b67ea6ee83a054" translate="yes" xml:space="preserve">
          <source>[rows, cols, &amp;hellip;, dim_N_sz] = size (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ac232d1acfadc6cdc82ac2d74b4577ed9e22a3" translate="yes" xml:space="preserve">
          <source>[s, e, te, m, t, nm, sp] = regexp (str, pat)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055c590cfb9e6bc62204ae7acf134cd8da2d050d" translate="yes" xml:space="preserve">
          <source>[s, e, te, m, t, nm, sp] = regexpi (str, pat)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdd994c6afa6e6d09086fc43f3d85baefb7117f" translate="yes" xml:space="preserve">
          <source>[s, error_estimate] = sqrtm (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533d3920d050ba83e8889c353c749be66292483c" translate="yes" xml:space="preserve">
          <source>[s, i] = sort (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d1f34d40e4176a704c671590e36ba54db7fc9a" translate="yes" xml:space="preserve">
          <source>[s, i] = sort (x, dim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a81439f07b07aaa04460e2a882394a14380883e" translate="yes" xml:space="preserve">
          <source>[s, i] = sort (x, dim, mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f96fe0b56bc8a0618349d25eaeab9fe7ffe6c5e" translate="yes" xml:space="preserve">
          <source>[s, i] = sort (x, mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad903fda3357fd0964c11a897ed60886887989d" translate="yes" xml:space="preserve">
          <source>[s, i] = sortrows (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd9ab6b1126751c6b8d86cc54e044754e8e40bd" translate="yes" xml:space="preserve">
          <source>[s, i] = sortrows (A, c)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f5af9fdb83606116491987efa018debc6757be" translate="yes" xml:space="preserve">
          <source>[s, idx] = example (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d543122e90d0bd280adb05a79bfaf2c07d1291d2" translate="yes" xml:space="preserve">
          <source>[s, iters] = logm (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f2df272ea8a15c0977ad7cb40696ff22ec365a" translate="yes" xml:space="preserve">
          <source>[s, l] = bounds (&amp;hellip;, &quot;nanflag&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869679296ef4189f9ee6b0eec963d74562b17b20" translate="yes" xml:space="preserve">
          <source>[s, l] = bounds (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9dab465fe0fceaf9b58d0756b84bdcc7a92d3e" translate="yes" xml:space="preserve">
          <source>[s, l] = bounds (x, dim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5ceea43de3b7d64db9b4347df4421414883322" translate="yes" xml:space="preserve">
          <source>[s, success, message] = urlread (url)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6485c0f53716355fea093a1d88a8db30aa3f6930" translate="yes" xml:space="preserve">
          <source>[s, success] = urlread (url)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a55400923942ead3b6f4956fefbeaf8d8737d3" translate="yes" xml:space="preserve">
          <source>[s1, s2, &amp;hellip;, sN] = ind2sub (dims, ind)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209753f21e081905ea0e8c870ebc61b3c553ce12" translate="yes" xml:space="preserve">
          <source>[sel, ok] = listdlg (key, value, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcb1b73025a21e43857d763e3a8102ad190060b" translate="yes" xml:space="preserve">
          <source>[slcidx, C, Cpre, Cpost, win] = movslice (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c705ffe65ba59c625ba2a488ff96e87742f6b80" translate="yes" xml:space="preserve">
          <source>[sn, cn, dn, err] = ellipj (u, m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f72074817c553941dca80fa3cd0824be51613f6" translate="yes" xml:space="preserve">
          <source>[sn, cn, dn, err] = ellipj (u, m, tol)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3589be85a4d7b4b4f1e0c777537b1d2ed5d0b82" translate="yes" xml:space="preserve">
          <source>[sout, p] = orderfields (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9fbdf4d7bdbf63c42d289e7ffb0692836725a1" translate="yes" xml:space="preserve">
          <source>[stack, idx] = dbstack (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c33e91d4652d235c271a0009d6471902a5eec8" translate="yes" xml:space="preserve">
          <source>[status, diaryfile] = diary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455680d64470f0bbf54db838e3b4be4363356428" translate="yes" xml:space="preserve">
          <source>[status, msg, msgid] = copyfile (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af0d2d2c3866795ba204a620681fe2fc22ee870" translate="yes" xml:space="preserve">
          <source>[status, msg, msgid] = fileattrib (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fc236f54c0837bb17114a35d4f6bf3027920e9" translate="yes" xml:space="preserve">
          <source>[status, msg, msgid] = mkdir (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d655666fc1eb02ff7e4021abd886e119ba44da" translate="yes" xml:space="preserve">
          <source>[status, msg, msgid] = movefile (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2411c784e3c8b6227b8587bb49796c10a200d039" translate="yes" xml:space="preserve">
          <source>[status, msg, msgid] = rmdir (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef6fd7e622a19e58ecea9db7db75e5089a093f7" translate="yes" xml:space="preserve">
          <source>[status, output] = system (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f453e8a5b8de88da291b07d9cb3e9efbb2ab9c" translate="yes" xml:space="preserve">
          <source>[status, text] = dos (&quot;command&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ed12630e2300e1a0ae0fbb27a378e43d59aa3e" translate="yes" xml:space="preserve">
          <source>[status, text] = unix (&quot;command&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a7dc2fd8260ac75a3a147d8ddbbf3f3ef53aa8" translate="yes" xml:space="preserve">
          <source>[style, color, marker, msg] = colstyle (style)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6e4855a1649a0d4356ca4f79f6f021799c2200" translate="yes" xml:space="preserve">
          <source>[t, y, te, ye, ie] = ode15i (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0b4e287f802b7c0db4402d8618d54b1884df6c" translate="yes" xml:space="preserve">
          <source>[t, y, te, ye, ie] = ode15s (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545e68aeab238dfa3445e1d411f72a882f17e085" translate="yes" xml:space="preserve">
          <source>[t, y, te, ye, ie] = ode23 (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccfa6ddd95a86b5054e310c94e7e0f2a56aa4ba" translate="yes" xml:space="preserve">
          <source>[t, y, te, ye, ie] = ode45 (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a2e23184cb79b8cd2e22102f6d210524ed50b9" translate="yes" xml:space="preserve">
          <source>[t, y] = ode15i (fun, trange, y0, yp0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe61327576c8fa11993037f8ca2450a30fb06c11" translate="yes" xml:space="preserve">
          <source>[t, y] = ode15i (fun, trange, y0, yp0, ode_opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa235d6d2956637b061b5676fc1585c213a25bd7" translate="yes" xml:space="preserve">
          <source>[t, y] = ode15s (fun, trange, y0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2a08ae09616b3e51811100b28b4ecdae167078" translate="yes" xml:space="preserve">
          <source>[t, y] = ode15s (fun, trange, y0, ode_opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942dc7980ca2410705dd889ed5e3c59c91a89de4" translate="yes" xml:space="preserve">
          <source>[t, y] = ode23 (fun, trange, init)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0409dac9eb6e00276f4e6eb171271a568efff1d3" translate="yes" xml:space="preserve">
          <source>[t, y] = ode23 (fun, trange, init, ode_opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad659b83f38c2afad6dc36eeee5a06f630a0c20f" translate="yes" xml:space="preserve">
          <source>[t, y] = ode45 (fun, trange, init)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa3a87a10c4517caf756c03b5f91c4312e8855c" translate="yes" xml:space="preserve">
          <source>[t, y] = ode45 (fun, trange, init, ode_opt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1116db50b6cc99126f979930fae649dffba9b0b1" translate="yes" xml:space="preserve">
          <source>[text, format] = get_help_text (name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ec60f9a36f9881cb95a04a9506006468622d79" translate="yes" xml:space="preserve">
          <source>[text, format] = get_help_text_from_file (fname)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a344b8d430d8e2f96b0c3298dbba8781f3475e" translate="yes" xml:space="preserve">
          <source>[text, status] = get_first_help_sentence (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b74552c76a4cf50078c4abdecf4da253af462de" translate="yes" xml:space="preserve">
          <source>[tf, s_idx] = ismember (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503150c43f53539895fb24694b1757e52ff438a1" translate="yes" xml:space="preserve">
          <source>[theta, phi, r] = cart2sph (C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889735da168481b37587e1b37faf8e7b0987bcde" translate="yes" xml:space="preserve">
          <source>[theta, phi, r] = cart2sph (x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423135da1c127a5d5dcee18855deaa6672c0d640" translate="yes" xml:space="preserve">
          <source>[theta, r, z] = cart2pol (C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9b22ffc858f1ed4d9f6ee59994644e98afc704" translate="yes" xml:space="preserve">
          <source>[theta, r, z] = cart2pol (x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db48c05d4716e21ead5676fe5eeba08d0e434f34" translate="yes" xml:space="preserve">
          <source>[theta, r] = cart2pol (C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef3da3ee33dd74ebff760fc4f9b714fa3a19807" translate="yes" xml:space="preserve">
          <source>[theta, r] = cart2pol (x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db98b8686f46245485b5f76b11240ca1dcd679" translate="yes" xml:space="preserve">
          <source>[thout rout] = rose (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e28b98aed76acc08338b2bcb7f2c1b54dfe7ecb" translate="yes" xml:space="preserve">
          <source>[tm_struct, nchars] = strptime (str, fmt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9dc70bc2118bcf500276e9b0bba684c316729c1" translate="yes" xml:space="preserve">
          <source>[tok, rem] = strtok (str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4f4f409068e6496d0b911d8574125ce565b25b" translate="yes" xml:space="preserve">
          <source>[tok, rem] = strtok (str, delim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd5b76ff222f75b08d79ff30fa7936128b6a7e4" translate="yes" xml:space="preserve">
          <source>[total, user, system] = cputime ();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e66746d1ccc5eca3b1009b07a2e04b5fdf63c3" translate="yes" xml:space="preserve">
          <source>[u, h, nu] = krylov (A, V, k, eps1, pflg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2775fd32604b7fe4ecc9403c3f9e7ea22f6ac1b4" translate="yes" xml:space="preserve">
          <source>[u, s, v, flag] = svds (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a7c3fd10a04cd728c553cc3e440d051885b71a" translate="yes" xml:space="preserve">
          <source>[u, s, v] = svds (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea32206c169b1d3b3f9b0e3b7a99cf1339198a9" translate="yes" xml:space="preserve">
          <source>[uniqstr, ismodified] = matlab.lang.makeUniqueStrings (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf8c353ed53bf688fd40e0a81fd588f44ed7046" translate="yes" xml:space="preserve">
          <source>[uts, err, msg] = uname ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b683421b09a2e4c30f4a90a104aa8426bc25c1e7" translate="yes" xml:space="preserve">
          <source>[v, beta] = gallery (&quot;house&quot;, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b3cbf5999b1970354cb241df9b81ecbcae3756" translate="yes" xml:space="preserve">
          <source>[v, d] = version ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bb29b0a856d5b4a2ee5b6e79afc6dbda9bb820" translate="yes" xml:space="preserve">
          <source>[v, lambda, c] = condeig (a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befc95ca950a19ad3555029c414d3db396c95c16" translate="yes" xml:space="preserve">
          <source>[v, z] = polyeig (C0, C1, &amp;hellip;, Cl)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfa9f2bd869d70bbd5cb97d3f9cef2cf0727ed0" translate="yes" xml:space="preserve">
          <source>[v1, v2, &amp;hellip;, count, errmsg] = fscanf (fid, template, &quot;C&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0327961839fe2433c8026dadde871a8508ee3c4d" translate="yes" xml:space="preserve">
          <source>[v1, v2, &amp;hellip;, count, errmsg] = scanf (template, &quot;C&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6adc830014ab704a423a2556038e76a9cc83bf7" translate="yes" xml:space="preserve">
          <source>[v1, v2, &amp;hellip;, count, errmsg] = sscanf (string, template, &quot;C&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dab2ecd1b9912a1b2ae5c4fd4f1cd661dd7e18" translate="yes" xml:space="preserve">
          <source>[val, count, errmsg, pos] = sscanf (string, template, size)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2ebecd0286eb290dd5ba597e1c10c511ef659d" translate="yes" xml:space="preserve">
          <source>[val, count, errmsg] = fscanf (fid, template, size)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cfb55fc8f6d1090362a6b35c668cd227aa1004" translate="yes" xml:space="preserve">
          <source>[val, count, errmsg] = scanf (template, size)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db2090087cc6be123b71881f67adb7e4c2c988c" translate="yes" xml:space="preserve">
          <source>[val, count] = fread (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196de099f51135a3845f7f59eefb1561387faf04" translate="yes" xml:space="preserve">
          <source>[varname, ismodified] = matlab.lang.makeValidName (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be907bc6bef2b6f5ac6a372ae78c2f0e620ac06c" translate="yes" xml:space="preserve">
          <source>[vx, vy] = voronoi (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0677c20eaf674660939e42686e891317c9ce0cd7" translate="yes" xml:space="preserve">
          <source>[w, iw] = cummax (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e2a68505676da74cf5470535d648d48c98e7d9" translate="yes" xml:space="preserve">
          <source>[w, iw] = cummin (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059fb61cc55cb80a5d1b1fa0b719d6e38dc4178a" translate="yes" xml:space="preserve">
          <source>[w, iw] = max (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0d00f34e270521cb7649e690f8d6b6abe2fe67" translate="yes" xml:space="preserve">
          <source>[w, iw] = min (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3312e2c7cbc236dd52298d5a5e0d620d7cde326d" translate="yes" xml:space="preserve">
          <source>[x, R] = linsolve (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f4b4ff3b393515a727e0e197dcdc6752cbd4de" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec, eigest] = pcg (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3313cd9a413e78b62ea556e7d0a4b348a1394e8" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = bicg (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dce1807d2ed0e3cf0b061260efed96cc8e9b735" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = bicgstab (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63ba622a18ceb72bd3a09d93c5f755d45f5f3b6" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = cgs (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b797a445abbc82669e36747dfe94776b55e27e" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = gmres (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20938d20709032bacf474bb243b1133ffba2e047" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = pcr (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddfe75f09371dd04c8f0501b8acc7df49fddb49" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = qmr (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d064ebf02479832a92acbb4a46e1cdc15429e98a" translate="yes" xml:space="preserve">
          <source>[x, flag, relres, iter, resvec] = tfqmr (A, b, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702b895a1959925cc395b56d7a67764b2afa720" translate="yes" xml:space="preserve">
          <source>[x, fval, exitflag, output] = fminsearch (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797ada08959f60d5056481103d95f30fe51c27b8" translate="yes" xml:space="preserve">
          <source>[x, fval, info, output, fjac] = fsolve (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed4a3b05210a7c7338f0084186ee643b7121272" translate="yes" xml:space="preserve">
          <source>[x, fval, info, output, grad, hess] = fminunc (fcn, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81122cca2e4f6c520f51765ee26a056d6ad82f0" translate="yes" xml:space="preserve">
          <source>[x, fval, info, output] = fminbnd (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2615c77bd6db0f70e187d3d660c6d896ce77ccb5" translate="yes" xml:space="preserve">
          <source>[x, fval, info, output] = fzero (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e41ac8d3747d47534ca6af136e25c364d24602" translate="yes" xml:space="preserve">
          <source>[x, istate, msg] = lsode (fcn, x_0, t)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d917d739561f1035d4151b243295efc99bd284" translate="yes" xml:space="preserve">
          <source>[x, istate, msg] = lsode (fcn, x_0, t, t_crit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f043c2241a3e14f51b5e4865ce4deace5ee592" translate="yes" xml:space="preserve">
          <source>[x, map] = frame2im (frame)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4553e0423dab8ffed9b368dda002e843ac2ea685" translate="yes" xml:space="preserve">
          <source>[x, map] = rgb2ind (R, G, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afadff829fe60398eb88310392a11b38bca15550" translate="yes" xml:space="preserve">
          <source>[x, map] = rgb2ind (rgb)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ea479b64f4f634d13881b661fdae38a860a59b" translate="yes" xml:space="preserve">
          <source>[x, minval, exitflag, output, lambda] = pqpnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648916de39eb0c536c228cc3f53e3aed32507aa9" translate="yes" xml:space="preserve">
          <source>[x, minval, exitflag, output] = pqpnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca410df155f1a73d8bbacab9e0d4f4c0e91a9005" translate="yes" xml:space="preserve">
          <source>[x, minval, exitflag] = pqpnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dec9aa139107d6c26b06bb032c8b92553cedf8a" translate="yes" xml:space="preserve">
          <source>[x, minval] = pqpnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203cf1d15abcebd8d181373208c0d4863b9cb538" translate="yes" xml:space="preserve">
          <source>[x, obj, info, iter, nf, lambda] = sqp (x0, phi)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75892cd44d5ac6c1567fda4b003b13bc341bd7c3" translate="yes" xml:space="preserve">
          <source>[x, obj, info, lambda] = qp (&amp;hellip;, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a80811621abc54c99cc1bf8a7474a7fc63aa31" translate="yes" xml:space="preserve">
          <source>[x, obj, info, lambda] = qp (x0, H)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11baf6bc7a728a7105d0c95b242b9f44a0a17fc2" translate="yes" xml:space="preserve">
          <source>[x, obj, info, lambda] = qp (x0, H, q)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a532bd87c389d7d292e9ae47369c9ca868cfb4" translate="yes" xml:space="preserve">
          <source>[x, obj, info, lambda] = qp (x0, H, q, A, b)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a099fc26d141d32adf4d300ed01d6cfc276fe8e1" translate="yes" xml:space="preserve">
          <source>[x, obj, info, lambda] = qp (x0, H, q, A, b, lb, ub)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d8b44425447e9b17209b01af16f4f03a061e54" translate="yes" xml:space="preserve">
          <source>[x, obj, info, lambda] = qp (x0, H, q, A, b, lb, ub, A_lb, A_in, A_ub)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c3c435cef8118a807d0ff36d6bd53a7023e3e9" translate="yes" xml:space="preserve">
          <source>[x, p, n, k, d] = unmkpp (pp)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e220bd3bfe4a7b36cc3db82ac9422908e3232ddc" translate="yes" xml:space="preserve">
          <source>[x, rcond] = inv (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d8147c349925522271f3929e20fd3261ee9826" translate="yes" xml:space="preserve">
          <source>[x, resnorm, residual, exitflag, output, lambda] = lsqnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3daf50a4a980988c0445839cb3b03b1cabba58" translate="yes" xml:space="preserve">
          <source>[x, resnorm, residual, exitflag, output] = lsqnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfc5e17a45b83b4509a39e629037ef13f78f152" translate="yes" xml:space="preserve">
          <source>[x, resnorm, residual, exitflag] = lsqnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b191ec808b65b4413822607bb857ec401aac7e9c" translate="yes" xml:space="preserve">
          <source>[x, resnorm, residual] = lsqnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc0f783b11f83ae7c663b275250d575d23558bf" translate="yes" xml:space="preserve">
          <source>[x, resnorm] = lsqnonneg (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669734eda1620cd877c53b71b773196b5441f6b1" translate="yes" xml:space="preserve">
          <source>[x, state] = str2num (s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4372d55164ce35d604851bed1134f1740bf19da3" translate="yes" xml:space="preserve">
          <source>[x, stdx, mse, S] = lscov (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e30f4b2c217f4e3586e6cc4d166f8a1c2b54f3b" translate="yes" xml:space="preserve">
          <source>[x, xdot, istate, msg] = daspk (fcn, x_0, xdot_0, t, t_crit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dca66c8c8069cd2915f22877c3ce11d7ed5e234" translate="yes" xml:space="preserve">
          <source>[x, xdot, istate, msg] = dassl (fcn, x_0, xdot_0, t, t_crit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7674fe444e9b1ec30fabe5742ddc4cfc6f4cebb4" translate="yes" xml:space="preserve">
          <source>[x, xdot, t_out, istat, msg] = dasrt (fcn, g, x_0, xdot_0, t)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743faed86bbaea90d9e2937177c3e6705e34ed12" translate="yes" xml:space="preserve">
          <source>[x, y, &amp;hellip;] = arrayfun (func, A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e2656aff07f40aeddf50dbc00bd01f41c57820" translate="yes" xml:space="preserve">
          <source>[x, y, buttons] = ginput ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae829b8f0c5f8839d1401ab486b3d0e278687a92" translate="yes" xml:space="preserve">
          <source>[x, y, buttons] = ginput (n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560e431d6db26970269f471e5848f3c9d38b634a" translate="yes" xml:space="preserve">
          <source>[x, y, z] = cylinder (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7ab4812c4777540e7acf9c48a94bf579a1d5db" translate="yes" xml:space="preserve">
          <source>[x, y, z] = ellipsoid (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66ea04efeb68ff12901c94b157f85a105b83865" translate="yes" xml:space="preserve">
          <source>[x, y, z] = peaks (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2721f3161abaf6cfc0cb38238c2ade2f6d710f9c" translate="yes" xml:space="preserve">
          <source>[x, y, z] = pol2cart (P)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fa89d3e7a9f31dc24dce3ae7082b85b788b6f3" translate="yes" xml:space="preserve">
          <source>[x, y, z] = pol2cart (theta, r, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac212df728f3d4fbe72f74a15a135cc0eec2d6e7" translate="yes" xml:space="preserve">
          <source>[x, y, z] = sombrero (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfc1c86de86d6c638ca2d4aa973ccee88cc8934" translate="yes" xml:space="preserve">
          <source>[x, y, z] = sph2cart (S)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea5225b6a259b037f336330f4f00ebd7efe6944" translate="yes" xml:space="preserve">
          <source>[x, y, z] = sph2cart (theta, phi, r)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56085eb3e24c6e4fdb0c10c8c4a3103042b4cbaa" translate="yes" xml:space="preserve">
          <source>[x, y, z] = sphere (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b4edb7f20938b94a5849743c528469011c0043" translate="yes" xml:space="preserve">
          <source>[x, y] = fplot (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3de55f99740c69500e8b2623cb27a98cf9df77" translate="yes" xml:space="preserve">
          <source>[x, y] = gplot (A, xy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f114d111684cd7ab506316cd953a570f3d788e37" translate="yes" xml:space="preserve">
          <source>[x, y] = humps (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3627460c39ab4d12405410bfbfc2538534554721" translate="yes" xml:space="preserve">
          <source>[x, y] = pol2cart (P)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb1db924713c423cd9fd44c488ac5192db7ca27" translate="yes" xml:space="preserve">
          <source>[x, y] = pol2cart (theta, r)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b51561f3222d80827fc3a41a58fe4ad202f0f" translate="yes" xml:space="preserve">
          <source>[xi, yi, zi] = griddata (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1666d86498017d6fb709f25b1bbb0303234fc9" translate="yes" xml:space="preserve">
          <source>[xopt, fmin, errnum, extra] = glpk (c, A, b, lb, ub, ctype, vartype, sense, param)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441d2f1cc809ce9549603832eacfd3b98e372119" translate="yes" xml:space="preserve">
          <source>[xstep, ystep] = stairs (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4100060ed3438c0abbfed42556da184f6c6618" translate="yes" xml:space="preserve">
          <source>[xx, yy, zz] = meshgrid (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd57aadab9c7bd3e814f3c3df67960d07d73b6b" translate="yes" xml:space="preserve">
          <source>[xx, yy, zz] = meshgrid (x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8be5b1b64f055cd48904b811400089f9e8d3f30" translate="yes" xml:space="preserve">
          <source>[xx, yy] = meshgrid (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e93130b271990f03641a4082254c9840b94f43" translate="yes" xml:space="preserve">
          <source>[xx, yy] = meshgrid (x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae75e4ad84b5648494d2230cea5fff65c17c927" translate="yes" xml:space="preserve">
          <source>[y, c] = stft (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d58c16ada3a4e629437b71b78be38814d73514" translate="yes" xml:space="preserve">
          <source>[y, dy] = polyval (p, x, s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de4511e7c5f6e57fdd49ad02b252cac134b1516" translate="yes" xml:space="preserve">
          <source>[y, dy] = polyval (p, x, s, mu)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58125de535ba49f0fe9079b1d0dd50ade8ff816b" translate="yes" xml:space="preserve">
          <source>[y, fs] = audioread (filename)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f9b1d0aabdbd29553c15f27a47f46f241c2778" translate="yes" xml:space="preserve">
          <source>[y, fs] = audioread (filename, datatype)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086986d71320a284b105b0cec8c5d6a9c6e78593" translate="yes" xml:space="preserve">
          <source>[y, fs] = audioread (filename, samples)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c583ac91de27f6c888c9b42168fa1f8ddab32145" translate="yes" xml:space="preserve">
          <source>[y, fs] = audioread (filename, samples, datatype)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d989c18adcd53b882360b13007ea680f038b94c9" translate="yes" xml:space="preserve">
          <source>[y, h] = mgorth (x, v)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1928212103eb654f5b073059168be5a44419ec87" translate="yes" xml:space="preserve">
          <source>[y, i, j] = unique (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3e7d1eda8cb179906aaef55fe7a9cdff832a02" translate="yes" xml:space="preserve">
          <source>[y, i, j] = unique (&amp;hellip;, &quot;first&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04dfc7f97d8bf413dc1cfc3eb3fbe176be47fed" translate="yes" xml:space="preserve">
          <source>[y, i, j] = unique (&amp;hellip;, &quot;last&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71215947ba710a3e71963e3c03e2c3aa5c9d4733" translate="yes" xml:space="preserve">
          <source>[y, m, d, h, mi, s] = datevec (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a9a845c7ea079fb299e2dc87224ab5136add6e" translate="yes" xml:space="preserve">
          <source>[y, ns] = shiftdim (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b992d93cd5b4d6369df7b9a2f17c51ccbd1c8710" translate="yes" xml:space="preserve">
          <source>[y, sf] = filter (b, a, x, [], dim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d782da1d4fb143a65c6296cfc51b0c7170e68db2" translate="yes" xml:space="preserve">
          <source>[y, sf] = filter (b, a, x, si)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fb50b2bd593ad035c01ef9043008eaf4389428" translate="yes" xml:space="preserve">
          <source>[y, sf] = filter (b, a, x, si, dim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffc962c7321c52d870ea36ca3e8ffbe227aca15" translate="yes" xml:space="preserve">
          <source>[y0_new, yp0_new, resnorm] = decic (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c491f99d37958a4f8f18f1f09513c983c5889a3" translate="yes" xml:space="preserve">
          <source>[y0_new, yp0_new] = decic (fun, t0, y0, fixed_y0, yp0, fixed_yp0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947016a4f49b5ca81cfd3e123824f64f06e265d3" translate="yes" xml:space="preserve">
          <source>[y0_new, yp0_new] = decic (fun, t0, y0, fixed_y0, yp0, fixed_yp0, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c410d31b3853fa874bab6317d0f4952a6ff744ff" translate="yes" xml:space="preserve">
          <source>[y1, y2, &amp;hellip;, yn] = ndgrid (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2f1f26c06cd7e2bfeef71ef3821514c2a282b8" translate="yes" xml:space="preserve">
          <source>[y1, y2, &amp;hellip;, yn] = ndgrid (x1, x2, &amp;hellip;, xn)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ff6462c3544559b3144ea8cef03ed0be34983a" translate="yes" xml:space="preserve">
          <source>[z, mu, sigma] = zscore (&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae567a528cda783f90b56d57a687a682622a630c" translate="yes" xml:space="preserve">
          <source>\!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab006bb8aacdf6e68299bc1dffccc9bcc8ac3eaf" translate="yes" xml:space="preserve">
          <source>\&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c33f14c633d90d5eca1c221488e9b9f41b3011c" translate="yes" xml:space="preserve">
          <source>\#</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d713754a2f5429b28533071b75723dacd3ad9dc8" translate="yes" xml:space="preserve">
          <source>\$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2dedb7d78d6d1f0629ea781cb92b6822c8648e" translate="yes" xml:space="preserve">
          <source>\0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0773dee019be63f63d3367aed689ebc6109b49d" translate="yes" xml:space="preserve">
          <source>\033</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c84742bd468babcef33d3cb8848ed2b57f191f" translate="yes" xml:space="preserve">
          <source>\=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763bcca756eff32d120509e78298021b60d7f614" translate="yes" xml:space="preserve">
          <source>\Delta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c596c27eb47af04b4c9c7534f796b1a3b7f28e4" translate="yes" xml:space="preserve">
          <source>\Gamma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceebc381e32b0a69d1753d65dac044091a8ae3b" translate="yes" xml:space="preserve">
          <source>\H</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ccebf6b4eee8a0012cd9b972a1decad1ea9fb6" translate="yes" xml:space="preserve">
          <source>\Im</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ac27e34d4fdceb5d4689aad36976233eeb11fa" translate="yes" xml:space="preserve">
          <source>\Lambda</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedbc9c7110a8418f5af9ddd5e006596f8b70f36" translate="yes" xml:space="preserve">
          <source>\Leftarrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4959627bdb882062bf2d1a1cde4bb119077fd40e" translate="yes" xml:space="preserve">
          <source>\Omega</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51f9a1a7fe06472f0d68f436b2710c8e200e52a" translate="yes" xml:space="preserve">
          <source>\Phi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3db286daee0046cd40cbb02921232bf38d2a99" translate="yes" xml:space="preserve">
          <source>\Pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2290bb0684c4a70d70553f35528aa2ae4f7f7d7d" translate="yes" xml:space="preserve">
          <source>\Psi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca85c689a1b638e0807de0610832c54df0f8cdb" translate="yes" xml:space="preserve">
          <source>\Re</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d97e684117250a9afe9be022ab8a63653dd15aa" translate="yes" xml:space="preserve">
          <source>\Rightarrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5615b3fcee824f137c372e351ccca3ff3a3292" translate="yes" xml:space="preserve">
          <source>\Sigma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f42a32ead6a2a8a4a7cbe92ee7ea2d432194638" translate="yes" xml:space="preserve">
          <source>\Theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2427b419df24096179e377ed2b7765e475dad4f3" translate="yes" xml:space="preserve">
          <source>\Upsilon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd763376ee8ab23121ea96f020a65565c5e68687" translate="yes" xml:space="preserve">
          <source>\W</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c33e099eb08ede756fb75424f4b9b74e34d2a2" translate="yes" xml:space="preserve">
          <source>\Xi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e94758983980504af303ef297fd2bf9d9cea063" translate="yes" xml:space="preserve">
          <source>\\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ddd833209956531c37d5f0c82af74ca467d9b7" translate="yes" xml:space="preserve">
          <source>\a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e09d0a830d8db1105ad1ff43c8c1b25a07fa2f5" translate="yes" xml:space="preserve">
          <source>\aleph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c665b45932a814215e979bc2611080b4948e68" translate="yes" xml:space="preserve">
          <source>\alpha</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40589d68d41fb96f4a4754b153bb1e0ffb107f3" translate="yes" xml:space="preserve">
          <source>\angle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf1f8e194a46566b6abaecc626a5338eb89b6c4" translate="yes" xml:space="preserve">
          <source>\approx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cf200212223c762d7ed4756d09813cde57121d" translate="yes" xml:space="preserve">
          <source>\ast</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6499d503bfc00cadae1440b191c52a8632e2f8c4" translate="yes" xml:space="preserve">
          <source>\beta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd817e4b6be214bda0014d68ae092fe7b58fd4d" translate="yes" xml:space="preserve">
          <source>\bf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd420e290929156c7e188e631f80a056a4e6d60" translate="yes" xml:space="preserve">
          <source>\bullet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be2c0544441f4163b5555e57a9890557fb84ce9" translate="yes" xml:space="preserve">
          <source>\cap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9204fd4be60aaa10dec0929315049a65155d8ffc" translate="yes" xml:space="preserve">
          <source>\cdot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ab8159ae04948c068d81b5b8be31b102d5217c" translate="yes" xml:space="preserve">
          <source>\chi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2696114afc5d846dd66d5c552cca4ebfba355bc" translate="yes" xml:space="preserve">
          <source>\circ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9dc4488c6413833aba65dc14fdba88d82e70f54" translate="yes" xml:space="preserve">
          <source>\clubsuit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e930eb073f108b666a865ba126ab480a54089d28" translate="yes" xml:space="preserve">
          <source>\color[rgb]{&lt;var&gt;R&lt;/var&gt;&lt;var&gt;G&lt;/var&gt;&lt;var&gt;B&lt;/var&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b913e85e61c9dc491d4b08d79cc2b662a45e01" translate="yes" xml:space="preserve">
          <source>\color{&lt;var&gt;color&lt;/var&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf44bbe42dd616ba760f60a48dcdecb873be267" translate="yes" xml:space="preserve">
          <source>\cong</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99145aac55b3a8932a4af32e1eccff1e3e5e1954" translate="yes" xml:space="preserve">
          <source>\copyright</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29af616648180918f9ab43518c8e9182f6c0d0da" translate="yes" xml:space="preserve">
          <source>\cup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf5b0b18d08106e7f87e99a2da9940d43b46e3b" translate="yes" xml:space="preserve">
          <source>\d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27523bc099eaf87872dfa156d9de90ac0955fdfe" translate="yes" xml:space="preserve">
          <source>\deg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6a16552e246af497720ffdfe6091b42d2f8938" translate="yes" xml:space="preserve">
          <source>\delta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3943fc0dbce6e65062cb7c6257a0d0383b6bd5" translate="yes" xml:space="preserve">
          <source>\diamondsuit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669a988bd59c28b05f3e017a7e11ce2a33e43d51" translate="yes" xml:space="preserve">
          <source>\div</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d0ab2496bb6b23084bbd1e3dedbf6451a67239" translate="yes" xml:space="preserve">
          <source>\downarrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64244d4b91c2f1738b8b84d6883f4d5736693e7" translate="yes" xml:space="preserve">
          <source>\epsilon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265a73f0318d82099471b873fb7854c7f06ef9d4" translate="yes" xml:space="preserve">
          <source>\equiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2899aeb886ad0fa72652bffd5511e452aaf084ab" translate="yes" xml:space="preserve">
          <source>\eta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dfe77c1ac2f8ab03a40b2d38f594cdd0ed77c4" translate="yes" xml:space="preserve">
          <source>\exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7f0e9f08b4cc118e793200ea81655abf0feb3a" translate="yes" xml:space="preserve">
          <source>\fontname{&lt;var&gt;fontname&lt;/var&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f639d45c08f3be8535b11d148a0d97a7d400216f" translate="yes" xml:space="preserve">
          <source>\fontsize{&lt;var&gt;size&lt;/var&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983e5873ee8f04444f8ba6eb605d1782b7824754" translate="yes" xml:space="preserve">
          <source>\forall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67833ee2012ec1c6254b6c009dc72bf0dc48aa6d" translate="yes" xml:space="preserve">
          <source>\gamma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d75ce806cfa95e2165e15f3f40cbc02b2526a1" translate="yes" xml:space="preserve">
          <source>\geq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f2ecadf9dd59eef4ba85790abf53e6490795a0" translate="yes" xml:space="preserve">
          <source>\h</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075c4b750f7161255c6f0b0acecabc9d24052c13" translate="yes" xml:space="preserve">
          <source>\heartsuit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10a30cec966c55cdc95f8d69ecac067cdd0d075" translate="yes" xml:space="preserve">
          <source>\in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b97f26fbeb1b84327c736de515f10980d9c7d68" translate="yes" xml:space="preserve">
          <source>\infty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06a3bfdbbc05a39a7e2b0b7982b3ae4b516ceb4" translate="yes" xml:space="preserve">
          <source>\int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c12e853b6bca3c4e24829292c109b5302e51442" translate="yes" xml:space="preserve">
          <source>\iota</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4310a617be713e1ceabf5d09a3f83e42d75ea74e" translate="yes" xml:space="preserve">
          <source>\it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397916aac98718ec79c5268ba9d12c07ea9fe133" translate="yes" xml:space="preserve">
          <source>\kappa</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3931f1ce298c536432fd324b3a1ab4337120689" translate="yes" xml:space="preserve">
          <source>\lambda</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06777e92c262e06bc8808ee4544acbf089d9680" translate="yes" xml:space="preserve">
          <source>\langle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdfeedf09f1feed7500936d54db5724028f5b34" translate="yes" xml:space="preserve">
          <source>\lceil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908c2f8e0e2aa96db646337f6a92f5762f919565" translate="yes" xml:space="preserve">
          <source>\ldots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3d154ee1aefb29215058ed71d118d919969304" translate="yes" xml:space="preserve">
          <source>\leftarrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb753a72a0df411a135315be2357b1530004720e" translate="yes" xml:space="preserve">
          <source>\leftrightarrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a9328764eddcc1a62bf8fbb7c249505ed2c539" translate="yes" xml:space="preserve">
          <source>\leq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b940017c1198f12018a137e5d310d93438dcfea1" translate="yes" xml:space="preserve">
          <source>\lfloor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbf6923ea3f08cb83b08ed026f40a80751dff3f" translate="yes" xml:space="preserve">
          <source>\mid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4e56595df1d02f21e5c3ff7b0e9d80921858ff" translate="yes" xml:space="preserve">
          <source>\mu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473d845105275d42e0a96aefc14bfa8ee70b72fd" translate="yes" xml:space="preserve">
          <source>\nabla</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f95d4968e0af8fe96e07aa376e84031eff7c471" translate="yes" xml:space="preserve">
          <source>\neg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a502f8cd366c5e944c6210805f30c7c7613b95" translate="yes" xml:space="preserve">
          <source>\neq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e88ddf17a770259fc230e8575486a6988b1ba8" translate="yes" xml:space="preserve">
          <source>\ni</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f73f11c5810708dc1292a048448d61b1fe8556e" translate="yes" xml:space="preserve">
          <source>\nnn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697fbec64a12e65fc251dd60807f99520ec4a6a2" translate="yes" xml:space="preserve">
          <source>\nu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8d3f48deb055fe9504b308e8a28f7e5e41a075" translate="yes" xml:space="preserve">
          <source>\o</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b077a63e22815fe5c8ee82dab9894be842b19c" translate="yes" xml:space="preserve">
          <source>\omega</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b7092c0f7ce6535f2574569c98f7b3c2fe2c5f" translate="yes" xml:space="preserve">
          <source>\oplus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244f654959488c08ea900cad5371010c9a265de0" translate="yes" xml:space="preserve">
          <source>\oslash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72166555a6db55785fc6fbe9a7c5bbe72be28db8" translate="yes" xml:space="preserve">
          <source>\otimes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99cc6ef78695c8f6abf56e39a407850c8269198" translate="yes" xml:space="preserve">
          <source>\partial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67833d7163657ab54825d1712d2ba7c67721b269" translate="yes" xml:space="preserve">
          <source>\perp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411e715f9ab9075b0a30b4117d209921f0bc2389" translate="yes" xml:space="preserve">
          <source>\phi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac47b6d7372b4087583cfd048d20f4c1571f5cf" translate="yes" xml:space="preserve">
          <source>\pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab831e7ef5cbe6d0c5b6be99691ae42bd12d5a16" translate="yes" xml:space="preserve">
          <source>\pm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f62fd82f7d6166a274d1936510349ae0b1fd33" translate="yes" xml:space="preserve">
          <source>\prime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c2f2286d14b68779e0cd01e9fb402b4fa91b07" translate="yes" xml:space="preserve">
          <source>\propto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c774d4ea848036687a827f51610b5b681b3b67d5" translate="yes" xml:space="preserve">
          <source>\psi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d535415e85e44235fe1f54351a2963a914d4c6" translate="yes" xml:space="preserve">
          <source>\rangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c970daa31d25893976688148419f89ca48475406" translate="yes" xml:space="preserve">
          <source>\rceil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95432dbc80439eef9be7d9d877fc5350b1d8ab47" translate="yes" xml:space="preserve">
          <source>\rfloor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77a25750c5830bac1363a0ccdc587efa0746a6a" translate="yes" xml:space="preserve">
          <source>\rho</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a0795f45d32287dba0eb83fc4a3f470c6e5537" translate="yes" xml:space="preserve">
          <source>\rightarrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54d87dc4924aeddcb8ec2ad3ec02902161937a0" translate="yes" xml:space="preserve">
          <source>\rm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c702e348504013ae2a1faa8cec6a558f9315a8" translate="yes" xml:space="preserve">
          <source>\s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c15416b63fd933850978302bcda59da879774e" translate="yes" xml:space="preserve">
          <source>\sigma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2243ccce8948e68890aabd1ce859dbb83defe1" translate="yes" xml:space="preserve">
          <source>\sim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c5efed4cfbaca6aff1ca2ec35e93707c3923f1" translate="yes" xml:space="preserve">
          <source>\sl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8de865e828ae84a51060297696c36d80cdfbbe6" translate="yes" xml:space="preserve">
          <source>\spadesuit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4f8da580997f60b8875f7bdff1e1ab7be1cf21" translate="yes" xml:space="preserve">
          <source>\subset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0241ed64f7f754d714cf9b2cef41ae3ac7b2cb35" translate="yes" xml:space="preserve">
          <source>\subseteq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e9f6cefb31e18d399966410fc9f7a7accc5f4d" translate="yes" xml:space="preserve">
          <source>\supset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f105754b4546af3fb651cbd6ea1a925ee87bf121" translate="yes" xml:space="preserve">
          <source>\supseteq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e417dbdd39eebaef3720bea81c9bd41e5202ddb" translate="yes" xml:space="preserve">
          <source>\surd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf81043e29dfc96a6fe1f30f7116f552de6e7d7" translate="yes" xml:space="preserve">
          <source>\t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9148a5f77a39b4083611f2ac760c9479d17582c" translate="yes" xml:space="preserve">
          <source>\tau</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb005d76f9f2e394a770c2562c2e150a413b3216" translate="yes" xml:space="preserve">
          <source>\theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2892f79a845583e0efde20c511377b165285fb" translate="yes" xml:space="preserve">
          <source>\times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153809851b33ce0cdce06e5a572c675e18d0c3b5" translate="yes" xml:space="preserve">
          <source>\u</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d613cdd74c87472bfe8fc19d2c614d4b898395" translate="yes" xml:space="preserve">
          <source>\uparrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecaab5335bffd47fb6dfb29c61f7afd9347b27be" translate="yes" xml:space="preserve">
          <source>\upsilon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff7f2c95e23f7f671e2dcd67f34c2beb6c6d87b" translate="yes" xml:space="preserve">
          <source>\varpi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a000332cf10a02ab074902f57409c043a4b7930" translate="yes" xml:space="preserve">
          <source>\varsigma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffd955c012884df83091207c9cb9ff982a6f7e7" translate="yes" xml:space="preserve">
          <source>\vartheta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8ef042050cb082b91c8fb3ee50d2c87b494854" translate="yes" xml:space="preserve">
          <source>\vee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a1312a8a946a90cf99ad056ddaeb081ebe238e" translate="yes" xml:space="preserve">
          <source>\w</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf2201eca3fb68ad72f203a66929aa4695a5feb" translate="yes" xml:space="preserve">
          <source>\wedge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a8aa862c9e3d0cc043dd23dfb7bf77711af4f0" translate="yes" xml:space="preserve">
          <source>\wp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf5b3aa5637cf4de78773151105ea8574bdbc59" translate="yes" xml:space="preserve">
          <source>\xi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fe2529d0840698ffd7746e5150f521ae9c0abf" translate="yes" xml:space="preserve">
          <source>\zeta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaed222df1849ec73203375177e10febd149a9b" translate="yes" xml:space="preserve">
          <source>__publish_&amp;lt;custom format&amp;gt;_output__.m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b66e55cb98332830219a8e8b7e7a89ef9875ea" translate="yes" xml:space="preserve">
          <source>a + b*i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db43019d67f939609f374ca1b855ece341b3e838" translate="yes" xml:space="preserve">
          <source>a + bi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7a0ac8139f98a562bb8de00348b9c7683b4f16" translate="yes" xml:space="preserve">
          <source>a + i*b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607260bd84edc8e1d7b7c5b6245debd9c9d2a851" translate="yes" xml:space="preserve">
          <source>a = camva ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2748c5c4256fab5dc042311fbb230b9b3375c4d6" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;Poisson&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89885f2e08b69745e1774006496eb48388161336" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;chow&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9281c6d74692b5d01cba4a4110779769ae393d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;chow&quot;, n, alpha)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c1f43da5c5f08f6c42a059e461768160ef219d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;chow&quot;, n, alpha, delta)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c548ffa347ad35d504b8b394aee06d51b4d24495" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;clement&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9679d4a7a9964add339c50c091530a3553df20a" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;clement&quot;, n, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bde68e0e271cbcb9717201dd0c3430d694610d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;condex&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01f5147f2179ac727b597db0730124d7fdbc109" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;condex&quot;, n, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05284c5c248e1551a59c34cfbf53853402020ff" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;condex&quot;, n, k, theta)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80658f7d451769712b053f8e603c7de4abc1d18" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;cycol&quot;, [m n])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bee2cdd6b2992f5c147e0b50cc76c52b0622a6" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;cycol&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07643894f1aeb92e51a5a6f2939c1d7505d554ab" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;dorr&quot;, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8d35f8d96f1039bf7b6c93e873e1ffbf05996a" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;dramadah&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c7922d8d2190bf1f382a332cc816877dec92a7" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;dramadah&quot;, n, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dd0f7fc321c3bb2d62c267b5705a7fc36f4904" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;fiedler&quot;, c)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156ec6b4f8e9a454b01db5565937a151c9195f27" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;forsythe&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996c0163a749a3155e359fd739799af2d42a432d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;forsythe&quot;, n, alpha)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808a98d6ee079f14b212f42dd0c7305cab7585fa" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;forsythe&quot;, n, alpha, lambda)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9185855ff8f5f26259676afc909b03f6609173c" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;gearmat&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93b5c835e4200bde3a3a4f3d8a4cd91c74e17e4" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;gearmat&quot;, n, i)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027582756883c9fd4e75b9b8c4b7196486026fed" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;gearmat&quot;, n, i, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbd3088e4b6d40d59f227525df288d8cdb1196d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;hanowa&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ece3c32c93b50e07d34d329425ed1f0185d6ad1" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;hanowa&quot;, n, d)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f86005ec1c309c2b4bf74bd6460071e8e88fd33" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;integerdata&quot;, &amp;hellip;, &quot;class&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4744f8595bb8683b6eacfbd21852704f44a66458" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;integerdata&quot;, [imin, imax], M, N, &amp;hellip;, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2838fc80126bb684152fea5a11e82247406197d3" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;integerdata&quot;, [imin, imax], [M N &amp;hellip;], j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b4719f748b3d83d8a8a3ee00e91d476e5eea56" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;integerdata&quot;, imax, M, N, &amp;hellip;, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ef1ba0c892db068d557b43d6d487ffa8a9e60e" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;integerdata&quot;, imax, [M N &amp;hellip;], j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d622741777d09e73aae2c43582cdd377843d7c3" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;invhess&quot;, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3557fdae2d69642338c3ccec94f21a59d91da7" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;invhess&quot;, x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9ce0da77b7965938e18c6c72f90b3e7927b25c" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;invol&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a695b8c873696d29fc0a07554bfb687f3f4b7c7" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;ipjfact&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c5ae368209f0589db1ee6aa2bc3fb90a548397" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;ipjfact&quot;, n, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c3f4f5fad2e5e0629f610744735f0deed86561" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;jordbloc&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6d60d8af99eb5046e4fe70f9d0dec7fd68b249" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;jordbloc&quot;, n, lambda)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f4bc946e67e27ea89e02228a8f8a4dd83efabf" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;kms&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22b378d9f3f0b0d9f445909d74d3b46a375bcb3" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;kms&quot;, n, rho)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2d6b12e5d5e2639818cd992dd6a4f34d007a50" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;lauchli&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b52303385b82721d726c58349acbd0a3a1c97f" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;lauchli&quot;, n, mu)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bc0b1116f9dad7a0768be3ccb290ec94f0d0a4" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;lehmer&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4332bf0dd4127492f03d31692a363f6bddacd4" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;lotkin&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b475f3a98c9dcc0fca20c14f56525500bbae1d1" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;minij&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c106d3be7fa1b60c40f4ccb11ca6d597388ae81" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;moler&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c17ba62e1d3f9be873ca9fc90c460c750aedee1" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;moler&quot;, n, alpha)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b039c67c99bc5906261c6f25f0d258dd0c44f43d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;normaldata&quot;, &amp;hellip;, &quot;class&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7ca12c17559fb59c35267ace15194fe4dad567" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;normaldata&quot;, M, N, &amp;hellip;, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490de1ddaa8a20469e5b14aaf98bd9465b443543" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;normaldata&quot;, [M N &amp;hellip;], j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3570c6ffd874e8cdfebc9b9ca09e71ab35e38f" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;parter&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eedeebb760c89f48cb2c711e72c57ab7c17f895" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;prolate&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d1193056ed5a6fa092a08126f2029c17db3048" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;prolate&quot;, n, w)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfefa7f86247b2a13e1339b6560dfc53725b9650" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;rando&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542a515893d6cefbada5d2ac09de11e81ebfeddf" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;rando&quot;, n, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9f43b3c1d50de9bb95aea7395548b5bc9a1339" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;randsvd&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f1ca7a1efc573aa02b971e9797f8e7be0a91ee" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;randsvd&quot;, n, kappa)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd195bd359da01b87c555ca029b0efa731efc32c" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;randsvd&quot;, n, kappa, mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879846f56b3fb18f3620554180576fe2786f65f9" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;randsvd&quot;, n, kappa, mode, kl)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1f32e6dde5b2340632d04327d9e18f3b0c014f" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;randsvd&quot;, n, kappa, mode, kl, ku)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4db23775a5a91011774ceea8c71de9dfefc26e" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;redheff&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7f9753e4861dfa0cb28efb7b9b787db4b9900" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;riemann&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92adf106d1e9519c1b597d4e27d5cf5dc39d680d" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;ris&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bddee9209c735b535c8eaaa218d8d4d9eff7fb" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;smoke&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663f81a7f3b9878678023679db8cc877afdb4ea9" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;smoke&quot;, n, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9d20caf3f15f0be809e7c6aeab4fc169c85873" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;tridiag&quot;, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d21712f3b01ee5bfddd283374b8af8d6f44ee06" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;tridiag&quot;, n, c, d, e)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cb6125206818b27f8f4321d247c386eeb11e63" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;tridiag&quot;, x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00d2215026b6d7fa0f5645b75d6ad1612451328" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;uniformdata&quot;, &amp;hellip;, &quot;class&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1e5cefde146b0a342861f17091f60fec86dee0" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;uniformdata&quot;, M, N, &amp;hellip;, j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3be454b502f84eda0d216ae781fa58036da8aab" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;uniformdata&quot;, [M N &amp;hellip;], j)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e03d35275b9b58d2a279ed2fa483373a1ce054" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;wathen&quot;, nx, ny)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45e8b8ba8a794f21b9dbf723587cd2e83886b4f" translate="yes" xml:space="preserve">
          <source>a = gallery (&quot;wathen&quot;, nx, ny, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e28c3927910b3ae75ce2f40f92daac5f6e6caf" translate="yes" xml:space="preserve">
          <source>a = gallery (&amp;hellip;, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2583a4f7c480b83382a97684deea68f5f62c5486" translate="yes" xml:space="preserve">
          <source>a cell array of strings specifying the items to list in the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa80796566616f68f00a8bd1c012d7f3c814142" translate="yes" xml:space="preserve">
          <source>a cell array of strings to be displayed above the list of items. Default is {}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39d5b5d4861f957a0d673f25d5218a90ddae48d" translate="yes" xml:space="preserve">
          <source>a matrix which defines the individual number of rows and columns used for each text field. In the matrix each row describes a single text field. The first column specifies the number of input rows to use and the second column specifies the text field width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001cad93ce12d8cd3a30fb95e99df602a0973c94" translate="yes" xml:space="preserve">
          <source>a scalar value which defines the number of rows used for each text field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9214ec4dfc65adcc75baeb10b075bb861cb54b" translate="yes" xml:space="preserve">
          <source>a string to be used as the dialog caption. Default is &quot;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f7735e8719d9109f48476a6a6cdfb794625f53" translate="yes" xml:space="preserve">
          <source>a string used to label the Cancel button. Default is &lt;code&gt;&quot;Cancel&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bd06faef26dbd4699b08bdfbd636050ad626cc" translate="yes" xml:space="preserve">
          <source>a string used to label the OK button. Default is &lt;code&gt;&quot;OK&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1657de5edf6bf2ececb89aba6fa577a68e292074" translate="yes" xml:space="preserve">
          <source>a two-element vector &lt;code&gt;[&lt;var&gt;width&lt;/var&gt;, &lt;var&gt;height&lt;/var&gt;]&lt;/code&gt; specifying the size of the list field in pixels. The default is [160, 300].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef133cec17ad83632687630050cfbd67488b029b" translate="yes" xml:space="preserve">
          <source>a vector containing 1-based indices of elements which will be pre-selected when the list dialog is first displayed. The default is 1 (first item).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe38b5171d77c9d63e6950d83038171a20f8dd5" translate="yes" xml:space="preserve">
          <source>a vector which defines the individual number of rows used for each text field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64f630689d7f030ea96f8049f8fa3a27e18d93d" translate="yes" xml:space="preserve">
          <source>a+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8ac10f23c5b5bc1167bda84b833e5c057a77d2" translate="yes" xml:space="preserve">
          <source>abcdef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f84d84b147d98312aeed84ca8e9373f52949503" translate="yes" xml:space="preserve">
          <source>abs (z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9362a00b78c3b90d5098d5c693614199424325" translate="yes" xml:space="preserve">
          <source>accumarray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cb1f524109e912dd784084b8c062a74c9aa520" translate="yes" xml:space="preserve">
          <source>accumarray (subs, vals, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf0bb443329826c097da7e0b0e6d11982169bb6" translate="yes" xml:space="preserve">
          <source>accumarray (subs, vals, sz, func, fillval, issparse)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdfc906755798fb466ee714f4163ff34eff9a4c" translate="yes" xml:space="preserve">
          <source>accumdim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59065e4a536123ab3b2dfb368bcbe00a9dd1504" translate="yes" xml:space="preserve">
          <source>accumdim (subs, vals, dim, n, func, fillval)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f0742cf74e8ffdb253376b1803615055e215b" translate="yes" xml:space="preserve">
          <source>acos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68fe542256ec540ff4c54d519c6e5740daa9072" translate="yes" xml:space="preserve">
          <source>acos (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b20f834f31e3a3a694472be0306a126941e831" translate="yes" xml:space="preserve">
          <source>acosd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c532f2ada779048177c73e70d15c88796f6c1629" translate="yes" xml:space="preserve">
          <source>acosd (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df0277ec86f188e0c797c5782ceb42dc25bb36a" translate="yes" xml:space="preserve">
          <source>acosh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d476b291b4ecc4551de0d5ea11af116e1ff799ed" translate="yes" xml:space="preserve">
          <source>acosh (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8be89c327cde8b860df98308b35887bdf811326" translate="yes" xml:space="preserve">
          <source>acot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f20ac5221bc985387b6df4d32b68cbde4f71b8e" translate="yes" xml:space="preserve">
          <source>acot (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2589ae4d34a5c561b537b4e552e99b38b43644b" translate="yes" xml:space="preserve">
          <source>acotd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2ee6ba07e4bbdcde194590a51c0b77ed226531" translate="yes" xml:space="preserve">
          <source>acotd (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f977ccb519856a431d7c8b622e102e8263d04a" translate="yes" xml:space="preserve">
          <source>acoth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63edbd3791fac155b4350d6b32f32660fb5c691" translate="yes" xml:space="preserve">
          <source>acoth (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef264f7031ee0d55b786c83a83d07ec29a99714" translate="yes" xml:space="preserve">
          <source>acsc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fef29f01e16e0f086712fe4c03d596963150b26" translate="yes" xml:space="preserve">
          <source>acsc (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2f9f2881440e37d6b4bd2fb2a95eb53be4b534" translate="yes" xml:space="preserve">
          <source>acscd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342e2ca68fb7b937e0e3769a28240229386ec7b2" translate="yes" xml:space="preserve">
          <source>acscd (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b28590dc34a9c1630ca84b24eaeddd4b39ba634" translate="yes" xml:space="preserve">
          <source>acsch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711d5f52c45af4321a4bc547cc034c3e8fb563fd" translate="yes" xml:space="preserve">
          <source>acsch (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a830f0173f48549d26772cb53655fed99ac13b" translate="yes" xml:space="preserve">
          <source>adapts a function with several parameters to the form required by &lt;code&gt;quad&lt;/code&gt;. In this example, the values of &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; that are passed to &lt;code&gt;betainc&lt;/code&gt; are inherited from the current environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b90ce48cf08372c9953a273fd3ce5bb14c705e3" translate="yes" xml:space="preserve">
          <source>add_input_event_hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09a69b3418334aacb1035115fb2d1f514270545" translate="yes" xml:space="preserve">
          <source>addlistener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c4fb4b80d69a8547cfa4509320e167c153b668" translate="yes" xml:space="preserve">
          <source>addlistener (h, prop, fcn)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f05e6248973af6a69232b85008a440c0d2a552" translate="yes" xml:space="preserve">
          <source>addpath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fe2621931b8704435f4ce1b80319e878f4e1ee" translate="yes" xml:space="preserve">
          <source>addpath (dir1, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30f8c181e787a8197f90e06f7e4654899a99b28" translate="yes" xml:space="preserve">
          <source>addpath (dir1, &amp;hellip;, option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f2fdf2b1191cbdca6117823b7dab1726aea5fd" translate="yes" xml:space="preserve">
          <source>addpref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad233c8e02003650ffe555115935d2157a8a292" translate="yes" xml:space="preserve">
          <source>addpref (&quot;group&quot;, &quot;pref&quot;, val)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb94fd60006b68884356f0c5eae11b87c09f4d8c" translate="yes" xml:space="preserve">
          <source>addpref (&quot;group&quot;, {&quot;pref1&quot;, &quot;pref2&quot;, &amp;hellip;}, {val1, val2, &amp;hellip;})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c423e181eacd68660a98a4d4122df3815072503" translate="yes" xml:space="preserve">
          <source>addproperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f324fbe74cee424ec948f8c434b09affa3c432d0" translate="yes" xml:space="preserve">
          <source>addproperty (name, h, type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bfadbda4926b69fcbaf02c60077ec493ba4ab1" translate="yes" xml:space="preserve">
          <source>addproperty (name, h, type, arg, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b71c5d298b732cf75727b199cdbea725ba3846" translate="yes" xml:space="preserve">
          <source>adds the &lt;code&gt;image&lt;/code&gt; package to the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499c455ae88cdd288f0cb38f4947ed15950db5f2" translate="yes" xml:space="preserve">
          <source>addtodate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8581b2f2efe8914060376ac3be2aafdb0dc18b2" translate="yes" xml:space="preserve">
          <source>after the assignment, nnz (&lt;var&gt;S&lt;/var&gt;) does not exceed &lt;var&gt;nz&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fe095c75e1b0a688eb6710bb7899ea84d72fe2" translate="yes" xml:space="preserve">
          <source>again produce diagonal matrices, provided that normal dimension matching rules are obeyed. The relations used are same as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9318bf60103a7386e1debe83af109fea8ab6da07" translate="yes" xml:space="preserve">
          <source>airy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d1e62e7fa179d5550db5660d3a3cbd8b4d0063" translate="yes" xml:space="preserve">
          <source>algorithm The string &lt;code&gt;&quot;bisection, interpolation&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cceffeb1093043be6df2d51eb0411e0b3f4d16d" translate="yes" xml:space="preserve">
          <source>all (x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c89307653f45d0feeaa06f5b0353f58625fa5a" translate="yes" xml:space="preserve">
          <source>all (x, dim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c038b3b7c6e8529d346b383505de2b0a5ac227cf" translate="yes" xml:space="preserve">
          <source>all of the following expressions are equivalent and select the first row of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c13d823f319f1400a47d16e3561bce3e461162" translate="yes" xml:space="preserve">
          <source>all of these natural mathematical truths would be invalidated by treating assumed zeros as numerical ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6ed0568218fac9bf0225a0e441a19f3f141c1d" translate="yes" xml:space="preserve">
          <source>all white colormap (no colors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4cb401241cfe860cf490962ce60b183c31d509" translate="yes" xml:space="preserve">
          <source>all_value_list = set (h)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0efcb02505efa6faf0560e4422ed4ad0ae05d47" translate="yes" xml:space="preserve">
          <source>allchild</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8443d12b32ed9b8c53d1c16f76cb9c1d33e42ff3" translate="yes" xml:space="preserve">
          <source>along with a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cb217c4971be6422d79d95a966a809672d47c3" translate="yes" xml:space="preserve">
          <source>ambient- strength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea0b794e1acd33fc0e733b79c72bf9252569c11" translate="yes" xml:space="preserve">
          <source>amd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587cf1de4e778922e2ca69b66e2697ce210246b6" translate="yes" xml:space="preserve">
          <source>ancestor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5ddee44c31e6302868e81090983fea1634e763" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;gammaincinv (gammainc (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;a&lt;/var&gt;), &lt;var&gt;a&lt;/var&gt;) = &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; for each non-negative value of &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;a&lt;/var&gt; is scalar then &lt;code&gt;gammaincinv (&lt;var&gt;y&lt;/var&gt;, &lt;var&gt;a&lt;/var&gt;)&lt;/code&gt; is returned for each element of &lt;var&gt;y&lt;/var&gt; and vice versa.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
