<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="26fba3f220e3c998aa447bbbe0ccd4a3dfb45ab6" translate="yes" xml:space="preserve">
          <source>Performs the check(s) on the specified certificate using its internal state. The certificates are presented in the order specified by the &lt;code&gt;init&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc986d2e07fb0dc720e79aa062de1e53be4d9b3" translate="yes" xml:space="preserve">
          <source>Performs the computation. This method will be called by &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; after enabling privileges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728fe0e30313cf38377d8cbf0c7b451425310330" translate="yes" xml:space="preserve">
          <source>Performs the given action for each (key, value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f0a64b7529991e7f172bf3616bdbed81c49e48" translate="yes" xml:space="preserve">
          <source>Performs the given action for each element of the &lt;code&gt;Iterable&lt;/code&gt; until all elements have been processed or the action throws an exception. Unless otherwise specified by the implementing class, actions are performed in the order of iteration (if an iteration order is specified). Exceptions thrown by the action are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edc03b750c617d0ce25a21931ffbe79dd040924" translate="yes" xml:space="preserve">
          <source>Performs the given action for each entry in this map until all entries have been processed or the action throws an exception. Unless otherwise specified by the implementing class, actions are performed in the order of entry set iteration (if an iteration order is specified.) Exceptions thrown by the action are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756d81390d330ce1759719bcd69723463b28ad7a" translate="yes" xml:space="preserve">
          <source>Performs the given action for each entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262d6b08b40306b37c537bae7e569fc2f6cfe997" translate="yes" xml:space="preserve">
          <source>Performs the given action for each key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5730112af2591749cbcd831d3029ba45614b72" translate="yes" xml:space="preserve">
          <source>Performs the given action for each non-null transformation of each (key, value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2209433d86c257e2e1736ede55e7a286a4faf536" translate="yes" xml:space="preserve">
          <source>Performs the given action for each non-null transformation of each entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f48f7ce209d6a05012e0f834a347ac2664df1b1" translate="yes" xml:space="preserve">
          <source>Performs the given action for each non-null transformation of each key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd58a96a17cb747201485625b14a23b5c6e3666" translate="yes" xml:space="preserve">
          <source>Performs the given action for each non-null transformation of each value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa41b1e4cab158214a3f5c945ed75cad3522b9fe" translate="yes" xml:space="preserve">
          <source>Performs the given action for each remaining element until all elements have been processed or the action throws an exception. Actions are performed in the order of iteration, if that order is specified. Exceptions thrown by the action are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1defdf44032e29590e55523d3e6da7b607d477" translate="yes" xml:space="preserve">
          <source>Performs the given action for each remaining element, in the order elements occur when iterating, until all elements have been processed or the action throws an exception. Errors or runtime exceptions thrown by the action are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e39f95d0a49c8ab737985a428c57c2e6256bd81" translate="yes" xml:space="preserve">
          <source>Performs the given action for each remaining element, sequentially in the current thread, until all elements have been processed or the action throws an exception. If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, actions are performed in encounter order. Exceptions thrown by the action are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df494ce47788c77896f1acd864fa8543f6e825bc" translate="yes" xml:space="preserve">
          <source>Performs the given action for each remaining element, sequentially in the current thread, until all elements have been processed or the action throws an exception. If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, actions are performed in encounter order. Exceptions thrown by the action are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f709bd257feca946c0883a35b3838f1b5b16dc41" translate="yes" xml:space="preserve">
          <source>Performs the given action for each value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b440d5d5be204764ba53510380bd5a706a341" translate="yes" xml:space="preserve">
          <source>Performs the given task, returning its result upon completion. If the computation encounters an unchecked Exception or Error, it is rethrown as the outcome of this invocation. Rethrown exceptions behave in the same way as regular exceptions, but, when possible, contain stack traces (as displayed for example using &lt;code&gt;ex.printStackTrace()&lt;/code&gt;) of both the current thread as well as the thread actually encountering the exception; minimally only the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9166d026d81565e1620d1fe48e4bb019ccd300" translate="yes" xml:space="preserve">
          <source>Performs the specified &lt;code&gt;PrivilegedAction&lt;/code&gt; with privileges enabled and restricted by the specified &lt;code&gt;AccessControlContext&lt;/code&gt; and with a privilege scope limited by specified &lt;code&gt;Permission&lt;/code&gt; arguments. The action is performed with the intersection of the permissions possessed by the caller's protection domain, and those possessed by the domains represented by the specified &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda4ea5ce9b57907d5b1532ee36a79a24f7d3733" translate="yes" xml:space="preserve">
          <source>Performs the specified &lt;code&gt;PrivilegedAction&lt;/code&gt; with privileges enabled and restricted by the specified &lt;code&gt;AccessControlContext&lt;/code&gt;. The action is performed with the intersection of the permissions possessed by the caller's protection domain, and those possessed by the domains represented by the specified &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69625c914d1d9223f60cfaf85bcb4ce66cfa7976" translate="yes" xml:space="preserve">
          <source>Performs the specified &lt;code&gt;PrivilegedAction&lt;/code&gt; with privileges enabled. The action is performed with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7083caf401c4e30b9ed0a8a6ff6b40f7c8beada1" translate="yes" xml:space="preserve">
          <source>Performs the specified &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; with privileges enabled and restricted by the specified &lt;code&gt;AccessControlContext&lt;/code&gt; and with a privilege scope limited by specified &lt;code&gt;Permission&lt;/code&gt; arguments. The action is performed with the intersection of the permissions possessed by the caller's protection domain, and those possessed by the domains represented by the specified &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e030525d37ec369f92930e2377774b6c58d868c7" translate="yes" xml:space="preserve">
          <source>Performs the specified &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; with privileges enabled and restricted by the specified &lt;code&gt;AccessControlContext&lt;/code&gt;. The action is performed with the intersection of the permissions possessed by the caller's protection domain, and those possessed by the domains represented by the specified &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5f4979057bf0cbdac1c6ea5eb56ecc889d3299" translate="yes" xml:space="preserve">
          <source>Performs the specified &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; with privileges enabled. The action is performed with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6349f4f549f45fea4c08b06a50eca171ec5f14b" translate="yes" xml:space="preserve">
          <source>Performs this compilation task. The compilation may only be performed once. Subsequent calls to this method throw IllegalStateException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814e4bc8ab759abdc116e1bc9a12bb84fe8df0fb" translate="yes" xml:space="preserve">
          <source>Performs this documentation task. The task may only be performed once. Subsequent calls to this method throw IllegalStateException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1dff185a47f014faba17f52a819ab12d7f9a8a" translate="yes" xml:space="preserve">
          <source>Performs this operation on the given argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252c9a8e3fdaf36013910744878b1db8c28805b5" translate="yes" xml:space="preserve">
          <source>Performs this operation on the given arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170a28a9db6d27d7212fc6dc249434a57517e7bc" translate="yes" xml:space="preserve">
          <source>Period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9256ea9000e8e8b7b0dce8b64a27c96c51163d1f" translate="yes" xml:space="preserve">
          <source>Period.addTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b8e50b505e7a3cd83dd6d4c8638f14ad10302f" translate="yes" xml:space="preserve">
          <source>Period.between()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8c06cc43d9d5d9c255a3b3b89e35e726c2dac7" translate="yes" xml:space="preserve">
          <source>Period.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359fcec00440b8a88dc4fb778d968a7971f00152" translate="yes" xml:space="preserve">
          <source>Period.from()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d448c5af5f572f23d137ec9fb89692b813ccb7" translate="yes" xml:space="preserve">
          <source>Period.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904cdf0f49e304faa4a9c114ea31abd24083a29e" translate="yes" xml:space="preserve">
          <source>Period.getChronology()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae31c5849caac8b1eba023d27ff6759f6e8dc343" translate="yes" xml:space="preserve">
          <source>Period.getDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa29712d3db1e60c847ac854b0a41d0d66d8fd2" translate="yes" xml:space="preserve">
          <source>Period.getMonths()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba90e8c7aa87251089323b8f85eafe066ea90b86" translate="yes" xml:space="preserve">
          <source>Period.getUnits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d26e54e9c0f26b06d196fdc39127e6465787db0" translate="yes" xml:space="preserve">
          <source>Period.getYears()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0036c4d9434b42d164a1fdcbf4c7c5c873cdb52" translate="yes" xml:space="preserve">
          <source>Period.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2171c322e26d3a4564a4fe3e78384b2f80a205" translate="yes" xml:space="preserve">
          <source>Period.isNegative()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0154f6dd8a289eadb1cb651c48c044a21e9b5f6f" translate="yes" xml:space="preserve">
          <source>Period.isZero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918d2295081dbac480dab695e623f3df981b9a8d" translate="yes" xml:space="preserve">
          <source>Period.minus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d4920cda4c74720d37dfc60ceeaa49739c784f" translate="yes" xml:space="preserve">
          <source>Period.minusDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240cf87ac9c6add98da4a77e481c649aa44d4eba" translate="yes" xml:space="preserve">
          <source>Period.minusMonths()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37415a689aed0c699384c78c493fa49cb0f45ea7" translate="yes" xml:space="preserve">
          <source>Period.minusYears()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e3f64ff07d08fe48301a043164eb65aea3db4e" translate="yes" xml:space="preserve">
          <source>Period.multipliedBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3174f699df43435262ff20b2cb15d4810b285928" translate="yes" xml:space="preserve">
          <source>Period.negated()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dbc759ac952acc8a5ab9707346620bbf0ecbbe" translate="yes" xml:space="preserve">
          <source>Period.normalized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b408b8cd034d583be11e4b585d60ce9b486bf0ff" translate="yes" xml:space="preserve">
          <source>Period.of()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b86c4a227fc50522cee2cb739c1ee9ce1e6575" translate="yes" xml:space="preserve">
          <source>Period.ofDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e0cf95730d6b7f4560c61fd1c46ddd1e94cf53" translate="yes" xml:space="preserve">
          <source>Period.ofMonths()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12271fcfa3ae7f6f6f5a610f239dbd50e83f3f9a" translate="yes" xml:space="preserve">
          <source>Period.ofWeeks()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1b4bee8e5af4d9d1257b7835f91b261c8704ab" translate="yes" xml:space="preserve">
          <source>Period.ofYears()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34712a3ec51ce351f576968c818f6d474638aa83" translate="yes" xml:space="preserve">
          <source>Period.parse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd2dbde5478bda15a99bd20a9d54e7151962109" translate="yes" xml:space="preserve">
          <source>Period.plus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c17b8f1fd0fe25afa06db4924a2063138ace555" translate="yes" xml:space="preserve">
          <source>Period.plusDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde7beb35ff1f3b48b11a8fe606261713f1877f2" translate="yes" xml:space="preserve">
          <source>Period.plusMonths()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b2d46b004be96be816b35aa8b1c44010ab59ff" translate="yes" xml:space="preserve">
          <source>Period.plusYears()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216c5e55cec0372804818a451d243326f4b09290" translate="yes" xml:space="preserve">
          <source>Period.subtractFrom()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c162a1371fa63566c651d48a86906c9340ec3d7" translate="yes" xml:space="preserve">
          <source>Period.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12181cdb08a744f0dd81a1f28eccce1103d22377" translate="yes" xml:space="preserve">
          <source>Period.toTotalMonths()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819d1a8e71daaa201dcb3ce3b1b8731373a466d" translate="yes" xml:space="preserve">
          <source>Period.withDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecda83cc4d4e390c6c95ecb35028cf3de25c41f" translate="yes" xml:space="preserve">
          <source>Period.withMonths()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee4897620e5dea95cefba659d41a83544c52fcf" translate="yes" xml:space="preserve">
          <source>Period.withYears()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc414d0d43a7dd674f8b5d1f64fe84cd239d017" translate="yes" xml:space="preserve">
          <source>Perl constructs not supported by this class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19011c605c21ed22915906f4ad7ecb7ff322381b" translate="yes" xml:space="preserve">
          <source>Perl uses the &lt;code&gt;g&lt;/code&gt; flag to request a match that resumes where the last match left off. This functionality is provided implicitly by the &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; class: Repeated invocations of the &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method will resume where the last match left off, unless the matcher is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1785713451d01948bc96b1f6cd729251ba4dfe64" translate="yes" xml:space="preserve">
          <source>Permission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd421b983da116198b713c8ebf4764bde134d881" translate="yes" xml:space="preserve">
          <source>Permission Target Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040f104e73bd21d6b1764ae04968d97974c6e977" translate="yes" xml:space="preserve">
          <source>Permission controlling access to MBeanServer operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3362d7e87f54b7ce0c58f1de32ec57b1a6f0d0" translate="yes" xml:space="preserve">
          <source>Permission controlling access to MBeanServer operations. If a security manager has been set using &lt;a href=&quot;../../java/lang/system#setSecurityManager-java.lang.SecurityManager-&quot;&gt;&lt;code&gt;System.setSecurityManager(java.lang.SecurityManager)&lt;/code&gt;&lt;/a&gt;, most operations on the MBean Server require that the caller's permissions imply an MBeanPermission appropriate for the operation. This is described in detail in the documentation for the &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7754ba166c5a5062af48bc62403e2bddcb882643" translate="yes" xml:space="preserve">
          <source>Permission objects are similar to String objects in that they are immutable once they have been created. Subclasses should not provide methods that can change the state of a permission once it has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a999751fd3c1597fef09852c4b034c67764a3f" translate="yes" xml:space="preserve">
          <source>Permission required by an authentication identity to perform operations on behalf of an authorization identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcff215b8d719fd72cf9a5518694a58b86a37f4d" translate="yes" xml:space="preserve">
          <source>Permission to access file locally at the server with synchronous reads and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3242b66c542235494d6946a98d71e8a79ba996db" translate="yes" xml:space="preserve">
          <source>Permission to add a new file to a directory (equal to &lt;a href=&quot;aclentrypermission#WRITE_DATA&quot;&gt;&lt;code&gt;WRITE_DATA&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0c212d57b8ea03c680e8c904536b4d0e61f422" translate="yes" xml:space="preserve">
          <source>Permission to append data to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41c8bcb4b22f3c7a9b593bc0d57bb106ef3966e" translate="yes" xml:space="preserve">
          <source>Permission to change the owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861673a9988ead122b00e098e4badd7e7423ec7e" translate="yes" xml:space="preserve">
          <source>Permission to create a subdirectory to a directory (equal to &lt;a href=&quot;aclentrypermission#APPEND_DATA&quot;&gt;&lt;code&gt;APPEND_DATA&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554943d9f433f8dcd28a6e052e9c8b2b29efea64" translate="yes" xml:space="preserve">
          <source>Permission to delete a file or directory within a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1985fd0221c58a2c6bae3971d6c908dc61728305" translate="yes" xml:space="preserve">
          <source>Permission to delete the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b068a43f3dbfa2f97442f5cb4b1b0749ad7e611" translate="yes" xml:space="preserve">
          <source>Permission to execute a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6409e42b28546062efcebc6f72fc919a8c015f" translate="yes" xml:space="preserve">
          <source>Permission to list the entries of a directory (equal to &lt;a href=&quot;aclentrypermission#READ_DATA&quot;&gt;&lt;code&gt;READ_DATA&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7cf128fc5f742e209c2afc496f9fabfb51df1b" translate="yes" xml:space="preserve">
          <source>Permission to modify the file's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e526aec7623672c5bb3b43b4cbf68e4f9f63abd9" translate="yes" xml:space="preserve">
          <source>Permission to read the ACL attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07c6a4af5e7bfd4c21a342a3a6a8bd5b963f964" translate="yes" xml:space="preserve">
          <source>Permission to read the data of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45ab5277c4ba576a8c658efb9262a2e00cd8f5d" translate="yes" xml:space="preserve">
          <source>Permission to read the named attributes of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b40172f74b682eb2b8ead070c6490f33fa93d7" translate="yes" xml:space="preserve">
          <source>Permission to write the ACL attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31b42df4b78b55bff7d98713367f4e6333be4d1" translate="yes" xml:space="preserve">
          <source>Permission to write the named attributes of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2764ebc073bd0362d0f708479ac5f4dc5cc23d5" translate="yes" xml:space="preserve">
          <source>Permission.checkGuard()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc974bee9be2b3c21fe83d259840c3d1ed558e3" translate="yes" xml:space="preserve">
          <source>Permission.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6408db4ecb85df00364b774ffb63549be50ff21" translate="yes" xml:space="preserve">
          <source>Permission.getActions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2b7f9dd9a2f3aab2ab4d5d43592cefd3e6044f" translate="yes" xml:space="preserve">
          <source>Permission.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478ab3bb5277ab1b5065a960b8dc1cc4da8a7315" translate="yes" xml:space="preserve">
          <source>Permission.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f350ed8e501a863fc2de80954d15401f3c1114a2" translate="yes" xml:space="preserve">
          <source>Permission.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3ddca260fce76e65abb0783dc316d5c0a97add" translate="yes" xml:space="preserve">
          <source>Permission.newPermissionCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396f7a8c9cc830763c1bb10ade0570b4b6613594" translate="yes" xml:space="preserve">
          <source>Permission.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4568ad97b1c1d8e447694bc3dd1effacfbb46b72" translate="yes" xml:space="preserve">
          <source>PermissionCollection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf357d245ce354ae1f3c20ae5af650714d5f4ba" translate="yes" xml:space="preserve">
          <source>PermissionCollection.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30dc30be68457fbb85894903c3cba391e21dbb2" translate="yes" xml:space="preserve">
          <source>PermissionCollection.elements()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c257831b4f0bbabcd28ad853c56663f54348ca" translate="yes" xml:space="preserve">
          <source>PermissionCollection.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c3482c066b2c51291ab7adb2fdf3e8789de127" translate="yes" xml:space="preserve">
          <source>PermissionCollection.isReadOnly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336e79b9bd7cb279fe1d48f56521aa54849cfa5e" translate="yes" xml:space="preserve">
          <source>PermissionCollection.setReadOnly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c9c7f61e2ffc3114859c1dcb1c3e3e2dc08416" translate="yes" xml:space="preserve">
          <source>PermissionCollection.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3719d5493c044e6f9c5f3454ba63d0bbb2b2a13" translate="yes" xml:space="preserve">
          <source>Permissions are generally used for two purposes: to protect caches of objects obtained through URLConnections, and to check the right of a recipient to learn about a particular URL. In the first case, the permission should be obtained &lt;em&gt;after&lt;/em&gt; the object has been obtained. For example, in an HTTP connection, this will represent the permission to connect to the host from which the data was ultimately fetched. In the second case, the permission should be obtained and tested &lt;em&gt;before&lt;/em&gt; connecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907cecdc8b0852a57cdd4476162724513651c28" translate="yes" xml:space="preserve">
          <source>Permissions fall into these categories: File, Socket, Net, Security, Runtime, Property, AWT, Reflect, and Serializable. The classes managing these various permission categories are &lt;code&gt;java.io.FilePermission&lt;/code&gt;, &lt;code&gt;java.net.SocketPermission&lt;/code&gt;, &lt;code&gt;java.net.NetPermission&lt;/code&gt;, &lt;code&gt;java.security.SecurityPermission&lt;/code&gt;, &lt;code&gt;java.lang.RuntimePermission&lt;/code&gt;, &lt;code&gt;java.util.PropertyPermission&lt;/code&gt;, &lt;code&gt;java.awt.AWTPermission&lt;/code&gt;, &lt;code&gt;java.lang.reflect.ReflectPermission&lt;/code&gt;, and &lt;code&gt;java.io.SerializablePermission&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4831e64e3456e7cf992b60d831748f57a048317a" translate="yes" xml:space="preserve">
          <source>Permissions.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d794b4bb19a3e255c2843590031e769010ac1f" translate="yes" xml:space="preserve">
          <source>Permissions.elements()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512b7bc5a83aab3416797076e5adf3d30ea36bf2" translate="yes" xml:space="preserve">
          <source>Permissions.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b3460333090074f460006fbc3c29cbd8b8ed4c" translate="yes" xml:space="preserve">
          <source>Permits whitespace and comments in pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe84c6e1dcf3e2d4494a2b4e3f23dc78e42e4248" translate="yes" xml:space="preserve">
          <source>Persistence policy from the MBean and attribute descriptor is used to guide execution of this method. The MBean should be stored if 'persistPolicy' field is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5191405aceef0942728752ec8c40f837576d6287" translate="yes" xml:space="preserve">
          <source>PersistenceDelegate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5d121ca3c47ba2a6652404a7e313aaaa6045e4" translate="yes" xml:space="preserve">
          <source>PersistenceDelegate.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd85e48d577b39508528db50a4e4f2e3c884e501" translate="yes" xml:space="preserve">
          <source>PersistenceDelegate.instantiate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013dc09e4f9c2908ec85fb3be14e3310360bea5d" translate="yes" xml:space="preserve">
          <source>PersistenceDelegate.mutatesTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04f73bdcb56ba01440af6c791dae4eed52f4b49" translate="yes" xml:space="preserve">
          <source>PersistenceDelegate.writeObject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0aba9a762375dd6267b42da3f58a7da3c2c48b0" translate="yes" xml:space="preserve">
          <source>PersistentMBean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674c3d02f85098d60a86697255e7cfafcab53d5e" translate="yes" xml:space="preserve">
          <source>PersistentMBean.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2c70d6797d07adc3c6508f43076ff931588313" translate="yes" xml:space="preserve">
          <source>PersistentMBean.store()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48011347430751bbc2e6ba310f51e861ef97c47" translate="yes" xml:space="preserve">
          <source>Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992ce49247fe1de81d226715cc7c00426286319c" translate="yes" xml:space="preserve">
          <source>Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed. Phantom references are most often used for scheduling pre-mortem cleanup actions in a more flexible way than is possible with the Java finalization mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a57bc8d81703fbcf5660e549c2611d67f425145" translate="yes" xml:space="preserve">
          <source>PhantomReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ee0b75d1f0dc1a4e76ed0f8c509523ee28fc45" translate="yes" xml:space="preserve">
          <source>PhantomReference.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a55bdf86661365f1bd6ebb150457a92b7afa890" translate="yes" xml:space="preserve">
          <source>Phaser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea965efdf4c9989dfbae2990ddc7352a323c964" translate="yes" xml:space="preserve">
          <source>Phaser.arrive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004936492ab4b167c9ced58ad063d90b4f04b1f2" translate="yes" xml:space="preserve">
          <source>Phaser.arriveAndAwaitAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3b8549b2bbbe21cc6e5774760bbee594fc3d39" translate="yes" xml:space="preserve">
          <source>Phaser.arriveAndDeregister()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4f505ea4f57a2323e9c2ba782c230758732154" translate="yes" xml:space="preserve">
          <source>Phaser.awaitAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b3b556c21491a2a199066b7dc3666ca5af4d40" translate="yes" xml:space="preserve">
          <source>Phaser.awaitAdvanceInterruptibly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb3e8d5945613d412428155ed8f5c082803e9d1" translate="yes" xml:space="preserve">
          <source>Phaser.bulkRegister()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2841bfda535737ff73589025eab3be5b9d7dbf0" translate="yes" xml:space="preserve">
          <source>Phaser.forceTermination()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5074613e60698f6eefc51129e1c1521c319cdb" translate="yes" xml:space="preserve">
          <source>Phaser.getArrivedParties()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fc5c0443ae1a4415bb500e3b9e3279be0b5a3e" translate="yes" xml:space="preserve">
          <source>Phaser.getParent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab4930aa7e7724d51e38611fbfadd2dd98d629d" translate="yes" xml:space="preserve">
          <source>Phaser.getPhase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934d2d8b9504966b7cd5919a798bacddb7cccbe7" translate="yes" xml:space="preserve">
          <source>Phaser.getRegisteredParties()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a942ae438208e99effd0b1e9653560561b1d08" translate="yes" xml:space="preserve">
          <source>Phaser.getRoot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d08f1b766cffa42f27ca3986ddcf871cacf257" translate="yes" xml:space="preserve">
          <source>Phaser.getUnarrivedParties()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad41e44138951db1236247feb7356f6904cc0a85" translate="yes" xml:space="preserve">
          <source>Phaser.isTerminated()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a31a0e42a57b70c8833ce26080197b82f4438ad" translate="yes" xml:space="preserve">
          <source>Phaser.onAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfaaf35dcde3db32d9796376851f61c67832c4fd" translate="yes" xml:space="preserve">
          <source>Phaser.register()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0720577bbfce3f8c521a8b3bd8f1ae67112afcd9" translate="yes" xml:space="preserve">
          <source>Phaser.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00dae071c082bb73eaed17b4bb3429280e110e8c" translate="yes" xml:space="preserve">
          <source>Pipe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c689673b8c023cadf430e139dfa24dc807560a" translate="yes" xml:space="preserve">
          <source>Pipe-sink channels only support writing, so this method returns &lt;a href=&quot;selectionkey#OP_WRITE&quot;&gt;&lt;code&gt;SelectionKey.OP_WRITE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6998ae778fa7701f07fc22f7e992e1a1b18173e" translate="yes" xml:space="preserve">
          <source>Pipe-source channels only support reading, so this method returns &lt;a href=&quot;selectionkey#OP_READ&quot;&gt;&lt;code&gt;SelectionKey.OP_READ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c21ab9d2c068b51369160bf5a36ae45b15ad640" translate="yes" xml:space="preserve">
          <source>Pipe.SinkChannel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4e36ab7c6712d2aa2f4f1d25ee3f037921a036" translate="yes" xml:space="preserve">
          <source>Pipe.SinkChannel.validOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee9eafcb2edec701b3bc31e41ae8251d7d789b4" translate="yes" xml:space="preserve">
          <source>Pipe.SourceChannel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d885f2dc97a8d8292ad12d75c2c4dd198fac64cf" translate="yes" xml:space="preserve">
          <source>Pipe.SourceChannel.validOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19adcdd1e3add0df6b210ec3c3fc237b60f1ff6d" translate="yes" xml:space="preserve">
          <source>Pipe.open()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eab859b977a1b0bbb6d2de00017f552cd643eec" translate="yes" xml:space="preserve">
          <source>Pipe.sink()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf99a2b8a2c28d05fb82a58af6a56af1dbcd526" translate="yes" xml:space="preserve">
          <source>Pipe.source()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2453b7bdd2c62a58f031a28c0557c9ef726a3298" translate="yes" xml:space="preserve">
          <source>Piped character-input streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cc167f16ea3c3d52462129192a321a079d0eb2" translate="yes" xml:space="preserve">
          <source>Piped character-output streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3fb9344f873b61c9ef59c225b45a18f361d752" translate="yes" xml:space="preserve">
          <source>PipedInputStream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f076695a00438fe5384c974e7da192ecf527f5" translate="yes" xml:space="preserve">
          <source>PipedInputStream.available()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f27ac949a0449517193ba93c24326452291ea32" translate="yes" xml:space="preserve">
          <source>PipedInputStream.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1b7034b97819609cca928383e0c3c50122afa9" translate="yes" xml:space="preserve">
          <source>PipedInputStream.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6722d3f96f3913a27d31ce9051f019108909e50a" translate="yes" xml:space="preserve">
          <source>PipedInputStream.read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b956f598a9245a6774b37e8372efde15917743d2" translate="yes" xml:space="preserve">
          <source>PipedInputStream.receive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a3d41a9a46508c7388ec1f278b04175f2c2ac8" translate="yes" xml:space="preserve">
          <source>PipedOutputStream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852004a34ec95a3f12532e3fedecdfe13ae97eb5" translate="yes" xml:space="preserve">
          <source>PipedOutputStream.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704cea45c05dd18756a691fa7aa5b5cc3d7e3b77" translate="yes" xml:space="preserve">
          <source>PipedOutputStream.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02c4aa8364b827441d6aa1e2a82b9045a0ea453" translate="yes" xml:space="preserve">
          <source>PipedOutputStream.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f4b3850f93eee8c22dbca8b19a3848327f1a3a" translate="yes" xml:space="preserve">
          <source>PipedOutputStream.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97eca4f5fc5ca67035529ddbf65a5f4849611a6e" translate="yes" xml:space="preserve">
          <source>PipedReader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b65db05fae6de1b26a685a85db3ace3c332c00" translate="yes" xml:space="preserve">
          <source>PipedReader.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f3cf6a823bce52086d2c12aba0503b7dd1ba42" translate="yes" xml:space="preserve">
          <source>PipedReader.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e965461fcb3a8d498451cc0d8fad3e80a34f7f9" translate="yes" xml:space="preserve">
          <source>PipedReader.read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8d32788b89fca34c26136471047ae761930c7d" translate="yes" xml:space="preserve">
          <source>PipedReader.ready()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da932eb517b0b5f936d02bb49143700468b8f3d" translate="yes" xml:space="preserve">
          <source>PipedWriter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60f9b3cb83dcb4773bb07d233c2d0fc1f99b090" translate="yes" xml:space="preserve">
          <source>PipedWriter.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373d624e294eb2c952b025ac244766a4aa0c4db4" translate="yes" xml:space="preserve">
          <source>PipedWriter.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a38af3dbcb5969643dffa4d18153392194dfc14" translate="yes" xml:space="preserve">
          <source>PipedWriter.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d3727a6c7a7b889494d5c669d32c1d94454ee2" translate="yes" xml:space="preserve">
          <source>PipedWriter.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b4a6e2281e140afba21465f8eeba3fc94f4a57" translate="yes" xml:space="preserve">
          <source>Pixel data from the aforementioned methods will be written starting at the offset specified by &lt;code&gt;getDestinationOffset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86821a4c4e6a3f72b49fb5e192417895bbba6be" translate="yes" xml:space="preserve">
          <source>Pixels that land, after subsampling, within the destination image, and that are written in one of the progressive passes specified by &lt;code&gt;getSourceMinProgressivePass&lt;/code&gt; and &lt;code&gt;getSourceNumProgressivePasses&lt;/code&gt; are passed along to the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6fc44bff42dd97769bf1268ab4b7373fe704ca" translate="yes" xml:space="preserve">
          <source>Places the input stream for this socket at &quot;end of stream&quot;. Any data sent to the input stream side of the socket is acknowledged and then silently discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028a6e39223cd399e1d6a24bcfd1a29a9b2873b3" translate="yes" xml:space="preserve">
          <source>Places the input stream for this socket at &quot;end of stream&quot;. Any data sent to this socket is acknowledged and then silently discarded. If you read from a socket input stream after invoking this method on the socket, the stream's &lt;code&gt;available&lt;/code&gt; method will return 0, and its &lt;code&gt;read&lt;/code&gt; methods will return &lt;code&gt;-1&lt;/code&gt; (end of stream).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eaad26d956b99941b705d1766726aa527d6eb2f" translate="yes" xml:space="preserve">
          <source>Plain reductions. (There is not a form of this method for (key, value) function arguments since there is no corresponding return type.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89aa1497daf562ad30ce92f2fb018950460cf1af" translate="yes" xml:space="preserve">
          <source>Plain text in character set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce26673cbdd3f24a0d2255af0ebb2e7a78a432c" translate="yes" xml:space="preserve">
          <source>Plain text in the default character set (US-ASCII)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df3aa4c68bb04841b43328369e6f20ed6254543" translate="yes" xml:space="preserve">
          <source>Plain text print data provided through a byte stream. Specifically, the following doc flavors are recommended to be supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab02a98f1194af7d947ed5f9f2e04c7be3c86bde" translate="yes" xml:space="preserve">
          <source>Platform Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6ed9ecf19fed1cdafb6a412d2cf5f34adc7ea1" translate="yes" xml:space="preserve">
          <source>Platform MXBean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d64d25d153ac7ba742cb30d5771eeba9e0328eb" translate="yes" xml:space="preserve">
          <source>Platform MXBeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff10465388bc43dd25377538b9cf86437da32028" translate="yes" xml:space="preserve">
          <source>Platform dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12ec6135d0da3c82c299470dd6560b149871f80" translate="yes" xml:space="preserve">
          <source>PlatformLoggingMXBean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9508f0bf124c12ff4b119736dca2b5fb8dd0cfdd" translate="yes" xml:space="preserve">
          <source>PlatformLoggingMXBean.getLoggerLevel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472bfc3d9ac88cfa95d1f97df1631534241177ee" translate="yes" xml:space="preserve">
          <source>PlatformLoggingMXBean.getLoggerNames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43a5ce303b27b047110c41c2a455443d4c8d360" translate="yes" xml:space="preserve">
          <source>PlatformLoggingMXBean.getParentLoggerName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b57a859a16390815aa784361167d2ecb9ac32f3" translate="yes" xml:space="preserve">
          <source>PlatformLoggingMXBean.setLoggerLevel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18e5abf80cf9ffd4b597454925c10927cc1cc3d" translate="yes" xml:space="preserve">
          <source>PlatformManagedObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f236c401f14556402943c8e8c07a788339c4ce" translate="yes" xml:space="preserve">
          <source>PlatformManagedObject.getObjectName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707ee500cf78500479e3f2084e000de19ea645a4" translate="yes" xml:space="preserve">
          <source>Playback of an audio clip may be started and stopped using the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; methods. These methods do not reset the media position; &lt;code&gt;start&lt;/code&gt; causes playback to continue from the position where playback was last stopped. To restart playback from the beginning of the clip's audio data, simply follow the invocation of &lt;code&gt;&lt;a href=&quot;dataline#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with setFramePosition(0), which rewinds the media to the beginning of the clip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dc48b4dffae0bbd65ab2cebd7d2082f4076f72" translate="yes" xml:space="preserve">
          <source>Please NOTE that the exact details of the representation are unspecified and subject to change, and subclasses may override the method with their own formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf0bc55370c095da1032bceb84502429c6c8ffd" translate="yes" xml:space="preserve">
          <source>Please NOTE that the exact details of the representation are unspecified and subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834663661440de8582faf57cb69a2322101f7f0e" translate="yes" xml:space="preserve">
          <source>Please note that the keytab file can be created after the &lt;code&gt;KeyTab&lt;/code&gt; object is instantiated and its content may change over time. Therefore, an application should call this method only when it needs to use the keys. Any previous result from an earlier invocation could potentially be expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fea3c069d7651f8b8eebb25b25a1489bdadd97" translate="yes" xml:space="preserve">
          <source>Please note the constructors &lt;a href=&quot;keytab#getInstance--&quot;&gt;&lt;code&gt;getInstance()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keytab#getInstance-java.io.File-&quot;&gt;&lt;code&gt;getInstance(java.io.File)&lt;/code&gt;&lt;/a&gt; were created when there was no support for unbound keytabs. These methods should not be used anymore. An object created with either of these methods are considered to be bound to an unknown principal, which means, its &lt;a href=&quot;keytab#isBound--&quot;&gt;&lt;code&gt;isBound()&lt;/code&gt;&lt;/a&gt; returns true and &lt;a href=&quot;keytab#getPrincipal--&quot;&gt;&lt;code&gt;getPrincipal()&lt;/code&gt;&lt;/a&gt; returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c51bd549e455b945e4334b9a2254bc5ff975cf" translate="yes" xml:space="preserve">
          <source>Please note the deprecated constructors create a KeyTab object bound for some unknown principal. In this case, this method also returns null. User can call &lt;a href=&quot;keytab#isBound--&quot;&gt;&lt;code&gt;isBound()&lt;/code&gt;&lt;/a&gt; to verify this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f139f9909ca3fc711436baddbe9de72183af66a" translate="yes" xml:space="preserve">
          <source>Please note: Code can always read a file from the same directory it's in (or a subdirectory of that directory); it does not need explicit permission to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc990d0fdc58aba146859cf9e0ca90a7c4cfabe" translate="yes" xml:space="preserve">
          <source>Please note: In the javax.print APIs, a null reference parameter to methods is incorrect unless explicitly documented on the method as having a meaningful interpretation. Usage to the contrary is incorrect coding and may result in a run time exception either immediately or at some later time. IllegalArgumentException and NullPointerException are examples of typical and acceptable run time exceptions for such cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adcaa004a5fd04fb1d9496af92013decc8df341" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt; for definitions of the X.509 CRL fields and extensions mentioned below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230db97da959ec3ca54f94e22d637eb41e65a70e" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt; for definitions of the X.509 certificate extensions mentioned below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895582f365374e5d209bfa87772db919fc8c4bc2" translate="yes" xml:space="preserve">
          <source>Please refer to the Java SASL Programming Guide for information on how to use this API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfa1de582e5db69cb5297988f8e107b3d3e9f47" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;http://www.ietf.org/rfc/rfc5116.txt&quot;&gt; RFC 5116 &lt;/a&gt; for more information on the Authenticated Encryption with Associated Data (AEAD) algorithm, and &lt;a href=&quot;http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf&quot;&gt; NIST Special Publication 800-38D&lt;/a&gt;, &quot;NIST Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb52c1ed14d44e61106f0b3148a89ba6b53621b3" translate="yes" xml:space="preserve">
          <source>Plug-in writers may extend the functionality of &lt;code&gt;ImageReadParam&lt;/code&gt; by providing a subclass that implements additional, plug-in specific interfaces. It is up to the plug-in to document what interfaces are available and how they are to be used. Readers will silently ignore any extended features of an &lt;code&gt;ImageReadParam&lt;/code&gt; subclass of which they are not aware. Also, they may ignore any optional features that they normally disable when creating their own &lt;code&gt;ImageReadParam&lt;/code&gt; instances via &lt;code&gt;getDefaultReadParam&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839f942897473d1c76b814d1aa137eb631e4b65f" translate="yes" xml:space="preserve">
          <source>Plug-in writers may extend the functionality of &lt;code&gt;ImageWriteParam&lt;/code&gt; by providing a subclass that implements additional, plug-in specific interfaces. It is up to the plug-in to document what interfaces are available and how they are to be used. Writers will silently ignore any extended features of an &lt;code&gt;ImageWriteParam&lt;/code&gt; subclass of which they are not aware. Also, they may ignore any optional features that they normally disable when creating their own &lt;code&gt;ImageWriteParam&lt;/code&gt; instances via &lt;code&gt;getDefaultWriteParam&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436c84e5e9bc1f8b4cd10e7c6fb72573d2217b34" translate="yes" xml:space="preserve">
          <source>Plug-ins may choose to support a standard (plug-in neutral) format. This format does not provide lossless encoding of metadata, but allows a portion of the metadata to be accessed in a generic manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9cf1418089b3356038fdd24fcbdc9d1a7c42a5" translate="yes" xml:space="preserve">
          <source>Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b048c07d1edc775b18a00a40299e6c6170be4c64" translate="yes" xml:space="preserve">
          <source>Policy parameters, or null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e5eaf6816edbce46769bad359941521bf79ad3" translate="yes" xml:space="preserve">
          <source>Policy.Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea391eae3634da4d7a67b805b7a4dae3293feb9" translate="yes" xml:space="preserve">
          <source>Policy.getInstance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b398725cab21b4b67e19b4c1bedca6980e573a" translate="yes" xml:space="preserve">
          <source>Policy.getParameters()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e0bc8f10dce2d06fa06c2b3903119e3e5468de" translate="yes" xml:space="preserve">
          <source>Policy.getPermissions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b543551ac2db156f08d979fdcd6b6e9e59a4904" translate="yes" xml:space="preserve">
          <source>Policy.getPolicy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1360f2a4bd6bba1aba4b55cbab83c12b09b44b9c" translate="yes" xml:space="preserve">
          <source>Policy.getProvider()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448409771d5cb5ed9af3583df07d00f4e988a80e" translate="yes" xml:space="preserve">
          <source>Policy.getType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c330e3b63127b6355547231440a3f99df090a34" translate="yes" xml:space="preserve">
          <source>Policy.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba4fbf7026f9ab07279880e6bd17d9609b5fc7b" translate="yes" xml:space="preserve">
          <source>Policy.refresh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4207627c06e61e3a8afe489023cc1542af4196" translate="yes" xml:space="preserve">
          <source>Policy.setPolicy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37533ee6d2148e7d43d1579eda1671104f0cac23" translate="yes" xml:space="preserve">
          <source>PolicyConstraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a686f8c02ea4447c6d74354963c4a1b104d8167" translate="yes" xml:space="preserve">
          <source>PolicyMappings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5111ca14aa6a0f7e3985feefdc87c0e580d052fb" translate="yes" xml:space="preserve">
          <source>PolicyNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45011d432dea4eff0c023fb04aa5241a0029775c" translate="yes" xml:space="preserve">
          <source>PolicyNode.getChildren()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a49e59be89b95d8b61c838076e71126c84d4132" translate="yes" xml:space="preserve">
          <source>PolicyNode.getDepth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1deed14bac8fedc43fbea931afd387eafbad8fc1" translate="yes" xml:space="preserve">
          <source>PolicyNode.getExpectedPolicies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621cff616534796e25be8a7d33733ff0327f4d6e" translate="yes" xml:space="preserve">
          <source>PolicyNode.getParent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0986a7b4a23ea8ecf08b940e646a7ce9dd367675" translate="yes" xml:space="preserve">
          <source>PolicyNode.getPolicyQualifiers()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d2c338d12f07b4370b2ddf54ffbc58214f1bd1" translate="yes" xml:space="preserve">
          <source>PolicyNode.getValidPolicy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b5cec4b5d2c50fb5e3bfa3fc69eedd4aa7b7ff" translate="yes" xml:space="preserve">
          <source>PolicyNode.isCritical()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6c9566101cd4ba433f2556e8f75a848611d540" translate="yes" xml:space="preserve">
          <source>PolicyQualifierInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25de1e5031b89ba1ba77a944d95f7c5ecff24ed1" translate="yes" xml:space="preserve">
          <source>PolicyQualifierInfo.getEncoded()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59f4d8d8e5a67cfbb8faa1200fe7d032e8c8139" translate="yes" xml:space="preserve">
          <source>PolicyQualifierInfo.getPolicyQualifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39ae68ec2845ebd5c68ce6824f7f4b2f5641b70" translate="yes" xml:space="preserve">
          <source>PolicyQualifierInfo.getPolicyQualifierId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683e3c9054f07a0135ff826805c62afe7020f197" translate="yes" xml:space="preserve">
          <source>PolicyQualifierInfo.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21a9ba6e6e5c61cc857df2473d85513a09e616" translate="yes" xml:space="preserve">
          <source>PolicySpi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc72e9ad961e98cbd9b788a01371ade89252303" translate="yes" xml:space="preserve">
          <source>PolicySpi.engineGetPermissions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2504733406ec55d3ea2aac293d1119f57053723" translate="yes" xml:space="preserve">
          <source>PolicySpi.engineImplies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf4426d2d73e017a5daf560a3c03b87000f665a" translate="yes" xml:space="preserve">
          <source>PolicySpi.engineRefresh()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4044893229fcfc93927dd395fda2603f25cbf9b0" translate="yes" xml:space="preserve">
          <source>Polling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8781f5f1e6994aebc8e3ccaaf4c8c16d9977dcac" translate="yes" xml:space="preserve">
          <source>Polls this queue to see if a reference object is available. If one is available without further delay then it is removed from the queue and returned. Otherwise this method immediately returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9282da08d2f3ae4ace37823648ec2e1ce3d0ce" translate="yes" xml:space="preserve">
          <source>Pops an element from the stack represented by this deque. In other words, removes and returns the first element of this deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6413acd369bbcdb655ace94545cc790e6adf2a1d" translate="yes" xml:space="preserve">
          <source>Pops an element from the stack represented by this list. In other words, removes and returns the first element of this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f6fe02bb71b93651c320f2305e42a5775179b7" translate="yes" xml:space="preserve">
          <source>Port.Info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69883dbff63c7ecedfc9edc2f5542417058778b" translate="yes" xml:space="preserve">
          <source>Port.Info.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562ac5bbd615d30ed190258d9365753c2aa546b1" translate="yes" xml:space="preserve">
          <source>Port.Info.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7ecfe7733c8ac5bad47e2944e17b68a624da2a" translate="yes" xml:space="preserve">
          <source>Port.Info.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6b08775bc0d790562ae4416a3eea273f6c5c8c" translate="yes" xml:space="preserve">
          <source>Port.Info.isSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168116b5ab8c658348a68925e61bef6e28460896" translate="yes" xml:space="preserve">
          <source>Port.Info.matches()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627efde96da29125a12e88f841d03cf28b6c8ad2" translate="yes" xml:space="preserve">
          <source>Port.Info.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fec0ab7bfc6c16086e1acc11662a0ce227bec1" translate="yes" xml:space="preserve">
          <source>PortUnreachableException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9a115a7270696343998f719493172931dae588" translate="yes" xml:space="preserve">
          <source>Portable Document Format document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3432b68b664f8ad9233f8387e77b6263bcf7757d" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea03cc190a43f93c7a905af50d77b4aa3a75705" translate="yes" xml:space="preserve">
          <source>Ports are simple lines for input or output of audio to or from audio devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527b73556f980c8708461ad1e2b89f7be013c068" translate="yes" xml:space="preserve">
          <source>Ports are simple lines for input or output of audio to or from audio devices. Common examples of ports that act as source lines (mixer inputs) include the microphone, line input, and CD-ROM drive. Ports that act as target lines (mixer outputs) include the speaker, headphone, and line output. You can access port using a &lt;code&gt;&lt;a href=&quot;port.info&quot;&gt;&lt;code&gt;Port.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0b5078fa63171b47834e889d8c12a8a0e8f89c" translate="yes" xml:space="preserve">
          <source>Position, limit, and capacity;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ff2953548b0edf08cd58e4d79c6c64d9476874" translate="yes" xml:space="preserve">
          <source>Positive numbers and positive zero do not include a sign or extra leading space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da1103a0405d39ed3db30a7eaf6476619baa99a" translate="yes" xml:space="preserve">
          <source>Positive numbers and zero do not include a sign or extra leading space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d3265ac2e7b2e5850fd6facf37541c1bb05b49" translate="yes" xml:space="preserve">
          <source>PosixFileAttributeView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9cc14655487e347fa289fdd419727035da945e" translate="yes" xml:space="preserve">
          <source>PosixFileAttributeView.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0100d0d52dcc5ff54252ef310a769222bb843179" translate="yes" xml:space="preserve">
          <source>PosixFileAttributeView.readAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abbde84509e327a8cd36b2f48c7c499c3ae3473" translate="yes" xml:space="preserve">
          <source>PosixFileAttributeView.setGroup()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ba97c11ccc214ea61d501d16a88897372818fc" translate="yes" xml:space="preserve">
          <source>PosixFileAttributeView.setPermissions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e725021bc1d95d167299f6fe5436723d55908f" translate="yes" xml:space="preserve">
          <source>PosixFileAttributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839b45d447c97574ffb32d13911428bdfa0ede83" translate="yes" xml:space="preserve">
          <source>PosixFileAttributes.group()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a622d14d325da54e355ef6895a389c7a6bca64c2" translate="yes" xml:space="preserve">
          <source>PosixFileAttributes.owner()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7a60d9519c416c1b60bbcb3b6205e94bb5dcc8" translate="yes" xml:space="preserve">
          <source>PosixFileAttributes.permissions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b90a0521e6405d6385a4c76006610d995fcd073" translate="yes" xml:space="preserve">
          <source>PosixFilePermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa273eb0e57b04cf50e0e807a1ec9414b9ace7b" translate="yes" xml:space="preserve">
          <source>PosixFilePermission.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c4b5e1cacf242fbd7f77dd43a83f50b86b3e85" translate="yes" xml:space="preserve">
          <source>PosixFilePermission.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a1fb422f619964a1abacd84d6a04c894f0456a" translate="yes" xml:space="preserve">
          <source>PosixFilePermissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1a85246f105949f2dadde28cf1112077140e20" translate="yes" xml:space="preserve">
          <source>PosixFilePermissions.asFileAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7517c563df8fdf5c0271205f2dfd0c8d503271" translate="yes" xml:space="preserve">
          <source>PosixFilePermissions.fromString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa02ec8795a1d400b43bf36894ea11cb3beea82d" translate="yes" xml:space="preserve">
          <source>PosixFilePermissions.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a25e4c6df0cbb8129a405e968846abe861b888" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce5559431e7dd637ade7f5eb56d7361f9c12b16" translate="yes" xml:space="preserve">
          <source>Possible &lt;a href=&quot;signature#state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; value, signifying that this signature object has been initialized for signing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f2497c4fdd70d7a4ce4b708cd71289612ff648" translate="yes" xml:space="preserve">
          <source>Possible &lt;a href=&quot;signature#state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; value, signifying that this signature object has been initialized for verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c56b293ae10326f5b000dde43e0ee87d62cb51" translate="yes" xml:space="preserve">
          <source>Possible &lt;a href=&quot;signature#state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; value, signifying that this signature object has not yet been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f60855090b839574eed225cb610bc04011501a" translate="yes" xml:space="preserve">
          <source>Possibly attempts to cancel and/or stop all tasks, and reject all subsequently submitted tasks. Invocation has no effect on execution state if this is the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt;, and no additional effect if already shut down. Otherwise, tasks that are in the process of being submitted or executed concurrently during the course of this method may or may not be rejected. This method cancels both existing and unexecuted tasks, in order to permit termination in the presence of task dependencies. So the method always returns an empty list (unlike the case for some other Executors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371435e9ae71f59744bc7aa283f4a98df21735f9" translate="yes" xml:space="preserve">
          <source>Possibly blocks the current thread, for example waiting for a lock or condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c3ccbd2cf42c4a9f22b46c88b80af2eb7f9bc2" translate="yes" xml:space="preserve">
          <source>Possibly executes tasks until the pool hosting the current task &lt;a href=&quot;forkjoinpool#isQuiescent--&quot;&gt;&lt;code&gt;is quiescent&lt;/code&gt;&lt;/a&gt;. This method may be of use in designs in which many tasks are forked, but none are explicitly joined, instead executing them until all are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf384e7c6bb5ac0e518767c891375b15014d676" translate="yes" xml:space="preserve">
          <source>Possibly initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted. Invocation has no effect on execution state if this is the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt;, and no additional effect if already shut down. Tasks that are in the process of being submitted concurrently during the course of this method may or may not be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acfaae6468b1bd5e6e11527051da5fc616a8628" translate="yes" xml:space="preserve">
          <source>Possibly null environment property set. null means no environment was recorded for this exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d0c8954c849903cb3e572e965ab3d56c904970" translate="yes" xml:space="preserve">
          <source>Possibly unbounded. While collections have a finite size, streams need not. Short-circuiting operations such as &lt;code&gt;limit(n)&lt;/code&gt; or &lt;code&gt;findFirst()&lt;/code&gt; can allow computations on infinite streams to complete in finite time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c910ca8eb1b29785b459beacb1dbd800fa25aa" translate="yes" xml:space="preserve">
          <source>PostConstruct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb03565cc2e08c0386a26ec5106c18545a235c1" translate="yes" xml:space="preserve">
          <source>PostScript document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f36d524ab6b2042bd7d1c4ad8f7f1ebf89a3ea" translate="yes" xml:space="preserve">
          <source>Potential applications of SignedObject include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7798bd0a7d4dd478075510ff1220939b776082b" translate="yes" xml:space="preserve">
          <source>Pre-defined Doc Flavors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0caf524ad9d6e2fe7ca4d05c22c453493f21142" translate="yes" xml:space="preserve">
          <source>PreDestroy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f71f969b24c58aee71d1a8737f76c9b6a144209" translate="yes" xml:space="preserve">
          <source>Predefined Formatters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9f32981c4ef20dddc3336e82ef090556d625d6" translate="yes" xml:space="preserve">
          <source>Predefined character classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1650b678236b8d701b85470e6a597ec8af290fc" translate="yes" xml:space="preserve">
          <source>Predefined character classes (Unicode character)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccc0d97248cba57b0272fd09d5383f1c824c59a" translate="yes" xml:space="preserve">
          <source>Predicate.and()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb2ede3cec3d0cdce8fab2116cb1444a7c72f32" translate="yes" xml:space="preserve">
          <source>Predicate.isEqual()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c2f07a832ea88101fd3eef50948f0eb0898280" translate="yes" xml:space="preserve">
          <source>Predicate.negate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5985a2450aefbde68598c0b4eff46cee71cc1048" translate="yes" xml:space="preserve">
          <source>Predicate.or()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38590dd75f8b81be8cb6e2ae60b4fc79046b638b" translate="yes" xml:space="preserve">
          <source>Predicate.test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f10bb7099700ff3f1a2e86de365180d7613606" translate="yes" xml:space="preserve">
          <source>Prefer CRLs to OSCP. The default behavior is to prefer OCSP. Each PKIX implementation should document further details of their specific preference rules and fallback policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e445c2b7b858a3b10cf9e03699443b93b5ae1baf" translate="yes" xml:space="preserve">
          <source>PreferenceChangeEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67aa70df9cc1f6174cfdcb852b697679b000537" translate="yes" xml:space="preserve">
          <source>PreferenceChangeEvent.getKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee36b914150bcb22f7f9227dd5e87c546a90c724" translate="yes" xml:space="preserve">
          <source>PreferenceChangeEvent.getNewValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4e864f1956618b25fad4c77544c3756fc66268" translate="yes" xml:space="preserve">
          <source>PreferenceChangeEvent.getNode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad5770c7979dba12637312c3481f41f35048c14" translate="yes" xml:space="preserve">
          <source>PreferenceChangeListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b039e609b5788925842f06649771db09f7d14d" translate="yes" xml:space="preserve">
          <source>PreferenceChangeListener.preferenceChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfd349ebee555eb8d652be20dad971cae439eca" translate="yes" xml:space="preserve">
          <source>Preferences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0fdc7ac9569180465973e8c80123f9503fb991" translate="yes" xml:space="preserve">
          <source>Preferences.absolutePath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb5603a6de7325a76c17409b008fab2ac3e5de9" translate="yes" xml:space="preserve">
          <source>Preferences.addNodeChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c45c722511ecc13f6905b5377f3d0917b90bd" translate="yes" xml:space="preserve">
          <source>Preferences.addPreferenceChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e373564390aabaf1df2c91d41e57d3239f9cf447" translate="yes" xml:space="preserve">
          <source>Preferences.childrenNames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9856bd751c3ff52df64aee17c745fef941a723" translate="yes" xml:space="preserve">
          <source>Preferences.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e806991350f9a8c69f09b847f4fc01276023e16a" translate="yes" xml:space="preserve">
          <source>Preferences.exportNode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0633f65f9d36612bbf37de6ccb7a4bc9a7b05ee1" translate="yes" xml:space="preserve">
          <source>Preferences.exportSubtree()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0f119b2add79abcbb58f2a225ca377d06e6393" translate="yes" xml:space="preserve">
          <source>Preferences.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dceb6875462bd983782bd2a94deffb216957171" translate="yes" xml:space="preserve">
          <source>Preferences.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edb1cf262eb77c7ea776153a6654c1262558d7d" translate="yes" xml:space="preserve">
          <source>Preferences.getBoolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0eabf85d4aae1b7b409d2cfce936c4e56121b5" translate="yes" xml:space="preserve">
          <source>Preferences.getByteArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c252eda95717ff000fa53ab962265ae699680d" translate="yes" xml:space="preserve">
          <source>Preferences.getDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1ec553192b33c5616636c06fda229a15555bd0" translate="yes" xml:space="preserve">
          <source>Preferences.getFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f0fe4009153d9c34bcfc32081dc84fdae9c0fe" translate="yes" xml:space="preserve">
          <source>Preferences.getInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfe918d837394e39b3f74c07b3960f4a96757ae" translate="yes" xml:space="preserve">
          <source>Preferences.getLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e720af9c2015b99e178b4fbf80e6500c8d40db24" translate="yes" xml:space="preserve">
          <source>Preferences.importPreferences()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da95a867ca0f1cc4d7991de2e290255d5813ecc3" translate="yes" xml:space="preserve">
          <source>Preferences.isUserNode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a194152580795b0eb2eefec0525f335c599a44" translate="yes" xml:space="preserve">
          <source>Preferences.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0304c194c6aae2befb27c1225f8c82d182220cd6" translate="yes" xml:space="preserve">
          <source>Preferences.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d345b36412ef3f459229638e045697583306b630" translate="yes" xml:space="preserve">
          <source>Preferences.node()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77edafb08c9718652ae976d69f8aea68463f2ef" translate="yes" xml:space="preserve">
          <source>Preferences.nodeExists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37ba2de9155c9c15994fa117c4637e352c9f773" translate="yes" xml:space="preserve">
          <source>Preferences.parent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40a995a6c7c46986de74ce8a4a526a5087334d1" translate="yes" xml:space="preserve">
          <source>Preferences.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523f31a0f4b9505f32407a88a51101d01edfbb24" translate="yes" xml:space="preserve">
          <source>Preferences.putBoolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62f3ef8b6684d75b220c151fd6605265dde2cac" translate="yes" xml:space="preserve">
          <source>Preferences.putByteArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd59b30ec136f8b3b6300623e34974e5ad5ce25" translate="yes" xml:space="preserve">
          <source>Preferences.putDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae156199cb4495e3d2f0babdeafcea72cc81de1c" translate="yes" xml:space="preserve">
          <source>Preferences.putFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d85bde4caf422635251261bc857abd6b921ca4" translate="yes" xml:space="preserve">
          <source>Preferences.putInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7e421892c6b4eeee7d77094c76bd2872896ff1" translate="yes" xml:space="preserve">
          <source>Preferences.putLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3249b0984c93471f20d048d17174596d7951bc7" translate="yes" xml:space="preserve">
          <source>Preferences.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd070156ea7c3023e8b99fb94bd73ac3b3b72285" translate="yes" xml:space="preserve">
          <source>Preferences.removeNode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7973810f95790f7871a32a8ba8196b4435fb25" translate="yes" xml:space="preserve">
          <source>Preferences.removeNodeChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e5f7d6231192bf4367fcca9319acafb6fbf30e" translate="yes" xml:space="preserve">
          <source>Preferences.removePreferenceChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0fa625b85eb8c7846e39dd612dac42ff672ac2" translate="yes" xml:space="preserve">
          <source>Preferences.sync()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4699206dec9f7f1d42628c3a84fffbdf8a742031" translate="yes" xml:space="preserve">
          <source>Preferences.systemNodeForPackage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aff563667004a608befffb349120371e75c028c" translate="yes" xml:space="preserve">
          <source>Preferences.systemRoot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1b4be13ff9c2395ffc29bdd761f2b986c6399d" translate="yes" xml:space="preserve">
          <source>Preferences.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8170f8ba2f1472f5c94eb7513adc4ce2957c999" translate="yes" xml:space="preserve">
          <source>Preferences.userNodeForPackage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9158e4388bfbb11a218bbb4340f2a6a9bd4ddaea" translate="yes" xml:space="preserve">
          <source>Preferences.userRoot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdeb4de9fc15e3bd1307e53721cf3b597ce5455a" translate="yes" xml:space="preserve">
          <source>PreferencesFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cbd3e98422e1b8e0834f645f800a1877024ede" translate="yes" xml:space="preserve">
          <source>PreferencesFactory.systemRoot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109c644dbe78d87662779d7ac6ad738c0794f186" translate="yes" xml:space="preserve">
          <source>PreferencesFactory.userRoot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25975cebe167fb28e001d0ee75b0f22855a0f18" translate="yes" xml:space="preserve">
          <source>Preferred Scale of Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c6416ae4f1a3e684b3df1c49df16fd9f2cebb6" translate="yes" xml:space="preserve">
          <source>Prefix for date and time conversion characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2e5cb499713d052f7bddfaf9cda75cea714c4d" translate="yes" xml:space="preserve">
          <source>Prefix for date and time conversion characters. See &lt;a href=&quot;#dt&quot;&gt;Date/Time Conversions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad20f5fd87c208597de999580568bd601fa5d9d" translate="yes" xml:space="preserve">
          <source>Prefix or suffix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c372d65f7206ac9084928f378647c4d6403d1d" translate="yes" xml:space="preserve">
          <source>Preformatted autosense print data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a70945f5a5e40a7652b18576830cbac9995bca9" translate="yes" xml:space="preserve">
          <source>Preformatted images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d3f8f1354ee9d9a94ec9c9e91db0c9f4f593e0" translate="yes" xml:space="preserve">
          <source>Preformatted page description language (PDL) documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627c8004999164ede110df201b5aa825ba9ba40e" translate="yes" xml:space="preserve">
          <source>Preformatted text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bf48572c1b728ebdd505689aea8b8ee8a07c2a" translate="yes" xml:space="preserve">
          <source>Prepares a stream to accept a series of subsequent &lt;code&gt;writeToSequence&lt;/code&gt; calls, using the provided stream metadata object. The metadata will be written to the stream if it should precede the image data. If the argument is &lt;code&gt;null&lt;/code&gt;, default stream metadata is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7e54c6ee83d227e932ead5874df9844c4a30bf" translate="yes" xml:space="preserve">
          <source>Prepares the specified track for recording events received on a particular channel. Once enabled, a track will receive events when recording is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9bbdc37cffa78ca685a4ad22cf374f5c9bccea" translate="yes" xml:space="preserve">
          <source>Prepares the writer to handle a series of calls to the &lt;code&gt;replacePixels&lt;/code&gt; methods. The affected pixel area will be clipped against the supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9f7a31eef4c69e0aacb643f6856372cd6e3247" translate="yes" xml:space="preserve">
          <source>Present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e875951a6f9aa1374d93572de657c12ded57355" translate="yes" xml:space="preserve">
          <source>Presentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbf67e370398db12ec716aefc5f6c1bd9a9643b" translate="yes" xml:space="preserve">
          <source>PresentationDirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded56c5ff1c07b6f10135e8a23f15c676b8171b8" translate="yes" xml:space="preserve">
          <source>PresentationDirection.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386d5c0616633126895ce573cc8e2dd53a6e64df" translate="yes" xml:space="preserve">
          <source>PresentationDirection.getEnumValueTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2029260d6d253039a57c638852ab86540b335a16" translate="yes" xml:space="preserve">
          <source>PresentationDirection.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa520798214762c6668693abb0de9ea5bc75121" translate="yes" xml:space="preserve">
          <source>PresentationDirection.getStringTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c18891376fb54fdfea45101212502bceb47efb9" translate="yes" xml:space="preserve">
          <source>Presents a dialog to the user for selecting a print service (printer). It is displayed at the location specified by the application and is modal. If the specification is invalid or would make the dialog not visible it will be displayed at a location determined by the implementation. The dialog blocks its calling thread and is application modal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313051087916922b64e78246c89af8da06accb09" translate="yes" xml:space="preserve">
          <source>Presents the parameter types as a list (a convenience method). The list will be immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e811b8eea534889d5861ec0bbab4b51f04b0722" translate="yes" xml:space="preserve">
          <source>Presents the parameter types as an array (a convenience method). Changes to the array will not result in changes to the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1a5bf62e44e2e3b37de23daf5ed2076b82b272" translate="yes" xml:space="preserve">
          <source>Preserving stability for &lt;code&gt;distinct()&lt;/code&gt; in parallel pipelines is relatively expensive (requires that the operation act as a full barrier, with substantial buffering overhead), and stability is often not needed. Using an unordered stream source (such as &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significantly more efficient execution for &lt;code&gt;distinct()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;distinct()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b272f0a4e5fa03fbe1e9fa9527c4c8a116ebbc" translate="yes" xml:space="preserve">
          <source>Previous severity associated with the given printer state reason, or &lt;code&gt;null&lt;/code&gt; if the given printer state reason was not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568e306c0dc35ef7ab47b214d507f630086f8df0" translate="yes" xml:space="preserve">
          <source>Previous value for the specified key. Returns null if key was previously unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41519a083509ba68859bad445e1da142cb529a0c" translate="yes" xml:space="preserve">
          <source>Primitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c91eed91b33d9e495a0d99d6caf5e29130e8c61" translate="yes" xml:space="preserve">
          <source>Primitive and object read calls issued from within a readExternal method behave in the same manner--if the stream is already positioned at the end of data written by the corresponding writeExternal method, object reads will throw OptionalDataExceptions with eof set to true, bytewise reads will return -1, and primitive reads will throw EOFExceptions. Note that this behavior does not hold for streams written with the old &lt;code&gt;ObjectStreamConstants.PROTOCOL_VERSION_1&lt;/code&gt; protocol, in which the end of data written by writeExternal methods is not demarcated, and hence cannot be detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe82662850b07a2d090f91f37e7793aa5f0269f" translate="yes" xml:space="preserve">
          <source>Primitive classes (for example, &lt;code&gt;java.lang.Integer.TYPE&lt;/code&gt;) and array classes are never modifiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18d830f7825c0c0513cea85282dc27f3f53e618" translate="yes" xml:space="preserve">
          <source>Primitive data types are not type-safe. For example, a compiler should not allow a &quot;copies&quot; attribute value to be used for a &quot;sides&quot; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0f65c736f0797d80351bdb712a8e76a851a48a" translate="yes" xml:space="preserve">
          <source>Primitive data types can also be written to the stream using the appropriate methods from DataOutput. Strings can also be written using the writeUTF method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46adc03a91d600d5478a9b6f2185ceb906f9f536" translate="yes" xml:space="preserve">
          <source>Primitive data types can be read from the stream using the appropriate method on DataInput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96dd76ae7d72c158be0d5d42fe5901a252a5f31" translate="yes" xml:space="preserve">
          <source>Primitive data write of this String in &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format. Note that there is a significant difference between writing a String into the stream as primitive data or as an Object. A String instance written by writeObject is written into the stream as a String initially. Future writeObject() calls write references to the string into the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d62a368dbee554672180e34a1fd61914d8fa72" translate="yes" xml:space="preserve">
          <source>Primitive data, excluding serializable fields and externalizable data, is written to the ObjectOutputStream in block-data records. A block data record is composed of a header and data. The block data header consists of a marker and the number of bytes to follow the header. Consecutive primitive data writes are merged into one block-data record. The blocking factor used for a block-data record will be 1024 bytes. Each block-data record will be filled up to 1024 bytes, or be written whenever there is a termination of block-data mode. Calls to the ObjectOutputStream methods writeObject, defaultWriteObject and writeFields initially terminate any existing block-data record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42341d2199748c0643b0ae0304965789e27ab271" translate="yes" xml:space="preserve">
          <source>Primitive expresssion: &lt;code&gt;2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e307055abd011cac2849fbff9864f1b30d22610" translate="yes" xml:space="preserve">
          <source>Primitive subtype specializations of &lt;code&gt;Spliterator&lt;/code&gt; are provided for &lt;a href=&quot;spliterator.ofint&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator.oflong&quot;&gt;&lt;code&gt;long&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator.ofdouble&quot;&gt;&lt;code&gt;double&lt;/code&gt;&lt;/a&gt; values. The subtype default implementations of &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; box primitive values to instances of their corresponding wrapper class. Such boxing may undermine any performance advantages gained by using the primitive specializations. To avoid boxing, the corresponding primitive-based methods should be used. For example, &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;. Traversal of primitive values using boxing-based methods &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt; does not affect the order in which the values, transformed to boxed values, are encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2858456e895a65904f75589f3a85277dd845404" translate="yes" xml:space="preserve">
          <source>Primitive value (&lt;code&gt;5&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad3775212069c1918febc1074a53f767626660f" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeceede0e5c9a319f5ffecdfe72e9940b81c584f" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfDouble</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec880dc8e7e486c0441fcd31b4a6caea961789fa" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfDouble.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a330ec2eea48b736e60a43187ad30bbfb457d8bb" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfDouble.next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec612ab8a2d8cae916419ca92fc9eb6b02e49ad9" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfDouble.nextDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff78b07f33a2be368c98a013b203f85b0f78801a" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fce1526693c9c6d00842dd0ae01ee399c7edb0" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfInt.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b6894582e7cd44c926099970bed49d6204b3bd" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfInt.next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223757401800d42857aaa73da85ea541c0e056e1" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfInt.nextInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a271d9586fac382feba24f52fbb718f79f98a16" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfLong</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7d5d24e1b1efec84bc86c194a4402678f55fb9" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfLong.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea0c57380999adce0f91b37440247b619c1810e" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfLong.next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7794beccfc30a6936075715078fb8fd258f6132a" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.OfLong.nextLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c85ea926e91c4a35d0390839fa913e3b05beab2" translate="yes" xml:space="preserve">
          <source>PrimitiveIterator.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e8faef9c7249273431408452df50ab0209192e" translate="yes" xml:space="preserve">
          <source>PrimitiveType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b86b13dbbc1f25f1ed8bc04e7a1e250f26a965" translate="yes" xml:space="preserve">
          <source>Principal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ea4bb601dc290ea03fb551a086bdd16f62a8ee" translate="yes" xml:space="preserve">
          <source>Principal.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a69983a2dbbed83057c6a8138d0a736ee22cf4a" translate="yes" xml:space="preserve">
          <source>Principal.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10151a22e8108757a8fa00d7b76fdc0ddae6fa9" translate="yes" xml:space="preserve">
          <source>Principal.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed353ee360e69de513a6156bec39f54d7dcf5f66" translate="yes" xml:space="preserve">
          <source>Principal.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc55bf4e972476c5f33e13c274ab2f35b320e767" translate="yes" xml:space="preserve">
          <source>Principal.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a990f3b455860f85e59af2e3bbbdba0dae4ab165" translate="yes" xml:space="preserve">
          <source>Principals such as this &lt;code&gt;JMXPrincipal&lt;/code&gt; may be associated with a particular &lt;code&gt;Subject&lt;/code&gt; to augment that &lt;code&gt;Subject&lt;/code&gt; with an additional identity. Refer to the &lt;a href=&quot;../../security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; class for more information on how to achieve this. Authorization decisions can then be based upon the Principals associated with a &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b221e9c2a451799d8f37e2b9874409d5e03ab05" translate="yes" xml:space="preserve">
          <source>Print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a9e400858048d12eeeaf5790b1bc04a8980124" translate="yes" xml:space="preserve">
          <source>Print Job Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e1cb3899eef679d94b3f01e2bd185db2297d54" translate="yes" xml:space="preserve">
          <source>Print Job object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69642d5e31fce7b347402986f7c8320a3c7cdc8a" translate="yes" xml:space="preserve">
          <source>Print Request Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbe33e08d2a982205f0c1507c1799c9f0b9ce6d" translate="yes" xml:space="preserve">
          <source>Print Service Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3b22de2dac7a99e966e6fc421ee8d483d12ff0" translate="yes" xml:space="preserve">
          <source>Print Service Discovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3d409a9d9e391970a8e6a472b3519ba3ccd3de" translate="yes" xml:space="preserve">
          <source>Print Service object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f369ddf8ccfd94eef89062cd2d8d996ea6586e86" translate="yes" xml:space="preserve">
          <source>Print a MultiDoc with the specified job attributes. This method should only be called once for a given print job. Calling it again will not result in a new job being spooled to the printer. The service implementation will define policy for service interruption and recovery. Application clients which want to monitor the success or failure should register a PrintJobListener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ddc7cad09716694365add7a2138bee76241478" translate="yes" xml:space="preserve">
          <source>Print a brief summary of the &lt;code&gt;LogRecord&lt;/code&gt; in a human readable format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb40e546e1079772218d4a73f813c0a5e93fbf7" translate="yes" xml:space="preserve">
          <source>Print a brief summary of the &lt;code&gt;LogRecord&lt;/code&gt; in a human readable format. The summary will typically be 1 or 2 lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcb0a19069acb12f812cc729e68ae74c4377182" translate="yes" xml:space="preserve">
          <source>Print data representation object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191edca08cde80a08c410f34f7ceaee97bc816bb" translate="yes" xml:space="preserve">
          <source>Print each element in order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b746f60b407d2b85d674ccd4cbf2d7bdde1bea" translate="yes" xml:space="preserve">
          <source>Print each element in reverse order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caa79a1537437e6028e17ae28364a6b757f8d37" translate="yes" xml:space="preserve">
          <source>Print first element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d13f94d58c95624745b21ef7afa93c9866c8da" translate="yes" xml:space="preserve">
          <source>Print job attributes report the status of a Print Job. A print job attribute class implements interface &lt;a href=&quot;../printjobattribute&quot;&gt;PrintJobAttribute&lt;/a&gt;. A print job attribute can appear in a &lt;a href=&quot;../printjobattributeset&quot;&gt; PrintJobAttributeSet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53c0b22c1b8c874be9a3db232dc2eb345caad68" translate="yes" xml:space="preserve">
          <source>Print last element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ecb1ac1b57f091c12dfc1d9b3f65ec65bfd829" translate="yes" xml:space="preserve">
          <source>Print request attributes specify the settings to be applied to a whole print job and to all the docs in the print job. A print request attribute class implements interface &lt;a href=&quot;../printrequestattribute&quot;&gt; PrintRequestAttribute&lt;/a&gt;. A print request attribute can appear in a &lt;a href=&quot;../printrequestattributeset&quot;&gt; PrintRequestAttributeSet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1797a9d9abcfbe89d707208efe367c9f8bb60c8c" translate="yes" xml:space="preserve">
          <source>Print service attributes report the status of a print service. A print service attribute class implements interface &lt;a href=&quot;../printserviceattribute&quot;&gt; PrintServiceAttribute&lt;/a&gt;. A print service attribute can appear in a &lt;a href=&quot;../printserviceattributeset&quot;&gt; PrintServiceAttributeSet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de59182723610d3564174ba5ec14e333f1763833" translate="yes" xml:space="preserve">
          <source>Print service implementors should close any print data streams (ie Reader or InputStream implementations) that they obtain from the client doc. Robust clients may still wish to verify this. An exception is always generated if a &lt;code&gt;DocFlavor&lt;/code&gt; cannot be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371128ba21cb84b2d21eff4a3f52ed0794f24e20" translate="yes" xml:space="preserve">
          <source>Print the element at a specified position:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0516d37dd22396e1bfe215e7b604165e4d085e7" translate="yes" xml:space="preserve">
          <source>PrintEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80f1ac6dc182a67d2894bb5be6470b0107e2681" translate="yes" xml:space="preserve">
          <source>PrintEvent.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d632e5cc2591755c961abdbb275e07ef16ffc27" translate="yes" xml:space="preserve">
          <source>PrintException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4341727082830c40535aec8d600305db676ad70b" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97dca35055fa36d4a9d85886051a2b655b20cf6e" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter.printDataTransferCompleted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770b5e1fdbd6b43bbd833bb0df78da41a816cce0" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter.printJobCanceled()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d574aed9ae1575209a82a7793ce4f2c3e3ec8fb4" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter.printJobCompleted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5185f97e2472139831ef8a102f935c9adde3dc1d" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter.printJobFailed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e12aeaa76ada8cb5bd11bdf4b4006a5f58f11dd" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter.printJobNoMoreEvents()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f04b5f32c75a722d6a886f838d96cb007a2f20" translate="yes" xml:space="preserve">
          <source>PrintJobAdapter.printJobRequiresAttention()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74de0a96deb84ca01734361916a2eff12723dbfe" translate="yes" xml:space="preserve">
          <source>PrintJobAttribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac1becb6db47f2b65b27a7811e5c5c1c611d29f" translate="yes" xml:space="preserve">
          <source>PrintJobAttribute is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d608307b07bf914ddbcba8be28131df1a2a93ec1" translate="yes" xml:space="preserve">
          <source>PrintJobAttribute is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job. A Print Service instance adds a number of PrintJobAttributes to a Print Job's attribute set to report the Print Job's status. If an attribute implements &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt; as well as PrintJobAttribute, the client may include the attribute in a attribute set to specify the attribute's value for the Print Job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58d7d9b0a0846308f799a8d8cc1e058e1d4f2a8" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad6c3538a6bd9f4eeaf55c546549b31d4580062" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeEvent.getAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524eb51f96022e9ca97e4262e90a6d0e233166d3" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeEvent.getPrintJob()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ed36223b8ab2c4251d2b29174eeb8810fa6ad5" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d2719ee6192b8318169c432822bdfe0fa7501a" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeListener.attributeUpdate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1056550e7d20c8dd840cc97fc2d575bd58c1c72b" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c84e91fa3b38f5805a339330393e59905b74ec" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeSet.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efa789d4c61a83eab1a0db6dfa6f0ed0e81f11e" translate="yes" xml:space="preserve">
          <source>PrintJobAttributeSet.addAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb60df4f3da9898e578f91d4b66a7146c3f9a41c" translate="yes" xml:space="preserve">
          <source>PrintJobEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73041da0b030bec18e2a917570d56dfb079865db" translate="yes" xml:space="preserve">
          <source>PrintJobEvent.getPrintEventType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117ed00ee1388ad48f5fa8cb417b0e4767917cbd" translate="yes" xml:space="preserve">
          <source>PrintJobEvent.getPrintJob()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3eda72718b727ecc6c2ba3fab543d9ecf774b8" translate="yes" xml:space="preserve">
          <source>PrintJobListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73676a38869b99e8b24a36ee28b0d24272c13424" translate="yes" xml:space="preserve">
          <source>PrintJobListener.printDataTransferCompleted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94ff9b6ee382f93bf5bee2d3a63b51b7d595c0b" translate="yes" xml:space="preserve">
          <source>PrintJobListener.printJobCanceled()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fb8edad580aaa6034f32ca32d134b884887398" translate="yes" xml:space="preserve">
          <source>PrintJobListener.printJobCompleted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b71133144b6a26bd93bcebc005d515e056b991" translate="yes" xml:space="preserve">
          <source>PrintJobListener.printJobFailed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcf1ca311cffb77f85b3d4c1d9e98c1c31dff56" translate="yes" xml:space="preserve">
          <source>PrintJobListener.printJobNoMoreEvents()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ed30ef430086ab0c637bc5e29776839a62cb92" translate="yes" xml:space="preserve">
          <source>PrintJobListener.printJobRequiresAttention()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda3b95cec61008bccc74f8260666406f1b599df" translate="yes" xml:space="preserve">
          <source>PrintQuality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f690779aa904b8870d425a64827d815596c7813" translate="yes" xml:space="preserve">
          <source>PrintQuality.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595558f8d4069a61cb1c440288b6b9a2db996838" translate="yes" xml:space="preserve">
          <source>PrintQuality.getEnumValueTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7741fd9c1f9304869acf8cb17506645f8adffe12" translate="yes" xml:space="preserve">
          <source>PrintQuality.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e627635ac32ead7ca9487f0e5deb83be32ea5bc" translate="yes" xml:space="preserve">
          <source>PrintQuality.getOffset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62c26fb75d2c5c9d1af981a047fd972e6de3c1b" translate="yes" xml:space="preserve">
          <source>PrintQuality.getStringTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060a1dc0758b48870d8cdf495c232e4d7a2d933e" translate="yes" xml:space="preserve">
          <source>PrintRequestAttribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceceb9cdef4d5b6cd5eca458a3e9c3d5a19126e8" translate="yes" xml:space="preserve">
          <source>PrintRequestAttributeSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0ade88c05f5f10ff2a6319601f1919c1f8081a" translate="yes" xml:space="preserve">
          <source>PrintRequestAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintRequestAttributeSet must be instances of interface &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printrequestattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printrequestattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e94ea68b6e912026e1ac86ee767f03dc6d5b5a" translate="yes" xml:space="preserve">
          <source>PrintRequestAttributeSet.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1465c986472f43c0a9c2d68bf566660786bd599d" translate="yes" xml:space="preserve">
          <source>PrintRequestAttributeSet.addAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63773d88d5915c817112612ac84ec8efbc25130" translate="yes" xml:space="preserve">
          <source>PrintService</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce57abcb4d65c41b6b665e0aaff9a413c33167e" translate="yes" xml:space="preserve">
          <source>PrintService.addPrintServiceAttributeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8fab6090c97a77edc43cb3393cc4bd95636ab0" translate="yes" xml:space="preserve">
          <source>PrintService.createPrintJob()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f980e7f51758f656d86af8ea01cac1d16d7f8468" translate="yes" xml:space="preserve">
          <source>PrintService.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6f77c54124bbd5eacb86d7f775eae38cc3de4e" translate="yes" xml:space="preserve">
          <source>PrintService.getAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e346d9cd79da8913d5c36282c86cbd78ba9ed164" translate="yes" xml:space="preserve">
          <source>PrintService.getAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8da5ede02b21b698d9e7bb12fb3c05a876b3d47" translate="yes" xml:space="preserve">
          <source>PrintService.getDefaultAttributeValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea722d5fe9633e0d74e47b7c1aabf589c4567df7" translate="yes" xml:space="preserve">
          <source>PrintService.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1654780e9689b1aab1419c64530925c1f31c804a" translate="yes" xml:space="preserve">
          <source>PrintService.getServiceUIFactory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e765a53b084ce70b451dde8a9e1b2fdacba4ae4" translate="yes" xml:space="preserve">
          <source>PrintService.getSupportedAttributeCategories()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d200dc5d9eba59852ec8b7a99f30f852bf3e1184" translate="yes" xml:space="preserve">
          <source>PrintService.getSupportedAttributeValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae72f93e55106abfef147bc3ec9832f6b8020b1f" translate="yes" xml:space="preserve">
          <source>PrintService.getSupportedDocFlavors()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ada0842232e6f760c905341c170d2ced412e513" translate="yes" xml:space="preserve">
          <source>PrintService.getUnsupportedAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5c47931a262cab3891bf9432d3cd051731b8d2" translate="yes" xml:space="preserve">
          <source>PrintService.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc326cd4fbc691af31fe301958cdc4e3062fa282" translate="yes" xml:space="preserve">
          <source>PrintService.isAttributeCategorySupported()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffbb26e19d5153533c4253f021cb059953a5fd7" translate="yes" xml:space="preserve">
          <source>PrintService.isAttributeValueSupported()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b814a27f17420f3e7e7b4eff906b69be827703" translate="yes" xml:space="preserve">
          <source>PrintService.isDocFlavorSupported()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1893bea508593cff1600be0c230137bddad426" translate="yes" xml:space="preserve">
          <source>PrintService.removePrintServiceAttributeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2981e18369baa6795162d5761140d376f1b5e83b" translate="yes" xml:space="preserve">
          <source>PrintServiceAttribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177d5cc67656074b173fc4abf448f6e30bf45040" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5535dc4281877aa6579249d3993f11fb2acb6316" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeEvent.getAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454ed4c11026e9f6335c11623e7e0e68b09ec4cf" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeEvent.getPrintService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b676fc7bd27f2f51612ca9fe8e1711b0a064a2e1" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a04ae39c10b4726afe0bb69a131fef9f06a22d" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeListener.attributeUpdate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68264c2824f161d660027d63215a6c732d27c438" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60e45e0df649de560fc0ae18ae6f8fddbfa060d" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeSet.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d80d1393e49a4632bffef91311e245bad117f25" translate="yes" xml:space="preserve">
          <source>PrintServiceAttributeSet.addAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5051474d08fcd3a68b770849320b772c96bf744" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495f84562c95b104ddc8266e4c4fe47edd350640" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.getDefaultPrintService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260edc216eed90e4b9819e4e33650d27e824a629" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.getMultiDocPrintServices()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51ee2da590a99af5823c12ef0c4514d9a844fbd" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.getPrintServices()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169aecda7b5705cf25651765e28a1d9e8f56d9cb" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.lookupDefaultPrintService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4250ed602aaa34de0b39c2accef573a1eaa34d2b" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.lookupMultiDocPrintServices()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333152e6afa49ac2e53550c0a8ace0a780ec3cd8" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.lookupPrintServices()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc179a72da5752ee3bf33a8a3e227d49b412308e" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.registerService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc0d5d02874588da4c1d264aeeb2fafc90ffdb0" translate="yes" xml:space="preserve">
          <source>PrintServiceLookup.registerServiceProvider()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb019061cde4344bb241932b290b50a81334a02" translate="yes" xml:space="preserve">
          <source>PrintStream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a13c92342225513c400bf38d8c6a15f1cea6e6" translate="yes" xml:space="preserve">
          <source>PrintStream.append()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249fd455700aea7b9310f6035cb4d69ead6376c6" translate="yes" xml:space="preserve">
          <source>PrintStream.checkError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f2328ff4620627ea38110526f07e56513347a0" translate="yes" xml:space="preserve">
          <source>PrintStream.clearError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08eb9237f1acfc38a460942ba3dee5290be1f68" translate="yes" xml:space="preserve">
          <source>PrintStream.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c05992a698d4b97812e96fbaab13096218234f" translate="yes" xml:space="preserve">
          <source>PrintStream.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c3c3cdacda1f023e6fdbab5cab4be8524608b5" translate="yes" xml:space="preserve">
          <source>PrintStream.format()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12c8d2715c3c361ad33141712ee6238737e68fe" translate="yes" xml:space="preserve">
          <source>PrintStream.print()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d015578406f0b6a79d5462179ac6c17494e8db4" translate="yes" xml:space="preserve">
          <source>PrintStream.printf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5befaf7949e190f85da8b5574e4f142f9f0605" translate="yes" xml:space="preserve">
          <source>PrintStream.println()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be455587d48a62d632f1edc4dca0ee3e0af43e7" translate="yes" xml:space="preserve">
          <source>PrintStream.setError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2869392ea27e2446ac5982a618d1113179fcf588" translate="yes" xml:space="preserve">
          <source>PrintStream.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c78034b6cf260e0b74e36f70d9719abb6fe4ea3" translate="yes" xml:space="preserve">
          <source>PrintWriter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68546d16c61e2710657c53fc9d9eca0be9b15404" translate="yes" xml:space="preserve">
          <source>PrintWriter.append()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b18c152fe612686aefdefe401294162444f5bfa" translate="yes" xml:space="preserve">
          <source>PrintWriter.checkError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bed3871efe1b2c015a75648262cf7bfe236e43" translate="yes" xml:space="preserve">
          <source>PrintWriter.clearError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa032546a1051fe46f0cfd919d5e28456694fe8" translate="yes" xml:space="preserve">
          <source>PrintWriter.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35296dcbdbb5de1ae31528b898774ff54981886f" translate="yes" xml:space="preserve">
          <source>PrintWriter.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55459a4a6ccee5b4220c8523f39a15870ab241d" translate="yes" xml:space="preserve">
          <source>PrintWriter.format()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edddb901e0ee06e56ae9d0bd1dc9a616ed50cee" translate="yes" xml:space="preserve">
          <source>PrintWriter.print()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9712e0d725d029d6772f21d7de30f2e999f9f3" translate="yes" xml:space="preserve">
          <source>PrintWriter.printf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919005963e93c8a0cc9c86c65911d6e4f85726fe" translate="yes" xml:space="preserve">
          <source>PrintWriter.println()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac29eff0672d2d219293048351f8c93b78aa0f6" translate="yes" xml:space="preserve">
          <source>PrintWriter.setError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1c1049dfbaff389012e2d9739dd389347fab08" translate="yes" xml:space="preserve">
          <source>PrintWriter.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f362752ad2f347a3613407e070ea4c2987042b0" translate="yes" xml:space="preserve">
          <source>Printable object -- The client supplies an object that implements interface &lt;a href=&quot;/openjdk~8_gui/java/awt/print/printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt;. The printer calls methods in that interface to obtain the pages to be printed, one by one. For each page, the printer supplies a graphics context, and whatever the client draws in that graphics context gets printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d9d50c96346ddc1151a46718de51977f2f7281" translate="yes" xml:space="preserve">
          <source>Printed as is, in color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f1c9c860b110458f8cd11e36d0fe8f2300f3a5" translate="yes" xml:space="preserve">
          <source>Printed as is, in monochrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287d0f407b592904000f56dcd14fda48b289efed" translate="yes" xml:space="preserve">
          <source>Printed in monochrome, with colors converted to shades of gray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecbc7eef015c72bbe87dcdc7543e0352b660737" translate="yes" xml:space="preserve">
          <source>Printer Control Language document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf25c4b6adbc4a8ee0c4a0aacd78e8bbda63d67" translate="yes" xml:space="preserve">
          <source>PrinterInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0b276801a66aa9b38c4b1290d79cbfa50ff3b2" translate="yes" xml:space="preserve">
          <source>PrinterInfo.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe0bb383921cf2efb243f5abbc6c5c82829e673" translate="yes" xml:space="preserve">
          <source>PrinterInfo.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d634fc28e606fc7b402fff6db2a5ff17b87ed4" translate="yes" xml:space="preserve">
          <source>PrinterInfo.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1a3ed97e8d98d53ad9982dca84f6c3df534eca" translate="yes" xml:space="preserve">
          <source>PrinterIsAcceptingJobs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5d16e0a94dd82cf231e708aa344939cd280c1e" translate="yes" xml:space="preserve">
          <source>PrinterIsAcceptingJobs.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578c18ecd3b1c40c83573f40923f99cce420a71e" translate="yes" xml:space="preserve">
          <source>PrinterIsAcceptingJobs.getEnumValueTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0796c7ea96e1137a741dd978777a1dedb9fc049b" translate="yes" xml:space="preserve">
          <source>PrinterIsAcceptingJobs.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda2fa2217c5088040d7a13fc1fcb5829edb34b6" translate="yes" xml:space="preserve">
          <source>PrinterIsAcceptingJobs.getStringTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272eb0ea0a41e3a20784b5066182e05603774842" translate="yes" xml:space="preserve">
          <source>PrinterLocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969a830b9211758f8276ff6d8e0cab0bf680af88" translate="yes" xml:space="preserve">
          <source>PrinterLocation.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bcbf2f82cc53ca3fbeac74c8d0d8fe0371997b" translate="yes" xml:space="preserve">
          <source>PrinterLocation.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3476779809f8d1f7a5ccb6c350c5303a535fc663" translate="yes" xml:space="preserve">
          <source>PrinterLocation.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb94480cb4a9b1523f2e55047cdb73cc06219b0" translate="yes" xml:space="preserve">
          <source>PrinterMakeAndModel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf915e1743aa3a00d1f831ef395101ad5f446a4f" translate="yes" xml:space="preserve">
          <source>PrinterMakeAndModel.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11efffc77a99de0fbe6a2f89373a361cf8d7d000" translate="yes" xml:space="preserve">
          <source>PrinterMakeAndModel.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abf8d770539e6bc04f607cba8f6e59c2ed2f8a0" translate="yes" xml:space="preserve">
          <source>PrinterMakeAndModel.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f1eb14988a543a7e953cb2164544d3569ebb3b" translate="yes" xml:space="preserve">
          <source>PrinterMessageFromOperator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38fdfab3f40626f89d85266bffd45ca1b200a4d" translate="yes" xml:space="preserve">
          <source>PrinterMessageFromOperator.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593523f11d7871379841c60836c3702004e90549" translate="yes" xml:space="preserve">
          <source>PrinterMessageFromOperator.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92137c3151c10f0082a09cfe946e67f5a098c207" translate="yes" xml:space="preserve">
          <source>PrinterMessageFromOperator.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b38c3734592b43ac25222dabb5d275476310dff" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb09c84002208c46f9c1b0f3a847d29472f2414" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfo.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9a0f4886dd78ad304b4265218d781fab4cc8a0" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfo.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41341b172305d7ac61e34ffeaf845b9badd9dcdc" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfo.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb99a1c57285abd479f95562855e26040e6f685b" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfoManufacturer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99329ad9e1321b530cf1189112780fc55553d08" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfoManufacturer.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7690f7c3979a60857624f94dfee31885d7f68261" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfoManufacturer.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d377a61aa43da070513cd595bd8bd13e1e5f587c" translate="yes" xml:space="preserve">
          <source>PrinterMoreInfoManufacturer.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb5f64d1bd2661d1c6d44059ca821d2fed26556" translate="yes" xml:space="preserve">
          <source>PrinterName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19354bcea7603a1dc79d5b087d411d1a743982c9" translate="yes" xml:space="preserve">
          <source>PrinterName.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7e82334a0febb9bef607fa495d7b72a7d30e58" translate="yes" xml:space="preserve">
          <source>PrinterName.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e73441bc5079d44d62fe322c971f57251dfc26a" translate="yes" xml:space="preserve">
          <source>PrinterName.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d831687cdc258c03223f7341818bd7d76c3914a" translate="yes" xml:space="preserve">
          <source>PrinterResolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f736469bd25d984c3ea00f1cc05e787e82cccfe" translate="yes" xml:space="preserve">
          <source>PrinterResolution is used in multiple ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d9ad78ebedef5b6ce041dd8ecca7c60ce6c0fe" translate="yes" xml:space="preserve">
          <source>PrinterResolution.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354312e12fb0e062d0aa5f3738df33f70ce1f96f" translate="yes" xml:space="preserve">
          <source>PrinterResolution.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55918381f4114fb82922b68d78f3db670a2b71cc" translate="yes" xml:space="preserve">
          <source>PrinterResolution.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3e50d828fa43dbfebacf0f94895b798c4514c8" translate="yes" xml:space="preserve">
          <source>PrinterState</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669cd1f5ead248a73dc31c375554ea9f2145e4ef" translate="yes" xml:space="preserve">
          <source>PrinterState.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6eeacff95b3739c274b442ca3822a576e87011" translate="yes" xml:space="preserve">
          <source>PrinterState.getEnumValueTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd70c0ae46f140f1824db3cb66b0e5caff75219" translate="yes" xml:space="preserve">
          <source>PrinterState.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c865954c44c527e894d3cf0b5b4288a04f35f99" translate="yes" xml:space="preserve">
          <source>PrinterState.getStringTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44b8fbac5aeb40a5ea4e9480076549c2ef971b6" translate="yes" xml:space="preserve">
          <source>PrinterStateReason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395cdb75e1ed400939055c21c9f7925470a35ac3" translate="yes" xml:space="preserve">
          <source>PrinterStateReason.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea0c5703ef9b773e54ebadf64f1174e8e57e596" translate="yes" xml:space="preserve">
          <source>PrinterStateReason.getEnumValueTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6394321aa75ac6eac2082dbc6f3a4bdc04ba5b" translate="yes" xml:space="preserve">
          <source>PrinterStateReason.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e90dbe25249728eff24bef1325c1a9ff0a391ec" translate="yes" xml:space="preserve">
          <source>PrinterStateReason.getStringTable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25c925f4d12144e59ba27f7978757d9ab60e0cd" translate="yes" xml:space="preserve">
          <source>PrinterStateReasons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c83b92aa10a46d74c107db1ac186a5f3c2dd49" translate="yes" xml:space="preserve">
          <source>PrinterStateReasons.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8aa4cf816c91f01509840afe7ee7a130676e79" translate="yes" xml:space="preserve">
          <source>PrinterStateReasons.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7059e774d91c88d140a3a615affe9993b7cb16" translate="yes" xml:space="preserve">
          <source>PrinterStateReasons.printerStateReasonSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5a38582df66a28146ec3b48e8079a009efef5a" translate="yes" xml:space="preserve">
          <source>PrinterStateReasons.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae32b547d5a8920284abc19dc2bfc52b8d871a6" translate="yes" xml:space="preserve">
          <source>PrinterURI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dbc6af75c3f04dbbe45f9b3d81ff109505cd85" translate="yes" xml:space="preserve">
          <source>PrinterURI.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadb8ca729c6ce269133d6aa2138ef79017e4b50" translate="yes" xml:space="preserve">
          <source>PrinterURI.getCategory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d22124ac5cbca82c4f1f0a2c6387a382781a688" translate="yes" xml:space="preserve">
          <source>PrinterURI.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42dd8c22a24bbafed01d871260472b1ac96540b" translate="yes" xml:space="preserve">
          <source>Printing a message with an &lt;a href=&quot;../../tools/diagnostic.kind#ERROR&quot;&gt;error kind&lt;/a&gt; will &lt;a href=&quot;roundenvironment#errorRaised--&quot;&gt;raise an error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d12d0c6e3faa0fb55e93e67f00210158eeda3bd" translate="yes" xml:space="preserve">
          <source>Printing and parsing is based around the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt; class. Instances are generally obtained from &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;, however &lt;a href=&quot;datetimeformatterbuilder&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt;&lt;/a&gt; can be used if more power is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7330ad99426acf501d93cb9a6b71e121d10fdd57" translate="yes" xml:space="preserve">
          <source>Printing attribute class (category), an instance of class &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;java.lang.Class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92257ae35bd04e510cdb63f02d71ee43f577ada7" translate="yes" xml:space="preserve">
          <source>Printing attribute class (category), an instance of class &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;java.lang.Class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5aad33381dd89e5572a55cd03d99503487ac0de" translate="yes" xml:space="preserve">
          <source>Prints a String and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-java.lang.String-&quot;&gt;&lt;code&gt;print(String)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76948b6e6d7118dcc3aa92e920abc121c130ebd0" translate="yes" xml:space="preserve">
          <source>Prints a String and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-java.lang.String-&quot;&gt;&lt;code&gt;print(String)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8eae54ec29dc4fedd61c08cf5530d84d4194eb5" translate="yes" xml:space="preserve">
          <source>Prints a boolean and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-boolean-&quot;&gt;&lt;code&gt;print(boolean)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2faa4bc688f63ccf78712cf4709f6c5696c7f4" translate="yes" xml:space="preserve">
          <source>Prints a boolean value and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-boolean-&quot;&gt;&lt;code&gt;print(boolean)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cce347f4a978b0449cd2e6323e0a790bc3f65e" translate="yes" xml:space="preserve">
          <source>Prints a boolean value. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba81b13ed79276aaebd8cb87883503f55a8d8da2" translate="yes" xml:space="preserve">
          <source>Prints a boolean value. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2976aa447ca9a0a24480604ea5d409abd025132c" translate="yes" xml:space="preserve">
          <source>Prints a character and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-char-&quot;&gt;&lt;code&gt;print(char)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494f6465a8a34b02c4e70bcba8a2b9c9105d4eea" translate="yes" xml:space="preserve">
          <source>Prints a character and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-char-&quot;&gt;&lt;code&gt;print(char)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbea2b7910f2038aece5fd745734e38eeecd8a7" translate="yes" xml:space="preserve">
          <source>Prints a character. The character is translated into one or more bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978ffd208feb814ca4aa11a530fb97d28486f7af" translate="yes" xml:space="preserve">
          <source>Prints a character. The character is translated into one or more bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9d354100865a5a505df74edb0365822582ccb7" translate="yes" xml:space="preserve">
          <source>Prints a document with the specified job attributes. This method should only be called once for a given print job. Calling it again will not result in a new job being spooled to the printer. The service implementation will define policy for service interruption and recovery. When the print method returns, printing may not yet have completed as printing may happen asynchronously, perhaps in a different thread. Application clients which want to monitor the success or failure should register a PrintJobListener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afabcbdd3d557be2dc8bbf122e82750ba8b8b28" translate="yes" xml:space="preserve">
          <source>Prints a double and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-double-&quot;&gt;&lt;code&gt;print(double)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2a085b3cf27f899b4508998ebfc39b5aef977b" translate="yes" xml:space="preserve">
          <source>Prints a double-precision floating-point number and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-double-&quot;&gt;&lt;code&gt;print(double)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3df66dd473e984e53065f7cae569d94ab1702f" translate="yes" xml:space="preserve">
          <source>Prints a double-precision floating-point number. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-double-&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7411e74e17d4e54d551c6adafe28342b04425ee" translate="yes" xml:space="preserve">
          <source>Prints a double-precision floating-point number. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-double-&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1bd5c60419bf2b69d1cacaa8c1902554b22fb1" translate="yes" xml:space="preserve">
          <source>Prints a float and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-float-&quot;&gt;&lt;code&gt;print(float)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0ea987f89ff519ee52f3ee1fba3dec780c5517" translate="yes" xml:space="preserve">
          <source>Prints a floating-point number and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-float-&quot;&gt;&lt;code&gt;print(float)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cf9212a8de6ecda7e40367d25fcc532936ae87" translate="yes" xml:space="preserve">
          <source>Prints a floating-point number. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-float-&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb33beb6ee7cea406a6db53ca6cffc6efb918ecd" translate="yes" xml:space="preserve">
          <source>Prints a floating-point number. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-float-&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9710861ac8878c76b0a0b60f11e1493a3305c5e" translate="yes" xml:space="preserve">
          <source>Prints a long and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-long-&quot;&gt;&lt;code&gt;print(long)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c18eb827b772b2ab53eac0c7fe97eccf6e7550d" translate="yes" xml:space="preserve">
          <source>Prints a long integer and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-long-&quot;&gt;&lt;code&gt;print(long)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1faa064f6ff9683b7938e418b324fa2cc409e4" translate="yes" xml:space="preserve">
          <source>Prints a long integer. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-long-&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6f6fbb13af053b9fc12ba825f8b51e8e8adbbc" translate="yes" xml:space="preserve">
          <source>Prints a long integer. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-long-&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c04907383b599a522990dd9ec8932889693aaa" translate="yes" xml:space="preserve">
          <source>Prints a message of the specified kind at the location of the annotation mirror of the annotated element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f028b5ab363044f6db73c6a6f756f4ae0f770576" translate="yes" xml:space="preserve">
          <source>Prints a message of the specified kind at the location of the annotation value inside the annotation mirror of the annotated element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50414c041364926bd8469bc2434c31fa82849d3d" translate="yes" xml:space="preserve">
          <source>Prints a message of the specified kind at the location of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf4a291e37b20c2f6ba8719ec184586e0f45645" translate="yes" xml:space="preserve">
          <source>Prints a message of the specified kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b773657fa054def2f1f173544f76d41c733d5e09" translate="yes" xml:space="preserve">
          <source>Prints a representation of the elements to the given writer in the specified order. The main purpose of this method is for diagnostics. The exact format of the output is &lt;em&gt;not&lt;/em&gt; specified and is subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9760645bc6f366f7f3cc93dd85b1d48f09dee5c3" translate="yes" xml:space="preserve">
          <source>Prints a stack trace of the current thread to the standard error stream. This method is used only for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebbb70216ac0352dd8bcb6fa84f6e8d5ac1b5a1" translate="yes" xml:space="preserve">
          <source>Prints a string representation of this digest input stream and its associated message digest object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981614b4c99fce2112e25502f687e90de8f6d7db" translate="yes" xml:space="preserve">
          <source>Prints a string representation of this digest output stream and its associated message digest object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd05ee979afdb326d5dbaf2c998599bbd0a94a4" translate="yes" xml:space="preserve">
          <source>Prints a string representation of this permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a22290fe42aca1cc1fd105a7c920ae7788fb65" translate="yes" xml:space="preserve">
          <source>Prints a string. If the argument is &lt;code&gt;null&lt;/code&gt; then the string &lt;code&gt;&quot;null&quot;&lt;/code&gt; is printed. Otherwise, the string's characters are converted into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef2b2a26571b8eb99a879d652ac53039f97a18a" translate="yes" xml:space="preserve">
          <source>Prints a string. If the argument is &lt;code&gt;null&lt;/code&gt; then the string &lt;code&gt;&quot;null&quot;&lt;/code&gt; is printed. Otherwise, the string's characters are converted into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323c29b5341563a8e5c5cd4f5db3e8d12d41ada2" translate="yes" xml:space="preserve">
          <source>Prints an Object and then terminate the line. This method calls at first String.valueOf(x) to get the printed object's string value, then behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-java.lang.String-&quot;&gt;&lt;code&gt;print(String)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffccd2e9470f6c6a4717f1cfd9f0783aa3ab2872" translate="yes" xml:space="preserve">
          <source>Prints an Object and then terminates the line. This method calls at first String.valueOf(x) to get the printed object's string value, then behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-java.lang.String-&quot;&gt;&lt;code&gt;print(String)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8512f8d44c7565c612c5080409ea4ba39a450bb" translate="yes" xml:space="preserve">
          <source>Prints an array of characters and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-char:A-&quot;&gt;&lt;code&gt;print(char[])&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53d98b96b011c8ff437997a32e17a6273b8fab1" translate="yes" xml:space="preserve">
          <source>Prints an array of characters and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-char:A-&quot;&gt;&lt;code&gt;print(char[])&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6644a7d894e548e84454877b95ebfe070050bc8c" translate="yes" xml:space="preserve">
          <source>Prints an array of characters. The characters are converted into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e4033231d8d5cd0a204ae7809cbe0903581327" translate="yes" xml:space="preserve">
          <source>Prints an array of characters. The characters are converted into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cd9013644bb030d1e320deb9e02d6020a9cab8" translate="yes" xml:space="preserve">
          <source>Prints an integer and then terminate the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printstream#print-int-&quot;&gt;&lt;code&gt;print(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printstream#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3213d4e7d2586e2974b823748cd94ccdc78ca28e" translate="yes" xml:space="preserve">
          <source>Prints an integer and then terminates the line. This method behaves as though it invokes &lt;code&gt;&lt;a href=&quot;printwriter#print-int-&quot;&gt;&lt;code&gt;print(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and then &lt;code&gt;&lt;a href=&quot;printwriter#println--&quot;&gt;&lt;code&gt;println()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a751a276ea7377be7b0cb9fdc42126e1b4955bde" translate="yes" xml:space="preserve">
          <source>Prints an integer. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-int-&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396bd8a5ed85d81d8abd5bae75d1b97c9fcbb0d2" translate="yes" xml:space="preserve">
          <source>Prints an integer. The string produced by &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-int-&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c2e761887422cd597086f8366c67215cabe95e" translate="yes" xml:space="preserve">
          <source>Prints an object. The string produced by the &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-java.lang.Object-&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printstream#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954e455f60e7e2db2289a3b2da0af976f5dc9e6d" translate="yes" xml:space="preserve">
          <source>Prints an object. The string produced by the &lt;code&gt;&lt;a href=&quot;../lang/string#valueOf-java.lang.Object-&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method is translated into bytes according to the platform's default character encoding, and these bytes are written in exactly the manner of the &lt;code&gt;&lt;a href=&quot;printwriter#write-int-&quot;&gt;&lt;code&gt;write(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e245846b3a6606d23ce8804c2d0de1b155b6d538" translate="yes" xml:space="preserve">
          <source>Prints formatted representations of objects to a text-output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a29ec7d92133df8dfcb6da495cd2316dd683e9" translate="yes" xml:space="preserve">
          <source>Prints formatted representations of objects to a text-output stream. This class implements all of the &lt;code&gt;print&lt;/code&gt; methods found in &lt;a href=&quot;printstream&quot;&gt;&lt;code&gt;PrintStream&lt;/code&gt;&lt;/a&gt;. It does not contain methods for writing raw bytes, for which a program should use unencoded byte streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25d7b6311a53614c4f7b6c71f04df28379e6940" translate="yes" xml:space="preserve">
          <source>Prints information about this thread group to the standard output. This method is useful only for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd795bee2cc38cfdc12aaa4e0c58e6ceff6ed08" translate="yes" xml:space="preserve">
          <source>Prints the value of this expression using a Java-style syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af8a2a4a97e919e3ff1ad7cb556c11ae6db4656" translate="yes" xml:space="preserve">
          <source>Prints the value of this statement using a Java-style syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d42961cb31713bf1ba9bcd0d167b519fe3e2f5f" translate="yes" xml:space="preserve">
          <source>Prints this property list out to the specified output stream. This method is useful for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a5a6479077192f5f9a0431c501c17f55e75233" translate="yes" xml:space="preserve">
          <source>Prints this throwable and its backtrace to the specified print stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b044738fc499184ae06cc08927ce7b6a67359913" translate="yes" xml:space="preserve">
          <source>Prints this throwable and its backtrace to the specified print writer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f682c1d260cf1ccdfe0fd11ce7cbb89a75367543" translate="yes" xml:space="preserve">
          <source>Prints this throwable and its backtrace to the standard error stream. This method prints a stack trace for this &lt;code&gt;Throwable&lt;/code&gt; object on the error output stream that is the value of the field &lt;code&gt;System.err&lt;/code&gt;. The first line of output contains the result of the &lt;a href=&quot;throwable#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method for this object. Remaining lines represent data previously recorded by the method &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt;. The format of this information depends on the implementation, but the following example may be regarded as typical:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25688a3858ec1ca4556b5d1aeed9f3214d0440f0" translate="yes" xml:space="preserve">
          <source>Prior to JDK 1.1, the class &lt;code&gt;Date&lt;/code&gt; had two additional functions. It allowed the interpretation of dates as year, month, day, hour, minute, and second values. It also allowed the formatting and parsing of date strings. Unfortunately, the API for these functions was not amenable to internationalization. As of JDK 1.1, the &lt;code&gt;Calendar&lt;/code&gt; class should be used to convert between dates and time fields and the &lt;code&gt;DateFormat&lt;/code&gt; class should be used to format and parse date strings. The corresponding methods in &lt;code&gt;Date&lt;/code&gt; are deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89635ced88e2d8a197c07f488f3c7e76e310c6c" translate="yes" xml:space="preserve">
          <source>Prior to JNDI 1.2, this method returned a single schema object representing the class definition of the named object. Since JNDI 1.2, this method returns a &lt;code&gt;DirContext&lt;/code&gt; containing all of the named object's class definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4abacdc37d2425692f6ea98fe9432bea78e62c5" translate="yes" xml:space="preserve">
          <source>Prior to adding something to the &lt;code&gt;StringJoiner&lt;/code&gt;, its &lt;code&gt;sj.toString()&lt;/code&gt; method will, by default, return &lt;code&gt;prefix + suffix&lt;/code&gt;. However, if the &lt;code&gt;setEmptyValue&lt;/code&gt; method is called, the &lt;code&gt;emptyValue&lt;/code&gt; supplied will be returned instead. This can be used, for example, when creating a string using set notation to indicate an empty set, i.e. &lt;code&gt;&quot;{}&quot;&lt;/code&gt;, where the &lt;code&gt;prefix&lt;/code&gt; is &lt;code&gt;&quot;{&quot;&lt;/code&gt;, the &lt;code&gt;suffix&lt;/code&gt; is &lt;code&gt;&quot;}&quot;&lt;/code&gt; and nothing has been added to the &lt;code&gt;StringJoiner&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9875640180746515baf08a6b69f43514c31a3a12" translate="yes" xml:space="preserve">
          <source>Prior to the first time this method is called, the base name will be equal to &lt;code&gt;this.getClass().getName() +
 &quot;Resources&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5a00b9e92ec2c6be298b8c9d7158d8407df3e3" translate="yes" xml:space="preserve">
          <source>Prior to the institution of the Gregorian calendar, New Year's Day was March 25. To avoid confusion, this calendar always uses January 1. A manual adjustment may be made if desired for dates that are prior to the Gregorian changeover and which fall between January 1 and March 24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00f3b2566479998fd4954b825496d48abd2d888" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be2381417da412adf20a4e9898dab9f32cd218c" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d457479b86e021d690331bffa24ec4842a7f23" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0b372e98aa16019ac9829e68cfdac5dc5a5c62" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.comparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb7efcfac6bf9d8d60fad6cfcb9cb8ad0c71842" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.contains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8529ac21b88432cb09f85add562d4baa6d3e7c" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.drainTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97917654977fc12e301179ff512c2f96212fde4d" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26318b4a13b9076cb43dcb0d528925856aa4e161" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.offer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e9e1d41ad9ac219dcb707255e9d14b173691a6" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.peek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538a6fd4837635eedfe1138ba04f3cd34626a22c" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.poll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c449dfbba056f7b472b549d8ef594e27ed96c7" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79cb4770e0771b5436586a9b91da27eb0dc6907" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.remainingCapacity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b36f6795827b1e78fa7a3899d902b34df2961f4" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23163f34f10c1be6614b2f71a661afec154f0e9c" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44490ab8b94e7c070ffdfc62796128a748bf115b" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.spliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1582de0ac5b72b4748ef1bd07d89458195d0cfaf" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7beb83ddb0936ef8407a6070442ab2fff6487b" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e73933b7746c0a3e6c48bca71973447aaf4c40" translate="yes" xml:space="preserve">
          <source>PriorityBlockingQueue.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d0bc625ddec3be511b7a604cf03963963b5cbf" translate="yes" xml:space="preserve">
          <source>PriorityQueue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bed9c5ff9a8c21ad06c45cae83f514853cee6b" translate="yes" xml:space="preserve">
          <source>PriorityQueue.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a6b0d07e38fde4ba46c60c51e434b8002bd470" translate="yes" xml:space="preserve">
          <source>PriorityQueue.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d775fe9d5d8c08b5f85282da18ac21ee2a479cfe" translate="yes" xml:space="preserve">
          <source>PriorityQueue.comparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a88b27eb0939ff3f260c9c74fa046a0fbbf1dc" translate="yes" xml:space="preserve">
          <source>PriorityQueue.contains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a3f0913a39d59309f819229b15087f80ab521" translate="yes" xml:space="preserve">
          <source>PriorityQueue.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5734f73f5c4761d78466417cfb3632172dc1238b" translate="yes" xml:space="preserve">
          <source>PriorityQueue.offer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51538006e4bd060b267576d24d61d24df118dd0" translate="yes" xml:space="preserve">
          <source>PriorityQueue.peek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0084d685cb5de6bd2f8f09a8a280dfc940ab9abe" translate="yes" xml:space="preserve">
          <source>PriorityQueue.poll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0077d6d135dd9c40e54e725ab253cdea2476931f" translate="yes" xml:space="preserve">
          <source>PriorityQueue.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4444c0796aabeca6a59463233515dff32e38af6" translate="yes" xml:space="preserve">
          <source>PriorityQueue.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee3a9b773d7e00b280cfd2b5fd178d186711cfb" translate="yes" xml:space="preserve">
          <source>PriorityQueue.spliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d951b0a120c561c5bc9618163513b43ddd1d2710" translate="yes" xml:space="preserve">
          <source>PriorityQueue.toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beaed0be1238c4bfa17abee4f6ab5a6de5334f8" translate="yes" xml:space="preserve">
          <source>Private keys and certificate chains are used by a given entity for self-authentication. Applications for this authentication include software distribution organizations which sign JAR files as part of releasing and/or licensing software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170ecf0a8a3f585dce03256f6a7f97de63cf21a5" translate="yes" xml:space="preserve">
          <source>Private:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20629e5d3296d6a82f965a4f5442c8332a53241" translate="yes" xml:space="preserve">
          <source>PrivateClassLoader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85c2f4640bb2080331740e77a85010308d1b182" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066a50030ebeabd13c679b2d8b68e523d287f040" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb050ac7293e67c8f179458b2ec7f63226c8a04" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.getActions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe96981fa88bb1f31c7d9654d3b5b1a7cff15e7" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.getCredentialClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda68ad55c8185ff549f0529d53a1753e13bdfc1" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.getPrincipals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aeab00346685cf39de829ba6f6a5d65870b511b" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f2fd4f594aec347cf25fcb4e7b0195886d56bc" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1a3929dbde989eda10223e5508ed65124d55d5" translate="yes" xml:space="preserve">
          <source>PrivateCredentialPermission.newPermissionCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c700cafc6c5743d75c46472de6438e4a5cfd1" translate="yes" xml:space="preserve">
          <source>PrivateKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3abbf9cca4d143541c88f3f1b3aae11b888974" translate="yes" xml:space="preserve">
          <source>PrivateKeyEntry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2430d2165d81c2e1a85f0c40b2e1b7780ffd5218" translate="yes" xml:space="preserve">
          <source>PrivateKeyInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da85c15198bdce8be3ceab67ec9bc9cfd8e05d70" translate="yes" xml:space="preserve">
          <source>PrivateKeyUsage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f1a17a5964abbcdfd5f13ea53c5c8993fcdca6" translate="yes" xml:space="preserve">
          <source>PrivateMLet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4881be4c9cee0bb6297c5ffae5694b3b8157684" translate="yes" xml:space="preserve">
          <source>PrivilegedAction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d47f607eba5a42b589da67b5d63806341a30b71" translate="yes" xml:space="preserve">
          <source>PrivilegedAction is an interface with a single method, named &lt;code&gt;run&lt;/code&gt;. The above example shows creation of an implementation of that interface; a concrete implementation of the &lt;code&gt;run&lt;/code&gt; method is supplied. When the call to &lt;code&gt;doPrivileged&lt;/code&gt; is made, an instance of the PrivilegedAction implementation is passed to it. The &lt;code&gt;doPrivileged&lt;/code&gt; method calls the &lt;code&gt;run&lt;/code&gt; method from the PrivilegedAction implementation after enabling privileges, and returns the &lt;code&gt;run&lt;/code&gt; method's return value as the &lt;code&gt;doPrivileged&lt;/code&gt; return value (which is ignored in this example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b175dcbef12589c8915e5247e48480eb4fd171" translate="yes" xml:space="preserve">
          <source>PrivilegedAction.run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a367b119e10ec036febf5b015e385460fb5316a" translate="yes" xml:space="preserve">
          <source>PrivilegedActionException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9f4d0929dd37b9b11e6a5e482c1b7392cdcc8f" translate="yes" xml:space="preserve">
          <source>PrivilegedActionException.getCause()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55c5a0a1ef3978296134955dbf9fa8c68260a3d" translate="yes" xml:space="preserve">
          <source>PrivilegedActionException.getException()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48afd6c8e12385a59f3b48e51fc00a3b823c2fcc" translate="yes" xml:space="preserve">
          <source>PrivilegedActionException.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1b86de1fdfd964cb4b981074556e58a8bfaf4b" translate="yes" xml:space="preserve">
          <source>PrivilegedExceptionAction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57347346a7961eb477a946acee11b215f1de1091" translate="yes" xml:space="preserve">
          <source>PrivilegedExceptionAction.run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0749f422c7f9a86f3f4d7704f8723ad19ae30419" translate="yes" xml:space="preserve">
          <source>Probably the most common use of &lt;code&gt;EventHandler&lt;/code&gt; is to extract a property value from the &lt;em&gt;source&lt;/em&gt; of the event object and set this value as the value of a property of the target object. In the following example we create an &lt;code&gt;ActionListener&lt;/code&gt; that sets the &quot;label&quot; property of the target object to the value of the &quot;text&quot; property of the source (the value of the &quot;source&quot; property) of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeced28dca17f58efeb75a16fcf833cd5c87f94d" translate="yes" xml:space="preserve">
          <source>Probes the content type of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6fe402cef1d5417abcc5b2711fc81c91a4b427" translate="yes" xml:space="preserve">
          <source>Probes the given file to guess its content type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f4fc86690446181f92996382bc4bb8c3dc10ae" translate="yes" xml:space="preserve">
          <source>Problem diagnosis by developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d18948fcd2725bc1ea8fa1f2c3b7fd5ce7ed08" translate="yes" xml:space="preserve">
          <source>Problem diagnosis by end users and system administrators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd23ee945ee7a7000b3d98b52f19840daff7ad7e" translate="yes" xml:space="preserve">
          <source>Problem diagnosis by field service engineers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959f4bd0dc5ece5ec36a58ad398d7c0aab67eb57" translate="yes" xml:space="preserve">
          <source>Problem diagnosis by the development organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ef8668dac7fe999ff202a201784f8ae8f6e179" translate="yes" xml:space="preserve">
          <source>Problem similar to a warning, but is mandated by the tool's specification. For example, the Java&amp;trade; Language Specification mandates warnings on certain unchecked operations and the use of deprecated methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c9d617e933be5b4b217dbb001c366f4c2787dd" translate="yes" xml:space="preserve">
          <source>Problem type when trying to access an unknown role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1b6183b7a51c41c01b722d5abbe6e365074a77" translate="yes" xml:space="preserve">
          <source>Problem type when trying to read a non-readable attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875873c5545b34840c8e30627ce6d59deb3d396a" translate="yes" xml:space="preserve">
          <source>Problem type when trying to set a role value including the ObjectName of a MBean not of the class expected for that role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34fe5cc786e54a0c89e60c1b867864962d628c2" translate="yes" xml:space="preserve">
          <source>Problem type when trying to set a role value including the ObjectName of a MBean not registered in the MBean Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d851229466f7d106141dd632a4d6c98358ed19a6" translate="yes" xml:space="preserve">
          <source>Problem type when trying to set a role value with less ObjectNames than the minimum expected cardinality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41917fca2404b2930e5ac1d51ad3ae33a9bc9b36" translate="yes" xml:space="preserve">
          <source>Problem type when trying to set a role value with more ObjectNames than the maximum expected cardinality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190b0a6f4fb512135f7ff0dab0767fb1c7928cd3" translate="yes" xml:space="preserve">
          <source>Problem type when trying to update a non-writable attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da23fc7380000059d2c461cfbeacc4db502a2b2" translate="yes" xml:space="preserve">
          <source>Problem which does not usually prevent the tool from completing normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c1b173ccee50054ea46e849201f086bf44775e" translate="yes" xml:space="preserve">
          <source>Problem which prevents the tool's normal completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdf1a13e4f274a6fe5993899a3b699315471c06" translate="yes" xml:space="preserve">
          <source>Process.destroy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef6d96d1090b3fac4f3c19a139160dd13b21bea" translate="yes" xml:space="preserve">
          <source>Process.destroyForcibly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122af5efa1a2ebb01e6c39250c286bd440471ea4" translate="yes" xml:space="preserve">
          <source>Process.exitValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406e35aeab2f07d843c46986d449a07ce3ba021c" translate="yes" xml:space="preserve">
          <source>Process.getErrorStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6e845081ac6c8967bb51e4f8202bc90cc1bfb6" translate="yes" xml:space="preserve">
          <source>Process.getInputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c933924f40b00b8ba50a0042b5f4bebac75208a" translate="yes" xml:space="preserve">
          <source>Process.getOutputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdfd2a22a4eb5cc5b59a283e5e8536cc542c8c5" translate="yes" xml:space="preserve">
          <source>Process.isAlive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e0a7de3f0e2baa37a0cb611518d70d807e4149" translate="yes" xml:space="preserve">
          <source>Process.waitFor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d42abdeda321c822adae1ed5c6234acb031647" translate="yes" xml:space="preserve">
          <source>ProcessBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2a30d649d41be048a6f0542d654cec7f37a063" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c75b719bd0665520e0ab5543edc512f3d39756" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e574fea2d059713c9568e03b317aa2116ac38ef" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.Type.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b28a11211fb30bfec3e9e0a129fb0e41967ea09" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.Type.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b014e346f5fc3c305c175b6b4b770756fdc32274" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.appendTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9076539f500c15cc3f6d5ff77bf090d4c1b887e6" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972262446d3ead4ab9482ae553351ce5eefabe3b" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.file()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6231316c7a45d20812f02976206e0087ab06a369" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.from()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b25c12993d7e12037ba63e7fa7198c6e73ccc66" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea84be3928e29a4322640b649e45c8ea41dda4" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.to()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf09cdfb8872b45664253473639405424664536b" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.Redirect.type()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7de1d208a0f5e9745eca6dcbf83bc899d32c8f" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.command()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef26c995943e0bd4d3e593aa86d6a1168f7c417" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.directory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cad244ce1552a3b5e6876be7aeab1d2f5eb972" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.environment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4af3f4d670c99d71592d395e1f5a170203696b" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.inheritIO()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0c25111e4df4147d66173d7b61b3f308c91c4d" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.redirectError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67932ea913ee404f6b39c9dcb4f315f39f5ff1cd" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.redirectErrorStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f7bc81f1f4ad53fd8c38210aed5a6e881dfef3" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.redirectInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc7d30933f0c4f699736fd4327624bb4161b6aa" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.redirectOutput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf364db648fdc2a06b81764bcf666a896c9052c" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.start()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ccd21e5bc5600016e62880378fc72de115eb5" translate="yes" xml:space="preserve">
          <source>Processes &lt;code&gt;input.remaining()&lt;/code&gt; bytes in the ByteBuffer &lt;code&gt;input&lt;/code&gt;, starting at &lt;code&gt;input.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9434044e3b8e01d36aa3cf18b75e8c7c601238" translate="yes" xml:space="preserve">
          <source>Processes a method invocation on a proxy instance and returns the result. This method will be invoked on an invocation handler when a method is invoked on a proxy instance that it is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5a403cb17a777351d9e0c19ac98d90b14bb926" translate="yes" xml:space="preserve">
          <source>Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor. If &lt;code&gt;true&lt;/code&gt; is returned, the annotation types are claimed and subsequent processors will not be asked to process them; if &lt;code&gt;false&lt;/code&gt; is returned, the annotation types are unclaimed and subsequent processors may be asked to process them. A processor may always return the same boolean value or may vary the result based on chosen criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4176e90c6672c14dcf55abc3d21cdc4001213d7b" translate="yes" xml:space="preserve">
          <source>Processes an element by calling &lt;code&gt;e.accept(this, p)&lt;/code&gt;; this method may be overridden by subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69fee7751bdfce2063e6093c651360aca996d3d" translate="yes" xml:space="preserve">
          <source>Processes the first &lt;code&gt;len&lt;/code&gt; bytes in &lt;code&gt;input&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398ac7b1fa27b12c3ed08fc2f316c3bc90fe23e0" translate="yes" xml:space="preserve">
          <source>Processes the given array of bytes and finishes the MAC operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e69fe704160e334711400b9f270e4ff924efc60" translate="yes" xml:space="preserve">
          <source>Processes the given array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca316ff393343d70155f3371c6592e915aace0c" translate="yes" xml:space="preserve">
          <source>Processes the given byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32ef38dae2a8354eaa06f30ad5fceac9c8e0eb7" translate="yes" xml:space="preserve">
          <source>Processing an input does not rely on the presence of the output of other annotation processors (independence)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3f9bf63536929bcd8f83f01730f4be904821a2" translate="yes" xml:space="preserve">
          <source>Processing elements with an explicit &lt;code&gt;for-&lt;/code&gt;loop is inherently serial. Streams facilitate parallel execution by reframing the computation as a pipeline of aggregate operations, rather than as imperative operations on each individual element. All streams operations can execute either in serial or in parallel. The stream implementations in the JDK create serial streams unless parallelism is explicitly requested. For example, &lt;code&gt;Collection&lt;/code&gt; has methods &lt;a href=&quot;../collection#stream--&quot;&gt;&lt;code&gt;Collection.stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../collection#parallelStream--&quot;&gt;&lt;code&gt;Collection.parallelStream()&lt;/code&gt;&lt;/a&gt;, which produce sequential and parallel streams respectively; other stream-bearing methods such as &lt;a href=&quot;intstream#range-int-int-&quot;&gt;&lt;code&gt;IntStream.range(int, int)&lt;/code&gt;&lt;/a&gt; produce sequential streams but these streams can be efficiently parallelized by invoking their &lt;a href=&quot;basestream#parallel--&quot;&gt;&lt;code&gt;BaseStream.parallel()&lt;/code&gt;&lt;/a&gt; method. To execute the prior &quot;sum of weights of widgets&quot; query in parallel, we would do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a214f5518f77656fbc93901e206ccb4eefbb9c" translate="yes" xml:space="preserve">
          <source>Processing environment providing by the tool framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b143d13b3b74b0609d41591c1830e344d155e" translate="yes" xml:space="preserve">
          <source>Processing input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0c09ea15e3d3a3247ac29b106199d916f825b9" translate="yes" xml:space="preserve">
          <source>Processing streams lazily allows for significant efficiencies; in a pipeline such as the filter-map-sum example above, filtering, mapping, and summing can be fused into a single pass on the data, with minimal intermediate state. Laziness also allows avoiding examining all the data when it is not necessary; for operations such as &quot;find the first string longer than 1000 characters&quot;, it is only necessary to examine just enough strings to find one that has the desired characteristics without examining all of the strings available from the source. (This behavior becomes even more important when the input stream is infinite and not merely large.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c965c807cadd71c527a3ffa7d3853df2b22c504" translate="yes" xml:space="preserve">
          <source>Processing the same input produces the same output (consistency).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6e99f24534ef3bc02aca354bfbdedda4bb124e" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2735f0125d6537eb5b313b39b0ae3e6275ba660b" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getElementUtils()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1084988e0ef1a8f95de26e6a7bb01b29540f6d9" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getFiler()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7cfad74e60c31dadfe8df97a8f0899342d14c6" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getLocale()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955ef435e5ea64e74bfe1d01a40208acbae7f200" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getMessager()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6507ae2ac2898f3ecf047bbed62c983d26861b2b" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getOptions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57a4bd74e709e7190ad4afba426845175666008" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getSourceVersion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083a406e371eee3dd66093fb9fc7b1723474451f" translate="yes" xml:space="preserve">
          <source>ProcessingEnvironment.getTypeUtils()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74d0d4bb546c66fff9ea6bb459c135aaf940616" translate="yes" xml:space="preserve">
          <source>Processor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727b542666d1c39c63d89b6ba5355a1bd8a60eb4" translate="yes" xml:space="preserve">
          <source>Processor.getCompletions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdccd73ce8ef21fdaa7a69295051e44a9fd999a" translate="yes" xml:space="preserve">
          <source>Processor.getSupportedAnnotationTypes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa86e675fd0dd4dfe66e24b7d6ee9b1b97747c3" translate="yes" xml:space="preserve">
          <source>Processor.getSupportedOptions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425499d77c76c514e5ce9ea718b117d9af1af661" translate="yes" xml:space="preserve">
          <source>Processor.getSupportedSourceVersion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54655697be67504994237f402596b0b27985880" translate="yes" xml:space="preserve">
          <source>Processor.init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fd1665e4d37f72225bb465818bd279ae96109f" translate="yes" xml:space="preserve">
          <source>Processor.process()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bbb715f579ddd18ba4608f22b77185645bfefb" translate="yes" xml:space="preserve">
          <source>Processors can indicate a source or class file is generated by including an &lt;a href=&quot;../generated&quot;&gt;&lt;code&gt;@Generated&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f66ed8652698875a1f78b501a820d14c20cf486" translate="yes" xml:space="preserve">
          <source>Produce a series of statements with side effects on &lt;code&gt;newInstance&lt;/code&gt; so that the new instance becomes &lt;em&gt;equivalent&lt;/em&gt; to &lt;code&gt;oldInstance&lt;/code&gt;. In the specification of this method, we mean by equivalent that, after the method returns, the modified instance is indistinguishable from &lt;code&gt;newInstance&lt;/code&gt; in the behavior of all methods in its public API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6c21efee095af5dbd7cf5328a85e6c6fe05d7e" translate="yes" xml:space="preserve">
          <source>Produce the message and include the classname, if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24e3c428801276ea80a521fecf0070ea5cf9781" translate="yes" xml:space="preserve">
          <source>Produce the message and include the message from the nested exception, if there is one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7594c5c128ac566795e16a83cfe79a9003e90d0a" translate="yes" xml:space="preserve">
          <source>Produces a bytecode descriptor representation of the method type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a78e12b644e06bb50b589df69f42bf3e4e4405" translate="yes" xml:space="preserve">
          <source>Produces a method handle equivalent to an invokedynamic instruction which has been linked to this call site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f6a2f0f1f92f5046d87e2dc7c2a641124c3f7e" translate="yes" xml:space="preserve">
          <source>Produces a method handle for a reflected constructor. The type of the method handle will be that of the constructor, with the return type changed to the declaring class. The method handle will perform a &lt;code&gt;newInstance&lt;/code&gt; operation, creating a new instance of the constructor's class on the arguments passed to the method handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5730deac6739e05c7b4243874ed8422bc31da5" translate="yes" xml:space="preserve">
          <source>Produces a method handle for a reflected method. It will bypass checks for overriding methods on the receiver, &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;as if called&lt;/a&gt; from an &lt;code&gt;invokespecial&lt;/code&gt; instruction from within the explicitly specified &lt;code&gt;specialCaller&lt;/code&gt;. The type of the method handle will be that of the method, with a suitably restricted receiver type prepended. (The receiver type will be &lt;code&gt;specialCaller&lt;/code&gt; or a subtype.) If the method's &lt;code&gt;accessible&lt;/code&gt; flag is not set, access checking is performed immediately on behalf of the lookup class, as if &lt;code&gt;invokespecial&lt;/code&gt; instruction were being linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69b9a09559ab0dc14596764314c298a48fd2caf" translate="yes" xml:space="preserve">
          <source>Produces a method handle for a static method. The type of the method handle will be that of the method. (Since static methods do not take receivers, there is no additional receiver argument inserted into the method handle type, as there would be with &lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;findVirtual&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#findSpecial-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-java.lang.Class-&quot;&gt;&lt;code&gt;findSpecial&lt;/code&gt;&lt;/a&gt;.) The method and all its argument types must be accessible to the lookup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17417a4d3f7390d6266e0d8260a3b74fa23f85b" translate="yes" xml:space="preserve">
          <source>Produces a method handle for a virtual method. The type of the method handle will be that of the method, with the receiver type (usually &lt;code&gt;refc&lt;/code&gt;) prepended. The method and all its argument types must be accessible to the lookup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc77b71ee382f135fdb8346689d71ffdac51dd1" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving read access to a non-static field. The type of the method handle will have a return type of the field's value type. The method handle's single argument will be the instance containing the field. Access checking is performed immediately on behalf of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef762151a9877091dc6f0ffe3a55ad1e526767e" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving read access to a reflected field. The type of the method handle will have a return type of the field's value type. If the field is static, the method handle will take no arguments. Otherwise, its single argument will be the instance containing the field. If the field's &lt;code&gt;accessible&lt;/code&gt; flag is not set, access checking is performed immediately on behalf of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac21bc885490088cea502ed72656b6e2b4dc802" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving read access to a static field. The type of the method handle will have a return type of the field's value type. The method handle will take no arguments. Access checking is performed immediately on behalf of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d332c898618d81c345ebbeb8e1fde7cbaeacec95" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving read access to elements of an array. The type of the method handle will have a return type of the array's element type. Its first argument will be the array type, and the second will be &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407002a8a74beeba222fb17d29b057cde40f8f0a" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving write access to a non-static field. The type of the method handle will have a void return type. The method handle will take two arguments, the instance containing the field, and the value to be stored. The second argument will be of the field's value type. Access checking is performed immediately on behalf of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0882593b2d30b401ddc62939591c16dc4825560" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving write access to a reflected field. The type of the method handle will have a void return type. If the field is static, the method handle will take a single argument, of the field's value type, the value to be stored. Otherwise, the two arguments will be the instance containing the field, and the value to be stored. If the field's &lt;code&gt;accessible&lt;/code&gt; flag is not set, access checking is performed immediately on behalf of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4013224978296b44df6ed8a48fd51fe60d7884e1" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving write access to a static field. The type of the method handle will have a void return type. The method handle will take a single argument, of the field's value type, the value to be stored. Access checking is performed immediately on behalf of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589f5e9f5b9d10410510d8224c0305e3a07600cc" translate="yes" xml:space="preserve">
          <source>Produces a method handle giving write access to elements of an array. The type of the method handle will have a void return type. Its last argument will be the array's element type. The first and second arguments will be the array type and int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebcfab68f7f48349ccf422e511f839daf0d6772" translate="yes" xml:space="preserve">
          <source>Produces a method handle of the requested return type which returns the given constant value every time it is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b83fd3be7f65dff576fee6e62e26365cc71abf3" translate="yes" xml:space="preserve">
          <source>Produces a method handle which adapts the calling sequence of the given method handle to a new type, by reordering the arguments. The resulting method handle is guaranteed to report a type which is equal to the desired new type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2c076342fb02d421e71dbd34c3c16b4583130b" translate="yes" xml:space="preserve">
          <source>Produces a method handle which adapts the type of the given method handle to a new type by pairwise argument and return type conversion. The original type and new type must have the same number of arguments. The resulting method handle is guaranteed to report a type which is equal to the desired new type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b9844a0b7c7e75b0785985592659edb84b94d9" translate="yes" xml:space="preserve">
          <source>Produces a method handle which creates an object and initializes it, using the constructor of the specified type. The parameter types of the method handle will be those of the constructor, while the return type will be a reference to the constructor's class. The constructor and all its argument types must be accessible to the lookup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86691e843c448b06574f01eb7b44d54bfe2b727" translate="yes" xml:space="preserve">
          <source>Produces a method handle which returns its sole argument when invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29706ac46a32cf91c2b7859d54d4d62a367a462a" translate="yes" xml:space="preserve">
          <source>Produces a method handle which will discard some dummy arguments before calling some other specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830e6a0cf34280bdf262e1ea9fb2d95735bcc67d" translate="yes" xml:space="preserve">
          <source>Produces a method handle which will invoke any method handle of the given &lt;code&gt;type&lt;/code&gt;, with a given number of trailing arguments replaced by a single trailing &lt;code&gt;Object[]&lt;/code&gt; array. The resulting invoker will be a method handle with the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd664ca9f8dd04506a4d7d8bb363918bdb9c6eb" translate="yes" xml:space="preserve">
          <source>Produces a method handle which will throw exceptions of the given &lt;code&gt;exType&lt;/code&gt;. The method handle will accept a single argument of &lt;code&gt;exType&lt;/code&gt;, and immediately throw it as an exception. The method type will nominally specify a return of &lt;code&gt;returnType&lt;/code&gt;. The return type may be anything convenient: It doesn't matter to the method handle's behavior, since it will never return normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1697ac93670dfe26796c8a47f527353c822b6539" translate="yes" xml:space="preserve">
          <source>Produces a special &lt;em&gt;invoker method handle&lt;/em&gt; which can be used to invoke any method handle compatible with the given type, as if by &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. The resulting invoker will have a type which is exactly equal to the desired type, except that it will accept an additional leading argument of type &lt;code&gt;MethodHandle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f442cc886ae0fc71000d002bd7d0afe65161f761" translate="yes" xml:space="preserve">
          <source>Produces a special &lt;em&gt;invoker method handle&lt;/em&gt; which can be used to invoke any method handle of the given type, as if by &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt;. The resulting invoker will have a type which is exactly equal to the desired type, except that it will accept an additional leading argument of type &lt;code&gt;MethodHandle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1dcaff5cb2a0f9fbb7bac8c621d4a7239a28bf" translate="yes" xml:space="preserve">
          <source>Produces a string representing the hash code value of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae1c7ee8eb6d079b963dcf2f65d26b8ae8d437b" translate="yes" xml:space="preserve">
          <source>Produces a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18a2b8a5ed3c57525deae8908aa89033fe29028" translate="yes" xml:space="preserve">
          <source>Produces an adapter method handle which adapts the type of the current method handle to a new type. The resulting method handle is guaranteed to report a type which is equal to the desired new type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb831070c709a90e20af7af9bfc170cf501bb7e3" translate="yes" xml:space="preserve">
          <source>Produces an early-bound method handle for a non-static method. The receiver must have a supertype &lt;code&gt;defc&lt;/code&gt; in which a method of the given name and type is accessible to the lookup class. The method and all its argument types must be accessible to the lookup object. The type of the method handle will be that of the method, without any insertion of an additional receiver parameter. The given receiver will be bound into the method handle, so that every call to the method handle will invoke the requested method on the given receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d03b4881e89ef30b63a0885db5f0b3c07d91120" translate="yes" xml:space="preserve">
          <source>Produces an early-bound method handle for a virtual method. It will bypass checks for overriding methods on the receiver, &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;as if called&lt;/a&gt; from an &lt;code&gt;invokespecial&lt;/code&gt; instruction from within the explicitly specified &lt;code&gt;specialCaller&lt;/code&gt;. The type of the method handle will be that of the method, with a suitably restricted receiver type prepended. (The receiver type will be &lt;code&gt;specialCaller&lt;/code&gt; or a subtype.) The method and all its argument types must be accessible to the lookup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f720e3eff90c7e5683cd6af27b96744bafd105" translate="yes" xml:space="preserve">
          <source>Produces an instance of the given single-method interface which redirects its calls to the given method handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c25551bd385db5508f1bfa17121f2ae0fba290" translate="yes" xml:space="preserve">
          <source>Produces either &quot;&lt;code&gt;true&lt;/code&gt;&quot; or &quot;&lt;code&gt;false&lt;/code&gt;&quot; as returned by &lt;a href=&quot;../lang/boolean#toString-boolean-&quot;&gt;&lt;code&gt;Boolean.toString(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7bbce4f9737491cc6e2eb49b772c208fc3dca8" translate="yes" xml:space="preserve">
          <source>Produces or recovers a target method handle which is behaviorally equivalent to the unique method of this wrapper instance. The object &lt;code&gt;x&lt;/code&gt; must have been produced by a call to &lt;a href=&quot;methodhandleproxies#asInterfaceInstance-java.lang.Class-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;asInterfaceInstance&lt;/code&gt;&lt;/a&gt;. This requirement may be tested via &lt;a href=&quot;methodhandleproxies#isWrapperInstance-java.lang.Object-&quot;&gt;&lt;code&gt;isWrapperInstance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efcbf21839990c38e44ff80bb65c2509bacd764" translate="yes" xml:space="preserve">
          <source>Programmers do not normally create LoggingPermission objects directly. Instead they are created by the security policy code based on reading the security policy file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08575d5c3957eece79635a3b4f092ed6d37612a3" translate="yes" xml:space="preserve">
          <source>Programmers do not normally create ManagementPermission objects directly. Instead they are created by the security policy code based on reading the security policy file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0532c68f18f669ed265f17fe1e4391db0103bc4d" translate="yes" xml:space="preserve">
          <source>Programming Pearls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8331bc3fd685801aef4a65fa609e34a4ddc172" translate="yes" xml:space="preserve">
          <source>Programs should not count on this method to return the actual number of bytes that could be read without blocking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a2aedab00172d5629beb2543b658b03623b730" translate="yes" xml:space="preserve">
          <source>Programs should not count on this method to return the actual number of bytes that could be read without blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23f9ece73959b3116720bb18c2065371adef6c7" translate="yes" xml:space="preserve">
          <source>Programs that use DataInputStreams for textual input can be localized by replacing each DataInputStream with an appropriate BufferedReader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73ba0aee5d4d042ea0b4431e14e14ccdc74d08f" translate="yes" xml:space="preserve">
          <source>Properties are context-sensitive: properties that apply to all the keystores in a domain are located in the domain clause, and properties that apply only to a specific keystore are located in that keystore's clause. Unless otherwise specified, a property in a keystore clause overrides a property of the same name in the domain clause. All property names are case-insensitive. The following properties are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0a856a45e9583a42359e9bfb587b60011a2da7" translate="yes" xml:space="preserve">
          <source>Properties are processed in terms of lines. There are two kinds of line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93f062f0d99389e76e9822b2f2210112528bba3" translate="yes" xml:space="preserve">
          <source>Properties can be used to specify default MIDI devices. Both system properties and a properties file are considered. The &lt;code&gt;sound.properties&lt;/code&gt; properties file is read from an implementation-specific location (typically it is the &lt;code&gt;lib&lt;/code&gt; directory in the Java installation directory). If a property exists both as a system property and in the properties file, the system property takes precedence. If none is specified, a suitable default is chosen among the available devices. The syntax of the properties file is specified in &lt;a href=&quot;../../../java/util/properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;Properties.load&lt;/code&gt;&lt;/a&gt;. The following table lists the available property keys and which methods consider them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a377c49860b2c6285213945dc3262e893f4c6c4b" translate="yes" xml:space="preserve">
          <source>Properties can be used to specify the default mixer for specific line types. Both system properties and a properties file are considered. The &lt;code&gt;sound.properties&lt;/code&gt; properties file is read from an implementation-specific location (typically it is the &lt;code&gt;lib&lt;/code&gt; directory in the Java installation directory). If a property exists both as a system property and in the properties file, the system property takes precedence. If none is specified, a suitable default is chosen among the available devices. The syntax of the properties file is specified in &lt;a href=&quot;../../../java/util/properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;Properties.load&lt;/code&gt;&lt;/a&gt;. The following table lists the available property keys and which methods consider them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc130910b0fd67d927db1945ef63b0fecdb3aa26" translate="yes" xml:space="preserve">
          <source>Properties from the defaults table of this &lt;code&gt;Properties&lt;/code&gt; table (if any) are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875a64623d188c51791cd92fd46c3325119e29e5" translate="yes" xml:space="preserve">
          <source>Properties.getProperty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917ee4ab7702628439a506c9d370f4b36df07de8" translate="yes" xml:space="preserve">
          <source>Properties.list()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a262115aa4175b50db064f9a549ae6bc24598c" translate="yes" xml:space="preserve">
          <source>Properties.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b9acda5edabbb901893f07a87635bb0a70238d" translate="yes" xml:space="preserve">
          <source>Properties.loadFromXML()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ddc72425be295e34b1486261ed4f15c822e79d" translate="yes" xml:space="preserve">
          <source>Properties.propertyNames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f966a4b9abe559925f4f92b968292e5d0a61ec65" translate="yes" xml:space="preserve">
          <source>Properties.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfdc9acbad767d99e9ea382ac041308971c2b69" translate="yes" xml:space="preserve">
          <source>Properties.setProperty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd56a11b812ce5a8549330685dae5dc7d66d2f44" translate="yes" xml:space="preserve">
          <source>Properties.store()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19ed9264ea5a577d6be62cbf2d780d37ddb148d" translate="yes" xml:space="preserve">
          <source>Properties.storeToXML()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cf8295b9dc80e6ac4f4d6241f097a5312d3f44" translate="yes" xml:space="preserve">
          <source>Properties.stringPropertyNames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ce5c3d1d0c70e4d1f670e6abfe8e87539af388" translate="yes" xml:space="preserve">
          <source>Property Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de846e277b8bd927a270771b3af25c725c98b4a" translate="yes" xml:space="preserve">
          <source>Property Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d977d7fb9f3b7331cbdfd9bd79e715b5947aabd" translate="yes" xml:space="preserve">
          <source>Property indicating that the unpacker should ignore all transmitted values for DEFLATE_HINT, replacing them by the given value, &lt;a href=&quot;pack200.unpacker#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pack200.unpacker#FALSE&quot;&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/a&gt;. The default value is the special string &lt;a href=&quot;pack200.unpacker#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, which asks the unpacker to preserve all transmitted deflation hints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc8a87825552cf0bc5df5150b405b37687ba874" translate="yes" xml:space="preserve">
          <source>Property key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882372b5f7a2c962d5ae2bc7515f3bd86b9ed7bb" translate="yes" xml:space="preserve">
          <source>Property value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e70969eb1eea86d415a58212ccec45a11f2597" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e530ff445b731f2adf7349df153f1fd47bbdaf7a" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent.getNewValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acd1e69112e895973482f0baae61ff41c9863cb" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent.getOldValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92a16f86ba1d9b3643c13cd011286cc83615147" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent.getPropagationId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b811154fae2af21797f5ba1eabe3f42234e07119" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent.getPropertyName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead52f6fa45e7cf3b3e5f49ae9132647e13d33c7" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent.setPropagationId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bcbd2bf729e4164da6e19ed192de3a96ba985f" translate="yes" xml:space="preserve">
          <source>PropertyChangeEvent.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fed196a237eb015a9be005d83d3c2ccec002c7" translate="yes" xml:space="preserve">
          <source>PropertyChangeListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebbac3655b6e4ead7ed233136cd6ddd48b329bb" translate="yes" xml:space="preserve">
          <source>PropertyChangeListener.propertyChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19651262bb2649c0346ad5108a5f81af5cbaf100" translate="yes" xml:space="preserve">
          <source>PropertyChangeListenerProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3179d33dba4c9ea046c10fd7f35594562d9410d" translate="yes" xml:space="preserve">
          <source>PropertyChangeListenerProxy.getPropertyName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1d1c037e1951a9c6e8b53f48269597c82f4485" translate="yes" xml:space="preserve">
          <source>PropertyChangeListenerProxy.propertyChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d7f70ba580c2d06a06578e7a3cf44df5152393" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894295a51d01edfa82be70f67dc75a0c416fd9d4" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport.addPropertyChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea4add0176bf072e35c9b028b8df6bf0abd4264" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport.fireIndexedPropertyChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d355577dab1b7ebcc3a22129cb3337d65c519cb" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport.firePropertyChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974ae97c2d4999b04289d93b605e034a4b81621e" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport.getPropertyChangeListeners()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16316040c32d9442c2012de1c85642ecb44af51" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport.hasListeners()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3acd16f9902c664075e5880567b6e0cd6f7c38b" translate="yes" xml:space="preserve">
          <source>PropertyChangeSupport.removePropertyChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566eeaac2e26280e57223eeca0a897b51a4a7c1b" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24987519504187180438353595fb66a5d03de12e" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.createPropertyEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9ca80d6647e1f786c1d612556034c92e6d2379" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2273cf74689b0e35c58b7b7186910cab4690ffe" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.getPropertyEditorClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e0e06196598775b42cd2cd55607245fdc81e72" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.getPropertyType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e887e3e7eb650b0cb389c48ccc12428f04ba13eb" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.getReadMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90331ab96dd925c64718891c85f766e1d16c7b5c" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.getWriteMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c3ac1fded341dcc3d391acefac731add29cb3a" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0629d9429c0ec3b910ea4fff9f371f094b665d" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.isBound()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f2a1407539e646529e78f09e143257a157472f" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.isConstrained()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16972c7526807a02c7753aae184ef23034bfa287" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.setBound()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4889a291c8402a7bea690d4ea64ad03bcbc80c33" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.setConstrained()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2726400c9c8d07a55b6c60503d578c497828dff" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.setPropertyEditorClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf41a3bb7597beaeceb1087bf1022ba9e4ff8aa" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.setReadMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d53def3f9aa41fe04c5aaa6b95b45bd970127be" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor.setWriteMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64748523f22ee76d2e67d2e84ec2f299c0fe6873" translate="yes" xml:space="preserve">
          <source>PropertyEditor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede07b5ff5900e32c61d9ea8833fab8e012f5e7e" translate="yes" xml:space="preserve">
          <source>PropertyEditor supports a variety of different kinds of ways of displaying and updating property values. Most PropertyEditors will only need to support a subset of the different options available in this API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7e1f75cc2536ca703966ed9257ee2d7cfc5010" translate="yes" xml:space="preserve">
          <source>PropertyEditor.addPropertyChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04594c5d6c99ce513af4f94f319b9d19d10acba" translate="yes" xml:space="preserve">
          <source>PropertyEditor.getAsText()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2f2e07e53cf4d98529eb5c950de1307e7cd5d3" translate="yes" xml:space="preserve">
          <source>PropertyEditor.getCustomEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07ade280795c4f49f7daa370cf9778555d49c4f" translate="yes" xml:space="preserve">
          <source>PropertyEditor.getJavaInitializationString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5d62d2e029e2e7a51e03693fa548274e94e5f7" translate="yes" xml:space="preserve">
          <source>PropertyEditor.getTags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a760e3246c920455837ef3f36146c9b5d12919" translate="yes" xml:space="preserve">
          <source>PropertyEditor.getValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eaeb29ce7a1f237a72d7973a6f0bf67d53a1e7" translate="yes" xml:space="preserve">
          <source>PropertyEditor.isPaintable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38ef40d0ae4d36e32647c1499ea7cc6e7f4e0f1" translate="yes" xml:space="preserve">
          <source>PropertyEditor.paintValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bb000629895f24335108de2f8aa0ed642f563f" translate="yes" xml:space="preserve">
          <source>PropertyEditor.removePropertyChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34baf7ebba43e9ac70e4f5422287743f9db20f6" translate="yes" xml:space="preserve">
          <source>PropertyEditor.setAsText()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360d71e1c8d21926e6927b31c6e957c36d63e99b" translate="yes" xml:space="preserve">
          <source>PropertyEditor.setValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32616b76ce8d73335b4a007ce354eb8d1058f0e" translate="yes" xml:space="preserve">
          <source>PropertyEditor.supportsCustomEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9196bd7757c9ccf33c7469e658930fd4d2d720" translate="yes" xml:space="preserve">
          <source>PropertyEditorManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babbd9ae4719ec61031a4caafa0688d6162578e9" translate="yes" xml:space="preserve">
          <source>PropertyEditorManager.findEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2af92e83d2b7dca69ed08d5ced1550db7c145f" translate="yes" xml:space="preserve">
          <source>PropertyEditorManager.getEditorSearchPath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530eccc7e1bf0c0b2b932488906d5f8806a19a07" translate="yes" xml:space="preserve">
          <source>PropertyEditorManager.registerEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6717825af71e95415687c9e5bf7a87f992b47183" translate="yes" xml:space="preserve">
          <source>PropertyEditorManager.setEditorSearchPath()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27329bc46118eedccc502b28ba7efa7d0a84266" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89b30c5039a7b4d8a2ee86f84a8a775cd73c167" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.addPropertyChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1ec93dfa7f5b9c2bfafe3fc63185909c901f91" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.firePropertyChange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e86177e67012ed5d597c50fb9f2a5b6c900104" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.getAsText()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e482bc6dfd7ac4ba84c1af16b49542cc3d482d4f" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.getCustomEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887daece968a79b051d5d3b56c222c42f0f0d5e9" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.getJavaInitializationString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97802bed990e4138fc07be0e9ae271a3cf753dc7" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.getSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd7bcc770b38509d7ee7d847ae387ea7f98e61e" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.getTags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de620fd8f85644a0a2da6f4c9431ba2f7a9a6ae" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.getValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ff1ea8aa50349f1600568c5e1183c259c640ee" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.isPaintable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966da17116285ea76b35d88357ddbf48db694165" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.paintValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3b63b5b06e8886899874dfca0bb1888260ace8" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.removePropertyChangeListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3a7d93f4c54c592052acaa3a6ca03184e29f2e" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.setAsText()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a70845ecb1d9372a713b93b812e7ccba4a698a1" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.setSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42a4d8a63037bd16c59a53e51bce67647383287" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.setValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b31b00cb7900865b391b7bb94749c80c7a3e0dc" translate="yes" xml:space="preserve">
          <source>PropertyEditorSupport.supportsCustomEditor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a5e3163f2e2f065e8fd9e588546aa2bfa49930" translate="yes" xml:space="preserve">
          <source>PropertyPermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00b6b7fbc31a44dab893cd4fc85d31bacc2a7ac" translate="yes" xml:space="preserve">
          <source>PropertyPermission.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11591e8db45e6c33874c34228b76bc8722ca504" translate="yes" xml:space="preserve">
          <source>PropertyPermission.getActions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97ddfda8fdf9dbc3f6353206f8d46cf22bc754b" translate="yes" xml:space="preserve">
          <source>PropertyPermission.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34deec84c12b492a205770253b861e8e42ba24d9" translate="yes" xml:space="preserve">
          <source>PropertyPermission.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb971b24ec73636bb4371e35caac10c70546423" translate="yes" xml:space="preserve">
          <source>PropertyPermission.newPermissionCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebdb7f2ea7e336a3e9ad662a06a0182c0288369" translate="yes" xml:space="preserve">
          <source>PropertyResourceBundle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e739df52bcd619f9c77d44f7ce2fc17e7a5a94" translate="yes" xml:space="preserve">
          <source>PropertyResourceBundle.getKeys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ed0938327c3a1af732759b31b8f1719ecf43a0" translate="yes" xml:space="preserve">
          <source>PropertyResourceBundle.handleGetObject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a3a74b5a1c2f5fed7c3a4ddf87ca1d9d515503" translate="yes" xml:space="preserve">
          <source>PropertyResourceBundle.handleKeySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed22fef36ff0289dec1703d78578e14fa8c27f3" translate="yes" xml:space="preserve">
          <source>PropertyVetoException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867e1f08669b1d76919240f86e6208effa3c37c4" translate="yes" xml:space="preserve">
          <source>PropertyVetoException.getPropertyChangeEvent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff54c7f8da0159f9f8171bfd7e3b70413ff0f10" translate="yes" xml:space="preserve">
          <source>Protected constructor may be called only by subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604cc424920f6801863fec50215f1d1b67d0bef4" translate="yes" xml:space="preserve">
          <source>Protected constructor. This is protected so that container applications (such as J2EE containers) can subclass the object. It is non-public as it is intended that there only be one LogManager object, whose value is retrieved by calling LogManager.getLogManager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1860e4d8273d4e2001af82b7c3b2d5247e06da98" translate="yes" xml:space="preserve">
          <source>Protected convenience method to report an error to this Handler's ErrorManager. Note that this method retrieves and uses the ErrorManager without doing a security check. It can therefore be used in environments where the caller may be non-privileged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2862deb84932f3000000c16e4dd07839cbf772cf" translate="yes" xml:space="preserve">
          <source>Protected do-nothing constructor for use by subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a322e24ddcdf48743f0edd385cb2f093f85817f9" translate="yes" xml:space="preserve">
          <source>Protected method invoked when this task transitions to state &lt;code&gt;isDone&lt;/code&gt; (whether normally or via cancellation). The default implementation does nothing. Subclasses may override this method to invoke completion callbacks or perform bookkeeping. Note that you can query status inside the implementation of this method to determine whether this task has been cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456fc9d4630bc5e9c4b40a89729833047db32e7d" translate="yes" xml:space="preserve">
          <source>Protected method to construct a logger for a named subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6c7cc3f9fa1a83856539e0d462adb0b9c0a0f0" translate="yes" xml:space="preserve">
          <source>ProtectionDomain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae07357b8ad6da594e880799a876124a8c74eec4" translate="yes" xml:space="preserve">
          <source>ProtectionDomain.getClassLoader()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcece39c4ace47ef807b4ed7eeb673f53a9a7da0" translate="yes" xml:space="preserve">
          <source>ProtectionDomain.getCodeSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033b4e476298d07725d6c5e423bc0a2494d10ce2" translate="yes" xml:space="preserve">
          <source>ProtectionDomain.getPermissions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9924ac3a6f305bce2ccd849fd4411e180c6de6" translate="yes" xml:space="preserve">
          <source>ProtectionDomain.getPrincipals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991c8e92dbb18f304f34b132c9d4eedfcfe933be" translate="yes" xml:space="preserve">
          <source>ProtectionDomain.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6ca5ef997b74e52a37a9d33e5c833a9fde1803" translate="yes" xml:space="preserve">
          <source>ProtectionDomain.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad84ba863e6e32900016a2189e11a93496d4663b" translate="yes" xml:space="preserve">
          <source>Protocol Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51531edb713cc6adab458fa2029529bd895cf886" translate="yes" xml:space="preserve">
          <source>Protocol handlers for additional protocols may also be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32cf93792442abdae2a0c3020b7f0cf37d719ec" translate="yes" xml:space="preserve">
          <source>Protocol handlers for the following protocols are guaranteed to exist on the search path :-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac155231cecab6983e55223346680138282cafde" translate="yes" xml:space="preserve">
          <source>ProtocolException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db36d19801ec5c957baa39557adaa356154700b5" translate="yes" xml:space="preserve">
          <source>ProtocolFamily</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce0c4943a7573e95b9e9e02ae3d756453cf827e" translate="yes" xml:space="preserve">
          <source>ProtocolFamily.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9a037e680e1b222537dc5905918fafb62b36c8" translate="yes" xml:space="preserve">
          <source>Provide a way for subclasses that are completely reimplementing ObjectInputStream to not have to allocate private data just used by this implementation of ObjectInputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e6ff041938658b287a48cd833e37e7cfa9d87d" translate="yes" xml:space="preserve">
          <source>Provide a way for subclasses that are completely reimplementing ObjectOutputStream to not have to allocate private data just used by this implementation of ObjectOutputStream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241d9d82deb2f378bd02a31516262a8a49cce837" translate="yes" xml:space="preserve">
          <source>Provide access to the persistent fields read from the input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cdc6e6732e24c7cacbd384a4fa0d3cb7fe463f" translate="yes" xml:space="preserve">
          <source>Provide programmatic access to the persistent fields to be written to ObjectOutput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e364002594774ea6eb5a3634b0ae7df75039f0" translate="yes" xml:space="preserve">
          <source>Provider Resource Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331850ff24cfab7dff4cf162924747ec3888d7ae" translate="yes" xml:space="preserve">
          <source>Provider for audio file reading services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a084becffe55deef34cfd5f19faca943cab000d" translate="yes" xml:space="preserve">
          <source>Provider for audio file reading services. Classes providing concrete implementations can parse the format information from one or more types of audio file, and can produce audio input streams from files of these types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d2167cd38cbafb27a7504a6c8d094bc0e1986e" translate="yes" xml:space="preserve">
          <source>Provider for audio file writing services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c82b1aba3c9fd17172abd28001a582021a1a4e" translate="yes" xml:space="preserve">
          <source>Provider for audio file writing services. Classes providing concrete implementations can write one or more types of audio file from an audio stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08b9eccde84d906577edb637af5e6f129148123" translate="yes" xml:space="preserve">
          <source>Provider implementations must be packaged using the Java Extension Mechanism as installed extensions. Refer to &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; for the extension packaging. Any installed &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; implementations are loaded using &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; at the &lt;code&gt;ResourceBundle&lt;/code&gt; class loading time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c485d9c61f684f7e69af87ba2e8f95984f014b" translate="yes" xml:space="preserve">
          <source>Provider implementations of this interface must overwrite the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods inherited from &lt;a href=&quot;../../java/lang/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, so that secret keys are compared based on their underlying key material and not based on reference. Implementations should override the default &lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;isDestroyed&lt;/code&gt; methods from the &lt;a href=&quot;../security/auth/destroyable&quot;&gt;&lt;code&gt;Destroyable&lt;/code&gt;&lt;/a&gt; interface to enable sensitive key information to be destroyed, cleared, or in the case where such information is immutable, unreferenced. Finally, since &lt;code&gt;SecretKey&lt;/code&gt; is &lt;code&gt;Serializable&lt;/code&gt;, implementations should also override &lt;a href=&quot;../../java/io/objectoutputstream#writeObject-java.lang.Object-&quot;&gt;&lt;code&gt;ObjectOutputStream.writeObject(java.lang.Object)&lt;/code&gt;&lt;/a&gt; to prevent keys that have been destroyed from being serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52576f63f3b111e94e8a4cd6787fb2756335fd4b" translate="yes" xml:space="preserve">
          <source>Provider of time-zone rules to the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b3276e70f10b67689124fd5aefc6bb1a405921" translate="yes" xml:space="preserve">
          <source>Provider.Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8d96ec0ca5c27bc9397b02bdef8f40a46b7bd3" translate="yes" xml:space="preserve">
          <source>Provider.Service.getAlgorithm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e520248706e9f95033b580f2c3cf28b16f4c63a4" translate="yes" xml:space="preserve">
          <source>Provider.Service.getAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e208bf16014f253a2c668bd3c72ef0c81a902d22" translate="yes" xml:space="preserve">
          <source>Provider.Service.getClassName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a4df1d89c398aa47730d9d04cf1607e12db5e2" translate="yes" xml:space="preserve">
          <source>Provider.Service.getProvider()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de94b19dd204c6a78e0202ef123e8e31b5324987" translate="yes" xml:space="preserve">
          <source>Provider.Service.getType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8903f3e8d42d70e68469d514082791d99eea513b" translate="yes" xml:space="preserve">
          <source>Provider.Service.newInstance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686a04931aac9eb1b29b0eaf0b0e54c2bd90de53" translate="yes" xml:space="preserve">
          <source>Provider.Service.supportsParameter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b12ade0b062c017a69bd2bdb5c046ef69317af5" translate="yes" xml:space="preserve">
          <source>Provider.Service.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9e0b6c2e26899846784979763f35844733f58e" translate="yes" xml:space="preserve">
          <source>Provider.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d020a9abb6bb33aaa3a6dca07149e9098c74dd90" translate="yes" xml:space="preserve">
          <source>Provider.compute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ee9f3ffd18f11b4ebf30062f0c865d848a2ac8" translate="yes" xml:space="preserve">
          <source>Provider.computeIfAbsent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1efc1d0b8e7948cfdd541ce7c9c4d6151e37c02" translate="yes" xml:space="preserve">
          <source>Provider.computeIfPresent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80891d0bf99879ec876c272f06005f26813812a3" translate="yes" xml:space="preserve">
          <source>Provider.elements()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991066f3eccc9e2c7827634d4706ff8b49eee958" translate="yes" xml:space="preserve">
          <source>Provider.entrySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4602a49bbd3fa70c0fe91d42c05f27bbfc85a2b3" translate="yes" xml:space="preserve">
          <source>Provider.forEach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5047c3e0d245b4f1b5eb80d769a485db68b775" translate="yes" xml:space="preserve">
          <source>Provider.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87eb31d489c099d85862ca635d19c52c80bfd161" translate="yes" xml:space="preserve">
          <source>Provider.getInfo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842f17addf2078fab1303c0c32380d9631f4674c" translate="yes" xml:space="preserve">
          <source>Provider.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05274818e3fa373c93370bf6b02d182691f297b" translate="yes" xml:space="preserve">
          <source>Provider.getOrDefault()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de031536385b9c18b6ade053b124dc4ed0e57a06" translate="yes" xml:space="preserve">
          <source>Provider.getProperty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c15b26fe965d4eeb88b16de08ce2df928a43f9" translate="yes" xml:space="preserve">
          <source>Provider.getService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b179cf2ac46401f50b42ad26e939d146636f2ffc" translate="yes" xml:space="preserve">
          <source>Provider.getServices()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbecc340bcf0857567ef118d7a4fb716113be0e" translate="yes" xml:space="preserve">
          <source>Provider.getVersion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cff1b0b3ef9dde9b7bec271f7d3c3317d139514" translate="yes" xml:space="preserve">
          <source>Provider.keySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171a69b13c6ac10d44fd1f1a1248a845c50ed56f" translate="yes" xml:space="preserve">
          <source>Provider.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8032f345792b0a8156be31f504adbf25b9cf2d39" translate="yes" xml:space="preserve">
          <source>Provider.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a158d61de10241fd56afaf2c9a5ed35fed92d279" translate="yes" xml:space="preserve">
          <source>Provider.merge()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a639c9071d6ce59cb964900b44e1612aafceaf56" translate="yes" xml:space="preserve">
          <source>Provider.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90068b691cc63e1f1a60b248542b6613020bb7f" translate="yes" xml:space="preserve">
          <source>Provider.putAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211b1eb495ec67206e29091ff3e5ce92e3ea7fef" translate="yes" xml:space="preserve">
          <source>Provider.putIfAbsent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7d5104d8469ece3d26953c0372834fd847deeb" translate="yes" xml:space="preserve">
          <source>Provider.putService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b8a4e5e66e82daa4d8a8451ccbf30db0157500" translate="yes" xml:space="preserve">
          <source>Provider.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5958e7a787c131df1483191bd945738e8a5d0b" translate="yes" xml:space="preserve">
          <source>Provider.removeService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af7baf51327fb89a90d024355b0cf3c303eb2b4" translate="yes" xml:space="preserve">
          <source>Provider.replace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef4aaca530100bbb559718d55a3bde8659df0aa" translate="yes" xml:space="preserve">
          <source>Provider.replaceAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d15f111686b86b9337be20c366350a69437caa9" translate="yes" xml:space="preserve">
          <source>Provider.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08927d65775e322657cdb8daa03a0b4892bfc16e" translate="yes" xml:space="preserve">
          <source>Provider.values()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
