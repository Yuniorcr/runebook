<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="5758e4acc740b74f1820a1cc1655834eef9e05a3" translate="yes" xml:space="preserve">
          <source>DoubleAdder.floatValue()</source>
          <target state="translated">DoubleAdder.floatValue()</target>
        </trans-unit>
        <trans-unit id="9d5526a5e41a4832883ce052486746b09e4fb64d" translate="yes" xml:space="preserve">
          <source>DoubleAdder.intValue()</source>
          <target state="translated">DoubleAdder.intValue()</target>
        </trans-unit>
        <trans-unit id="142493c040dddccba370f4cde9b20e7dbf466fc9" translate="yes" xml:space="preserve">
          <source>DoubleAdder.longValue()</source>
          <target state="translated">DoubleAdder.longValue()</target>
        </trans-unit>
        <trans-unit id="c3cf3ddb50f206795678a2bfbdf041251a8c8f83" translate="yes" xml:space="preserve">
          <source>DoubleAdder.reset()</source>
          <target state="translated">DoubleAdder.reset()</target>
        </trans-unit>
        <trans-unit id="4812637cd65c155d17f0d4e2df9496278ec3a4d1" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sum()</source>
          <target state="translated">DoubleAdder.sum()</target>
        </trans-unit>
        <trans-unit id="6963d57010b167f1d8de8659cfc24c675a331c76" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sumThenReset()</source>
          <target state="translated">DoubleAdder.sumThenReset()</target>
        </trans-unit>
        <trans-unit id="2110fe9402f25dc6578e74f50e79aae09a88faf8" translate="yes" xml:space="preserve">
          <source>DoubleAdder.toString()</source>
          <target state="translated">DoubleAdder.toString()</target>
        </trans-unit>
        <trans-unit id="1ca0dcb104e15c0b1249f7ee647403d29508b158" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator</source>
          <target state="translated">DoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="913684db31c7a6554613b3f143812fb2d4f1e00b" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleBinaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="b5af989083591cc73e1414b330d66540c69780d4" translate="yes" xml:space="preserve">
          <source>DoubleBuffer</source>
          <target state="translated">DoubleBuffer</target>
        </trans-unit>
        <trans-unit id="3d7a4e834d124304441b258db237fe0c233be6f1" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.allocate()</source>
          <target state="translated">DoubleBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="c8759dd3b63108768e9d1f2734532e3fd2e03cc5" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.array()</source>
          <target state="translated">DoubleBuffer.array()</target>
        </trans-unit>
        <trans-unit id="06d4f39fd2a8164e79adc16a88df99f8556ad32d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.arrayOffset()</source>
          <target state="translated">DoubleBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="45d2cf6694ef38f19926aed3e26419c58cfd98ad" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.asReadOnlyBuffer()</source>
          <target state="translated">DoubleBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="5e203c9288b71a1402984aeb8d0eb663a7d82ad2" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compact()</source>
          <target state="translated">DoubleBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="005b8cacfb4200478e0f37db7e280427d4bfab6e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compareTo()</source>
          <target state="translated">DoubleBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="9b3dbf154c8ab62dff3147448e007415ebf8e94b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.duplicate()</source>
          <target state="translated">DoubleBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="71bbb725c95e2e18c019ea4982ac1d0635fdd35b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.equals()</source>
          <target state="translated">DoubleBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="e36daed43a73817908cade21b2cb9e8d6b6edd47" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.get()</source>
          <target state="translated">DoubleBuffer.get()</target>
        </trans-unit>
        <trans-unit id="ea47b1d620ffccdee11a2a1ab6aedccfef648b7d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hasArray()</source>
          <target state="translated">DoubleBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ba066900eaa0ed8b3f373b35bb114196a7a52a5f" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hashCode()</source>
          <target state="translated">DoubleBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="0d08d5751432bdff8203ceb7d97b2c177ddab11e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.isDirect()</source>
          <target state="translated">DoubleBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="33235656f9fe11047efbed642984cfb4e4cb5f1d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.order()</source>
          <target state="translated">DoubleBuffer.order()</target>
        </trans-unit>
        <trans-unit id="17b611228eba5152bd77f4b28ae6c56fb7dfe0b7" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.put()</source>
          <target state="translated">DoubleBuffer.put()</target>
        </trans-unit>
        <trans-unit id="e86767c664c27368aecbc4a4bd67faced922e2d9" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.slice()</source>
          <target state="translated">DoubleBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="be60e0897bdae267b9e57771928ab54839a5c4d8" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.toString()</source>
          <target state="translated">DoubleBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2f0eeeb9b69e187c0afd1c752a6b11191e84111c" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.wrap()</source>
          <target state="translated">DoubleBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="0c6c7e402f35d32dd0077c4d3e4467def7ca73f1" translate="yes" xml:space="preserve">
          <source>DoubleConsumer</source>
          <target state="translated">DoubleConsumer</target>
        </trans-unit>
        <trans-unit id="ba51b6c6c6777507e8531c32932c0212f4bf249f" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.accept()</source>
          <target state="translated">DoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="814b6e9045add9f8435e7a598dc5388543b38474" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.andThen()</source>
          <target state="translated">DoubleConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="430d3ed0ddf93f256728b2e9bce18def0b626aa9" translate="yes" xml:space="preserve">
          <source>DoubleFunction</source>
          <target state="translated">DoubleFunction</target>
        </trans-unit>
        <trans-unit id="37e0f6cd29dae6e60c6e13b967693fe8d9730d3f" translate="yes" xml:space="preserve">
          <source>DoubleFunction.apply()</source>
          <target state="translated">DoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="02d79a48ac4c9ccd71c9226deac3a8f25fe5bd3f" translate="yes" xml:space="preserve">
          <source>DoublePredicate</source>
          <target state="translated">DoublePredicate</target>
        </trans-unit>
        <trans-unit id="d8ebd507bffed795545c3129f0a9cb36e828ff83" translate="yes" xml:space="preserve">
          <source>DoublePredicate.and()</source>
          <target state="translated">DoublePredicate.and()</target>
        </trans-unit>
        <trans-unit id="4e0bb14f2f6c1591aa05cfd518c44a47dd090cd4" translate="yes" xml:space="preserve">
          <source>DoublePredicate.negate()</source>
          <target state="translated">DoublePredicate.negate()</target>
        </trans-unit>
        <trans-unit id="31dbde5705c19b394009825c03e61698b70a033a" translate="yes" xml:space="preserve">
          <source>DoublePredicate.or()</source>
          <target state="translated">DoublePredicate.or()</target>
        </trans-unit>
        <trans-unit id="3831d05d1e7a7049eeac2ec0a5a0ec920fde157c" translate="yes" xml:space="preserve">
          <source>DoublePredicate.test()</source>
          <target state="translated">DoublePredicate.test()</target>
        </trans-unit>
        <trans-unit id="d194a8a1841c87485fc5f515f503898570fe2b82" translate="yes" xml:space="preserve">
          <source>DoubleStream</source>
          <target state="translated">DoubleStream</target>
        </trans-unit>
        <trans-unit id="92d5d6c0a0a3fae9b0b0f40221f72b7952bb5e80" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder</source>
          <target state="translated">DoubleStream.Builder</target>
        </trans-unit>
        <trans-unit id="e0f7f84ba01c8785806a5b5bbf0ba64109c8fdde" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.accept()</source>
          <target state="translated">DoubleStream.Builder.accept()</target>
        </trans-unit>
        <trans-unit id="a40b48cb1943b58dc661a85ca45d4e1ca94397ba" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.add()</source>
          <target state="translated">DoubleStream.Builder.add()</target>
        </trans-unit>
        <trans-unit id="942c9aa1ce23dc401c83ab7d7c116bbb23952d4c" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.build()</source>
          <target state="translated">DoubleStream.Builder.build()</target>
        </trans-unit>
        <trans-unit id="3c0a05c6d718743c031112de7d583c1e9bf1aa09" translate="yes" xml:space="preserve">
          <source>DoubleStream.allMatch()</source>
          <target state="translated">DoubleStream.allMatch()</target>
        </trans-unit>
        <trans-unit id="6f6c246f1f1d6127d7f64fb43013cbfa5b46a46c" translate="yes" xml:space="preserve">
          <source>DoubleStream.anyMatch()</source>
          <target state="translated">DoubleStream.anyMatch()</target>
        </trans-unit>
        <trans-unit id="9ac3b12b54f092c132d9752dd1b99a11a7a82eeb" translate="yes" xml:space="preserve">
          <source>DoubleStream.average()</source>
          <target state="translated">DoubleStream.average()</target>
        </trans-unit>
        <trans-unit id="8d4a9276ec8472b367d0074624b99444f502f30f" translate="yes" xml:space="preserve">
          <source>DoubleStream.boxed()</source>
          <target state="translated">DoubleStream.boxed()</target>
        </trans-unit>
        <trans-unit id="9c04b079091dfddc603a15c3a2f8fb58d2f508ec" translate="yes" xml:space="preserve">
          <source>DoubleStream.builder()</source>
          <target state="translated">DoubleStream.builder()</target>
        </trans-unit>
        <trans-unit id="e5e510278104ba8544458c4519a08c2573224a7b" translate="yes" xml:space="preserve">
          <source>DoubleStream.collect()</source>
          <target state="translated">DoubleStream.collect()</target>
        </trans-unit>
        <trans-unit id="98e7d511189018ebd0b2e13aaf32d7486d08fd6f" translate="yes" xml:space="preserve">
          <source>DoubleStream.concat()</source>
          <target state="translated">DoubleStream.concat()</target>
        </trans-unit>
        <trans-unit id="4890af299a0160a645f5c88d0fbf0f83cf59400c" translate="yes" xml:space="preserve">
          <source>DoubleStream.count()</source>
          <target state="translated">DoubleStream.count()</target>
        </trans-unit>
        <trans-unit id="2d8d2486cc746b41d79d2ce4864dc8aa2eda6472" translate="yes" xml:space="preserve">
          <source>DoubleStream.distinct()</source>
          <target state="translated">DoubleStream.distinct()</target>
        </trans-unit>
        <trans-unit id="9b2adcc7ebe172dc1614fe37d85406cfeeff0352" translate="yes" xml:space="preserve">
          <source>DoubleStream.empty()</source>
          <target state="translated">DoubleStream.empty()</target>
        </trans-unit>
        <trans-unit id="29c5d558354a42815c0e7882c6f4f373b18aacfc" translate="yes" xml:space="preserve">
          <source>DoubleStream.filter()</source>
          <target state="translated">DoubleStream.filter()</target>
        </trans-unit>
        <trans-unit id="c723abe220e435262a0a2915537f5e5a79afb793" translate="yes" xml:space="preserve">
          <source>DoubleStream.findAny()</source>
          <target state="translated">DoubleStream.findAny()</target>
        </trans-unit>
        <trans-unit id="1667a63bc92ca3095450ff4091cc6b3eeccd47c2" translate="yes" xml:space="preserve">
          <source>DoubleStream.findFirst()</source>
          <target state="translated">DoubleStream.findFirst()</target>
        </trans-unit>
        <trans-unit id="69180ea2e365c283876162118041e282459e59a1" translate="yes" xml:space="preserve">
          <source>DoubleStream.flatMap()</source>
          <target state="translated">DoubleStream.flatMap()</target>
        </trans-unit>
        <trans-unit id="fa0a853385b02401e5fc9314c6c8e3976293632c" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEach()</source>
          <target state="translated">DoubleStream.forEach()</target>
        </trans-unit>
        <trans-unit id="ee9ea3b82bd25138fbfc9530cf4de9e1b6fcb593" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEachOrdered()</source>
          <target state="translated">DoubleStream.forEachOrdered()</target>
        </trans-unit>
        <trans-unit id="b33dbcc58d61e3346248e35759e4b6c968a6e798" translate="yes" xml:space="preserve">
          <source>DoubleStream.generate()</source>
          <target state="translated">DoubleStream.generate()</target>
        </trans-unit>
        <trans-unit id="59b75b22be5e7bc7a7484417b45d6c53a121e559" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterate()</source>
          <target state="translated">DoubleStream.iterate()</target>
        </trans-unit>
        <trans-unit id="61f83e114c613791d2c399efc4aadc88239ecb8e" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterator()</source>
          <target state="translated">DoubleStream.iterator()</target>
        </trans-unit>
        <trans-unit id="13361b8ca873639804330351fd0f70d531bbcfe8" translate="yes" xml:space="preserve">
          <source>DoubleStream.limit()</source>
          <target state="translated">DoubleStream.limit()</target>
        </trans-unit>
        <trans-unit id="b1608ce21096d935302d6ed179b1969c0a0458eb" translate="yes" xml:space="preserve">
          <source>DoubleStream.map()</source>
          <target state="translated">DoubleStream.map()</target>
        </trans-unit>
        <trans-unit id="9a2984416c24e437433e4fc7df0f8c2242f3cb09" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToInt()</source>
          <target state="translated">DoubleStream.mapToInt()</target>
        </trans-unit>
        <trans-unit id="fcb6a01a61a6e17b14c86ba04382fb46ea1dce6e" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToLong()</source>
          <target state="translated">DoubleStream.mapToLong()</target>
        </trans-unit>
        <trans-unit id="354c79c5b9d2fd8863d5261776bff3d5b153fedc" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToObj()</source>
          <target state="translated">DoubleStream.mapToObj()</target>
        </trans-unit>
        <trans-unit id="10435a09e12946c07c8f2659c9f45c41db315077" translate="yes" xml:space="preserve">
          <source>DoubleStream.max()</source>
          <target state="translated">DoubleStream.max()</target>
        </trans-unit>
        <trans-unit id="73ad2d16bb3340cf6ac5bd61d0134cb4c7e9ba8a" translate="yes" xml:space="preserve">
          <source>DoubleStream.min()</source>
          <target state="translated">DoubleStream.min()</target>
        </trans-unit>
        <trans-unit id="3607d6ad8e1333cb80fcc61521d1821d028a0f65" translate="yes" xml:space="preserve">
          <source>DoubleStream.noneMatch()</source>
          <target state="translated">DoubleStream.noneMatch()</target>
        </trans-unit>
        <trans-unit id="32571f821b4f1ef643f89b3adb34b0eabfd24ceb" translate="yes" xml:space="preserve">
          <source>DoubleStream.of()</source>
          <target state="translated">DoubleStream.of()</target>
        </trans-unit>
        <trans-unit id="7fc75e6de2d8afd545d9e1ed5054146a75e1fa8b" translate="yes" xml:space="preserve">
          <source>DoubleStream.parallel()</source>
          <target state="translated">DoubleStream.parallel()</target>
        </trans-unit>
        <trans-unit id="3a3ff26342a5035086bff0bcdaf3ceffdfa6f6a2" translate="yes" xml:space="preserve">
          <source>DoubleStream.peek()</source>
          <target state="translated">DoubleStream.peek()</target>
        </trans-unit>
        <trans-unit id="7e9bd0d1c82727e23affad716f34cbb9ad3676b2" translate="yes" xml:space="preserve">
          <source>DoubleStream.reduce()</source>
          <target state="translated">DoubleStream.reduce()</target>
        </trans-unit>
        <trans-unit id="465811de0bd7e1346de947d1a98d97366615c581" translate="yes" xml:space="preserve">
          <source>DoubleStream.sequential()</source>
          <target state="translated">DoubleStream.sequential()</target>
        </trans-unit>
        <trans-unit id="e08f09bc8d42c7f33c030d2a51b0914fe4dda01c" translate="yes" xml:space="preserve">
          <source>DoubleStream.skip()</source>
          <target state="translated">DoubleStream.skip()</target>
        </trans-unit>
        <trans-unit id="0299b97a4e5320933a51c0eb2d38981ae9c74141" translate="yes" xml:space="preserve">
          <source>DoubleStream.sorted()</source>
          <target state="translated">DoubleStream.sorted()</target>
        </trans-unit>
        <trans-unit id="5f47d2b1f2a9fb5f25f82f1c36d9eff69a6a02f7" translate="yes" xml:space="preserve">
          <source>DoubleStream.spliterator()</source>
          <target state="translated">DoubleStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="2b7f4777996cf701db43c8dd0bba0c178b21c89a" translate="yes" xml:space="preserve">
          <source>DoubleStream.sum()</source>
          <target state="translated">DoubleStream.sum()</target>
        </trans-unit>
        <trans-unit id="32371d44fa192af4db1beeaf6b07724f3dee1bbe" translate="yes" xml:space="preserve">
          <source>DoubleStream.summaryStatistics()</source>
          <target state="translated">DoubleStream.summaryStatistics()</target>
        </trans-unit>
        <trans-unit id="b82c9d43db9c6ca497abe8b79304c2697e355890" translate="yes" xml:space="preserve">
          <source>DoubleStream.toArray()</source>
          <target state="translated">DoubleStream.toArray()</target>
        </trans-unit>
        <trans-unit id="7dab5923a94c0589ac7475aec25970cf67d124c2" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics</source>
          <target state="translated">DoubleSummaryStatistics</target>
        </trans-unit>
        <trans-unit id="338be86fedb3e7e75f237c85db663dd33225fb82" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.accept()</source>
          <target state="translated">DoubleSummaryStatistics.accept()</target>
        </trans-unit>
        <trans-unit id="4f6e3d4d65aa57ae072a769c6729757eb10844db" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.combine()</source>
          <target state="translated">DoubleSummaryStatistics.combine()</target>
        </trans-unit>
        <trans-unit id="1899ba9ed77b014529574a455deb54ad93aa7853" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getAverage()</source>
          <target state="translated">DoubleSummaryStatistics.getAverage()</target>
        </trans-unit>
        <trans-unit id="510a920db10155fcbc9e7fda7501acdf5ac24b92" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getCount()</source>
          <target state="translated">DoubleSummaryStatistics.getCount()</target>
        </trans-unit>
        <trans-unit id="a714e4ebfaf37c4c07216ac3a018689fb85396a4" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMax()</source>
          <target state="translated">DoubleSummaryStatistics.getMax()</target>
        </trans-unit>
        <trans-unit id="0d6a6ad97fbe07d76a010f46c2b424b63c88b045" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMin()</source>
          <target state="translated">DoubleSummaryStatistics.getMin()</target>
        </trans-unit>
        <trans-unit id="afcd83df2f6cd4eca266ea2afa6647f5f3c71699" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getSum()</source>
          <target state="translated">DoubleSummaryStatistics.getSum()</target>
        </trans-unit>
        <trans-unit id="646a70972ca082c518bca932c96535819d629106" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.toString()</source>
          <target state="translated">DoubleSummaryStatistics.toString()</target>
        </trans-unit>
        <trans-unit id="528a21f044bb846434c701b5d9feffc8beed49ed" translate="yes" xml:space="preserve">
          <source>DoubleSupplier</source>
          <target state="translated">DoubleSupplier</target>
        </trans-unit>
        <trans-unit id="ed377b0d1122d9418827e82671473c1372164177" translate="yes" xml:space="preserve">
          <source>DoubleSupplier.getAsDouble()</source>
          <target state="translated">DoubleSupplier.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="0f24012c09999d4eb07dd33fd48b2e39bf22d65e" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction</source>
          <target state="translated">DoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="7d2ed9699057c1f9c13e504e4779536fa44d1770" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction.applyAsInt()</source>
          <target state="translated">DoubleToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="ea24ed983005ef2c44289f69d8352c8050658ad1" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction</source>
          <target state="translated">DoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="a083addc7768bdb2808b637dbb44f82aa0cc4ac7" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction.applyAsLong()</source>
          <target state="translated">DoubleToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="39432ca436cbaa15b5b576f20b33b2a3cbd6174e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator</source>
          <target state="translated">DoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="5a4adcb9c50257f6a018ae22fb36209f50688fbb" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.andThen()</source>
          <target state="translated">DoubleUnaryOperator.andThen()</target>
        </trans-unit>
        <trans-unit id="173bd7bbaf1b9e6b4b6c6faa529fa2638bc697ba" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleUnaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="754bcda204e3be18d6194aa5bf3096b71202370e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.compose()</source>
          <target state="translated">DoubleUnaryOperator.compose()</target>
        </trans-unit>
        <trans-unit id="5ee39d0585da9927ad895c8a77288133c0a5233f" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.identity()</source>
          <target state="translated">DoubleUnaryOperator.identity()</target>
        </trans-unit>
        <trans-unit id="126f3fb9c62f7dac514e41acbfdeb939833f7b5c" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9709afd00d9e37c56908202de053e0eab2bab79" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces. Implements all optional list operations, and permits all elements (including &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bc07ab2148597e58cde588340a55d4100fd913" translate="yes" xml:space="preserve">
          <source>Drain any buffered data in ObjectOutputStream. Similar to flush but does not propagate the flush to the underlying stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f09410a3fe6ab85f1ee56e1e295692105ab4e1a" translate="yes" xml:space="preserve">
          <source>Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied. This method blocks until the draining is complete. Because this is a blocking method, it should be used with care. If &lt;code&gt;drain()&lt;/code&gt; is invoked on a stopped line that has data in its queue, the method will block until the line is running and the data queue becomes empty. If &lt;code&gt;drain()&lt;/code&gt; is invoked by one thread, and another continues to fill the data queue, the operation will not complete. This method always returns when the data line is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd12066e84b4f03d7fb3bbe72e97f25ce4490562" translate="yes" xml:space="preserve">
          <source>Drop membership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d82ff49c8bbfbd7b3e4f4ffa2789b0203b85d6" translate="yes" xml:space="preserve">
          <source>Due to polymorphism of both factories and sockets, different kinds of sockets can be used by the same application code just by passing it different kinds of factories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a38894d57d3b3784bfa765fc5e5f802d04979e" translate="yes" xml:space="preserve">
          <source>Due to some methods of allocating certain styles of IPv6 addresses, it will be common for addresses to contain long strings of zero bits. In order to make writing addresses containing zero bits easier, a special syntax is available to compress the zeros. The use of &quot;::&quot; indicates multiple groups of 16-bits of zeros. The &quot;::&quot; can only appear once in an address. The &quot;::&quot; can also be used to compress the leading and/or trailing zeros in an address. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c221b3b5d45aa6f2b51d2ff7ad772006b7992fe4" translate="yes" xml:space="preserve">
          <source>Due to the inherent delay between key cancellation and channel deregistration, a channel may remain registered for some time after all of its keys have been cancelled. A channel may also remain registered for some time after it is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d5cf48b69cd525a6a5e34930693c1ebc22c7ef" translate="yes" xml:space="preserve">
          <source>Due to the inherent race condition in this method, it is recommended that the method only be used for debugging and monitoring purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9b8e61ee744cc30663ea7690cda15d17521ec4" translate="yes" xml:space="preserve">
          <source>Due to the platform-dependent nature of the behavior of this constructor, extreme care should be exercised in its use. The thread stack size necessary to perform a given computation will likely vary from one JRE implementation to another. In light of this variation, careful tuning of the stack size parameter may be required, and the tuning may need to be repeated for each JRE implementation on which an application is to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef947e3aef3170e26167c58d17a81acc82301605" translate="yes" xml:space="preserve">
          <source>Dungeon</source>
          <target state="translated">Dungeon</target>
        </trans-unit>
        <trans-unit id="611f9b90ae8fc0f6a7d8b85d23b7994ad4acd078" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException</source>
          <target state="translated">DuplicateFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="3c356dce20032bdfcd696e3cb6b670fd68285914" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getFlags()</source>
          <target state="translated">DuplicateFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="d9312f6a6f29fc77bb6453b2c755fe17639eb33f" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getMessage()</source>
          <target state="translated">DuplicateFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="7df11f943d5f539171b9117f82e494d1ad59e377" translate="yes" xml:space="preserve">
          <source>Duration and Period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9025826b1cd7e702cbe93176d1b668d05effb5" translate="yes" xml:space="preserve">
          <source>Duration.abs()</source>
          <target state="translated">Duration.abs()</target>
        </trans-unit>
        <trans-unit id="aa312e8a098ab875b809bf9534b814af64a9759e" translate="yes" xml:space="preserve">
          <source>Duration.addTo()</source>
          <target state="translated">Duration.addTo()</target>
        </trans-unit>
        <trans-unit id="b840cd969d2dd313bb6373719b36c365b3b2b244" translate="yes" xml:space="preserve">
          <source>Duration.between()</source>
          <target state="translated">Duration.between()</target>
        </trans-unit>
        <trans-unit id="23435c649b87c9dcf280ac63f198540368cc5231" translate="yes" xml:space="preserve">
          <source>Duration.compareTo()</source>
          <target state="translated">Duration.compareTo()</target>
        </trans-unit>
        <trans-unit id="2d2a660b05a6946f7e8d68d3f0777b4f3ce04748" translate="yes" xml:space="preserve">
          <source>Duration.dividedBy()</source>
          <target state="translated">Duration.dividedBy()</target>
        </trans-unit>
        <trans-unit id="2497f0dd453a7e9b0dfcff8deeafd55f16abef7a" translate="yes" xml:space="preserve">
          <source>Duration.equals()</source>
          <target state="translated">Duration.equals()</target>
        </trans-unit>
        <trans-unit id="f3398ac63a7ecd9599e44f8ad8c1ad4b2d38f41f" translate="yes" xml:space="preserve">
          <source>Duration.from()</source>
          <target state="translated">Duration.from()</target>
        </trans-unit>
        <trans-unit id="b9300aa117c5a95374dea29a47351a829433f32d" translate="yes" xml:space="preserve">
          <source>Duration.get()</source>
          <target state="translated">Duration.get()</target>
        </trans-unit>
        <trans-unit id="fb5a4179ef4d6e29d337caeaa92d865aa31d3bec" translate="yes" xml:space="preserve">
          <source>Duration.getNano()</source>
          <target state="translated">Duration.getNano()</target>
        </trans-unit>
        <trans-unit id="1491e6edfd8090740291ea563d04af0851984351" translate="yes" xml:space="preserve">
          <source>Duration.getSeconds()</source>
          <target state="translated">Duration.getSeconds()</target>
        </trans-unit>
        <trans-unit id="4fd70e5cd0d11b8f6084016b3d267af614d8071e" translate="yes" xml:space="preserve">
          <source>Duration.getUnits()</source>
          <target state="translated">Duration.getUnits()</target>
        </trans-unit>
        <trans-unit id="affe8075b36dabdb8d118abc7742ad8e66347796" translate="yes" xml:space="preserve">
          <source>Duration.hashCode()</source>
          <target state="translated">Duration.hashCode()</target>
        </trans-unit>
        <trans-unit id="cf9408c9312f0888ff5e9afe3420e94b8e3e64b4" translate="yes" xml:space="preserve">
          <source>Duration.isNegative()</source>
          <target state="translated">Duration.isNegative()</target>
        </trans-unit>
        <trans-unit id="f92190a9658d0f1f4dbc1ceddd1fb62c3a26a136" translate="yes" xml:space="preserve">
          <source>Duration.isZero()</source>
          <target state="translated">Duration.isZero()</target>
        </trans-unit>
        <trans-unit id="9aa7c6d3eb42b70a0c389e693126098f8700dabb" translate="yes" xml:space="preserve">
          <source>Duration.minus()</source>
          <target state="translated">Duration.minus()</target>
        </trans-unit>
        <trans-unit id="d5fdcf8e2c10a9e72d3bc61eedc971b6e94f20a9" translate="yes" xml:space="preserve">
          <source>Duration.minusDays()</source>
          <target state="translated">Duration.minusDays()</target>
        </trans-unit>
        <trans-unit id="cbf93ca0303206b6934c54d2880c361f65e3c9f7" translate="yes" xml:space="preserve">
          <source>Duration.minusHours()</source>
          <target state="translated">Duration.minusHours()</target>
        </trans-unit>
        <trans-unit id="714723ec633026c398af7e42f32a875f8b421957" translate="yes" xml:space="preserve">
          <source>Duration.minusMillis()</source>
          <target state="translated">Duration.minusMillis()</target>
        </trans-unit>
        <trans-unit id="9e4aaa71aae9a99d50359ee427e3d219527a94de" translate="yes" xml:space="preserve">
          <source>Duration.minusMinutes()</source>
          <target state="translated">Duration.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="45f2d8c7184ad62253756e68abae7f2a1f55c5b1" translate="yes" xml:space="preserve">
          <source>Duration.minusNanos()</source>
          <target state="translated">Duration.minusNanos()</target>
        </trans-unit>
        <trans-unit id="8dc28039173039b68b02be72df57ce37329dc7cd" translate="yes" xml:space="preserve">
          <source>Duration.minusSeconds()</source>
          <target state="translated">Duration.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="1d5bfcef31cdc402c2b155550b5a9f42d4618485" translate="yes" xml:space="preserve">
          <source>Duration.multipliedBy()</source>
          <target state="translated">Duration.multipliedBy()</target>
        </trans-unit>
        <trans-unit id="b7c29c0849121b016118709e833f51b8f58413c0" translate="yes" xml:space="preserve">
          <source>Duration.negated()</source>
          <target state="translated">Duration.negated()</target>
        </trans-unit>
        <trans-unit id="d6a2a258e1c6b5872b5f596a5b086b2a95999bba" translate="yes" xml:space="preserve">
          <source>Duration.of()</source>
          <target state="translated">Duration.of()</target>
        </trans-unit>
        <trans-unit id="258409e04ff6722fe76b29a1178060ae2a778710" translate="yes" xml:space="preserve">
          <source>Duration.ofDays()</source>
          <target state="translated">Duration.ofDays()</target>
        </trans-unit>
        <trans-unit id="09d0b0487dc8b6d21930a5b1a36c98c6ca059d4a" translate="yes" xml:space="preserve">
          <source>Duration.ofHours()</source>
          <target state="translated">Duration.ofHours()</target>
        </trans-unit>
        <trans-unit id="ed9ca18062becd1d5cfda9cd3b3243cea165327d" translate="yes" xml:space="preserve">
          <source>Duration.ofMillis()</source>
          <target state="translated">Duration.ofMillis()</target>
        </trans-unit>
        <trans-unit id="50f5f4c2e0db0f082fa09cdc5fb70ef41b1f29b8" translate="yes" xml:space="preserve">
          <source>Duration.ofMinutes()</source>
          <target state="translated">Duration.ofMinutes()</target>
        </trans-unit>
        <trans-unit id="04acb65dc39265ee5d19cf41cf7db19811c52d34" translate="yes" xml:space="preserve">
          <source>Duration.ofNanos()</source>
          <target state="translated">Duration.ofNanos()</target>
        </trans-unit>
        <trans-unit id="838a4fa4ad925136a1d4d5402b3efbf8c14b0850" translate="yes" xml:space="preserve">
          <source>Duration.ofSeconds()</source>
          <target state="translated">Duration.ofSeconds()</target>
        </trans-unit>
        <trans-unit id="84eb67d030f05fe14d70c639d648fe64c4dfbffc" translate="yes" xml:space="preserve">
          <source>Duration.parse()</source>
          <target state="translated">Duration.parse()</target>
        </trans-unit>
        <trans-unit id="f8651625c717f1a7818151031436eac646482f4e" translate="yes" xml:space="preserve">
          <source>Duration.plus()</source>
          <target state="translated">Duration.plus()</target>
        </trans-unit>
        <trans-unit id="5fdd8a38b49ccd1f28d316e21294be7e70d9d3a2" translate="yes" xml:space="preserve">
          <source>Duration.plusDays()</source>
          <target state="translated">Duration.plusDays()</target>
        </trans-unit>
        <trans-unit id="faa749810ff2ba6c49fe432ba0ae6e0828d83ffc" translate="yes" xml:space="preserve">
          <source>Duration.plusHours()</source>
          <target state="translated">Duration.plusHours()</target>
        </trans-unit>
        <trans-unit id="116ae90cecb7c256944073754d8f498218cf3f96" translate="yes" xml:space="preserve">
          <source>Duration.plusMillis()</source>
          <target state="translated">Duration.plusMillis()</target>
        </trans-unit>
        <trans-unit id="7281e3ae17670a7a4f033392e1454ec6d2f0eda6" translate="yes" xml:space="preserve">
          <source>Duration.plusMinutes()</source>
          <target state="translated">Duration.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="307fb9852b8a8d087ba24ae7a3819d8ecdc47b0e" translate="yes" xml:space="preserve">
          <source>Duration.plusNanos()</source>
          <target state="translated">Duration.plusNanos()</target>
        </trans-unit>
        <trans-unit id="5bdb5ae4ad6b604723db04eaeff74c85ed28f7a6" translate="yes" xml:space="preserve">
          <source>Duration.plusSeconds()</source>
          <target state="translated">Duration.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="f9c05a96f7833b65df679ed69f4f6bbba84b55c1" translate="yes" xml:space="preserve">
          <source>Duration.subtractFrom()</source>
          <target state="translated">Duration.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="fca97be59853ebe5716f826aec5de090bd060154" translate="yes" xml:space="preserve">
          <source>Duration.toDays()</source>
          <target state="translated">Duration.toDays()</target>
        </trans-unit>
        <trans-unit id="d022b07e8f4e7cc5b0776021b84e5644805d00e2" translate="yes" xml:space="preserve">
          <source>Duration.toHours()</source>
          <target state="translated">Duration.toHours()</target>
        </trans-unit>
        <trans-unit id="ea2713ff82ff0496b7fb1aef3f5eca7927287c72" translate="yes" xml:space="preserve">
          <source>Duration.toMillis()</source>
          <target state="translated">Duration.toMillis()</target>
        </trans-unit>
        <trans-unit id="fcf5200687fb4cf46a5c2d5187012eee190cf30f" translate="yes" xml:space="preserve">
          <source>Duration.toMinutes()</source>
          <target state="translated">Duration.toMinutes()</target>
        </trans-unit>
        <trans-unit id="09e88c4380b27b903b1943dca4ed67bacbe28633" translate="yes" xml:space="preserve">
          <source>Duration.toNanos()</source>
          <target state="translated">Duration.toNanos()</target>
        </trans-unit>
        <trans-unit id="7537209aeb73ea3454c97bc3b1dcba218d2b40ba" translate="yes" xml:space="preserve">
          <source>Duration.toString()</source>
          <target state="translated">Duration.toString()</target>
        </trans-unit>
        <trans-unit id="f716f82136ea9ad147dce8cd37dcb5fd69fc3e57" translate="yes" xml:space="preserve">
          <source>Duration.withNanos()</source>
          <target state="translated">Duration.withNanos()</target>
        </trans-unit>
        <trans-unit id="ee62ef8ea389fa2590ee0c39af18c07b20503601" translate="yes" xml:space="preserve">
          <source>Duration.withSeconds()</source>
          <target state="translated">Duration.withSeconds()</target>
        </trans-unit>
        <trans-unit id="110302dac043c24a9c4b17beddaccf3e8d190652" translate="yes" xml:space="preserve">
          <source>Durations and periods differ in their treatment of daylight savings time when added to &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Duration&lt;/code&gt; will add an exact number of seconds, thus a duration of one day is always exactly 24 hours. By contrast, a &lt;code&gt;Period&lt;/code&gt; will add a conceptual day, trying to maintain the local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baaeef5b81524f57c1b5477112c0d961d0ffae1" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type XYZ, the returned model must contain no less information than if the declaration of type XYZ were assumed to be &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt;, or &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of XYZ were assumed to be &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface XYZ&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c68ded4bdace8585d879839684caafefa0d673" translate="yes" xml:space="preserve">
          <source>During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab994d11cc97346f4de77f9ddf9299dcb995a3b" translate="yes" xml:space="preserve">
          <source>During construction of the call site, the &lt;code&gt;createTargetHook&lt;/code&gt; is invoked to produce the actual target, as if by a call of the form &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee3bdf7216945802928da957e4f64abef1a8bbd" translate="yes" xml:space="preserve">
          <source>During deserialization, readResolve adds extensions as described in &lt;a href=&quot;#special_cases_constructor&quot;&gt;Special Cases&lt;/a&gt;, only for the two cases th_TH_TH and ja_JP_JP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfd28f5cdef20bd56b959fde27381521c4de273" translate="yes" xml:space="preserve">
          <source>During deserialization, the fields of non-serializable classes will be initialized using the public or protected no-arg constructor of the class. A no-arg constructor must be accessible to the subclass that is serializable. The fields of serializable subclasses will be restored from the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb751d5e03d16820dfaa9405c9d350874e914b8" translate="yes" xml:space="preserve">
          <source>During each run of an annotation processing tool, a file with a given pathname may be created only once. If that file already exists before the first attempt to create it, the old contents will be deleted. Any subsequent attempt to create the same file during a run will throw a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;, as will attempting to create both a class file and source file for the same type name or same package name. The &lt;a href=&quot;processor&quot;&gt;initial inputs&lt;/a&gt; to the tool are considered to be created by the zeroth round; therefore, attempting to create a source or class file corresponding to one of those inputs will result in a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf3cfdd5430b93d98f5fbd3648fab52ea500d64" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be added to and removed from a selector's selected-key set and may be removed from its key and cancelled-key sets. Selection is performed by the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;selector#selectNow--&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9e243c16cda77441eb0ed9e930e56f1971cc38" translate="yes" xml:space="preserve">
          <source>During formatting, if the source logger has a localization ResourceBundle and if that ResourceBundle has an entry for this message string, then the message string is replaced with the localized value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6963c06744c4cb921f8204e451cdd87da55bf7d" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe08a816cee454a7061ca9b0c45783e70300ef1" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../chrono/chronology#getId--&quot;&gt;&lt;code&gt;Chronology.getId()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ec18985e92563f7bff4cbe40bd1216047db6f6" translate="yes" xml:space="preserve">
          <source>During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac3f1128556516e29fb027d1ef90561f196b709" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85927a4e03a6fbb6585d9de9788314d845c99776" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c857ac6bff4d5a1296b0a77002e3ec1931ab0b57" translate="yes" xml:space="preserve">
          <source>During formatting, the value is obtained and checked that it is in the valid range. If text is not available for the value then it is output as a number. During parsing, the parser will match against the map of text and numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6328c4cece7134fad021cacd94431ba5256de481" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae95362869ef373f422eeea5fbbfb739c07fd82" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b90c96a7fcf7a451966988e3a176ba0847ac13" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa240fcbe863a7ef78f61d18a24054e27225dc2" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7804966f6935eab96626a07987e4d2d482291f" translate="yes" xml:space="preserve">
          <source>During formatting, this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d396df68a68a3f28ecd5b773a14e9ffc2a19267" translate="yes" xml:space="preserve">
          <source>During handshaking, if the URL's hostname and the server's identification hostname mismatch, the verification mechanism can call back to implementers of this interface to determine if this connection should be allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb8b734c98b923f91249267c6bd8f5f84416330" translate="yes" xml:space="preserve">
          <source>During object input, convert this deserialized enumeration instance to the proper enumeration value defined in the enumeration attribute class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa0d719c8817b3e1d8fc50c109dd5db59b9f750" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt;&lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a86560617fc9e4897a0988ef62e3f71d9b264c" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a9a1ba277c0d7094f6f5184deccbe7b259db3f" translate="yes" xml:space="preserve">
          <source>During parsing, if a chronology has already been parsed, then it is used. Otherwise the default from &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; is used, with &lt;code&gt;IsoChronology&lt;/code&gt; as the fallback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191ca3d4cfb9916eb4775c37f1204bfe60f75597" translate="yes" xml:space="preserve">
          <source>During parsing, the chronology is parsed and must match one of the chronologies in &lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660a719637845b5f2477a0ff69b5b7ccfa7eb52f" translate="yes" xml:space="preserve">
          <source>During parsing, the current state of the parse is inspected. If the specified field has no associated value, because it has not been parsed successfully at that point, then the specified value is injected into the parse result. Injection is immediate, thus the field-value pair will be visible to any subsequent elements in the formatter. As such, this method is normally called at the end of the builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b193b91f8dbd49a4c7e7c7de8ece0cf96f1a1eaf" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined above. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d6ed2e246953d5d73452dbaf6d05a817ddc751" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined below. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e8de8e6e843fddb564fc8660d359fd8bc5f946" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051e7e637f0a79d80fda592f79caa0cc6df65da5" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afa73df0d5f6aa582b13dfbcefba4da345c228d" translate="yes" xml:space="preserve">
          <source>During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using &lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then &lt;a href=&quot;../zoneoffset#UTC&quot;&gt;&lt;code&gt;ZoneOffset.UTC&lt;/code&gt;&lt;/a&gt; is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; is selected. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033e5031d233d516e8f61663b0beee851fa0d4a8" translate="yes" xml:space="preserve">
          <source>During secure socket negotiations, implentations call methods in this interface to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3d5b9d1e4e5b96a2bd9661fa1be631b78ef705" translate="yes" xml:space="preserve">
          <source>During serialization, writeObject writes all fields to the output stream, including extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f3bb08de84932901388d0c83861d8f431122f6" translate="yes" xml:space="preserve">
          <source>During the resource bundle loading process above, this factory method looks up the cache before calling the &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method. If the time-to-live period of the resource bundle found in the cache has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;control.needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls &lt;code&gt;control.newBundle&lt;/code&gt; to reload the resource bundle. If &lt;code&gt;control.newBundle&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298d9d8d5744f92e432401693309d1bbe3ff6074" translate="yes" xml:space="preserve">
          <source>Dynamic Access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78e4505384decd4038b612ae0d0f30e8b5bddee" translate="yes" xml:space="preserve">
          <source>Dynamic MBeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0f8efcd345f2ea502e218faee30da89844583e" translate="yes" xml:space="preserve">
          <source>Dynamic code downloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88aec902f9a10d023d00343fd43acb6f84eaf46b" translate="yes" xml:space="preserve">
          <source>Dynamic linking of the specified library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a4c142a61f88983312715c4d27e6f5e339313a" translate="yes" xml:space="preserve">
          <source>Dynamic update of rules is a complex problem and most applications should not use this method or dynamic rules. To achieve dynamic rules, a provider implementation will have to be written as per the specification of this class. In addition, instances of &lt;code&gt;ZoneRules&lt;/code&gt; must not be cached in the application as they will become stale. However, the boolean flag on &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(String, boolean)&lt;/code&gt;&lt;/a&gt; allows provider implementations to control the caching of &lt;code&gt;ZoneId&lt;/code&gt;, potentially ensuring that all objects in the system see the new rules. Note that there is likely to be a cost in performance of a dynamic rules provider. Note also that no dynamic rules provider is in this specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8a231a2cdc7c41dc1c6e0395464730ea4cecaa" translate="yes" xml:space="preserve">
          <source>DynamicMBean</source>
          <target state="translated">DynamicMBean</target>
        </trans-unit>
        <trans-unit id="2bcfc50ea42917ec195e96de1ced48702c3a988a" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttribute()</source>
          <target state="translated">DynamicMBean.getAttribute()</target>
        </trans-unit>
        <trans-unit id="89a7cd259515ecc091c9e50aee6df33b908fa20d" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttributes()</source>
          <target state="translated">DynamicMBean.getAttributes()</target>
        </trans-unit>
        <trans-unit id="46a1c4e1954a38579a347affdf6a1643540ce392" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getMBeanInfo()</source>
          <target state="translated">DynamicMBean.getMBeanInfo()</target>
        </trans-unit>
        <trans-unit id="a991f9655da18f8237eb99cd0a2a59bfbc8d4ff4" translate="yes" xml:space="preserve">
          <source>DynamicMBean.invoke()</source>
          <target state="translated">DynamicMBean.invoke()</target>
        </trans-unit>
        <trans-unit id="4a25bc0cc715918dae1a446cddea115342d71b01" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttribute()</source>
          <target state="translated">DynamicMBean.setAttribute()</target>
        </trans-unit>
        <trans-unit id="5a5fee6c935edcd5c1e56d373445a1d430f7626b" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttributes()</source>
          <target state="translated">DynamicMBean.setAttributes()</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="37556bd5ed42df76f73ebe653563aeeb143ba50e" translate="yes" xml:space="preserve">
          <source>E size .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b06f6b152e160765eb34203c1de7ada0bb7b64" translate="yes" xml:space="preserve">
          <source>EAT - Africa/Addis_Ababa</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601f2e6dfccb9827ca507e4f4f4f72b0a822f61d" translate="yes" xml:space="preserve">
          <source>ECB</source>
          <target state="translated">ECB</target>
        </trans-unit>
        <trans-unit id="484c0540c6bfcedac6849997e5e0766ff2e2acdc" translate="yes" xml:space="preserve">
          <source>ECField</source>
          <target state="translated">ECField</target>
        </trans-unit>
        <trans-unit id="2658a01429323ad39737999b3b7142a3d5d8e196" translate="yes" xml:space="preserve">
          <source>ECField.getFieldSize()</source>
          <target state="translated">ECField.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="d9898f316485620be7b173c694c2ed72e1f5adab" translate="yes" xml:space="preserve">
          <source>ECFieldF2m</source>
          <target state="translated">ECFieldF2m</target>
        </trans-unit>
        <trans-unit id="36e7f19e6ba8f565ca993ca66fd6e17fe7eb308b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.equals()</source>
          <target state="translated">ECFieldF2m.equals()</target>
        </trans-unit>
        <trans-unit id="8937926871f18b31c7d6d622d6b5e0452f2bb503" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getFieldSize()</source>
          <target state="translated">ECFieldF2m.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="7ebafde21ad6778e6e4ac34e6eba9db320ad8684" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getM()</source>
          <target state="translated">ECFieldF2m.getM()</target>
        </trans-unit>
        <trans-unit id="f1cea3791239dc1bf411a7147dece3df618f498c" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getMidTermsOfReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getMidTermsOfReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="63101533955a9be37909b63f6f24e1bcba0bc441" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="3976abd2e6fa17305016254a33c95386394d881b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.hashCode()</source>
          <target state="translated">ECFieldF2m.hashCode()</target>
        </trans-unit>
        <trans-unit id="bc872885a9855575e40017c153cab5632890dc61" translate="yes" xml:space="preserve">
          <source>ECFieldFp</source>
          <target state="translated">ECFieldFp</target>
        </trans-unit>
        <trans-unit id="53d60f64c65a0d8219fefcc720e2ccf509009a68" translate="yes" xml:space="preserve">
          <source>ECFieldFp.equals()</source>
          <target state="translated">ECFieldFp.equals()</target>
        </trans-unit>
        <trans-unit id="30d1b94dcc58f11b131d3bf43cd966ded02a0fc9" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getFieldSize()</source>
          <target state="translated">ECFieldFp.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="02e8256e1c66bbdf141519e024e9e7ff04c16a91" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getP()</source>
          <target state="translated">ECFieldFp.getP()</target>
        </trans-unit>
        <trans-unit id="65b421ba691a3a68e75d58f81c156cbd493f642d" translate="yes" xml:space="preserve">
          <source>ECFieldFp.hashCode()</source>
          <target state="translated">ECFieldFp.hashCode()</target>
        </trans-unit>
        <trans-unit id="1e9830d00f8ec3259613f4dff1281a7adff4f6af" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec</source>
          <target state="translated">ECGenParameterSpec</target>
        </trans-unit>
        <trans-unit id="d37406af3bf01864f0a6c55240b87e21b1b5b189" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec.getName()</source>
          <target state="translated">ECGenParameterSpec.getName()</target>
        </trans-unit>
        <trans-unit id="a95d0a39c7a64e9695e6bd117f38673380c9eb3c" translate="yes" xml:space="preserve">
          <source>ECKey</source>
          <target state="translated">ECKey</target>
        </trans-unit>
        <trans-unit id="26f1460fd392ab6278f38275c90b71e9401e7015" translate="yes" xml:space="preserve">
          <source>ECKey.getParams()</source>
          <target state="translated">ECKey.getParams()</target>
        </trans-unit>
        <trans-unit id="5c71332cc2e4953624e755826970d2fc1a95245b" translate="yes" xml:space="preserve">
          <source>ECParameterSpec</source>
          <target state="translated">ECParameterSpec</target>
        </trans-unit>
        <trans-unit id="aa125d60e4d36280fae87072658c9123a763bcdc" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCofactor()</source>
          <target state="translated">ECParameterSpec.getCofactor()</target>
        </trans-unit>
        <trans-unit id="dcd57c7482bcf9c8923cc59195564b8010899383" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCurve()</source>
          <target state="translated">ECParameterSpec.getCurve()</target>
        </trans-unit>
        <trans-unit id="4a45e378dc788609ce75184339098e2b7c75ccfd" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getGenerator()</source>
          <target state="translated">ECParameterSpec.getGenerator()</target>
        </trans-unit>
        <trans-unit id="66c081bfcece1f9d25bb87afd25936de90028129" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getOrder()</source>
          <target state="translated">ECParameterSpec.getOrder()</target>
        </trans-unit>
        <trans-unit id="131f0aca4fc7fbb9781dca63d6626d89d5db8fa5" translate="yes" xml:space="preserve">
          <source>ECPoint</source>
          <target state="translated">ECPoint</target>
        </trans-unit>
        <trans-unit id="7383fa4bf2e59ad882a32ae14ae81d683e482091" translate="yes" xml:space="preserve">
          <source>ECPoint.equals()</source>
          <target state="translated">ECPoint.equals()</target>
        </trans-unit>
        <trans-unit id="7d350700f06a34948120bb0632a8c123ac1fb971" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineX()</source>
          <target state="translated">ECPoint.getAffineX()</target>
        </trans-unit>
        <trans-unit id="4ecd3cff17d418a53e0d7cb8aa03a39da734ee30" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineY()</source>
          <target state="translated">ECPoint.getAffineY()</target>
        </trans-unit>
        <trans-unit id="7e3d647204a9e7b0889041c1399c6d8ed9b1c47f" translate="yes" xml:space="preserve">
          <source>ECPoint.hashCode()</source>
          <target state="translated">ECPoint.hashCode()</target>
        </trans-unit>
        <trans-unit id="7e9a73ec4defdbf0d1961ffb46ae295c5f1339ab" translate="yes" xml:space="preserve">
          <source>ECPrivateKey</source>
          <target state="translated">ECPrivateKey</target>
        </trans-unit>
        <trans-unit id="f11daf09d2ce19a720d760fccebcc0cc1fe0a68b" translate="yes" xml:space="preserve">
          <source>ECPrivateKey.getS()</source>
          <target state="translated">ECPrivateKey.getS()</target>
        </trans-unit>
        <trans-unit id="a01ce6d3172a87d1f54d00877245e24bb7f90413" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec</source>
          <target state="translated">ECPrivateKeySpec</target>
        </trans-unit>
        <trans-unit id="2b99934ce584b5dbb0802cc004496c1265e31810" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getParams()</source>
          <target state="translated">ECPrivateKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="36bdb0730aaaaa72a7ffc35fcfae08b77d615237" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getS()</source>
          <target state="translated">ECPrivateKeySpec.getS()</target>
        </trans-unit>
        <trans-unit id="d1776a7027dff3e5917cb3cebf94fd8101974337" translate="yes" xml:space="preserve">
          <source>ECPublicKey</source>
          <target state="translated">ECPublicKey</target>
        </trans-unit>
        <trans-unit id="af6a51f7b98fb87be1c59401b98b892e8c69ff96" translate="yes" xml:space="preserve">
          <source>ECPublicKey.getW()</source>
          <target state="translated">ECPublicKey.getW()</target>
        </trans-unit>
        <trans-unit id="9f0a498aa9c90edb4329c8a660aeb384742d6781" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec</source>
          <target state="translated">ECPublicKeySpec</target>
        </trans-unit>
        <trans-unit id="7f82aaa3c1b53eec25a273be77a538d0c2ec3969" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getParams()</source>
          <target state="translated">ECPublicKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="fb1af6c34d1ba0faae90738c011291744c98e2f9" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getW()</source>
          <target state="translated">ECPublicKeySpec.getW()</target>
        </trans-unit>
        <trans-unit id="23b9898e476dcc4add4efc0ed7ddb21640c0f19e" translate="yes" xml:space="preserve">
          <source>ECT - Europe/Paris</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402016f21d03e839e24e660b0cf6c79f311ae840" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH</source>
          <target state="translated">EDGE_STITCH</target>
        </trans-unit>
        <trans-unit id="6bbbc6534d75c412ef17b08bd13748b994075f5f" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_BOTTOM</source>
          <target state="translated">EDGE_STITCH_BOTTOM</target>
        </trans-unit>
        <trans-unit id="ee0dae08682963b6c4ca700b5fcd840f3e2da188" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_LEFT</source>
          <target state="translated">EDGE_STITCH_LEFT</target>
        </trans-unit>
        <trans-unit id="43c15148aa09100c39cdf6aa78755316addcd9fb" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_RIGHT</source>
          <target state="translated">EDGE_STITCH_RIGHT</target>
        </trans-unit>
        <trans-unit id="0dde2bed2e929721c8a19a054425e8326cf52ec8" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_TOP</source>
          <target state="translated">EDGE_STITCH_TOP</target>
        </trans-unit>
        <trans-unit id="660752e786b88b1d9b2dfbef6bb0a1fef020b836" translate="yes" xml:space="preserve">
          <source>EFFORT</source>
          <target state="translated">EFFORT</target>
        </trans-unit>
        <trans-unit id="6ba33a7b25ec924e3c7cdea49ff5d10a73abcd7d" translate="yes" xml:space="preserve">
          <source>EGYPTIAN_HIEROGLYPHS</source>
          <target state="translated">EGYPTIAN_HIEROGLYPHS</target>
        </trans-unit>
        <trans-unit id="aa891ea05dd88d34c7bc0f90160ef08ac7326076" translate="yes" xml:space="preserve">
          <source>EMOTICONS</source>
          <target state="translated">EMOTICONS</target>
        </trans-unit>
        <trans-unit id="3a6d67ab2fcaa4996ea55c9897e1e3cae775fff8" translate="yes" xml:space="preserve">
          <source>EMPTY_DESCRIPTOR</source>
          <target state="translated">EMPTY_DESCRIPTOR</target>
        </trans-unit>
        <trans-unit id="dfc809a8ebf4b81e691b32975c5035f21e16fd2c" translate="yes" xml:space="preserve">
          <source>EMPTY_LIST</source>
          <target state="translated">EMPTY_LIST</target>
        </trans-unit>
        <trans-unit id="2e8cdc469d0d7230be597797efd2ed063ada7cae" translate="yes" xml:space="preserve">
          <source>EMPTY_MAP</source>
          <target state="translated">EMPTY_MAP</target>
        </trans-unit>
        <trans-unit id="10621e09be025015f2a0097a6fba7fa1f19ac9b8" translate="yes" xml:space="preserve">
          <source>EMPTY_SET</source>
          <target state="translated">EMPTY_SET</target>
        </trans-unit>
        <trans-unit id="491b3a1cdd9a73aeeef2e2f7ce0522c4ac95684d" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERICS</source>
          <target state="translated">ENCLOSED_ALPHANUMERICS</target>
        </trans-unit>
        <trans-unit id="5b355594a8d1825c7bb8f59ad5f33b3daa288ed1" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_ALPHANUMERIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="4ec78e05d6223330ee2332780376af9b9f64b029" translate="yes" xml:space="preserve">
          <source>ENCLOSED_CJK_LETTERS_AND_MONTHS</source>
          <target state="translated">ENCLOSED_CJK_LETTERS_AND_MONTHS</target>
        </trans-unit>
        <trans-unit id="e8519b58a50233517f3c5d275538bafbc83a8613" translate="yes" xml:space="preserve">
          <source>ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="e75d2afc0ed3d23703380d1e72696098ff6dabb6" translate="yes" xml:space="preserve">
          <source>ENCRYPT_MODE</source>
          <target state="translated">ENCRYPT_MODE</target>
        </trans-unit>
        <trans-unit id="393a28fda214136f4aec6cb4d5e4360f2f046e43" translate="yes" xml:space="preserve">
          <source>ENDCOM</source>
          <target state="translated">ENDCOM</target>
        </trans-unit>
        <trans-unit id="b7e65914167d75e1013bd288e846628e8bbb73bf" translate="yes" xml:space="preserve">
          <source>ENDHDR</source>
          <target state="translated">ENDHDR</target>
        </trans-unit>
        <trans-unit id="8b2e5bd2a1a74bacd3940fd3569815719099b391" translate="yes" xml:space="preserve">
          <source>ENDOFF</source>
          <target state="translated">ENDOFF</target>
        </trans-unit>
        <trans-unit id="8aed026f99b127492256fe494fa85697e5488920" translate="yes" xml:space="preserve">
          <source>ENDSIG</source>
          <target state="translated">ENDSIG</target>
        </trans-unit>
        <trans-unit id="b143fee6e7c46f8dfc60a3eeb0ece1e6ccae10b9" translate="yes" xml:space="preserve">
          <source>ENDSIZ</source>
          <target state="translated">ENDSIZ</target>
        </trans-unit>
        <trans-unit id="dc06790ab72abd8ee1c03b84dcf3f268ae4fa511" translate="yes" xml:space="preserve">
          <source>ENDSUB</source>
          <target state="translated">ENDSUB</target>
        </trans-unit>
        <trans-unit id="3d528274c7d29305fe76c5d34bcc42a830b08b3b" translate="yes" xml:space="preserve">
          <source>ENDTOT</source>
          <target state="translated">ENDTOT</target>
        </trans-unit>
        <trans-unit id="3e11a998bc0323c14e989b22d66120389efdae55" translate="yes" xml:space="preserve">
          <source>END_OF_EXCLUSIVE</source>
          <target state="translated">END_OF_EXCLUSIVE</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="983e5366e4eea9b037be5e23f216579d19fc4609" translate="yes" xml:space="preserve">
          <source>ENGINE</source>
          <target state="translated">ENGINE</target>
        </trans-unit>
        <trans-unit id="349f2678344b9b0a2523d795d5fb6b827a8c0785" translate="yes" xml:space="preserve">
          <source>ENGINE_SCOPE</source>
          <target state="translated">ENGINE_SCOPE</target>
        </trans-unit>
        <trans-unit id="699f2d4f0cdb276b958015dc5dca45acab251e76" translate="yes" xml:space="preserve">
          <source>ENGINE_VERSION</source>
          <target state="translated">ENGINE_VERSION</target>
        </trans-unit>
        <trans-unit id="4a2b354b77f946e12e0e5b81b3239cc8efcbe278" translate="yes" xml:space="preserve">
          <source>ENGLISH</source>
          <target state="translated">ENGLISH</target>
        </trans-unit>
        <trans-unit id="ef991d5c4cde33653d2665b6c13fc11c56eb3f5b" translate="yes" xml:space="preserve">
          <source>ENTRY_CREATE</source>
          <target state="translated">ENTRY_CREATE</target>
        </trans-unit>
        <trans-unit id="e1a74e12d659227c84ef7223e000cabff2b54fb7" translate="yes" xml:space="preserve">
          <source>ENTRY_DELETE</source>
          <target state="translated">ENTRY_DELETE</target>
        </trans-unit>
        <trans-unit id="4b7934ace8e8fd618f6a5e0481147c47c29eabb8" translate="yes" xml:space="preserve">
          <source>ENTRY_MODIFY</source>
          <target state="translated">ENTRY_MODIFY</target>
        </trans-unit>
        <trans-unit id="507ccbdaf83ab03c2929498330b7d2836e4c06b2" translate="yes" xml:space="preserve">
          <source>ENUM</source>
          <target state="translated">ENUM</target>
        </trans-unit>
        <trans-unit id="68475bec775f8b9b380a0e04a912508dc18dcd0b" translate="yes" xml:space="preserve">
          <source>ENUM_CONSTANT</source>
          <target state="translated">ENUM_CONSTANT</target>
        </trans-unit>
        <trans-unit id="5a1314ccd8e6a487c3b381d66baf0dd1803fa1cf" translate="yes" xml:space="preserve">
          <source>ENVELOPE</source>
          <target state="translated">ENVELOPE</target>
        </trans-unit>
        <trans-unit id="c6bf2c7899e6331223de4ae9f50d76a0f8fe3c52" translate="yes" xml:space="preserve">
          <source>EOFException</source>
          <target state="translated">EOFException</target>
        </trans-unit>
        <trans-unit id="180f4ca1eb6f7e228940831c3ed7caa720e87779" translate="yes" xml:space="preserve">
          <source>EPOCH</source>
          <target state="translated">EPOCH</target>
        </trans-unit>
        <trans-unit id="1fcc7a3122a5f8c4140f007182abe0fade082e65" translate="yes" xml:space="preserve">
          <source>EPOCH_DAY</source>
          <target state="translated">EPOCH_DAY</target>
        </trans-unit>
        <trans-unit id="c41a4b4ae13ef007bf159e37752b1d297454b600" translate="yes" xml:space="preserve">
          <source>EQ</source>
          <target state="translated">EQ</target>
        </trans-unit>
        <trans-unit id="47adbfcf54b9ab1b1b54eea502241843be28c71d" translate="yes" xml:space="preserve">
          <source>ERA</source>
          <target state="translated">ERA</target>
        </trans-unit>
        <trans-unit id="e4aa96e435fce45d0d56b2b0019620a16eed5688" translate="yes" xml:space="preserve">
          <source>ERAS</source>
          <target state="translated">ERAS</target>
        </trans-unit>
        <trans-unit id="077bb97a54f149834bd40c1ad3ab8141b7e634d4" translate="yes" xml:space="preserve">
          <source>ERA_FIELD</source>
          <target state="translated">ERA_FIELD</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="651b9fb242d78b288546cebe26106d3d3f3b246f" translate="yes" xml:space="preserve">
          <source>ERROR message type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd484dbbc827b7622686956381db36daef7f712b" translate="yes" xml:space="preserve">
          <source>EST - -05:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c27e93c556dbe00ef891baf86b3418d50553fd" translate="yes" xml:space="preserve">
          <source>ETHIOPIC</source>
          <target state="translated">ETHIOPIC</target>
        </trans-unit>
        <trans-unit id="a15a2079da08e3a30c732b3350dafe3bf6305b9f" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED</source>
          <target state="translated">ETHIOPIC_EXTENDED</target>
        </trans-unit>
        <trans-unit id="4e601c4ffe07965449feba2058f2c6a512e892b1" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED_A</source>
          <target state="translated">ETHIOPIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="e7f1c3b504601965ec63c3c5738199dc6e01741d" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_SUPPLEMENT</source>
          <target state="translated">ETHIOPIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="fce39c68ed65f718ed283533e549dce3a865f962" translate="yes" xml:space="preserve">
          <source>EXCEEDS_PAD</source>
          <target state="translated">EXCEEDS_PAD</target>
        </trans-unit>
        <trans-unit id="c8a13c755c402a64971d4b98652a6f4e8e3ab1f5" translate="yes" xml:space="preserve">
          <source>EXCEPTION_PARAMETER</source>
          <target state="translated">EXCEPTION_PARAMETER</target>
        </trans-unit>
        <trans-unit id="03534e945b5d675d412aa5ef2987348d732061fd" translate="yes" xml:space="preserve">
          <source>EXECUTABLE</source>
          <target state="translated">EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="790392d6b839abbb5b061152b6a3114de84502b4" translate="yes" xml:space="preserve">
          <source>EXECUTE</source>
          <target state="translated">EXECUTE</target>
        </trans-unit>
        <trans-unit id="1731ffba0ee4baab452bcabda551595bf603c3b5" translate="yes" xml:space="preserve">
          <source>EXECUTIVE</source>
          <target state="translated">EXECUTIVE</target>
        </trans-unit>
        <trans-unit id="72c0bb5a2c016bd8fd0870d3850d52a2c48c2800" translate="yes" xml:space="preserve">
          <source>EXPIRED</source>
          <target state="translated">EXPIRED</target>
        </trans-unit>
        <trans-unit id="b217ce5e2f5a84693915f65137b50128a2d93ecf" translate="yes" xml:space="preserve">
          <source>EXPONENT</source>
          <target state="translated">EXPONENT</target>
        </trans-unit>
        <trans-unit id="4d05c12014f8617e34cf49b2b6521fd877c48bc7" translate="yes" xml:space="preserve">
          <source>EXPONENT_SIGN</source>
          <target state="translated">EXPONENT_SIGN</target>
        </trans-unit>
        <trans-unit id="c2bcab92bdc244db609a58e049f5cefc054387e2" translate="yes" xml:space="preserve">
          <source>EXPONENT_SYMBOL</source>
          <target state="translated">EXPONENT_SYMBOL</target>
        </trans-unit>
        <trans-unit id="26a2fbfc322563a8440845ba951ca490ee30369d" translate="yes" xml:space="preserve">
          <source>EXTCRC</source>
          <target state="translated">EXTCRC</target>
        </trans-unit>
        <trans-unit id="cb537b8baaa53b3f29896a0373eaa7d0333a79eb" translate="yes" xml:space="preserve">
          <source>EXTENDED_FILTERING</source>
          <target state="translated">EXTENDED_FILTERING</target>
        </trans-unit>
        <trans-unit id="4db927d43d61b35fff54bd6c323b8710b34c3d99" translate="yes" xml:space="preserve">
          <source>EXTENSION_INSTALLATION</source>
          <target state="translated">EXTENSION_INSTALLATION</target>
        </trans-unit>
        <trans-unit id="41eb60c34fe710529f77d955b275d64c5915a5de" translate="yes" xml:space="preserve">
          <source>EXTENSION_LIST</source>
          <target state="translated">EXTENSION_LIST</target>
        </trans-unit>
        <trans-unit id="6857c1686c9ac8872c8c0399e4cf9dc0375c2608" translate="yes" xml:space="preserve">
          <source>EXTENSION_NAME</source>
          <target state="translated">EXTENSION_NAME</target>
        </trans-unit>
        <trans-unit id="5773fcd27b5d64b8c5e2a344515db52b928e31a2" translate="yes" xml:space="preserve">
          <source>EXTHDR</source>
          <target state="translated">EXTHDR</target>
        </trans-unit>
        <trans-unit id="a45713b57586e6acc311c72dac2275618c96be2c" translate="yes" xml:space="preserve">
          <source>EXTLEN</source>
          <target state="translated">EXTLEN</target>
        </trans-unit>
        <trans-unit id="d898f6ff8fc917535a2d6319379be4322d743dc2" translate="yes" xml:space="preserve">
          <source>EXTSIG</source>
          <target state="translated">EXTSIG</target>
        </trans-unit>
        <trans-unit id="4b242b26c327d4a78a810fa263c50adc3f2ef775" translate="yes" xml:space="preserve">
          <source>EXTSIZ</source>
          <target state="translated">EXTSIZ</target>
        </trans-unit>
        <trans-unit id="a6d0cff754314713de966651f47bf73018de3040" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ArrayList&lt;/code&gt; instance has a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a840f61339005907763e96498f0cf96263613394" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CertPath&lt;/code&gt; object must support one or more encodings so that the object can be translated into a byte array for storage or transmission to other parties. Preferably, these encodings should be well-documented standards (such as PKCS#7). One of the encodings supported by a &lt;code&gt;CertPath&lt;/code&gt; is considered the default encoding. This encoding is used if no encoding is explicitly requested (for the &lt;a href=&quot;certpath#getEncoded--&quot;&gt;&lt;code&gt;getEncoded()&lt;/code&gt;&lt;/a&gt; method, for instance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149fca2b607196a4885c857e57aa928b14d4cd95" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CompiledScript&lt;/code&gt; is associated with a &lt;code&gt;ScriptEngine&lt;/code&gt; -- A call to an &lt;code&gt;eval&lt;/code&gt; method of the &lt;code&gt;CompiledScript&lt;/code&gt; causes the execution of the script by the &lt;code&gt;ScriptEngine&lt;/code&gt;. Changes in the state of the &lt;code&gt;ScriptEngine&lt;/code&gt; caused by execution of the &lt;code&gt;CompiledScript&lt;/code&gt; may visible during subsequent executions of scripts by the engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27124d10894e68d1709bed5e29c408a3fa942eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageReaderSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageReader&lt;/code&gt; class with which it is associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ee52ae769db4712131ca37095c4dc2f78ce671" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageWriterSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageWriter&lt;/code&gt; class with which it is associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd3cc0500b20ea7e632cc10c3d71e047b6e2776" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; specified implements additional checks on a certificate. Typically, these are checks to process and verify private extensions contained in certificates. Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; should be instantiated with any initialization parameters needed to execute the check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bc814f0442e2a365e1984e9a9ac3e17be723aa" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; must be able to check the revocation status of certificates with OCSP and CRLs. By default, OCSP is the preferred mechanism for checking revocation status, with CRLs as the fallback mechanism. However, this preference can be switched to CRLs with the &lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt;&lt;code&gt;PREFER_CRLS&lt;/code&gt;&lt;/a&gt; option. In addition, the fallback mechanism can be disabled with the &lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt;&lt;code&gt;NO_FALLBACK&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3faea01a84f93ced762c58f36c9ec3c5d9f8eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ProcessBuilder&lt;/code&gt; instance manages a collection of process attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method creates a new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance with those attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a825afc410be57f11b3140618489849a3eca76" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ThreadGroup&lt;/code&gt; will receive its own instance; this allows different &lt;code&gt;Applet&lt;/code&gt;s in the same browser (for example) to each have their own registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead1ca17c6d920968eacad59c4f36582e117a902" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;byte&lt;/code&gt; in the subarray is converted to a &lt;code&gt;char&lt;/code&gt; as specified in the method above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d4cbe8023a80b2c2a8860e8d316e49318ead98" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;invokedynamic&lt;/code&gt; instruction statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the call site's name and type descriptor, just like &lt;code&gt;invokevirtual&lt;/code&gt; and the other invoke instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0ce09c4af09947386ad8cc81d2d4762a70f4c5" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;key&lt;/em&gt; is a nonempty string of characters which may not contain any of the characters comma (&lt;code&gt;,&lt;/code&gt;), equals (&lt;code&gt;=&lt;/code&gt;), colon, asterisk, or question mark. The same key may not occur twice in a given ObjectName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8216429331768e0b4417c39ef6544205df56fd" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;value&lt;/em&gt; associated with a key is a string of characters that is either unquoted or quoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63200ade0ddff96018a1d34e2c186a641ed81ded" translate="yes" xml:space="preserve">
          <source>Each Hijrah variant is configured individually. Each variant is defined by a property resource that defines the &lt;code&gt;ID&lt;/code&gt;, the &lt;code&gt;calendar type&lt;/code&gt;, the start of the calendar, the alignment with the ISO calendar, and the length of each month for a range of years. The variants are identified in the &lt;code&gt;calendars.properties&lt;/code&gt; file. The new properties are prefixed with &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c1e383d0a9ffc65595adce6358af59c57f36b2" translate="yes" xml:space="preserve">
          <source>Each HijrahDate is created bound to a particular HijrahChronology, The same chronology is propagated to each HijrahDate computed from the date. To use a different Hijrah variant, its HijrahChronology can be used to create new HijrahDate instances. Alternatively, the &lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt;&lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt;&lt;/a&gt; method can be used to convert to a new HijrahChronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1c16ba9d553f616b5d2859beee5990afc805d9" translate="yes" xml:space="preserve">
          <source>Each HttpURLConnection instance is used to make a single request but the underlying network connection to the HTTP server may be transparently shared by other instances. Calling the close() methods on the InputStream or OutputStream of an HttpURLConnection after a request may free network resources associated with this instance but has no effect on any shared persistent connection. Calling the disconnect() method may close the underlying socket if a persistent connection is otherwise idle at that time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db30d9a58fa9a7fc324f1e68bab8617024f37c0e" translate="yes" xml:space="preserve">
          <source>Each Logger and each Handler can have a filter associated with it. The Logger or Handler will call the isLoggable method to check if a given LogRecord should be published. If isLoggable returns false, the LogRecord will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b441776e0dfacc09dbb8e4364d83bf2d0985f0" translate="yes" xml:space="preserve">
          <source>Each Logger has a &quot;Level&quot; associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to &lt;code&gt;null&lt;/code&gt;, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0539a3e314b03b3ea9a0cbb43e0f8610ddc537c5" translate="yes" xml:space="preserve">
          <source>Each Logger keeps track of a &quot;parent&quot; Logger, which is its nearest existing ancestor in the Logger namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96a7dd0055962446eaf1a58405a8ea9dd09ba04" translate="yes" xml:space="preserve">
          <source>Each Logger may have a &lt;code&gt;ResourceBundle&lt;/code&gt; associated with it. The &lt;code&gt;ResourceBundle&lt;/code&gt; may be specified by name, using the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; factory method, or by value - using the &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method. This bundle will be used for localizing logging messages. If a Logger does not have its own &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name, then it will inherit the &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name from its parent, recursively up the tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cd0cc22b239c187710f4ce2bcccac9b6d7dc99" translate="yes" xml:space="preserve">
          <source>Each PropertyEditor should have a null constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dd6b68d2a52f4d25d07ee4f763280ce9fd2773" translate="yes" xml:space="preserve">
          <source>Each SSL/TLS connection must have one client and one server, thus each endpoint must decide which role to assume. This choice determines who begins the handshaking process as well as which type of messages should be sent by each party. The method &lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; configures the mode. Once the initial handshaking has started, an &lt;code&gt;SSLEngine&lt;/code&gt; can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfee108b90e259b3bdecf55d6cbeb3c5f9c291d0" translate="yes" xml:space="preserve">
          <source>Each action in a thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22835e80cd2b663031fbea21b671773b92c12f8" translate="yes" xml:space="preserve">
          <source>Each attribute class implements one or more of these tagging subinterfaces to indicate where the attribute can be used in the API. If an attribute class implements multiple tagging subinterfaces, the attribute can be used in multiple contexts. For example, the media attribute can apply to one document in a print job as a &lt;code&gt;DocAttribute&lt;/code&gt; or to an entire print job as a &lt;code&gt;PrintRequestAttribute&lt;/code&gt;. Certain low-level attributes are never used on their own but are always aggregated into higher-level attributes. These low-level attribute classes only implement interface &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt;, not any of the tagging subinterfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc4f018d78ba26ff9dc9ce389eb162a1bc736da" translate="yes" xml:space="preserve">
          <source>Each attribute class implements the &lt;code&gt;Attribute&lt;/code&gt; interface, either directly or indirectly, to mark it as a printing attribute. An attribute class that can appear in restricted attribute sets in certain contexts also implements one or more subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;. Most attribute classes also extend the appropriate abstract syntax class to get the implementation. Consider the &lt;code&gt;Sides&lt;/code&gt; attribute class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf4053aa46bfb1c3e5e89ba0fab4d494a89a713" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;DateFormat.Field&lt;/code&gt;, with the corresponding attribute value being the same as the attribute key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5713dda8efda83aaf04914a5b85a2f542a3aa4d2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;Field&lt;/code&gt;. It is up to each &lt;code&gt;Format&lt;/code&gt; implementation to define what the legal values are for each attribute in the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;, but typically the attribute key is also used as the attribute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170153981068eb46095e70fc8e45a9ab4b3358c2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;NumberFormat.Field&lt;/code&gt;, with the attribute value being the same as the attribute key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee2047cab7c974ace281bd2ac217169d97bf32a" translate="yes" xml:space="preserve">
          <source>Each byte read from the input stream is regarded as a character in the range &lt;code&gt;'\u0000'&lt;/code&gt; through &lt;code&gt;'\u00FF'&lt;/code&gt;. The character value is used to look up five possible attributes of the character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565935ca5a7a8dff2c75d40a78fe34cbc9914ba0" translate="yes" xml:space="preserve">
          <source>Each call to the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will return a new KeyStore object of type &lt;code&gt;type&lt;/code&gt;. Its &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method is invoked using a &lt;code&gt;LoadStoreParameter&lt;/code&gt; that encapsulates &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a2b8eb8432d2bb19b62991410a2d367b2cdc90" translate="yes" xml:space="preserve">
          <source>Each category of events is handled by a corresponding listener: &lt;code&gt;NamespaceChangeListener&lt;/code&gt;, &lt;code&gt;ObjectChangeListener&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415096700b0f811e1c654bf65b30052bf2302aff" translate="yes" xml:space="preserve">
          <source>Each chronology must define a chronology ID that is unique within the system. If the chronology represents a calendar system defined by the CLDR specification then the calendar type is the concatenation of the CLDR type and, if applicable, the CLDR variant,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2d6cc6afa42e50b69369bd84b9bdddfa4ee6b9" translate="yes" xml:space="preserve">
          <source>Each cipher suite in the &lt;code&gt;suites&lt;/code&gt; parameter must have been listed by getSupportedCipherSuites(), or the method will fail. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c3b451a2d3ee3d8844988245d012190589a542" translate="yes" xml:space="preserve">
          <source>Each class implementing &lt;code&gt;ScriptEngine&lt;/code&gt; has a corresponding factory that exposes metadata describing the engine class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a91d31af8f03563292751345aae397335abb093" translate="yes" xml:space="preserve">
          <source>Each class named by &lt;code&gt;markerInterfaces&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;Rd&lt;/code&gt;, the return type of &lt;code&gt;invokedType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;. Each &lt;code&gt;MethodType&lt;/code&gt; named by &lt;code&gt;bridges&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;samMethodType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d60b28ad1f9a5d1a9d51e8f7b9a52c84ed48aae" translate="yes" xml:space="preserve">
          <source>Each client is created by an instance of &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8000ceb2cb5760f446a63dd9dff4d11a4e8ec2d3" translate="yes" xml:space="preserve">
          <source>Each configuration file should contain a list of fully-qualified class names, one per line. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782519cfed22f6e5630e1de515f995c9b7d02625" translate="yes" xml:space="preserve">
          <source>Each connector server is created by an instance of &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bc38c8f6c57bd6e23990238c181815f876d6f0" translate="yes" xml:space="preserve">
          <source>Each customizer should have a null constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ecc95f5a6c3bf69dcc6fd7a4ebe68db660d248" translate="yes" xml:space="preserve">
          <source>Each customizer should inherit from the java.awt.Component class so it can be instantiated inside an AWT dialog or panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01b68dad2676514cbe7be058ccbd40bc1155394" translate="yes" xml:space="preserve">
          <source>Each date time instance is composed of fields that are conveniently made available by the APIs. For lower level access to the fields refer to the &lt;code&gt;java.time.temporal&lt;/code&gt; package. Each class includes support for printing and parsing all manner of dates and times. Refer to the &lt;code&gt;java.time.format&lt;/code&gt; package for customization options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11cc35a89643391e6013e902ac7edeaaeae3d1a" translate="yes" xml:space="preserve">
          <source>Each digit character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1d6f4796b80a8ad203ea5c5b68aef2c7309166" translate="yes" xml:space="preserve">
          <source>Each element in this array corresponds to an observed object in the vector. It contains a bit mask of the flags &lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt;&lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt;&lt;/a&gt; etc, indicating whether the corresponding notification has already been sent for the MBean being monitored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f87dde92d31d6810a3ee06f461b787634d6bd98" translate="yes" xml:space="preserve">
          <source>Each element is a &lt;code&gt;CompositeData&lt;/code&gt; representing StackTraceElement containing the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6bf4d0adf1bf11f2e3b8671e73113281627f53" translate="yes" xml:space="preserve">
          <source>Each element of the set is a &lt;code&gt;String&lt;/code&gt; representing the Object Identifier (OID) of the X.509 extension that is supported. The OID is represented by a set of nonnegative integers separated by periods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dac62c065c1000a9a51697be436335502f33e84" translate="yes" xml:space="preserve">
          <source>Each element represents a method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19220aee7d71656e00ce6276767f27bb53aaaf2" translate="yes" xml:space="preserve">
          <source>Each entry in a keystore is identified by an &quot;alias&quot; string. In the case of private keys and their associated certificate chains, these strings distinguish among the different ways in which the entity may authenticate itself. For example, the entity may authenticate itself using different certificate authorities, or using different public key algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088d514368fa29cc6091cc91bcf119d3b0a2d2d3" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Configuration&lt;/code&gt; is indexed via an application name,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1f5b3e98b650d15b6fcc93e098064f4007429c" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Policy&lt;/code&gt; is represented as a &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry. Each &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry specifies a codebase, code signers, and Principals triplet, as well as the Permissions granted to that triplet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2550370ed13c7f4ac08a6a67450eb8b55df82cad" translate="yes" xml:space="preserve">
          <source>Each extension contains an object identifier, a criticality setting indicating whether it is a critical or a non-critical extension, and and an ASN.1 DER-encoded value. Its ASN.1 definition is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743a4bde1183aedc0cbc8935c3fa92ce0cd4f60b" translate="yes" xml:space="preserve">
          <source>Each extension in a certificate/CRL may be designated as critical or non-critical. A certificate/CRL-using system (an application validating a certificate/CRL) must reject the certificate/CRL if it encounters a critical extension it does not recognize. A non-critical extension may be ignored if it is not recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7069adeee248e2073c9ff4ae57f7c6095f03187" translate="yes" xml:space="preserve">
          <source>Each file must be separated from the one that follows it by a comma (,).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ae06bf9012c5a5614a45f104ab7638a0ad8399" translate="yes" xml:space="preserve">
          <source>Each given argument object must match the corresponding bound parameter type. If a bound parameter type is a primitive, the argument object must be a wrapper, and will be unboxed to produce the primitive value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0078f8ee6b18d2ffdb5e7493ab727438f14546" translate="yes" xml:space="preserve">
          <source>Each group defines its own format for the region ID it provides. The TZDB group defines IDs such as 'Europe/London' or 'America/New_York'. TZDB IDs take precedence over other groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bc89a3ea9cd46de7285bc3bf8c2cc87bcd59c1" translate="yes" xml:space="preserve">
          <source>Each implementation of a &lt;code&gt;Processor&lt;/code&gt; must provide a public no-argument constructor to be used by tools to instantiate the processor. The tool infrastructure will interact with classes implementing this interface as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c045647fbfd21ec0428affc10628c1e56392c0" translate="yes" xml:space="preserve">
          <source>Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes are accumulated in a buffer before being written to the underlying output stream. The size of this buffer may be specified, but by default it is large enough for most purposes. Note that the characters passed to the write() methods are not buffered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe2076d3d2b08d5f4414c4cdde943dd467b1a57" translate="yes" xml:space="preserve">
          <source>Each invocation of one of an InputStreamReader's read() methods may cause one or more bytes to be read from the underlying byte-input stream. To enable the efficient conversion of bytes to characters, more bytes may be read ahead from the underlying stream than are necessary to satisfy the current read operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9473b8fa268ed48aa24d17927cd4344a0eb30672" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method will decode as many bytes as possible from the input buffer, writing the resulting characters to the output buffer. The &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when a decoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from a decoding error, as appropriate, and try again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c67700d3876b38e31aa40447f02d09292cfb08" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method will encode as many characters as possible from the input buffer, writing the resulting bytes to the output buffer. The &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when an encoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from an encoding error, as appropriate, and try again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e88e400c4654f5b09bd9dd19d97774dccdd2ff9" translate="yes" xml:space="preserve">
          <source>Each invocation of this method enables or disables verbose output globally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7cb79e7be4786368a3d0dd817157d0652b7e06" translate="yes" xml:space="preserve">
          <source>Each item value's hash code is added to the returned hash code. If an item value is an array, its hash code is obtained as if by calling the &lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt;&lt;code&gt;deepHashCode&lt;/code&gt;&lt;/a&gt; method for arrays of object reference types or the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; for arrays of primitive types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cf9c462f153d7df40f29787cf703a11033a0aa" translate="yes" xml:space="preserve">
          <source>Each key in an &lt;code&gt;AttributeSet&lt;/code&gt; corresponds to a category, and the value of the key can only be one of the attribute values that belong to the category represented by the key. Thus, unlike a &lt;code&gt;Map&lt;/code&gt;, an &lt;code&gt;AttributeSet&lt;/code&gt; restricts the possible values of a key: an attribute category cannot be set to an attribute value that does not belong to that category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac52c43de1066f436085209661d030de63b9572e" translate="yes" xml:space="preserve">
          <source>Each key in the cancelled-key set is removed from each key set of which it is a member, and its channel is deregistered. This step leaves the cancelled-key set empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbd27a5e5299b41f1319632d13712009604c3ed" translate="yes" xml:space="preserve">
          <source>Each key object in a &lt;code&gt;WeakHashMap&lt;/code&gt; is stored indirectly as the referent of a weak reference. Therefore a key will automatically be removed only after the weak references to it, both inside and outside of the map, have been cleared by the garbage collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a53531e28505693c3a4e37c248fd62c97f55c9" translate="yes" xml:space="preserve">
          <source>Each memory pool has a manageable attribute called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e2d99e157b618b87e35252d9dc48542f98cb59" translate="yes" xml:space="preserve">
          <source>Each method in an implementation of interface Doc is permitted always to return the same object each time the method is called. This has implications for a Print Job or other caller of a doc object whose print data representation object &quot;consumes&quot; the print data as the caller obtains the print data, such as a print data representation object which is a stream. Once the Print Job has called &lt;a href=&quot;doc#getPrintData--&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; and obtained the stream, any further calls to &lt;a href=&quot;doc#getPrintData--&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; will return the same stream object upon which reading may already be in progress,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4a43a83beb89b612ad871a2f3a7ae9dcfaf2dd" translate="yes" xml:space="preserve">
          <source>Each method invocation on the queue returned by this method results in exactly one method invocation on the backing deque, with one exception. The &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll&lt;/code&gt;&lt;/a&gt; method is implemented as a sequence of &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; invocations on the backing deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b998914b040c836fdbef3cc87306da0d4d5d957e" translate="yes" xml:space="preserve">
          <source>Each method invocation on the set returned by this method results in exactly one method invocation on the backing map or its &lt;code&gt;keySet&lt;/code&gt; view, with one exception. The &lt;code&gt;addAll&lt;/code&gt; method is implemented as a sequence of &lt;code&gt;put&lt;/code&gt; invocations on the backing map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783132c372e3366f8fef14de6ff263e84edbf665" translate="yes" xml:space="preserve">
          <source>Each method of this interface that returns a list of elements will return them in the order that is natural for the underlying source of program information. For example, if the underlying source of information is Java source code, then the elements will be returned in source code order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673e0ec0aa7ef41b16f66294c8a1d2774bb4f309" translate="yes" xml:space="preserve">
          <source>Each method returns an appropriate object or &lt;code&gt;null&lt;/code&gt; if the provider does not support the given encoding. Typical providers support more than one encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44627a58d5af00c8a91a9cfaf99c9a74f62ca41e" translate="yes" xml:space="preserve">
          <source>Each name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt;&lt;code&gt;addPathToName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt;&lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9a48cf2f6e1c897b3ede0cdbdf6dc89635caf1" translate="yes" xml:space="preserve">
          <source>Each name passed as an argument to a &lt;code&gt;Context&lt;/code&gt; method is relative to that context. The empty name is used to name the context itself. A name parameter may never be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5b9b92d0b960981f6e6716445c7a7f55ac6d65" translate="yes" xml:space="preserve">
          <source>Each name passed as an argument to a &lt;code&gt;DirContext&lt;/code&gt; method is relative to that context. The empty name is used to name the context itself. The name parameter may never be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9fd91c22d3d82aa93d0176951e81ef7776d0b6" translate="yes" xml:space="preserve">
          <source>Each observer has its &lt;code&gt;update&lt;/code&gt; method called with two arguments: this observable object and &lt;code&gt;null&lt;/code&gt;. In other words, this method is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ce380da675e7f0b1e4917bc23055f5e7ce4335" translate="yes" xml:space="preserve">
          <source>Each observer has its &lt;code&gt;update&lt;/code&gt; method called with two arguments: this observable object and the &lt;code&gt;arg&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502a1a2ef66daf3fbef3ae47056f78891a6d1445" translate="yes" xml:space="preserve">
          <source>Each of the above &lt;code&gt;set&lt;/code&gt; methods has a corresponding &lt;code&gt;get&lt;/code&gt; method to retrieve the value of the parameter or general request property. The specific parameters and general request properties that are applicable are protocol specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0d03c8aac8695e27586407b58bd4b97a9ed806" translate="yes" xml:space="preserve">
          <source>Each of the above calls to &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; generates a single invokevirtual instruction with the symbolic type descriptor indicated in the following comment. In these examples, the helper method &lt;code&gt;assertEquals&lt;/code&gt; is assumed to be a method which calls &lt;a href=&quot;../../util/objects#equals-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;Objects.equals&lt;/code&gt;&lt;/a&gt; on its arguments, and asserts that the result is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ee5645be1450d105b3e522af3eaaafb76d02e9" translate="yes" xml:space="preserve">
          <source>Each of the above categories has an associated unique &lt;a href=&quot;processbuilder.redirect.type&quot;&gt;&lt;code&gt;Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d955d4acbd65ec03706a307e0a060780c16cac09" translate="yes" xml:space="preserve">
          <source>Each of the standard plug-ins supports a so-called &quot;native&quot; metadata format, which encodes its metadata losslessly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0b36440aea8153ae41de4799147054c7e06929" translate="yes" xml:space="preserve">
          <source>Each of these corresponds to the IPP &quot;media&quot; attribute. The current API does not support describing media by characteristics (eg colour, opacity). This may be supported in a later revision of the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ab4a975283fc7ad1605a8f60196eed4c2c6918" translate="yes" xml:space="preserve">
          <source>Each of these methods by default throws &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Implementations of these methods must be internally thread-safe, and should in general be short and not block. Defining these methods is the &lt;em&gt;only&lt;/em&gt; supported means of using this class. All other methods are declared &lt;code&gt;final&lt;/code&gt; because they cannot be independently varied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6828b8f34a5c4ea3d2023fa0a14df6e8565b19eb" translate="yes" xml:space="preserve">
          <source>Each of these methods has two variants; one with an explicit locale and one without; the latter uses the default &lt;a href=&quot;locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaffb86273fddf28001dd1a11bb0827e2b68eaf" translate="yes" xml:space="preserve">
          <source>Each of these methods returns a boolean indicating success or failure. More information about a successful match can be obtained by querying the state of the matcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b19b6ca6a626f62a7c3238ef8f29a6abc072f0" translate="yes" xml:space="preserve">
          <source>Each of these permissions is a consequence of the fact that a lookup object with private access can be securely traced back to an originating class, whose &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;bytecode behaviors&lt;/a&gt; and Java language access permissions can be reliably determined and emulated by method handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d05d316190d95ec73c2c5bf47077402a6a53da" translate="yes" xml:space="preserve">
          <source>Each particular &lt;code&gt;ImageReader&lt;/code&gt; implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61f51548504f8ca936a09ec82bd4068fa6143d1" translate="yes" xml:space="preserve">
          <source>Each particular &lt;code&gt;ImageWriter&lt;/code&gt; implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce679f49476b014252750ba7796bd850eb4c8536" translate="yes" xml:space="preserve">
          <source>Each platform MXBean is a &lt;a href=&quot;platformmanagedobject&quot;&gt;&lt;code&gt;PlatformManagedObject&lt;/code&gt;&lt;/a&gt; and it has a unique &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for registration in the platform &lt;code&gt;MBeanServer&lt;/code&gt; as returned by by the &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt;&lt;code&gt;getObjectName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daea9f1ccaa0b5e62c4ab09835e81e4fb9a51e9" translate="yes" xml:space="preserve">
          <source>Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Each entry specifies the set of permissions that are to be granted (if positive) or denied (if negative).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2932feb10e4d108367970313b7982962322be54a" translate="yes" xml:space="preserve">
          <source>Each printer has a set of capabilities, such as the ability to print on different paper sizes or the ability to print more than one copy. Each of the capabilities has a range of values. For example, a printer's orientation capability might have this range of values: [landscape, portrait]. For each print request, the capability is set to one of these values. The Java Print Service API uses the term &lt;b&gt;attribute category&lt;/b&gt; to refer to a printer capability and the term &lt;b&gt;attribute value&lt;/b&gt; to refer to the value of the capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e300e813772a0f83953eca2f3b2527d020d8d1" translate="yes" xml:space="preserve">
          <source>Each process builder manages these process attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849598ea766b43e4919ab3fa820b73a6427b2744" translate="yes" xml:space="preserve">
          <source>Each provider has a name and a version number, and is configured in each runtime it is installed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a90a42155e73a5b9ab2065847b923d2c8b2b899" translate="yes" xml:space="preserve">
          <source>Each proxy class has one public constructor that takes one argument, an implementation of the interface &lt;a href=&quot;invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt;, to set the invocation handler for a proxy instance. Rather than having to use the reflection API to access the public constructor, a proxy instance can be also be created by calling the &lt;a href=&quot;proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt; method, which combines the actions of calling &lt;a href=&quot;proxy#getProxyClass-java.lang.ClassLoader-java.lang.Class...-&quot;&gt;&lt;code&gt;Proxy.getProxyClass&lt;/code&gt;&lt;/a&gt; with invoking the constructor with an invocation handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295ede88a9dcd8719a71bb39c67706b4af5059f3" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler, the one that was passed to its constructor. The static &lt;a href=&quot;proxy#getInvocationHandler-java.lang.Object-&quot;&gt;&lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt;&lt;/a&gt; method will return the invocation handler associated with the proxy instance passed as its argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ec388961cae122e1aeaea5e044281ae2107003" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler. When a method is invoked on a proxy instance, the method invocation is encoded and dispatched to the &lt;code&gt;invoke&lt;/code&gt; method of its invocation handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fa56c08a79e653dbfc2dc554b903cdcaf57d3f" translate="yes" xml:space="preserve">
          <source>Each resource bundle in a family contains the same items, but the items have been translated for the locale represented by that resource bundle. For example, both &quot;MyResources&quot; and &quot;MyResources_de&quot; may have a &lt;code&gt;String&lt;/code&gt; that's used on a button for canceling operations. In &quot;MyResources&quot; the &lt;code&gt;String&lt;/code&gt; may contain &quot;Cancel&quot; and in &quot;MyResources_de&quot; it may contain &quot;Abbrechen&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0bcb7dd76220d8c20abfafeece056add1af87c" translate="yes" xml:space="preserve">
          <source>Each returned &lt;code&gt;Chronology&lt;/code&gt; is available for use in the system. The set of chronologies includes the system chronologies and any chronologies provided by the application via ServiceLoader configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef148205bd5bfd7b3e9dbe0dbf368bcaf66fc0c" translate="yes" xml:space="preserve">
          <source>Each revoked certificate is identified in a CRL by its certificate serial number. When a certificate-using system uses a certificate (e.g., for verifying a remote user's digital signature), that system not only checks the certificate signature and validity but also acquires a suitably- recent CRL and checks that the certificate serial number is not on that CRL. The meaning of &quot;suitably-recent&quot; may vary with local policy, but it usually means the most recently-issued CRL. A CA issues a new CRL on a regular periodic basis (e.g., hourly, daily, or weekly). Entries are added to CRLs as revocations occur, and an entry may be removed when the certificate expiration date is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ad7bc118cab62541d32ce735ae842b5ce036ad" translate="yes" xml:space="preserve">
          <source>Each rounding mode description includes a table listing how different two-digit decimal values would round to a one digit decimal value under the rounding mode in question. The result column in the tables could be gotten by creating a &lt;code&gt;BigDecimal&lt;/code&gt; number with the specified value, forming a &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object with the proper settings (&lt;code&gt;precision&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;, and the &lt;code&gt;roundingMode&lt;/code&gt; set to the rounding mode in question), and calling &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; on this number with the proper &lt;code&gt;MathContext&lt;/code&gt;. A summary table showing the results of these rounding operations for all rounding modes appears below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a267075acf93d9f65e428d79bf8aefeaba71a1" translate="yes" xml:space="preserve">
          <source>Each service has a provider that offers the service, a type, an algorithm name, and the name of the class that implements the service. Optionally, it also includes a list of alternate algorithm names for this service (aliases) and attributes, which are a map of (name, value) String pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b6e2fd52325416fb94ae5510103f0016e4b5ea" translate="yes" xml:space="preserve">
          <source>Each service provider has an optional resource that lists properties specific to that provider. The name of this resource is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68225e69d8223f42292918c2840519ebc09c2a9a" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be a period separated sequence of &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier-java.lang.CharSequence-&quot;&gt;identifiers&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d53ac4ebdabf077e56b1744a2b04ec6c72de3d" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be accepted by the following grammar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd276d8fbdecb3a8e77edb016e17592db14aee02" translate="yes" xml:space="preserve">
          <source>Each subclass of this class defines two categories of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb77807963caaf41ebaf21fc47796c1fcbfbfb39" translate="yes" xml:space="preserve">
          <source>Each subclass should state the precise behavior of this method so that users and developers know what to expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a02ef9eaef14560e891b0e332f4c9637c765295" translate="yes" xml:space="preserve">
          <source>Each subject alternative name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0afa5a231d77ce08ec9ac6b13d21a485cc5195" translate="yes" xml:space="preserve">
          <source>Each thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive and the &lt;code&gt;ThreadLocal&lt;/code&gt; instance is accessible; after a thread goes away, all of its copies of thread-local instances are subject to garbage collection (unless other references to these copies exist).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdd3e05535987ced116009335109ebc7bf40dfd" translate="yes" xml:space="preserve">
          <source>Each time a client connection is made or broken, a notification of class &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28a1f2d1535d1e0a7c78f155e0f38ebb44fa227" translate="yes" xml:space="preserve">
          <source>Each time this method is called and the reading of the file succeeds with no exception (say, I/O error or file format error), the result should be saved for &lt;code&gt;principal&lt;/code&gt;. The implementation can also save keys for other principals having keys in the same keytab object if convenient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a896189259e1fefee623bcac0a3f0eea065a7550" translate="yes" xml:space="preserve">
          <source>Each type is represented by its &lt;a href=&quot;../class#getSimpleName--&quot;&gt;&lt;code&gt;simple name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705eb480b415dd26023cb12ca8c8cdf975ba93fb" translate="yes" xml:space="preserve">
          <source>Each vector tries to optimize storage management by maintaining a &lt;code&gt;capacity&lt;/code&gt; and a &lt;code&gt;capacityIncrement&lt;/code&gt;. The &lt;code&gt;capacity&lt;/code&gt; is always at least as large as the vector size; it is usually larger because as components are added to the vector, the vector's storage increases in chunks the size of &lt;code&gt;capacityIncrement&lt;/code&gt;. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9385be5922e4106519d7a87eb5af865b2439a01" translate="yes" xml:space="preserve">
          <source>Earlier eras have sequentially lower values, which may be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a043bbea95b4de1c928a747210bf7d21cd3fa9" translate="yes" xml:space="preserve">
          <source>Early Delay(ms)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab079413746f0381de30564c42ac98e28aa04795" translate="yes" xml:space="preserve">
          <source>Early Intensity (dB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9211ae5979703d4b3d87e6495bf857d37006e8ac" translate="yes" xml:space="preserve">
          <source>Effect on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e460476cb6c2a3dfb0efc0a704f6ba8dd8febc" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="345e98237075cf074936b4456ad9186d211ede5a" translate="yes" xml:space="preserve">
          <source>Either Rt and Ru are the same type, or both are reference types and Rt is a subtype of Ru</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3389410ffbf2f9d3f650116f68b30adbe66640" translate="yes" xml:space="preserve">
          <source>Either form of the &lt;code&gt;getStateToBind()&lt;/code&gt; method of a DirStateFactory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b3602ab558974c3cb5aa398f1abc62a336668d" translate="yes" xml:space="preserve">
          <source>Either store the chronology (calendar system) in the user profile or lookup the chronology from the user locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e19e742c3d0ba224db7b90eec3f2e20ef67f4c8" translate="yes" xml:space="preserve">
          <source>Either the stream is unordered, or the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51e4cb5590b3755c3eaf82562f6168dc8494534" translate="yes" xml:space="preserve">
          <source>Either the text-argument must already be present in the sequence, or some initial substring of the text-argument must be present. (e.g. &quot;a &amp;lt; b &amp;amp; ae &amp;lt; e&quot; is valid since &quot;a&quot; is present in the sequence before &quot;ae&quot; is reset). In this latter case, &quot;ae&quot; is not entered and treated as a single character; instead, &quot;e&quot; is sorted as if it were expanded to two characters: &quot;a&quot; followed by an &quot;e&quot;. This difference appears in natural languages: in traditional Spanish &quot;ch&quot; is treated as though it contracts to a single character (expressed as &quot;c &amp;lt; ch &amp;lt; d&quot;), while in traditional German a-umlaut is treated as though it expanded to two characters (expressed as &quot;a,A &amp;lt; b,B ... &amp;amp;ae;\u00e3&amp;amp;AE;\u00c3&quot;). [\u00e3 and \u00c3 are, of course, the escape sequences for a-umlaut.]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="cc9af106f99440de8f01cdf729d696761ee61d55" translate="yes" xml:space="preserve">
          <source>Element Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3788f21d8e30d32896fa8ecc2d03e4e26f5a529" translate="yes" xml:space="preserve">
          <source>Element.accept()</source>
          <target state="translated">Element.accept()</target>
        </trans-unit>
        <trans-unit id="7819f3c8316400615edd72f73e6e0e9d615356ae" translate="yes" xml:space="preserve">
          <source>Element.asType()</source>
          <target state="translated">Element.asType()</target>
        </trans-unit>
        <trans-unit id="abb502e59c23584125404a1cbfe853dd7aa35c31" translate="yes" xml:space="preserve">
          <source>Element.equals()</source>
          <target state="translated">Element.equals()</target>
        </trans-unit>
        <trans-unit id="c7384296b6dfcd7df8e56c6618c5d022a41dbfbd" translate="yes" xml:space="preserve">
          <source>Element.getAnnotation()</source>
          <target state="translated">Element.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="1e22efdfe7c4c1847ffdb09b22cd8fb78f4e08b3" translate="yes" xml:space="preserve">
          <source>Element.getAnnotationMirrors()</source>
          <target state="translated">Element.getAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="d0c770a5eebd00d985b050e921e5e96f4d31d3c7" translate="yes" xml:space="preserve">
          <source>Element.getEnclosedElements()</source>
          <target state="translated">Element.getEnclosedElements()</target>
        </trans-unit>
        <trans-unit id="42cae139a4a04fffe7981251145ae4bb4f85c4a1" translate="yes" xml:space="preserve">
          <source>Element.getEnclosingElement()</source>
          <target state="translated">Element.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="9a6398f79303d00b46b5daa093300527e27a9e32" translate="yes" xml:space="preserve">
          <source>Element.getKind()</source>
          <target state="translated">Element.getKind()</target>
        </trans-unit>
        <trans-unit id="b61135d55d73729b376b547fbca2c9a8e3202a0a" translate="yes" xml:space="preserve">
          <source>Element.getModifiers()</source>
          <target state="translated">Element.getModifiers()</target>
        </trans-unit>
        <trans-unit id="43758e66949c1006ec6fa2978e12fb4961b13e93" translate="yes" xml:space="preserve">
          <source>Element.getSimpleName()</source>
          <target state="translated">Element.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="64b5a1060274ad51443f3c1edb36a42df8a786fe" translate="yes" xml:space="preserve">
          <source>Element.hashCode()</source>
          <target state="translated">Element.hashCode()</target>
        </trans-unit>
        <trans-unit id="03ef23eee6ea95729585eb54d328821a3e1f8fe5" translate="yes" xml:space="preserve">
          <source>ElementFilter</source>
          <target state="translated">ElementFilter</target>
        </trans-unit>
        <trans-unit id="fbdef4c8d40b27fb546a07e72f61db3d33533d01" translate="yes" xml:space="preserve">
          <source>ElementFilter.constructorsIn()</source>
          <target state="translated">ElementFilter.constructorsIn()</target>
        </trans-unit>
        <trans-unit id="66b05c1f09b78e7260695648a745a0392cc39ed8" translate="yes" xml:space="preserve">
          <source>ElementFilter.fieldsIn()</source>
          <target state="translated">ElementFilter.fieldsIn()</target>
        </trans-unit>
        <trans-unit id="39be203ae1064531ddf5282c544ed5f432b4e193" translate="yes" xml:space="preserve">
          <source>ElementFilter.methodsIn()</source>
          <target state="translated">ElementFilter.methodsIn()</target>
        </trans-unit>
        <trans-unit id="bad471bb65e7a8af49561dd245fc4ceafccb79c4" translate="yes" xml:space="preserve">
          <source>ElementFilter.packagesIn()</source>
          <target state="translated">ElementFilter.packagesIn()</target>
        </trans-unit>
        <trans-unit id="15552e436e570e2e014a62a02241b35f94439224" translate="yes" xml:space="preserve">
          <source>ElementFilter.typesIn()</source>
          <target state="translated">ElementFilter.typesIn()</target>
        </trans-unit>
        <trans-unit id="0f34849d331d71c2015ff63f3a57ab4c43ef5b3c" translate="yes" xml:space="preserve">
          <source>ElementKind</source>
          <target state="translated">ElementKind</target>
        </trans-unit>
        <trans-unit id="c2f200bc65de5ef60dad813d3a0be1a95a90e395" translate="yes" xml:space="preserve">
          <source>ElementKind.isClass()</source>
          <target state="translated">ElementKind.isClass()</target>
        </trans-unit>
        <trans-unit id="3b50c69e70c90f7031d6c58032885d0ea64caaca" translate="yes" xml:space="preserve">
          <source>ElementKind.isField()</source>
          <target state="translated">ElementKind.isField()</target>
        </trans-unit>
        <trans-unit id="c5c1e668d8e3ad19ee5928f0fde4a8211acf6fb1" translate="yes" xml:space="preserve">
          <source>ElementKind.isInterface()</source>
          <target state="translated">ElementKind.isInterface()</target>
        </trans-unit>
        <trans-unit id="7e79777625e0aca1dc212c3a43e61de09d63c797" translate="yes" xml:space="preserve">
          <source>ElementKind.valueOf()</source>
          <target state="translated">ElementKind.valueOf()</target>
        </trans-unit>
        <trans-unit id="ba4f9fab27aaf7ea6e9529e7b7371186617853d0" translate="yes" xml:space="preserve">
          <source>ElementKind.values()</source>
          <target state="translated">ElementKind.values()</target>
        </trans-unit>
        <trans-unit id="f4400043d7a9e2160e70df6d10a794fd8f390142" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6</source>
          <target state="translated">ElementKindVisitor6</target>
        </trans-unit>
        <trans-unit id="d0daa6cc73f1f1d119c8728c98b1cb9d6e705cce" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutable()</source>
          <target state="translated">ElementKindVisitor6.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="d93883ec0555ce013b2a6366ff279ece3bc46888" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsConstructor()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsConstructor()</target>
        </trans-unit>
        <trans-unit id="688803d0f3df9e0d9e7367deb343991bb9009737" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsInstanceInit()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsInstanceInit()</target>
        </trans-unit>
        <trans-unit id="a069d54cb5b4ff26bd5f6ac7bba43b599a6f49e2" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsMethod()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsMethod()</target>
        </trans-unit>
        <trans-unit id="dea3a553ac22f792e28c422317ebdbab9f61a3a6" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitExecutableAsStaticInit()</source>
          <target state="translated">ElementKindVisitor6.visitExecutableAsStaticInit()</target>
        </trans-unit>
        <trans-unit id="5cec64efb002ceafaa858cdc79e82731c0b85fae" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitPackage()</source>
          <target state="translated">ElementKindVisitor6.visitPackage()</target>
        </trans-unit>
        <trans-unit id="93dcf09036134618526c5a309f27db1b2fe496cd" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitType()</source>
          <target state="translated">ElementKindVisitor6.visitType()</target>
        </trans-unit>
        <trans-unit id="5dbd7ad8d38e739b2a855e28c6db1327b9534e01" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsAnnotationType()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsAnnotationType()</target>
        </trans-unit>
        <trans-unit id="70dfad006455a37de5fcddc76982cc8a1966861f" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsClass()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsClass()</target>
        </trans-unit>
        <trans-unit id="5218c2afd966797f6717ad30ec40c383c4cf02eb" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsEnum()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsEnum()</target>
        </trans-unit>
        <trans-unit id="88ae4eb5e167b0d039828e58eeeb132f0138a221" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeAsInterface()</source>
          <target state="translated">ElementKindVisitor6.visitTypeAsInterface()</target>
        </trans-unit>
        <trans-unit id="fc6f09e555be9f97d9d3d21419eb1310d3344109" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitTypeParameter()</source>
          <target state="translated">ElementKindVisitor6.visitTypeParameter()</target>
        </trans-unit>
        <trans-unit id="494bc4a7a3ab405c2713de11eb1f8ad5725d56b0" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariable()</source>
          <target state="translated">ElementKindVisitor6.visitVariable()</target>
        </trans-unit>
        <trans-unit id="3731dfffffeec4aed3fd44c562be593a7feefdc2" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsEnumConstant()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsEnumConstant()</target>
        </trans-unit>
        <trans-unit id="e16bc75480943b0ecc586c6e38b6a7a597de5df3" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsExceptionParameter()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsExceptionParameter()</target>
        </trans-unit>
        <trans-unit id="63b2bfa4348ccb5ea6fb9fe2f492dc651989a28b" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsField()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsField()</target>
        </trans-unit>
        <trans-unit id="363baaf684693394bb41c5be3195523b634d242b" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsLocalVariable()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsLocalVariable()</target>
        </trans-unit>
        <trans-unit id="73161f0410c350d695ef9cf112af189ff875cf13" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsParameter()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsParameter()</target>
        </trans-unit>
        <trans-unit id="9c4cbecd77ce188a3d2541ac7dc15ed0be7ef02a" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor6.visitVariableAsResourceVariable()</source>
          <target state="translated">ElementKindVisitor6.visitVariableAsResourceVariable()</target>
        </trans-unit>
        <trans-unit id="8cad58eaa99d8143e27a778f30b8cd146e57b2da" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor7</source>
          <target state="translated">ElementKindVisitor7</target>
        </trans-unit>
        <trans-unit id="daaaafc689d25fbc962ac1d8431265f72f966fba" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor7.visitVariableAsResourceVariable()</source>
          <target state="translated">ElementKindVisitor7.visitVariableAsResourceVariable()</target>
        </trans-unit>
        <trans-unit id="b165a93d199d9b75dcd765af5164b1f6ccd7a203" translate="yes" xml:space="preserve">
          <source>ElementKindVisitor8</source>
          <target state="translated">ElementKindVisitor8</target>
        </trans-unit>
        <trans-unit id="61d71b28cb87641acc164e3b593be995c3335237" translate="yes" xml:space="preserve">
          <source>ElementScanner6</source>
          <target state="translated">ElementScanner6</target>
        </trans-unit>
        <trans-unit id="03e0977c7a21d7dfa0ae05e773ac75977d651d62" translate="yes" xml:space="preserve">
          <source>ElementScanner6.scan()</source>
          <target state="translated">ElementScanner6.scan()</target>
        </trans-unit>
        <trans-unit id="bc4cbd37253247c25ea32963daecb60c5a196417" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitExecutable()</source>
          <target state="translated">ElementScanner6.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="363e30f8baca0f8ca5a929369d16ef38da1f2623" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitPackage()</source>
          <target state="translated">ElementScanner6.visitPackage()</target>
        </trans-unit>
        <trans-unit id="f8b038ce8ad646c0a552e3beee3eb8ab32cf1090" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitType()</source>
          <target state="translated">ElementScanner6.visitType()</target>
        </trans-unit>
        <trans-unit id="4bbb8542155cdbb3b42790fd3b94fed6a7302869" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitTypeParameter()</source>
          <target state="translated">ElementScanner6.visitTypeParameter()</target>
        </trans-unit>
        <trans-unit id="cd728b942b2b88cd3fa4f8cf8fb8542ccf0ed341" translate="yes" xml:space="preserve">
          <source>ElementScanner6.visitVariable()</source>
          <target state="translated">ElementScanner6.visitVariable()</target>
        </trans-unit>
        <trans-unit id="16f8ad270cb89db0128afb9484d9e746bf74c166" translate="yes" xml:space="preserve">
          <source>ElementScanner7</source>
          <target state="translated">ElementScanner7</target>
        </trans-unit>
        <trans-unit id="f047833005d7841cafbdbdb0ed2f1bd25e662c0c" translate="yes" xml:space="preserve">
          <source>ElementScanner7.visitVariable()</source>
          <target state="translated">ElementScanner7.visitVariable()</target>
        </trans-unit>
        <trans-unit id="52a50b6263c40e97bb5cff952ad5c9e0ba9a0c29" translate="yes" xml:space="preserve">
          <source>ElementScanner8</source>
          <target state="translated">ElementScanner8</target>
        </trans-unit>
        <trans-unit id="9aed0717f882243e832c4f8729d91cb5c2b8bd02" translate="yes" xml:space="preserve">
          <source>ElementType</source>
          <target state="translated">ElementType</target>
        </trans-unit>
        <trans-unit id="e1adf9428ce7270048a4afe66034d9b529d71e6e" translate="yes" xml:space="preserve">
          <source>ElementType.valueOf()</source>
          <target state="translated">ElementType.valueOf()</target>
        </trans-unit>
        <trans-unit id="0d680c1c29c0b824a7d0db82b13cfd0d3b62eab0" translate="yes" xml:space="preserve">
          <source>ElementType.values()</source>
          <target state="translated">ElementType.values()</target>
        </trans-unit>
        <trans-unit id="66572e1d7a2ba1b7aa849f12e71505e30a1d15a5" translate="yes" xml:space="preserve">
          <source>ElementVisitor</source>
          <target state="translated">ElementVisitor</target>
        </trans-unit>
        <trans-unit id="133876e98591087152b053c0d79c00af1c43f5e4" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visit()</source>
          <target state="translated">ElementVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="48a6e29854cafc237482f2aa1adc13e6e902a433" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitExecutable()</source>
          <target state="translated">ElementVisitor.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="d35c02c137313d5be3da4b0f372d2f731ad3418e" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitPackage()</source>
          <target state="translated">ElementVisitor.visitPackage()</target>
        </trans-unit>
        <trans-unit id="132489723db565ae02553fff275ab39026b46b5c" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitType()</source>
          <target state="translated">ElementVisitor.visitType()</target>
        </trans-unit>
        <trans-unit id="081c3628c61a133d5fac5aeeaa1441fc096c056f" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitTypeParameter()</source>
          <target state="translated">ElementVisitor.visitTypeParameter()</target>
        </trans-unit>
        <trans-unit id="48dfab104aad3073dc7916e9fdbf593ec4505187" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitUnknown()</source>
          <target state="translated">ElementVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="429d8c4f41037607ee33e2aa6968efa4ba1cef51" translate="yes" xml:space="preserve">
          <source>ElementVisitor.visitVariable()</source>
          <target state="translated">ElementVisitor.visitVariable()</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="b997e0a3fe5ba38263a2ce2a65f2daeaa5147a87" translate="yes" xml:space="preserve">
          <source>Elements may not contain text or mix text with embedded tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e21bf0d5b4e332104568ee831e46463cf0e903a" translate="yes" xml:space="preserve">
          <source>Elements should be compared using the &lt;a href=&quot;element#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method. There is no guarantee that any particular element will always be represented by the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9645209f08cdfa3370286e88d4eec790f7aea7f8" translate="yes" xml:space="preserve">
          <source>Elements sorted by increasing absolute magnitude tend to yield more accurate results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae5ef0a1d8b1fbca1a64c978b040d71ba791259" translate="yes" xml:space="preserve">
          <source>Elements which contain elements use those elements as arguments, unless they have the tag: &quot;void&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb38626747b4029a61acb668b53cfcb11d7aff0" translate="yes" xml:space="preserve">
          <source>Elements with the &quot;void&quot; tag are executed using the outer context as the target if no target is defined by a &quot;class&quot; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e1dba88b9ce9806728b25eb184c42586a08f43" translate="yes" xml:space="preserve">
          <source>Elements.getAllAnnotationMirrors()</source>
          <target state="translated">Elements.getAllAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="a55aa49ca17b278b9b1345d4958e3ad55ef46611" translate="yes" xml:space="preserve">
          <source>Elements.getAllMembers()</source>
          <target state="translated">Elements.getAllMembers()</target>
        </trans-unit>
        <trans-unit id="2e1404abddcec2df4aa15541433f75050ad420c1" translate="yes" xml:space="preserve">
          <source>Elements.getBinaryName()</source>
          <target state="translated">Elements.getBinaryName()</target>
        </trans-unit>
        <trans-unit id="0233b4a95a3d44588d15aa6c01019722c37ec431" translate="yes" xml:space="preserve">
          <source>Elements.getConstantExpression()</source>
          <target state="translated">Elements.getConstantExpression()</target>
        </trans-unit>
        <trans-unit id="82070c841ea5acbf7c0dbc3de221ada1ca2d7dc1" translate="yes" xml:space="preserve">
          <source>Elements.getDocComment()</source>
          <target state="translated">Elements.getDocComment()</target>
        </trans-unit>
        <trans-unit id="698b4b4110a7928464cb3550699b8086963c3834" translate="yes" xml:space="preserve">
          <source>Elements.getElementValuesWithDefaults()</source>
          <target state="translated">Elements.getElementValuesWithDefaults()</target>
        </trans-unit>
        <trans-unit id="09f609d910490c050b0e26d52e6a7aa782d9112e" translate="yes" xml:space="preserve">
          <source>Elements.getName()</source>
          <target state="translated">Elements.getName()</target>
        </trans-unit>
        <trans-unit id="364230b23cdfa922a7ec3da2be9b20f6928639ae" translate="yes" xml:space="preserve">
          <source>Elements.getPackageElement()</source>
          <target state="translated">Elements.getPackageElement()</target>
        </trans-unit>
        <trans-unit id="5f5d6c32044a1374c232047508ca5ea7068a73fd" translate="yes" xml:space="preserve">
          <source>Elements.getPackageOf()</source>
          <target state="translated">Elements.getPackageOf()</target>
        </trans-unit>
        <trans-unit id="9b5739dbea5f0d58efd635c5af4d4dba037d8423" translate="yes" xml:space="preserve">
          <source>Elements.getTypeElement()</source>
          <target state="translated">Elements.getTypeElement()</target>
        </trans-unit>
        <trans-unit id="8a7fc40cd3d520331667b691ab8785fb07205d6f" translate="yes" xml:space="preserve">
          <source>Elements.hides()</source>
          <target state="translated">Elements.hides()</target>
        </trans-unit>
        <trans-unit id="e529b739d53a6f23e35d18d94fb4aba5bcfa6df7" translate="yes" xml:space="preserve">
          <source>Elements.isDeprecated()</source>
          <target state="translated">Elements.isDeprecated()</target>
        </trans-unit>
        <trans-unit id="f8c9d4ae14aa6254c5ab61473c631d75a8f0b145" translate="yes" xml:space="preserve">
          <source>Elements.isFunctionalInterface()</source>
          <target state="translated">Elements.isFunctionalInterface()</target>
        </trans-unit>
        <trans-unit id="fe282b19696821258121fc4f298f75c5643cc2b7" translate="yes" xml:space="preserve">
          <source>Elements.overrides()</source>
          <target state="translated">Elements.overrides()</target>
        </trans-unit>
        <trans-unit id="19aafa24fd9d9eb722ac46cd5f6a7373d0295431" translate="yes" xml:space="preserve">
          <source>Elements.printElements()</source>
          <target state="translated">Elements.printElements()</target>
        </trans-unit>
        <trans-unit id="7fa78580ff4e9c80fd2292d6f28ffb0288e32c46" translate="yes" xml:space="preserve">
          <source>EllipticCurve</source>
          <target state="translated">EllipticCurve</target>
        </trans-unit>
        <trans-unit id="f9b44b05b5585f7630b718dd31f6d624a0722399" translate="yes" xml:space="preserve">
          <source>EllipticCurve.equals()</source>
          <target state="translated">EllipticCurve.equals()</target>
        </trans-unit>
        <trans-unit id="f4eaf151c981f7fb05f3291404fab56f5f44b05d" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getA()</source>
          <target state="translated">EllipticCurve.getA()</target>
        </trans-unit>
        <trans-unit id="9cc4d65f323d38776e6210495538448c7a6f35e9" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getB()</source>
          <target state="translated">EllipticCurve.getB()</target>
        </trans-unit>
        <trans-unit id="9b6782887b60931314457db84060ddf44b91eeda" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getField()</source>
          <target state="translated">EllipticCurve.getField()</target>
        </trans-unit>
        <trans-unit id="304648bc76838a29c60e703769b3741e4db3d5ee" translate="yes" xml:space="preserve">
          <source>EllipticCurve.getSeed()</source>
          <target state="translated">EllipticCurve.getSeed()</target>
        </trans-unit>
        <trans-unit id="45067747b1c6686ac31e2108b5543a0fef0fa31e" translate="yes" xml:space="preserve">
          <source>EllipticCurve.hashCode()</source>
          <target state="translated">EllipticCurve.hashCode()</target>
        </trans-unit>
        <trans-unit id="be114948df94126f9726724139a79fecbd8869d2" translate="yes" xml:space="preserve">
          <source>Embedded sequences. A sound bank may contain built-in song data stored in a data object such as a &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad58c76bcb8043198f65747d7fb564aa10c1a435" translate="yes" xml:space="preserve">
          <source>Emits an XML document representing all of the preferences contained in this node and all of its descendants. This XML document is, in effect, an offline backup of the subtree rooted at the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d59d4441eadc4363272d5a81d789463c5425af" translate="yes" xml:space="preserve">
          <source>Emits an XML document representing all of the properties contained in this table, using the specified encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690debfba8141b3f5ca2af8d79c8e485a30667c0" translate="yes" xml:space="preserve">
          <source>Emits an XML document representing all of the properties contained in this table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3226b9b649a9bda649b7d20aa0f525dfd960e5" translate="yes" xml:space="preserve">
          <source>Emits on the specified output stream an XML document representing all of the preferences contained in this node (but not its descendants). This XML document is, in effect, an offline backup of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bd54b8771d2111909c105fe783c651dd1a2cab" translate="yes" xml:space="preserve">
          <source>Empty constructor for use by subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41f5b081a698063a09e9e8855306e70a9e0d2d8" translate="yes" xml:space="preserve">
          <source>Empty relative paths are permitted; this seems to be the intent of RFC 2396 although the grammar does not permit it. The primary consequence of this deviation is that a standalone fragment such as &lt;code&gt;&quot;#foo&quot;&lt;/code&gt; parses as a relative URI with an empty path and the given fragment, and can be usefully &lt;a href=&quot;#resolve-frag&quot;&gt;resolved&lt;/a&gt; against a base URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a68b314c25b1f52b5a39b04ad4e835df01bc25" translate="yes" xml:space="preserve">
          <source>EmptyStackException</source>
          <target state="translated">EmptyStackException</target>
        </trans-unit>
        <trans-unit id="39ceb0426f0ff3d6434da3bf14535fa47f6b4db2" translate="yes" xml:space="preserve">
          <source>Enable or disable finalization on exit; doing so specifies that the finalizers of all objects that have finalizers that have not yet been automatically invoked are to be run before the Java runtime exits. By default, finalization on exit is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5e7cfa2ddde5c412eaddc3d9aed1d9687793e5" translate="yes" xml:space="preserve">
          <source>Enable overriding of readObject and writeObject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1718dda585ad185004657c2bf59265fa8ccc9a4" translate="yes" xml:space="preserve">
          <source>Enable substitution of one object for another during serialization/deserialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b3d6503fed4b27b4ec9505fa5e0981dd943a9b" translate="yes" xml:space="preserve">
          <source>Enable the stream to allow objects read from the stream to be replaced. When enabled, the resolveObject method is called for every object being deserialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2273e186069baddca6a1b955e8a87343788b77b5" translate="yes" xml:space="preserve">
          <source>Enable the stream to do replacement of objects in the stream. When enabled, the replaceObject method is called for every object being serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0008c1b1874e48583f21c7d3e028ce8ecad4c60" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt;&lt;code&gt;SO_KEEPALIVE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1586a972aad0d8cb470a7967ea87c83ff0534320" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_LINGER&quot;&gt;&lt;code&gt;SO_LINGER&lt;/code&gt;&lt;/a&gt; with the specified linger time in seconds. The maximum timeout value is platform specific. The setting only affects socket close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8baf9a6fdf974fba66d98cd648b9644d0f8d110" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt;&lt;code&gt;SO_OOBINLINE&lt;/code&gt;&lt;/a&gt; (receipt of TCP urgent data) By default, this option is disabled and TCP urgent data received on a socket is silently discarded. If the user wishes to receive urgent data, then this option must be enabled. When enabled, urgent data is received inline with normal data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a4d069e69c4e2a4178a677af81263af7376c9d" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_TIMEOUT&quot;&gt;&lt;code&gt;SO_TIMEOUT&lt;/code&gt;&lt;/a&gt; with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a call to accept() for this ServerSocket will block for only this amount of time. If the timeout expires, a &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; is raised, though the ServerSocket is still valid. The option &lt;b&gt;must&lt;/b&gt; be enabled prior to entering the blocking operation to have effect. The timeout must be &lt;code&gt;&amp;gt; 0&lt;/code&gt;. A timeout of zero is interpreted as an infinite timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc6cf0e7e619187d5edc102aaa097e1edff4c83" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#SO_TIMEOUT&quot;&gt;&lt;code&gt;SO_TIMEOUT&lt;/code&gt;&lt;/a&gt; with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires, a &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; is raised, though the Socket is still valid. The option &lt;b&gt;must&lt;/b&gt; be enabled prior to entering the blocking operation to have effect. The timeout must be &lt;code&gt;&amp;gt; 0&lt;/code&gt;. A timeout of zero is interpreted as an infinite timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d146a2abaf8c713e64c9344c2f24068868dc4f88" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt;&lt;code&gt;TCP_NODELAY&lt;/code&gt;&lt;/a&gt; (disable/enable Nagle's algorithm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbbaaa7266589e16c8abbbe8518feee9d928e7b" translate="yes" xml:space="preserve">
          <source>Enable/disable SO_BROADCAST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051d39183d7508d3aa4203ffef19bca24e3b3c2a" translate="yes" xml:space="preserve">
          <source>Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a call to receive() for this DatagramSocket will block for only this amount of time. If the timeout expires, a &lt;b&gt;java.net.SocketTimeoutException&lt;/b&gt; is raised, though the DatagramSocket is still valid. The option &lt;b&gt;must&lt;/b&gt; be enabled prior to entering the blocking operation to have effect. The timeout must be &lt;code&gt;&amp;gt; 0&lt;/code&gt;. A timeout of zero is interpreted as an infinite timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d38f53af452fcc4a3a57a1d64c20ea97abb7fbd" translate="yes" xml:space="preserve">
          <source>Enable/disable the &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a670c41c113ba2ccecd6cdbbc0a01684688641a6" translate="yes" xml:space="preserve">
          <source>Enable/disable the SO_REUSEADDR socket option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600b2cf752bf1f13348def4f0292964c3459911b" translate="yes" xml:space="preserve">
          <source>Enable/disable the option specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ba1ee1ae277ed3ac950de6590f5f0b9f606ba2" translate="yes" xml:space="preserve">
          <source>Enables MBeanServerNotifications concerning given ObjectName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b543c8a23ab6842c408300ef60b751aa3db36205" translate="yes" xml:space="preserve">
          <source>Enables Unicode-aware case folding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d78fb7ca0db1a58ebd59c9cae0c12f8c40dfa02" translate="yes" xml:space="preserve">
          <source>Enables Unix lines mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091d41206e2a9ac925be05505ec031597e77a545" translate="yes" xml:space="preserve">
          <source>Enables all MBeanServerNotifications (all ObjectNames are selected).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2eafbc77902d93ff46a79bd20b3ae415c1204f" translate="yes" xml:space="preserve">
          <source>Enables all the attribute change notifications the attribute name of which equals the specified name to be sent to the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb8921d50ec87d6f0ce8ff2b7960c31cfd9c974" translate="yes" xml:space="preserve">
          <source>Enables all the notifications the type of which starts with the specified prefix to be sent to the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6c6dcef335e68fe05451244932503a673716c0" translate="yes" xml:space="preserve">
          <source>Enables canonical equivalence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a24259091d007977acf52d96a64c638d463fb7" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a497f3742c321bf7532af138797d65003d63b0a0" translate="yes" xml:space="preserve">
          <source>Enables dotall mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1614448b99ab93c2cc9d0947ca3d403238fc64" translate="yes" xml:space="preserve">
          <source>Enables literal parsing of the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ed1f408c376283e160007e24f8a96d620e43ac" translate="yes" xml:space="preserve">
          <source>Enables multiline mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e566385e1531fdbf8a9efde651a2fb600595c65c" translate="yes" xml:space="preserve">
          <source>Enables or disables the verbose output for the class loading system. The verbose output information and the output stream to which the verbose information is emitted are implementation dependent. Typically, a Java virtual machine implementation prints a message each time a class file is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d1533b2a64e3fa522052650e271b7f46755775" translate="yes" xml:space="preserve">
          <source>Enables or disables thread CPU time measurement. The default is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a7dfdf72576e36fa3b72ec8dec25e189267747" translate="yes" xml:space="preserve">
          <source>Enables or disables thread contention monitoring. Thread contention monitoring is disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9498626202770916822a8ef52c085c5c0425c4" translate="yes" xml:space="preserve">
          <source>Enables or disables verbose output for the memory system. The verbose output information and the output stream to which the verbose information is emitted are implementation dependent. Typically, a Java virtual machine implementation prints a message whenever it frees memory at garbage collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1d8cfc178036aba0bbf8401bba382c54442fad" translate="yes" xml:space="preserve">
          <source>Enables the MBean server to send a notification. If the passed &lt;var&gt;notification&lt;/var&gt; has a sequence number lesser or equal to 0, then replace it with the delegate's own sequence number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec18d679094d4cbb7302acfd4628b5b4c58af0f" translate="yes" xml:space="preserve">
          <source>Enables the Unicode version of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f19a0b41bf5fa3d7bc790b73848e2868eff62c" translate="yes" xml:space="preserve">
          <source>Enables/Disables tracing of instructions. If the &lt;code&gt;boolean&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, this method suggests that the Java virtual machine emit debugging information for each instruction in the virtual machine as it is executed. The format of this information, and the file or other output stream to which it is emitted, depends on the host environment. The virtual machine may ignore this request if it does not support this feature. The destination of the trace output is system dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b3aa1e242cc8aab8f231e834e6100073fc8884" translate="yes" xml:space="preserve">
          <source>Enables/Disables tracing of method calls. If the &lt;code&gt;boolean&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, this method suggests that the Java virtual machine emit debugging information for each method in the virtual machine as it is called. The format of this information, and the file or other output stream to which it is emitted, depends on the host environment. The virtual machine may ignore this request if it does not support this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd21468b8b3e4e4da23360eab8a424b72c58c779" translate="yes" xml:space="preserve">
          <source>Enables/disables link dereferencing during the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb746ba2b51da184cdd592034f1c6716c16de171" translate="yes" xml:space="preserve">
          <source>Enables/disables matching all of the subjectAlternativeNames specified in the &lt;a href=&quot;x509certselector#setSubjectAlternativeNames-java.util.Collection-&quot;&gt;&lt;code&gt;setSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName&lt;/code&gt;&lt;/a&gt; methods. If enabled, the &lt;code&gt;X509Certificate&lt;/code&gt; must contain all of the specified subject alternative names. If disabled, the &lt;code&gt;X509Certificate&lt;/code&gt; must contain at least one of the specified subject alternative names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211b39abca6a633a8d9649c5e5f2c42dd2497fcf" translate="yes" xml:space="preserve">
          <source>Enables/disables returning objects returned as part of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a104d80b31b41d771aa379561b1189a42f1340c4" translate="yes" xml:space="preserve">
          <source>Enabling &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; prior to binding the socket using &lt;a href=&quot;serversocket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt; allows the socket to be bound even though a previous connection is in a timeout state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec46bb5a93c325930fcc2ba295aa9fdf326d16a3" translate="yes" xml:space="preserve">
          <source>Enabling &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; prior to binding the socket using &lt;a href=&quot;socket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt; allows the socket to be bound even though a previous connection is in a timeout state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6318faae181b3934ddf439f0742da6f0f10c07c7" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for an SSL/TLS connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087f34ab9a0de63cafa331424d0dfbd43dc139a2" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for an SSL/TLS connection. The parameters are the list of ciphersuites to be accepted in an SSL/TLS handshake, the list of protocols to be allowed, the endpoint identification algorithm during SSL/TLS handshaking, the Server Name Indication (SNI), the algorithm constraints and whether SSL/TLS servers should request or require client authentication, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38732cc41ef94a44430fea12e40e6042599d0de2" translate="yes" xml:space="preserve">
          <source>Enclosing class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eb78c5c13ce33001513f2eec030966f08cee15" translate="yes" xml:space="preserve">
          <source>Enclosing interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd15e999e6a86ff79ab002148c76c0474554511d" translate="yes" xml:space="preserve">
          <source>EncodedKeySpec</source>
          <target state="translated">EncodedKeySpec</target>
        </trans-unit>
        <trans-unit id="32a4ac237ae194f7e47dd3837c8909517af10bd2" translate="yes" xml:space="preserve">
          <source>EncodedKeySpec.getEncoded()</source>
          <target state="translated">EncodedKeySpec.getEncoded()</target>
        </trans-unit>
        <trans-unit id="32dac2387bb8b43cc2b165693215a9a9a34bb510" translate="yes" xml:space="preserve">
          <source>EncodedKeySpec.getFormat()</source>
          <target state="translated">EncodedKeySpec.getFormat()</target>
        </trans-unit>
        <trans-unit id="7dca2524a7e133f2714375c509deec12458fd552" translate="yes" xml:space="preserve">
          <source>Encoder</source>
          <target state="translated">Encoder</target>
        </trans-unit>
        <trans-unit id="c95509d9d71d3e1081fe9dcf4a6b2a7ca6aa1c3b" translate="yes" xml:space="preserve">
          <source>Encoder.get()</source>
          <target state="translated">Encoder.get()</target>
        </trans-unit>
        <trans-unit id="7b0061f13ad36de047c367c5cf5436d5e8a4dcca" translate="yes" xml:space="preserve">
          <source>Encoder.getExceptionListener()</source>
          <target state="translated">Encoder.getExceptionListener()</target>
        </trans-unit>
        <trans-unit id="7097d9cc57023a133b1df026f184c8669aa7bb31" translate="yes" xml:space="preserve">
          <source>Encoder.getPersistenceDelegate()</source>
          <target state="translated">Encoder.getPersistenceDelegate()</target>
        </trans-unit>
        <trans-unit id="ae608776ad0b43503432669388c33cdf68889201" translate="yes" xml:space="preserve">
          <source>Encoder.remove()</source>
          <target state="translated">Encoder.remove()</target>
        </trans-unit>
        <trans-unit id="9ed6f0454722a0a22eb4719f93d3ff61839bc89b" translate="yes" xml:space="preserve">
          <source>Encoder.setExceptionListener()</source>
          <target state="translated">Encoder.setExceptionListener()</target>
        </trans-unit>
        <trans-unit id="c0cbb6fd1fa2c004766fb7b1c2d44de455c90c8f" translate="yes" xml:space="preserve">
          <source>Encoder.setPersistenceDelegate()</source>
          <target state="translated">Encoder.setPersistenceDelegate()</target>
        </trans-unit>
        <trans-unit id="a027e57da3f0b6fc44c95e5bc5751b4244fb05dc" translate="yes" xml:space="preserve">
          <source>Encoder.writeExpression()</source>
          <target state="translated">Encoder.writeExpression()</target>
        </trans-unit>
        <trans-unit id="ed6cabb5591ae7c2a87cd0d037d87a21152838fe" translate="yes" xml:space="preserve">
          <source>Encoder.writeObject()</source>
          <target state="translated">Encoder.writeObject()</target>
        </trans-unit>
        <trans-unit id="7758ad1a846beda1c7b9a89c844cf1cc0cc784e6" translate="yes" xml:space="preserve">
          <source>Encoder.writeStatement()</source>
          <target state="translated">Encoder.writeStatement()</target>
        </trans-unit>
        <trans-unit id="83342c82c754ec9c7382663f8dbe04b18d4dc431" translate="yes" xml:space="preserve">
          <source>Encodes all bytes from the specified byte array into a newly-allocated byte array using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme. The returned byte array is of the length of the resulting bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e1f654368799a5723d09a92799a3fbc663509d" translate="yes" xml:space="preserve">
          <source>Encodes all bytes from the specified byte array using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme, writing the resulting bytes to the given output byte array, starting at offset 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fc44866451a56ed593e8cdc617a2954dd89c0a" translate="yes" xml:space="preserve">
          <source>Encodes all remaining bytes from the specified byte buffer into a newly-allocated ByteBuffer using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme. Upon return, the source buffer's position will be updated to its limit; its limit will not have been changed. The returned output buffer's position will be zero and its limit will be the number of resulting encoded bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6084cf9c0ca967ee8bcfef7e5d055111e6eb64" translate="yes" xml:space="preserve">
          <source>Encodes as many characters as possible from the given input buffer, writing the results to the given output buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22de3bbfc63fd3fb52a06fa960dae15559a20dd" translate="yes" xml:space="preserve">
          <source>Encodes characters into bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79369719025ad87c1a364b464bd66d7053c26f16" translate="yes" xml:space="preserve">
          <source>Encodes one or more characters into one or more bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba4bd030f7dced98c73922d43abdbd1b21132d2" translate="yes" xml:space="preserve">
          <source>Encodes the certificate to an output stream in a format that can be decoded by the &lt;code&gt;decode&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898d54be52d2ecbad4dd4372afb53ec95b58231c" translate="yes" xml:space="preserve">
          <source>Encodes the specified byte array into a String using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cd6a3652298b38e92bbcf33b83bbee46e17859" translate="yes" xml:space="preserve">
          <source>Encodes this &lt;code&gt;String&lt;/code&gt; into a sequence of bytes using the given &lt;a href=&quot;../nio/charset/charset&quot;&gt;charset&lt;/a&gt;, storing the result into a new byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d811c6485b039de011c0a23f6b50133b4bf02e7b" translate="yes" xml:space="preserve">
          <source>Encodes this &lt;code&gt;String&lt;/code&gt; into a sequence of bytes using the named charset, storing the result into a new byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe298b3765023382f5b791bca88f5113ff6365d" translate="yes" xml:space="preserve">
          <source>Encodes this &lt;code&gt;String&lt;/code&gt; into a sequence of bytes using the platform's default charset, storing the result into a new byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="616ac8999146d50b6974e6194047b9cb7ae88fe0" translate="yes" xml:space="preserve">
          <source>Encounter order is guaranteed to be ascending index order for any &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;. But no order is guaranteed for hash-based collections such as &lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;. Clients of a Spliterator that reports &lt;code&gt;ORDERED&lt;/code&gt; are expected to preserve ordering constraints in non-commutative parallel computations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289b8403fb2554266fc31e2bc42af67d3d2456ba" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo</source>
          <target state="translated">EncryptedPrivateKeyInfo</target>
        </trans-unit>
        <trans-unit id="3b4da3c1806c1c4cc25161cde5b1035583d72a48" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getAlgName()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getAlgName()</target>
        </trans-unit>
        <trans-unit id="b79d875435110111b0d3596202e62e89ddf4affd" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getAlgParameters()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getAlgParameters()</target>
        </trans-unit>
        <trans-unit id="1772566f43b955f4e858404de70ed265b6b02fa6" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getEncoded()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getEncoded()</target>
        </trans-unit>
        <trans-unit id="28d5c3123b71bb2a0a8cba5080af06f552323176" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getEncryptedData()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getEncryptedData()</target>
        </trans-unit>
        <trans-unit id="d0c8e922a847ce28b7ab9a02bd5677a252579f04" translate="yes" xml:space="preserve">
          <source>EncryptedPrivateKeyInfo.getKeySpec()</source>
          <target state="translated">EncryptedPrivateKeyInfo.getKeySpec()</target>
        </trans-unit>
        <trans-unit id="92c7a6ba2f139b9b37a330bdd84f8b435235c13e" translate="yes" xml:space="preserve">
          <source>Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986338c2cf8f95b148575058e0843cb154837aaa" translate="yes" xml:space="preserve">
          <source>End of file is detected, in which case an &lt;code&gt;EOFException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ab2da79d83f02db1ca322401b2305eabe61ab6" translate="yes" xml:space="preserve">
          <source>End of optional block data blocks for an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff21b27a89ba89b19f9432b6af35bc39cbf11124" translate="yes" xml:space="preserve">
          <source>Ends an optional section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1496bc31f512d93833ef65a353a9038de059eb7" translate="yes" xml:space="preserve">
          <source>Ends of lines are treated as white space, not as separate tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96ca0b209ad078d2a6b23799ab647d8b9d503cb" translate="yes" xml:space="preserve">
          <source>EngineScope attributes are visible during the lifetime of a single &lt;code&gt;ScriptEngine&lt;/code&gt; and a set of attributes is maintained for each engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65357a11bce582516ffdb216e5e7a9460f3c886" translate="yes" xml:space="preserve">
          <source>Ensure that the discussion in &lt;code&gt;ChronoLocalDate&lt;/code&gt; has been read and understood before using this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8add317ddcbdd5d2587eab06b09b0c4361aba9c0" translate="yes" xml:space="preserve">
          <source>Ensures that future reads from this preference node and its descendants reflect any changes that were committed to the persistent store (from any VM) prior to the &lt;code&gt;sync&lt;/code&gt; invocation. As a side-effect, forces any changes in the contents of this preference node and its descendants to the persistent store, as if the &lt;code&gt;flush&lt;/code&gt; method had been invoked on this node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3769ef663ae581229c8696860e788a65ee96b24a" translate="yes" xml:space="preserve">
          <source>Ensures that the &lt;code&gt;close&lt;/code&gt; method of this file input stream is called when there are no more references to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d72b75813678b40a6a36680ea177f64d130154" translate="yes" xml:space="preserve">
          <source>Ensures that the capacity is at least equal to the specified minimum. If the current capacity is less than the argument, then a new internal array is allocated with greater capacity. The new capacity is the larger of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7336d8c4fc2e8ebae465ae444febf052ae1db892" translate="yes" xml:space="preserve">
          <source>Ensures that the key stored away by this ExemptionMechanism object will be wiped out when there are no more references to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b251fff27708ddca48cb0becbf1b5f91a05e7f38" translate="yes" xml:space="preserve">
          <source>Ensures that the system resources held by this ZipFile object are released when there are no more references to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6b3ec0001356332b2dfc7ce21f74c83e142244" translate="yes" xml:space="preserve">
          <source>Ensures that this collection contains the specified element (optional operation). Returns &lt;code&gt;true&lt;/code&gt; if this collection changed as a result of the call. (Returns &lt;code&gt;false&lt;/code&gt; if this collection does not permit duplicates and already contains the specified element.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21de300f8493ecee40d2d49069c480ffbf72f486" translate="yes" xml:space="preserve">
          <source>Entity requesting authentication is a HTTP origin server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88d46f94a0dde9b0faceb9e42954452ec66b9fe" translate="yes" xml:space="preserve">
          <source>Entity requesting authentication is a HTTP proxy server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="4e09febc26e1749cbd763eb6376efe5085c53d9d" translate="yes" xml:space="preserve">
          <source>Enum AccessMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2e8089e9be21944781c7800549f7268bab9da1" translate="yes" xml:space="preserve">
          <source>Enum AclEntryFlag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962263199c93bcc2e9569ec2636faff7a1a1717b" translate="yes" xml:space="preserve">
          <source>Enum AclEntryPermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02430bcc82bd757da04181443543461605634676" translate="yes" xml:space="preserve">
          <source>Enum AclEntryType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8cdf1d9fae9ff71a3978fdaeebf13e02712026" translate="yes" xml:space="preserve">
          <source>Enum Authenticator.RequestorType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b5de31f53088930077c0449179c71629e9834c" translate="yes" xml:space="preserve">
          <source>Enum CRLReason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07a47874be1e37061e93b0b4e3e8974b10a2b4a" translate="yes" xml:space="preserve">
          <source>Enum CertPathValidatorException.BasicReason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359ca217883b01e292816c085ae2a5b612c979d0" translate="yes" xml:space="preserve">
          <source>Enum Character.UnicodeScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e4cdc0ad021314534e2d6f0b7341f62abcddcf" translate="yes" xml:space="preserve">
          <source>Enum ChronoField</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed43b7eb04f86aa0bc0c9b52a31f8ee1f41a4d9" translate="yes" xml:space="preserve">
          <source>Enum ChronoUnit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64be5dda66e1ad93d41b9b1b743e46816658897f" translate="yes" xml:space="preserve">
          <source>Enum Collector.Characteristics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d5278824a7f49ae22cdc4c92b679bf8d3c3fe2" translate="yes" xml:space="preserve">
          <source>Enum Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a501de62d76fec1f4e74d552264bef6396c563d3" translate="yes" xml:space="preserve">
          <source>Enum CryptoPrimitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e5080461dd912ddb8971141acee13edf698a35" translate="yes" xml:space="preserve">
          <source>Enum DayOfWeek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b3634d292c5df7e3dab53a8f794f9cf9850edc" translate="yes" xml:space="preserve">
          <source>Enum Diagnostic.Kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f75171185930baaad6a2fa1fb085daefbd1eca" translate="yes" xml:space="preserve">
          <source>Enum DocumentationTool.Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be2560a50cda8b3a28624d75e4947aded89be7d" translate="yes" xml:space="preserve">
          <source>Enum ElementKind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823f52cacf2ce16a3b53a8055a296cfebdc2324b" translate="yes" xml:space="preserve">
          <source>Enum ElementType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b97a96de0898dba6b662c50c36cb2e57ff83554" translate="yes" xml:space="preserve">
          <source>Enum FileVisitOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1f21d795779114fb94ec5260cf6277cd087c76" translate="yes" xml:space="preserve">
          <source>Enum FileVisitResult</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981fa66080617e0ccb1e75f7b9c4f7e5f0346ad1" translate="yes" xml:space="preserve">
          <source>Enum FormatStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35685ba3e45fc15276fa48357e05948217a1baac" translate="yes" xml:space="preserve">
          <source>Enum Formatter.BigDecimalLayoutForm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d824685838e24df420a57bc6959690b778842570" translate="yes" xml:space="preserve">
          <source>Enum HijrahEra</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842c4ed7688a406435bf81425836804f6319cabe" translate="yes" xml:space="preserve">
          <source>Enum IsoEra</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f24bb3617fa49b01e4613a788a09bfde7575d1" translate="yes" xml:space="preserve">
          <source>Enum JavaFileObject.Kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd0476943d174566ff54625b40c06b4e22683c0" translate="yes" xml:space="preserve">
          <source>Enum KeyRep.Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb635a0e81f7ad09c056dfa834221e6a536c3f09" translate="yes" xml:space="preserve">
          <source>Enum LinkOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f91f63339fe1cb14e52625b2da1fde1eff84fc1" translate="yes" xml:space="preserve">
          <source>Enum Locale.Category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2d2f34e1c869e1eb7ff458801b4aed5e71e630" translate="yes" xml:space="preserve">
          <source>Enum Locale.FilteringMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7458d9ca4000b0a066d182d82a55f09cdab553fa" translate="yes" xml:space="preserve">
          <source>Enum MemoryType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d511e583f26acd1126e7af55350b2b357392eed" translate="yes" xml:space="preserve">
          <source>Enum MinguoEra</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1405378b7531204383b5db1fc0bdb723ff76cf31" translate="yes" xml:space="preserve">
          <source>Enum Modifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08852e797af92d39b1d31dfd0d7e9c589abd275a" translate="yes" xml:space="preserve">
          <source>Enum Month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977ba8ccde391e5e7005729bb925fc4292ea6d48" translate="yes" xml:space="preserve">
          <source>Enum NestingKind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05600688d98afbafaff31c05ef431b4148af5bc" translate="yes" xml:space="preserve">
          <source>Enum Normalizer.Form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3840d33aab3a9b7e4ef3e154efa3ad23e4fec5ff" translate="yes" xml:space="preserve">
          <source>Enum PKIXReason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e74ee44156b701e1d638bfd1fa3bd3406c80af3" translate="yes" xml:space="preserve">
          <source>Enum PKIXRevocationChecker.Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c84db3a5462a838e4ec0280eef64dc6394df82" translate="yes" xml:space="preserve">
          <source>Enum PosixFilePermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681cd08b63b3493d7bf8c5e4e2f1fea4ce169ced" translate="yes" xml:space="preserve">
          <source>Enum ProcessBuilder.Redirect.Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895544bde1ec969b07c601726ab7ac4a240b2d19" translate="yes" xml:space="preserve">
          <source>Enum Proxy.Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9189e11d7cad7ae89af760e0df00b853f90b1f66" translate="yes" xml:space="preserve">
          <source>Enum ResolverStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d074954a233d044deb9a34edfbfcf9ed992d7a" translate="yes" xml:space="preserve">
          <source>Enum Resource.AuthenticationType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f19e51d1c8b6b704593265b8ecfc801e8d52978" translate="yes" xml:space="preserve">
          <source>Enum RetentionPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df6cfd88131dbc5caf42822c1f67c45b9cea290" translate="yes" xml:space="preserve">
          <source>Enum RoundingMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296a9678d05defe676748489257748ec8f1666fb" translate="yes" xml:space="preserve">
          <source>Enum SSLEngineResult.HandshakeStatus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadc93e4cb9e68e903fee1628a9fc6e5b6567710" translate="yes" xml:space="preserve">
          <source>Enum SSLEngineResult.Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3183d6da51d3a901d556b6bfab57de5cded994a1" translate="yes" xml:space="preserve">
          <source>Enum SignStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f504411e2a7f51ab239f9579dedd084c1ec81019" translate="yes" xml:space="preserve">
          <source>Enum SourceVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eabe5f4a8a7cff596106f59b215261fb4b94b19" translate="yes" xml:space="preserve">
          <source>Enum StandardCopyOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0282eca89a8ab90c4c08067bb0a0b00df6a4afd8" translate="yes" xml:space="preserve">
          <source>Enum StandardLocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de8b444c7db361f5d4c71f27e314971e3ca7299" translate="yes" xml:space="preserve">
          <source>Enum StandardOpenOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9a1938279df64dbe82b01702d5f768dc21a5b9" translate="yes" xml:space="preserve">
          <source>Enum StandardProtocolFamily</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9b4e5728581fc20cf8551228d5a220c696b57f" translate="yes" xml:space="preserve">
          <source>Enum Summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6e1b7e76c9a79c8da81acbc4f12e79348488a2" translate="yes" xml:space="preserve">
          <source>Enum TextStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5590fbbb537fb9f913f84b6e7bf599713c0f69" translate="yes" xml:space="preserve">
          <source>Enum ThaiBuddhistEra</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4baed0c972784599f175241ce98d6b3dab9fd64" translate="yes" xml:space="preserve">
          <source>Enum Thread.State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f3d93ec784da14202f997056ac26cf6bbb989a" translate="yes" xml:space="preserve">
          <source>Enum TimeUnit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7b8397ae243991105ff0a810924bb3c74c96a9" translate="yes" xml:space="preserve">
          <source>Enum TypeKind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb4af3a1b400cd19dabd873d383012ab0e88590" translate="yes" xml:space="preserve">
          <source>Enum ZoneOffsetTransitionRule.TimeDefinition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c2f2ab5f983411e651822fecaa6a033fa941da" translate="yes" xml:space="preserve">
          <source>Enum constant (e.g. &lt;a href=&quot;../../java/lang/annotation/elementtype#FIELD&quot;&gt;&lt;code&gt;ElementType.FIELD&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1b29fc356e1c2d3845d7f8476adf4ced362d31" translate="yes" xml:space="preserve">
          <source>Enum constants are deserialized differently than ordinary serializable or externalizable objects. The serialized form of an enum constant consists solely of its name; field values of the constant are not transmitted. To deserialize an enum constant, ObjectInputStream reads the constant name from the stream; the deserialized constant is then obtained by calling the static method &lt;code&gt;Enum.valueOf(Class, String)&lt;/code&gt; with the enum constant's base type and the received constant name as arguments. Like other serializable or externalizable objects, enum constants can function as the targets of back references appearing subsequently in the serialization stream. The process by which enum constants are deserialized cannot be customized: any class-specific readObject, readObjectNoData, and readResolve methods defined by enum types are ignored during deserialization. Similarly, any serialPersistentFields or serialVersionUID field declarations are also ignored--all enum types have a fixed serialVersionUID of 0L.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9c7dfea576459eb392bcd9a22fac8481357344" translate="yes" xml:space="preserve">
          <source>Enum constants are serialized differently than ordinary serializable or externalizable objects. The serialized form of an enum constant consists solely of its name; field values of the constant are not transmitted. To serialize an enum constant, ObjectOutputStream writes the string returned by the constant's name method. Like other serializable or externalizable objects, enum constants can function as the targets of back references appearing subsequently in the serialization stream. The process by which enum constants are serialized cannot be customized; any class-specific writeObject and writeReplace methods defined by enum types are ignored during serialization. Similarly, any serialPersistentFields or serialVersionUID field declarations are also ignored--all enum types have a fixed serialVersionUID of 0L.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a97bf41d3ca3551f160b166c5543a78ce93ca7d" translate="yes" xml:space="preserve">
          <source>Enum for &lt;code&gt;BigDecimal&lt;/code&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeaf9527b3f17d43b6900fca8bd581ea0de3bec" translate="yes" xml:space="preserve">
          <source>Enum for locale categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93a2fa939b2f0bc2c517412c96b3b64ef7acaf9" translate="yes" xml:space="preserve">
          <source>Enum for locale categories. These locale categories are used to get/set the default locale for the specific functionality represented by the category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3056590cd33e9b10403a042c9e5fe79e3b99624" translate="yes" xml:space="preserve">
          <source>Enum maps are maintained in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898eb51220041dfe11f67cfaeb7436fe9dc427bf" translate="yes" xml:space="preserve">
          <source>Enum.clone()</source>
          <target state="translated">Enum.clone()</target>
        </trans-unit>
        <trans-unit id="02ffb93f6ec33d59639b2174f666789a59a38850" translate="yes" xml:space="preserve">
          <source>Enum.compareTo()</source>
          <target state="translated">Enum.compareTo()</target>
        </trans-unit>
        <trans-unit id="f7b26798f7a6f12458d4fdfc449133ce5e9a3a8b" translate="yes" xml:space="preserve">
          <source>Enum.equals()</source>
          <target state="translated">Enum.equals()</target>
        </trans-unit>
        <trans-unit id="ed7ed0055c8ce492f47f81c03f07008d59200d32" translate="yes" xml:space="preserve">
          <source>Enum.finalize()</source>
          <target state="translated">Enum.finalize()</target>
        </trans-unit>
        <trans-unit id="3d6db8a30bc2d5fab60a1436e172f0ef624fa876" translate="yes" xml:space="preserve">
          <source>Enum.getDeclaringClass()</source>
          <target state="translated">Enum.getDeclaringClass()</target>
        </trans-unit>
        <trans-unit id="c73a942fc5f2c94c82cf650b23b3073fb885fcfe" translate="yes" xml:space="preserve">
          <source>Enum.hashCode()</source>
          <target state="translated">Enum.hashCode()</target>
        </trans-unit>
        <trans-unit id="494c80ea3740a2a6fc72cea63479acfbaab01900" translate="yes" xml:space="preserve">
          <source>Enum.name()</source>
          <target state="translated">Enum.name()</target>
        </trans-unit>
        <trans-unit id="39460524fb9a11caef70b1b32f8fd660bd69473e" translate="yes" xml:space="preserve">
          <source>Enum.ordinal()</source>
          <target state="translated">Enum.ordinal()</target>
        </trans-unit>
        <trans-unit id="37ad2fbcc7b50662d26750b9df4220a809323926" translate="yes" xml:space="preserve">
          <source>Enum.toString()</source>
          <target state="translated">Enum.toString()</target>
        </trans-unit>
        <trans-unit id="db2bdda23fdba822407de3bc56dffbec407dd914" translate="yes" xml:space="preserve">
          <source>Enum.valueOf()</source>
          <target state="translated">Enum.valueOf()</target>
        </trans-unit>
        <trans-unit id="fc7101dc8c5cddf5d5f553d6e2324ce1441bd5e1" translate="yes" xml:space="preserve">
          <source>EnumConstantNotPresentException</source>
          <target state="translated">EnumConstantNotPresentException</target>
        </trans-unit>
        <trans-unit id="f6789f0ad38046c21b7039b72740aabb0a582b56" translate="yes" xml:space="preserve">
          <source>EnumConstantNotPresentException.constantName()</source>
          <target state="translated">EnumConstantNotPresentException.constantName()</target>
        </trans-unit>
        <trans-unit id="19bc88df4b80ad3e863ea7a6e51487a2d251b8bc" translate="yes" xml:space="preserve">
          <source>EnumConstantNotPresentException.enumType()</source>
          <target state="translated">EnumConstantNotPresentException.enumType()</target>
        </trans-unit>
        <trans-unit id="f860e6e97b3c768ff2a919abec5fb3744c79fae9" translate="yes" xml:space="preserve">
          <source>EnumControl</source>
          <target state="translated">EnumControl</target>
        </trans-unit>
        <trans-unit id="6a59040de9e5abccfa4845e3ab190bdfb7cf882f" translate="yes" xml:space="preserve">
          <source>EnumControl.Type</source>
          <target state="translated">EnumControl.Type</target>
        </trans-unit>
        <trans-unit id="aa92799708661070a1828b7308a7958d73af1091" translate="yes" xml:space="preserve">
          <source>EnumControl.getValue()</source>
          <target state="translated">EnumControl.getValue()</target>
        </trans-unit>
        <trans-unit id="b0b489c5806966ed68ec8a2b4949c8ac36a140dc" translate="yes" xml:space="preserve">
          <source>EnumControl.getValues()</source>
          <target state="translated">EnumControl.getValues()</target>
        </trans-unit>
        <trans-unit id="f64cda3d03ab9715fa1b6aaadcd14016780b07df" translate="yes" xml:space="preserve">
          <source>EnumControl.setValue()</source>
          <target state="translated">EnumControl.setValue()</target>
        </trans-unit>
        <trans-unit id="b5bf57400bf048098df6a1319c8da27ea4a52618" translate="yes" xml:space="preserve">
          <source>EnumControl.toString()</source>
          <target state="translated">EnumControl.toString()</target>
        </trans-unit>
        <trans-unit id="365853d868349b697913b74dde6a4cc263319903" translate="yes" xml:space="preserve">
          <source>EnumMap</source>
          <target state="translated">EnumMap</target>
        </trans-unit>
        <trans-unit id="14604f35b10c35146ea89f600f424537eb990157" translate="yes" xml:space="preserve">
          <source>EnumMap.clear()</source>
          <target state="translated">EnumMap.clear()</target>
        </trans-unit>
        <trans-unit id="93113ee72777329c02217bc848612e1d85e4e187" translate="yes" xml:space="preserve">
          <source>EnumMap.clone()</source>
          <target state="translated">EnumMap.clone()</target>
        </trans-unit>
        <trans-unit id="fc1e95097448c88255d7daaeaa823c0bae152b40" translate="yes" xml:space="preserve">
          <source>EnumMap.containsKey()</source>
          <target state="translated">EnumMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="3eb00bf80c81dcdc61a17b057db4142ae77d2a78" translate="yes" xml:space="preserve">
          <source>EnumMap.containsValue()</source>
          <target state="translated">EnumMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="037b7608cdaeee014617324bfd9b6abbc3a2ddcf" translate="yes" xml:space="preserve">
          <source>EnumMap.entrySet()</source>
          <target state="translated">EnumMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="3706d9713af8645458e5f39846f61520fc57f0ca" translate="yes" xml:space="preserve">
          <source>EnumMap.equals()</source>
          <target state="translated">EnumMap.equals()</target>
        </trans-unit>
        <trans-unit id="f44bcb647f9b2d564973fdec3f15879e353cb783" translate="yes" xml:space="preserve">
          <source>EnumMap.get()</source>
          <target state="translated">EnumMap.get()</target>
        </trans-unit>
        <trans-unit id="1eab45c9031b21bd922e6eff94b29e794c36cd6f" translate="yes" xml:space="preserve">
          <source>EnumMap.hashCode()</source>
          <target state="translated">EnumMap.hashCode()</target>
        </trans-unit>
        <trans-unit id="ae55e43b7237ec3bbc0e9cb978acd138c1ffba19" translate="yes" xml:space="preserve">
          <source>EnumMap.keySet()</source>
          <target state="translated">EnumMap.keySet()</target>
        </trans-unit>
        <trans-unit id="984651c1d4244b6c1608f6dc0f5e1c825479fa9d" translate="yes" xml:space="preserve">
          <source>EnumMap.put()</source>
          <target state="translated">EnumMap.put()</target>
        </trans-unit>
        <trans-unit id="548a922d249ec22a09823fe743478e2d332ceead" translate="yes" xml:space="preserve">
          <source>EnumMap.putAll()</source>
          <target state="translated">EnumMap.putAll()</target>
        </trans-unit>
        <trans-unit id="67cec942e182b0b562090a066468ecb25ebd038a" translate="yes" xml:space="preserve">
          <source>EnumMap.remove()</source>
          <target state="translated">EnumMap.remove()</target>
        </trans-unit>
        <trans-unit id="439dadc3f7e554b97559383134528fe2c4aa13ff" translate="yes" xml:space="preserve">
          <source>EnumMap.size()</source>
          <target state="translated">EnumMap.size()</target>
        </trans-unit>
        <trans-unit id="6c458b8d354254449d61e1773925553d899366bb" translate="yes" xml:space="preserve">
          <source>EnumMap.values()</source>
          <target state="translated">EnumMap.values()</target>
        </trans-unit>
        <trans-unit id="2d5145ea7ae5868e4135753f4cb9f7518a77da19" translate="yes" xml:space="preserve">
          <source>EnumSet</source>
          <target state="translated">EnumSet</target>
        </trans-unit>
        <trans-unit id="793e486172bbfce67e19c7d63c14b61a54f9c5fb" translate="yes" xml:space="preserve">
          <source>EnumSet.allOf()</source>
          <target state="translated">EnumSet.allOf()</target>
        </trans-unit>
        <trans-unit id="fe53051f53111b88a3f901e1bd2b2003c0c1e86b" translate="yes" xml:space="preserve">
          <source>EnumSet.clone()</source>
          <target state="translated">EnumSet.clone()</target>
        </trans-unit>
        <trans-unit id="bb60a0f7725437d7daf187a2637129542c1af29b" translate="yes" xml:space="preserve">
          <source>EnumSet.complementOf()</source>
          <target state="translated">EnumSet.complementOf()</target>
        </trans-unit>
        <trans-unit id="af26692d3a66470e4c60987454dfb49f95832aca" translate="yes" xml:space="preserve">
          <source>EnumSet.copyOf()</source>
          <target state="translated">EnumSet.copyOf()</target>
        </trans-unit>
        <trans-unit id="c291751c8ba954a282076adc3fef922f946b0b6d" translate="yes" xml:space="preserve">
          <source>EnumSet.noneOf()</source>
          <target state="translated">EnumSet.noneOf()</target>
        </trans-unit>
        <trans-unit id="3bb536968aeec69a34206fde75a5cd33f044daac" translate="yes" xml:space="preserve">
          <source>EnumSet.of()</source>
          <target state="translated">EnumSet.of()</target>
        </trans-unit>
        <trans-unit id="53b8f4f2a5257444cdb0ad5d21da3bfe248f489b" translate="yes" xml:space="preserve">
          <source>EnumSet.range()</source>
          <target state="translated">EnumSet.range()</target>
        </trans-unit>
        <trans-unit id="35adf8d7e8ee52c258f306f67719371a66fc7789" translate="yes" xml:space="preserve">
          <source>EnumSyntax</source>
          <target state="translated">EnumSyntax</target>
        </trans-unit>
        <trans-unit id="10a3e847b6b41df654ac5eb9aea578d0dc14c612" translate="yes" xml:space="preserve">
          <source>EnumSyntax.clone()</source>
          <target state="translated">EnumSyntax.clone()</target>
        </trans-unit>
        <trans-unit id="81f2e08297598f36618cdf3f1334cb1171427c0c" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getEnumValueTable()</source>
          <target state="translated">EnumSyntax.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="67dde4b65522328467fc3592c717c0c1194e085b" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getOffset()</source>
          <target state="translated">EnumSyntax.getOffset()</target>
        </trans-unit>
        <trans-unit id="ac8d60cb3e93e3c01149cabe32c1efe7a8661838" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getStringTable()</source>
          <target state="translated">EnumSyntax.getStringTable()</target>
        </trans-unit>
        <trans-unit id="e3c28937cfb35d6c50efa3427629e3ce28a5d2f1" translate="yes" xml:space="preserve">
          <source>EnumSyntax.getValue()</source>
          <target state="translated">EnumSyntax.getValue()</target>
        </trans-unit>
        <trans-unit id="9b09ac77082a7905ad4539ebb8267ee149fccc36" translate="yes" xml:space="preserve">
          <source>EnumSyntax.hashCode()</source>
          <target state="translated">EnumSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="ee74096de4de0d220bded24faf4b52feffbb8c8b" translate="yes" xml:space="preserve">
          <source>EnumSyntax.readResolve()</source>
          <target state="translated">EnumSyntax.readResolve()</target>
        </trans-unit>
        <trans-unit id="cc56274c6aae63044d0d86d8fec3e8da040786f2" translate="yes" xml:space="preserve">
          <source>EnumSyntax.toString()</source>
          <target state="translated">EnumSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="a3ab9e2fb0e9ff13e50b672af622ddd0d07bc33e" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the class names of objects bound to them. See &lt;a href=&quot;context#list-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.list(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5efce492bb78a7f8fee24cc10826d7c7fa1171" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the class names of objects bound to them. See &lt;a href=&quot;context#list-javax.naming.Name-&quot;&gt;&lt;code&gt;list(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca66603a7d1cbab424962e35b00321b3163dd522" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the class names of objects bound to them. The contents of any subcontexts are not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb808c44ceb97ab8261104e695152c8401d4a6e" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the objects bound to them. See &lt;a href=&quot;context#listBindings-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.listBindings(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f5ab158162930091193d8ac03d6903ebd46852" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the objects bound to them. See &lt;a href=&quot;context#listBindings-javax.naming.Name-&quot;&gt;&lt;code&gt;listBindings(Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1193193a641434a7d1fe7ddea472fa376b48c6b9" translate="yes" xml:space="preserve">
          <source>Enumerates the names bound in the named context, along with the objects bound to them. The contents of any subcontexts are not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe0d2dc12d0aa622bacbe23b5516c2e7895e1d7" translate="yes" xml:space="preserve">
          <source>Enumeration</source>
          <target state="translated">Enumeration</target>
        </trans-unit>
        <trans-unit id="ae951b7a84944e8a5174851da0c405c6af1005a2" translate="yes" xml:space="preserve">
          <source>Enumeration of different ways to resolve dates and times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1c97a04f5deb3f426ba8fe132a9ede6c5f0675" translate="yes" xml:space="preserve">
          <source>Enumeration of the style of a localized date, time or date-time formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee6df6a08df848cb5205f6b94de2607a5cfe7e9" translate="yes" xml:space="preserve">
          <source>Enumeration of the style of text formatting and parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056dffba4f6d27b8551c63b9e4bb90c8bcedc17b" translate="yes" xml:space="preserve">
          <source>Enumeration of ways to handle the positive/negative sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61643572030b8e324a5f1aa9ff8dc11004912f42" translate="yes" xml:space="preserve">
          <source>Enumeration.hasMoreElements()</source>
          <target state="translated">Enumeration.hasMoreElements()</target>
        </trans-unit>
        <trans-unit id="4f024abefe1010087d14d4700968788bb6172de4" translate="yes" xml:space="preserve">
          <source>Enumeration.nextElement()</source>
          <target state="translated">Enumeration.nextElement()</target>
        </trans-unit>
        <trans-unit id="bbfcd21550847f3bf0dfe2bbbfe85ea869935566" translate="yes" xml:space="preserve">
          <source>Enumerations returned via the &lt;code&gt;elements&lt;/code&gt; method are not &lt;em&gt;fail-fast&lt;/em&gt;. Modifications to a collection should not be performed while enumerating over that collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4d5cd8cff6c7a4370a2e856860cd211cfd4470" translate="yes" xml:space="preserve">
          <source>Environment Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e089b5478197c226f53555b94d0db989fba681" translate="yes" xml:space="preserve">
          <source>Equality comparision between two</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeca7db45cabe939bd9952840d1c5472076d27d6" translate="yes" xml:space="preserve">
          <source>Equality comparison between two message format objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b8c6b37fb45c178c47560bc7c7db1dbfd35d07" translate="yes" xml:space="preserve">
          <source>Equality is also defined in terms of the syntax of this compound name. The default implementation of CompoundName uses the syntax properties jndi.syntax.ignorecase and jndi.syntax.trimblanks when comparing two components for equality. If case is ignored, two strings with the same sequence of characters but with different cases are considered equal. If blanks are being trimmed, leading and trailing blanks are ignored for the purpose of the comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d54d699a7e80c66707a879c18ce6958e8fd1bb3" translate="yes" xml:space="preserve">
          <source>Equality is determined by the implementation, which may use &lt;code&gt;Object.equals()&lt;/code&gt; or schema information to determine equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf7c487303e19620a8546ae97ac865e8378961a" translate="yes" xml:space="preserve">
          <source>Equality of two attributes is determined by the implementation class. A simple implementation can use &lt;code&gt;Object.equals()&lt;/code&gt; to determine equality of attribute values, while a more sophisticated implementation might make use of schema information to determine equality. Similarly, one implementation might provide a static storage structure which simply returns the values passed to its constructor, while another implementation might define &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;getAll()&lt;/code&gt;. to get the values dynamically from the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd94d5cb1db008bd5052fe72537ff0169a2f0ff" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;doubleaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;doubleaccumulator#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1510c6a373b3e370b689759304b89c8fa9497f" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;doubleadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;doubleadder#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b39935aa6e67129a6dfa1d6ce9a0b6e2ff0930" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;longaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;longaccumulator#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf0165e45652d161a1d209bde33a0bccffe85b9" translate="yes" xml:space="preserve">
          <source>Equivalent in effect to &lt;a href=&quot;longadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;longadder#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is &lt;em&gt;not&lt;/em&gt; guaranteed to be the final value occurring before the reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73b81998eb47052d78d64fb6233845cf0d9cbab" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;countedcompleter#tryComplete--&quot;&gt;&lt;code&gt;tryComplete()&lt;/code&gt;&lt;/a&gt; but does not invoke &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; along the completion path: If the pending count is nonzero, decrements the count; otherwise, similarly tries to complete this task's completer, if one exists, else marks this task as complete. This method may be useful in cases where &lt;code&gt;onCompletion&lt;/code&gt; should not, or need not, be invoked for each completer in a computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa3e74bf12e995463c7cd08a4c621b0234e98b5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;doubleaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add23d23d7f81d5def0877d6b7e94c150f597d15" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;doubleadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858ae4876e639e507427b83b656b04231e81a7e0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;longaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80feafeb128b73b3f7a57e9786aa4de6c7268ce6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;longadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c02a2597194b44dbb5bba649372eddd8c40fd5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;phaser#Phaser-java.util.concurrent.Phaser-int-&quot;&gt;&lt;code&gt;Phaser(parent, 0)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b2d93e2dbd00d3d248db5b27212583d68f6599" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;string#valueOf-char:A-&quot;&gt;&lt;code&gt;valueOf(char[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc91ab1f9ae882af053bf7f20d9fb3dda9dd63" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt;&lt;code&gt;valueOf(char[], int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4045fd33f0023dc27266cfcdda437df3cd27cf08" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;DAYS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec11ea2617c31da6f09b6b0125b87332b0f4b23" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;HOURS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea0ec38eef1d145fecbee5e98993234a572aa7a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;MICROSECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fff0cd66d5743b7437de9d0b4e3f35063c054b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;MILLISECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8041aac11c0e26269f3e934d5aaeccb663134757" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;MINUTES.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126e7ff200eb609b3b991d0c5c7b90e6739cab17" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;NANOSECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b164bec36f9d638c4b45d9cd481ef39ab1738653" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;timeunit#convert-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;SECONDS.convert(duration, this)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5069d41763b07c28bc9d108a6cd13326ecc03319" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;add(-1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6f58365febe1168cd965b6c4c10094fcd399e3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;add(1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccb39ddde8d6fad484020ea4df8b2c19df500d3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getAttribute(localName)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2904677b6aa3886a0ae9c8d24a19be13eed3d28e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getAttributeNode(localName)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2092119b108f30912f430b61fe7c6f8104a682" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getElementsByTagName(localName)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e314ed6dc80c587aaa4b28614ebb7b026ac2ce8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getNodeName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1736b40b89cf34ee8fd28e16eb91ad067fcad18" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;getRoot().quietlyComplete()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a9bf7950f33855d3552d3ea73bab668268484a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;hasAttribute(localName)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ca7613d7ef28137ebba3b3a43020cd4ab64c77" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;headMap(toKey, false)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fcbd000d72261bfaaba7b84cf974feda3d4b10" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;headSet(toElement, false)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f863a0a097041656e97bc2aaf021641389b7a6fc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;readUnsignedShort&lt;/code&gt;, except that the result is returned using the &lt;code&gt;char&lt;/code&gt; datatype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2e99418e5c5b070f5ba746a318c10e4680ba7c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;removeAttribute(localName)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7795b63785992f3120b29bb425fc757baea8424f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;setAttribute(qualifiedName, value)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c396b3e8182702d2f285e531ed87d08242e43f2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;setAttributeNode(newAttr)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca619c14652c990608831db921a58edecbdeeb8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;subMap(fromKey, true, toKey, false)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93da31976925f5d5dbf6882be9f92d392322b70b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;subSet(fromElement, true, toElement, false)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb9b96ed88c24686aed5b60e72cb0302d5c43e8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;tailMap(fromKey, true)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdf9771a9123e8c6073343ee04191d398adb648" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;tailSet(fromElement, true)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533a4e7c651b71abd9f66f66ebc7adfc5fdbd3c2" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isLowerCase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7eeff4a06544df6f6fc15d0237a36535f2b0ed3" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isMirrored()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71582737ec305ef924a4586adfbd5dfa78ccf5eb" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isUpperCase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825f3c379d3d25c717365560cdc309a155ba9809" translate="yes" xml:space="preserve">
          <source>Equivalent to java.lang.Character.isWhitespace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37a89cbd1a73777b5e65ae13dd77ca3e52051eb" translate="yes" xml:space="preserve">
          <source>Era</source>
          <target state="translated">Era</target>
        </trans-unit>
        <trans-unit id="367c0cc8fb4049117010f697468c0521049c94ab" translate="yes" xml:space="preserve">
          <source>Era designator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790d21ed50ff08ede3d548f932d8190e0a1fa172" translate="yes" xml:space="preserve">
          <source>Era.adjustInto()</source>
          <target state="translated">Era.adjustInto()</target>
        </trans-unit>
        <trans-unit id="8caabc4da10fd65eebefc482036736aa2d48d4c8" translate="yes" xml:space="preserve">
          <source>Era.get()</source>
          <target state="translated">Era.get()</target>
        </trans-unit>
        <trans-unit id="d4a54fbde3904644b6f1c7f9dd9f9f387c343673" translate="yes" xml:space="preserve">
          <source>Era.getDisplayName()</source>
          <target state="translated">Era.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="8fa3cfcb1250430f747263b60d3c7cf7b6164db0" translate="yes" xml:space="preserve">
          <source>Era.getLong()</source>
          <target state="translated">Era.getLong()</target>
        </trans-unit>
        <trans-unit id="10136975b7ad712f7ab20243d228fc1cd2486a96" translate="yes" xml:space="preserve">
          <source>Era.getValue()</source>
          <target state="translated">Era.getValue()</target>
        </trans-unit>
        <trans-unit id="760e997bd9621e2a16d089c5c19a9f483d950361" translate="yes" xml:space="preserve">
          <source>Era.isSupported()</source>
          <target state="translated">Era.isSupported()</target>
        </trans-unit>
        <trans-unit id="7069ffc6e5cf33b1da5284da6bba7c47bf3b8360" translate="yes" xml:space="preserve">
          <source>Era.query()</source>
          <target state="translated">Era.query()</target>
        </trans-unit>
        <trans-unit id="257430119ac1a39fe585c56d0cea10d69cf328c9" translate="yes" xml:space="preserve">
          <source>Era.range()</source>
          <target state="translated">Era.range()</target>
        </trans-unit>
        <trans-unit id="90883981ab9bc161bd3e2362ca11d5a0c494ed0f" translate="yes" xml:space="preserve">
          <source>Erases all reference types to &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All primitive types (including &lt;code&gt;void&lt;/code&gt;) will remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="0d4cbd287deb687f85a7783c83f5d735e088ab93" translate="yes" xml:space="preserve">
          <source>Error Summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d7060cbfdc591a151db80cdf2519fe1a5363b9" translate="yes" xml:space="preserve">
          <source>Error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21258be244c4a9490e85106968fca8a29e272474" translate="yes" xml:space="preserve">
          <source>Error thrown when something goes wrong while loading a service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc1848289208cf2802e21d4636f0b5c68a9338e" translate="yes" xml:space="preserve">
          <source>Error thrown when the &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt;, throws an unexpected exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c8e44d841415a2367cf60167426b1ca96d965e" translate="yes" xml:space="preserve">
          <source>ErrorManager</source>
          <target state="translated">ErrorManager</target>
        </trans-unit>
        <trans-unit id="7cec3574e2df8938a10016fee6e691b39de97411" translate="yes" xml:space="preserve">
          <source>ErrorManager objects can be attached to Handlers to process any error that occurs on a Handler during Logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0bd40c3fed3154da24d35faffe6fc3dc7138ac" translate="yes" xml:space="preserve">
          <source>ErrorManager.error()</source>
          <target state="translated">ErrorManager.error()</target>
        </trans-unit>
        <trans-unit id="67622c7b3c1ce649eefea0533505e53523494567" translate="yes" xml:space="preserve">
          <source>ErrorType</source>
          <target state="translated">ErrorType</target>
        </trans-unit>
        <trans-unit id="ce2312203f3df155d5ffbc2f59c849da7ac6dd02" translate="yes" xml:space="preserve">
          <source>Errors are returned using the error index field of the &lt;code&gt;ParsePosition&lt;/code&gt; instead of &lt;code&gt;DateTimeParseException&lt;/code&gt;. The returned error index will be set to an index indicative of the error. Callers must check for errors before using the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cf6ba262b79870a843f47187721b822ac937c8" translate="yes" xml:space="preserve">
          <source>Escaped octets, quotation, encoding, and decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb86698a3577e04fca77e536990a93a9e3551ab7" translate="yes" xml:space="preserve">
          <source>Escaped octets, that is, triplets consisting of the percent character (&lt;code&gt;'%'&lt;/code&gt;) followed by two hexadecimal digits (&lt;code&gt;'0'&lt;/code&gt;-&lt;code&gt;'9'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;-&lt;code&gt;'F'&lt;/code&gt;, and &lt;code&gt;'a'&lt;/code&gt;-&lt;code&gt;'f'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d374b4e4bfb724b81dedf8ad215dd39048cdef" translate="yes" xml:space="preserve">
          <source>Escaped string value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe61b31124cc2b7e3b5053b0f43c84ca4c458c3c" translate="yes" xml:space="preserve">
          <source>Escapes are not necessary for single and double quotes; however, by the rule above, single and double quote characters preceded by a backslash still yield single and double quote characters, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46903014b2ec2afcf53bcd7ad90b651a991435c" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the connector server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f105ba40adf1c2ecc34534aa80fd189d54dbce7e" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the connector server. This method is equivalent to &lt;a href=&quot;../jmxconnector#connect-java.util.Map-&quot;&gt;&lt;code&gt;connect(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222aa52c455981e66bb0211eb1bfd036ee2c2439" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the connector server. This method is equivalent to &lt;a href=&quot;jmxconnector#connect-java.util.Map-&quot;&gt;&lt;code&gt;connect(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652a11659ae516eb03346d35d2287be049dc6575" translate="yes" xml:space="preserve">
          <source>Evaluates the challenge data and generates a response. If a challenge is received from the server during the authentication process, this method is called to prepare an appropriate next response to submit to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37ee38fb5ab746c46bd38610fe9393b341807c9" translate="yes" xml:space="preserve">
          <source>Evaluates the global policy for the permissions granted to the ProtectionDomain and tests whether the permission is granted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04de03b35954700fc0981560154c68b2c0abb820" translate="yes" xml:space="preserve">
          <source>Evaluates the response data and generates a challenge. If a response is received from the client during the authentication process, this method is called to prepare an appropriate next challenge to submit to the client. The challenge is null if the authentication has succeeded and no more challenge data is to be sent to the client. It is non-null if the authentication must be continued by sending a challenge to the client, or if the authentication has succeeded but challenge data needs to be processed by the client. &lt;code&gt;isComplete()&lt;/code&gt; should be called after each call to &lt;code&gt;evaluateResponse()&lt;/code&gt;,to determine if any further response is needed from the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeeee2df7da4a330707fb4210340e2422d3bcbf" translate="yes" xml:space="preserve">
          <source>Evaluates this predicate on the given argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6dbad0f57e005ce2bfc411d02d5d9ef7dd609e" translate="yes" xml:space="preserve">
          <source>Evaluates this predicate on the given arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024230131b4730e1adcb311d13482224f5061f26" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServer.getAttribute(objectName,
 name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa94fd2b8f678f7bfb2664342f68b83a026ecc5" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getObjectInstance(objectName)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServer.getAttribute(objectName,
 name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9bcf2c4b60345e02423ea67a14379252e9a5e0" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getObjectInstance(objectName)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f55d1698c7bd31b1cbf2ee8a491586eaae3b7e5" translate="yes" xml:space="preserve">
          <source>Evaluating this expression for a given &lt;code&gt;objectName&lt;/code&gt; includes performing &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServer.isInstanceOf(objectName,
 ((StringValueExp)classNameValue.apply(objectName)).getValue()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd5a4f06a6cc671f5ba50c7ef0745b79ab4b3e6" translate="yes" xml:space="preserve">
          <source>Even although the new logger is anonymous, it is configured to have the root logger (&quot;&quot;) as its parent. This means that by default it inherits its effective level and handlers from the root logger. Changing its parent via the &lt;a href=&quot;logger#setParent-java.util.logging.Logger-&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method will still require the security permission specified by that method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcef3fddbb0971a27f00532d74ce4a7d7eb153fb" translate="yes" xml:space="preserve">
          <source>Even an inexact estimate is often useful and inexpensive to compute. For example, a sub-spliterator of an approximately balanced binary tree may return a value that estimates the number of elements to be half of that of its parent; if the root Spliterator does not maintain an accurate count, it could estimate size to be the power of two corresponding to its maximum depth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c80d6f5f02f81df3e7502bcb7cd38c2f84fa92" translate="yes" xml:space="preserve">
          <source>Even if a suite has been enabled, it might never be used. (For example, the peer does not support it, the requisite certificates (and private keys) for the suite are not available, or an anonymous suite is enabled but authentication is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84acc09c5371744ac3d8a2e0f8e9e8214ddb27d5" translate="yes" xml:space="preserve">
          <source>Even if a suite has been enabled, it might never be used. (For example, the peer does not support it, the requisite certificates/private keys for the suite are not available, or an anonymous suite is enabled but authentication is required.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5fada2afa4a19571abd6fbb236b9be3827910b" translate="yes" xml:space="preserve">
          <source>Even though the Java Print Service API includes a large number of different attribute categories, there are only a few different types of attribute values. Most attributes can be represented by a small number of data types, such as: integer values, integer ranges, text, or an enumeration of integer values. The type of the attribute value that a category accepts is called the attribute's abstract syntax. To provide consistency and reduce code duplication, the Java Print Service API defines abstract syntax classes to represent each abstract syntax, and these classes are used as the parent of standard attributes whenever possible. The abstract syntax classes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d3da603446ef160f908e8c76fe0fac80094ba1" translate="yes" xml:space="preserve">
          <source>Even though this annotation is not marked Inherited, deployment tools are required to examine all superclasses of any component class to discover all uses of this annotation in all superclasses. All such annotation instances specify resources that are needed by the application component. Note that this annotation may appear on private fields and methods of superclasses; the container is required to perform injection in these cases as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2827b386608ffa0f39038aba834a569ff837bd68" translate="yes" xml:space="preserve">
          <source>Even though this class is based on an internal FIFO queue, it does not automatically enforce FIFO acquisition policies. The core of exclusive synchronization takes the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f447ee762112fd3742d7f21f4b5e52b79243d367" translate="yes" xml:space="preserve">
          <source>Even when this semaphore has been set to use a fair ordering policy, a call to &lt;code&gt;tryAcquire()&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; immediately acquire a permit if one is available, whether or not other threads are currently waiting. This &quot;barging&quot; behavior can be useful in certain circumstances, even though it breaks fairness. If you want to honor the fairness setting, then use &lt;a href=&quot;semaphore#tryAcquire-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryAcquire(0, TimeUnit.SECONDS) &lt;/code&gt;&lt;/a&gt; which is almost equivalent (it also detects interruption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d8c691f9eb0d3e37c5c18ff0fc7472f7032b8a" translate="yes" xml:space="preserve">
          <source>Even when this semaphore has been set to use a fair ordering policy, a call to &lt;code&gt;tryAcquire&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; immediately acquire a permit if one is available, whether or not other threads are currently waiting. This &quot;barging&quot; behavior can be useful in certain circumstances, even though it breaks fairness. If you want to honor the fairness setting, then use &lt;a href=&quot;semaphore#tryAcquire-int-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryAcquire(permits, 0, TimeUnit.SECONDS) &lt;/code&gt;&lt;/a&gt; which is almost equivalent (it also detects interruption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888cae2cccab5f80438e90452f8700ddffa054d7" translate="yes" xml:space="preserve">
          <source>Event Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c675f0a292b3fcdd856e6cb772b49f7a9c03e749" translate="yes" xml:space="preserve">
          <source>EventContext</source>
          <target state="translated">EventContext</target>
        </trans-unit>
        <trans-unit id="43d079ed40469dcb0c3a19b9e85102ea3cee88fb" translate="yes" xml:space="preserve">
          <source>EventContext.addNamingListener()</source>
          <target state="translated">EventContext.addNamingListener()</target>
        </trans-unit>
        <trans-unit id="2df782786a30162e69402c7f0cb7f521b2874e40" translate="yes" xml:space="preserve">
          <source>EventContext.removeNamingListener()</source>
          <target state="translated">EventContext.removeNamingListener()</target>
        </trans-unit>
        <trans-unit id="450023bc0e255a3948f7be5be9669f337a138e1c" translate="yes" xml:space="preserve">
          <source>EventContext.targetMustExist()</source>
          <target state="translated">EventContext.targetMustExist()</target>
        </trans-unit>
        <trans-unit id="6c604c1b81bb76796d441c2be69df2c79afa13cb" translate="yes" xml:space="preserve">
          <source>EventDirContext</source>
          <target state="translated">EventDirContext</target>
        </trans-unit>
        <trans-unit id="1b05c12dac084c3787ec9d0463facc58691e0fe8" translate="yes" xml:space="preserve">
          <source>EventDirContext.addNamingListener()</source>
          <target state="translated">EventDirContext.addNamingListener()</target>
        </trans-unit>
        <trans-unit id="c5e02c488a6e5c083384d989a5166bb7dcd92940" translate="yes" xml:space="preserve">
          <source>EventHandler</source>
          <target state="translated">EventHandler</target>
        </trans-unit>
        <trans-unit id="a19e747e6ebb5c24cbad238e1a3c96fe161195b3" translate="yes" xml:space="preserve">
          <source>EventHandler.create()</source>
          <target state="translated">EventHandler.create()</target>
        </trans-unit>
        <trans-unit id="f26ecea4aaa046554064569eaf8c74185eef90e8" translate="yes" xml:space="preserve">
          <source>EventHandler.getAction()</source>
          <target state="translated">EventHandler.getAction()</target>
        </trans-unit>
        <trans-unit id="210efd542ccd8af0f85e171da747b6f3ee285cf3" translate="yes" xml:space="preserve">
          <source>EventHandler.getEventPropertyName()</source>
          <target state="translated">EventHandler.getEventPropertyName()</target>
        </trans-unit>
        <trans-unit id="69ad4fbef36aef26e10a11b3831de601743578ea" translate="yes" xml:space="preserve">
          <source>EventHandler.getListenerMethodName()</source>
          <target state="translated">EventHandler.getListenerMethodName()</target>
        </trans-unit>
        <trans-unit id="668165222528931ffff5a72bd09b48bb2b7217cc" translate="yes" xml:space="preserve">
          <source>EventHandler.getTarget()</source>
          <target state="translated">EventHandler.getTarget()</target>
        </trans-unit>
        <trans-unit id="ba596214c1a73b7b6a2bfe4391fadfabeeddb8fc" translate="yes" xml:space="preserve">
          <source>EventHandler.invoke()</source>
          <target state="translated">EventHandler.invoke()</target>
        </trans-unit>
        <trans-unit id="0df10d5eb9f31c564291131f6209eb2538b12219" translate="yes" xml:space="preserve">
          <source>EventListener</source>
          <target state="translated">EventListener</target>
        </trans-unit>
        <trans-unit id="f97ab1ba335b456b3ec3dd851322926972022258" translate="yes" xml:space="preserve">
          <source>EventListenerProxy</source>
          <target state="translated">EventListenerProxy</target>
        </trans-unit>
        <trans-unit id="1691703d6fd7310ad150669c92df3ea25a3a9610" translate="yes" xml:space="preserve">
          <source>EventListenerProxy.getListener()</source>
          <target state="translated">EventListenerProxy.getListener()</target>
        </trans-unit>
        <trans-unit id="aa2aec7851f65e693810b0308966495fb255258b" translate="yes" xml:space="preserve">
          <source>EventObject</source>
          <target state="translated">EventObject</target>
        </trans-unit>
        <trans-unit id="deaf3286b3a03aeb0117a3d93b68705cddeb233b" translate="yes" xml:space="preserve">
          <source>EventObject.getSource()</source>
          <target state="translated">EventObject.getSource()</target>
        </trans-unit>
        <trans-unit id="d616ad5dfe47ac33410ae03ad5773efacb0100c6" translate="yes" xml:space="preserve">
          <source>EventObject.toString()</source>
          <target state="translated">EventObject.toString()</target>
        </trans-unit>
        <trans-unit id="790025ff9391db27541ff3ce18a7d6a6ced96155" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor</source>
          <target state="translated">EventSetDescriptor</target>
        </trans-unit>
        <trans-unit id="e744e5e02b12b1f2bc089f37e8ee86ac72422429" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getAddListenerMethod()</source>
          <target state="translated">EventSetDescriptor.getAddListenerMethod()</target>
        </trans-unit>
        <trans-unit id="6eb53c6a1b658897d81dd289dd2cb48aad717a9b" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getGetListenerMethod()</source>
          <target state="translated">EventSetDescriptor.getGetListenerMethod()</target>
        </trans-unit>
        <trans-unit id="8c430181022535443e0dfcf2477c78d0d8e31d2f" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getListenerMethodDescriptors()</source>
          <target state="translated">EventSetDescriptor.getListenerMethodDescriptors()</target>
        </trans-unit>
        <trans-unit id="8b5ee9df7e02931b8e062773cfadf9937a2ca0d0" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getListenerMethods()</source>
          <target state="translated">EventSetDescriptor.getListenerMethods()</target>
        </trans-unit>
        <trans-unit id="0ea4eb30a91f67be395007f8bc2cee7eec0f548d" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getListenerType()</source>
          <target state="translated">EventSetDescriptor.getListenerType()</target>
        </trans-unit>
        <trans-unit id="b1f84e9c6d2766e6c65831fb0917e84924e682c4" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.getRemoveListenerMethod()</source>
          <target state="translated">EventSetDescriptor.getRemoveListenerMethod()</target>
        </trans-unit>
        <trans-unit id="b2d2d2e3c9de4a8d9184fffb2fe004398f0580fd" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.isInDefaultEventSet()</source>
          <target state="translated">EventSetDescriptor.isInDefaultEventSet()</target>
        </trans-unit>
        <trans-unit id="0b8c46765de0f36cddfb93d2f95a5e836db4f24b" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.isUnicast()</source>
          <target state="translated">EventSetDescriptor.isUnicast()</target>
        </trans-unit>
        <trans-unit id="352200789f0c16b5a19b13f382df53d8a03c447b" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.setInDefaultEventSet()</source>
          <target state="translated">EventSetDescriptor.setInDefaultEventSet()</target>
        </trans-unit>
        <trans-unit id="9c6687fe17da1aacf0f75fde0df0e30480368671" translate="yes" xml:space="preserve">
          <source>EventSetDescriptor.setUnicast()</source>
          <target state="translated">EventSetDescriptor.setUnicast()</target>
        </trans-unit>
        <trans-unit id="0810acf6507d9fa54622c580a430c126a1631bc4" translate="yes" xml:space="preserve">
          <source>Events are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM. Events may be generated before the changes have become permanent. Events are not generated when indirect descendants of this node are added or removed; a caller desiring such events must register with each descendant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4b6851149e06bef6438f2fbebb119273ae53e2" translate="yes" xml:space="preserve">
          <source>Events are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM. Events may be generated before the changes have been made persistent. Events are not generated when preferences are modified in descendants of this node; a caller desiring such events must register with each descendant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927aa52c7a5f52e819498b332f9b2d8f5b42e774" translate="yes" xml:space="preserve">
          <source>Eventually sets the element at position &lt;code&gt;i&lt;/code&gt; to the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60df4e3e445419f98ebf4c928a4f455ac8b9abb6" translate="yes" xml:space="preserve">
          <source>Eventually sets the field of the given object managed by this updater to the given updated value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d1c6bbaf3b3494bc264df409bc7342aa7a5f95" translate="yes" xml:space="preserve">
          <source>Eventually sets to the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddf256ae170b3ec0ced66c66199548cef131f4b" translate="yes" xml:space="preserve">
          <source>Every &lt;a href=&quot;class&quot;&gt;&lt;code&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; object contains a &lt;a href=&quot;class#getClassLoader--&quot;&gt;&lt;code&gt;reference&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;ClassLoader&lt;/code&gt; that defined it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eb5e6c26f299b75f428f350fc940532c3f95f3" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Preferences&lt;/code&gt; implementation must have an associated &lt;a href=&quot;preferencesfactory&quot;&gt;&lt;code&gt;PreferencesFactory&lt;/code&gt;&lt;/a&gt; implementation. Every Java(TM) SE implementation must provide some means of specifying which &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation is used to generate the root preferences nodes. This allows the administrator to replace the default preferences implementation with an alternative implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d3f6352b18ee194d4d9c99b6948a096074c6a9" translate="yes" xml:space="preserve">
          <source>Every JAR file produced by this engine will include the string &quot;&lt;code&gt;PACK200&lt;/code&gt;&quot; as a zip file comment. This allows a deployer to detect if a JAR archive was packed and unpacked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc680a56f57caefe58e330f9392b9f58c8c5f9e4" translate="yes" xml:space="preserve">
          <source>Every Java application has a single instance of class &lt;code&gt;Runtime&lt;/code&gt; that allows the application to interface with the environment in which the application is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbf9a0eef74748f85fb921358901843ab655cdb" translate="yes" xml:space="preserve">
          <source>Every Java application has a single instance of class &lt;code&gt;Runtime&lt;/code&gt; that allows the application to interface with the environment in which the application is running. The current runtime can be obtained from the &lt;code&gt;getRuntime&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7988d27561a9368878b1be7a88271ad6eef87af0" translate="yes" xml:space="preserve">
          <source>Every Java type that appears as the parameter or return type of a method in an MXBean interface must be &lt;em&gt;convertible&lt;/em&gt; using the rules below. Additionally, parameters must be &lt;em&gt;reconstructible&lt;/em&gt; as defined below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca46b048e02f6238a8b951522075abad3c17bd0c" translate="yes" xml:space="preserve">
          <source>Every MBean Server has a &lt;em&gt;class loader repository&lt;/em&gt; containing all MBeans registered in that MBean Server that are of a subclass of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;. The class loader repository is used by the forms of the &lt;code&gt;createMBean&lt;/code&gt; and &lt;code&gt;instantiate&lt;/code&gt; methods in the &lt;a href=&quot;../mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface that do not have an explicit loader parameter. It is also used by the &lt;code&gt;MLet&lt;/code&gt; class when it does not find a class in its own set of URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c88d3d22f032077aafa5126202687b0611a7911" translate="yes" xml:space="preserve">
          <source>Every MBean has an &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; with information about the MBean itself, and its attributes, operations, constructors, and notifications. A Model MBean augments this &lt;code&gt;MBeanInfo&lt;/code&gt; with &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt;s that encode additional information in the form of (key,value) pairs. Usually, &lt;code&gt;Descriptor&lt;/code&gt;s are instances of &lt;a href=&quot;descriptorsupport&quot;&gt;&lt;code&gt;DescriptorSupport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f5169c5025ea8abd062a637038287b9f85c687" translate="yes" xml:space="preserve">
          <source>Every MBean has an &lt;a href=&quot;../mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; with information about the MBean itself, and its attributes, operations, constructors, and notifications. In an Open MBean, this &lt;code&gt;MBeanInfo&lt;/code&gt; implements the &lt;a href=&quot;openmbeaninfo&quot;&gt;&lt;code&gt;OpenMBeanInfo&lt;/code&gt;&lt;/a&gt; interface, usually by being an instance of &lt;a href=&quot;openmbeaninfosupport&quot;&gt;&lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0326ab9cfa8a7cdbd3b5a42069bc41b1316437" translate="yes" xml:space="preserve">
          <source>Every MBean which is added to the MBean server becomes manageable: its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBean server. A Java object cannot be registered in the MBean server unless it is a JMX compliant MBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80f46aba13b693251796feff57eb4190f77f886" translate="yes" xml:space="preserve">
          <source>Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65f5f76d564b36f182f7b024f951ecd0fe8b1af" translate="yes" xml:space="preserve">
          <source>Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24536c65c6bdb6003387953d9dc6d18cd66c228" translate="yes" xml:space="preserve">
          <source>Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes, operations, and notifications become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc6d15ffce883732262ecaedd9eb8c61c754960" translate="yes" xml:space="preserve">
          <source>Every RequiredModelMBean which is instantiated in the MBeanServer becomes manageable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8577d6e41ff711bcc90933b019cae44f1fff36" translate="yes" xml:space="preserve">
          <source>Every bit set has a current size, which is the number of bits of space currently in use by the bit set. Note that the size is related to the implementation of a bit set, so it may change with implementation. The length of a bit set relates to logical length of a bit set and is defined independently of implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe28d6d1aa717027a7aeec58ca2d9c4396b3b84" translate="yes" xml:space="preserve">
          <source>Every buffer is readable, but not every buffer is writable. The mutation methods of each buffer class are specified as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b51e23a02ee4ae615b314f952d5f70bac8435" translate="yes" xml:space="preserve">
          <source>Every charset contains itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38eeb89a456fccc33b7211aba3622c64fb751e14" translate="yes" xml:space="preserve">
          <source>Every charset has a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22b78089cfb9ca1cb85d3b3acaf7ec4f780443d" translate="yes" xml:space="preserve">
          <source>Every compiler which implements this interface provides a standard file manager for operating on regular &lt;a href=&quot;../../java/io/file&quot;&gt;files&lt;/a&gt;. The StandardJavaFileManager interface defines additional methods for creating file objects from regular files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59fddb78d3a521eff4442e186ce5d2fe3fc4f13" translate="yes" xml:space="preserve">
          <source>Every connection opened by a connector server has a string identifier, called its &lt;b&gt;connection id&lt;/b&gt;. This identifier appears in the &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; events emitted by the connector server, in the list returned by &lt;a href=&quot;jmxconnectorservermbean#getConnectionIds--&quot;&gt;&lt;code&gt;getConnectionIds()&lt;/code&gt;&lt;/a&gt;, and in the value returned by the client's &lt;a href=&quot;jmxconnector#getConnectionId--&quot;&gt;&lt;code&gt;getConnectionId()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc9f7376f9d46b9c3676b5f263505b90a9525f6" translate="yes" xml:space="preserve">
          <source>Every data line has an audio format associated with its data stream. The audio format of a source (playback) data line indicates what kind of data the data line expects to receive for output. For a target (capture) data line, the audio format specifies the kind of the data that can be read from the line. Sound files also have audio formats, of course. The &lt;code&gt;&lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;AudioFileFormat&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class encapsulates an &lt;code&gt;AudioFormat&lt;/code&gt; in addition to other, file-specific information. Similarly, an &lt;code&gt;&lt;a href=&quot;audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has an &lt;code&gt;AudioFormat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366c8a74ce0bfae1443528e3eba33644b699b273" translate="yes" xml:space="preserve">
          <source>Every effort will be made to avoid introducing additional backwards incompatibilities; however, sometimes there is no other alternative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df31a1eb1dbb104db07ad3b697f21ceb935e7500" translate="yes" xml:space="preserve">
          <source>Every implementation must support the RMI connector protocol with the default RMI transport, specified with string &lt;code&gt;rmi&lt;/code&gt;. An implementation may optionally support the RMI connector protocol with the RMI/IIOP transport, specified with the string &lt;code&gt;iiop&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3c76cda0eb5819043de68e450051b3f76ba87e" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support at least one strong &lt;code&gt;SecureRandom&lt;/code&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e768526fe3ad1864af2d7e6f23a3c5656b4bcdec" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; algorithms and keysizes in parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b227c428a22ceb829f4ee39216b99de8e4dacd" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;AlgorithmParameters&lt;/code&gt; algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36183fd5a13f488280d4fb3c8e6af2f565438a24" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPath&lt;/code&gt; encodings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbbfbcc6c3282ae40b7b52726bc73b110a7e518" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPathBuilder&lt;/code&gt; algorithm:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c854fc4b2a13f95ccfcbf19c6bf89cad9cb19d3" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPathValidator&lt;/code&gt; algorithm:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f404f8a40c78497bbc8bd841e4d1ef18b671a124" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertStore&lt;/code&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124008f7aafcdf6cb7b340de89da089f74397daa" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertificateFactory&lt;/code&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ce802bc3f8ee802ff739c73f266086881b5312" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Cipher&lt;/code&gt; transformations with the keysizes in parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd37f2f3f66f6d9c590cd0092b1ff35c6033b9c" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781bf16ce14e1c4c0e979592a2bfeeeec3292242" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyFactory&lt;/code&gt; algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c82792156a06e15c51a159e6f95ffc1f02c653e" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyGenerator&lt;/code&gt; algorithms with the keysizes in parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565ef7a135094ae7c9497370306a550225463556" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyPairGenerator&lt;/code&gt; algorithms and keysizes in parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810bc6584402251bb16e4436643c78db51223d64" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyStore&lt;/code&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fde90e244ed04783a64d7c3f79b1f1be14ebf90" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Mac&lt;/code&gt; algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaf00b5bac5cac5cc9a6e066811de33d0e15a66" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;MessageDigest&lt;/code&gt; algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d018400a5f877e1c83e6ec3d87f0e0de56b8ca1" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SSLContext&lt;/code&gt; protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ede6336e7945995dd841a37d9835cfe081a53f7" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SecretKeyFactory&lt;/code&gt; algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8238579adfd0d436e396d91ba6fb668e167862d" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Signature&lt;/code&gt; algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ddbdbb62f077146c9ec51639a6d40e3a66685c" translate="yes" xml:space="preserve">
          <source>Every instance of the Java virtual machine has a default character encoding determined during virtual-machine startup and typically depends upon the locale and charset being used by the underlying operating system. In a distributed environment there is no guarantee that two VM share the same default encoding. Thus clients which want to stream platform encoded text data from the host platform to a Java Print Service instance must explicitly declare the charset and not rely on defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd422b750b5e2c8ade090a693d83359f35fc22d" translate="yes" xml:space="preserve">
          <source>Every instance of the Java virtual machine has a default charset, which may or may not be one of the standard charsets. The default charset is determined during virtual-machine startup and typically depends upon the locale and charset being used by the underlying operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8832439bbb3d5ffbaf359959cba944c7e15f8c" translate="yes" xml:space="preserve">
          <source>Every method handle reports its type descriptor via the &lt;a href=&quot;methodhandle#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; accessor. This type descriptor is a &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; object, whose structure is a series of classes, one of which is the return type of the method (or &lt;code&gt;void.class&lt;/code&gt; if none).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204eed6769e6b6286bdf99f519a02d70fc5b8626" translate="yes" xml:space="preserve">
          <source>Every method which produces formatted output requires a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40476ff26c7c71e385ad1c1ccd116b319483565" translate="yes" xml:space="preserve">
          <source>Every naming method in the &lt;code&gt;Context&lt;/code&gt; interface has two overloads: one that accepts a &lt;code&gt;Name&lt;/code&gt; argument and one that accepts a string name. &lt;code&gt;Name&lt;/code&gt; is an interface that represents a generic name--an ordered sequence of zero of more components. For these methods, &lt;code&gt;Name&lt;/code&gt; can be used to represent a &lt;em&gt;composite name&lt;/em&gt; (&lt;code&gt;CompositeName&lt;/code&gt;) so that you can name an object using a name which spans multiple namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e8cc10b5240e5593d87feab50e7173166eb9fa" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to its parent is its node name (except for the root node, which does not have a parent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7724eecbb51838e4a538729cfe1179c7bf709a" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to itself is the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a8583605dbf5de314547d642597590b3020da9" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to the root is its absolute path name with the initial slash character removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c489b63daa2b9a9b6180d50ffd3730d692613aef" translate="yes" xml:space="preserve">
          <source>Every other method specifies that there is an operation with the same name as the method. The Java type and Open type of the return value and of each parameter are determined by the mapping rules below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a72151bc8443dd4828381f577ac74378fb9ef8f" translate="yes" xml:space="preserve">
          <source>Every pathname that denotes an existing file or directory has a unique canonical form. Every pathname that denotes a nonexistent file or directory also has a unique canonical form. The canonical form of the pathname of a nonexistent file or directory may be different from the canonical form of the same pathname after the file or directory is created. Similarly, the canonical form of the pathname of an existing file or directory may be different from the canonical form of the same pathname after the file or directory is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9330bf4a03b53aa1292a10e98fcb64768d7b058a" translate="yes" xml:space="preserve">
          <source>Every property editor must support a call on setValue when the argument object is of the type for which this is the corresponding propertyEditor. In addition, each property editor must either support a custom editor, or support setAsText.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3717941423626ac9cf7230e3ac3f96bc1f032e5e" translate="yes" xml:space="preserve">
          <source>Every propertyEditor must support one or more of the three simple display styles. Thus it can either (1) support isPaintable or (2) both return a non-null String[] from getTags() and return a non-null value from getAsText or (3) simply return a non-null String from getAsText().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab7c38b5135856053cbcf27fb14833cdf915d60" translate="yes" xml:space="preserve">
          <source>Every role has a &lt;em&gt;cardinality&lt;/em&gt;, which provides lower and upper bounds on the number of MBeans that can appear in that role in a given relation instance. Usually, the lower and upper bounds are both 1, with exactly one MBean appearing in the role. The cardinality only limits the number of MBeans in the role per relation instance. The same MBean can appear in the same role in any number of instances of a relation type. In the &lt;code&gt;DependsOn&lt;/code&gt; example, a given module can depend on many other modules, and be depended on by many others, but any given relation instance links exactly one &lt;code&gt;dependent&lt;/code&gt; module with exactly one &lt;code&gt;dependedOn&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd9a2f55ca7e9b594032692867dbd0ad48457e1" translate="yes" xml:space="preserve">
          <source>Every role is &lt;em&gt;typed&lt;/em&gt;, meaning that an MBean that appears in that role must be an instance of the role's type. In the &lt;code&gt;DependsOn&lt;/code&gt; example, both roles would be of type &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf840d425922327b94cbaf298de5ab16e9a7b79" translate="yes" xml:space="preserve">
          <source>Every string buffer has a capacity. As long as the length of the character sequence contained in the string buffer does not exceed the capacity, it is not necessary to allocate a new internal buffer array. If the internal buffer overflows, it is automatically made larger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8e6c8ff8ba3d89ff2a6e4f484260e6b6c085f5" translate="yes" xml:space="preserve">
          <source>Every string builder has a capacity. As long as the length of the character sequence contained in the string builder does not exceed the capacity, it is not necessary to allocate a new internal buffer. If the internal buffer overflows, it is automatically made larger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d106019115f10fb280daa50a39bcc5b44ed48439" translate="yes" xml:space="preserve">
          <source>Every thread has a name for identification purposes. More than one thread may have the same name. If a name is not specified when a thread is created, a new name is generated for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c3e40ec218fe95cc1b76dd41fe909e8962366d" translate="yes" xml:space="preserve">
          <source>Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority. Each thread may or may not also be marked as a daemon. When code running in some thread creates a new &lt;code&gt;Thread&lt;/code&gt; object, the new thread has its priority initially set equal to the priority of the creating thread, and is a daemon thread if and only if the creating thread is a daemon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c638aa616ce65d802b4ba335aafbf46193f8b8f" translate="yes" xml:space="preserve">
          <source>Every version of the JMX specification continues to implement the features of previous versions. So when the client is running an earlier version than the server, there should not be any interoperability concerns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a034e7079a04438693cb2ba5970a49792b682984" translate="yes" xml:space="preserve">
          <source>Exactly one of &lt;code&gt;getRenderedImage&lt;/code&gt; and &lt;code&gt;getRaster&lt;/code&gt; will return a non-&lt;code&gt;null&lt;/code&gt; value. Subclasses are responsible for ensuring this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8a61432efad1cceb70d0a7168ea486712c4953" translate="yes" xml:space="preserve">
          <source>Examines the argument type and its fields and perform some documented operation. No specific operations are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="22d244fd76e1ca249ad40be45bec3a1933e4fe88" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;&quot;#,#00.0#&quot;&lt;/code&gt; &amp;rarr; 1,234.56</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57d5366eca3783726f3d7caa68b6d9a1d639709" translate="yes" xml:space="preserve">
          <source>Example Suppose we have a service type &lt;code&gt;com.example.CodecSet&lt;/code&gt; which is intended to represent sets of encoder/decoder pairs for some protocol. In this case it is an abstract class with two abstract methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a06132f384ea01bafc4c48f22905ce128d2dade" translate="yes" xml:space="preserve">
          <source>Example of the iterator usage,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbad3ff9680448a97e3e93c8ac90fef412296573" translate="yes" xml:space="preserve">
          <source>Example results are &quot;2&quot;, &quot;new Color(127,127,34)&quot;, &quot;Color.orange&quot;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429046e64d4cd3436e1c37eb60d59f887f5f1478" translate="yes" xml:space="preserve">
          <source>Example results are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fb1ec4be4eb18e26211d0b08ebbd8374840ecb" translate="yes" xml:space="preserve">
          <source>Example url</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="79b9c1390563c3cf0a4c4d8fff2384faa32cf303" translate="yes" xml:space="preserve">
          <source>Example: &quot;Latn&quot; (Latin), &quot;Cyrl&quot; (Cyrillic)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19474c339bbc86eee07b1c2108f0cdc28535b63" translate="yes" xml:space="preserve">
          <source>Example: &quot;US&quot; (United States), &quot;FR&quot; (France), &quot;029&quot; (Caribbean)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd43cd1409efd2f924b88cecdc4ee2b5bbf52d2" translate="yes" xml:space="preserve">
          <source>Example: &quot;en&quot; (English), &quot;ja&quot; (Japanese), &quot;kok&quot; (Konkani)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484478e712cae8003c2c03c06e78a3428e7ab4b6" translate="yes" xml:space="preserve">
          <source>Example: &quot;polyton&quot; (Polytonic Greek), &quot;POSIX&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f667cc777b1242d98364f0ac1fa02d3f96a167" translate="yes" xml:space="preserve">
          <source>Example: 123%</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5807ee3a782f2372237d70c10b7a8c266239ac2d" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;&quot;#,#00.0#;(#,#00.0#)&quot;&lt;/code&gt; for negatives in parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d8120bba52d6db8f1d43bf8dd5ff3373afede1" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Boolean.parseBoolean(&quot;True&quot;)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22168d0e3ee025a80c6b128455f9476fa0a30661" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Boolean.parseBoolean(&quot;yes&quot;)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f9bf532b9e9f966608cd71532921b0ef23e919" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;DatagramSocket s = new DatagramSocket(null);
              s.bind(new InetSocketAddress(8888));
 &lt;/code&gt; Which is equivalent to: &lt;code&gt;DatagramSocket s = new DatagramSocket(8888);
 &lt;/code&gt; Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80108241de7b75c463b05fecf7f66580a18848b6" translate="yes" xml:space="preserve">
          <source>Example: Decimal ON: 12345 &amp;rarr; 12345.; OFF: 12345 &amp;rarr; 12345</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b039444d73de8e77e0dd0c362a46e7c4eed321f" translate="yes" xml:space="preserve">
          <source>Example: If an MBean called &lt;code&gt;myMbean&lt;/code&gt; needs to notify registered listeners when its attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029b09a24b366ab20789a1a528d783da16fc2286" translate="yes" xml:space="preserve">
          <source>Example: key=&quot;u&quot;/value=&quot;ca-japanese&quot; (Japanese Calendar), key=&quot;x&quot;/value=&quot;java-1-7&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b9a73d3e31207e33b7a76f83cfcdce9d1f8914" translate="yes" xml:space="preserve">
          <source>Example: to find MBeans that are instances of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName()))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0c707eab09225bf4add3011db005ce009555fe" translate="yes" xml:space="preserve">
          <source>Example: with multiplier 100, 1.23 is formatted as &quot;123&quot;, and &quot;123&quot; is parsed into 1.23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fa252b8bd1695476ec86ad9cf3a76343fada4222" translate="yes" xml:space="preserve">
          <source>Examples of ObjectName patterns are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1747eac3ea05fd342073c2c6214c4820994c9914" translate="yes" xml:space="preserve">
          <source>Examples of Path Matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62ff8e48633f977f3c04fe6c872d4fcc3a83935" translate="yes" xml:space="preserve">
          <source>Examples of SocketPermission instantiation are the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c098cf6aca5d8c3fbc6cb98ed6837a000d6be3" translate="yes" xml:space="preserve">
          <source>Examples of Using EventHandler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e065094a7693ce5a3fbf784e28f012e86464afe" translate="yes" xml:space="preserve">
          <source>Examples of Week based Years</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20588487b5b9b143549e52fe5959b985b88733c" translate="yes" xml:space="preserve">
          <source>Examples of WeekFields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dc9b7ce12c48b3086f36028e31cfaf99b24c75" translate="yes" xml:space="preserve">
          <source>Examples of WeekFields for week-based-year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400581f06c1f2d2343395f06fb71bea7e101cd8e" translate="yes" xml:space="preserve">
          <source>Examples of associative operations include numeric addition, min, and max, and string concatenation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465c7b61dabbb3ecff3844e189702388fe041a85" translate="yes" xml:space="preserve">
          <source>Examples of expected usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4686353f35d2c81851e074f558263240dbec12" translate="yes" xml:space="preserve">
          <source>Examples of locale-sensitive and 1:M case mappings are in the following table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6150a8c3a39b6d5ae535fe8a98df167d5b3716d4" translate="yes" xml:space="preserve">
          <source>Examples of lowercase mappings are in the following table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfd6dbcb110950faae5500b60c21afa1b81cb21" translate="yes" xml:space="preserve">
          <source>Examples of mutable reduction operations include: accumulating elements into a &lt;code&gt;Collection&lt;/code&gt;; concatenating strings using a &lt;code&gt;StringBuilder&lt;/code&gt;; computing summary information about elements such as sum, min, max, or average; computing &quot;pivot table&quot; summaries such as &quot;maximum valued transaction by seller&quot;, etc. The class &lt;a href=&quot;collectors&quot;&gt;&lt;code&gt;Collectors&lt;/code&gt;&lt;/a&gt; provides implementations of many common mutable reductions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70c68c69e68a5d7a2c11993896332854469c9c6" translate="yes" xml:space="preserve">
          <source>Examples of these limits include client and server configuration limits such as size, time, number of hops, etc.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
