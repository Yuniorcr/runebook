<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="c7b124817825dd3a41debbb4d04f864890a65fbf" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#&amp;lt;&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ff3f09f0c5a8282a9f1b0fd5ab89aaef556c8b" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eba33a774897c13f5360480dda50df67ff057e7" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16368560c916d87f65d7ce89f5d666a7c4175334" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff581700dc4f8a3d84919ea07b1fd97f61628ba" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#style=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160873470ca99452b2594b738fcace692a5c9d89" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#to_yaml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffa9af7a01bdfe63c4b9baeab7e5f4ff19fa5f6" translate="yes" xml:space="preserve">
          <source>Non UTF-8 valid strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cababce0b45af347657895a02679eff6ed12fe5" translate="yes" xml:space="preserve">
          <source>Non-matching paths are implicitly converted to this path's kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be5fcdd962946d4d3a529bfb37ee67c4054e5b0" translate="yes" xml:space="preserve">
          <source>Normalizes this URI instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69c1716df1f314f731c86bb9ee456bd2cd42a44" translate="yes" xml:space="preserve">
          <source>Not a STREAM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338469a733ebda5aa0e30bb1db80e0e157e51892" translate="yes" xml:space="preserve">
          <source>Not a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46c132ceb82a884866928c661aeea17b1e52d95" translate="yes" xml:space="preserve">
          <source>Not all of these files are required for every project, and some might need more customization, but &lt;code&gt;crystal init&lt;/code&gt; creates a good default environment for developing Crystal applications and libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f248847a607be640097e4c8d6b08e960990b5ba5" translate="yes" xml:space="preserve">
          <source>NotImplementedError.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee777843ba0bff132cea365da745cfe4d1ef416" translate="yes" xml:space="preserve">
          <source>NotReady</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653eb0029613b199ca2a159c9a130bbee701b3b8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:foo&lt;/code&gt; was the result of the interpolation, because that's what was passed to the macro. You can use the method &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt;&lt;code&gt;ASTNode#id&lt;/code&gt;&lt;/a&gt; in these cases, where you just need an identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606cba09aff4b3bb673ef53e2c7fc74e8eb1e42f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; is same as &lt;code&gt;fact(n - 1)&lt;/code&gt; for integer &lt;code&gt;n &amp;gt; 0&lt;/code&gt;. However &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; returns float and can be an approximation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84b38ede8d752b1d7b15cf80dbc569330895719" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int)-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt;. Trying to use waitpid with a zero or negative value won't work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6ac41d4df78140a3304ac7c647aae80ec18a80" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;@type&lt;/code&gt; is always the &lt;em&gt;instance&lt;/em&gt; type, even when the macro is invoked in a class method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14394ebd2eaf48799e89fa7b7a5d8f8156c3dce4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;dns_timeout&lt;/code&gt; is currently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4b94dde6ed397c6878130ccc9375a057d977a4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;private&lt;/code&gt; methods are visible by subclasses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5e40063f571fc5c6540ff9c650e1ea4465bacd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;self&lt;/code&gt; always represents a match against an instance type, even in class methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2f5012468a6f7ef49c3a8d9d1e04ef79e77091" translate="yes" xml:space="preserve">
          <source>Note that a pointer is &lt;em&gt;falsey&lt;/em&gt; if it's null (if its address is zero).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46faa9261cd50bbe1641e5341e154a76b5b5bc8" translate="yes" xml:space="preserve">
          <source>Note that because expressions are assigned to temporary variables it is possible to exchange variables&amp;rsquo; contents in a single line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0eb7019cc75c5c1e54abb540ec7b2c88a66a91" translate="yes" xml:space="preserve">
          <source>Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7187006972af784a25767c86fe52a1c96342c37a" translate="yes" xml:space="preserve">
          <source>Note that due to current language limitations this is only useful when no captured blocks are involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecc691d46d6fa954d2fd488c1ea977c36bc4791" translate="yes" xml:space="preserve">
          <source>Note that if Array invoked &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; on each of the elements above, the output would have been this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6b172d1e9bf668d6f8df441d8a8aac818e1a19" translate="yes" xml:space="preserve">
          <source>Note that if Array invoked &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; on each of the elements above, the output would have been this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab48cc399af6948ea12e5a6cdb7a33806bdc31a3" translate="yes" xml:space="preserve">
          <source>Note that if a variable is declared inside one of the branches but not in the other one, at the end of the &lt;code&gt;if&lt;/code&gt; it will also contain the &lt;code&gt;Nil&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3294457d3a6398f9b6bc022c5c36ba9fe5fd1a0c" translate="yes" xml:space="preserve">
          <source>Note that if the return type is not specified, nothing gets returned from the proc call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f0e17c4ecd6fb1b7b7dd1d9f998414e9f8a970" translate="yes" xml:space="preserve">
          <source>Note that if we had defined &lt;code&gt;add&lt;/code&gt; without type restrictions, we would also have gotten a compile time error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7d147b2c1d52dd0284a8a1946be3c558df9a02" translate="yes" xml:space="preserve">
          <source>Note that in the above example &lt;code&gt;T&lt;/code&gt; becomes &lt;code&gt;Int32&lt;/code&gt; because &lt;code&gt;Foo.new(1)&lt;/code&gt; makes &lt;code&gt;U&lt;/code&gt; become &lt;code&gt;Int32&lt;/code&gt;, which in turn makes &lt;code&gt;T&lt;/code&gt; become &lt;code&gt;Int32&lt;/code&gt; via the inclusion of the generic module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d518d6d3401b61c62f0118ff3cb8c6c1585114b" translate="yes" xml:space="preserve">
          <source>Note that in the above example trailing and leading spaces, as well as newlines, end up in the resulting string. To avoid this a string can be split into multiple lines by joining multiple literals with a backslash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b432be3d0b443272f7d85d2dd0c9f17399678a" translate="yes" xml:space="preserve">
          <source>Note that in the above example trailing and leading spaces, as well as newlines, end up in the resulting string. To avoid this, you can split a string into multiple lines by joining multiple literals with a backslash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3815dc422d7ef8c5b918419a0b18a123e55ec57" translate="yes" xml:space="preserve">
          <source>Note that in the case of the method that yields, the compiler figured this out because there's a &lt;code&gt;yield&lt;/code&gt; expression. To make this more explicit, you can add a dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; argument at the end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105aded6d0d097b46f4f7af3eced0d28ca1325a4" translate="yes" xml:space="preserve">
          <source>Note that it's not clear how many elements the array has, or which are they, because &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; doesn't guarantee that the string representation is clearly delimited (in the case of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; the quotes are not shown).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d72c7bb216d632b4797fb2eb72c453c7b69a247" translate="yes" xml:space="preserve">
          <source>Note that it's not clear how many elements the array has, or which are they, because &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; doesn't guarantee that the string representation is clearly delimited (in the case of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; the quotes are not shown).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79f823d6f017c8d51a6e99118786bdf236f05d" translate="yes" xml:space="preserve">
          <source>Note that literal denoted by &lt;code&gt;%w&lt;/code&gt; does not apply interpolation nor escapes expect spaces. Since strings are separated by a single space character () which must be escaped to use it as a part of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36d49f07fe16c569483c35eb69dfd50848d9bc2" translate="yes" xml:space="preserve">
          <source>Note that methods used to traverse a JSON structure, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index:Int):JSON::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index:Int):JSON::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt;, always return a &lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; to allow further traversal. To convert them to &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, etc., use the &lt;code&gt;as_&lt;/code&gt; methods, such as &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#as_i:Int32-instance-method&quot;&gt;#as_i&lt;/a&gt;&lt;/code&gt;, which perform a type check against the raw underlying value. This means that invoking &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; when the underlying value is not a String will raise: the value won't automatically be converted (parsed) to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a016f34fe97bcbe201873e1f081e5fa7fe717f" translate="yes" xml:space="preserve">
          <source>Note that methods used to traverse a YAML structure, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index_or_key):YAML::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index_or_key):YAML::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;#each&lt;/code&gt;, always return a &lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; to allow further traversal. To convert them to &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, etc., use the &lt;code&gt;as_&lt;/code&gt; methods, such as &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#as_a:Array(Any)-instance-method&quot;&gt;#as_a&lt;/a&gt;&lt;/code&gt;, which perform a type check against the raw underlying value. This means that invoking &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; when the underlying value is not a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; will raise: the value won't automatically be converted (parsed) to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc773b1f636703780449c1670def448ffc69adf" translate="yes" xml:space="preserve">
          <source>Note that most search and filter methods traverse an Enumerable eagerly, producing an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; as the result. For a lazy alternative refer to the &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29749f02130eec66083dc571df2a91a8db209048" translate="yes" xml:space="preserve">
          <source>Note that returning &lt;code&gt;nil&lt;/code&gt; is only useful when defining a partial comparable relationship. One such example is float values: they are generally comparable, except for &lt;code&gt;NaN&lt;/code&gt;. If none of the values of a type are comparable between each other, &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; shouldn't be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f2e9b31442b05186a2fc7fb8d67c840735b504" translate="yes" xml:space="preserve">
          <source>Note that the above is really just an example, almost the same can be accomplished with &lt;code&gt;at_exit&lt;/code&gt;. But in some cases redefinition of C's main is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32e9458635ee737061354e847fe54176208cf86" translate="yes" xml:space="preserve">
          <source>Note that the first 2 sends are executed without switching to another fiber. However, in the third send the channel's buffer is full, so execution goes to the main fiber. Here the two values are received and the channel is depleted. At the third &lt;code&gt;receive&lt;/code&gt; the main fiber blocks and execution goes to the other fiber, which sends more values, finishes, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202f88babbfe4309e441744e59d1c104b3de83e8" translate="yes" xml:space="preserve">
          <source>Note that the last one can be smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32fdc25391273c0446d061c07fd494394f0d11f" translate="yes" xml:space="preserve">
          <source>Note that the name of the method argument is not important; this works as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83998c867b084d47190aee5897fd90188ffc8fc1" translate="yes" xml:space="preserve">
          <source>Note that the node is pasted as-is. If in the previous example we pass a symbol, the generated code becomes invalid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb7060854f0a08b431ae518f99110ccb8593fbd" translate="yes" xml:space="preserve">
          <source>Note that the null character &lt;code&gt;'\0'&lt;/code&gt; will be returned in &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; when the end is reached (as well as when the string is empty). Thus, &lt;code&gt;&lt;a href=&quot;reader#has_next?-instance-method&quot;&gt;#has_next?&lt;/a&gt;&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; only when &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; is equal to the string's bytesize, in which case &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; will always be &lt;code&gt;'\0'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6adad0f8f6d4c8198f537244fc2375d2efa3545" translate="yes" xml:space="preserve">
          <source>Note that there are no implicit conversions (except &lt;code&gt;to_unsafe&lt;/code&gt;, which is explained later) when invoking a C function: you must pass the exact type that is expected. For integers and floats you can use the various &lt;code&gt;to_...&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9679c70cbbbf3e086500a0853c1d2638d34aab5" translate="yes" xml:space="preserve">
          <source>Note that this only works for characters whose downcase equivalent yields a single codepoint. There are a few characters, like 'İ', than when downcased result in multiple characters (in this case: 'I' and the dot mark).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20edd4b57b037fbfbd3c4e8a8b1786a2bd7683a" translate="yes" xml:space="preserve">
          <source>Note that this only works for characters whose upcase equivalent yields a single codepoint. There are a few characters, like 'ﬄ', than when upcased result in multiple characters (in this case: 'F', 'F', 'L').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5325a8a4a3588f52f894234ace347876e3838f" translate="yes" xml:space="preserve">
          <source>Note that trying to ignore &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; will actually set the default crystal handler that monitors and reaps child processes. This prevents zombie processes and is required by &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c343593ebb904e7e3941adfd4e4eb418b4d1e1d" translate="yes" xml:space="preserve">
          <source>Note that trying to reset &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; will actually set the default crystal handler that monitors and reaps child processes. This prevents zombie processes and is required by &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a47b6165250421852f2d206b0a535e056b95f0" translate="yes" xml:space="preserve">
          <source>Note that type restrictions do not apply to the variables inside the actual methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddad369c61a967d60eab102822815b8de270004" translate="yes" xml:space="preserve">
          <source>Note that we create a &lt;code&gt;Person&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt; but we defined the initialization in an &lt;code&gt;initialize&lt;/code&gt; method, not in a &lt;code&gt;new&lt;/code&gt; method. Why is this so?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9b417367499f6e4fe4eb1f291c1d5870403b25" translate="yes" xml:space="preserve">
          <source>Note that we save the box in &lt;code&gt;@@box&lt;/code&gt;. The reason is that if we don't do it, and our code doesn't reference it anymore, the GC will collect it. The C library will of course store the callback, but Crystal's GC has no way of knowing that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d283ee35df39561eae27662474ff0f693663439" translate="yes" xml:space="preserve">
          <source>Note that we save the boxed callback in &lt;code&gt;@@box&lt;/code&gt;. The reason is that if we don't do it, and our code doesn't reference it anymore, the GC will collect it. The C library will of course store the callback, but Crystal's GC has no way of knowing that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aaf45bfa98ad69869830709cccb2c1c0f8f902" translate="yes" xml:space="preserve">
          <source>Note that when the program executes a &lt;code&gt;receive&lt;/code&gt;, that fiber blocks and execution continues with the other fiber. When &lt;code&gt;send&lt;/code&gt; is executed, execution continues with the fiber that was waiting on that channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08f2cf170daa0f783923075996b4317497c50a9" translate="yes" xml:space="preserve">
          <source>Note that you can use any type as an &lt;code&gt;is_a?&lt;/code&gt; test, like abstract classes and modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0f7deb50ae551bc7fd424200c5053fa3979933" translate="yes" xml:space="preserve">
          <source>Note, however, that fibers don't get executed right away. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e021e3232d312c94b658d8347111ffe63c7dff7e" translate="yes" xml:space="preserve">
          <source>Note, however, that functions passed to C can't form closures. If the compiler detects at compile-time that a closure is being passed, an error will be issued:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b70dacbe558c1246db5330f6d672db00269ffc4" translate="yes" xml:space="preserve">
          <source>Note: The actual binary is built in to &lt;code&gt;.build/crystal&lt;/code&gt;, but the &lt;code&gt;bin/crystal&lt;/code&gt; wrapper script is what you should use to run crystal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705f8982949d38e4a11c13a286d327b70b4bb076" translate="yes" xml:space="preserve">
          <source>Note: When using the pg driver, use &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. instead of &lt;code&gt;?&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5594da49c33afb741c4981e27579c2333df588b2" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;case&lt;/code&gt; is not within the macro. The code generated by the macro consists solely of two &lt;code&gt;when&lt;/code&gt; expressions which, by themselves, is not valid Crystal code. We must include &lt;code&gt;case&lt;/code&gt; within the macro in order to make it valid by using &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdda6cfdec3a53b7bf2752325a7b6e92cf980953" translate="yes" xml:space="preserve">
          <source>Notice that the chained calls of &lt;code&gt;plus&lt;/code&gt; return the expected result, but only the first call to it modifies the variable &lt;code&gt;counter&lt;/code&gt;, as the second call operates on the &lt;em&gt;copy&lt;/em&gt; of the struct passed to it from the first call, and this copy is discarded after the expression is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519130ac6dd4e0f9061baf1d619b8759ef3e2ff7" translate="yes" xml:space="preserve">
          <source>Notice the variables in the inner macro are not available within the &lt;code&gt;verbatim&lt;/code&gt; block. The contents of the block are transferred &quot;as is&quot;, essentially as a string, until re-examined by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bced83c066f46e331b81e762f9dc26e34928523" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;MyInt&lt;/code&gt; are interchangeable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b90649e919d57402b52f38d180bd0b20a888063" translate="yes" xml:space="preserve">
          <source>Now it works because we are creating a &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc&lt;/a&gt; and we invoke it passing &lt;code&gt;i&lt;/code&gt;, so the value gets copied and now the spawned fiber receives a copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98fce16d538680d4aa6be6447c6fc70ad02382c" translate="yes" xml:space="preserve">
          <source>Now the code compiles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c495f62bacebbeced779570a6792af558130531d" translate="yes" xml:space="preserve">
          <source>Now we can create people like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6492625a23d53ed86a073d859d8fe2dd6c8d9801" translate="yes" xml:space="preserve">
          <source>Number []</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2636a975d296386736c0a53e3801027063f7f303" translate="yes" xml:space="preserve">
          <source>Number of 100ms runs during the calculation stage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be44a604fc66f0b2a7c7b936e26957f9c8f669d5" translate="yes" xml:space="preserve">
          <source>Number of bytes allocated per operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9481b83c519a66c32c5b139645e62f2ddeab0b3e" translate="yes" xml:space="preserve">
          <source>Number of cycles needed to run for approx 100ms Calculated during the warmup stage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a244565d0ece85dcc9b54734202dbc09e3dde3" translate="yes" xml:space="preserve">
          <source>Number slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043de8bc26f4ee4eb5e981e3060b5eee2e5e3d07" translate="yes" xml:space="preserve">
          <source>Number#*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503da7a5f31eb0d2d1552e84d3f67dda7d29e882" translate="yes" xml:space="preserve">
          <source>Number#+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa029036de76d28817d24abf2fad6846214e1f3" translate="yes" xml:space="preserve">
          <source>Number#-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091f0ad2dd0ac454e93c6465c1cf8b48e1a9ed36" translate="yes" xml:space="preserve">
          <source>Number#/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d91f6e2b43456caa4e7d8afd37e55839f7435df" translate="yes" xml:space="preserve">
          <source>Number#//</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d89fd216986768105a3cf1e44df3ec229e0ed1d" translate="yes" xml:space="preserve">
          <source>Number#==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9919b826bcc953029e7c2ef5653cfc39f11f455" translate="yes" xml:space="preserve">
          <source>Number#abs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1701f7c151bf40af1a848751bb30228328f297f2" translate="yes" xml:space="preserve">
          <source>Number#abs2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4a1bd0e384e0f4ec24e0886c45b0052d0a023b" translate="yes" xml:space="preserve">
          <source>Number#cis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1057199f0276afa1af81e4b0680cde6318883d03" translate="yes" xml:space="preserve">
          <source>Number#i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f8d8bad640d14a67d8415b0d8ce26dd26fadb3" translate="yes" xml:space="preserve">
          <source>Number#sign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56978b13282e68f15f515097c6f6c4100b3c9816" translate="yes" xml:space="preserve">
          <source>Number#step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac421f373205f15acb0067bb29f82a38cbd5274" translate="yes" xml:space="preserve">
          <source>Number#to_c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc2c07fb331448e68f0690b0e1566d1d8648b59" translate="yes" xml:space="preserve">
          <source>Number.zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fc9c0627d353f718d236e88c3be96f2dc3c2ac" translate="yes" xml:space="preserve">
          <source>Numerical argument out of domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec55bb4c0abfdf374833bccaf8cca81f159223e2" translate="yes" xml:space="preserve">
          <source>OAuth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a001d9df1300ecf9a29aad8d9b0f309a3cc97221" translate="yes" xml:space="preserve">
          <source>OAuth2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c768ee28c41df60d2e22bf046fcb5280b905f0" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24346883c7b993797bbce8626ec7c3b66a627aa9" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken::Bearer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bc9d149768dd7f70283338ef9d8be2be475576" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken::Mac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458daefa039c30ece7d8a2fd8d50394d3d01829e" translate="yes" xml:space="preserve">
          <source>OAuth2::Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7216a7460ed5206f6ad327a53fc0bac6d2d2a6" translate="yes" xml:space="preserve">
          <source>OAuth2::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c638916279cc39fc2f2206a16b465cce34cbb95" translate="yes" xml:space="preserve">
          <source>OAuth2::Session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fad834f0a5af8312249208b8f8ac356f711787" translate="yes" xml:space="preserve">
          <source>OAuth::AccessToken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42df58d98bee56779115f35f9fed01ff008a3122" translate="yes" xml:space="preserve">
          <source>OAuth::Consumer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c2f74a1b2a904f9381739e52008f84204d8e78" translate="yes" xml:space="preserve">
          <source>OAuth::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19427514732b92b58ea66904254e0c98ad4ff4c0" translate="yes" xml:space="preserve">
          <source>OAuth::Error.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4d04269c633aae6c0d3c0ae722ae6333c9cf38" translate="yes" xml:space="preserve">
          <source>OAuth::RequestToken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ce66c3b2f62920ab55a0e848d4ded3f5f982b7" translate="yes" xml:space="preserve">
          <source>OPTIMIZE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85120bce76a23e361fb938c44bc73facc906afcd" translate="yes" xml:space="preserve">
          <source>ORMs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2362f56467bd97d990f9074700b6cc2cd78cbf6a" translate="yes" xml:space="preserve">
          <source>OS-provided MIME database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7145cd2e6a6f69510145255e6426e2ea357ed17" translate="yes" xml:space="preserve">
          <source>OWASP Wiki</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6416c549089d793b355231b4a195dcb855eb09" translate="yes" xml:space="preserve">
          <source>Object Serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1284878f8bf01bfc8401e081705dc57ce6114d4b" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;class#==(other:Class):Bool-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c5f22e7b8abf9733dcde6e5d408d47868255fc" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61061e4f5862bcfdbbc32ae58d5f11a90fbd967" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;proc#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2fc4dff1ddd2856e5f0f888b403d2af7439ceb" translate="yes" xml:space="preserve">
          <source>Object#!=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2a8bc0318f32b28ed3b40604520148e0bb9647" translate="yes" xml:space="preserve">
          <source>Object#!~</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd71fd3b0efd874a002ef2028c1570bbcc5f03fb" translate="yes" xml:space="preserve">
          <source>Object#==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3b211638137695592739e8e404f666e5eb6419" translate="yes" xml:space="preserve">
          <source>Object#===</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10e6553e69983754bd8a406d3404923e8364e2c" translate="yes" xml:space="preserve">
          <source>Object#=~</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815b677fa448093d21a40e0c1831fd59446ac394" translate="yes" xml:space="preserve">
          <source>Object#back</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12371531b2e743d127f5036873e6a458c0a59881" translate="yes" xml:space="preserve">
          <source>Object#black</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d583e724eaae4a6f0cfb9072547360769516f4" translate="yes" xml:space="preserve">
          <source>Object#blink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa0a265133fe978711a4b6792c8ad087981174c" translate="yes" xml:space="preserve">
          <source>Object#blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3696ba5d67d62dbca4ef0ab80df13a196c7221ff" translate="yes" xml:space="preserve">
          <source>Object#bold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738e6333f5eb79daf19c71eb8f27d4b544fea448" translate="yes" xml:space="preserve">
          <source>Object#bright</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8393b08492037db43339ed83b2bc7e1eff2b480" translate="yes" xml:space="preserve">
          <source>Object#cyan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b855b1cd88b148c6f3b4c7c75d5391a22811e1cd" translate="yes" xml:space="preserve">
          <source>Object#dark_gray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99434b723ce585081cf56bd99035acd65277a848" translate="yes" xml:space="preserve">
          <source>Object#default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c302b808e470dac1910a9b1391382af8b4ea408" translate="yes" xml:space="preserve">
          <source>Object#dim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3d5115b04f32fe70b076388269578679d5e873" translate="yes" xml:space="preserve">
          <source>Object#dup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8ede2d121a1723b18ee301a2a3a831e9ff4e38" translate="yes" xml:space="preserve">
          <source>Object#fore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e9cdef3784b5abb56f55e17af5112816092b2f" translate="yes" xml:space="preserve">
          <source>Object#green</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be3d354e7bf75ee1c3961451ef6c8a778898fe2" translate="yes" xml:space="preserve">
          <source>Object#hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa5378ae76ace37c4345abff5bd343d7d394c56" translate="yes" xml:space="preserve">
          <source>Object#hidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6836f7bdb2cf6e2771db5195ffcb47332e18ef40" translate="yes" xml:space="preserve">
          <source>Object#inspect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d268eef0372df6ada9fd764ce090cf95a09c9f14" translate="yes" xml:space="preserve">
          <source>Object#light_blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eac9e7727704da4d9e4a8c49d122d31d742e6f" translate="yes" xml:space="preserve">
          <source>Object#light_cyan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0e1ac82499ccfacf0052d81b5f9373228f2748" translate="yes" xml:space="preserve">
          <source>Object#light_gray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912b65837eec0cfd0f7065472026e4ae76641978" translate="yes" xml:space="preserve">
          <source>Object#light_green</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90aeddf804641684935f43b71b386639198e0627" translate="yes" xml:space="preserve">
          <source>Object#light_magenta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a725099ea3e1fdc043021e7d688c799174c8ea" translate="yes" xml:space="preserve">
          <source>Object#light_red</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7568274f1a8a1e6d83e99fb1564c134d8106ebe" translate="yes" xml:space="preserve">
          <source>Object#light_yellow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dbdf3d433b07f16ee996b51230890fb7c579fd" translate="yes" xml:space="preserve">
          <source>Object#magenta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e32f5a9958efa767d67eb3d44e07c4b5c14dd9e" translate="yes" xml:space="preserve">
          <source>Object#mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05da3aa73aabe3cae3903ff334563c47eb38582" translate="yes" xml:space="preserve">
          <source>Object#on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa10aee7c7093dc9b3839c1a8a7f03d550e22379" translate="yes" xml:space="preserve">
          <source>Object#on_black</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114412a531c138591ea41e8070331bc386740851" translate="yes" xml:space="preserve">
          <source>Object#on_blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43f78271c36daede734d3f5219b3fbdc710648b" translate="yes" xml:space="preserve">
          <source>Object#on_cyan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691d812aa52f1f62ee0587713634a5a0e31a550c" translate="yes" xml:space="preserve">
          <source>Object#on_dark_gray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fd440c90b07b181b2e5e5e9240b545cefe47f1" translate="yes" xml:space="preserve">
          <source>Object#on_default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3739f2b3237754dbe0117031dac84cfabe9d990" translate="yes" xml:space="preserve">
          <source>Object#on_green</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62028d8719973ae1f9e3608204c3b83e067146f" translate="yes" xml:space="preserve">
          <source>Object#on_light_blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ba49aa8becdd81c206b5c6c971e9ad9768b5b1" translate="yes" xml:space="preserve">
          <source>Object#on_light_cyan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3973c3a89d28c6d38bdd74ab33eda6724921aa2" translate="yes" xml:space="preserve">
          <source>Object#on_light_gray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54178855c30c5f0b092fc18ae57452a6fa9abb0" translate="yes" xml:space="preserve">
          <source>Object#on_light_green</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2cfe2ea16a18610f2feddc71b8136aca7a4c94" translate="yes" xml:space="preserve">
          <source>Object#on_light_magenta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aedad530e4e579337b779799c6c19d7cf07625e" translate="yes" xml:space="preserve">
          <source>Object#on_light_red</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4024434df078b4ef187704e0c6b531529013f3eb" translate="yes" xml:space="preserve">
          <source>Object#on_light_yellow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273231c5496f16d085230481c96ecb3ee2ef107a" translate="yes" xml:space="preserve">
          <source>Object#on_magenta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643e8b41aaa38a4c51816f6f40adf5e68d1e7a99" translate="yes" xml:space="preserve">
          <source>Object#on_red</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35779d9d57f0f0920456fd988acaf118bb70d9ee" translate="yes" xml:space="preserve">
          <source>Object#on_white</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339a8df54a7f1c471a64081a3483e0bbe4f9b63c" translate="yes" xml:space="preserve">
          <source>Object#on_yellow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cbd34591a2c1d706586c1561550c6d6fc2a5ff" translate="yes" xml:space="preserve">
          <source>Object#red</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08328dc2a98ea039f002184f326f8b6a7a389927" translate="yes" xml:space="preserve">
          <source>Object#reverse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d919ca07916868899f77564daff1c66937ac1639" translate="yes" xml:space="preserve">
          <source>Object#surround</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2207757d2c018269f15ac6851b7baadafbdf9e48" translate="yes" xml:space="preserve">
          <source>Object#tap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83481709340491ab07cd3ea47acf01adc87cbdff" translate="yes" xml:space="preserve">
          <source>Object#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6446e4b9b64d2e9af02ef4ab8c3849ec03b92c" translate="yes" xml:space="preserve">
          <source>Object#toggle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a690f333bed9c3963c99291d2128cd1167355f56" translate="yes" xml:space="preserve">
          <source>Object#underline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495bbd74a9874872dd7923dc1625525cb78d6deb" translate="yes" xml:space="preserve">
          <source>Object#white</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbb2a04d71606bdd2385b4da0c58c96f0da7200" translate="yes" xml:space="preserve">
          <source>Object#yellow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e12e5e97bedfe766ad6da61d503406db94c052" translate="yes" xml:space="preserve">
          <source>Object.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ea48c0de1b182cde7e4f3b01d99fd977f5e056" translate="yes" xml:space="preserve">
          <source>ObjectExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f517225e4aa630a3698e0adb15307d109a6dba" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#colorize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaf4c82c3dee8bd13e7afa68f65287ba1307b15" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad513c02223d0b3b8ce2735f28bd38a20c5da821" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#should_not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c5a06936a38dfb7fadd22e92f8fd1eec9a0bba" translate="yes" xml:space="preserve">
          <source>Objects of class &lt;code&gt;&lt;a href=&quot;dir&quot;&gt;Dir&lt;/a&gt;&lt;/code&gt; are directory streams representing directories in the underlying file system. They provide a variety of ways to list directories and their contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e4567313f1db64db2f5fa5bd31c7415bf98b31" translate="yes" xml:space="preserve">
          <source>Obtaining access tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af453669fedbc26e57b0af23661518a1dc40120" translate="yes" xml:space="preserve">
          <source>Obtains a request token, also known as &quot;temporary credentials&quot;, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.1&quot;&gt;RFC 5849, Section 2.1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3538fe55b76ef32c585990ea848f331638b40337" translate="yes" xml:space="preserve">
          <source>Octal number conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac09a049cd870c7a9142a2b16b0e51280aef13f" translate="yes" xml:space="preserve">
          <source>Octal numbers start with &lt;code&gt;0o&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f51ee53c0e463dac0a244e33f4c671f46f1ffb" translate="yes" xml:space="preserve">
          <source>Octal numbers start with a &lt;code&gt;0o&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f4983b08e439191dc9ccfe532b5d02415f4180" translate="yes" xml:space="preserve">
          <source>Of course the above program can be written without &lt;code&gt;spawn&lt;/code&gt; at all, just with a loop. &lt;code&gt;sleep&lt;/code&gt; is more useful when spawning more than one fiber.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08554eb78995a127ae891fcdb418b7a733af3e9" translate="yes" xml:space="preserve">
          <source>Of course, reassigning a variable inside the &lt;code&gt;then&lt;/code&gt; branch makes that variable have a new type based on the expression assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c69ed231fb7bf12ecdbb84ece8ce72f0abdd376" translate="yes" xml:space="preserve">
          <source>Oh, and we don't want to write C code to make the code run faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3846ca003c15a5f1a3ea8e78c25c81e9c85dcdb9" translate="yes" xml:space="preserve">
          <source>On Alpine Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f3a2244d460ae7e73229adb39482643dafdc7f" translate="yes" xml:space="preserve">
          <source>On Arch Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347e95569b23599af2a6e8ec054e97396aa46765" translate="yes" xml:space="preserve">
          <source>On Bash on Ubuntu on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e251c2b48b87ae2bbd586bb6db76a24a8bda8e" translate="yes" xml:space="preserve">
          <source>On Debian and Ubuntu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683b9ec518c1bacfd6b825a0ecc3f1cb237cf0d0" translate="yes" xml:space="preserve">
          <source>On FreeBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69825a52c5fa47fd0895c6e2df043bc173a66456" translate="yes" xml:space="preserve">
          <source>On Gentoo Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76281cbfcb0d0c7edffdde40919bc77452ad5359" translate="yes" xml:space="preserve">
          <source>On Linux using Linuxbrew</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932a1eaa0755a6f41cd927e8ef1e7c4b32cbe3d9" translate="yes" xml:space="preserve">
          <source>On Linux using Snap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac6f4f51ac9ee222e7c3df0f1a43363b1076d1a" translate="yes" xml:space="preserve">
          <source>On OpenSUSE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a24ee8d9c4b67b41479963b14ee6c87bb879596" translate="yes" xml:space="preserve">
          <source>On OpenSUSE Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f278e377a6d94e4211c0da1de0dc0677db0154f5" translate="yes" xml:space="preserve">
          <source>On OpenSUSE, Crystal can be installed from the official rpm package using Zypper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3086bd1f602303f1997dc2612ec0f85c2d634e39" translate="yes" xml:space="preserve">
          <source>On RedHat and CentOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c1d95eb3b0ab706f0d6b27d5589e558154d6d6" translate="yes" xml:space="preserve">
          <source>On a 64-bit machine it lets us spawn millions and millions of fibers. In a 32-bit machine we can only spawn 512 fibers, which is not a lot. But because 32-bit machines are starting to become obsolete, we'll bet on the future and focus more on 64-bit machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a77b35f1a1d07d9a162b9cd39dd59b8595d0b05" translate="yes" xml:space="preserve">
          <source>On a POSIX system, the following files are tried to be read in sequential order, stopping at the first existing file. These values override those from &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9fe6389579b5c95b14793b61952727c2295441" translate="yes" xml:space="preserve">
          <source>On macOS using Homebrew</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71850c74e889fedbfbd17964d5cc6971040bfcf9" translate="yes" xml:space="preserve">
          <source>On unix, this compares device and inode fields, and will compare equal for hard linked files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bde715d72a38d70075a8f69f598f9819061e517" translate="yes" xml:space="preserve">
          <source>On windows, only the &lt;code&gt;&lt;a href=&quot;permissions#OwnerWrite&quot;&gt;OwnerWrite&lt;/a&gt;&lt;/code&gt; bit is effective. All file permissions will either be &lt;code&gt;0o444&lt;/code&gt; for read-only files or &lt;code&gt;0o666&lt;/code&gt; for read-write files. Directories are always mode &lt;code&gt;0o555&lt;/code&gt; for read-only or &lt;code&gt;0o777&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d654586025b04ee03652c1686c4747992c57ca" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;../installation&quot;&gt;installed&lt;/a&gt;, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d57cf3b43133bc6526d879d0556d5e78254b2c" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://crystal-lang.org/installation&quot;&gt;installed&lt;/a&gt;, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c77e2ea9d57a683105a1606ab74505e5151c57" translate="yes" xml:space="preserve">
          <source>Once a file is required, the compiler remembers its absolute path and later &lt;code&gt;require&lt;/code&gt;s of that same file will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7abff25d36cd948d938a45849882233ebe3278b" translate="yes" xml:space="preserve">
          <source>Once macros generate code, they are parsed with a regular Crystal parser where local variables in the context of the macro invocations are assumed to be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1993dc71a2508a1462d76f72a0d86ba2f67b1c2" translate="yes" xml:space="preserve">
          <source>Once positioned in a row, values can be obtained with the several &lt;code&gt;&lt;a href=&quot;csv#%5B%5D(header:String):String-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; methods, which can accept a header name, column position, or header name pattern as a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cb95abf1e0a1caefcb273fcf6c0f91e64416e8" translate="yes" xml:space="preserve">
          <source>Once the repository is configured you're ready to install Crystal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd842158fe230c8f49fd1e472caaffbd5a141f3e" translate="yes" xml:space="preserve">
          <source>Once the repository is configured, Crystal can be installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85c03ff148aa498c4d512549a367691a3cc842e" translate="yes" xml:space="preserve">
          <source>Once you bind it, the function is available inside the &lt;code&gt;C&lt;/code&gt; type as if it was a class method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a88c3869284ffd627f3551ba851efdd2ccaa951" translate="yes" xml:space="preserve">
          <source>Once you install the compiler using one of the following methods, make sure to read &lt;a href=&quot;../using_the_compiler/index&quot;&gt;Using the compiler&lt;/a&gt; to learn how to efficiently use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a8bdb058ffa1a405649150f5dc2e0ef4885da6" translate="yes" xml:space="preserve">
          <source>Once you install the compiler using one of the following methods, make sure to read &lt;a href=&quot;https://crystal-lang.org/using_the_compiler/&quot;&gt;Using the compiler&lt;/a&gt; to learn how to efficiently use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443f3bf1a871809d903652740589c757f6269fe2" translate="yes" xml:space="preserve">
          <source>Once you're up and running, and the build is passing, the build badge will update in your README.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd54f6f2e3f2b13597a00d0aaf6d2b5746018d40" translate="yes" xml:space="preserve">
          <source>Once your documentation is ready and available, add this documentation badge below the description in your README.md so users know that it exists. (Be sure to replace &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfde5b2b26cf2f3741b4c99bebb53f1b2141add6" translate="yes" xml:space="preserve">
          <source>One can also create strings with specific byte value in them by using octal and hexadecimal escape sequences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f24a94ef6219d1fd7571b6118b65e59e01d85e" translate="yes" xml:space="preserve">
          <source>One can assign any meaning to the operators, but the convention is to follow the above ones to avoid cryptic code, or code that behaves in an unexpected way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57b2379eb4fad27c1b88660f5a8d29c49972eed" translate="yes" xml:space="preserve">
          <source>One curly brace can contain multiple unicode characters each separated by a whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4211d9850c8af3d4426acdf674731ad3f9d754b" translate="yes" xml:space="preserve">
          <source>One of the best optimizations you can do in a program is avoiding extra/useless memory allocation. A memory allocation happens when you create an instance of a &lt;strong&gt;class&lt;/strong&gt;, which ends up allocating heap memory. Creating an instance of a &lt;strong&gt;struct&lt;/strong&gt; uses stack memory and doesn't incur a performance penalty. If you don't know the difference between stack and heap memory, be sure to &lt;a href=&quot;https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap&quot;&gt;read this&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b7502cd677f4a309b14d08e7eb7b580cc9c86a" translate="yes" xml:space="preserve">
          <source>One place inheritance can get a little tricky is with arrays. We have to be careful when declaring an array of objects where inheritance is used. For example, consider the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81f80fee140429bd28804d8f52b636cdcffed34" translate="yes" xml:space="preserve">
          <source>One place this might trip you up is when automatic casting comes into play. For example, the following won't work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f280a161ef738766dda3d8b228e872a24a18df3" translate="yes" xml:space="preserve">
          <source>One way to solve it is to do a &lt;code&gt;sleep&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63942ba63f83588f8ac5019911a1fb270e41f0c5" translate="yes" xml:space="preserve">
          <source>One-shot usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93824c8b8bc3d3dd9f36c17922cc9f035f9405e" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;Exception&lt;/code&gt; instances or subclasses can be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038563582bca4194737ab19fac07bdd784e40f89" translate="yes" xml:space="preserve">
          <source>Only available on UNIX and UNIX-like operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e76a4d589aa79313e68736c99d020baecc1be77" translate="yes" xml:space="preserve">
          <source>Only collections of numbers (objects that can be added via an &lt;code&gt;+&lt;/code&gt; method) are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f2d99db84620f99e2263f089ec39cc9af1b1d" translate="yes" xml:space="preserve">
          <source>Only collections of numbers (objects that can be multiplied via a &lt;code&gt;*&lt;/code&gt; method) are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b85a2f5fded7aeafa3425b9eda52e6f13a9ea4" translate="yes" xml:space="preserve">
          <source>Only integer types are allowed as the underlying type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c2a7fdc519cedaff3c0680d65bc1eb94133d18" translate="yes" xml:space="preserve">
          <source>Only primitive integer types, reference types or nilable reference types can be used with an Atomic type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1581aa9392ab7e5c23436135ae4ef0d2266b19" translate="yes" xml:space="preserve">
          <source>Only transform ASCII characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d890514bcd8588b08f0f7bf7e26d060997b86f5b" translate="yes" xml:space="preserve">
          <source>Only works for primitive integers and floats (&lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt;, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7051b80d22d655edbef7d6f97802bad6b9a981a2" translate="yes" xml:space="preserve">
          <source>Open database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7003a34fd1abbae7d2b35e80a0769db2b14709" translate="yes" xml:space="preserve">
          <source>OpenSSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab0eab8e9a3414ae8cc24df9c72655ea9e031a7" translate="yes" xml:space="preserve">
          <source>OpenSSL Integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffa3f50427585d801248b6026c59192f0be1ce6" translate="yes" xml:space="preserve">
          <source>OpenSSL::Cipher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71da789dfdc7daa2e1675b661f8ca076a9ac8ca1" translate="yes" xml:space="preserve">
          <source>OpenSSL::Cipher::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb4fc3c82441102040f411cdcb0b981436e64fe" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2421f62739bf9762808971ba462377d3e76d431" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb274633e50faaa8400d6736ed1f72ca8fc0a97" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest::UnsupportedError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74b8a050f17b3e603f6ad1925e752f42f067d6a" translate="yes" xml:space="preserve">
          <source>OpenSSL::DigestBase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceb01a2bdbf24ca0d833a18d598753601012942" translate="yes" xml:space="preserve">
          <source>OpenSSL::DigestIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50762946efe359f8272a6ed5931a8e504734d29c" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f3924f8d108e64cbd7b5e07610a5b2f516382d" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error#code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccd0da6539bfb2081cb7f141d4a76baff4a3f4b" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error#code?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4da5c9b02011196ad8f1f28a397406b7616b94d" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373ec72cffa1cd896dec0e5f2bf736f258deb21e" translate="yes" xml:space="preserve">
          <source>OpenSSL::HMAC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df94a3a5229cdd070a2e0f2c047dd31e6ddf47ac" translate="yes" xml:space="preserve">
          <source>OpenSSL::MD5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86875d14d1e01f3c7f1c9603d0f35b14ae6f8dc0" translate="yes" xml:space="preserve">
          <source>OpenSSL::PKCS5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896ea59ba0d9c12c973db4b96634d337d414d940" translate="yes" xml:space="preserve">
          <source>OpenSSL::SHA1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb811faeef41baf244804a56d35e133c533ab860" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3665e85695060a943a8abc9a2bb9643aba8839" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232b98343697a329b86820f5a6fb24de61815e48" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context::Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3f97c6c30ead8cd460aac4a17452af8a138c0e" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context::Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed15213abf2b4ee65c4ebfce0336f6425bd9762d" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2197e923a2ee6f1b90bc655b0468c761aa73e507" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error#error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd19fc9dc26d826f8eca10aa6b80c162de4ee4c" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8363239b7df2c0cbe15d2e48efe3d7c741af8185" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a764af7f9ee1c1215570b8ad95c647bcf5fbb60a" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49532e2f4f8668e7802d24fa0c878c4b9a61e057" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket::Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a72dc30f3ed8ca4fd164f53ab80bf86d0e7078" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket::Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1546e1068630b5411f9ffaaabc12cdf957d7b30c" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;filename&lt;/em&gt;, yields it to the given block, and closes it at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a0fda414a2d21471def5f8df15b91f45d81c51" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52512345b08986612149b7ab7064b1a22de05c54" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;io&lt;/em&gt;, yields it to the given block, and closes it at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ae274b34e2231176d14a5f25f2b103c92361d5" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bbc54ab6cf8dabf50b3fb6278c1288ad3acceb" translate="yes" xml:space="preserve">
          <source>Opens a TCP socket to a remote TCP server, yields it to the block, then eventually closes the socket when the block returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d905cf0353d48eaf1721274999cd6d041bdd94e4" translate="yes" xml:space="preserve">
          <source>Opens a directory and yields it, closing it at the end of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56707ccf177bafa6b5176c257886e0d16f0f80d8" translate="yes" xml:space="preserve">
          <source>Opens a directory and yields it, closing it at the end of the block. Returns the value of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e997a182ae5b0adc63476bc3526430253960f786" translate="yes" xml:space="preserve">
          <source>Opens a new websocket to the target host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6277f42289401fe712d708b0baaa449b222f4e5" translate="yes" xml:space="preserve">
          <source>Opens a new websocket to the target host. This will also handle the handshake and will raise an exception if the handshake did not complete successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a1a71521e9a393f87958cb8254d4e7576c51d7" translate="yes" xml:space="preserve">
          <source>Opens a new websocket using the information provided by the URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8311e03dd6c32aad5d54e7ddc06ce09edb4ddc6" translate="yes" xml:space="preserve">
          <source>Opens a new websocket using the information provided by the URI. This will also handle the handshake and will raise an exception if the handshake did not complete successfully. This method will also raise an exception if the URI is missing the host and/or the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcf80ed39d3208350e9412b387a2b789f75c72f" translate="yes" xml:space="preserve">
          <source>Opens an UNIX socket to a filesystem pathname, yields it to the block, then eventually closes the socket when the block returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad0607a61d573b1a48f862174503d87ce54326a" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f215aefd6f8c039151b5a1ed0ec64dc908a10438" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;. If a file is being created, its initial permissions may be set using the &lt;em&gt;perm&lt;/em&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f6ef1ba388097b3b4316cd983d2191b697ca00" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;. If a file is being created, its initial permissions may be set using the &lt;em&gt;perm&lt;/em&gt; parameter. Then given block will be passed the opened file as an argument, the file will be automatically closed when the block returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadca8091d4e123a8758e7e5ae05f2c10df1424d" translate="yes" xml:space="preserve">
          <source>OperandBundleDef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879e5fd682673ad57da320a833f4a329427704a9" translate="yes" xml:space="preserve">
          <source>OperandBundleDef#to_unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75c9b2ebb39228a3902a5c9c77461f23eee7538" translate="yes" xml:space="preserve">
          <source>OperandBundleDef.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81af3b19a22306c68182c75bcd2feb4c8391e3d9" translate="yes" xml:space="preserve">
          <source>OperandBundleDef.null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc51a5c314382c855158eda38ff5409a7e69535" translate="yes" xml:space="preserve">
          <source>Operation already in progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dad54d8bce08503c34abc283c6fe74bd2e9ffc" translate="yes" xml:space="preserve">
          <source>Operation canceled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ef925607b43bca64c3829868d9989b76540d3a" translate="yes" xml:space="preserve">
          <source>Operation not permitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20622c82be5480df90f7091e7835cb1fe2a3c88" translate="yes" xml:space="preserve">
          <source>Operation not supported by device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49e2a256113761881fb1a1fa41d066e27d70d15" translate="yes" xml:space="preserve">
          <source>Operation not supported on socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdc938d87d0b18a567701392c335d0c883fa4b7" translate="yes" xml:space="preserve">
          <source>Operation now in progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59da8b3d4f03013f0b1c074c21c160a523b2efbd" translate="yes" xml:space="preserve">
          <source>Operation timed out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db648ff618df972b87b0f378a6996fcda48575ee" translate="yes" xml:space="preserve">
          <source>Operation would block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1247fa3ac596bbd9dede3183f9cc7c84cde283bf" translate="yes" xml:space="preserve">
          <source>Operators can be invoked too:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fc1801fbce2784e2849c10e00fbcdd34ca3424" translate="yes" xml:space="preserve">
          <source>Operators like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; are regular method calls. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9dd2f2f06508a1a833069661fb237a05a6e393" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4c0f76019362d5870d19d18d9fcfce735e91ce" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e33ab051ff71d8ef58933af6611287bc1203b9" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; used when &lt;code&gt;other&lt;/code&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641ac8a8c177d4d16c766cbd69ea117790641772" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;set#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; used when &lt;em&gt;other&lt;/em&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90b9b30e5d679654838a5621aafaa41f1f88d86" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;Enumerable#join&lt;/code&gt; that performs better when all of the elements in this indexable are strings: the total string bytesize to return can be computed before creating the final string, which performs better because there's no need to do reallocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dbe8ccfe714d9a944d448d1c3b1b3c2bfff946" translate="yes" xml:space="preserve">
          <source>Optimizing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c404768d955448d9b6f90547eff35b8e6696cf8" translate="yes" xml:space="preserve">
          <source>OptionParser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9528e3e38e6c3b9d7f601d180c3733ce8ffa97" translate="yes" xml:space="preserve">
          <source>OptionParser#on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1a8c5af20bcb7d109bc79028ab7166687c727d" translate="yes" xml:space="preserve">
          <source>OptionParser#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20081927571e1bd5393c924a62c8507391676a33" translate="yes" xml:space="preserve">
          <source>OptionParser.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579bd1b8c1b458e1807d4863cb5dc61c28a04253" translate="yes" xml:space="preserve">
          <source>OptionParser::Exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76fa734dd2ff466ac7558a1c665b2df21d2725e" translate="yes" xml:space="preserve">
          <source>OptionParser::InvalidOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61913d6fd69063d2647bb8f35d716b5c2244bfe5" translate="yes" xml:space="preserve">
          <source>OptionParser::InvalidOption.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0ff85139c0a525e411680134bbb85a42e2f4c0" translate="yes" xml:space="preserve">
          <source>OptionParser::MissingOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdbcc6af01bccd6a48694ea08c8ae04d12181c4" translate="yes" xml:space="preserve">
          <source>OptionParser::MissingOption.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f50cfb22adece301dfd4a908d5cb575dd688121" translate="yes" xml:space="preserve">
          <source>Optionally takes a radix base (2 through 36).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bef2abfc17b3b18e4a741c93502630af56b0a2" translate="yes" xml:space="preserve">
          <source>Options#anchored?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f01f8288e7b65eb3d060cb5be26023b50b5829" translate="yes" xml:space="preserve">
          <source>Options#dupnames?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca941a6cade5d2f34847396c519d6f62afcc7c9" translate="yes" xml:space="preserve">
          <source>Options#extended?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151e72b3291e3aec698cc8b7bbe7283955494d4e" translate="yes" xml:space="preserve">
          <source>Options#ignore_case?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01861f9149108eb7f4abeaa249a24446b3acd626" translate="yes" xml:space="preserve">
          <source>Options#multiline?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad804d221db75eee7ed0ed594be446f47a1fb91a" translate="yes" xml:space="preserve">
          <source>Options#no_utf8_check?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbcfe77aaf91945ce5b8c5ced56cf71ed3793c3" translate="yes" xml:space="preserve">
          <source>Options#none?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2906eec841f789e63c79b28ee93631754f10fcaf" translate="yes" xml:space="preserve">
          <source>Options#utf_8?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d0a647180d7e504f891d8044c9f9820b909f37" translate="yes" xml:space="preserve">
          <source>Or an 8-bit color:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ea73487b27dff92efa4e964325478eb4c7a133" translate="yes" xml:space="preserve">
          <source>Or like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bca5f80bf6494d39945a6d4a0ae51017fb18a7" translate="yes" xml:space="preserve">
          <source>Or read a scalar value without dealing explicitly with the ResultSet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1681dab2291b1817819335e642390c01e9d7e4b" translate="yes" xml:space="preserve">
          <source>Or read a single row:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fb7f648a3a962ff7f5a3488aa2e336f4eb5cd5" translate="yes" xml:space="preserve">
          <source>Or treat the bytes of a &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; as an &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dec1df796405cf4f91ae0617fa9c0020105561" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;loop&lt;/code&gt;, found in the standard library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14372ee8f481a95aad2012587951e64d0d7bd45d" translate="yes" xml:space="preserve">
          <source>Or with a proc returned from a method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e5aad9de2d1e96409f5634609f22d25becd93c" translate="yes" xml:space="preserve">
          <source>Or you can use curly braces and specify up to four hexadecimal numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e02ea62b2c955c1d273df676545ea3817ce05e" translate="yes" xml:space="preserve">
          <source>Or you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755683a1193430355ffb119767d43c0af66166b8" translate="yes" xml:space="preserve">
          <source>Or, combining the &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;-&amp;gt;&lt;/code&gt; syntaxes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acff31cba5cd69ee51a9a30baa8ae37c702f440" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;alias&lt;/code&gt; declared previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d9251b938d0b3641433eb8c6518d307585d08c" translate="yes" xml:space="preserve">
          <source>Other connection uris are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b9ac89e0cd15f947fad4a1362ea682e23b5d72" translate="yes" xml:space="preserve">
          <source>Other forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a3c40ecc8a61b65dd5c21936eb3726e093764d" translate="yes" xml:space="preserve">
          <source>Other matchers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77a11af390e306006dc0bd2d92c1fe620175315" translate="yes" xml:space="preserve">
          <source>Other rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebeeed663b0eaf97fb51f9a65daf30bf06c03c2" translate="yes" xml:space="preserve">
          <source>Otherwise a compile-time error is issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4574dc5a562c7ad20da2d66150341692a09ee222" translate="yes" xml:space="preserve">
          <source>Otherwise a new relative hierarchical URI is constructed with &lt;code&gt;&lt;a href=&quot;uri#query:String?-instance-method&quot;&gt;#query&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uri#fragment:String?-instance-method&quot;&gt;#fragment&lt;/a&gt;&lt;/code&gt; components from &lt;em&gt;uri&lt;/em&gt; and with a path component that describes a minimum-difference relative path from &lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;uri&lt;/em&gt;'s path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c71af4bf6f908a610b7a9859cad9ebd63d8da4" translate="yes" xml:space="preserve">
          <source>Otherwise the URI is resolved according to the specifications in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC 3986 section 5.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59935dc04f0a1d33612bcd86d21db3fa9059b3b5" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;name&lt;/code&gt; is already descriptive enough for Bob's search of &quot;palindrome&quot;. We don't need to repeat the &lt;em&gt;palindrome&lt;/em&gt; keyword. Instead, we'll catch Susan's search for &quot;spelling&quot; and Felipe's search for &quot;text&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de8f008cde2d69d4915957c54ab813be2e4f345" translate="yes" xml:space="preserve">
          <source>OutputMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fb50388a4a6975b2350288f8eed5cee6d45c91" translate="yes" xml:space="preserve">
          <source>OutputMode#bs0?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61d9132dcab371afdeb1a6f44b96bf71a60a2b6" translate="yes" xml:space="preserve">
          <source>OutputMode#bs1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c3e2ff846ade4f5b1ec6d58053581a4b899839" translate="yes" xml:space="preserve">
          <source>OutputMode#bsdly?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99669451bcc9b2de87afd755d802eac46ccf6201" translate="yes" xml:space="preserve">
          <source>OutputMode#cr0?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d72f825625524e0e2b87580210f255a0fd2056" translate="yes" xml:space="preserve">
          <source>OutputMode#cr1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8a3644eb3849c2d7f45cf6264593d64f0c9fb2" translate="yes" xml:space="preserve">
          <source>OutputMode#cr2?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1960e3d387e79e78223df7902d10144ca3dd18b" translate="yes" xml:space="preserve">
          <source>OutputMode#cr3?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cccfb925bbf025381ce160564f29ced5715e7ec" translate="yes" xml:space="preserve">
          <source>OutputMode#crdly?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea19e8809560e92c9aadf5586d865de529e6aea1" translate="yes" xml:space="preserve">
          <source>OutputMode#ff0?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38005c73f35ec5981433cbcf9ae499635c94aee8" translate="yes" xml:space="preserve">
          <source>OutputMode#ff1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63177bee2b418b5b285d8a85231cd84fefb19376" translate="yes" xml:space="preserve">
          <source>OutputMode#ffdly?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a777fda951cb8f689270b4b1ac3798d3e9e5b701" translate="yes" xml:space="preserve">
          <source>OutputMode#nl0?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1c21e8eef202ee6fdd148f065b5be2aef25276" translate="yes" xml:space="preserve">
          <source>OutputMode#nl1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7decd05bb9287c1b6352b2881f3b01a45d13b7d2" translate="yes" xml:space="preserve">
          <source>OutputMode#nldly?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54293b275a91e707855f38c5a45170935d237821" translate="yes" xml:space="preserve">
          <source>OutputMode#none?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b6cdc678e2e1af0bcedbb81efe5a002b7338ba" translate="yes" xml:space="preserve">
          <source>OutputMode#ocrnl?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e47411e83e13f94262a58bbb9fe4b584c183cfd" translate="yes" xml:space="preserve">
          <source>OutputMode#ofdel?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ab127ea0233905698502df8d44fc5c3ceec9cc" translate="yes" xml:space="preserve">
          <source>OutputMode#ofill?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5f0311d1a0b2b5da89ded86b508fd877334e67" translate="yes" xml:space="preserve">
          <source>OutputMode#onlcr?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284114e5ee31a1db758630d2f4353da69182aabd" translate="yes" xml:space="preserve">
          <source>OutputMode#onlret?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f12fb7acb8351494ffc7baaa6b74be8f8fe2095" translate="yes" xml:space="preserve">
          <source>OutputMode#onocr?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedcc8c0650517846bf416aa62b7e39c7a8ed9a6" translate="yes" xml:space="preserve">
          <source>OutputMode#opost?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5cf5b4b1d2857441efa72b573d68f68c6240a6" translate="yes" xml:space="preserve">
          <source>OutputMode#tab0?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203a21e606008d7471d6697798ffd3d896448bc5" translate="yes" xml:space="preserve">
          <source>OutputMode#tab1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db35db2c7a72bee0721efccb45702be783a35ca9" translate="yes" xml:space="preserve">
          <source>OutputMode#tab2?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d03636735cfb87f338079f122c781b56f268d77" translate="yes" xml:space="preserve">
          <source>OutputMode#tab3?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daca068105d8fc1a7633bcd9d44debb713d49f7" translate="yes" xml:space="preserve">
          <source>OutputMode#tabdly?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb6afa086eafd7dd89401bae4cbe88b329ee282" translate="yes" xml:space="preserve">
          <source>OutputMode#vt0?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb67b0de7d0feb48fcd256934759effc91caa48" translate="yes" xml:space="preserve">
          <source>OutputMode#vt1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1d64d2d663df0404d125a4786f0c13623cd7ad" translate="yes" xml:space="preserve">
          <source>OutputMode#vtdly?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a605862654b60717ffb6ef6267a4502aa3e98f" translate="yes" xml:space="preserve">
          <source>Outputs any buffered data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19fdf7ae8719c6559e268af8d872c0fbb414308" translate="yes" xml:space="preserve">
          <source>Outputs the current macro's buffer to the standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89bbaed7efd54e724af50785285a03474293397" translate="yes" xml:space="preserve">
          <source>Outputs the current macro's buffer to the standard output. Useful for debugging a macro to see what's being generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf17d5fa3a612aef1e5ab876e2674da56b6d858" translate="yes" xml:space="preserve">
          <source>Overflow in &lt;em&gt;nanoseconds&lt;/em&gt; will be transferred to &lt;em&gt;seconds&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b000a241f4d75ec53eedd988fbc26ef5f3b12fc" translate="yes" xml:space="preserve">
          <source>Overflow in smaller units is transferred to the next larger unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2463e229a293d9ce0593fb8c001c99bade0b894d" translate="yes" xml:space="preserve">
          <source>OverflowError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ac50cb8bbdb54f1c2d778f07177aef47363371" translate="yes" xml:space="preserve">
          <source>OverflowError.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2f163ccc20cb7388203cf1edbc6860b44ea0f0" translate="yes" xml:space="preserve">
          <source>Overloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5878dd8d899636943fffee6342d476f6713cb3" translate="yes" xml:space="preserve">
          <source>Overloads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037615c11af1d5cf5b00ec33b9b835b8ad7f73bb" translate="yes" xml:space="preserve">
          <source>Overridden by descendants (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;) to provide meaningful pattern-match semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c41e1d7f8f0d8a79fe1756c403108079dcbc1e" translate="yes" xml:space="preserve">
          <source>Overview: HTTP Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e29cd89d1e555b322df1a2161d027af1a854c87" translate="yes" xml:space="preserve">
          <source>Overview: Hello World!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56df3927b6efbba6275870d58360075f645f491" translate="yes" xml:space="preserve">
          <source>PCG32#jump</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b4d024d37c9f62301450e52974747596bd8d44" translate="yes" xml:space="preserve">
          <source>PCG32#new_seed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5755554de978e12e869c25b84fc32a3f69a1ccc2" translate="yes" xml:space="preserve">
          <source>PCG32#next_u</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8529a091290affc2e204259f8ad6f56bd841b1f0" translate="yes" xml:space="preserve">
          <source>PCG32.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22eb1a13ae90d4f62d531b9bd571a97affdbc82b" translate="yes" xml:space="preserve">
          <source>PCRE native &lt;code&gt;PCRE_MULTILINE&lt;/code&gt; flag is &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;PCRE_DOTALL&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26930739a4b4b02e9193fd2da59cde97866cb90d" translate="yes" xml:space="preserve">
          <source>PCRE optionally permits named capture groups (named subpatterns) to not be unique. Crystal exposes the name table of a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; =&amp;gt; &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, and therefore requires named capture groups to have unique names within a single &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bd89c7bfd3984b87de41516d8df173a9093e9a" translate="yes" xml:space="preserve">
          <source>PCRE supports other encodings, but Crystal strings are UTF-8 only, so Crystal regular expressions are also UTF-8 only (by default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bea2de7c657aa3d51fae53e5c510f1903efb85" translate="yes" xml:space="preserve">
          <source>PKCS5.pbkdf2_hmac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3248605a79692bbca00f37be17e4813a2f9ca96" translate="yes" xml:space="preserve">
          <source>PKCS5.pbkdf2_hmac_sha1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e6eeb4029b8e4a5c4b7ad03b7f9ef1787cd9fb" translate="yes" xml:space="preserve">
          <source>POSIX paths are generally case-sensitive, Windows paths case-insensitive (see &lt;code&gt;&lt;a href=&quot;path#(other:Path)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca96e5e72e15eb4c8a5b3d01fb47a90b7e97b88c" translate="yes" xml:space="preserve">
          <source>POSIX paths use forward slash (&lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt;) as only path separator, Windows paths use backslash (&lt;code&gt;\&lt;/code&gt;) as default separator but also recognize forward slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9f7c9888009c72d3a59f38374670bd98949e86" translate="yes" xml:space="preserve">
          <source>Packed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d1e4bbc367f63b385a90c1ed007368a84d28c1" translate="yes" xml:space="preserve">
          <source>Parameter names should be &lt;em&gt;italicized&lt;/em&gt; (surrounded with single asterisks &lt;code&gt;*&lt;/code&gt; or underscores &lt;code&gt;_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fff061d9a69994af0e94db7cd809080e7fb5f5" translate="yes" xml:space="preserve">
          <source>ParameterCollection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76db7163d966f6c58eb80f85ece1af1d05fec1da" translate="yes" xml:space="preserve">
          <source>ParameterCollection#size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e05259e82129ffaf3d3f720a15142be8ec8b8fb" translate="yes" xml:space="preserve">
          <source>ParameterCollection#to_a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f371e0be174f8bbb0f1fe3e5d7a7887272f6ee91" translate="yes" xml:space="preserve">
          <source>ParameterCollection#types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb90d19ed499e9cc61b82f2d536e0eca6f13c6b" translate="yes" xml:space="preserve">
          <source>ParameterCollection#unsafe_fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dbbff4accbc9d702809ed3b32608efb46207e6" translate="yes" xml:space="preserve">
          <source>ParameterCollection.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daf85b4cf4f20ad5080b383bf1784507ee194a8" translate="yes" xml:space="preserve">
          <source>Parameters can be added to any request with the &lt;code&gt;&lt;a href=&quot;params#encode(hash:Hash(String,String%7CArray(String)))-class-method&quot;&gt;HTTP::Params#encode&lt;/a&gt;&lt;/code&gt; method, which converts a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; to a URL encoded HTTP query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc124689c7040d627a2c6490eec999443990ba30" translate="yes" xml:space="preserve">
          <source>Params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7faf7292e451fb6a6a43d3e494703477a395301" translate="yes" xml:space="preserve">
          <source>Params#==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e10e09552914a5e22b09f1d9f97b0d1b702b5b" translate="yes" xml:space="preserve">
          <source>Params#[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea61107597761aa4c6cc65b2c3425b2f7baca3b1" translate="yes" xml:space="preserve">
          <source>Params#[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a653293409c97b0f790757f1ebbe345c5d5896" translate="yes" xml:space="preserve">
          <source>Params#[]?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ab5aefab15f2cb910a9c2335419912b0d0dec3" translate="yes" xml:space="preserve">
          <source>Params#add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe0a724a667069839fa7b7859bea3cb1d453133" translate="yes" xml:space="preserve">
          <source>Params#delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d5dc4676b0a8caf40e152ddbd7c5a1e3108cce" translate="yes" xml:space="preserve">
          <source>Params#delete_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a14482e7daa6c8126b86ecd34371af0487cf78" translate="yes" xml:space="preserve">
          <source>Params#each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663d84a261c07e0a89812f33afb89c6f19ed015a" translate="yes" xml:space="preserve">
          <source>Params#empty?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8e2859e1d7dda092ab0efa4308678f1acd3d62" translate="yes" xml:space="preserve">
          <source>Params#fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bca57488e3a252bfc6c21284a61461f31ffd7c" translate="yes" xml:space="preserve">
          <source>Params#fetch_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a109e80c6ee8d3255260c20ddde027e21fedff5c" translate="yes" xml:space="preserve">
          <source>Params#has_key?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27085c8b56987378701a534939ee42c70b225252" translate="yes" xml:space="preserve">
          <source>Params#set_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c4549dae96350ca7d94efcbb0fa9fcdd57e54c" translate="yes" xml:space="preserve">
          <source>Params#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76fbd7196ea21ac97a78af67e15b58e59b5d1d1" translate="yes" xml:space="preserve">
          <source>Params.build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d985c78d5677008867bf0cff09e1080fe036bd51" translate="yes" xml:space="preserve">
          <source>Params.encode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1432b7fb491dc928fb1a321461dfb84e847d23cb" translate="yes" xml:space="preserve">
          <source>Params.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d21d29e2a771abbaae0be8568cb50621c9eb7da" translate="yes" xml:space="preserve">
          <source>Params.parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad73fd1a2c6d31eae746e734e09a693793745bd9" translate="yes" xml:space="preserve">
          <source>Params:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5223d9ef0ad23145001f6ef26c976129ce16564d" translate="yes" xml:space="preserve">
          <source>Params::Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db27affc4098634199e153756d585c4c3966a3b8" translate="yes" xml:space="preserve">
          <source>Params::Builder#add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d294d1479cbe74dd63168034e38b74e512b799a" translate="yes" xml:space="preserve">
          <source>Params::Builder#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61f3ac29defca31b17adfbbe01fe9c3604356fb" translate="yes" xml:space="preserve">
          <source>Params::Builder.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d246aabd931dd53081d05a0c558f4017d5422c2" translate="yes" xml:space="preserve">
          <source>Parentheses in method invocations are optional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406c08239fe1e3966e0f02c9c84007b13a818f7c" translate="yes" xml:space="preserve">
          <source>Parse a time string using the formats specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e023af7635dd7b79d94fb402c84b2c8e86a88df" translate="yes" xml:space="preserve">
          <source>Parse a time string using the formats specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt; and (non-RFC-compliant) &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/wininet/http-cookies#set-cookie-header&quot;&gt;IIS date format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b06823104713a3bfc68ac9636c0666f4735fe3" translate="yes" xml:space="preserve">
          <source>Parse datetime format specified by &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a90862b9c3e6dfc47255113afe351607aa8afe" translate="yes" xml:space="preserve">
          <source>Parse time format specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b15f7722bd706e2bf7b7f0bcfd106d9453aed38" translate="yes" xml:space="preserve">
          <source>Parse time format specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c6314c743aed28fae2b84f3a136cb7b30e6c96" translate="yes" xml:space="preserve">
          <source>Parse using SAX2 interface before 2.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53eed71db67aa18808ef66ab385fbdd6ee604b6" translate="yes" xml:space="preserve">
          <source>Parse using XML-1.0 before update 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc44c3a294f03757117c0b2c247df97e73bcfb4f" translate="yes" xml:space="preserve">
          <source>ParseContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b412e6b64c72f0b39ecd12eb2bf966610ac1b7" translate="yes" xml:space="preserve">
          <source>ParseContext#read_alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cab48da38553122c86633c157c247f00694f9a" translate="yes" xml:space="preserve">
          <source>ParseContext#read_alias?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68790f14db98c74fee526ccb908a22447b31c3cc" translate="yes" xml:space="preserve">
          <source>ParseContext#record_anchor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720da7ab0a7077395b959b92e25d031e39b8833c" translate="yes" xml:space="preserve">
          <source>ParseContext.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db9a8b40455d11adcaf85066576e52743f8a7f4" translate="yes" xml:space="preserve">
          <source>Parser#each_row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3a7e911295a4af158b58c61032c5bf7235fdec" translate="yes" xml:space="preserve">
          <source>Parser#max_nesting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ff0086b42eb2cc30791ec449b7b772fd0eac23" translate="yes" xml:space="preserve">
          <source>Parser#max_nesting=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305ab45171f7b85b11ef46242eda2755bed47838" translate="yes" xml:space="preserve">
          <source>Parser#next_row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ba33434abcc8f9bf145361971da77546246e94" translate="yes" xml:space="preserve">
          <source>Parser#parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b113ce17bf83b1f88656384b6797a68c2956f62" translate="yes" xml:space="preserve">
          <source>Parser.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bdd85892fbd579f1a3ee0624961722c72e2c6d" translate="yes" xml:space="preserve">
          <source>ParserOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1070c8c9a8dfe71635e51fe69e239df18016dd5" translate="yes" xml:space="preserve">
          <source>ParserOptions#big_lines?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808170234eda45fbe9ba53c7eec2ad2dae0c41c1" translate="yes" xml:space="preserve">
          <source>ParserOptions#compact?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae9fde6abe72ebd474aa455df31449dcd6d56c3" translate="yes" xml:space="preserve">
          <source>ParserOptions#dtdattr?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd4c021c4fe9107bfb21397d4c034d812e1e0da" translate="yes" xml:space="preserve">
          <source>ParserOptions#dtdload?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fed5bba9220354fc714c0989aa13195803ca8a4" translate="yes" xml:space="preserve">
          <source>ParserOptions#dtdvalid?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dd4483f5be3433482852b2744e0d4feaabd88a" translate="yes" xml:space="preserve">
          <source>ParserOptions#huge?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6abf479cdf4b679591586c99e38f3fae120c2ca" translate="yes" xml:space="preserve">
          <source>ParserOptions#ignore_enc?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3081c174473ef590c3fb5f57d4f61e3c78c7b62" translate="yes" xml:space="preserve">
          <source>ParserOptions#nobasefix?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b0a6c0943dbf270957a275032bd3ded9bc1afb" translate="yes" xml:space="preserve">
          <source>ParserOptions#noblanks?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed304882ab95c7fb9a1559df9ef5470f2c0aec" translate="yes" xml:space="preserve">
          <source>ParserOptions#nocdata?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b7b2e3e200fe8bac78484157acda43db3baaa4" translate="yes" xml:space="preserve">
          <source>ParserOptions#nodict?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f15cd4e43922e361890852cbcf2f2cf7d05c916" translate="yes" xml:space="preserve">
          <source>ParserOptions#noent?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e598f95486072e6b4ef628465a1a3b57dafddcc" translate="yes" xml:space="preserve">
          <source>ParserOptions#noerror?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8b2179b59548a2e6187873699e82ffd4ba544d" translate="yes" xml:space="preserve">
          <source>ParserOptions#none?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b21b1586f3239c71d7250d4bfd56c8f7d485b2a" translate="yes" xml:space="preserve">
          <source>ParserOptions#nonet?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d77d4889528a906a785102c8970427111617e4" translate="yes" xml:space="preserve">
          <source>ParserOptions#nowarning?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eefbf224a8c7dd012a898d324abf9e55fbb856e" translate="yes" xml:space="preserve">
          <source>ParserOptions#noxincnode?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f30a5b80d5d70911eb34b58e719b6bb99b8db9" translate="yes" xml:space="preserve">
          <source>ParserOptions#nsclean?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b57674819ed4eb672dbe3da152403e44cf5af62" translate="yes" xml:space="preserve">
          <source>ParserOptions#old10?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdec3a29b7a1fcf1a10a1ecefad08fd4b872b07b" translate="yes" xml:space="preserve">
          <source>ParserOptions#oldsax?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912789aeb009c53960cccf0201ae496c46d17c8e" translate="yes" xml:space="preserve">
          <source>ParserOptions#pedantic?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1102fcd04a9d127e7f06487aa57182d1ed21a5a" translate="yes" xml:space="preserve">
          <source>ParserOptions#recover?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adf879861ad4c9bae730d79d9a45784abafe91a" translate="yes" xml:space="preserve">
          <source>ParserOptions#sax1?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee7e006f36ab3681707fd55795a295c9f034572" translate="yes" xml:space="preserve">
          <source>ParserOptions#xinclude?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651dc13b5cfd1605864de9cdc0241b17288612b1" translate="yes" xml:space="preserve">
          <source>ParserOptions.default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1b69bab935224e47350c2d342f9f3f81d9f050" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;raw_url&lt;/code&gt; into an URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efc94db857740250e94c34d38a6ee49ccbddffa" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;raw_url&lt;/code&gt; into an URI. The &lt;code&gt;raw_url&lt;/code&gt; may be relative or absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f53291ddd17c25d34890567c8ab1e20c2479a53" translate="yes" xml:space="preserve">
          <source>Parses INI-style configuration from the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37112ca4884b6c3297f391549ce63d5f42f5f2c" translate="yes" xml:space="preserve">
          <source>Parses INI-style configuration from the given string. Raises a &lt;code&gt;&lt;a href=&quot;ini/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt; on any errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e825fc4a9e20849f6b4796b84d63ada0e480f4f" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;YAML::Document&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee46e01d56b7f8b43dea7e085bbcdd4890034909" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt; from an URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a30bee1d812c3b636cfa74dbca52500b2a4c20b" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;Socket::IPAddress&lt;/a&gt;&lt;/code&gt; from an URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c359c0c16b568895b1f7d7af9ac26de4ece5977" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;prerelease&quot;&gt;Prerelease&lt;/a&gt;&lt;/code&gt; from the given pre-release version string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383e9b7454de1a4dc2239d2ae427f22e40e1d746" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;&lt;/code&gt; from the given semantic version string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f690c91620289066b25c20dc53aa8af4420778" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; denoting a JSON array, yielding each of its elements to the given block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf2000f8a06f4da6f11416f90cbb2c900dc4b41" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; denoting a JSON array, yielding each of its elements to the given block. This is useful for decoding an array and processing its elements without creating an Array in memory, which might be expensive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d760fe84205eba461ea686fa682c83fa66ce1bcc" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt; and &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; as default location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816501d1a77ad472dc29612f4fea4166bdbe7753" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt; and &lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; as default location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d826decbba2e6f0c134a57c6549c4d1fcfc98" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b38d77e233ba7caa5c3b5a5d34f02ac21549ed" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;unixaddress&quot;&gt;Socket::UNIXAddress&lt;/a&gt;&lt;/code&gt; from an URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cc91fe447ae9f36b7f7812b9a3606528b350bc" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;Content-Disposition&lt;/code&gt; header string into a field name and &lt;code&gt;&lt;a href=&quot;formdata/filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d80641d08ee95908bb294d117089e1c047a18fa" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;Content-Disposition&lt;/code&gt; header string into a field name and &lt;code&gt;&lt;a href=&quot;formdata/filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt;. Please note that the &lt;code&gt;Content-Disposition&lt;/code&gt; header for &lt;code&gt;multipart/form-data&lt;/code&gt; is not compatible with the original definition in &lt;a href=&quot;https://tools.ietf.org/html/rfc2183&quot;&gt;RFC 2183&lt;/a&gt;, but are instead specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC 2388&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3179042dc1544a4d2d199429a83d8381ecabd34d" translate="yes" xml:space="preserve">
          <source>Parses a CSV or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6860c5f1f3e074ffc6b37212fd12111de21375ff" translate="yes" xml:space="preserve">
          <source>Parses a JSON document as a &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5954121e181256c0ad400155d077b04d63e948bd" translate="yes" xml:space="preserve">
          <source>Parses a MIME multipart message, yielding &lt;code&gt;&lt;a href=&quot;../http/headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; and an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; for each body part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c603bdffb173c6f35ebd376e1bcb3b1e61da6be" translate="yes" xml:space="preserve">
          <source>Parses a MIME type string representation including any optional parameters, per RFC 1521.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f4fe712e6928f0ee1d9e91352430ce7b09fc97" translate="yes" xml:space="preserve">
          <source>Parses a MIME type string representation including any optional parameters, per RFC 1521. Media types are the values in &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Content-Disposition&lt;/code&gt; HTTP headers (RFC 2183).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0304379867c761b82b64142e07598b4621988e0" translate="yes" xml:space="preserve">
          <source>Parses a multipart/form-data message, yielding a &lt;code&gt;&lt;a href=&quot;formdata/parser&quot;&gt;FormData::Parser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfd214f4d752b0c98f7b4553a17d581328951a3" translate="yes" xml:space="preserve">
          <source>Parses a scalar value from the given &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08972c39324d53b9e5c54975da8373ef18a4500" translate="yes" xml:space="preserve">
          <source>Parses a socket configuration from &lt;em&gt;uri&lt;/em&gt; and adds it to this server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67bd78a1472bf5830fb1e5ff8b15c942b3e500d" translate="yes" xml:space="preserve">
          <source>Parses a socket configuration from &lt;em&gt;uri&lt;/em&gt; and adds it to this server. Returns the effective address it is bound to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa6ae3466a7f9c1a9959ee2d74fc744dc2bdb8b" translate="yes" xml:space="preserve">
          <source>Parses a string according to the core schema, assuming the string had a plain style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6defa39db92bee8442b6be82fd58fa80f4ea5810" translate="yes" xml:space="preserve">
          <source>Parses a string into a &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fea7e720698001e31980aa6e34493ac244089dd" translate="yes" xml:space="preserve">
          <source>Parses a string into a &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0493e00fd0328600841009965a4b82f49573be56" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and yields it to the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da49115f942e648ceb7fe844688728348059967d" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and yields it to the block. Might yield &lt;code&gt;nil&lt;/code&gt; if there's no data in the &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, which probably means that the connection was closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c1c6f90e2a3c1806527c0188d3e4b6e9727bc7" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623e393ce033fa531fc947d8f7fbfdceec85c951" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Might return &lt;code&gt;nil&lt;/code&gt; if there's no data in the &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, which probably means that the connection was closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ead4b1e173fcf73436ea31952e8e5d56bb33624" translate="yes" xml:space="preserve">
          <source>Parses an HTML document from &lt;em&gt;io&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413abc157c6e1c18dfd70f226c8c6254739d4d3a" translate="yes" xml:space="preserve">
          <source>Parses an HTML document from &lt;em&gt;string&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7e2f11b79aff5cacb8637afc7621634742c1a1" translate="yes" xml:space="preserve">
          <source>Parses an HTTP query and yields each key-value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acae859dc4a65de7fa91a8be2a1be9718cf61efa" translate="yes" xml:space="preserve">
          <source>Parses an HTTP query string into a &lt;code&gt;&lt;a href=&quot;params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7c8d6ad01f5b3a5f2b8bf344d181749ee661d3" translate="yes" xml:space="preserve">
          <source>Parses an XML document from &lt;em&gt;io&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf69e8babf123dd8fda2f77b8fb203564526980" translate="yes" xml:space="preserve">
          <source>Parses an XML document from &lt;em&gt;string&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849cb5ec477664bc72a8fe8a504b4c2b0dbb4b75" translate="yes" xml:space="preserve">
          <source>Parses multipart MIME messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cc7deef8d423168248ecd66a0bd931893f8fb5" translate="yes" xml:space="preserve">
          <source>Parses the next body part and yields headers as &lt;code&gt;&lt;a href=&quot;../../http/headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; and the body text as an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43778ae272601574305a3d7b43cffc4a492cc3e" translate="yes" xml:space="preserve">
          <source>Parses the next form-data part and yields field name, io, &lt;code&gt;&lt;a href=&quot;filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt;, and raw headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62806364a36d38dfaa39d28d958c9baa79f9b836" translate="yes" xml:space="preserve">
          <source>Parses the passed &lt;em&gt;args&lt;/em&gt; (defaults to &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;), running the handlers associated to each option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5872c3132a904ef1c3d2bc2da5b5ef5ec4fb120" translate="yes" xml:space="preserve">
          <source>Parsing and generating with &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5626a4685de0a82dedc80ce25194df55673df3f1" translate="yes" xml:space="preserve">
          <source>Parsing context that holds anchors and what they refer to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533e0350c45084aebef4e7a249aa0a1d5b52d4ab" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;csv#new(string_or_io:String%7CIO,headers=false,strip=false,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR)-class-method&quot;&gt;CSV#new&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6935aa41a61b4dc5cc6550363fdf313d03df27" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c770069e28411bdc65eb5fc259275b7c344a02b" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; is useful for dealing with a dynamic JSON structure but is slower than using &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2204fbc04ec86eecd1741b720604d359d22442c" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;#parse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;yaml#parse_all(data:String):Array(Any)-class-method&quot;&gt;#parse_all&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef1fe386831ea6e53e4ee59b3a2da492d965330" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;from_yaml&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a258d9012947b26080bcd45cc84c5c3eee2d9324" translate="yes" xml:space="preserve">
          <source>PartialComparable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d285b314e5611bd89eba12cfd7cb043311ef00" translate="yes" xml:space="preserve">
          <source>PartialComparable#&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ddaf0f398e39d8dbade062cb225da0f5326a26" translate="yes" xml:space="preserve">
          <source>PartialComparable#&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2305c2daa0b451a1a8021d8cc6970f5cd48650a0" translate="yes" xml:space="preserve">
          <source>PartialComparable#==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2314c73bec491a9e9caebb240ac6a94b3d2cec0" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efc0f5840ff404f290dbfa13c0528672c91ce21" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#disable_simplify_lib_calls=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacb686a37b24c86d20c7add2431bdba02ca6693" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#disable_unroll_loops=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2738efaaa62c306793e677eaba1a11f90260df" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#finalize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2990b5a2f01ad82a0884c8505536d04803f9597" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#opt_level=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8201651dadb58dc216d65b21271d216e053fb81d" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#populate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd4b0d09f7ecf8d6b057af3d6e630308985f53d" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#size_level=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e5087c6b01a17063060e68ac95e78f988a1068" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#to_unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443f072363eab805fe951bff6db7c3e8e8b4e2e6" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#use_inliner_with_threshold=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d0c79588ea8762acbc9ece8223772418020ac6" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c348c186d78a965b147171923bb5c819f50206" translate="yes" xml:space="preserve">
          <source>PassRegistry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cce852d03c675178433a796ca47488bdb6e32c" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448b27b3521c14270f0113a130fe811d6e3f543f" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710a8b56d5a4c957ce14bacdfeb9c227824cef82" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_code_gen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c0ea3fce6ab8062e7f2a24604ddd865772737a" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_core</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1314fa7b2f5e608c1737d4e7ecc5db55a7b94ae1" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_inst_combine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d9501ab316fb9bd1a081990e0a7e96b168d136" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_instrumentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494c9e574fc4a6b8a6c8124b9b3eba81c15a0506" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_ipa</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc140f7dd46674d029e9472332b14a488f4067a4" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_ipo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfaf7de751c116ef00944acda89133af1797290" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_obj_c_arc_opts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ce052fc518339db0f9a7541091780475219b68" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_scalar_opts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606ee4c4deb606b739aeadbccedad3c8b5adf8b2" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856764e425b874b4686e8f211b0190d508ed3f5d" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_transform_utils</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359be9880510f4dba83d79b0af864c03640aa5b7" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_vectorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7194bf82daddb87870ec4ab65e3989c6ec35d9" translate="yes" xml:space="preserve">
          <source>PassRegistry#to_unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e546d83a86ad3979b6bdd1bb3f2f3ae41ab737b" translate="yes" xml:space="preserve">
          <source>PassRegistry.instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8c0104b3a3621810e62f8983830fd1d4e32987" translate="yes" xml:space="preserve">
          <source>PassRegistry.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b2219ce48b700faa06dd5bf097e9f4660884f8" translate="yes" xml:space="preserve">
          <source>Passes elements to the block until the block returns &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, then stops iterating and returns an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of all prior elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a337ffbd94ac99a23b1ac720da1e34a8b3932635" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; to a C function, for example as a callback, is possible as long as the &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; isn't a closure. If it is, either a compile-time or runtime error will happen depending on whether the compiler can check this. The reason is that a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; is internally represented as two void pointers, one having the function pointer and another the closure data. If just the function pointer is passed, the closure data will be missing at invocation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0691d5f54b9ced61df8368909e90676db18f0b2" translate="yes" xml:space="preserve">
          <source>Passing a Proc to a C function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7814c03b5c90904df222518706577efea224a175" translate="yes" xml:space="preserve">
          <source>Passing a closure to a C function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29290fac52414bf68dc0b00754f7442bc4d0ec4e" translate="yes" xml:space="preserve">
          <source>Passing arguments to the flags (example: &lt;code&gt;-f filename.txt&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5d929fd128e118ec4a5f56a8eb6f96d2568288" translate="yes" xml:space="preserve">
          <source>Passing by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df7e02d85b64b62871c1840843314bacd48dc02" translate="yes" xml:space="preserve">
          <source>Path handling comes in different kinds depending on operating system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcee1130ad763a6a38ca585a1c7049dd02ebdc6e" translate="yes" xml:space="preserve">
          <source>Path#/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91359e56e1b489716bd0c73da1a6f8f96ac70505" translate="yes" xml:space="preserve">
          <source>Path#join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2be00931d29727622057d14e886b63b7586d65" translate="yes" xml:space="preserve">
          <source>Path#root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dcd18a6d607f43272b8f92022a31ca417f305f" translate="yes" xml:space="preserve">
          <source>Path#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8790bef1749e881494abfdfe7936ebcb82065d6" translate="yes" xml:space="preserve">
          <source>Path.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a8d8c33a3370a7f393de8bb5d16d08d68fe09c" translate="yes" xml:space="preserve">
          <source>Path.home</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ef33b239fc81b55935ab9f71829c58ae60719d" translate="yes" xml:space="preserve">
          <source>Path.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9d19d95a5619487f1de37d6577ed99cccbb0c1" translate="yes" xml:space="preserve">
          <source>Path::Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3981bb4e6174daf02500c0abe1e69e27ac2989f4" translate="yes" xml:space="preserve">
          <source>Path::Kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b24382f8e6776d571390b1bb56bf2c66ecc7dc1" translate="yes" xml:space="preserve">
          <source>Paths and generics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9def4b467eddc3f3f0c7e3aa5c199c905f50658c" translate="yes" xml:space="preserve">
          <source>Pattern match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546f913a30fb94d73dbb6d1671429332e4f7fd17" translate="yes" xml:space="preserve">
          <source>Pedantic error reporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40c4330a408dd5eaba809d369fe058a86edf416" translate="yes" xml:space="preserve">
          <source>Peeks into &lt;code&gt;reader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e26fdbf0f2089ad33b8dc79745869f2085d40c" translate="yes" xml:space="preserve">
          <source>Peeks into this IO, if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936abd4e587b059d279c9193860b61635b618bb1" translate="yes" xml:space="preserve">
          <source>Percent Array Literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5f7156b43a20a6efd3082b5edbfdd6cab2fa86" translate="yes" xml:space="preserve">
          <source>Percent regex literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd09ecdc1324a196ccfa6d503a00a7714ff7c30" translate="yes" xml:space="preserve">
          <source>Percent string array literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c8c7348410365795961665886a4a234678d1cb" translate="yes" xml:space="preserve">
          <source>Percent string literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f553d1b5fe7581b04ce2b2cd2a9702a16c2fa3" translate="yes" xml:space="preserve">
          <source>Percent symbol array literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbeb71ddd80cafaf19d693c341a20a8556bb956" translate="yes" xml:space="preserve">
          <source>Performing HTTP client requests with OAuth authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d5033fe817614b52603ba3911ea7747cdf6dc6" translate="yes" xml:space="preserve">
          <source>Performing HTTP client requests with OAuth2 authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f979fb02c47a52e7e92a42753add48171bfbb8dd" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value &amp;amp;= value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418ed36e6f9d0b5ea8d926da1255f7c8f95360d6" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value &amp;amp;= value&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8371e054da91c5b480164267294bc893d3a1fbd3" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value += value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3056a4801f49660a90928093a28d7c62208e5b" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value += value&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2f5ee2cbd93bdf1aad38b0ab2004e717eaea7b" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value -= value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffd1f51cc303a53989f29f19f5ce04b440c6eb2" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value -= value&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e2f308b0cee06d4ca59a1b2f379158c94272ef" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = max(atomic_value, value)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd2036c7b4d44172a21b49ed64af5bfbd5221b5" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = max(atomic_value, value)&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84a67a0872caf2bf88fcc6e7a72518ac0fcc91a" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = min(atomic_value, value)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198e9aa0b2a5763837fdb1d82d0425f4abcd3b36" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = min(atomic_value, value)&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f4dfee87bbfe05e0a86ca105894cbc7efa663e" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = ~(atomic_value &amp;amp; value)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739a6950cb821a79403c35130ee5fe1ddc99a284" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = ~(atomic_value &amp;amp; value)&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7a143aa7abb911880bc4e2a972c85dbbf4ed57" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value ^= value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38aa31355eda6f2e2fc5fd23b2424920c3d98ac5" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value ^= value&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c08db3606ee0c3777ccdc26b05efc52980f74a3" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value |= value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb06eb7d58ac2e2e73352b162925e206c90d043" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value |= value&lt;/code&gt;. Returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d016004473e0e58d7682856755147e33256bb813" translate="yes" xml:space="preserve">
          <source>Permission denied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31d0886edba4a5908b0f5f27505431eadd0df4d" translate="yes" xml:space="preserve">
          <source>Permissions#group_all?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1486ebf8a11c89c332cb4a748f6df5aff2ed00ba" translate="yes" xml:space="preserve">
          <source>Permissions#group_execute?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec8aee157a81420fbbee26c475fc89dc904f1d1" translate="yes" xml:space="preserve">
          <source>Permissions#group_read?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0d3ba8e7e727cb204f62aac3b89143af2487c5" translate="yes" xml:space="preserve">
          <source>Permissions#group_write?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a03b36a2ff318bc3ff41d74d17bbf155cac91fb" translate="yes" xml:space="preserve">
          <source>Permissions#none?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac359fef667ff94cc4fda4e3a93466bb2fe2f15f" translate="yes" xml:space="preserve">
          <source>Permissions#other_all?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d705dac1cd4d0a86f567d5b1f195be0e057a80c" translate="yes" xml:space="preserve">
          <source>Permissions#other_execute?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4955a40376c50e6d75d52570d8af35bb3ff6f45e" translate="yes" xml:space="preserve">
          <source>Permissions#other_read?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95f1ab1a9427d4809d41f2d4a4406e390d33387" translate="yes" xml:space="preserve">
          <source>Permissions#other_write?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf01052090fbc9ffc87dfe92abc262c51b05a16" translate="yes" xml:space="preserve">
          <source>Permissions#owner_all?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4091d89736dcceb71361875752f82b1ffce172e8" translate="yes" xml:space="preserve">
          <source>Permissions#owner_execute?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b327b003aedf59016bd18a6ec2f6f03f07998b" translate="yes" xml:space="preserve">
          <source>Permissions#owner_read?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df076cccba9b0e1c9bb29dfbd2bdea3c45778ae" translate="yes" xml:space="preserve">
          <source>Permissions#owner_write?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9dd6d48f780b04168ae2e56a6579d8d2f4f862" translate="yes" xml:space="preserve">
          <source>Permissions#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aeb504a36ab67c4d2098d8f3f5401bd3d02fb9" translate="yes" xml:space="preserve">
          <source>Permissions.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5bfac68ba5dfa60e4440bd8eacce16e3b90957" translate="yes" xml:space="preserve">
          <source>PhiTable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130c95b6b9b4be1a3fc37ddf72d7c8fd7b2215ce" translate="yes" xml:space="preserve">
          <source>PhiTable#add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ba1d77b7f0f14fd0212c098858f80784053ebc" translate="yes" xml:space="preserve">
          <source>PhiTable#blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941ba22a1602f0c3f40538fc78bfbb5bc576ff39" translate="yes" xml:space="preserve">
          <source>PhiTable#empty?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233ada7f5a421c00df53b4b2b5dfa2b212e16a6b" translate="yes" xml:space="preserve">
          <source>PhiTable#size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da26190f49f1c9168c1c0498701bfbf9b0ada738" translate="yes" xml:space="preserve">
          <source>PhiTable#values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29821305cf9e450de7cae7914b7a7273c134524f" translate="yes" xml:space="preserve">
          <source>PhiTable.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0069ecaa14bb37aabd23c2b52988934072a6e3" translate="yes" xml:space="preserve">
          <source>Philip Wadler, A prettier printer, March 1998</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858e26268c9b3ac9b7d17e5e2f6fc5df7fd1d5d7" translate="yes" xml:space="preserve">
          <source>Pipe the IO so the parent process can read (or write) to the process IO through &lt;code&gt;#input&lt;/code&gt;, &lt;code&gt;#output&lt;/code&gt; or &lt;code&gt;#error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef57d28e73677c96993fd2b8445c1eec249cdff" translate="yes" xml:space="preserve">
          <source>Pitfalls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdecea39dd93aa44ca6e4f3eccd152c0908c4aa" translate="yes" xml:space="preserve">
          <source>Places a shared advisory lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4e5e666539ec363ebe4f4b42abc5dbddee47e2" translate="yes" xml:space="preserve">
          <source>Places a shared advisory lock. More than one process may hold a shared lock for a given file at a given time. &lt;code&gt;&lt;a href=&quot;errno#EWOULDBLOCK&quot;&gt;Errno::EWOULDBLOCK&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and an existing exclusive lock is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb10532ab2cc04ffe97c89b4152c4bc52a72a389" translate="yes" xml:space="preserve">
          <source>Places an exclusive advisory lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72f858c9a5af9131bfc00c0d4848b4eb14e5e0b" translate="yes" xml:space="preserve">
          <source>Places an exclusive advisory lock. Only one process may hold an exclusive lock for a given file at a given time. &lt;code&gt;&lt;a href=&quot;errno#EWOULDBLOCK&quot;&gt;Errno::EWOULDBLOCK&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and any existing lock is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933a284fbf86ef2c0e99679a660986b9ab159b1c" translate="yes" xml:space="preserve">
          <source>Platform-specific exit status code, which usually contains either the exit code or a termination signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c2d1373e533cda49243cdf899e313af5cbdca7" translate="yes" xml:space="preserve">
          <source>Platform-specific exit status code, which usually contains either the exit code or a termination signal. The other &lt;code&gt;&lt;a href=&quot;status&quot;&gt;Process::Status&lt;/a&gt;&lt;/code&gt; methods extract the values from &lt;code&gt;&lt;a href=&quot;status#exit_status:Int32-instance-method&quot;&gt;#exit_status&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ea9ca45740e159c5965569aa2304e67be4b594" translate="yes" xml:space="preserve">
          <source>Please note that the IO object yielded by &lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;block)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; is only valid until the block returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbd8e59fb0a130579b301220329e5a158acea5e" translate="yes" xml:space="preserve">
          <source>Please note that the IO object yielded to the block is only valid while the block is executing. The IO is closed as soon as the supplied block returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c25ba6684309e293993e30377524b68e38c179" translate="yes" xml:space="preserve">
          <source>Please note that the scheme will only be used to identify if TLS should be used or not. Therefore, schemes apart from &lt;code&gt;wss&lt;/code&gt; and &lt;code&gt;https&lt;/code&gt; will be treated as the default which is &lt;code&gt;ws&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5de071a8adc9ea913c6f9e5f0005a2d40cc14d" translate="yes" xml:space="preserve">
          <source>Pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce16d5fb412148470ca855aa5e05aa5fa623e12" translate="yes" xml:space="preserve">
          <source>Pointer types (&lt;code&gt;Pointer(Int32)&lt;/code&gt;, which can also be written as &lt;code&gt;Int32*&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487ca11290045cb21415bdffdc1e17fc68112254" translate="yes" xml:space="preserve">
          <source>Pointer#+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25e16bd11dd3bc3f1e688b4a1f74e23aadd9cba" translate="yes" xml:space="preserve">
          <source>Pointer#-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a202c934255cdfd47626a939c407a180dcfe25a8" translate="yes" xml:space="preserve">
          <source>Pointer#[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83849a5dee08c1e2935d8841d9483db930ee8fb0" translate="yes" xml:space="preserve">
          <source>Pointer#[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cd248580ed2eea487e6ef19467d4be9e3a02b0" translate="yes" xml:space="preserve">
          <source>Pointer#hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7db079dcee88c8069aafe915958e03151c095a" translate="yes" xml:space="preserve">
          <source>Pointer#map!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec951e02b5712ada33f3bb27eea20820319de0f4" translate="yes" xml:space="preserve">
          <source>Pointer#swap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44d703099083f67cfbcfe0c37ccc6de26bfa9f8" translate="yes" xml:space="preserve">
          <source>Pointer#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9ca7e7e2950ef598116227bd983461c30280ae" translate="yes" xml:space="preserve">
          <source>Pointer(T)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d86b3895d708df5389e23dfea8b9171c7f5f036" translate="yes" xml:space="preserve">
          <source>Pointer.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c66b7f825f734359e3595a123822f64326b8c5" translate="yes" xml:space="preserve">
          <source>Pointer.null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191c695407f8c2c3b6071be66b053c415fde09cc" translate="yes" xml:space="preserve">
          <source>Pointer::Appender(T)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b754d0a717dca040bdae801c6a0fd50075fb6a9b" translate="yes" xml:space="preserve">
          <source>Positional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06af95a7fc4db27ca7587a240e821b20e0cfb00a" translate="yes" xml:space="preserve">
          <source>Positional arguments can always be matched by name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05074503cb245be656963fc7d5d3681822867c0" translate="yes" xml:space="preserve">
          <source>Positional values can be accessed at compile time via the &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Annotation.html#%5B%5D%28index%3ANumberLiteral%29%3AASTNode-instance-method&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; method; however, only one index can be accessed at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668f933c2e05e55fc75dc11d6fc43af86781c7d3" translate="yes" xml:space="preserve">
          <source>Positive values result in a later time, negative values in an earlier time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abd76a8799f7d121e69af0d27061eabe68e681d" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;code&gt;&lt;a href=&quot;samesite&quot;&gt;SameSite&lt;/a&gt;&lt;/code&gt; cookie as described in the &lt;a href=&quot;https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1&quot;&gt;Same-site Cookies Draft&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc6d8fb57432605b1cb6a23815ffbe9016f3a39" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; is minimum number of digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf6ba5eb62ec3059f7ad27edc764ae79bb7981" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;e&lt;/code&gt; is number of digits after the decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ceed8009a8d7164e6ac46fed5d852266ac242e" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;f&lt;/code&gt; is number of digits after the decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b57cb28d7763d08ecec3f26481017bbb0ebe4d" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;g&lt;/code&gt; is number of significant digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e03c89c05caf9b73a7b6dbed5fddeb1e248d09" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;s&lt;/code&gt; is maximum number of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d0958c18948fe9e80a0e76de46a4a2eea432af" translate="yes" xml:space="preserve">
          <source>Prefer to use the dedicated &lt;code&gt;String.build&lt;/code&gt; optimized for building strings, instead of creating an intermediate &lt;code&gt;IO::Memory&lt;/code&gt; allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d370c9a55177b997a6cba5c43c1148d8986a3824" translate="yes" xml:space="preserve">
          <source>Premature optimization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5122ef0596e88a94a887ee5ced9bc8703ca21f78" translate="yes" xml:space="preserve">
          <source>Prepend multiple values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292ad3b8aabf33f7d1b7166038802693ccd2735d" translate="yes" xml:space="preserve">
          <source>Prepend multiple values. The same as &lt;code&gt;&lt;a href=&quot;array#unshift(obj:T)-instance-method&quot;&gt;#unshift&lt;/a&gt;&lt;/code&gt;, but takes an arbitrary number of values to add to the array. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47797766fc64ef786dfcb90790e892707fa4687d" translate="yes" xml:space="preserve">
          <source>Prepend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3681202fda56e8131d0227c48ee859a5e5b502ec" translate="yes" xml:space="preserve">
          <source>Prepend. Adds &lt;em&gt;obj&lt;/em&gt; to the beginning of &lt;code&gt;self&lt;/code&gt;, given that the type of the value is &lt;em&gt;T&lt;/em&gt; (which might be a single type or a union of types). This method returns &lt;code&gt;self&lt;/code&gt;, so several calls can be chained. See &lt;code&gt;&lt;a href=&quot;array#shift-instance-method&quot;&gt;#shift&lt;/a&gt;&lt;/code&gt; for the opposite effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1b963bf3aab05b999b961bb15d95056a87aa47" translate="yes" xml:space="preserve">
          <source>Prerelease</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2d465eaeed8a6a770588fad91f04afcb76e7b1" translate="yes" xml:space="preserve">
          <source>Prerelease#&amp;lt;=&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0913145744269b0477050a5224c52e251336dabf" translate="yes" xml:space="preserve">
          <source>Prerelease#identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71da1ee069aaf755f5a4c032991a4feb703ba319" translate="yes" xml:space="preserve">
          <source>Prerelease#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b13d9e446d7bf517e204eadfb3cc64351a5fe6" translate="yes" xml:space="preserve">
          <source>Prerelease.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3baea6dc4b18d63b7cbf9e42e2e42f4b3631c44" translate="yes" xml:space="preserve">
          <source>Prerelease.parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066e4be36849229aabc0fc44726a289d9a9ec84b" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;code&gt;self&lt;/code&gt; into the given printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810f9c7b5fdc7ce5661c45426eab7e8815a7ad1e" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;obj&lt;/em&gt; into &lt;em&gt;io&lt;/em&gt; with the given &lt;em&gt;width&lt;/em&gt; as a limit and starting with the given &lt;em&gt;indent&lt;/em&gt;ation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdd85425669134af93af6a41722c91bbb4f0ad3" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac404a4766904fff7dbfb4a174b6a493b82e063b" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline. Returns &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d7fabde8a529efbc3f27a505e61c79f9440f3c" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd92136b0f1d7338743166dbe8c436021d98adc" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4050ab679ddb218baf72c3cb48f3c31ddead9af3" translate="yes" xml:space="preserve">
          <source>Pretty prints each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f159f8c144e548699eeac1944bdc1b3ebf2e20" translate="yes" xml:space="preserve">
          <source>Pretty prints each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa6dda302fe6a1dcd8ef7c8d56240c004394d20" translate="yes" xml:space="preserve">
          <source>Pretty prints this number as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; in a human-readable format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f0e8401001d5c70aacba0a633b4d5bd5ef6e4e" translate="yes" xml:space="preserve">
          <source>PrettyPrint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2d8b188c0068153c7e27daf1a5fd422f7ae88f" translate="yes" xml:space="preserve">
          <source>PrettyPrint#list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8346e47b6ff89914cf7423979eb0974c2cdea9" translate="yes" xml:space="preserve">
          <source>PrettyPrint#nest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7149cfa2f29a1fb76fc106a518c20d21e357a3ff" translate="yes" xml:space="preserve">
          <source>PrettyPrint#text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb21df1f44b0bcb7fc8dcc281b759275f95c299" translate="yes" xml:space="preserve">
          <source>PrettyPrint.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf882593a7c46e19ffe578a8a66ec9419d8f0415" translate="yes" xml:space="preserve">
          <source>Prevents the cookie from being sent by the browser in all cross-site browsing contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cadb737a3c128ae8bea9f580dfb32f139a93360" translate="yes" xml:space="preserve">
          <source>Previous owner died</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41519a083509ba68859bad445e1da142cb529a0c" translate="yes" xml:space="preserve">
          <source>Primitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d98e86258bf3dd4e3e0d74504fab50ddd951ba" translate="yes" xml:space="preserve">
          <source>Primitive types (&lt;code&gt;Int8&lt;/code&gt;, ..., &lt;code&gt;Int64&lt;/code&gt;, &lt;code&gt;UInt8&lt;/code&gt;, ..., &lt;code&gt;UInt64&lt;/code&gt;, &lt;code&gt;Float32&lt;/code&gt;, &lt;code&gt;Float64&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf98b684014c2754616ec7c0a2d70e99dc2cc3a6" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;&lt;a href=&quot;location#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc8fd85430f20c5cc0e511e713fa07acb8258a1" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt; in the format &lt;code&gt;+HH:mm:ss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b087a3cd716469fc05d93daab4a86d9f2825f1" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt; in the format &lt;code&gt;+HH:mm:ss&lt;/code&gt;. When &lt;em&gt;with_colon&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, the format is &lt;code&gt;+HHmmss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82254702fdfedd4b5d12adc9859b1711ae3d779" translate="yes" xml:space="preserve">
          <source>Prints &lt;em&gt;utime&lt;/em&gt;, &lt;em&gt;stime&lt;/em&gt;, &lt;em&gt;total&lt;/em&gt; and &lt;em&gt;real&lt;/em&gt; to the given IO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81796ee99de4353cc0546f79e81988ae8588dd1" translate="yes" xml:space="preserve">
          <source>Prints AST nodes at compile-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa25748a98ab14e00b4c86f9a1dad18748cb256" translate="yes" xml:space="preserve">
          <source>Prints AST nodes at compile-time. Useful for debugging macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4442a8e06f019ce0fe1b5e2a91574272bef6a69d" translate="yes" xml:space="preserve">
          <source>Prints a formatted string to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6678afa6175596e20f8ce8efacf671d5d83853f" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their inspected values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4daa35724e84da3fabb8eede2e1ccecf4cc0dc64" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their inspected values. Useful for print style debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a23b02aead62c4b14579a2c589acf5b0154902" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their pretty printed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d939a25a41794cd9477528551516834365ae3eeb" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their pretty printed values. Useful for print style debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9faa603979bcf32f920bc98631b6384c014dd24" translate="yes" xml:space="preserve">
          <source>Prints macro expressions together with their values at compile-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fbda09bc607fa1173d3b77f5fa2034653fcc2d" translate="yes" xml:space="preserve">
          <source>Prints macro expressions together with their values at compile-time. Useful for debugging macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca380ef8be9e19f606842adc1f948620239c949" translate="yes" xml:space="preserve">
          <source>Prints objects to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; and then invokes &lt;code&gt;STDOUT.flush&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81d7bb2f4a18271c83bf485aacbc01e90f8f338" translate="yes" xml:space="preserve">
          <source>Prints objects to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, each followed by a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31eda2caebe502a489c03df6aa4599d13c4c2f3" translate="yes" xml:space="preserve">
          <source>Prints the version of the shard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca028797daf1ad8373fee69e45a27aa8413bc581" translate="yes" xml:space="preserve">
          <source>Prints this &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37832ecaee83b9438fc02971c49ba03ea16be563" translate="yes" xml:space="preserve">
          <source>Prints this &lt;code&gt;&lt;a href=&quot;zone&quot;&gt;Zone&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb19c703a6c1d6b58b4e67572ddf2be104096977" translate="yes" xml:space="preserve">
          <source>Prints this integer as a binary value in a human-readable format using a &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat&quot;&gt;BinaryPrefixFormat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e1abe61ff3a87641f002d60ba74def56e5b1f2" translate="yes" xml:space="preserve">
          <source>Prints this number as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using a customizable format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a892b1ce5f281a6db6b9e1ec5bbcabecbf74ed" translate="yes" xml:space="preserve">
          <source>Prints to &lt;em&gt;io&lt;/em&gt; all the elements in the collection, separated by &lt;em&gt;separator&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64236822b724b100865451f82b4f11644a30e98a" translate="yes" xml:space="preserve">
          <source>Prints to &lt;em&gt;io&lt;/em&gt; the concatenation of the elements, with the possibility of controlling how the printing is done via a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bea7b855c92761fc53db7e7e657329722ff553" translate="yes" xml:space="preserve">
          <source>Prints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef9846296a3401146329564868967f0ac86319d" translate="yes" xml:space="preserve">
          <source>Private methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32fcb562aa7135148d659e8e2030a7c4ace4c7e" translate="yes" xml:space="preserve">
          <source>Private top-level methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d432692b4b93c02901318febb8316fbd3365fad5" translate="yes" xml:space="preserve">
          <source>Private top-level types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e162337e6cd11e5ada376d6d20b6932d6def7e" translate="yes" xml:space="preserve">
          <source>Private types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc920d708c77ea3169bf5f95d4a05af47bb5bb85" translate="yes" xml:space="preserve">
          <source>Private types can only be referenced inside the namespace where they are defined, and never be fully qualified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51d4e0dcedaa3fc409bdb1e06a21dc4a5fd577e" translate="yes" xml:space="preserve">
          <source>Proc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35136705c0a356fcedc56c249710657d43e63977" translate="yes" xml:space="preserve">
          <source>Proc literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac72ddd2f12c622c0b9b50633603138184176d8" translate="yes" xml:space="preserve">
          <source>Proc#==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9101c6ca25b9393601df537b73f897cd2deec18" translate="yes" xml:space="preserve">
          <source>Proc#===</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23f9f3c6b9d00aa72bb29a85b2dcaefa99b940b" translate="yes" xml:space="preserve">
          <source>Proc#call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53974376558e032de60a88ee681a112c19e11bb" translate="yes" xml:space="preserve">
          <source>Proc#hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30e69ee4425913e6c021c3ea4f03e20d536f5cc" translate="yes" xml:space="preserve">
          <source>Proc#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de89bff120da227a86f76eed9853784ebb2460a" translate="yes" xml:space="preserve">
          <source>Proc(*T, R)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02d1ddd5d4f9234960d1968f9d92c37eb0c6e2d" translate="yes" xml:space="preserve">
          <source>Proc.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383b318db7b487794fb7aa9222053bd9affcb4df" translate="yes" xml:space="preserve">
          <source>Process#kill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a530001904d210754fada35e7bce64f3fa5bef3" translate="yes" xml:space="preserve">
          <source>Process#pid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5bfbe10c73282e1a4fa7f13a4c35ffd401b942" translate="yes" xml:space="preserve">
          <source>Process#wait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb63622bc87f37676dbb40a96d56b65892024d3" translate="yes" xml:space="preserve">
          <source>Process.exec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b94b3b4bfe9511566a773c8f00848dcff1d066e" translate="yes" xml:space="preserve">
          <source>Process.exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa35a07ac4dbe154186c2a9507bcd6f37d6327e6" translate="yes" xml:space="preserve">
          <source>Process.fork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5dfd440db593f131efb98f26468b00c5de6272" translate="yes" xml:space="preserve">
          <source>Process.kill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c08116f513915037db9e40f9addca92531249e" translate="yes" xml:space="preserve">
          <source>Process.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280b18dd02909e4a555bc55bd08857d037042b71" translate="yes" xml:space="preserve">
          <source>Process.pgid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d399f934ccb8ca1c8941c9a5af7f2a597d5d02b" translate="yes" xml:space="preserve">
          <source>Process.pid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2781a88f46ebef9af84f652185e502f41f66d5e3" translate="yes" xml:space="preserve">
          <source>Process.ppid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc0d296314520ab150ef6b9a1f2ee9a91d2bc77" translate="yes" xml:space="preserve">
          <source>Process.run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355606df5215f8cc939aab9f727ca0819a18aa95" translate="yes" xml:space="preserve">
          <source>Process::Env</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86286d53df64363d41fd13c2734b85466d2e4b7f" translate="yes" xml:space="preserve">
          <source>Process::Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7383c2c96194e110ab989d138d5e3beb60debf2f" translate="yes" xml:space="preserve">
          <source>Process::Stdio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43493fe729b92940a3c17f3be7869d7b014ab986" translate="yes" xml:space="preserve">
          <source>Process::Tms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960e8fddc698625d55770887235e931f448d8d54" translate="yes" xml:space="preserve">
          <source>Produces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb0bee5478facc7715136ce6ca34b0fe11136cb" translate="yes" xml:space="preserve">
          <source>Project Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b93b59652591cda5649f3f72564d0641579593" translate="yes" xml:space="preserve">
          <source>Propagates to &lt;code&gt;&lt;a href=&quot;server#wrapped:::Socket::Server-instance-method&quot;&gt;#wrapped&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;sync_close&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244e149a0aac1ed57a66bb43202c8948debe38a2" translate="yes" xml:space="preserve">
          <source>Protected methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed77c3f7ffc41a33eadccef5727dc7c97079235" translate="yes" xml:space="preserve">
          <source>Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31583107f763ed101ab870682277a15652cc1cb" translate="yes" xml:space="preserve">
          <source>Protocol error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677789471bfc26b9baa2dcb7bdc1e90f13c9beac" translate="yes" xml:space="preserve">
          <source>Protocol family not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bb2975367cf35f9a618efe163f6de98389a1c2" translate="yes" xml:space="preserve">
          <source>Protocol not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ba63ff22fffa946a6c1e3e8b9d184a5a911e55" translate="yes" xml:space="preserve">
          <source>Protocol not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff5f085a157b60cb28dba0860f39cd3e12b11e1" translate="yes" xml:space="preserve">
          <source>Protocol wrong type for socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d6a5d4d039af836141334cd45696bce4a09f90" translate="yes" xml:space="preserve">
          <source>Protocol#icmp?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836fb0f35ebb6b7e949ea4f358011da80929547d" translate="yes" xml:space="preserve">
          <source>Protocol#ip?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4421bb870ed0974d352787832f1b4bdf4524bb2" translate="yes" xml:space="preserve">
          <source>Protocol#raw?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f48818564d4fff0d08da8304c59b95bd74da89b" translate="yes" xml:space="preserve">
          <source>Protocol#tcp?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe7c9ff50934e6e1af66396d7fbaae9649d0fe4" translate="yes" xml:space="preserve">
          <source>Protocol#udp?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3634cb0e202a8457477798c8791fdcfce2245e30" translate="yes" xml:space="preserve">
          <source>Provides HTML escaping and unescaping methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d86eab7d23a491ab224bc0dec89c4358e48b6a" translate="yes" xml:space="preserve">
          <source>Provides a way to parse a YAML document according to the fail-safe schema, as specified in http://www.yaml.org/spec/1.2/spec.html#id2802346, where all scalar values are considered strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49c07637ff56907683ad68a22c2c5a829e52f43" translate="yes" xml:space="preserve">
          <source>Provides methods and classes for parsing and generating CSV (comma-separated values) strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df212612c898fbb1a662b8c939c68dc69b4e2e84" translate="yes" xml:space="preserve">
          <source>Provides random read access to zip file entries stores inside a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; or an &lt;code&gt;&lt;a href=&quot;../io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a157671ab0c4713ef3c2167230f57a1ab307afe" translate="yes" xml:space="preserve">
          <source>Provides the &lt;code&gt;&lt;a href=&quot;unicode/caseoptions&quot;&gt;Unicode::CaseOptions&lt;/a&gt;&lt;/code&gt; enum for special case conversions like Turkic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d07da8d22c2489984621b7e64cd1c08d738890" translate="yes" xml:space="preserve">
          <source>Provides utility methods for the YAML 1.1 core schema with the additional independent types specified in http://yaml.org/type/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9553939380c6bea1d1a93468aaa25d77fa854831" translate="yes" xml:space="preserve">
          <source>Pseudo Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affe2be2c99e39a2e17badab70be30fb2fb50c20" translate="yes" xml:space="preserve">
          <source>PullParser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692d36941138e2522bddd7ed267fb124107f2e60" translate="yes" xml:space="preserve">
          <source>PullParser#anchor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3b74f1761ed3a47ff895a378dc74e946b02ff1" translate="yes" xml:space="preserve">
          <source>PullParser#bool_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9421e77a6222cd9e71eba814c2a896da9bb6a1" translate="yes" xml:space="preserve">
          <source>PullParser#close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc19ca69be7ac24f4f878f071586055609ec7385" translate="yes" xml:space="preserve">
          <source>PullParser#column_number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b0044e29f584f9f809144634baae047c834e0e" translate="yes" xml:space="preserve">
          <source>PullParser#end_column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7437917ef5ac4018cb3bf7392a52a02e16529cea" translate="yes" xml:space="preserve">
          <source>PullParser#end_line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ba6349e07b025d842df8649933f714e648fd12" translate="yes" xml:space="preserve">
          <source>PullParser#expect_kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff7d3cdab9069ea01f5e9f46057b5be65c00764" translate="yes" xml:space="preserve">
          <source>PullParser#finalize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259358ff1c16a2433416796420ef10675966a940" translate="yes" xml:space="preserve">
          <source>PullParser#float_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020ee76bdf1edc04af2a61e6172684c6aac6df91" translate="yes" xml:space="preserve">
          <source>PullParser#int_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe869f4b1fc72c3b53af2ea33901c84739a671b" translate="yes" xml:space="preserve">
          <source>PullParser#kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714c3b365d86ce4b7386956f40c79590dbe002db" translate="yes" xml:space="preserve">
          <source>PullParser#line_number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03399e4599304f6e08d322ca8c63643f09a5104c" translate="yes" xml:space="preserve">
          <source>PullParser#location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8262872cd0d3f325cbfb3ef088553cea345ce5c1" translate="yes" xml:space="preserve">
          <source>PullParser#mapping_style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4f728cb6115a3b288d8958def18ea05489a9b0" translate="yes" xml:space="preserve">
          <source>PullParser#max_nesting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a250a7e1b70d7f89364d6a2d6a9dcd01046c9ea1" translate="yes" xml:space="preserve">
          <source>PullParser#max_nesting=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fe5ae19e43768152705942dbc16fc25b993ab8" translate="yes" xml:space="preserve">
          <source>PullParser#on_key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a76723487c9088dec2e5a4cac49110b27cf5c57" translate="yes" xml:space="preserve">
          <source>PullParser#on_key!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd451db9624cd77f467521f738519246e4664e2" translate="yes" xml:space="preserve">
          <source>PullParser#raise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030d9baa30eb4c300916562ba974b1311996af0b" translate="yes" xml:space="preserve">
          <source>PullParser#raw_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38b9e7a1ca0c2b45ccdfd15d3708294150c395e" translate="yes" xml:space="preserve">
          <source>PullParser#read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675914af9249adfd19b5af3e2c4ef1aa4883e743" translate="yes" xml:space="preserve">
          <source>PullParser#read?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8a2630e9777f4fd2c7868c3bc47771c02eaa5b" translate="yes" xml:space="preserve">
          <source>PullParser#read_alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1f7b26414fc276522091783fac615e4199adef" translate="yes" xml:space="preserve">
          <source>PullParser#read_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ea8b38e22c061c561ba8e2130e3ad64c9aad58" translate="yes" xml:space="preserve">
          <source>PullParser#read_array_or_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a6ec8bd992fbe4f34271b024f9b8ca714ac2ca" translate="yes" xml:space="preserve">
          <source>PullParser#read_begin_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8aea39ae0a0c2335cbdff77fc81745fa03d8dca" translate="yes" xml:space="preserve">
          <source>PullParser#read_begin_object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368bc727cde4600f6272739c6265f78bbf05252f" translate="yes" xml:space="preserve">
          <source>PullParser#read_bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec016932748c6cc4cadc9545f06a128e7a473ca" translate="yes" xml:space="preserve">
          <source>PullParser#read_bool_or_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8688264bf9ed431b866a6800dddb89a5b007e7d5" translate="yes" xml:space="preserve">
          <source>PullParser#read_document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1437e920761e6274346bd0a35e98437866847415" translate="yes" xml:space="preserve">
          <source>PullParser#read_document_end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7959010b7dad2551086fc5cdb6e38b2c0a6ebd9" translate="yes" xml:space="preserve">
          <source>PullParser#read_document_start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326996ae2bf910d4b45031987a5b35bf3b6a17f7" translate="yes" xml:space="preserve">
          <source>PullParser#read_end_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6067f2c1feeb878ff3f656c42825d471aa8a717" translate="yes" xml:space="preserve">
          <source>PullParser#read_end_object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a849b3a6428e62d9042f3e677704cd5df04b7f11" translate="yes" xml:space="preserve">
          <source>PullParser#read_float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab8b0c2301ea08f4c16180b6679c4828186c726" translate="yes" xml:space="preserve">
          <source>PullParser#read_float_or_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc5aae74e2372b7d1f7bde3a922fd776069a66e" translate="yes" xml:space="preserve">
          <source>PullParser#read_int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbead3fb2e4022a670e2b3a1393175964110091" translate="yes" xml:space="preserve">
          <source>PullParser#read_int_or_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213cef3aeab22798d013e24fdaf8efe9c68e0ec3" translate="yes" xml:space="preserve">
          <source>PullParser#read_mapping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbcd8d4f83d7e3a8552aaab313a7f233e5b9b71" translate="yes" xml:space="preserve">
          <source>PullParser#read_mapping_end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168ad420cb1d0d3513f1fc4927daec5e5ac3ec2c" translate="yes" xml:space="preserve">
          <source>PullParser#read_mapping_start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3228cb6fc183dd3ca43b30373964f7fcf4ff312" translate="yes" xml:space="preserve">
          <source>PullParser#read_next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958ca2f42ce472156ad7cc3e4dc476a0af64798e" translate="yes" xml:space="preserve">
          <source>PullParser#read_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42514a85ba0b8f12be6a3c89fabbfd36f650917f" translate="yes" xml:space="preserve">
          <source>PullParser#read_null_or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25731d04f365782ebbfdbc272096b7265bb1ef53" translate="yes" xml:space="preserve">
          <source>PullParser#read_object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069ad97fbfc08eb7660bfb488bcfc06d77641a71" translate="yes" xml:space="preserve">
          <source>PullParser#read_object_key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7265d4899413aa6053c5b1a21faf5b66e9f559e" translate="yes" xml:space="preserve">
          <source>PullParser#read_object_or_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a3005cefa09866d8917ce938f71d7ac416d6ba" translate="yes" xml:space="preserve">
          <source>PullParser#read_raw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef15808c32a5e2270322a5da5f4c7c0351ade55b" translate="yes" xml:space="preserve">
          <source>PullParser#read_scalar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adb44b8a86d0f5a9a1e9184b30298e11b2d1e75" translate="yes" xml:space="preserve">
          <source>PullParser#read_sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f3ce4d96f6f1687aa4305a5acd1e2f5f30a8f5" translate="yes" xml:space="preserve">
          <source>PullParser#read_sequence_end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5ba7a67c7c861eaf9df06d735ffe43c6a2d30c" translate="yes" xml:space="preserve">
          <source>PullParser#read_sequence_start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0742a64a393d244827273a3d1549f62f2efddf76" translate="yes" xml:space="preserve">
          <source>PullParser#read_stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763a4f0c22c603f8ec70e99ea8f03bc2fe902c3c" translate="yes" xml:space="preserve">
          <source>PullParser#read_stream_end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3177362ba0afd0f6f54c548b29e18017f29317fd" translate="yes" xml:space="preserve">
          <source>PullParser#read_stream_start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644e1b92fdcd4c72972024595b7a966fcfbd7586" translate="yes" xml:space="preserve">
          <source>PullParser#read_string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549636554e040a4b37e019cb3d7ab435b62f0c4a" translate="yes" xml:space="preserve">
          <source>PullParser#read_string_or_null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe5f6ae345480e350204c99b04636b016ffa261" translate="yes" xml:space="preserve">
          <source>PullParser#scalar_style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b188516a353a1c21f417af671735ea329b3246" translate="yes" xml:space="preserve">
          <source>PullParser#sequence_style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858e3a88f27ef2ea31d91539e2008e42a9fd9250" translate="yes" xml:space="preserve">
          <source>PullParser#skip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cdb6242e4241059937c06c1e6647ef3d79994a" translate="yes" xml:space="preserve">
          <source>PullParser#start_column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea488d032667648b9958aca60d91b72b31645833" translate="yes" xml:space="preserve">
          <source>PullParser#start_line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123fc44a4223d1f4cbd680633f99660692d9f1b5" translate="yes" xml:space="preserve">
          <source>PullParser#string_value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699bbdf974c02b4bb4734eeba53714a56996d1a2" translate="yes" xml:space="preserve">
          <source>PullParser#tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fb6a07aa70513e38f24d0a53381061977509af" translate="yes" xml:space="preserve">
          <source>PullParser#value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e66b48e0cfeaab8bd5934b7623fcdb332b5971" translate="yes" xml:space="preserve">
          <source>PullParser.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6108929ee63055f18cba10dc06c4a616c3448e" translate="yes" xml:space="preserve">
          <source>PullParser::Kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1fcc660865e6bcffa0966fd8d38d7596eaa4a2" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e40139257dcf673ef445697d2b25f42957700c9" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#begin_array?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bed3ab5864760a41708e11a33211f24b3add4d" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#begin_object?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd6cc1d86865c607028b0fd6879419325c29bbf" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#bool?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b81f8a050f5494159f94ccf015b934c6d8bb7c" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#end_array?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe29a2e7e946d6c8403f0533e9225eae331646b2" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#end_object?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972b7bec3928c894c5cfde2b5f907cd9c13bcae2" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#eof?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836d4771bd3843cc2fe3ff752b1652a0c527893a" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#float?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40688d4ada34cc80385cfb5c9548764013f20f1" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#int?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194fb5ecd358c2d3f266ae6ba7c79af4c3f35f23" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#null?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f428352a8a27aebeeb1ec7e8b18d35770e6c550" translate="yes" xml:space="preserve">
          <source>PullParser::Kind#string?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600036ef4dd93f433b81d22b2c4158e4bab15338" translate="yes" xml:space="preserve">
          <source>Punycode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7087bc1f3cd6d7006a3249c5be2cf91bcff400" translate="yes" xml:space="preserve">
          <source>Punycode.decode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ea013af2f6796be19ae91ebea63be430f360ba" translate="yes" xml:space="preserve">
          <source>Punycode.encode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e583c743f2e1e2e651ce29693c7e9b1622ef609" translate="yes" xml:space="preserve">
          <source>Punycode.to_ascii</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0687b3529552d9092d0d9f21423d0444c071ab" translate="yes" xml:space="preserve">
          <source>Pure Crystal implementation of the Bcrypt algorithm by Niels Provos and David Mazi&amp;egrave;res, as &lt;a href=&quot;https://www.usenix.org/legacy/events/usenix99/provos/provos_html/index.html&quot;&gt;presented at USENIX in 1999&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d65c1ee1c213d49d30e7bbf871840737853333" translate="yes" xml:space="preserve">
          <source>Push it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79e84ae270aca399d6d554360f431941e05a905" translate="yes" xml:space="preserve">
          <source>Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53450995a5e137086d49d1b5ebf467f37c6196e" translate="yes" xml:space="preserve">
          <source>Question methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a02839d847cb7275b78e7b7f3a75085d382055a" translate="yes" xml:space="preserve">
          <source>Questions or suggestions? Ask on the &lt;a href=&quot;https://forum.crystal-lang.org&quot;&gt;Crystal Forum&lt;/a&gt;, on our &lt;a href=&quot;https://gitter.im/crystal-lang/crystal&quot;&gt;Gitter channel&lt;/a&gt; or IRC channel &lt;a href=&quot;http://webchat.freenode.net/?channels=#crystal-lang&quot;&gt;#crystal-lang&lt;/a&gt; at chat.freenode.net, or on Stack Overflow under the &lt;a href=&quot;http://stackoverflow.com/questions/tagged/crystal-lang&quot;&gt;crystal-lang&lt;/a&gt; tag. There is also an archived &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/crystal-lang&quot;&gt;Google Group&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817f1d763957167c2918ce1f6ac3bda865509a8d" translate="yes" xml:space="preserve">
          <source>Quick Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9333d4b41c5df1d216baead8f81c3228efff35" translate="yes" xml:space="preserve">
          <source>Quotes according to RFC 4180 (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523835e6ade179c09600005a04d5d458890f86aa" translate="yes" xml:space="preserve">
          <source>RFC 1123</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6227228abeab5e8356e397df5df665c3db863c" translate="yes" xml:space="preserve">
          <source>RFC 850</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b4eb1c25e60643ee9384e5e362ccbb745ca0d1" translate="yes" xml:space="preserve">
          <source>RFC4122 UUID versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55911fa40c3848a5aee528529fc57bcaf5e58cd1" translate="yes" xml:space="preserve">
          <source>Raised on group lookup failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37275f25ecc83dfa8b1c83401cb3acd503482f6" translate="yes" xml:space="preserve">
          <source>Raised on user lookup failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31babf23f85f5771234e575786548b87baec0f4c" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;code&gt;not_nil!&lt;/code&gt; assertion fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc0ad9f988f68848af334770421785bfa11b6b3" translate="yes" xml:space="preserve">
          <source>Raised when a method is not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc4d731aea51093d72d2246f55818f5ad6bb431" translate="yes" xml:space="preserve">
          <source>Raised when an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation times out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b80484491c17eb60530f05b3c1e3871363500dd" translate="yes" xml:space="preserve">
          <source>Raised when an error is encountered during CSV parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a0e320bbcffe230d4c7c87de18fd4301b77d60" translate="yes" xml:space="preserve">
          <source>Raised when attempting to divide an integer by 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e20f35bcff45f252a5d97e3a6ae2b19f1ff5e4" translate="yes" xml:space="preserve">
          <source>Raised when the arguments are wrong and there isn't a more specific &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ddf9d7803af919bf106fe4005694754959e736" translate="yes" xml:space="preserve">
          <source>Raised when the given index is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0218e0b29b53b30aaa6646be12ed0a8156a65e84" translate="yes" xml:space="preserve">
          <source>Raised when the result of an arithmetic operation is outside of the range that can be represented within the given operands types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b294b871c8ecfa1c0aab94a6b0ada9e8f05171" translate="yes" xml:space="preserve">
          <source>Raised when the specified key is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494ea43d09051ec5df7e06b37d344bfbb622580e" translate="yes" xml:space="preserve">
          <source>Raised when the type cast failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36d9458e0d1baae7403b5ce642a78b09e4acc7f" translate="yes" xml:space="preserve">
          <source>Raises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc00751c7979b711b9578b4781a6956dbfdd62fd" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;count&lt;/em&gt; is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eebef2eaff92e0d2382897f6eaeede19a29b7e" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;exponent&lt;/em&gt; is negative: if this is needed, either use a float base or a float exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3052f57d6d81178a3ee32051ed79d210ee835950" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;prerelease&lt;/em&gt; is invalid pre-release version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dca6009b013bd4af42c0bf08e9cff32bc115ad" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;str&lt;/em&gt; is not a semantic version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c9ef91460c9510a9edc0441724e2246f1fe031" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if an incomplete named back-reference is present in &lt;em&gt;replacement&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d075ad6d2e5c1c83ac8d351480d80c587bf9a9f" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if the string doesn't denote a valid integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95bb99c017c1dffc37db982f48f8a79632fb631" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if this integer's value doesn't fit a char's range (&lt;code&gt;0..0x10ffff&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4491f25b75dec71d70179e239db8c36bf7f1bc4b" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if this string does not denote an hexstring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b84f806b7ecba3b1d4f98bdc09d0c4773ce64e6" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if this string doesn't denote a valid integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c330d08ee7096b8c1476f57e8aa0ab049484207f" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;channel/closederror&quot;&gt;ClosedError&lt;/a&gt;&lt;/code&gt; if the channel is closed or closes while waiting for receive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5758a2cf1a918d1c344436df85ad841bca32d5" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;enumerable/emptyerror&quot;&gt;Enumerable::EmptyError&lt;/a&gt;&lt;/code&gt; if the collection is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6d45cd1b140c8ef8f64d1dea8e69be4b2e4fe3" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;error&quot;&gt;MIME::Error&lt;/a&gt;&lt;/code&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb73b04b4fcc56ad51c144f683929179c856e121" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;error&quot;&gt;OAuth::Error&lt;/a&gt;&lt;/code&gt; if there was an error getting the access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec8d5e037a64d65f492e7385ca40cd5613cfb0f" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;error&quot;&gt;OAuth::Error&lt;/a&gt;&lt;/code&gt; if there was an error getting the request token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026d5676cb087539cd5a55d18a64871a69af5d89" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;error&quot;&gt;XML::Error&lt;/a&gt;&lt;/code&gt; on evaluation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6a0510b90cbdd8dd97d852b29a3673655d518a" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;group/notfounderror&quot;&gt;NotFoundError&lt;/a&gt;&lt;/code&gt; if no such group exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3021729c5bfb060dde5754030d97d1c2b031def" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;from&lt;/em&gt; is outside the array range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f71ce67dcbfcdc341c3cabc1e9a4cab51cd3b3a" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if a named group referenced in &lt;em&gt;replacement&lt;/em&gt; is not present in &lt;em&gt;pattern&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a010a8f019d92b6fad01f76118a03c02ce7c28" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c025e5c6e35b2bcef3376a08d8b72a05e07e3c5" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the deque had no previous value at the given &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4add804d9426efdf6cbeac5fe628aa3ce558a03c" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the desination slice cannot fit the data being transferred e.g. &lt;code&gt;dest&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt; &amp;lt; self&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2822839adb87f9d052960211a166b23fbba72f8c" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the desination slice cannot fit the data being transferred e.g. dest.size &amp;lt; self.size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380909e43b18cae4637635081e544a46c254f83a" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the desination slice cannot fit the data being transferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55d4648d9f7a3e3671f9ca219911391d6a30d57" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e11b68181f9f6ba81b4b67d68b626552f755fd" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the new slice falls outside this slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bddaaad953af3a8507c8fb47b8f5b417b9abe9d" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the range's start is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc66123b9691847e290bebe88b2b2bf4c6fbb47" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the starting index is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed70b978f08001a43babe2318d00cedd51b5385" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if the starting index is out of range. Raises &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;count&lt;/code&gt; is a negative number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334c9e802df71859893aa5e18e12e2fe5530f24c" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;invalidtimezoneoffseterror&quot;&gt;InvalidTimezoneOffsetError&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;seconds&lt;/em&gt; is outside the supported value range &lt;code&gt;-86_400..86_400&lt;/code&gt; seconds (&lt;code&gt;-24:00&lt;/code&gt; to &lt;code&gt;+24:00&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af68799395763320601bbd5904394ca2d5e7469" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;nilassertionerror&quot;&gt;NilAssertionError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0151320a23a8693f847f6e1697961e19bc6e77" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;overflowerror&quot;&gt;OverflowError&lt;/a&gt;&lt;/code&gt; in case of overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af01acb777329da5cbeb92a56859b8fe76db0b0c" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;path/error&quot;&gt;Path::Error&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;path#parent:Path-instance-method&quot;&gt;#parent&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4837e12bd1808d08d23a25a6563d66117933297f" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;&lt;a href=&quot;user/notfounderror&quot;&gt;NotFoundError&lt;/a&gt;&lt;/code&gt; if no such user exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5824701591f908398c1e888cb8c5b3422227b697" translate="yes" xml:space="preserve">
          <source>Raises a &lt;code&gt;&lt;a href=&quot;../parseexception&quot;&gt;YAML::ParseException&lt;/a&gt;&lt;/code&gt; with the given message located at this node's &lt;code&gt;&lt;a href=&quot;node#location:Tuple(Int32,Int32)-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca322d4a568df4fdec950c4ee0ed916c295e21d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; has null bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e0e20ae3a891a89e0d3fd8178c58b9dc4869a3" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; has null bytes. Returns &lt;code&gt;self&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf28b06ec97d627c44728011e0a4146ba2fe49cb" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if any of &lt;em&gt;others&lt;/em&gt; doesn't have as many elements as &lt;code&gt;self&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;enumerable#zip?(*others:Indexable%7CIterable%7CIterator,&amp;amp;block)-instance-method&quot;&gt;#zip?&lt;/a&gt;&lt;/code&gt; for a version that yields &lt;code&gt;nil&lt;/code&gt; instead of raising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd91a8aec025dedb11d3c4d2a185473ee0afe3f" translate="yes" xml:space="preserve">
          <source>Raises an Exception with the &lt;em&gt;message&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05f75280bd082ed9b8e63ee95c9171ca4effc63" translate="yes" xml:space="preserve">
          <source>Raises an exception if there was no last match or if there is no subgroup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d90d9f79f3027149ab7a78d2d487d6c043fb995" translate="yes" xml:space="preserve">
          <source>Raises attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d4748d3226b321b0dc8ed8406c84570f0de27a" translate="yes" xml:space="preserve">
          <source>Raises if &lt;em&gt;other&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, or if &lt;em&gt;other&lt;/em&gt; is &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;self&lt;/code&gt; is signed and is the minimum value for that integer type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6366b5dcd007c4d86a97b06095543d279bd02f93" translate="yes" xml:space="preserve">
          <source>Raises if &lt;em&gt;other&lt;/em&gt; is zero, or if &lt;em&gt;other&lt;/em&gt; is -1 and &lt;code&gt;self&lt;/code&gt; is signed and is the minimum value for that integer type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee5adf2ccf043fd6c31ba0beb9f7dfc16015900" translate="yes" xml:space="preserve">
          <source>Raises if the current kind is not the expected one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ca51b9a6b1eff680a1514aee47f8a2ce6b46dc" translate="yes" xml:space="preserve">
          <source>Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; nor a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1533473a57b82cf23899613f773af3663229799" translate="yes" xml:space="preserve">
          <source>Raises if the underlying value is not an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b03566cff2413df537abaecef0e4523e73cf202" translate="yes" xml:space="preserve">
          <source>Raises the &lt;em&gt;exception&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0258a27c9b0fff0abbb66b1e6e9a761c2b2f4c" translate="yes" xml:space="preserve">
          <source>Raises the decimal to the &lt;em&gt;other&lt;/em&gt;th power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76838d71c897037be3df8ed404b0e6e436bf20f1" translate="yes" xml:space="preserve">
          <source>Raises the rational to the &lt;em&gt;other&lt;/em&gt;th power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e194f26d3982bb783dd9e35591e9371eaa802e88" translate="yes" xml:space="preserve">
          <source>Raises when an error related to a CSV is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b2214b956d46b3169d88899a06d239cd03238e" translate="yes" xml:space="preserve">
          <source>Raising exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fcce9caff24d0720e4a98989b7d79685ce459f" translate="yes" xml:space="preserve">
          <source>Raising is an expensive operation, so instead of raising on a connect or bind error, just to rescue it immediately after, the block is expected to return the error instead, which will be raised once there are no more addresses to try.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d888c08aa561f370e38cee976121532a883d71" translate="yes" xml:space="preserve">
          <source>Random</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42312a7ddaf617ea81c457077fd3cd31b1c4fe56" translate="yes" xml:space="preserve">
          <source>Random#hex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d22e7da40add7639319be76b9ea588f4890c8a" translate="yes" xml:space="preserve">
          <source>Random#rand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d712e784825a60ed01e5d36b2f40391b44d8c0" translate="yes" xml:space="preserve">
          <source>Random.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bb512806700f4977a57943d10ace1b9a237dde" translate="yes" xml:space="preserve">
          <source>Random.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877d48cd892691c4d0d07d0c644cd20b03726a3d" translate="yes" xml:space="preserve">
          <source>Random.rand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2deb534254b980913ac930e066f7bf1a0beee9e" translate="yes" xml:space="preserve">
          <source>Random::ISAAC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfdcc9c491a9a5f415df0aab5b66e88cb09355f" translate="yes" xml:space="preserve">
          <source>Random::PCG32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bc31cb6d1d0e7c6bae93c8c2d7ed9113042e24" translate="yes" xml:space="preserve">
          <source>Random::Secure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48b75dd64f88d0eb29eef8aba55dc7b9205fa71" translate="yes" xml:space="preserve">
          <source>Range#===</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc6e7017498475bd63d4644a814f33e3ce82e31" translate="yes" xml:space="preserve">
          <source>Range#each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a5adb1b61b193c122a75ea0d5b1cd25ed280f6" translate="yes" xml:space="preserve">
          <source>Range#end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853c45d7461e573e7f5b37b9b012ff24d0f3d596" translate="yes" xml:space="preserve">
          <source>Range#step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ca8654810e45784a33ce30c5474d0fa60b6dc9" translate="yes" xml:space="preserve">
          <source>Range#sum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928f6f779f54ff7265ab2e4e98f6d688a4124e63" translate="yes" xml:space="preserve">
          <source>Range(B, E)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaa9ead9fc3de9917fa15e0ef245d1045073339" translate="yes" xml:space="preserve">
          <source>Range.new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa3b820366a95160132acd3bf2b8835d3bf447f" translate="yes" xml:space="preserve">
          <source>Ranges may be constructed using the usual &lt;code&gt;&lt;a href=&quot;range#new(begin__arg0:B,end__arg1:E,exclusive:Bool=false)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; method or with literals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6187c376b8787b9823479b29829728d16c19ebf3" translate="yes" xml:space="preserve">
          <source>Ranges typically involve integers, but can be created using arbitrary objects as long as they define &lt;code&gt;succ&lt;/code&gt; (or &lt;code&gt;pred&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;range#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;#reverse_each&lt;/a&gt;&lt;/code&gt;), to get the next element in the range, and &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt;, to know when the range reached the end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd55e81a449782a0c3cc8d7787227b9e910c80ce" translate="yes" xml:space="preserve">
          <source>Ranges with &lt;code&gt;nil&lt;/code&gt; as begin are called begin-less and &lt;code&gt;nil&lt;/code&gt; as end are called end-less ranges. In the literal notation, &lt;code&gt;nil&lt;/code&gt; can be omitted: &lt;code&gt;x..&lt;/code&gt; is an end-less range starting from &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;..x&lt;/code&gt; is an begin-less range ending at &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a1052d25668c3b37ad3c8eb1dfe9d2b05bfa88" translate="yes" xml:space="preserve">
          <source>Rational numbers are represented as the quotient of arbitrarily large numerators and denominators. Rationals are canonicalized such that the denominator and the numerator have no common factors, and that the denominator is positive. Zero has the unique representation 0/1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe0956d21edd41538dd56a66f4c67b96da00505" translate="yes" xml:space="preserve">
          <source>RawConverter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdf1add051f5e59870a82218bb24100a937aefd" translate="yes" xml:space="preserve">
          <source>RawConverter.from_json</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33de05626d882994db7e11d29cf51e0674fe3dd" translate="yes" xml:space="preserve">
          <source>RawConverter.to_json</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9993b280b094bb8660f492fc34f6924200c68e11" translate="yes" xml:space="preserve">
          <source>Read the general &lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/master/CONTRIBUTING.md&quot;&gt;Contributing guide&lt;/a&gt;, and then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff5502d24f7dd29936e7af9eeed4903fc90f5ef" translate="yes" xml:space="preserve">
          <source>Read these guides to get the best out of Crystal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7967994dfc943a9d75a158de2c9b6edcab50b2" translate="yes" xml:space="preserve">
          <source>Read-only file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5bbe8292ed1b69e0f95e5bdaa035569a295fd7" translate="yes" xml:space="preserve">
          <source>Reader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a26760bfcd3409a0dd6360aba16bd2329f8a16" translate="yes" xml:space="preserve">
          <source>Reader#[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad59e4966617cdcc93f6d535f453529dc896b47" translate="yes" xml:space="preserve">
          <source>Reader#[]?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7380d027383948082e1160307ddc11849eec72b5" translate="yes" xml:space="preserve">
          <source>Reader#attributes_count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1e87a7fdd1a5ce8b07af08484701980b47e4ba" translate="yes" xml:space="preserve">
          <source>Reader#close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f17f8eec987555e1cb307b1f91e1b9fbac0a940" translate="yes" xml:space="preserve">
          <source>Reader#closed?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3285562d8bc7fc0a096e8681d5983467b43c4c0" translate="yes" xml:space="preserve">
          <source>Reader#current_char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd707b19a8640bdccf4b46a8adf0faffbe9d5fbb" translate="yes" xml:space="preserve">
          <source>Reader#current_char_width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c5ccff75faa2f949578c2ae5dde4c19fc15305" translate="yes" xml:space="preserve">
          <source>Reader#depth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3ebbac67fabe66df3292917967dd154efbf6ed" translate="yes" xml:space="preserve">
          <source>Reader#dict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e11b3f93f641b946e815cd4bd6a35e034a6927" translate="yes" xml:space="preserve">
          <source>Reader#each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9406de96e39acdb0e052a15af311b2ac893bb738" translate="yes" xml:space="preserve">
          <source>Reader#each_entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33705c6a44637bb53fd8c69b8e098bb786dac0b" translate="yes" xml:space="preserve">
          <source>Reader#empty_element?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9728a0628eb709248b65eff246c29ea60195577" translate="yes" xml:space="preserve">
          <source>Reader#error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff737dc823c028b86d4e3756ce6e56579e97f3f2" translate="yes" xml:space="preserve">
          <source>Reader#expand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a38a747e834fdba6a6d3c640b97a4073aa354a5" translate="yes" xml:space="preserve">
          <source>Reader#has_attributes?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b27474cc1ca319f270f499a7355f648080262bb" translate="yes" xml:space="preserve">
          <source>Reader#has_next?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b840d64a25367081ede5c7cf8033c993cd89a52c" translate="yes" xml:space="preserve">
          <source>Reader#has_previous?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e381b87da339852f66a05648dd17240c5dc4d43a" translate="yes" xml:space="preserve">
          <source>Reader#header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ca58631cbc0f214f2baec4691b220aeca96ac7" translate="yes" xml:space="preserve">
          <source>Reader#move_to_attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3b960bb899e101023cce786d48404a4efee581" translate="yes" xml:space="preserve">
          <source>Reader#move_to_element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78637665c6a21ec2e05b110c6433641e9458ce06" translate="yes" xml:space="preserve">
          <source>Reader#move_to_first_attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf61e8b7529af5bff69c6d27fc42e8f8cd46aa3" translate="yes" xml:space="preserve">
          <source>Reader#move_to_next_attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae78d9529e583918baac9e999dde2bcd3825c3a" translate="yes" xml:space="preserve">
          <source>Reader#name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee55e762cc26e027db853c00ecfa30b739fe7eb9" translate="yes" xml:space="preserve">
          <source>Reader#next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d8191f1528f8786182d3f833dd731b807d801f" translate="yes" xml:space="preserve">
          <source>Reader#next_char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203d332a534eb2354d4feb980c288164127bc173" translate="yes" xml:space="preserve">
          <source>Reader#next_entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cb90a1364dccd9814560676e60d4c3ddfa6684" translate="yes" xml:space="preserve">
          <source>Reader#next_sibling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b17797de0d97d679335abbc8a48393ec1fabde" translate="yes" xml:space="preserve">
          <source>Reader#node_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77784c986b52ff5e92f8c944263e0300021d8561" translate="yes" xml:space="preserve">
          <source>Reader#peek_next_char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e979f03b6b309a598db74e21935510418a9ecc7" translate="yes" xml:space="preserve">
          <source>Reader#pos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0767b1a4cbfa3694f54ed5c3314dd4ff9ec77ac" translate="yes" xml:space="preserve">
          <source>Reader#pos=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9122994e2154f72534b8c945d014f5b256eaa33" translate="yes" xml:space="preserve">
          <source>Reader#previous_char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa59c8f8a913c6cd76a1ebe5ba72c33d74217e4" translate="yes" xml:space="preserve">
          <source>Reader#read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566783533ab44e47d96b1a5a89574ea28f84ba8d" translate="yes" xml:space="preserve">
          <source>Reader#read_inner_xml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9774379bb1de2fb321232d9878658372461ed434" translate="yes" xml:space="preserve">
          <source>Reader#read_outer_xml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39f329e4de1da514edc742319f77d5b869ae27a" translate="yes" xml:space="preserve">
          <source>Reader#string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac1abd5064886010d420f5f2780f54efae24b53" translate="yes" xml:space="preserve">
          <source>Reader#sync_close=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baba3764e4099b6099efd79b3f842b59019bfb78" translate="yes" xml:space="preserve">
          <source>Reader#sync_close?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da89db3fc52d275604e7cb0018d9fdc132ca7d08" translate="yes" xml:space="preserve">
          <source>Reader#to_unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e777cf4ffa2d8fd85b836e7275f318f8fc40346" translate="yes" xml:space="preserve">
          <source>Reader#unbuffered_close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919104754dcd1ca9917527b13c3a0514f77556e6" translate="yes" xml:space="preserve">
          <source>Reader#unbuffered_flush</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc23055398df6d2faeb050534de1ad5bc2fd6868" translate="yes" xml:space="preserve">
          <source>Reader#unbuffered_read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b980ad5fcc4dbb1e4e34e64c08996cc54d211a" translate="yes" xml:space="preserve">
          <source>Reader#unbuffered_rewind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a2752fd98295378b30ad126418312bfcac6a87" translate="yes" xml:space="preserve">
          <source>Reader#unbuffered_write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3350434cf2566e3156ca61478f782db27a101e3" translate="yes" xml:space="preserve">
          <source>Reader#value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82af0cd5d0bc651b130d0fa10d57c79822831d2" translate="yes" xml:space="preserve">
          <source>Reader.gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015fc90c7ab118761464cc78711ca9072ac8bec5" translate="yes" xml:space="preserve">
          <source>Reader.new</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
