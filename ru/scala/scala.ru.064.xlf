<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="f64fe4b83fad773ad3543f1bd06a76152cd988c0" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c1fe6dfd787e7b3b3c0b657784f0408c2dab24" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb1ab341fddf284fe29f12a57db4a3717ecf510" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe08662168390bc4955b8d068d19d6946bae8b6" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef25ff4c67e1e309dcd201333fe1b53d551fd5bd" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05df28735eaf98b2fba543d78367681fc0f4c5f" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088659a8898adca8b2fc77efa4ece37725432e00" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3567b58a457a06c400bb03cd4e02771a005f32a" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6926ddc0f047eedf1a74c437a07dab90c22ef3b" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc7f6792ba9930386392d9fe8dafb2486b60409" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b86278ae9e273539958dae4062f11125df7072" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a85feb3f34aaa7efe37fa842414f226ff3cd07" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588884502d64dd4a08fe31f3b25b41bc1955318d" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753dfa3c1cd4f8d5f23d954f8f507fda1e64fc95" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1225059cc39b8ccd2f611afb33b5d3b9aef221e" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51539b59f3981805ef744b455690ac30baf8490a" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884d051171ecf8775a40d27c3a9dfa620792b429" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e56663f8f4d118c9aadef148dc1b050f412ac2" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec8ee23cb7ae23a1a1ef4f5f6b960413e057ac9" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3048c360d1d976574881216be241457bbf5909d" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4211517d67961f8b9c15c1d7ce64b11f43a4ddff" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cd5b36b035dd4844284a2755d132d6a5aad07e" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3351c1b9dc34df884c5f00218e9ec8f5ed162988" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaf34beb539b84469fb71a6008215cbdf08ec9f" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cccb6836b0e5c8bb5a1acd6e96bd913da2c532" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a34c08c6bdde04c9f4e03205a1199612eafc45" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa5f507b8216a12338de4bbe7c5557b565caf99" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950edd9d29c0aac689a9ecd3cb12f4db3de8be18" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2087d1515f34afca2e736a5c2c7bf278feca746" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767add4f5b27c3cebdd0b03346f662500ed4d46" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43ffae101cdcc8a8a94bcf2d45e90fd5670aaa3" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ee24da376b3316cd08727ef53873fd71b04462" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3066f8f5d5345a99940e4e501bbc02abdd1a74fe" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4329e00aed0fbc14383073b4fc209c1f4ea6389" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdb751b52199ae7c0b18dec379a9436a26f534a" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce344fd531f943ed4ec4c223c8030c34f1c82dd4" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d9344b01faa3a51967cc7a024dfd43989e9c2d" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89999b9219af6e21ed4356254baa59c2242d122" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991d0d43bfdcf0d8c0730fd4466ef6b867711181" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a932c48eceaff2bb72092b9acedad2df9eed0b" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8003df508a19bf902f360a97fb4d65bd18f3c56e" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5c43960690dc7e7bd22eefe026dbe44e9563cd" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a1755fee76a9cc877d34ac51c0b947960632e0" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf2e15de3c56bc4ac3195baea0d21610f23335e" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58e2691131966148c15f366f493da4b9a602f85" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e450da45e749e3c85d223c09dfa234742124c1" translate="yes" xml:space="preserve">
          <source>def unlift: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6755dcd554ea42b5b363a75dbcdb644559ddcc" translate="yes" xml:space="preserve">
          <source>def unlift[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Function.unlift.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Function.unlift.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Function.unlift.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.Function.unlift.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5cd4f1c6bf225f9f0f34d08a76e17dfa0328d8" translate="yes" xml:space="preserve">
          <source>def unorderedHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc78a593952abc679c23fc654c14f5f6af39814" translate="yes" xml:space="preserve">
          <source>def unorderedHashing: &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7b4291e46ce26e62e4f038d0d66cfe988ddb62" translate="yes" xml:space="preserve">
          <source>def unsafeWrapArray[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.unsafeWrapArray.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.unsafeWrapArray.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca156668a527875ca74540733919e504902ed9e" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88ac5d41c41352c17618ee79e86b6b5e61eeab8" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fe15f5f236c75e756d9cc64aca4faa8585de96" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734e4f0cf239b6d4cfc8683cb0aab94a7c319ab9" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330e939592e5a8c23bb4e1a6a98538d251b5eadf" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6f2d9a0a5b2ba5b0c90745799f7995fbcdf7ac" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79865d9014804c2d2703599e2bbe9dd2f6e3e2a8" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61756fc670d0f505a90022b1f7d8e9e2e11a58da" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42890e0a716c0f3a0a1b6d7a9e0ab3c17d519b00" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5e5ab107c9c3dd19005c191ecf50fbbc7f9cff" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79492bf6fa9614040f574bb546331b1f64b089d" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabfaaa9c7c5ef429a49d7d4c4160a658021e85e" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eb8ba13dfae750678d249e02106c8ec7e76c20" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8e1fe6292ab49ae17d511e15b06b562dfba9bd" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac788e74f8b99cfcdb61d3a4ec489b77cdc53c6" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28708be4ec4a4392f08ff1bb9e948bb4a342348a" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9a4af8130159b8eef53bba1b657b1c82695ad8" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3340962eb2d7d251f2356d9b4475a1c4bbe58ba5" translate="yes" xml:space="preserve">
          <source>def unsorted: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f758a5580211f29107d976ac090b8fc59c0c5919" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;, &lt;a href=&quot;../collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0cf4e544f573113f15c7c1ba8e336abad96a61" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;../index#BigDecimal=scala.math.BigDecimal&quot; id=&quot;scala.BigDecimal&quot; name=&quot;scala.BigDecimal&quot;&gt;scala.BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88d15b5902aa916cb9f5d43ba488db1b6c48803" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt; = &lt;a href=&quot;bigint%24&quot;&gt;BigInt(1)&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;../index#BigInt=scala.math.BigInt&quot; id=&quot;scala.BigInt&quot; name=&quot;scala.BigInt&quot;&gt;scala.BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa48e6ae3ff5db3cb23b5651a65af584502a94f" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7807a0b33acbbedb35e5996b7d3e29d608f99f4a" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819f15343343e16f2530f594827da2f034c290cd" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;collection.immutable.Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf850221f396cc9bb718dceb40d0557377374a06" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;collection.immutable.Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c299bb2ce7d22c631cbb0e2adb0f4cdab0bc8a39" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c040d655967fd969469beda409cf70acfd40d6" translate="yes" xml:space="preserve">
          <source>def until(&lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac322c7b08a1243227b8649ad82b68f2d8d932e0" translate="yes" xml:space="preserve">
          <source>def untupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e8b6b8ec63f164d15fc85c3fdb96279919fd86" translate="yes" xml:space="preserve">
          <source>def untupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T3&quot;&gt;T3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5001d77121af27b5313a51c1c32c1d1f1dc988cb" translate="yes" xml:space="preserve">
          <source>def untupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T4&quot;&gt;T4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc376cfc62991decd21ae82690b28a888c348b0" translate="yes" xml:space="preserve">
          <source>def untupled[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T5&quot;&gt;T5&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function.untupled.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function.untupled.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.untupled.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfd8bb8f430c6d494ecb48dd74531d65b4d91e3" translate="yes" xml:space="preserve">
          <source>def unwrap: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61d58cf135936f12a428df0f74ea64be494f285" translate="yes" xml:space="preserve">
          <source>def unwrapping[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.unwrapping.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7f56ab578578512a0f564a243b90638fd063fe" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc63a94f6c4ccdcb63ef8308ccf04d5eb389a620" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7ce01d551ee8d9c61e6746004cfce0f637dc61" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4fe7c99f290a6d5c6863be68e6dd1fe785a5f7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5855fc4196d60d4ad5a82ae17149e3c41e77f65f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb558fab2fca635f8b0722128882b204a738320" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c769ce984683fc374b492dd38ccfe1e65d41e06" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79da5f15155f51d2b00405fcc47f1b151cb357f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa41b0da0bc18e406d63f9db9a79aac8885f1a7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4e868187ef35953511a3a20d8bca3c3c35cff0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7430908c17e342b6aa63f2a04b8df51195af0b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0610cad1d518c3fd6fbfd525d57049cdd98c6be2" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4368163796f7677128fe218c258013af0e3af73" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0f872aa76d023066a0ae86837493303d4c0377" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e1dc2ff4da9a3d0bffcefa436124902387eb19" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c9b17bb6f25cdca30268a63897a24008ffd475" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6d22efa1407c87d05bbb2263d64029922c6a7f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01df68b75af5b92460aeca52d92f4a501a139e1" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6495d620f9cae9e8dd8ed1dd9fadb692e5276662" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c915b44e8dc0c4b3c56fe79714888fbd2051ed" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448e43a861c6d67e748bd4ab44ba524d8435b474" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abac46bc27fe5c9346c37cd3dfdccc82241912c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439f6f4d9ce9a95ca14eb084ca0e96ae258e5e71" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b74bd21a7c10cc87a2edd1d69ba0ef190658f3" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8394515a0c38e9eab5bf2f6a46ab7c19e7b6738c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f2db25373017ec0a1ee517288eb7d6cd793347" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4151feb26566018af77a484080302ef2aa2126ac" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb48f7fcf3ae6e3350670ff9e6c45a1325785943" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3a8a56f01f8984cd16cc4200528d779a9b8744" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501f3252e4aa354aef016dcc3f81ad43ddef5d6d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ec6a47b3476ec131e632ae13002ceb3b7bdb1a" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5beba7acc24f6c052b154868eff96743d77719" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd68745d3e23cbb57f73a4f07ae2cb3dfb7595fd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715d001a312a7c73ee6ee0ad20f9f48dbbe1f241" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c2b9dc18b254e0ed50ba50499dff730b7c0f34" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d9ca4e8f96f8c1b00d22a999e128d1c1e873ee" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e3e2059894dd8d6e99c785af981174f1313b66" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4a5052558a16749385aa6228067b11b3c50f7b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b24fa3ef4b80a720130e77080c05392d2f71a54" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82293d9c4b69256a7f9c3485e42fd3edb8ec4128" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e31197c6d4565b619ef6598244e28b736e5ca00" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743ef6922a91ebfc39dda6a6deae877aa3e0d349" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81331e106a3b30dc36f8a4be849a3b446c3039f4" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ab4b92d5e58d74493a66de846111c91ef9195a" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f17bd3b4e2d15f2fa92132b36fc7ac809f61920" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30617e001ed8cb26fc31263949c422308ae82ca7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7425f6d506fd75b15183b9b240cbdb0c0f0f75" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acadc1de03816128ee15536457d6c73dbfbfa7c6" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ffc493e81a20bd2ceb64ec9fec181fccf5df2e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4404f6a958932f7cad8611cdc85b3af33f1388e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b8754c8301525ed6dc2434146cb4ecff248c98" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7466c88fc95d7e0c62b25222b771998f197e5b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fed4608467cb1cb1ed4aed7cfd889733d9c2d1" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c32954913e2171ec3937d1daba558cb25c5bc0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd303f57f296787eb50db90e337a2fe3bd0815d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1fa3136bccd6894cf179f27b4b252083b0007f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249f69a17d95fb9f5bb406ae6336c1f2fcb70252" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc513ed58c387cc31561402986efe640478b330" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b70ec5d092e85e2dc602770623a2b29577ca33" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca47c49a4ddfe685495fd222c3fb512406c2fa21" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26afaae54ca47c9021a3ec1e2c75b1f82ed80c0b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dad55ce907e25326a5f9883e8ef123ce9ced661" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6e427762ce8167b3f51598f811dd5bbdac0897" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ef8e35d9191ad264e8c879d3a450d229391f12" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe427bc94f49b94e4a3abc0e873cb3f1ffc916c6" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9546e50cdfc89eb4c17dcb6f39535e5aed293c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb7700419af236542f6a5edc4d02a75e423540d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239c2c5c291c9c6f97a44e1d50c02f2662b87991" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d0c877287ce6967a2209ef11931f64f1322c61" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca55b08b8ccd940e72c79b60fc66035559e36eb" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e952eb32ff2d23b797bb80125e161943e11cfa8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559ae3be69f2e47a7a2834aeb3d4c897ec802503" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194da7b3161962057c2d6d44e57bf8f1a146b700" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a26e7da02256729058bedaa0ea97d76fc6ef97" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a08592e61c97cb60d6ebba4d2800503b3b22e9" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16efe1f2a9a557beceaccef4329a30f438aaf8fd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad3cb3fe7a981e6ee5211402b1a034b5d02e673" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ad194e2889f9a225067a07cc06a69c9869e109" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134fe3680c1c0e6957a902806e09b94e58444d82" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab0cda535a214f435698d7b32213f2ee60e26e2" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ada2f9468a791acf0a2d461348853f384a85d4d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4898237df0e878849e3f31e540079810fd9e036b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de127abce9a10355d499c1901b3f589b36f1ae1" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883fce6efae876d0088765974b8888a251d52d36" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7f7c4a25b76e03cb83cf42287b621d2b128840" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a851a42d2241c96e6df309192e0ea9cf4aaca51" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce80f5ab19b16c9148f2569bca93c3afd754c8c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c77576572c3bd878a889cd5480f35a41944bcb" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c6699976c0d5e6d92f4d47965c19ab2fbac83c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac28ee808eccbbadb1dad7a6eb992720dd8e496" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe01f1b6105920cb74cf7fe51b901b5f9943606" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e35fb73bb2633cd3045c12f3583965eec442c9b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7c971775a63a2669307ba6e1be92c845e37d33" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b6ee1c66c7a923ae25ba61e561f80eb083bf5" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413aee474ff4d48bace570f26a1f4f5692a0e3b7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcc663436d18e9774983bb124ba1e90ff9c4c0e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956618a6c06336a82ad3deea5f24ce576a4534c7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991f6f5f6bc79531ae2a26db16a4a964b9bde2dc" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9030b2eed3d9188917f5e3cf18f91bf0514695b1" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;ct1&quot;&gt;ct1: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ct2&quot;&gt;ct2: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ct3&quot;&gt;ct3: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e632000460dee062c9052528dfbd25ede3243c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0994cb7d39b2bc78b39ea8c51104a6bc004024e0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113b75635ad17997c59205fd9a14b26262ae208d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48f3babad006e2fa18b48a3b722e4a21efbc40e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b915ec352b208fb98a34fa7b6fd9e6e2fcefa101" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326dc4d8096019b1d7d7a05fbef4f4323fabf075" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23109aa98156f0e029dd3eafe08811d614da30d4" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854a0cd7719ebc7ac17d86d0cd1ac9c83b51b2d0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9e0e96d2c69310cfdb78a0be8094d257b6a335" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ee13f613b3a4c8ef9ac5cc23a638bf8b7f8be5" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;ct1&quot;&gt;ct1: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ct2&quot;&gt;ct2: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ct3&quot;&gt;ct3: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a746a6855fefc087ffa16dea9b89e439f77ab70b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29dc82e06de2797880fc36c43dcf234d40b88dde" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febe50cb62ddb8b50a839e480b9a46eae5aadd54" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34806c483e5f50be26030571523fe6ed78d5626e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf28601716750d80ac26ba661104412a4729388" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfe8c046fe333740e203f481b2eee1b89e38b09" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553442bf56de42e8648129aacc2148f8af96c75c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d213dbdde7d679e361a824eb2090b12e13e5a70c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc572623b06b19bb3be16f09c408aa7b7a13c25" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1189bf316f702250f5aca6705dbde6b2676a9063" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a381ed8f14fc0fabf9dcf0cfe12f331b62303b65" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e08a5510cfb4aad73850057244e813bf5e93107" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c75cad30bbd06411a39678bcaf9a1d35aa8b592" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726be1ce52547c867d35c560af205ff4bf51236a" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e18f84e69be091411914d6c1cc4b43f1f7d49e5" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8c4a30396fd4229996ba1334735bc667eb2da7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7853b7120c48adb2479db2126453fc34c32c0a7f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b941e272377ae2780b17a5f93f16753e33070865" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6d2533a4cf4422c9f4d2afe1aa0802541c93da" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e41ac0646eeef5df1ae0ac67e466d8987353a30" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c763c0ff463de150dca4fb8bfa0bec9b4ca873b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53f57d8ae9e070610baa39d5a0ba5359133b7a8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e13f508e47514fa03c5f19e74ebf14d0bd1dc7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7010a834db2c3013b60c7dea2533fd25971fa599" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be837207df59a8a2fddcc34421e35b073a43019e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe992eef3a2d7158e667be380fa9aba3928aab9" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5473cb48543ee41aeb4016a22b87b775aa2e1bdc" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7559f30a7421596f20fbad8a7509c6e350bdacd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0c1a8c884ee957b037e3b3a0cbeeb8163d30ad" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde968512e8193573607f21b91c949664d9314bd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d61265b8e0a9d474c416a767329d1bd6fea137" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1335600cf1881611cf8775e87f2321a38747579" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6818c69c384ec75248470c08e9324f69b99916b6" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66119cf07abaf12f33c4617dd05bf4ab5d45b4e5" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303ee49b654b77eb4e906d60efe7418a5f344577" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c308f1e3318238041b618d820c36fc73a0e7ff" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec62db8b044bdcd958f79846d92fe19fa1cda0d8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e1c188dea4c81c311ab388d22352631486e38f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa97b57c9c89581504363e3307b2a6df1aeb9d29" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eb43d51b8def54ab71a01b11f529c61767770e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1e8d7f3f5e7b3652d24def1ef13dba772956ba" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95224f05c5c2f946c0d199340114b09ebedc24c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2198526c69cf97c943aa1335cc5dcf26d9006910" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d79deb04b282945b5cefc2c175990f2bb2a9be" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d2e7daab197e8aada7dc6bf22ff5d758174cf7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cb9446bd4baf8b086ccf4b44ffe3e94fb9e960" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7975901bb92bf09467200fee47dadadc7f0403" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e78ac797b6d0eaf698f7707a626c4f9a44aabf" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4a129b7e1fe4658f99ba298a6707b3d58d029a" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424a55cd4e7e48ab9fb6a13bb8d2ccb6b5ba8ecd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed35b8eddb96bcda446478e9f38b81fccfdb9df4" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60946e5ade5fd242224fc61cfcffc3cc8e0a90e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e269234052bae0157b1b75f23c0934909fc90a" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5877c0ad035a84daaff8c562e1eedd8a8abd21" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7dedf685920619a71c730a92fcb4351ac9f98d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78091a3994746d7d5ec116154c110431067a06d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022a4796c9d224e2eab9019abdce152df9099b51" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c943dae87d5b0de0e4e32c7437803e21e1c7ede" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65627daf3df3052d03808f2a529b95d3ba5ab5d0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a98334446bdf3400c4739b5a007f9bc866c09b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd72701757292e34044cac1ad842c3ff08d86f7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b2d855936a3b67b7dbe698784928eb4d16d7df" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1326fc8de5ab9deb8ce5f0414268c76b9bb7d374" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbc60faf9c444030f624c962c9599967d9db99b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc479c4725c6ef7217e5af1776e2b8da42d412f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e84ae4a92cc4cda3481d79840ff8c0d495f4197" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8be93b0127e35f5a8383fe1abcc31c27a112c2" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf9e844de48345fbb46710f0cf3d14b2b36aba8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b24c3e46b1fd954ffe532da563eda56db73b19" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5808c5efcca6997914b39bcb09b33be56b434506" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f403b04546a550b9d78349cdf30b43f30a87d64" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b091a920a53b013846e06e379aa5fce9f3b8b6f0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14554691996ecc8af0c4e4f4f4772486f1859e38" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed9c0d0dd1c1adc2b97281f49e5a95a1e13ae85" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be95d10d4634548e0ec7d2b594d93702a57548d8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f13a32f72843ff4d4bed5a2322f85465515a659" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315fd99b4f7bdddfce7b607d02e82c4bed980864" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10b1df3aa6eabcf2b0ab84c48464ae205c8ad8a" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d464e0ee2bd6b3440426b6392306fa7649d7ff" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa915d45795f6e85cb485fd452b9ffef6a29a5a0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226614eb7d5b0cf45f5bcd4ea633e30fb5ca0de4" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b76136620e5c8cb636d291133f328c36c7ecaa2" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.immutable.LazyList.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108faa2d25facf1fea29336421926c63273ba893" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8939a24e61b306bc1d0c77f1925d68a4d5bb292" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a4f62661202c6d98e199ec15c65684762d06f1" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1479664e1eae450436cc9eb0c40a2dfca3662845" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eda1101a4e486522740a95751ea67569d46421" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebea300f3570498c484be29212d88d7b9e3ed456" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0f38f5f713f7b8f8db9235fcc7539b07b8a253" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6789032666119aa1fe8b8c28b11c146a2fe46beb" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474bacd75245295d67d8a176229a22ac0211098" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dcdc144e56b8760ff1204fcec5da7455bb9082" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84946a91b0a0f9c08d29b4252196405f1bf0b69" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1477332b4e7d278912e9d65c7eab14b3702fa396" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aceeedeacfbfed82bbd6ad1e5d6febe980e97123" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89db1ac0d9e153859cd254c341fb935e26efca6" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69453f3495b5f9b628572d0ba3503da02df4aa6c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b84ae43dd72c70438e7aeb23a292ab233921b0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e78f1aee5a41f0a3c5cee62051b76cb19faacb" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90271ee7b68ee2a7baf630b8b0b3bdae9b91458" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6628683a568ae1c0839addd1a4a8c0d70708084d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c1ed1b33232534b7a27f3307bfd343598ca450" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33ddad7f03e560fdfca41fd4fc7c34a84f07b40" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19be017e3d99353e407bb3a59d28233dc3d621c9" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cca4ed45252cb225f446d68c74a26900f9bee2" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed8330aec76b5f27948698a2ab7385e004f51ef" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d6e2e02677c03540c2a0746f2df8cfaca6891f" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240a53a3e2d833df80ed6009a0890dd2151d0566" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e3cd894b3e30fe132354fb51cfc40458d059bd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6689bed1e32c0f695129c04507f57c0a9728b79c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4216d860556a626c424fb9b9add584f456275c83" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcad0c938617cdf3129caaec4e2a8f6a88c6599" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cbb1f8c09795c0838d87444544953cbde89eb1" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74eecc7fa035f620e1c1c88e7825e0e468162d3c" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0cda0629fc546e4e3218748a51534d430dd42b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e4fda8b2c0e2b3d8f51e4303167035d86dc77b" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8716155d441f74871912c40232458961e1ad7ea4" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc47750359cb3f57be77c0d46084b6cbf22ab62" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92710ddb427c154c78ad12d9e790916ef498db15" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b74d314f064a1feb34939f78cf1b666b883eec0" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1189fb3ad398ad49234783d0e6d81d79dc2f21" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c7d48d5af780034d5ede92075cd803781b09e8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a46cf563a3ac138c1e50bcf03998500bd618fc" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da34a485122df697a5f6d9ddf46c44b9a279b05d" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9248c258487c3de4f0ba62fa343dc3cf862c80e" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb334d2a0b33014b0ba6ef14e7777dde0c3e0f7" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759f63e32b0017a149b7d51a2783d7a6d4ccabbd" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c097ee3fb286fa7185824b3a389f621113ed21e2" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468ccfbba554e5a93dda1e798c01db541c05a923" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb18e1048b50c1b0d194300b54427292351e214" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ff79b02f3a7f3c45f62e67acee6f059852c8c3" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d917eba367ca96e0631e96f61347488d7ed9a042" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b30d9f2c7411c7278fec105834386f988f04811" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0edf0bc4a43ff531d7c88b62a13bb28b809a8ef" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231251f54100ecdceef114d44b1140d248709614" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8c6890fc03e1c32c4cc5f0b5a89137c628d0aa" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ce84061b0c95385913e9bdd956ed297c528b03" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b9da5fbc84d98ba923e9057f109f2adede41b5" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc925abdac4c837e6044e6fc08f630c9889b0a4" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ca043a185c53cae4e6867bd6364aab06884658" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3b2ac3fbaae701d2844d6f2d2760dc415a64c8" translate="yes" xml:space="preserve">
          <source>def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6686fbd23218ac5a632fbce747d3e84234c78ea5" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbaca847a8ed6a54ec29bf4a8a12e43d1468165" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7c0c1888fa03f3f7760adc35bc2446ec4ff288" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df91408aea7a3e060135f012347cbac3ba1e0479" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c635027488156f2316b1f0075e53c1a3db12ca3" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a7f8f4980384d30f26873d25cbf51366c0f035" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d0ce1df75a7a8790a2aa6cfdbce3126c5ee539" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94896a1a7c775bdb9bd27d195d898c028b7becd1" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed8590a833d85ecc0045eacba4678af8beeb1d5" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8f7b4ad67a092e99366d1152f79449afbf9c04" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e048698f71ac199d396c877f97eb94ffc697bd9" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33cbe3c367fc5ecce1ccf8a1402e4b5880356c0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b09a93294cd304d8e1a5d7258e9d1024058dd6" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de0447c6296eeca085733616c678b531de12b7f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed2e06ba3009a456458be4d22d9bdc7863d916d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38656715ab7c28d4582f31e4aac010f5bd0dbee1" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acff85d184c119364fb188a0646c1d88ad9deac2" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f86e0a26665bcbeaafacf9d2db656f0b91c9cd" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c672297a5768aa716236a46a00c5b2f0bbd7de" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7844abff043c3ca5a39b7cd45cbb76adc8fd7a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7564468738cd6bd3d570b6431e792af60de24b11" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e221e157980291276ce7fe452943b329363e86" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fefad73afc070bc7fa45fa7ddb45b84be9e679" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9dec449766d5183bb8f1dabb7e433e1c20896b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c6fecbd514668b8a11c3bb49e103a813ffddb8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642b20beedfd8959405bb94bd646d4bf3ace87d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a47ddea039991e3be3f8aa0d17b9185f763198" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012338e938759084e5bbcb097e07e605ba867b9e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806aeb5efb05346b7e3589a6b144792e713b4bfc" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f683c2602e1b76885ac4a9abd1c11322e4cca55b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c93abf36d1ad763b44fc54cf4ceb327458a91e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b71ff3d4705d869436a1db084f74bd2b0b3f79d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3b99cbae98f843aafc37fd497aa31e3bf97278" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4c7848e1d36b2ffc6ce2d1e357ccc9b6bcd4ed" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7f1e244a21768e0ad6b910dcc5236af2dd3d19" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cb2a3605ba6428baea2707253789f348b1028b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea1e3a1c8765e1b102e7295e1760451eb821155" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155e3562e08ce5c16866f3e51f82558e2bfbaac7" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1636896e5bd5941d9215c13bbc4a9b96aa26c384" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891b03142bb9566eba4d13e054267adfe52a74a8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f96159cd7d2aa43e450afc4bd8d1f407d63bd1b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc1106e1a5e67fa8724e65072b6c99c539163a7" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cfb898dd21b9a26fc922c5efb7ebe4b63050cc" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca005c8b888e4fc9fc5dcefa57b59d6b4dcea32e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c7dfe87fa075d83a348718dad8f2eaf8e1ee6e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ab227a22e832102283971646bfb49816d4ac43" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e1594fdb8816174eb156f0407e6ec6792461ba" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08f8658c72bb0ad7108e709fe31f135d16d488e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3663eb9826686e3c45b8cf030dcd96bed816ef" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79d6beed4877176c9ead26b8c8d8b6d738c3637" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c1d005305fc8dbf0354162f0ef5642ec418501" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d8fdd32b791b3e86f872852e02a29285cffafe" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c293ea38a3a08e362cae34817af1b39a7b9e66" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5eaa0dd38b754936e1777b6092e0805831dd83" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a640474fe1c8ceb24ea40fa5e1b42d4b6efe5f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc752a201142c4ca3af04b662379ae0a1691ff3e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a70648fc1804d56e83dc98b6cc7d5942dabfbee" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e819377f6b5a604db319892fb080e63275f99ebe" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0734ae0570b8a9ce898e725b58cc6b934cfbe76" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5ad16d4336458da9e4504232c64f1e0225b5c3" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1980f2b15792f30475b500669c6cdae2a8154b65" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9363d817f9214108f3fb0df673181a6c97ae9690" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0617bd8b5f0fad50cba28166f3773b08f493726" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2491a3a47ce24204c7cd882ceb43953d05add118" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab5ec854d446ec1c0ccba404ccc83e46192eb58" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6167e568d0432638e990fdf3ed104da5ff9c6524" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaf5156c0c99af6528680bd2ac89443438e8537" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89367c5c1a77564b1cccb81949c8d44d9cb44b0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3a053d0bbdb20bbf267d1905e6d43894408e38" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b15af44bf55bba930f1668f6c68e28d7ee8cd4a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa8e93d9f0ec68d312b9d8a9ef259db69078835" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d429451ac63c8b29da5683b7a18b448ccad0ff2c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fbf6da4c5b3be0423da4a64dd4057370f580fe" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cd11349d4f238b6052e3dbc9b199b368ed2134" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285507e6a71cbc6e57ef223edd2291342aa73e54" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359f287abb5cf661ca5b2d2f25d6b0d76c256b7f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abc9ca0bbc7af04df8f78f80494f2ed52cb633e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfc796b863277323ba2481dc47f5231b8299d1b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd70331ea6c472cd0905ee5f07038451d8f927c8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc81c7ced9b9a0a4e367fc60971b02a0d483c5b9" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d3ab15dd1eaa139066a845352f77d04558de53" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5606c7da33192b759d38fe893525891650942c4c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1b883adb7f4c8e38de3974b97a74fc0da15d30" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8accd702fb28954588d1754143b88938813f9cac" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33422122f7714f0deb0b262e8dcb85aad075469d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f182e5ec720b151b9fd07737ec25eaccf5f4fc" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9063049085b9724e7015569c0e5e08aee3e00559" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.immutable.Nil.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Nil.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Nil.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Nil.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053105bc2d0df38bb7c56c412c4255cc6602cfea" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84331e8b9d5740ca5d309bd6f103e53074ef0acb" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113f168f6398e63aab862c5a7b95c3b84413901d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e06c8a09e23d3b8a78524c6378a9b9ee97fe7d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612956cd24ee2106ae025a0af9a507bc2380fea4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2527d80f7e9367bcaf2f9f0e4975de9fb10c75b3" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62aff7af2313cba8f67934b70f7a866fb13b76ae" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8b1a3bc3917e9be4311a9c78673d38cc5157a0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43d5aba84b8b69e05ec0d6170b6630af8376679" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d8c46feadb8588844bb1dc69076faf36281fe7" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a369d4e2192399131b2dc695f67b02b134fa507" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0005a2ef353cfe9def853bdb5ca24cd1f092cf6" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.ArrayOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;ct1&quot;&gt;ct1: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ct2&quot;&gt;ct2: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab28dd8fcc92195bb3a800a7f5d9ae3a7146c350" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b088bd421ce207c828dc146bb3329f05e66147" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e33068a858791afe02087aa282c11ad4805bf3" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21605fcf7094471977e8c58332bf5d2490068aa8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012647fec0b04107802446d57b0d52a1d59c18dd" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b792ff2f15421b1817a97b0633f939e50e4d7c41" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae8a6f9b84500c971dffb0ba068e20eba4106d2" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0b38183e6eb70b8f287f62c50356a5c3bc3ab4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a078be9dde333f1083d3e528ac48efb1b727801f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525b7b908c1fadf68fe5798baea822982983ff7c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.ArrayOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;, &lt;span name=&quot;ct1&quot;&gt;ct1: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ct2&quot;&gt;ct2: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a001013f8a46abbe1042aafd3aaa2b84f3adff2" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd5f6b419613d83f8afe129badfd693ce894cdc" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b809c85dce9d09b18d28e1040a00c6d3d9841167" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf5df5f4930b96ceb493fd659d5d28832583571" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ba4b2691c413fb10a1544474ed995c2f63a0ec" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ba61a10fa34303cc89605f42f611706e6a02bb" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe64298c5986255e8ea1f2e907a6ed16ec0c62b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9464ff9de00c2eacaea43eb05ee8b7ea40f7e5ff" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0bf1238ca7bed000f9e7c8c5feb696bdefe6f8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dc7162eb8b7cd187192ae9d9b942e9b3aa9dbe" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bebfc7535842ae9bb6bdca8451a947c107ad299" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc448d7147fe089731f8a34fe2f49d39c29cb7a0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9fb0be47a8c1715a2fffc8250cdd8aa404d995" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4ba905fc7ec63d578c493920190c7c6db79c3c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7c2cf25202a149816ce864d2ead694fff0c576" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fe8a09a0f7edc8b4a118e1279a62981e677ca1" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330c57fe61b00549246f754a08fbf18fd77a4b51" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acd7389977996703f04e6dd67ee79d75bcffca9" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89821b60325766f2dec7ced91ca30adbbc9cf6df" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b71d16542f128594b285bbc2444e68604c23a4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f8e9283e5f87e87108d206bfef0ff1800f75c8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b723a446d5c21747bf7e198e43c49a55bc07c78" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae28798c131a218d38cfb66d2a2fff2c000a1d5" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b096453033886d87eb74cf08c6dc8ca8c8e7ad8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674ffe512a3e9b9b685ef1dfa59697aae71ff552" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a180898e6eacf3598b2bfd836489eca096a0c0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f054b188ca4db601a4dc07daa83aa4f75ceb721c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7b1cac610c2bd2f5af2e05814f5f713cd01cee" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3300f56cbeab94125676a665e7eaaa4048f269d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b86747665d246c413684f0e79edd8f732df70a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a733dfc2f43752493930fe3625fd7dea6d7624" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d8f18ee069e094894ed2b446b3f8717652cc22" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab12fb5a907e51324861ecc40eaedcdf88a67fa" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f1a560f626c7e3944cd1255b9ef8bcc21edb6c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ee75675925208180c08a799b88d83783756ef1" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d2f1796a80c747e9e1c3940ed6472947db9b4e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be049a43b5222f7d934d993a2ce51ec0dadc805a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2515a7289cf4654743c9c82758902146af6693e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7407d1a54e10abd585dc52453e8e4c4db2c1046f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb54b6c63ab1e7bcaa8edff5b09d3c7a51bd4934" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c6608fe78335b5935e05c278c5bb95de85b37" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accf8429db7d44e0aaa0ff1f2345f81ee4b4ccb5" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12e19ffe40dc7d29aa8f3c153ae7da2c152f119" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d88008b2f562f127e1b162b2e3410e1838d364c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c2453ab0efd54b2973971d535ed2054d547e7a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096900f3d10a111a951678a5d35f577a8c06a3ce" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57f13c8d89517f19110f531bfc1608d821a65ab" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1ab668d3b7446e1b9484444267405e709dd302" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2e2d0a0b065d3d83ca388a4d7a4f0fe93f6f62" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa346388e273738c79dd8a81fb67aa80a27d38c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3068dac957893a388e4f7c631246409ad667d2" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77febf138d3b919ee60e29d845d2c0336580722e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4a69ccd2f9104110dd00b2dfec48619c754b40" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46173d9012b2de995d6150f55ab9e6765e177da" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346de77086516d077eb82932b872dc076ba256ce" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5236dbd36fe7275e7f647193b128fa2bcbbd7073" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bad887aa518ef3fe0bab68f11b2ccefe0200450" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f84cff157fbc52ceef49ba1058b4cbbfc69074" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d8b20b5e82e18651ecacdece39d7e4a973b1db" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462f06d85bbdc476ac8bb397a8a66210932a1da4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ee17be38dbf9ce83e15a915cf5674bb9761c4e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25498ddfecc8f717904ff062abf84caccbcd45c0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ca01af7fde42abff33e26ce2226be0736941a1" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbee1d006e8232db062660c5f0386f495dbad050" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acb6299a237d310d7cb47b4e7d8c9e096418616" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921f099b3c5c45ad71b6fbeaaae58ce2ef7b6c9d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579832ae00a4b25537ac31ed8befa9e39b4a47fd" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb69c651232079545a0a21b5ee3a83e8200896d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6775c2aabc9ea6bff22db6c68cf40166adb71b7" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b350bfa23226dc5cf7c962e0633b94421e0bc2e5" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfa2cefc1115bc8327917cc9fe1f2bdb437113e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4493dab6db274b4def8b7316ad1fa23ffcc0ef" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2feb49cdf4304a4e13aba9c0dd2a08667d4d93" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b5421e83169bb39e7b814077ff5e6a5cfe8a63" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc0cfec6b2d666728483c3faa5430069f6e531f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e346f0029b3920312f7ff738d696fc01f9017c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064aa1f67ef3dd094a0396afa3e31e2dc73c1848" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f18746f4254ff48b627e78a85d6bbef43896e0f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b16ff2ffc4524bdd0e48a266dd00f1329bef79f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98183e1c52fdddb75638c7a89898f0c1ed169440" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aef6f88c01187a2ad1c68a41b9620f39efd6fb0" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3151f4998c15e76a2942c3f532a0c6e55c877ec" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.immutable.LazyList.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608b05084835f82f7208cd0928a5674d83616b6e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef15a9408a9c966dc9fb323def9f7790d5f32752" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aff016ee048bf4717578e86122a3eacd0f19689" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbd2416bf3da8602f35449ab0e056b4fff5f33f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b04ee0ae8be48b7ade8e5918239277d7d923c5d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e1d70688cd0327f1c39c985d391ddb9305b5f6" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361430bbf8527f1c264fd98a6fd6a1a7c48b23e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124109b609846ca40f55f5ecba9ad77a9f444efb" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bba5b00dd26bfce8519d6e5677d3eae4380dd3e" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93c85647b6fbd3ed8797c98ccb78454987d8351" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862d909f15865b2bd874b76e1ee85015f12b080c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90f04d9f13231e35d6b1061ed0a80e665e9aab2" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72f8b2d2ce7ad07bf8731be71150d6174ba07d7" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4316675e459add32a0847ed5f9b58df3b92aa10" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf472003b9999d99b717c1fd5f060a81a314f6d4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f836d2db5af17f8a732e443229681e8d34a3567" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3baf31002e0605b8141c60fdc42f7570ac28c4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186ea9c0ea23eb165aae4541ccca740c50c42d1f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae069cce8e7a5be6d33fcb58bee4c10b843ddc49" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e884ddededc9b90276acc2e2111621927aaab4" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18377e5e7fd657c8c173a41ba910fa3334234ba8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20da919d2745c6c561f511fffd7fba9873f3d38f" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7754dbafd0c9d162f25037d48af40bf500089165" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912868d715449feae72dee36ba52d82ffbeea97c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae72cf9528f38047e4bb0326c6ae1871b3a4f1b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438a5c7c9da58d4e1726ee91c379ec483a329496" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae555cacfa3d088a8483296f1aeaa912c9e2c15" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b48bc5c28d6eae774e8dca76e8d7742bc81af6" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f658e45c5eb2a9f163b5424d179816df0b661a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e2db16e4fa1c3a98a9a66e79ceb4400846eb3d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045bf4ba0df23995b07773dc261bfb8fc49cb002" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31befa9aa3d9752bb88083e2c39b6899e0912f07" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f877409a2d915a2fb2ed014d4918fc5e4af3eb6d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5315b04f5715cf532d77483199081aa81b6524eb" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c833edf9584df1b085f3997983b4e72fe4a334" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d0b5621e4536908500b435703554e18a9ad658" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5ea310f917f4f99e87ae1daec070c84f428ed8" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbeaeeaec32c3a56c0e987c0b0d9e71ab22d4e2b" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9349f63b491c55727f275eefe6c6a8235b174937" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035dfa6ed9e219107c2305bcedf10299fe7a135d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18349560955425509618bd12d55b7a6df981e3d" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdbeb3b184c97e821d8c8730026c0293c1bb781" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00191f759cd13685d140445dfa8f317e07ac1cad" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3878bc0929bf40c49a451675a93c2d6a37dd8aca" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5390fc135f10807830f0a8db74665dfd03f411de" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8cf60cf19041904ad95dc7d6d6a9465e8b6537" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc532c126845a682ef63623a2a4adcf76ae1bd6" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d3e7b130b13dc87952b40f19f139a58e2d1234" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaa10b9b7f2d67f3daa983baebf075442ab4a34" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c162117453e9a8f7d50e8b9b21cae1afdd86d49" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b742e1a8d424337f3714b1c6e9c74d18b105ca15" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850a15d2afe0a1877680036bae2c068c57c7a0b3" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c88cd2cfba0372b7b8e3af170dc1dd9af8fa9a" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e2406741af588bb01e6b3da650d52c9f7ab8fd" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3d3caf459ac3749ddfe617c79b23f7ed23447c" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd51797c2163dce832d4b791d22df71336e8fbac" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6954223b73a0d0e7ef9fc948beeb12b50fe440" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2e3f5e62354846190e1984dcdc09d0517279e5" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539885dd8dfd72af6bf4816b12203df6501f55a7" translate="yes" xml:space="preserve">
          <source>def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;)&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491e814594d42b836fbadcfd2e628c767babe266" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c25d68fd5349213d910fd3c897e0ecda772c6f" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56343a9a3a6cf89433939af6d0df199b8d4e090" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97281143b27f79464bcf02052837a1b27483d96b" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4bc49c2bd5b6383c38be270cd7a3320f1a8dc6" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111359b298f0d02ea6f40745ed4756df36bd43b6" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506171b8f55d12130c934564c906935bbff45523" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9df0fd80dce0aaadcc0ba8f59287704179b774" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989d2c6c9aaa3c55e8718b211dd998f8aa443ab5" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;included&quot;&gt;included: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104bfed5926f4ca5a23a792788fe02ad3278a068" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eab9e37d3008f8cd73af843b6acc996c0a90487" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2323422e0b5c0603b6167d607b535287392f2ea5" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b8a452b5adcae515d6c2820ae308048c17c6c1" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533f1d9257141b52cde29b5fe48904bd882ded5d" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53c01cbd55c9795f30ae4b441073b59c60f3d98" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c483b3f6c1be8b4435f05f258591237ec18f7e" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;newelem&quot;&gt;newelem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3519343e7d05b3dd9b2bae57b23a655b89bad30f" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8184bf6dddf992cdae6f1d672eb3e36016df187" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7cd1ab5ab641d3e91eadc994b27ce88b4b7795" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d755ec4c8ff3c348f7cb15a035c9ec054aa4fd08" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb078d218fcb978c7dc4e361963a0e5c7557d5b" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99dbd26283bd215dca5bc0766de9edcd32dd350" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bec2532835cf030006c9347d27944533e09c2c" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fb77ca554b6b386ca977a03100683602865367" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48cf9cb4c6bd50e395e67c030e3c884803b4e4e" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6324412706a547d66f350100fdb8c93124511ac1" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0a4a674a698df0897e08f25f8769f4b581503e" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7874f810aaac33b21ac2fb6b3d8a56f076487e89" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58760a6e81a203bc86de7633d11d07569029863" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35df8402566653a47f858cfa32210c009327ed96" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829becee0abac0fe5f0ab36c69a3d47cc9a86e96" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd6f76f46e60815815b35e71f71bffa0120aee6" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2ea28f6af7433a28dc0b0e8272e53d904a1d86" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc0d5404b7214d1c58566fb00012fac22a6d53b" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2683aa11ef663c5d2a36d8267ed1bd71275193d" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5759e4fc61bb43c996935b0bc76fabe846e5e14e" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa41901bf9a7cf3e3397be8cd15565025b9e185c" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;k&quot;&gt;k: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;v&quot;&gt;v: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b788d7849f55b11ea8f22d9c20afa9c9f6ea79" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d5a7bd96255dd47533a19b09c792911d26dfdf" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b357422ea8632ea183dde9439b683f654d70381" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f9c259bc108436b3c605e17fe4582dba77c6ad" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daf9c69906c320c4258ddac99615054381f1cb7" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c7f0897a60178dea4de36fea58eb0a6c964341" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807350c675a279f03d366c4f25c398365faa2a95" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22dc4a66f35145f7a498f965f9c41da96abe050" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcffbc9d025744db16705e2b41d16bfc424715e" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed6c81bf8e9d551f4511f1ffe996a3f36ff4efb" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bbee557f598a39b4cfc80b4f339d7173d14e42" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f786452a2ea2170acbdcf43244fe90fd1f7da279" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c68cae1c531405720c57765e06ac62425e871c2" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a0db6e6700e177ac69a0b0d8347a356b077026" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8caad10a42382123cd555a451880e67888e2dd3" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d82bf8714594ebc6c3523f115921c8bf1121313" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111d40a6e528730507561fb5d97f942d1499b616" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5791b231ce0ba22c7b62b02ed85209f3542b68" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28de9ba8ccea1166d0ba6517943f166a1bec85e3" translate="yes" xml:space="preserve">
          <source>def update(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d3808dc5f0d7610569067e1afa706a061565bd" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bb53ef61fb6579b04f14f7f13da8dac0526b80" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97689fd2e84bd96a64f3920a1fd15f153db53117" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca9ac55e81a4952b5f0957690511a3e4f38b7f4" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed13dc9424608bb4193b2d1dadd6b60b56b3130c" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4860808f713b5252dfa2cc92c0e69ac52e516a38" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db562ef2505dae560b36170feb8f5a543615cb5" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c05ea9a2ab6df3b0be8d585159d0d0ae1cb056c" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bf451b3c00f76072f545fea1fe8d50e7b89552" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0f1a079f61d82697be8711537eadab6eb02688" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b97c351ac7960fd6d91355b25911fe9650742ff" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fe55945df8262f34bf8823d72ff3b0cd9c354a" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f46456b0fa97233197d4a6c2cd44f8379d03cf" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e987d4d117d0b26dfbce7c5f76bc497999cc9380" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d924bc065e2f5cf05c23b9c87bc68d36d76920c7" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9cd13c713201831a2b86234fb6caa9fee7c616" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd4a1fce23866323aadd561490b044dcb83f29c" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c5148f54f67e33eef7e2662aabc37e21c582f4" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1702be7283bda5bf6bfe4d4e808e46427f2d0ae0" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05476eb652e3b35866813cef92446cb5b1f9d48" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed01a17d27d7097d673f72ffa1cbe735f97d593" translate="yes" xml:space="preserve">
          <source>def updateWith(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257a2b66423ff1528c642ffb2beca02f28aac8f2" translate="yes" xml:space="preserve">
          <source>def updateWith[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.IntMap.updateWith.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.updateWith.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.updateWith.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.updateWith.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd71c419b936a188dd34ec4551ab546794181949" translate="yes" xml:space="preserve">
          <source>def updateWith[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.LongMap.updateWith.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.updateWith.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.updateWith.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.updateWith.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0276fc82c6a475e3d49fcb177beb65faad4a9b23" translate="yes" xml:space="preserve">
          <source>def updateWord(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;w&quot;&gt;w: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db60764a2faa70861e13160b3cc162628868e5c3" translate="yes" xml:space="preserve">
          <source>def updated(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd57dd3e9d8bbd0bfe1cc999ce9544ba93c4f512" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67d7252da8c177373351daa0894824fbf773f4b" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bce717ca69de99eb542238e7aaa02abbb55149" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6883b5a9f928c43041aaa1009238ff1cca47a8d5" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759e0fab38cdd7101cfd564c19d4b9881a9dbc98" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36df38c89e1d78b338b209e89b327a5341524ed" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf17d9bbbbc7a183f11167e9d9989288dc9ba53c" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabe726b15966cf790df697d6dc389ceabecb891" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5446b4c217825426fe8f2ae35aac268d9b56a68" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0e64a1c1b16d5000e2bdbb4af35cd275eeb618" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70158a1cf739c2fdf44b3e9383370baf9036b5ed" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2825509d18c894eb3642e884c5f71d699b77af" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d3b4499d937965d1a5e9a27088e845525ccc45" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b0a279b900d06d8dfeb5794e5e27885783052f" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac837ac55c97a74f8075dd8caceb58041a24190b" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa1e0fb327433c57717d1ad0bb68f39bf0a75d0" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988b1dd471abc6c325a2a04fe5d095d28ea9fc13" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72aecc54b4d7fbc03e926b9e095fdedcc2ed6979" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76616dbf2be365a37925dfb4528a0278a131d8bb" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d969ca08810bf09525c8a7db1d293e0ea18cff" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c426b924f22a1d7d989ba770754379ce72d1fb" translate="yes" xml:space="preserve">
          <source>def updatedWith[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;remappingFunction&quot;&gt;remappingFunction: (&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.updatedWith.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f8ef360d34233ed815a20da0fe570014b7409e" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fc0d085d50fb6641f5c2f610157d6290e062d3" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672f03bbbcec32a680fea86074ad59220e471fa3" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e82142377ba96be4de0c411835e549c5ab09641" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a44058da89dc9275efe7ced4b8f00087d7b8bf" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8ce42e58f53fa78b157ef3fa82189009b5b5e7" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0426d6aade2c238b7c9ba99aab8b340b70602385" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d11d73f4d803d2c0610aca84c8b88ae9cc253" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32b92919d840b476e6058cf4f18d2b25295a8a0" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e032694c89e5dcfe88571c5f194b7271d10e69" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfa2409d3876c890cd6d28362193c25796226c2" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d108f5803128d089affd340428c852bf3443a844" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448c5c7943e8ac5e8ecb25dbff0d80763ce6c54d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71363b9d032a116aab3f552fe299681eb4d7a9c2" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65dee7304eca6174d88a300f07d3ae3f2ed86e3" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05de4d2f16d7f8a1445adbfe7f79b17d64b7e1c5" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5f271f42eb5d45db89c8ac8b7845adcd0078ff" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780b97dd2ec3a7196cacbe11c23c48fbade65f8b" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411c726a5432f2ae42caf6cfd2d1c4d42473adf1" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.List.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183088b19dd38d9d810f22be6154df40583a8e6a" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828ecf324f5705a6b060a96bf0a0a30583776d2b" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371c16cc0767a8cc87531390c7fbd8c0c3f8ee92" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa932bdb9d74ccc56946180aa45fe9237b63ea6" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db43fafc33251968ff31250930177ae56cbf5a5" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e95f7457af2c8e74e958f92d7d877c02109c8ba" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0460bfd48a88db99e299581bc88f96d163ee85a6" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842a1dad1e45022f7c7bd68b97990e7ef2b6a73d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f03363e1b4f81c20a3c38ccd540c1712b067f6e" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e14a98abc1b47414e09005727fabf3069bcefc" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54010f8374d4a23d1ea1778b029d69945091e8cd" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40238c4a945d0818cb66866eae32c34a3c1164c7" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.ArrayOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.updated.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0564e2ae528325bf37f418fde8361ceab272d4" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.ArrayOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.updated.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb68e5e484a3e8e9e69673aaa0c1efcad3cae8a" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3f0c6f5b3fb060c5184c9ea8cecb613cb516d8" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92e2ca0f8fbb52be2434cf91e4baa2f6f5f69dd" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7236af1ee24558a78dd8186e4c9813907f8c288" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a3d93c26f3e7f04c99a2e075e35ef06654b14b" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca4fc5ca0a2ff568d60e2a2506e2fd7dc1479ef" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e048c55b73f1b4c55615f8233b414ed328fdb8" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cb315ca9c3745699349d456b7d2199212bf88a" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0702672b8e09d4ea6dcbb9788445e47e90b36d2" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4bd4fe088aca9240fddaa961dab051f74a050c" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4f2c31239908422b52df501a67cf56f2ee79a2" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d642794cd220cc207ebe31237ce29c9f1840c0f1" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2a345c05b9b1c9216329c2bc6e9fedb08378b5" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c23ddfdf9bce745439012bc6603992fc594c745" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcad4602bc972b3439ce11c03c9703378fdf91c" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be7bc7c1e5fc642b5bfa1a002f8beaf1b8d0738" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccedeb3d53808fde7f4889bf5fca0ef4dd66c4e9" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed960104727da92f32d166908f704f79d0f77d69" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1640a2cd502019fdfc82f245582982a5dc724480" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a87bb979c0a33ad77964b4115c1f9aabc7bd371" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407c790fbece1060f8e6fe0d409080949759099d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6365d7fd811abff138607678988e024b370fd02f" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c313c06872381ee415c6ee8afeaab2d085810699" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4085d251b1054cbffa816032fea44b7c3e5d528d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c682abc1df63fc51f4441cc356bad9c297bcb3d7" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8650ce4832a2ccb4c08ba39770260a1f209d7a" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73be6678e72f0056332fd1ccc5d40573de2883f1" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a09c9c0b660ba36a3c20c6276865bba4edcc7d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec558e0e066ebebe64dbc7fd7f22ccf21cbe9f9" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40253acd0f8208c2b532762c9c65adb1fce454c" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f23a17bca44db414a363bae2c987eee72a811b" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b5af6dd317b36f703b08761abd141036c91fd5" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c410a2eedb20c684ada1c603997992c10c40b2" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c22de4dab9e5f3a1f42eaf618cea9f290b349e9" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.List.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff6108f138a86a0f0e8705450ba2ca444dd37d3" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7909af9184206798b4a7f65c67208b7d89c5fdd6" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af7180b6321b7ae35ecd5a568ea875cd0289896" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1472ee385bab33b8e886335e091fd3726e8a34" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf49b257b8e6552f0b1cd765b8dee0167303eaa" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b548655fccbcc360c8c7ece557e93e5ffe18da" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.LazyList.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883850d283df3048edf1f21cbcf2bdf169f8f64" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0abf10399521dcd8c211e313519884974f9988" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f4b1a9987a839335f6f0cf63b1419a2193c983" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.List.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad81abe155df07e5fe889887a667b8178ffa3c67" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22aafe5fb92dff17a66667316d1461a6c628552" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dbf1f7bc88a288d237f601df0d18e93b9af665" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfadeddfb1c42054b41e4bcd3916ce08f488844" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9124fd0aab8cf5233c0fb1fa530c7e9032d5be72" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50481f39e5a9a03fff3211fb201c39711474d8b" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb9c8550b15664c9844fefabccdbcedb1bf2d2c" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbe27d58743e4ba7a6042ed92cde8b2b313361e" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746cbcb4d8feb58b8abbdc320b7a63baba98a017" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e542b416b1e35da6778ee6059465707edca22a" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Vector.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cb8fabee4468d8edfd5ace03fecdee1fb72b45" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2239459b21434b88253f5e943aae901326e2f5d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ce7aee20f83d0aef33558363602400007f3da4" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2702cf9424a9bedc871546c1e2d0774d79c86a" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4621175d5f12d28339788e235c6aa78eb3f957bf" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcfbfe5712702b61b416c788e42806d9a0b4d19" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7bb6fe68535821e8c0e9251502fda4fe75735e" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a3f6a2aecd7b02e73f781fcb4674bf90cadd4d" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9af8d16d1bb05e6d84cb1d1c0c41ae5ad17f8dc" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcb5b5e1059bb5c1c237fcbf6072e0a7b9c428f" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8981e589b81c30885cb283362b29b663d9467324" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1a5acc1704c71e26978836c2b8df20cce640fc" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a324d911ee812b93df449bc216e065a621098174" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1a625ab3270cbfb2c5b231b890e4182d032d88" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c22c167aee76e28a9d1005d0112695714ed6912" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa97139208c8aea1970f12c4b4218b649416e54" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e847322fdeff1cc0ffc58f8a8b93f8695cf31c" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ce8362734e4cb7e121398968144e4bf1d82fa0" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b096ed0a2a2681c1ba497f60bcf53278d4d5be55" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc95e790f0e16f4737b997c488f3c148301ec523" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.updated.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4440a98139e59e208a656154a6cb56626b56be24" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.IntMap.updated.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.updated.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6304562fe112cd53e0c7d69a77ba7770a38b04" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.LongMap.updated.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.updated.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bdfb3b349c56d3a117de60c5ef36c541251e43" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.HashMap.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a713813543d738a5905fed651ac597f2d4de6326" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.ListMap.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca4bb865eb3e869ba7b370b98b2ebfb5b4d4b60" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.Map.Map1.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca846f61f29578ef1f98648ca235cb2ff4b62137" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.Map.Map2.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7ae048adc72cf92c71358fb99638f6bfa0b450" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.Map.Map3.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737f7e1af698b871c1103dbb8ab71ca81c343821" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.Map.Map4.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6efd97a4846a8470050f07e8a189585f99913f" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437cec4f27d5465837507aaf12aaead6dbd2e2c8" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0592d04057914815dedd15c343304fe53bdb4b" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.TreeMap.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d942224b11743e1e8ffe41de2482f1e47cf4260" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0a1fa303c8a927effc71cf559fd66e7e84b1cc" translate="yes" xml:space="preserve">
          <source>def updated[&lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.VectorMap.updated.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.updated.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402bd12f149f3aabf18533e3cd071d60322e80ae" translate="yes" xml:space="preserve">
          <source>def userDir: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6860e107ef35d30ca5e99a5bbfebe47856555e25" translate="yes" xml:space="preserve">
          <source>def userHome: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523dff229c06f4d67d8de18209954f5b908d1eb4" translate="yes" xml:space="preserve">
          <source>def userName: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fc91560b70ff5895479c13a6306fbe2b96ef26" translate="yes" xml:space="preserve">
          <source>def value: &lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8d13184fbc766341dfff3fcc0ce8103b46dddb" translate="yes" xml:space="preserve">
          <source>def valueFromKey(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f3b4369113d5f4165617c1c9dd66ba05c15d11" translate="yes" xml:space="preserve">
          <source>def valueIsTrue[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b331d8158997146086f54ff5d77e1f24499906" translate="yes" xml:space="preserve">
          <source>def valueManifests: &lt;a href=&quot;../index#List%5B+A%5D=List%5BA%5D&quot; id=&quot;scala.List&quot; name=&quot;scala.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;anyvalmanifest&quot; id=&quot;scala.reflect.AnyValManifest&quot; name=&quot;scala.reflect.AnyValManifest&quot;&gt;AnyValManifest&lt;/a&gt;[_]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a806a34d0666a961f6ef1282a713086dd7d9f7a" translate="yes" xml:space="preserve">
          <source>def valueOf(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6d3e427b9dd1d193013887de70aec8e78f5245" translate="yes" xml:space="preserve">
          <source>def valueOf(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b46bd6370f37e1ccb1eb3acfe3ea02946c5e1f" translate="yes" xml:space="preserve">
          <source>def valueOf[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;vt&quot;&gt;vt: &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.Predef.valueOf.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Predef.valueOf.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943acc17f9d1131ca7521e338dad91b403a38a5e" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23adf5b4c8f24d06977128a99e42bca31dd334eb" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;], &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83559143ff314c06b2a644fcbd8a95bcaaee10b7" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7377fef275f16469110fea6dc02b155059818591" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3254c368b3a2eb2f1a0d59f259e3373d7cb7f7b1" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d3767559e6ad878447383ea06b22db50682bff" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashMap.valueStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2dde749ffca6e81e94d652d8aca4e395997a0ed" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32520b09dbf2464216bf8386c1802052826c57" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c7dfd1032ce1fb83e54d7358811aa9a4235c69" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde0598f859e5a612678859e926ffb6d81f9255b" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b709505a960cb9c98c7fc75ab7ce496405e6e81" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a435e46229122cbc4839ed1e0aed2c1a7702695" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b4cffce68ba4c870cc3c51cd7cbd4ac7915c5d" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68422ca3754c17022a5df4f29bf707f46290ac4d" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced7f69f6f0d07d33b43a0c898bd0b2411a5c2dc" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab48859db75c8beaf0167d247d1cac273ab0f47d" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd9bdf7e4fdff0571771cd89a334066cee789a3" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9b599613182c1e270ef7a403bfeb49525ca7f1" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b3a4c217e0f7680ad9fae078ef44362ea7978f" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6583f352af8f25d4c5095be65abfc000196e42db" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8bbd73e82c2002a746c2f0430d3f233c5e28ce" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ca5c35f83bfb35c34074e6ec1a8a36368a60e9" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45ad5be5c355fd567e757febef2490a0132245f" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeMap.valueStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174d2bb2a9ee965b7ac80a99914617379f53ede3" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddb67877f46c096c7a6e05bb1322ccc90440fed" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorMap.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fada41fe8775aaa3dc14979852e2a8adc5fa9cb" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361234621c3a9e6b27b13a2946501519d90026b" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc3c482a33103271a3b4c862180fda76b348503" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7d3410ce36422eb00a37f710c683631bf143ea" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashMap.valueStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f8fb1db6801f8d427a2ffd38af1d17bb06190f" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e77b693d71aa03a34f8740bf176afcdf58d825b" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb85e3946eda78214323d1f4c9d975557ab4869c" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb7d3e8f9cb4ae5185c4107dffdf2e20e649a74" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7114a31ebf232c95c84171b0ed3d317c5e8b2aab" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1285b96114a7c0d4b17bef766e6c5528d5bc1ef" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9126d76de2f4279b2b40b2cd3eeeeb41d585ad8" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f40a7c3ee86212ca90b130083029e7a9dfe503" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf912206e850710641cd8ac1ea0539155a2b94" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b203ab969cdbfe6fb37e1bb1c9a13e9642b59a0c" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17140aaaf7655f7a67b6652317b0e39e8f75b3d2" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ddd5571609019a863f1221c779f67480b3871a" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeMap.valueStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc458fea2adef62c5af43a037ff44d85fd46516" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c496571e78a142aac5e81b289dcce4a7f3279e57" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8a47ed63384182371341b8ca119b2482a3e6eb" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad13da9f03b70eda974acb9fd298585a57ae2e24" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767002022a9bfe464143526a570dee288cb821e3" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f995f5f2c5cc8473a8b65222069bb3fbae0b24d" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d52210890d4913d61d73d82231f03b2d3a4f3e" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8610fb979d969c895cd10e9a7224ef350ef26b" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a44780ca1294a7b0422abe0b8d40fc8178d9a53" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3027d07d318a2d7b7dbed4633c83d3c56d92eae1" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f747129c5292d42af7d17e0bca32fb12e25fa7" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa672425807e748f57bd614fdaf15e52f7541c4" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5a568e9791251e0b98ca5c1efa2a5976b80c2c" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941d5f6aca85b72a0cc784f1d503f206ca0d717f" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b89df8cc1bb9dc18b44ee5ff9a525a85d5f75f4" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af6c3e225852116d5be2b7cb9375f982d4aa970" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e3697fc6ef43119907ace4b3e8e607dea2c3e8" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a58471ea2711ef911274d8a6e61095f6c4786e" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5c90fd1cac1d0c0747b09d1eddea8b9734da13" translate="yes" xml:space="preserve">
          <source>def valueStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.valueStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a70df2590dcf9baaa07da3c89597e4dd929a1b" translate="yes" xml:space="preserve">
          <source>def value_=(&lt;span name=&quot;newval&quot;&gt;newval: &lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04afce5139dd2e4ed5c1b7e624fef32c8851b0a" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;#ValueSetextendsAbstractSet%5BEnumeration.this.Value%5DwithSortedSet%5BEnumeration.this.Value%5DwithSortedSetOps%5BEnumeration.this.Value,scala.collection.immutable.SortedSet,Enumeration.this.ValueSet%5DwithStrictOptimizedIterableOps%5BEnumeration.this.Value,scala.collection.immutable.Set,Enumeration.this.ValueSet%5DwithSerializable&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf15d037a77798c5d532527bc4656c1fe57bed9" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9619577a42d2d6e7e01900177347c0a357bf2ed" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ca755c70e52e4b36f0a90fd05d19fefc6f65bf" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850154f3748896cc907d84e2602ba88f39c291e0" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb116c5a8877c77eb568dd1b2e11330539103085" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909e2fc24158ad586ac0042f1bda184e8eb6c6c2" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d617f4dd2ea919215b8faef8ac9691006cbe677" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856b0096e1c72c7a9db4551955c7e55cfff40550" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92edc0ae44ce510375fc138c7c11e9dfb0599e41" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b78da176256811dbb54c4f4504b03732edf9b32" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64acad3bdb2465a369f1912f14f5f337b5bec6c" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43c6e2b067a49d6a2f8cdd10aa28aa05b94d11b" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cd7cf0a4d567c50e70ce1c6f1e1d587375fbd5" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e385e632df2d69b7b29f112452009944247fdf23" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7084c7a95c543cf8967cbbadc004ab7a6f3b03" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb32744df1d6c74ab6ed2d69ecd3946dc56e9a8" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17bffd28c3e43ca20a3e3a9121594f727897457" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc448639ec6ceaade8268639bab27673b84d924" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d54f277f2f6de3126fb7e00b9620fc271bac3d1" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a2ce6755b4f76f3037d7e2e922e7d3d29d9c67" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de8c3ada09cba4cbe320c40c804ef852744b647" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d80a7342c1c47dd1f2ddb9337371aa9b77a2df" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdb90dd957f6dedc34c0ecd9cc488a4ec4c273d" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1454553af7945bd79d8b13ccae7ab69a5576fa66" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fec391960f00202e0398bab6ea504eb7a2bc00" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade2622219a87cb06c362e2df6cf935fc2c86af8" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51ec77e946bced6ab1718f27d0ebbfb1b0a44a8" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f6919242d9444c1c88cc025c076dffe3e8e916" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07b56177865e87983be52dc6ef84c7b64a36432" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b78dcf43379328285aebb26d0e0cad766640a2" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b318374bcf69c01bd6a2da075bcfc5a517f0ee" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ead575e9820b4847b465625a469a0c374ebb9b" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af41e201bc1be6eb75b3b5a9dc1e353d927e120a" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fcc14f552994a991b0ca143b3892129c6c251a" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b7dec3550d0b1658903171724ceee363f644b2" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86638c2981713a40938566c9c5a5adf887fc2c09" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184118ab75d42d0bca3c523835a20190127496ff" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c96ae9a8f13171427407bcc4e73ee63f3901f1" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf41f41089cff5e87ca5ee6f8c5eb2bcd5cd10d" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64100006ea6e320315179fccff13e59a5a8e59ce" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e37b2e88c4f1010f0711a3eadfe21304ce0455" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6fbafb58903248af27b045aa094302bc7229a0" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfc7439e4b8e94699748f9f021f84de8d0fa873" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ea8dbd5435c2a02cc9a8a63366aa6e88d9ed5d" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223b7ef7c42aca3cdd946855ecf74866e238f5e1" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96346407c779baeca5a8035a658f91210f9d9b6" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9da33eda876d71f7c2d4907fd17e18ca2ab3508" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be48716810f9957f614b105b41709222dbde0f5c" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c6ab380b84095f85d796684276d1fb71000d39" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd73ecb343979d11c417b42564f73f288d11a680" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7104e97d1e0e07f9e02b5da546551eb363ea24" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e220ddd3955f449df179e73cd475d21c77c7b6" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b24e5bb7d501fb2f87af731c2fceb26a141c7c" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d99a4c268f890ec953f622f49eece06685ff9a6" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545486453ea05503e65fd0ddc2a54997a4580471" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d648b3bcafc22cabc3644a26acb8aa0fb413c83" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b355be99ee7d19dd30cbc9b62e7e42a987981b" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6205af9f7d65d38bf447c50b652da6ac368753" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c317be93de781009eb4ad6aeed1ee5edfe80a3c1" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745db5b3da16723dc4bed83e1b3870bf64fc905e" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535350ad26aa3cfcae802ed9775e66d36378560b" translate="yes" xml:space="preserve">
          <source>def values: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b664930214656fdb94be45fa1785350e059141a9" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31eb73138f14bcb336d99c4dfc3e0ba051ae7c50" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b887635d9da85e2bac2344568b1b4c9de23bab" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf0a111c00e9d9b13ed8ae76f9a10e137b64837" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37842b89aded9df033dd3bf025668d0822d3a480" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f431f9e10c9b12525fb3de86d18ace914c6812b4" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dff060ab21e10f75ca6b603ae14fac5150d5d3f" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e70b5db2c7c30393fa5924e9a86869f08800d1" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887e376f1ac504ef60569612b52efd543475e5b5" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b024c538b0d45a4918dfa59a126e2acd6835f4f" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e56f1113c79a4b1d78ea87a757331b9ba07ced" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfeb414bf2145aec0705623510633cd87883da5" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3449d463bb227990fd4a584ae1fd4bd636dfe016" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bbc90f92fa383b186e30b55844e4fafea4e5c5" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9d2a63090255c825987913e3e7d1364d9d0265" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d729ad40ff115a99227d406496352f1406797712" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f60c50b698e36e9230ed28054c3f05981abe4c4" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3f7ad14b319d92606609ef883b06589c47091c" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb981ddcb1c6dfc73c8fb7a188c2cff4b06b2538" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7d2818e592689b7b25679ab08600bf49c1ec4b" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603b597b611677d89d29d7089b5fa724c3781122" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0547e1b0d29e5f2420c0e99fdee4ed140943b560" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a241b1def929e953ecb4945aadcc774f36787b" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5197961e78486ade8382b7226af87061505994a" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed896955b360212346cc21e8e9872d267c51add3" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becfeb4ca0e5335b7ec7395cb6e827947babbf7a" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14a0d81740e0265b6630f5abdd982c62bf0b571" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f875845e54d9ef46301b11522af3c00aa3311be3" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a36a270e8164a1f27531665e025beac3ae5c3a" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcbd35e9f8d012517444f8344b76f351d037b2a" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6edf922127de798e29416f0b3fb08af46a6bd24" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df8b60533cf00baf4d1d70931cf60b43c5f5f36" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e6cdbfc6faaca1807fbb9707e369fb7adf1623" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb29a7e3e0645a3d66d73848d509dd899f6ed60" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ee0a0c828155d07bbe86cbe13567f7166551e8" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8f9d3c4ec0e4d7612b0922fbf3f37ba417840b" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568469bb480825e3a95dd87b2d2768f48958eb36" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c153a10a4e44bcdeedba9ef6feb87c96919183b0" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f33309aba50d2a943e08f9ed2b39516c7ceece" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1576bd22745301a7981e9f1750fe75426885c4" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175505be5ae9861d2bf067f65315fee51ef7b074" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1278372653d040a5408eaad01529c894d48f43" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a05cfb87aa9a2e4a52f895c78c1f54e28f316ec" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d294a94f53612dd09c735e18079cfc0781e63108" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2d663dd19c6c5a29abfb10b8f889456290efe5" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc9193b7dace935b7b7f59f631973c069d2093a" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e548380358d1f05aa9c3eeb72e3e82bbeb661f2e" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d865a29709b99a133c82c486eb635162990de7aa" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c318eec4466fcb9ee1f04803fc64a5caf5c5a4" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0205210f4d0b6f06499fe87cea5d0a0f6a0caf" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64874b2753492aabd5d11a7165dbe5628e4ac05" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cd9c940f6e638aad5e3c14b92734ebba37df05" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a12aba8d344a89ac39761ee29a64dba054964e2" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877aa9c477f9fab1b8143adfcb3a0dded97bbb15" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a6a5c5920e5e1fda179585ad94472dee96d194" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4ccb2f4096f0b1c7a31b4f14f0e96c8c69dd89" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7692e327ad419504ee6f63cccf5ad7f877c739b7" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d19dd8476e2a4b84fe78ac82aea282f135adb27" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4e0001f5f7cc76ebbd95985165032010f1574f" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03039cb487926f8076c141103dfc34fc362f420c" translate="yes" xml:space="preserve">
          <source>def valuesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dddf0848e5898cdb7c84c2a28afcc0b26ce75dd" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a16dc14952701f1aee75131f593948517c0eecf" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fb95f1bf21b0b76e5be78203240e28cd80ec8a" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14910298af2062dcc5bd624005328ba421da6c66" translate="yes" xml:space="preserve">
          <source>def valuesIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
