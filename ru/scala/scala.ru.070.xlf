<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="09eadd4e939454e799e62f2293920ae4736fdc0d" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3085931dec68390f3ad691dea01b4c54595094d" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da130a084dceca228626a5c517a0f2a5b57c6e5c" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbf9911eb8ed4384c155a1e94d7283b395f841e" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69b7d678de6e39edca78533e080f86c125dc6e3" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23906e1669391d8300faf89322112079bda6329d" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b36a0a82ff1b2fe5df534ec326516a16acc34db" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af104be877ad9dce30e01dbf0f08bf8bd6d48c32" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0346faaaad4ef7b3a59a844a99bd194f346e2e31" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f3a5e403e233593c0735ccab5af197f6cb1db9" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec935c2b53f752c9b45a50a0c358f36865d0fead" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b31f98c9c905292723909f712f5253a09c1a9b6" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b959c26e8f4c600a8d51059c4f002225dd024562" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6909d3b43fb7f37aa4f00b2e3537476ea82b037" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dade3045da0ac131487d43c4d19a46211f49a302" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9406a611f1f4f1a024cb9d3064424a1b2cb40d" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f73edb6f39822277dc4d6537f95f08f51b45e" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd8cd5b7f084f6c7278e060c44972be56958ca9" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5026e4f454062f0c9c4e356c034f1bbb26810248" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4b1465e02dba44a6b04dea208af8502c9c5de5" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f0def509eab8ade272c93177fa0a60f4a43b45" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651f593533732e792bf4681bba53d355bd7dd7c7" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfd385fb9ce5a3df878d2048d8d20bfa40d1254" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206b5a3ff71be42e133a64cedcc51b79fd12acce" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24empty%24&quot; id=&quot;scala.collection.View.Empty&quot; name=&quot;scala.collection.View.Empty&quot;&gt;Empty&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf65826d424e18b7cdf0fad66fd6eca19bd5555d" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba465586d7202da8d35932da5c1961050c662ce8" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7fb36614e6c8056de15c8d84026f914c83755b" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55ef07e92e53d089a0c88255993731bc6da4759" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d04758741e59b3cfc4396b1b065d151970fa39" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd3ed1ab494989c2e012e60f19632ec7d78cd16" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8c9721cbba895b6787d5d3eed11f92dfe444f0" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ca6c87ddb589cecd32b5c71b401b069c977f83" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5059aab0797d76dfcc905e49898b271a126e3b8" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3d46ff8581515f7ea6422eb08c708dc226b1d2" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90807b263399023535aedf62300699f91808c495" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b534badad92d5e5ea2ffe568f502fc08ac2bf7" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0b88afc1abcf69746853742962d35a2e782959" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd11df0a4f3ff9aee6679f4c0e858f075b52e63" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a9b3876dc127dfd7826c63bfc6472a6ebd835c" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30371caf3e441bc3a4798bf08714021e2c55d74e" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeee8111b60534e10639b8490191fc1080977ebb" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81f6399734d9f3a95048f155a5d5e8298f60d30" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5343fa9a90cdb25fe17794841c966eb8ef52a987" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561cb221570e8776ede0a95f32e6117c649b85d8" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b779d4cab3ba030069ef7585e8e0926ab9fdac13" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f12ac3b5b6f95d7c29949193dcd6e98ca4b088" translate="yes" xml:space="preserve">
          <source>final def toIterable: &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d39ff75d50060708f239b1d1f4dbb234d75f05" translate="yes" xml:space="preserve">
          <source>final def toLeft[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;](&lt;span name=&quot;right&quot;&gt;right: =&amp;gt; &lt;span name=&quot;scala.Option.toLeft.X&quot;&gt;X&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.Option.toLeft.X&quot;&gt;X&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240166611ebba6f5b7fec6300738a1ecaaa29c4a" translate="yes" xml:space="preserve">
          <source>final def toLeft[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;](&lt;span name=&quot;right&quot;&gt;right: =&amp;gt; &lt;span name=&quot;scala.Option.toLeft.X&quot;&gt;X&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Option.toLeft.X&quot;&gt;X&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91add3e2e2ab2cf39fa691939ff1c664002af572" translate="yes" xml:space="preserve">
          <source>final def toLeft[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;](&lt;span name=&quot;right&quot;&gt;right: =&amp;gt; &lt;span name=&quot;scala.Option.toLeft.X&quot;&gt;X&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Option.toLeft.X&quot;&gt;X&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce101a5f3c6d20adcd1b7de54be66de2c78bd24" translate="yes" xml:space="preserve">
          <source>final def toList: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f90502f9faf8737f0efe8d263c3474692a2249" translate="yes" xml:space="preserve">
          <source>final def toList: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b80cb4a80d7ac12c761ffa7c1aeb197c644161e" translate="yes" xml:space="preserve">
          <source>final def toList: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e1b8694cc6b81030d4bd6bb252a857c4b6f369" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c426c702584c3eeab18af5eaf12252a485952f" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13003fabb085fbc58b64bc9f3ee59c2860450f0" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bfdad7186d94e017d5c1b487d9cce15fa1f6a5" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a69337f14bc90ec1f281de945fd4276a3442dcb" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d365c1ec537728f2e0f99ebaf5274dda019a7a" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b1d180d93ee26048eb3652d5f6f9a28c309a3f" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d4762b59efab1d336b654f059e222d63cd5ee8" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb02f2bf9a794384b1e6f6a7a3b4a968161cd6" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f73f50f9840cbd4e668558c872853e892311829" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ee5bf20551aed0eb045a243297c17284d4ba96" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9658abb4e82e16356b17936ba851175437553ec5" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba17724efc395887841c8bba0fe5b30c041b11cc" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e2509246ed57293e8cf23a685ae6a8805d8cc6" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fcf784e4339941192f2418c6b6f5ac075a171c" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bee34cca9720c4ca9ddc112f8ca207c34f17321" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d24983497dc83ec8b463b80ded99f41d0c97781" translate="yes" xml:space="preserve">
          <source>final def toMap[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), (&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.toMap.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.toMap.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c9f2963a243a63462f2073b117fa853710ab14" translate="yes" xml:space="preserve">
          <source>final def toMicros: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84866ad115e5e1a7db50fedcdff322e92f1a62b1" translate="yes" xml:space="preserve">
          <source>final def toMillis: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b8bfc2027d71b9ab4b0e8b375af5b2633c338e" translate="yes" xml:space="preserve">
          <source>final def toMinutes: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec268dec96c134ae3ea9c7b86a92591b57ae0aa6" translate="yes" xml:space="preserve">
          <source>final def toNanos: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86b6a670bf839acff520862ed1d0e4d9bcb85df" translate="yes" xml:space="preserve">
          <source>final def toRight[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;](&lt;span name=&quot;left&quot;&gt;left: =&amp;gt; &lt;span name=&quot;scala.Option.toRight.X&quot;&gt;X&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.Option.toRight.X&quot;&gt;X&lt;/span&gt;, &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9316e66592979db0772a0d6c33422c2ac7c7170e" translate="yes" xml:space="preserve">
          <source>final def toRight[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;](&lt;span name=&quot;left&quot;&gt;left: =&amp;gt; &lt;span name=&quot;scala.Option.toRight.X&quot;&gt;X&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.Option.toRight.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f93986987bfb7b0f12848e7cf1e8576eecb88d2" translate="yes" xml:space="preserve">
          <source>final def toRight[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;](&lt;span name=&quot;left&quot;&gt;left: =&amp;gt; &lt;span name=&quot;scala.Option.toRight.X&quot;&gt;X&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.Option.toRight.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701f0e2a264d9a97817b15e527085a5ec1103881" translate="yes" xml:space="preserve">
          <source>final def toSeconds: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954292677e14d0404e17f95b0b7d255d40be0a2a" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709681e5892ce208df160e39e7a77792f74f5852" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae35639b2856207f86af709ea0da42888c683a5" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac185fb20ba62c26ee8c5515849ce664516a4e23" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9551b348b695ae74aebda1e0de0868e1b836b5b6" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6f3581b04450a30743712e865e9d8711718a47" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58823e0d08064bbce657de903ec8e669b9396876" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2973f4c73e869c3f12307aec946dacc5ce9d41" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095535e7fb3cfe937b1f98b2f6284171256d9daa" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0709aea2d58dd038053fd2170a000095d3a7564" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0adbfba70a340e3c01f067d780170e418d818dc" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f0a2f805e710d78c723ffb080421cda58ddc58" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4165b1c6c25b07f6f4e3361fe41dcf9838c40348" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1915e6b1e5d3ccbf95be962d581b56824a4026" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f977a18d37b19128d0a8ff746f6b6a3130a16f" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;collection/immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;collection.immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5465600da537b4d85d8164ff2e3bd7e029c6fe" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945b3e02b650306629ab01d76251e9a348ce74cb" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548866107c082d34143fbbeb4c1635fa97dee625" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc96f29ab217a9f6851cfd07e6bfb0046549ccf" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf56e8ceb1944dea3246587e2cfaf584e33ae45" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22e5d86266f81a07493e319d885d6b9718f4ceb" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;nil%24&quot; id=&quot;scala.collection.immutable.Nil&quot; name=&quot;scala.collection.immutable.Nil&quot;&gt;Nil&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f6410b6a1f5264bf68afa8123bc410ba197c6e" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1653fcd3057daff7875f0b39bf249c9989d7be" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d43afd728a93ac1d2785a8c7311bf7e927c3d0" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721fbe21c5b44a720583d5313f27f566335e2f9e" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15941f2fb046b0745abc68123e2dd6b813aea35" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1601fb6bd9c8e9df8564572d34fd57490f62a94c" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de1833a6109ca18469fdbf9f75ecbdba02419cd" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8a54f2467f73c411c0dbeeec7f9e2617972227" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbafa2381350cd15ab5f50f412f951b2dec570e8" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae970f2b28925a7a8e415d898fb3ee24ef6b7cc5" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1355b826ce5a4f43d00080b48b00560bc1cf075f" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;stream%24%24empty%24&quot; id=&quot;scala.collection.immutable.Stream.Empty&quot; name=&quot;scala.collection.immutable.Stream.Empty&quot;&gt;Empty&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652f49940857b8f3db2ca79545c14b1460cb1876" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51330151649cdb4f2240dd1c5d5ec4f7fff5c8e3" translate="yes" xml:space="preserve">
          <source>final def toSeq: &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bc06d30d4c1eb26a4ba17a200189605428c8ae" translate="yes" xml:space="preserve">
          <source>final def toString(): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22709526cb4260f51c53e84fabbea2edf6a9146a" translate="yes" xml:space="preserve">
          <source>final def toString(): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0b563822e060465db3479fe85a896c6de5f3bc" translate="yes" xml:space="preserve">
          <source>final def top: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8966837cde371cbc98fa64db546e17e023bd7a83" translate="yes" xml:space="preserve">
          <source>final def transformWith[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]) =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.transformWith.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.transformWith.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544b3165f16d5de5f1732e8241ebbf96fd4fe3c6" translate="yes" xml:space="preserve">
          <source>final def transform[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]) =&amp;gt; &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.transform.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.transform.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b10f5a0feb5c5fe3d0a6f901fef2fcc5a29a644" translate="yes" xml:space="preserve">
          <source>final def transform[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.transform.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.transform.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b6a4e55b9fb02742735ff9dbb28d29d2d7eeaf" translate="yes" xml:space="preserve">
          <source>final def traverse[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;M&quot;&gt;M[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.M.X&quot;&gt;X&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;in&quot;&gt;in: &lt;span name=&quot;scala.concurrent.Future.traverse.M&quot;&gt;M&lt;/span&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;fn&quot;&gt;fn: (&lt;span name=&quot;scala.concurrent.Future.traverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;../collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.M&quot;&gt;M&lt;/span&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.A&quot;&gt;A&lt;/span&gt;], &lt;span name=&quot;scala.concurrent.Future.traverse.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.concurrent.Future.traverse.M&quot;&gt;M&lt;/span&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.B&quot;&gt;B&lt;/span&gt;]]&lt;/span&gt;, &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.M&quot;&gt;M&lt;/span&gt;[&lt;span name=&quot;scala.concurrent.Future.traverse.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837c6d8e48beefd0903e7d39da6ea13acadb85e0" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a603b48b52f048b40d0f3e0daa986bb6263c1e08" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac157b97099f92517e041a639eb3f21b0397abfe" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fc171ad800a2598e74494d03cd14276aeb0416" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6788ee42aee81f25b17905b0c2640b8bda398661" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfe0ca50d21e5585a51d2881f882b64fca5499d" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd812363986734f0e552ace8b6944312a02623ec" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b7359221df9a76bc61bd0041d4007c98d3d72f" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832c5a5960b799fd2377e6968c09ef6ee3a3fff5" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9308c1415c3d8a5afc2cd6002f8519ed7962e9" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42151a96e75c31802e69e07ad088d3c20609996c" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b237adf7e2062c6b35c7d940a85cd8514982fc" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdc8ac2b090cacea5ae8663ca41cb0c6472a499" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b699828f98abca4c831380b2355e7e2fae7bafc5" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b56f5fc66fcc0606c55f22b82b8f712ec749354" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c9eee045133c21fbdf5807e07b560cb28f486b" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a673f8c037b236f5c6ac2f282d297227c135e6b" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e80ca41c89963e945daffc1bab89e10f2277b5" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e574f1b55c7774b36f10c2f0f4959c55dbd5eaf" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb253da4347b56c1b441a6b63e9bc15438566e7" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d8856d13bfa694f4dd76ea6342a93f69779fe7" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1236779b7ef70944ae77bbf7e9f026047ec6c82e" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3cbf09f99af2bb9525de609c8ebbf6a8f6c450" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d889a9f9358aabc013f3f54f03e7d7cc4e781839" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1790e511033f2b9f50b59b6d9d05f482b3dc6e" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9928c7d8279672df7784f86c149a8761b1ebc63e" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f03e3758a9fb45b6d5422d0200e0edd9ffe1463" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b634d19c317dfe4ed3ab116a73c9b148914a7e24" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffb97ab551d6d7fd39f0499750525ef5dc68df0" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdff406ee7661523f5cb9ae1bbaa37c22fe3303" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46955d3a955e48b6ce2fcfb55c8e2d4f8f1e45f8" translate="yes" xml:space="preserve">
          <source>final def unapplySeq[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seqfactory%24%24unapplyseqwrapper&quot; id=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot; name=&quot;scala.collection.SeqFactory.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.unapplySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea20183390dfa65592d1bc9d753e04179e2fe5d" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456b7ac5b720cff44d28a1035ead2fe5ab974063" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83934fd21ed64ea5a9c57e2a1d56ac46575c064a" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5022a83695ba72e3fc0059b0320f06cf766b1b" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca45a145f347e3ea0141e0ff2b767ffb543d7be" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb3c6fb499a9e2c2627aaa8d02e956c00b0c4f5" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04168c3deed1ac0898b867222d9e839e388b138a" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a94c8f5b94e2c427b32c7c24cdc9b3c124a01b" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fbc0fd51828be8833f181c7f718a66603688e2" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75a5cc9c2c85f9dbad4c9f2638f70e00afcbb8e" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173cfd45b1fc824b0fee8ff6eec2df2582bc9b51" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0ecefdc6191a3e5e5f11f3c706b3fee816c185" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2bea65d0802c44c656dbcde2a1f6a7413e053a" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f554f41afd0c1bc7d6961616685616a6c702e51a" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ec63a93205e67aa207c8dd5624e4ce654116d6" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32481d7d885080ee0b283b9b652f88c8a9980fcf" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661ee6bc5d9badb4a3722a2cea931d394473f6b3" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7ff26548b8d5a826cc71b2bbe4c23503be2dec" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5649206befb5e7e387a5bf9a999093c4b632949" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125299de7869f369f6b5c11de5b0c9451bab5798" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f54c632cfaa8de8581e3f21ca047d20a5f60f66" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6e2c432beac06e2308563b8291433aecb3386f" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f9ffeb4a682aac37e20e041c5f19e6dc1aebcf" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc9d22e8eefacb093a49330496b7fb07c46ff19" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b946e0f949dcaeeb34e5806fdc2ddc68b6662e" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585d47dc87b7b4c6aabd5f39c67ea875b42ce602" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc65b3dce293cb26f58f389201fe51eb51a5a44" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0795a7843ad5b8c8ba96e438fd87bf9e5325a0df" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6ac20d99e77e8f01a36f2953a81af582c1c5ce" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb98e8da4b92795257407f71e62e59abc5cbd62" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6392311f8687fedf8d72d706717b71e9fe6d63ff" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6250118dd65e05ee882f82dd71932841e164df8d" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea56b03ead14f26d2ddb654a7baa4220705769da" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9880dcedd68366d4585a59cadd37addbb865c58" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030b79d3cc6c6a6b01ed756dc037c91bc2fdea7a" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209bd6f33f4a7cd76db1aef6b624d713e753bb04" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950cad5e5c5bd55a5a40f354a628ec6ed4a1999e" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689a4f0e2d44b2e772eb449ca0440ef7f8dbbb3a" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113136087d664c8b2e0cd7dbddfe6034713aaff2" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705b03e07822c36a2efd1eb88df5648d7e59c3b0" translate="yes" xml:space="preserve">
          <source>final def union(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b987c70b1a3687c06d10b89a02069f2757f91abc" translate="yes" xml:space="preserve">
          <source>final def unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbc8354b0cfd89162201af1bf566d4b916bcda2" translate="yes" xml:space="preserve">
          <source>final def unorderedHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defa86a51168fec3428cf36f5d7cb54f04170c48" translate="yes" xml:space="preserve">
          <source>final def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, (&lt;span name=&quot;scala.Option.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip3.A3&quot;&gt;A3&lt;/span&gt;)]&lt;/span&gt;): (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab05f8cc43003317f5e8aafadab76b1874b1bc6" translate="yes" xml:space="preserve">
          <source>final def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, (&lt;span name=&quot;scala.Option.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip3.A3&quot;&gt;A3&lt;/span&gt;)]&lt;/span&gt;): (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a334c24b2ba1604cacad7d7ec4ba078a2e04ce7" translate="yes" xml:space="preserve">
          <source>final def unzip3[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;A3&quot;&gt;A3&lt;/span&gt;](implicit &lt;span name=&quot;asTriple&quot;&gt;asTriple: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, (&lt;span name=&quot;scala.Option.unzip3.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip3.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip3.A3&quot;&gt;A3&lt;/span&gt;)]&lt;/span&gt;): (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip3.A3&quot;&gt;A3&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0860dce8ca1d744ebd7e3de4f5b1618f681d5af9" translate="yes" xml:space="preserve">
          <source>final def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, (&lt;span name=&quot;scala.Option.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip.A2&quot;&gt;A2&lt;/span&gt;)]&lt;/span&gt;): (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db967459e798307786fc156dd6fdfd900f9caad7" translate="yes" xml:space="preserve">
          <source>final def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, (&lt;span name=&quot;scala.Option.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip.A2&quot;&gt;A2&lt;/span&gt;)]&lt;/span&gt;): (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64672a9650afb6de3483b67a2420ec014db6e4eb" translate="yes" xml:space="preserve">
          <source>final def unzip[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](implicit &lt;span name=&quot;asPair&quot;&gt;asPair: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, (&lt;span name=&quot;scala.Option.unzip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.unzip.A2&quot;&gt;A2&lt;/span&gt;)]&lt;/span&gt;): (&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.unzip.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e854c9d4d08a89d034a3855dbec20dffdeb8238f" translate="yes" xml:space="preserve">
          <source>final def update(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;newelem&quot;&gt;newelem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ead8dd8052afe5da819edfb96a7ac685f8c79cb" translate="yes" xml:space="preserve">
          <source>final def updateWord(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;w&quot;&gt;w: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911349160135fa091a14a2eeef2932fa2b82648f" translate="yes" xml:space="preserve">
          <source>final def usingBlockContext[&lt;span name=&quot;I&quot;&gt;I&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;blockContext&quot;&gt;blockContext: &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.BlockContext.usingBlockContext.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.BlockContext.usingBlockContext.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f164ab5cd5e48fdf51434643ad6caa6a9b13f685" translate="yes" xml:space="preserve">
          <source>final def value: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399a0346181414e7e3bd10a3c7f04dce13def73b" translate="yes" xml:space="preserve">
          <source>final def wait(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a008a7fd5e947b4a45a478cd65ed3e242de8ca1" translate="yes" xml:space="preserve">
          <source>final def wait(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f659a52a4ed247e632fc0daa37e1c26e3c0fd62" translate="yes" xml:space="preserve">
          <source>final def wait(): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6251dd35fe691bb7d44a48fb732a43fca4e4c8d8" translate="yes" xml:space="preserve">
          <source>final def wait(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7961fd8f49b2c8da77f7d1729257c52dae3b81" translate="yes" xml:space="preserve">
          <source>final def wait(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a44dd3e8823c8c8eafcdcaa6e8f30ec84eea771" translate="yes" xml:space="preserve">
          <source>final def wait(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0404a7d9bb16b37afa49c70527a52d9b418851b5" translate="yes" xml:space="preserve">
          <source>final def wait(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1111aabd28bc9a49dcacb90cc8d6d3010e3313" translate="yes" xml:space="preserve">
          <source>final def wait(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae38ccad06b8f17a9bf766762f3295f227507af" translate="yes" xml:space="preserve">
          <source>final def wait(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec6d9228cbfdcf4bb779f3ade01750d37c1d5cb" translate="yes" xml:space="preserve">
          <source>final def waterlineDenom: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d9ba33ee35bbbac796e184fa7235275458a375" translate="yes" xml:space="preserve">
          <source>final def withBlockContext[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;blockContext&quot;&gt;blockContext: &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.concurrent.BlockContext.withBlockContext.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.BlockContext.withBlockContext.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0657d14e6141b80aa6f4a9b4a11db6f3d73ec59d" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;collection.WithFilter&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429a5fd60566e6faaaaaaca03c82d519962c496f" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad65caa7e50e4ebe077143783b9af838affa532" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#WithFilterextendsAnyRef&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe4470e866a0794e413f8ace0d58707f526426d" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cacfe6706493cf71ae3404ff6e3ba810aef31e" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#WithFilterextendsAnyRef&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a9727d7272681062d90b326bcf85beff472097" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b20f53471a2ecd8fc0fa18cec48e83f67aac87b" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;collection.WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294abf791d6e6bdaaa9d89d4e50784f3b8f2d03a" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d3113edb7487e9287e71c6fca49ee5aa7b3005" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#WithFilterextendsAnyRef&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3081f8d7e5b1835e8316e99511ed1e86f5d6e016" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#WithFilterextendsAnyRef&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6aed5afda18a062659f1103652e88403dd97ec" translate="yes" xml:space="preserve">
          <source>final def withFilter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try%24withfilter&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3581f4cc6cf668d3b51b5251114861a753bea1b2" translate="yes" xml:space="preserve">
          <source>final def withName(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa24dcb3d73fa6bc8aec29300914b018e0f7c0b" translate="yes" xml:space="preserve">
          <source>final def withName(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f56c580157a7af4608acea80ecc8075a391147" translate="yes" xml:space="preserve">
          <source>final def word(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2a7201bff2c45893e751ea0928fea535b892e7" translate="yes" xml:space="preserve">
          <source>final def zipWithIndex: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47254755a43563a0effa0f0df958f030a172080d" translate="yes" xml:space="preserve">
          <source>final def zipWithIndex: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1d7efc84869e7ee569617b09fe5fbd1afe5158" translate="yes" xml:space="preserve">
          <source>final def zipWithIndex: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fc3e52110888e8b32b5549308ff60447a5f43c" translate="yes" xml:space="preserve">
          <source>final def zipWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.zipWith.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.concurrent.Future.never.zipWith.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.zipWith.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.zipWith.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde80052e86dc27a46951fbc8db86c0af35844a9" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.zip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.Option.zip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22ec3979e2df23ed3ccf2a8f172562f248d6171" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.zip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.Option.zip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be578dd9bc78f349dc6ec59d6dfc7fe9e0c0ad71" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.zip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.Option.zip.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.Option.zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83653b74b1808c487548a7e11718e07e3eb5d8a1" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.zip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e3d6003935c4d14063766725caff5fdf7fa607" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.zip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05de67240be9d2d779fb137521b7d8ea3254bb51" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.zip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f434ec8fd82f4e162118236f445b68958dabc24" translate="yes" xml:space="preserve">
          <source>final def zip[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.zip.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[(&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.concurrent.Future.never.zip.U&quot;&gt;U&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca07d9df3fa37412657f12cfbd2cfe4df6073c24" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882bc4224d08d5d33e9cc9b3975c7ef263b182fb" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d8d29b4b1bcc82e488cd84145406a3a8c85a76" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeab1e41c9c1941d4d79a2b3ba830335c8e5145" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a4e4d25cfce782202b12eefc07e28918da0c5e" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3445ac7df48ee6a6127dfe5f55a23df83fb43e" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4269dd942c89446c0e2553f12079c59375c71acc" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa2775a154f04eef92bff62e949518a06f2fe7a" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6491e1fcd3e2bdfca353c09de74abedafe1d4525" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb690dc3020405f67df910df612d67ad8f0c193" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a96f2774edfc29a694e7ebade19902cb33a0484" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d949c120dff54b66a9e4cb639dd1d4f1cdd6a07" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efe20ab03b4425d6d0dd2f3b50c282d42fa573a" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3581ea736925cc6a5643f70dbbaa3963d96886" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7360f495262fe08b2cfbc890d1f50abdad1520f" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be407e6546790e5a4a121d9eae406c42c04d09f9" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283ec10c53c85c980c10793df64a73448234082" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f46e9d65a0c88bd5c9f0dca59d8fb2b44a0ecf4" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654b352166ade5287310ef3c675ecc30b71a30f8" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de00c7897ffebacc3aad8397953526ab2e03d2d1" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff5ebbc26962388a9385dbdead335b0e499e684" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36b32ee22845e79d1bd233be3d799a44e630f0e" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094266c07fd824d91789d5183f609b48833f3413" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1d1f6d34cb4f2f52039c55e2af7a802e41bc13" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e5ca25a5deb79aa01abc258f81bf4ec9af2927" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9d42378284dee9061e1a7d73e8d97850d1e380" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd899afbc85510504163e16298971c70065138c" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e27fc8f9e9b578f4e67cd887e3b3ee016b26d1" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e95a3359efaa0bc0c2fd6a8a23012cc8b6aac5" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b11829a4b91551346d0a10992325cc0da0f0198" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec463512906033e2fafddcdaddf802a356987f43" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164fb9d51fde7216aeb5730544610a6a9af56178" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52c3c4aaae3ff2a7c9cb5c91684cc5f6c4df635" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5dc01c54cfb0f031b5a85a5031e822874b42c9" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669b523a8fde3e658df7dcc04110ec8a560b1729" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a098a69045069d8caf73b5d1629a58145629f4" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340772ce4092c51832622ce47a301001c4b4c992" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b0a6a974a208542baa51d48732866b81e0733f" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c43e45dfdddba94529695f32caed26a5dcfcab" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690480d5ddf6175199c75ed348cdd0dcf77c11f6" translate="yes" xml:space="preserve">
          <source>final def |(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6146536b63731987f84e72faf64464d2702ffd0" translate="yes" xml:space="preserve">
          <source>final lazy val global: &lt;a href=&quot;executioncontextexecutor&quot; id=&quot;scala.concurrent.ExecutionContextExecutor&quot; name=&quot;scala.concurrent.ExecutionContextExecutor&quot;&gt;ExecutionContextExecutor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3556125cf5b87762689da363394561473d0bd011" translate="yes" xml:space="preserve">
          <source>final trait &lt;a href=&quot;singleton&quot;&gt;Singleton&lt;/a&gt; extends &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4917bcd051ec2002bddebb81fc3008a3e2562df4" translate="yes" xml:space="preserve">
          <source>final traitSingleton extends &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afde7f4d0824e9783c29de72b5c6e4b8c8da94f" translate="yes" xml:space="preserve">
          <source>final val ALL: Int(-2147483648)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516ca9efa477971fa661a3b7e26a61d437a117cc" translate="yes" xml:space="preserve">
          <source>final val ASSERTION: Int(2000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c2e77676866f21808734ae40fd7d4da6c5fd5a" translate="yes" xml:space="preserve">
          <source>final val AllNumeric: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6cfc9d0c52636833d4cb4182a67d2a88aaa053" translate="yes" xml:space="preserve">
          <source>final val Arg: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a04713c1a5c12b45cec74e6ec7e48aac8fa4cf" translate="yes" xml:space="preserve">
          <source>final val Args: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c34e36067a4bd7ed3ad91e09f8fdb9cced94617" translate="yes" xml:space="preserve">
          <source>final val BLACK: String(&quot;\u001B[30m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e4504ff160b595730cd9bf48fb75755bfea429" translate="yes" xml:space="preserve">
          <source>final val BLACK_B: String(&quot;\u001B[40m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ee9c9a41d6afbeb6b1f8f8566548ac52d8557c" translate="yes" xml:space="preserve">
          <source>final val BLINK: String(&quot;\u001B[5m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d494a5625ac2243f9b6149146c36d144a25d3d" translate="yes" xml:space="preserve">
          <source>final val BLUE: String(&quot;\u001B[34m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef55c0e62e10641032ba20dfb25797a7d983c860" translate="yes" xml:space="preserve">
          <source>final val BLUE_B: String(&quot;\u001B[44m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f57975c6107dd7455edc52a893fc5488b00f68" translate="yes" xml:space="preserve">
          <source>final val BOLD: String(&quot;\u001B[1m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75c1ed2f5e8234f294551c420fd1c1b76bb4f8b" translate="yes" xml:space="preserve">
          <source>final val BestOfBreed: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6abfc7b456329d23ec2a3b510a906ff248eb03" translate="yes" xml:space="preserve">
          <source>final val Bits32AndUp: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad9e740c8313d523c4839b5ee9500523edaf302" translate="yes" xml:space="preserve">
          <source>final val BufferSize: Int(8192)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e923ad6583c244b5b2b54658687dab07739a48" translate="yes" xml:space="preserve">
          <source>final val COLUMN_BITS: Int(11)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fadc5e5776c0844a418861a89bb6a874ee355f3" translate="yes" xml:space="preserve">
          <source>final val COLUMN_MASK: 2047</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae574ef220d942a0521000018bde02580825096" translate="yes" xml:space="preserve">
          <source>final val CONFIG: Int(700)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae16a1520b8115cc16f728bcd1f0778a7ccfffb" translate="yes" xml:space="preserve">
          <source>final val CYAN: String(&quot;\u001B[36m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e5c7615a320969a7ac35e47cd5f574c3230fbd" translate="yes" xml:space="preserve">
          <source>final val CYAN_B: String(&quot;\u001B[46m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602157dcaa1f30b8748dfaeea8cc783a66564a9b" translate="yes" xml:space="preserve">
          <source>final val DAYS: java.util.concurrent.TimeUnit(DAYS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a71bbe6a338c41f04e20f77b5fafe0571132d9" translate="yes" xml:space="preserve">
          <source>final val DefaultInitialSize: Int(16)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635f02636edf8e122be574c1fd0b7c1e9926ee19" translate="yes" xml:space="preserve">
          <source>final val E: Double(2.718281828459045)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f3ea3328fbe9685f3ea9c1ffaf87f51d8de6fd" translate="yes" xml:space="preserve">
          <source>final val Everything: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae383e7c2b99ce11c50ff3671229d5e5846f5a45" translate="yes" xml:space="preserve">
          <source>final val FINE: Int(500)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3369d58d7645e31caa2ae2f083c3faf3b0409e" translate="yes" xml:space="preserve">
          <source>final val FINER: Int(400)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dee1c3377fb2136c62417b8239071b3cb8e6570" translate="yes" xml:space="preserve">
          <source>final val FINEST: Int(300)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d372276efc610e6563720883f54297117a7f96" translate="yes" xml:space="preserve">
          <source>final val GREEN: String(&quot;\u001B[32m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541aa4acba5af79421d145d7fe10de4436be6c31" translate="yes" xml:space="preserve">
          <source>final val GREEN_B: String(&quot;\u001B[42m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11816ef784ed877425350630aab0ca61201bdd0e" translate="yes" xml:space="preserve">
          <source>final val HOURS: java.util.concurrent.TimeUnit(HOURS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f623bb3a1ce6e593f9979834dbaaa576f1a2cf" translate="yes" xml:space="preserve">
          <source>final val INFO: Int(800)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3447a76a4d4c877c9302f9c2a7dea658316bca94" translate="yes" xml:space="preserve">
          <source>final val INVISIBLE: String(&quot;\u001B[8m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433699de037c61b21dd35e459e39b5daf7a9cd00" translate="yes" xml:space="preserve">
          <source>final val ISO8859: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd5d8ab2924abbf1a08ae241ccfe94ea5762b96" translate="yes" xml:space="preserve">
          <source>final val Integral: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7713ff7e042fb649e969a509fdc088a0c5e6c59b" translate="yes" xml:space="preserve">
          <source>final val LAZY_LOCAL_SUFFIX_STRING: String(&quot;$lzy&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bb97f59e4251b7350de3ab9859d7d9079ed9a7" translate="yes" xml:space="preserve">
          <source>final val LINE_BITS: Int(20)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b7a1ee02e84dae739c9934cbe97348ca27b31e" translate="yes" xml:space="preserve">
          <source>final val LINE_MASK: 1048575</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e96cf610474b3fdc43e5dfe5cff071036d0ef7" translate="yes" xml:space="preserve">
          <source>final val LOCAL_SUFFIX_STRING: String(&quot; &quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8ae4eb5204534958790126ac5a7bc2c11d5ff4" translate="yes" xml:space="preserve">
          <source>final val MAGENTA: String(&quot;\u001B[35m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f838a384093b6cfaa8e84ab12a9968db2f56912c" translate="yes" xml:space="preserve">
          <source>final val MAGENTA_B: String(&quot;\u001B[45m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d45e5340007d73863976a447b442c302426d6b5" translate="yes" xml:space="preserve">
          <source>final val MAXIMUM: Int(2147483647)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a95b946a861141cca0ee074728f9042c3b9261" translate="yes" xml:space="preserve">
          <source>final val MICROSECONDS: java.util.concurrent.TimeUnit(MICROSECONDS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b849e3db2c2f2660b80edf509c85491d899c3991" translate="yes" xml:space="preserve">
          <source>final val MILLISECONDS: java.util.concurrent.TimeUnit(MILLISECONDS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a190622587f3632e515539d1a90ff24162e00a49" translate="yes" xml:space="preserve">
          <source>final val MINIMUM: Int(-2147483648)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db9f2afb9dc49acc0fcf4ad672c71207fc6e4f9" translate="yes" xml:space="preserve">
          <source>final val MINUTES: java.util.concurrent.TimeUnit(MINUTES)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9e40898dd31ee7627222252c8ac5dc670dbf65" translate="yes" xml:space="preserve">
          <source>final val MODULE_INSTANCE_NAME: String(&quot;MODULE$&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a532fec395ba72b8694ca55ec1d24a520e1c6057" translate="yes" xml:space="preserve">
          <source>final val MODULE_SUFFIX_STRING: String(&quot;$&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ec019465a380aefb29ed6256b3cc5121001ec8" translate="yes" xml:space="preserve">
          <source>final val MODULE_VAR_SUFFIX_STRING: String(&quot;$module&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87a94fb029b91cc4d333d1ebc0ac4459978faa8" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Byte(127)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9529439b0ace7a7e42764c5721c3cd17174d273" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Char('')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87db6151ce9762da711070767f90a824241f5de4" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Double(1.7976931348623157E308)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e47588b860e323a1feafbbb9dd270f0184c2bc7" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Float(3.4028235E38)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43b37ce57e9c197cf17be5b9082f82637bb2607" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Int(2147483647)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950c4648b4b560f57300056cc0ebe0c0e627b99a" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Long(9223372036854775807L)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1362b5dc525536660cc2b96db76f1e51c032468b" translate="yes" xml:space="preserve">
          <source>final val MaxValue: Short(32767)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc295c1de2d8f66b5032f787a5ac88a88c281da" translate="yes" xml:space="preserve">
          <source>final val MinPositiveValue: Double(4.9E-324)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef508f8856d79aafc3330ec99bf52bd2d5865fc" translate="yes" xml:space="preserve">
          <source>final val MinPositiveValue: Float(1.4E-45)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736b95a598440865c76673b5d2fd0b142bda49ef" translate="yes" xml:space="preserve">
          <source>final val MinValue: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe8ae6fa3c3e345b9c36e257348fcabd87fdabc" translate="yes" xml:space="preserve">
          <source>final val MinValue: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db03e055d6544838fa26f5b10d274f5a140ded" translate="yes" xml:space="preserve">
          <source>final val MinValue: Byte(-128)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6bf9871e38ee3b2575827ee0a25b2538c4b3d1" translate="yes" xml:space="preserve">
          <source>final val MinValue: Char('\u0000')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64773878d6e2fad84b8417d5c0ecd6af590cb52e" translate="yes" xml:space="preserve">
          <source>final val MinValue: Int(-2147483648)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a1fc2a31968e4a11b81dc68160671ffe157770" translate="yes" xml:space="preserve">
          <source>final val MinValue: Long(-9223372036854775808L)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b550b030cf530df1c070b62f9eac8a826d87337" translate="yes" xml:space="preserve">
          <source>final val MinValue: Short(-32768)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95459130ad2a11fb25bdc09565714d919b3cfda3" translate="yes" xml:space="preserve">
          <source>final val NAME_JOIN_STRING: String(&quot;$&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eefb300f89083bd6961758760f3ab46faad02b9" translate="yes" xml:space="preserve">
          <source>final val NANOSECONDS: java.util.concurrent.TimeUnit(NANOSECONDS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbcd53ed10639205355a1e8f5415c76751dbbee" translate="yes" xml:space="preserve">
          <source>final val NaN: Double(NaN)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a6477d27f31b769f9c9358f80a496097d19784" translate="yes" xml:space="preserve">
          <source>final val NaN: Float(NaN)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f813347d81231105c156bcc85400691793433b55" translate="yes" xml:space="preserve">
          <source>final val NegativeInfinity: Double(-Infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7721b0ce62439b0030c5e8f6b80ffb0314f5b758" translate="yes" xml:space="preserve">
          <source>final val NegativeInfinity: Float(-Infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0273f1a2dd0cb8c202458c6286ea7b0bbbaa6f" translate="yes" xml:space="preserve">
          <source>final val Newline: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15c0b35c81e01bb3b21cc871e26fffbf0d6b4f9" translate="yes" xml:space="preserve">
          <source>final val OFF: Int(2147483647)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72122a84ff083fcdcf97f14f66416ef66b9de814" translate="yes" xml:space="preserve">
          <source>final val Pi: Double(3.141592653589793)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aad83b6f1df86c1829bfe6d2048fd5fa8e31f61" translate="yes" xml:space="preserve">
          <source>final val PositiveInfinity: Double(Infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf06c3fb72be0411b2a4a59755f8fe2a614d07a8" translate="yes" xml:space="preserve">
          <source>final val PositiveInfinity: Float(Infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee87d289738872bf524c5e623f91d62110147a9" translate="yes" xml:space="preserve">
          <source>final val Primitives: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d531a64d35848fd26c506f6b2a44513f401daf5" translate="yes" xml:space="preserve">
          <source>final val RED: String(&quot;\u001B[31m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb55663feedc0d3027d812ddbc643e09865f5420" translate="yes" xml:space="preserve">
          <source>final val RED_B: String(&quot;\u001B[41m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79c3c09b8bd0483a8e1895c0fc701332181bc63" translate="yes" xml:space="preserve">
          <source>final val RESET: String(&quot;\u001B[0m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9b935bad0cfa927ae726fc6e2d3551abdc1a18" translate="yes" xml:space="preserve">
          <source>final val REVERSED: String(&quot;\u001B[7m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2387c0000ee9c18240f98233e46d50b6053fe1" translate="yes" xml:space="preserve">
          <source>final val Return: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8a4605f9f258d7e4cee4652d8a525f05c66854" translate="yes" xml:space="preserve">
          <source>final val SECONDS: java.util.concurrent.TimeUnit(SECONDS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93159022b91e6d7d6af7f2adbf960059fec6a6cc" translate="yes" xml:space="preserve">
          <source>final val SETTER_SUFFIX_STRING: String(&quot;_$eq&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1406f8875ef02159d792a317ef5331c08cb209" translate="yes" xml:space="preserve">
          <source>final val SEVERE: Int(1000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d43cfd6ebb4e804ee8edac56dbcce50ebd50c9" translate="yes" xml:space="preserve">
          <source>final val TRAIT_SETTER_SEPARATOR_STRING: String(&quot;$_setter_$&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab0e54a7adb61ca38ac990918941d38ecf2ddcb" translate="yes" xml:space="preserve">
          <source>final val UNDERLINED: String(&quot;\u001B[4m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a9b4eefc210802cf74f2b40bdf54d43a1e2778" translate="yes" xml:space="preserve">
          <source>final val UTF8: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59625d225868b9249ff68a6940f390c3e79547d2" translate="yes" xml:space="preserve">
          <source>final val Unit: &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[(&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2a2cb67e1960573d1892b227bcef436d9c0d19" translate="yes" xml:space="preserve">
          <source>final val WARNING: Int(900)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421456e89bda8ae7332415c781297c1bbecb4582" translate="yes" xml:space="preserve">
          <source>final val WHITE: String(&quot;\u001B[37m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6297409b976bb3e2fca1adadbbf5560a3cd3ac2" translate="yes" xml:space="preserve">
          <source>final val WHITE_B: String(&quot;\u001B[47m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5620ee77dc079dc43a0c4f5ca7c7bf66491168" translate="yes" xml:space="preserve">
          <source>final val YELLOW: String(&quot;\u001B[33m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269af3901406032951e4502b2c2a53dacfc25a53" translate="yes" xml:space="preserve">
          <source>final val YELLOW_B: String(&quot;\u001B[43m&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7f4768554c6eea4adad3250bf009615eafa79e" translate="yes" xml:space="preserve">
          <source>final val arraySeed: Int(1007110753)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d80c08aa8aab929f5b807870e5b6b5b415bc0d1" translate="yes" xml:space="preserve">
          <source>final val defaultReporter: (&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b080052d793481bcfeff7b343d01143a5b4238" translate="yes" xml:space="preserve">
          <source>final val empty: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d818a819d89fececab7e240fee16a7db16687c" translate="yes" xml:space="preserve">
          <source>final val executionStart: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318e47d19145fb695121a33ef5563917de95cb7d" translate="yes" xml:space="preserve">
          <source>final val isEmpty: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa15e32db8c77333d2418ae8d0f0a11fe3adf365" translate="yes" xml:space="preserve">
          <source>final val level: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db5defc6211d4db2f88b8fef8f1a24fe3e312bf" translate="yes" xml:space="preserve">
          <source>final val mapSeed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10aa0c80c5e50dccff870ea904499dff47d44635" translate="yes" xml:space="preserve">
          <source>final val noCatch: &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5179e29d839d309648b48bd89d4be8124ff816" translate="yes" xml:space="preserve">
          <source>final val nothingCatcher: &lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73fa7ee5143632d255607cf74a4083369d22666" translate="yes" xml:space="preserve">
          <source>final val productSeed: Int(-889275714)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8f7dfca227c2417098eed2fd0e7b025d757260" translate="yes" xml:space="preserve">
          <source>final val seqSeed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2c93839a99d2790b9526704a4a18b791ad36bf" translate="yes" xml:space="preserve">
          <source>final val setSeed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1553d6edb4e129c1c5b872810ada6fe30fd2ca35" translate="yes" xml:space="preserve">
          <source>final val stringSeed: Int(-137723950)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2357c696ae22480d16b4ef72e69cc6b927e72a1e" translate="yes" xml:space="preserve">
          <source>final val symmetricSeed: Int(-1248659538)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca65014c4994a26f795099779772b38299abb1c" translate="yes" xml:space="preserve">
          <source>final val traversableSeed: Int(-415593707)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3859c767ce23e1bda9837ccb1a78bb078c18ab2d" translate="yes" xml:space="preserve">
          <source>final val unit: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679db0d681dcbec594b69cc1c57c03bb5c484594" translate="yes" xml:space="preserve">
          <source>final val waterline: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af71a184eb66748717211975275d1424790e7e69" translate="yes" xml:space="preserve">
          <source>final var elems: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc9d4f948ad94c5bbe07a1feee18738df60b756" translate="yes" xml:space="preserve">
          <source>flatMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be840b003c7ac1629fd6f7f05f532e36efc0487" translate="yes" xml:space="preserve">
          <source>floating point types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fdd9283ded80c62bb5e40ce65b0e49a48675b3" translate="yes" xml:space="preserve">
          <source>fn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2d6e86f265dc4ccdd4bcaf688712398e670fb0" translate="yes" xml:space="preserve">
          <source>for a product &lt;code&gt;A(x&lt;sub&gt;1&lt;/sub&gt;, ..., x&lt;sub&gt;k&lt;/sub&gt;)&lt;/code&gt;, returns &lt;code&gt;k&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4843e7c3737122f3d333ad888f239563e4ea5507" translate="yes" xml:space="preserve">
          <source>for whatever is executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3e8614703ea126434cc11d59e3c7a70c66d624" translate="yes" xml:space="preserve">
          <source>foreach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1436088eb04716430ffcb26512acc1152b346e" translate="yes" xml:space="preserve">
          <source>format string, as accepted by &lt;code&gt;readf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54753c36f3183464492efddc492d9543f1cae748" translate="yes" xml:space="preserve">
          <source>foundIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93644880bb01cfeba4961bc7ea454a4db8d27135" translate="yes" xml:space="preserve">
          <source>fout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff965255e37275ee4e02f4bc70410647117f266f" translate="yes" xml:space="preserve">
          <source>fromIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4bb586f04a0c1d93eadab9363a8a3183b4860c" translate="yes" xml:space="preserve">
          <source>fs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad74601a7980cd33f671922ee33307eaf9a4d5b3" translate="yes" xml:space="preserve">
          <source>function that transforms a failure of the receiver into a failure of the returned future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419388c2cb657bc185bdd36d91d8883325d362c4" translate="yes" xml:space="preserve">
          <source>function that transforms a successful result of the receiver into a successful result of the returned future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fbca636dbee512bf17bc7ded51f6c51fe2915e" translate="yes" xml:space="preserve">
          <source>function that transforms the result of this future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bfaeae02ade7e4840719847b7aaf3a7d757fa8" translate="yes" xml:space="preserve">
          <source>futures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a808cfd5beafa5e60aefee867bf92025dc2849" translate="yes" xml:space="preserve">
          <source>generic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6802f3990ca3715e3f9d4c8115daef356aa9e0e4" translate="yes" xml:space="preserve">
          <source>generic.DefaultSerializable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18a69ef61f2278be97ae4858c58f706ca9d3248" translate="yes" xml:space="preserve">
          <source>generic.DefaultSerializationProxy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f7974f45c53ae53326eb79890ef619fea39b7" translate="yes" xml:space="preserve">
          <source>generic.IsIterable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40ec849486c1cfbbcf9e3bb6f51c00684d96bcf" translate="yes" xml:space="preserve">
          <source>generic.IsIterableLowPriority()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69bedc07f7fef76e35b327037218fd3bcf347aa" translate="yes" xml:space="preserve">
          <source>generic.IsIterableOnce()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d78a25f65c328836478c5048410847c168be09b" translate="yes" xml:space="preserve">
          <source>generic.IsIterableOnceLowPriority()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d97baf844de2f0af7eeb560cfb01c9e4bbd98d5" translate="yes" xml:space="preserve">
          <source>generic.IsMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf184f370c4558b6b05224681c307a431ba0459" translate="yes" xml:space="preserve">
          <source>generic.IsSeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839e49acd904ef8bbde93668c6c3eb94fe4f0202" translate="yes" xml:space="preserve">
          <source>generic.Subtractable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f91620773d32735b30371bac791c95c071c5625" translate="yes" xml:space="preserve">
          <source>getter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c38cf10682a748626e847d09ec5b63bee943b5" translate="yes" xml:space="preserve">
          <source>getter.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b871b8846d6331763d6bfcb8716a80241c8d81b" translate="yes" xml:space="preserve">
          <source>groupNames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6890bb000dd47c56805ad3c0f9cbafcc459d1b5" translate="yes" xml:space="preserve">
          <source>hashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033c617777de07dfaba0307f88501c2ba1753fb2" translate="yes" xml:space="preserve">
          <source>hashing.ByteswapHashing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5e91d60af921ff84bcbeba3d18ad77d6041a84" translate="yes" xml:space="preserve">
          <source>hashing.Hashing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba61ff585291bb908a74e867ec06330caeb544f" translate="yes" xml:space="preserve">
          <source>hashing.MurmurHash3()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa76c59a3fc88fbc78fbead5a2bfe0a805b33354" translate="yes" xml:space="preserve">
          <source>hashing.byteswap32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1292cb2e6ae6fdfa0d93328c8e7c79d999c30e" translate="yes" xml:space="preserve">
          <source>hashing.byteswap64()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fd8536301150cbca7d02bd1eb7a645a04a706e" translate="yes" xml:space="preserve">
          <source>hd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809a2eb3569c828dfa5b2396913aefae2b35bb81" translate="yes" xml:space="preserve">
          <source>higherKinds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7f626df794f6491574a236f22c100c34ed804f" translate="yes" xml:space="preserve">
          <source>idx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69beecd8e40c874e1d72f78be21714088d9e3b91" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;to &amp;lt;= from&lt;/code&gt;, the search space is empty, and an &lt;code&gt;InsertionPoint&lt;/code&gt; at &lt;code&gt;from&lt;/code&gt; is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac49624779c39629b2bdebd0e247556356ffa853" translate="yes" xml:space="preserve">
          <source>if a &lt;code&gt;parts&lt;/code&gt; string contains a backslash (&lt;code&gt;\&lt;/code&gt;) character that does not start a valid escape sequence. Note: The &lt;code&gt;f&lt;/code&gt; method works by assembling a format string from all the &lt;code&gt;parts&lt;/code&gt; strings and using &lt;code&gt;java.lang.String.format&lt;/code&gt; to format all arguments with that format string. The format string is obtained by concatenating all &lt;code&gt;parts&lt;/code&gt; strings, and performing two transformations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46e04e21e1278618ab89f6be2c98bee70df8f37" translate="yes" xml:space="preserve">
          <source>ifEmpty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1787a901409c533c9ab277eb7b07edd5d662caad" translate="yes" xml:space="preserve">
          <source>immutable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bc35cdcf5b3fda143113227712805cecaa79ed" translate="yes" xml:space="preserve">
          <source>immutable.::()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5f8d812719d00254931f3c403e871084256fb9" translate="yes" xml:space="preserve">
          <source>immutable.AbstractMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe42c7d1996a56c1dbeac222054d3b48b50dfa65" translate="yes" xml:space="preserve">
          <source>immutable.AbstractSeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd202cc41a0a4cbedbd6aef93de6983d946b5fe" translate="yes" xml:space="preserve">
          <source>immutable.AbstractSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2b354d3a9f6724b03c72151b909399d7ec2e55" translate="yes" xml:space="preserve">
          <source>immutable.ArraySeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8ce44c7224ffce215669d3e1cb6173d96426be" translate="yes" xml:space="preserve">
          <source>immutable.BitSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc64d59d35c2338e82b284a3cf8cb2294584ab4" translate="yes" xml:space="preserve">
          <source>immutable.HashMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df2381b5ba869183f0049e7b3d9bbb76cfcd52b" translate="yes" xml:space="preserve">
          <source>immutable.HashSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929f6564939b1d91b27ef00c9176ac82297c4f98" translate="yes" xml:space="preserve">
          <source>immutable.IndexedSeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3369f60bf8d6f4a737f26bce79d51145a2f1be0d" translate="yes" xml:space="preserve">
          <source>immutable.IndexedSeqDefaults()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8be3af857b77217662c5474d5105a21520f984" translate="yes" xml:space="preserve">
          <source>immutable.IndexedSeqOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3544d622095ae6ab367853d4df54fd816af4e84" translate="yes" xml:space="preserve">
          <source>immutable.IntMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae51196a64c6d1b85eb620ccfe164972b3ec6d5" translate="yes" xml:space="preserve">
          <source>immutable.Iterable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07a6bc6215ab7e696e0ff0aeeebd351b624f21a" translate="yes" xml:space="preserve">
          <source>immutable.LazyList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227adb71ad30c25465d940b3893df4c1aa572823" translate="yes" xml:space="preserve">
          <source>immutable.LinearSeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26bec7542909f376785920d2217cd790d392847" translate="yes" xml:space="preserve">
          <source>immutable.LinearSeqOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fa72fbe8c57dcf8524d91eeee300b998725019" translate="yes" xml:space="preserve">
          <source>immutable.List()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d242c7d70fa75aded9c8c5b7ad914b2c58443d8c" translate="yes" xml:space="preserve">
          <source>immutable.ListMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bda7b799b408891ed651f30332cf4617dfeb254" translate="yes" xml:space="preserve">
          <source>immutable.ListSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d3783c3e9426fd3718033e6423af7edde42704" translate="yes" xml:space="preserve">
          <source>immutable.LongMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992cba74b1efbf6e3b11c8813c790acdc2159ea2" translate="yes" xml:space="preserve">
          <source>immutable.Map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c23f1f85b66fa111e675193adb5a1a66719dc9e" translate="yes" xml:space="preserve">
          <source>immutable.MapOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0774c93ba74651385761f779bb787e03775b6066" translate="yes" xml:space="preserve">
          <source>immutable.Nil()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0d5715c2c50cd97e8c4334e213a580600f2999" translate="yes" xml:space="preserve">
          <source>immutable.NumericRange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d4efea18595b9f9c973fd94098f85b0f530268" translate="yes" xml:space="preserve">
          <source>immutable.Queue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbedd4449200bfe303424d53f29cfb25a78f7d75" translate="yes" xml:space="preserve">
          <source>immutable.Range()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4686fef0e30c1cf9bb0e470e4ba1f790a31f12d" translate="yes" xml:space="preserve">
          <source>immutable.Seq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466591a8ee80b4a18b338d92c30f586c9b8deae8" translate="yes" xml:space="preserve">
          <source>immutable.SeqMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed676e6a3c8b208f23b9ce8bea43103e2c2acfab" translate="yes" xml:space="preserve">
          <source>immutable.SeqOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32becc96293721eea90116bb76add6441b044d74" translate="yes" xml:space="preserve">
          <source>immutable.Set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9368c9ce7364b88220bed360db6ca64b8c58ad" translate="yes" xml:space="preserve">
          <source>immutable.SetOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a431ff0e079bfcd7abd5c080fbfe880669e827" translate="yes" xml:space="preserve">
          <source>immutable.SortedMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58097be25388070e390fdca5992f133049e1f8e6" translate="yes" xml:space="preserve">
          <source>immutable.SortedMapOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5fbdc4879e273c1d402eab5217629da8490628" translate="yes" xml:space="preserve">
          <source>immutable.SortedSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b83abab2233eaf5cbb93560a8c32a0dcba525a" translate="yes" xml:space="preserve">
          <source>immutable.SortedSetOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d2423ba4bc489221cdddbb951635b5495a76c3" translate="yes" xml:space="preserve">
          <source>immutable.Stream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a882d9e045b964ce22b942c018a69801b43c8bae" translate="yes" xml:space="preserve">
          <source>immutable.StrictOptimizedMapOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ea544e5b45dfe65a04b83535ccb53aed846b28" translate="yes" xml:space="preserve">
          <source>immutable.StrictOptimizedSeqOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e709a9baacd561d43ce1e711da5821c4a70cde43" translate="yes" xml:space="preserve">
          <source>immutable.StrictOptimizedSetOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f811ec2c29b3ba6bedc105cf0d1f6e6029f43b7" translate="yes" xml:space="preserve">
          <source>immutable.StrictOptimizedSortedMapOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f4b692c507a2ecff632523e75c5661f5bd7094" translate="yes" xml:space="preserve">
          <source>immutable.StrictOptimizedSortedSetOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdeaf008df72c9387aa08ba07467b424d54a97e2" translate="yes" xml:space="preserve">
          <source>immutable.StringOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823e856222ab7216979469ff2894431b76e60c1c" translate="yes" xml:space="preserve">
          <source>immutable.StringView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d9659b8a7e4cba78f7317cbb196864df17c3c0" translate="yes" xml:space="preserve">
          <source>immutable.TreeMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfce654db87da9ac032baa8b8e129fb722ddae0" translate="yes" xml:space="preserve">
          <source>immutable.TreeSeqMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3953a7e4a53fff8897e08c0fcfbc1dc4c12d1957" translate="yes" xml:space="preserve">
          <source>immutable.TreeSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7241044673f37c6a8d4cf036e0d0002eeb6b6076" translate="yes" xml:space="preserve">
          <source>immutable.Vector()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bc28738c39240ab186d2c10ecd82b230698b09" translate="yes" xml:space="preserve">
          <source>immutable.VectorBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03008d259911698a32c004ca177554331d93584c" translate="yes" xml:space="preserve">
          <source>immutable.VectorIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a482399095c9d8b9f074a2a70e3d7a243b927651" translate="yes" xml:space="preserve">
          <source>immutable.VectorMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac66571eef5628daf70b4bba4599ca7f7eda809" translate="yes" xml:space="preserve">
          <source>immutable.WrappedString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a425eeda1122802d92102afcc0f734c17a4c1ce" translate="yes" xml:space="preserve">
          <source>implicit abstract def iterableEvidence: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9446c685e0f70e9f759103f3fba61781355d7bb4" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24bufferhasasjava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60aa4f7312c8aa93d3b4e0531d0471f71711fde" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24concurrentmaphasasjava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ae750b1d61bf5c77cee0ddfc090d30ae34f196" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24iterablehasasjava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a66277df1e9d11fcba963026952d7b3f4eace8" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24iteratorhasasjava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c4bcf76c8b19e05d8676a13471310b6a1239a0" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24maphasasjava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9fafe799bba841048fd4588228c6f5a8610ac4" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24mutablemaphasasjava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc0ced186f98e065f0ed55de997deba6403549c" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24mutableseqhasasjava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275dea74eca1b2fe29a4d0604fedcd8c22910f15" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24mutablesethasasjava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7539bb91c28daed4cf9fcc290a920a27757e3aba" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24seqhasasjava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d253b28695cf85488290e8661d3b59c93f32cf27" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asjavaextensions%24sethasasjava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20d1d06f7f620bbd92417d3c345d6579837fad8" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24collectionhasasscala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38879b1938394088ce839303a892761b0dc2740" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24concurrentmaphasasscala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5da178738c0ae4a72a2b3b58cd9c4303dae2fe" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24dictionaryhasasscala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6622b7465b842021cb34d09ab3124d2a03b31019" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24enumerationhasasscala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94ac83b115dbf1d7bb7cb244a79d982af94c57b" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24iterablehasasscala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93f7131d3b5619c3ebb3ceab0e71b2715225d91" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24iteratorhasasscala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15bd19c5124fdad5e8a1ebfc306a683cf0b8be3" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24listhasasscala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05114558586ea09734ccf414b73dd56829f089ee" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24maphasasscala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824b76cd5bb55b215f162a2ac2437eb4507dc379" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24propertieshasasscala&quot;&gt;PropertiesHasAsScala&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5709fb38316abdab7f9448d8863890a5158ad84b" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/asscalaextensions%24sethasasscala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c3d20b05f5f1cfbf6e552b1a9efc7d51131dd7" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24anyarrayhasseqparstream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46010a587223e81666dba7a2d8189ec986d002ee" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24bytearrayhasseqparstream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a60f6c17ed0b65da404ae4f35bd515daff08e76" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24chararrayhasseqparstream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bca88e1a03278ed1a8f28595183b3905363d047" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24doublearrayhasseqparstream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4be00f31e05a437bcbcd492935f806140219d43" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24doublestreamhastoscala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ffac3af435d11f8e84e5a5b85127cc64368fc6" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24floatarrayhasseqparstream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f388c3513285dc0c455bbfe01c83935f7f623a12" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24intarrayhasseqparstream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e540ddf322689369268e05e9a199ad446651e68f" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24intstreamhastoscala&quot;&gt;IntStreamHasToScala&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdab12a12d5a66cf802ebb5f8f1b0a6946e3bd3" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24iterablehasseqstream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37513061c6e63f44d5bf7ef2a8a2fd4d4316bc8" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24iterablenongenerichasparstream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C &amp;lt;: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[_]&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306fa2898920f62e2840e09249f0cc24ca162c15" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24longarrayhasseqparstream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dafa90b16d52bff6e872741846fe4dd85a42ab" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24longstreamhastoscala&quot;&gt;LongStreamHasToScala&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ffc7a53854594d1b3d5537b3fa7622d20bbb7a" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24maphasparkeyvaluestream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../collection/mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;a href=&quot;../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, _]&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6928a78d597f281e30f023a203adfb5f46317096" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24maphasseqkeyvaluestream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../collection/mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;a href=&quot;../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, _]&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389bfb2053ea57015de7d3cb9f9d159d3c0caac9" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24shortarrayhasseqparstream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffef28635871a80f5f15a25df5a6bdd6a2627d86" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24stepperhasparstream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636bb857d11935d090047d9f2ed0fd19a7fa51fc" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24stepperhasseqstream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287b7508402f720137932b5feb4ebb67a5bbd92f" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24streamhastoscala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402375da213ccd0d9ac72127a37bd84b8cfcd36c" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;../collection/convert/streamextensions%24stringhasseqparstream&quot;&gt;StringHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca90486e8ae428c83b5f80863c8fe034e19e8284" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb430e0603e0ee1bd12be35e13267e20551615e2" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd502f7d93fbe8950e13c2a3e9a3fe9bf2e1c716" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f64b43e6a7127fc97e814ac5e0689e86f46fde0" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47880f821e0c726c104f8ee20df36e674c246983" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24maphasasjava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863417925e021455574bf52c5f38e3700392419e" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ff0a68e14aabb1499c45e6af81cf32c6d7f12e" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc582c43ed3d0b2bf3d477f48edf4dee56ba8ac9" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb9a27026836249de64902492194bf3a0815437" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24seqhasasjava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d902e8ee65290ac9a8f5b5bf8e84764ba50cf2" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asjavaextensions%24sethasasjava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b3a8f557d0c44bc2a62c879b1ea377c139f9b1" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6f8a5efbe3931ed566d233e35f5a8d00303e38" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3f11d5126397e15bec4e2924204f090f4dc4fe" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3794032f24da4e025f2cfccd8a3e79d01b15eff" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b945a508f657128bada105b921e727c1663d2e23" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c313a9e92985df97af162d4f59a97468b29a4fa3" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d971fbd0cca40144383e4dff0f1ab9a019d9d611" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24listhasasscala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2ca8b3dfc46fa38a3c28ac6fa60526e2da2981" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24maphasasscala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cafc2e292a47ee5a4190c51ab24042439c4b9dc" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot;&gt;PropertiesHasAsScala&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0826c2c4ae589a077d50323c41c4cdc353d5987e" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;asscalaextensions%24sethasasscala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a514f37dc1438135bb33020112182be6e6509f" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603ca3c45f75a48f5129fadb85fabb97a0ad229d" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b498b7796f50d010147379098b4e0ef6818ce327" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c862ed8fb03bb9fe27de645364932cd93611e109" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba2fce503010dc2683f4bafda934d8a092f90e6" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e03a9d95ad4f74907451c435df988d0860d3212" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a2e7fe8a9d3185f69f1cfede29e5f63d72de42" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c1cfba4339aa9b8cf07583d651708c87b3000b" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24intstreamhastoscala&quot;&gt;IntStreamHasToScala&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481208a8bc6d9f1180f13f0792b63f3617ac09e2" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24iterablehasseqstream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0ea5bf40314f29327b417fb8a02cde50884b63" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C &amp;lt;: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[_]&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a75945b7c4c8cc76666744eb82ba147d565110" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9355490aa8dc5b3663764fe59070d56b38d16175" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24longstreamhastoscala&quot;&gt;LongStreamHasToScala&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08884afb1e955df4e876690ef9713f974107c1b3" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, _]&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d7f91e969ac98e6a9fbac155159fb84e48c952" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, _]&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcad2f81f63d7cb049e070ddf18fb5b836545bbb" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017c54d43ab0f1ed5275444ef4272afa3d8c3f28" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24stepperhasparstream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd34213aae228b9d4ea7c609cbf03f944a86f0e7" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24stepperhasseqstream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8893e02f8518a14ba9fb9762e494fc52500f958" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24streamhastoscala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90674de31f68d61b7b3b19b8e215e6f9fa8899e1" translate="yes" xml:space="preserve">
          <source>implicit class &lt;a href=&quot;streamextensions%24stringhasseqparstream&quot;&gt;StringHasSeqParStream&lt;/a&gt; extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ffaf649a30140535706ff025f3d01780af3df4" translate="yes" xml:space="preserve">
          <source>implicit classAnyArrayHasSeqParStream[&lt;span name=&quot;A&quot;&gt;A &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d7313ecea9cd6a7d894c3e0974940efc89c51c" translate="yes" xml:space="preserve">
          <source>implicit classBufferHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92e00ebf73b568102705c78ef8b49a19e864225" translate="yes" xml:space="preserve">
          <source>implicit classByteArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25526d6540e19f43e8f0b7d4d7b3911e7a672d85" translate="yes" xml:space="preserve">
          <source>implicit classCharArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d5045d642930f4b79aee75c7d238c3d659b084" translate="yes" xml:space="preserve">
          <source>implicit classCollectionHasAsScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3447b9d8e2489533393c37c82bc5e65a905c7728" translate="yes" xml:space="preserve">
          <source>implicit classConcurrentMapHasAsJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eb1ce64ff821f04c4e85613c13960b5088d6d3" translate="yes" xml:space="preserve">
          <source>implicit classConcurrentMapHasAsScala[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96366efcd84db4c5420ad9a0e15bde78fd79938" translate="yes" xml:space="preserve">
          <source>implicit classDictionaryHasAsScala[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd3c5ff69f2128268aaf8298155a5d9c6ce0bb0" translate="yes" xml:space="preserve">
          <source>implicit classDoubleArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0965d8b78df1f545f85233faa197bf38afdab2" translate="yes" xml:space="preserve">
          <source>implicit classDoubleStreamHasToScala extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0667e6b70c288ab12016cb220183d9cbd9439906" translate="yes" xml:space="preserve">
          <source>implicit classEnumerationHasAsScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d4bca6e80061282b66ddfab360bd0810ddcaef" translate="yes" xml:space="preserve">
          <source>implicit classFloatArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cb4ecd7943c3a426f10cc4ee2da5d9885d7a94" translate="yes" xml:space="preserve">
          <source>implicit classIntArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070a93822d84b097b9ed9a7b2bd2ee6f0a29907e" translate="yes" xml:space="preserve">
          <source>implicit classIntStreamHasToScala extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9382c4f96c5710a4f0e16be1f2e2fecf6716d30" translate="yes" xml:space="preserve">
          <source>implicit classIterableHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14babdd0eb4c4f38dcf6a5f948cdfbb41a723811" translate="yes" xml:space="preserve">
          <source>implicit classIterableHasAsScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf57cf5a1deed98476c8705670727540c3e1a725" translate="yes" xml:space="preserve">
          <source>implicit classIterableHasSeqStream[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e6f48db1930ca167a71c6376adf631a1e3fe67" translate="yes" xml:space="preserve">
          <source>implicit classIterableNonGenericHasParStream[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C &amp;lt;: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[_]&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5979eb08fe5cd439e7af081c888700a37b4c125c" translate="yes" xml:space="preserve">
          <source>implicit classIteratorHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8a20c6d727c4959e57f2b3b7eb2019d5df77af" translate="yes" xml:space="preserve">
          <source>implicit classIteratorHasAsScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763da7f6507fbcd0b893eab59ed3274ceba63e66" translate="yes" xml:space="preserve">
          <source>implicit classListHasAsScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76877bb5af3b4e5ed6b16206f37411359ed0cef7" translate="yes" xml:space="preserve">
          <source>implicit classLongArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b0fc9257fcf4936b1b3d60b17be430f19d6739" translate="yes" xml:space="preserve">
          <source>implicit classLongStreamHasToScala extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9581ad57172611da0aaa788ef547385ce8fbfe" translate="yes" xml:space="preserve">
          <source>implicit classMapHasAsJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f94f5baef9e97014d12b27390d8e14ff7e29c0" translate="yes" xml:space="preserve">
          <source>implicit classMapHasAsScala[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2552af2ca7969b3246f7c6475941b21ff2a9cbf" translate="yes" xml:space="preserve">
          <source>implicit classMapHasParKeyValueStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, _]&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5910f46916db7338f7c4eaa3adcf7719fa53661" translate="yes" xml:space="preserve">
          <source>implicit classMapHasSeqKeyValueStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;, _]&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5698074b2dcdbb43d4c03c49eb1fb103ee23a10b" translate="yes" xml:space="preserve">
          <source>implicit classMutableMapHasAsJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3ab6e1aa3ef2ef1926a802f98d93fbe88a8c7d" translate="yes" xml:space="preserve">
          <source>implicit classMutableSeqHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567452fb8400f42279c583a423c84da424635218" translate="yes" xml:space="preserve">
          <source>implicit classMutableSetHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0e972415dc7a34afec769fb9257bad1bf57b44" translate="yes" xml:space="preserve">
          <source>implicit classPropertiesHasAsScala extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a7692cb9e8de9ac21ab3ee38902004421306ab" translate="yes" xml:space="preserve">
          <source>implicit classSeqHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1edb551b27f7f1ccc420e025b61720758b0967" translate="yes" xml:space="preserve">
          <source>implicit classSetHasAsJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defb02e5502f5fbb675393e2451e46448f581994" translate="yes" xml:space="preserve">
          <source>implicit classSetHasAsScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b236f250735b8750a96d2b9b890413dcdfe980a" translate="yes" xml:space="preserve">
          <source>implicit classShortArrayHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a9c0ab0f68c52406851a485990ecdd55902a43" translate="yes" xml:space="preserve">
          <source>implicit classStepperHasParStream[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416ddf38222b0bc1e6f4252ee0c5bd819b0ef456" translate="yes" xml:space="preserve">
          <source>implicit classStepperHasSeqStream[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e618a50e203cacfb7a1e15d641238821aa0fbfb" translate="yes" xml:space="preserve">
          <source>implicit classStreamHasToScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4c61b34bb466727e6180f8344e9bf9a185adb8" translate="yes" xml:space="preserve">
          <source>implicit classStringHasSeqParStream extends &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2d669fb1c1303de2432674a9987bac438f0494" translate="yes" xml:space="preserve">
          <source>implicit def $conforms[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: (&lt;span name=&quot;scala.Predef.$conforms.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Predef.$conforms.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da0a42199f92d6d542e0406b7415fadea7a923d" translate="yes" xml:space="preserve">
          <source>implicit def Boolean2boolean(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6aa9582feb055ced316ec31c5d5277be4e9044f" translate="yes" xml:space="preserve">
          <source>implicit def Byte2byte(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85c8ceb70dcfc7081d0ad8d98c4f4443d0f9fdd" translate="yes" xml:space="preserve">
          <source>implicit def Character2char(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e880b9abd829865bb1c981bbe41b001ce9ceccb1" translate="yes" xml:space="preserve">
          <source>implicit def Double2double(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a62a56d03fdebf8ac68d319f1186fe9e793e42d" translate="yes" xml:space="preserve">
          <source>implicit def Float2float(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5eceb0324f2af854ebf9d3618a2d18ab0956e2" translate="yes" xml:space="preserve">
          <source>implicit def Integer2int(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14aa7dc452cdfd5724df56a09624ba62756d8dec" translate="yes" xml:space="preserve">
          <source>implicit def Long2long(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f50702de4418b361af96897e66e6a8567ce4618" translate="yes" xml:space="preserve">
          <source>implicit def Option[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;eqv&quot;&gt;eqv: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Option.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Option.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b6fbc7b9b4dcbc10b16c768a403b3479ce5a98" translate="yes" xml:space="preserve">
          <source>implicit def Option[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Option.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Option.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7284d0b6146c4ecc3a5445b5f41c09d2c58393" translate="yes" xml:space="preserve">
          <source>implicit def Short2short(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d309d6ed5bc4d840af5bbdf5520cb8f2ab93785c" translate="yes" xml:space="preserve">
          <source>implicit def Tuple2[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple2.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple2.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7842438d86e7dba7caff61379a51f8590e4db57" translate="yes" xml:space="preserve">
          <source>implicit def Tuple2[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple2.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple2.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a17dca27357ee5a51b9d59268ea44f8043cabe" translate="yes" xml:space="preserve">
          <source>implicit def Tuple3[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple3.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple3.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple3.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0fb45797e8362b2fe9aec016ca6ad201bc6075" translate="yes" xml:space="preserve">
          <source>implicit def Tuple3[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple3.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple3.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple3.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0e6371ba2e15ff0fc8665f24bb70b5ec7bc54e" translate="yes" xml:space="preserve">
          <source>implicit def Tuple4[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple4.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple4.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple4.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv4&quot;&gt;eqv4: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple4.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79452fe03df1af95cce4b5f57e275f94cac1b736" translate="yes" xml:space="preserve">
          <source>implicit def Tuple4[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple4.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple4.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple4.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord4&quot;&gt;ord4: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple4.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131e7e1f5515987f2c61fab7e456fa3471d73d37" translate="yes" xml:space="preserve">
          <source>implicit def Tuple5[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple5.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple5.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple5.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv4&quot;&gt;eqv4: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple5.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv5&quot;&gt;eqv5: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple5.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0362b7b5a91b53630515a02f0c91236d4041968" translate="yes" xml:space="preserve">
          <source>implicit def Tuple5[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple5.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple5.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple5.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord4&quot;&gt;ord4: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple5.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord5&quot;&gt;ord5: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple5.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8448451efb905a949f070d4be58290257f470b29" translate="yes" xml:space="preserve">
          <source>implicit def Tuple6[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple6.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple6.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple6.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv4&quot;&gt;eqv4: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple6.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv5&quot;&gt;eqv5: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple6.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv6&quot;&gt;eqv6: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple6.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6810f7454ba1de53e1103defb2e4cb8ac7405c87" translate="yes" xml:space="preserve">
          <source>implicit def Tuple6[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple6.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple6.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple6.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord4&quot;&gt;ord4: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple6.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord5&quot;&gt;ord5: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple6.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord6&quot;&gt;ord6: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple6.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0ca19f5db33e21fad7d24aa31fcb7859e1c8ed" translate="yes" xml:space="preserve">
          <source>implicit def Tuple7[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv4&quot;&gt;eqv4: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv5&quot;&gt;eqv5: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv6&quot;&gt;eqv6: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv7&quot;&gt;eqv7: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple7.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796881b48aa99a318f55436c727423a2ab6fdb65" translate="yes" xml:space="preserve">
          <source>implicit def Tuple7[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord4&quot;&gt;ord4: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord5&quot;&gt;ord5: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord6&quot;&gt;ord6: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord7&quot;&gt;ord7: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple7.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba55637a49317e681cd5d9f18d61feae7394a0b5" translate="yes" xml:space="preserve">
          <source>implicit def Tuple8[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv4&quot;&gt;eqv4: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv5&quot;&gt;eqv5: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv6&quot;&gt;eqv6: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv7&quot;&gt;eqv7: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv8&quot;&gt;eqv8: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple8.T8&quot;&gt;T8&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27655c309e981ccc74c0201ded247b9f9703140" translate="yes" xml:space="preserve">
          <source>implicit def Tuple8[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord4&quot;&gt;ord4: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord5&quot;&gt;ord5: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord6&quot;&gt;ord6: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord7&quot;&gt;ord7: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord8&quot;&gt;ord8: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple8.T8&quot;&gt;T8&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30be79c8cb38ef91a2e9f65ed562b65c80f3b626" translate="yes" xml:space="preserve">
          <source>implicit def Tuple9[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;](implicit &lt;span name=&quot;eqv1&quot;&gt;eqv1: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv2&quot;&gt;eqv2: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv3&quot;&gt;eqv3: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv4&quot;&gt;eqv4: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv5&quot;&gt;eqv5: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv6&quot;&gt;eqv6: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv7&quot;&gt;eqv7: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv8&quot;&gt;eqv8: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T8&quot;&gt;T8&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;eqv9&quot;&gt;eqv9: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.Tuple9.T9&quot;&gt;T9&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[(&lt;span name=&quot;scala.math.Equiv.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.math.Equiv.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58360c4f9ff2e0549ce26985156d477ca6a45085" translate="yes" xml:space="preserve">
          <source>implicit def Tuple9[&lt;span name=&quot;T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;T9&quot;&gt;T9&lt;/span&gt;](implicit &lt;span name=&quot;ord1&quot;&gt;ord1: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord2&quot;&gt;ord2: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T2&quot;&gt;T2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord3&quot;&gt;ord3: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T3&quot;&gt;T3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord4&quot;&gt;ord4: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T4&quot;&gt;T4&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord5&quot;&gt;ord5: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T5&quot;&gt;T5&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord6&quot;&gt;ord6: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T6&quot;&gt;T6&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord7&quot;&gt;ord7: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T7&quot;&gt;T7&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord8&quot;&gt;ord8: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T8&quot;&gt;T8&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;ord9&quot;&gt;ord9: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.Tuple9.T9&quot;&gt;T9&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[(&lt;span name=&quot;scala.math.Ordering.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.math.Ordering.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388f2c6120ffafceb5c12e017493803ff4d55739" translate="yes" xml:space="preserve">
          <source>implicit def anyAccumulatorFactoryInfo[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.anyAccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../jdk/anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.anyAccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8673e84479b21127e85032399fa085c476d6e73e" translate="yes" xml:space="preserve">
          <source>implicit def anyAccumulatorFactoryShape[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape.anyAccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape.anyAccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd462a1dfd99d03b692d6f729c1bb3bb7a94aae0" translate="yes" xml:space="preserve">
          <source>implicit def anyRefMapIsMap[&lt;span name=&quot;K0&quot;&gt;K0 &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;]: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;a href=&quot;../mutable/anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.anyRefMapIsMap.K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.anyRefMapIsMap.V0&quot;&gt;V0&lt;/span&gt;]] { ... /* 3 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2dde530a5fb7e5219d3c778428227405f044ef0" translate="yes" xml:space="preserve">
          <source>implicit def anyStepperShape[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShapeLowPriority1.anyStepperShape.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShapeLowPriority1.anyStepperShape.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ebce7e13972af72b39f28fd565dcd0c8078aad" translate="yes" xml:space="preserve">
          <source>implicit def anyStreamShape[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1.anyStreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1.anyStreamShape.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1.anyStreamShape.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7842fa27df5f25a6d785b8fc0d5ac2e48a84b42" translate="yes" xml:space="preserve">
          <source>implicit def arrayFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.arrayFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.arrayFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.Factory.arrayFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fa0e71661b961f07fbe699ac3bd6e2b5d14a21" translate="yes" xml:space="preserve">
          <source>implicit def arrayIsSeq[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.arrayIsSeq.A0&quot;&gt;A0&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.arrayIsSeq.A0&quot;&gt;A0&lt;/span&gt;]] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ca1173e99ff32b6e733fdcdcd79d86b4d6eae0" translate="yes" xml:space="preserve">
          <source>implicit def asJavaCollectionConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaCollectionConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavacollection&quot; id=&quot;scala.collection.JavaConverters.AsJavaCollection&quot; name=&quot;scala.collection.JavaConverters.AsJavaCollection&quot;&gt;AsJavaCollection&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaCollectionConverter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5a73102a2db1cf632bede6d10ae72597b59fda" translate="yes" xml:space="preserve">
          <source>implicit def asJavaDictionaryConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaDictionaryConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.asJavaDictionaryConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavadictionary&quot; id=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot; name=&quot;scala.collection.JavaConverters.AsJavaDictionary&quot;&gt;AsJavaDictionary&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaDictionaryConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.asJavaDictionaryConverter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc9ecf2229388a99fb30c8ae6664bddb5917158" translate="yes" xml:space="preserve">
          <source>implicit def asJavaEnumerationConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaEnumerationConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjavaenumeration&quot; id=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot; name=&quot;scala.collection.JavaConverters.AsJavaEnumeration&quot;&gt;AsJavaEnumeration&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaEnumerationConverter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33667766b79c1ea1d9da62021fda9537caaaaf1" translate="yes" xml:space="preserve">
          <source>implicit def asJavaIterableConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaIterableConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaIterableConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f098c765e2b6e4af9ef363c086fa121a8cacf92" translate="yes" xml:space="preserve">
          <source>implicit def asJavaIteratorConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaIteratorConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asJavaIteratorConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5786395e0ef7a2dc1cd014588d0a99496552aaa6" translate="yes" xml:space="preserve">
          <source>implicit def asScalaBufferConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asScalaBufferConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asScalaBufferConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b817a20740e6d3b133b1f80d1206a08d73c52a" translate="yes" xml:space="preserve">
          <source>implicit def asScalaIteratorConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asScalaIteratorConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asScalaIteratorConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b592662630c278bcfc643a0d682ed841d52e37" translate="yes" xml:space="preserve">
          <source>implicit def asScalaSetConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asScalaSetConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.asScalaSetConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aefc6d153c84c716d1518d5fa1dc901f8f99316" translate="yes" xml:space="preserve">
          <source>implicit def augmentString(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/stringops&quot; id=&quot;scala.collection.StringOps&quot; name=&quot;scala.collection.StringOps&quot;&gt;StringOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95aaea15fe47cc1c64c06ce14aee0c6090e3dc61" translate="yes" xml:space="preserve">
          <source>implicit def baseStepperShape[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShapeLowPriority2.baseStepperShape.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShapeLowPriority2.baseStepperShape.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4562d2c87e99706abb0e832a53739308d66d946d" translate="yes" xml:space="preserve">
          <source>implicit def bitSetOpsIsIterable[&lt;span name=&quot;C0&quot;&gt;C0 &amp;lt;: &lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; with &lt;a href=&quot;../bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.bitSetOpsIsIterable.C0&quot;&gt;C0&lt;/span&gt;]&lt;/span&gt;]: &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.bitSetOpsIsIterable.C0&quot;&gt;C0&lt;/span&gt;] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb86fb70c112029851d26c97a24081e1fe14e21" translate="yes" xml:space="preserve">
          <source>implicit def boolean2Boolean(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d4198e22e6b81427c2e0dccc79983863d2a93e" translate="yes" xml:space="preserve">
          <source>implicit def booleanArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bad6efc93d0b4d5989020d6b3bdf617f08018c" translate="yes" xml:space="preserve">
          <source>implicit def booleanPropAsBoolean(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22d3994e2fad49d50b87b33c22ea2201f06c9e2" translate="yes" xml:space="preserve">
          <source>implicit def booleanWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichBoolean&quot;&gt;RichBoolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0078dae3c7f762d5c0598c33167288b6da920cca" translate="yes" xml:space="preserve">
          <source>implicit def buffer AsJavaList[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.buffer AsJavaList.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.buffer AsJavaList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1dc5bee9a829e33e078225008b156ad268b185" translate="yes" xml:space="preserve">
          <source>implicit def bufferAsJavaListConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.bufferAsJavaListConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.bufferAsJavaListConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4f6e61152860a793a1727625b69e70e3b3bcad" translate="yes" xml:space="preserve">
          <source>implicit def buildFromAnyRefMap[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[_, _], (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.buildFromAnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.buildFromAnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.buildFromAnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.buildFromAnyRefMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af57c0ba19db09de1fc553f50755f97ae7da4df1" translate="yes" xml:space="preserve">
          <source>implicit def buildFromArray[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromArray.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[_], &lt;span name=&quot;scala.collection.BuildFrom.buildFromArray.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromArray.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1164168b685e15e19cb9c7136b71e2f2f94f01" translate="yes" xml:space="preserve">
          <source>implicit def buildFromBitSet[&lt;span name=&quot;C&quot;&gt;C &amp;lt;: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; with &lt;a href=&quot;bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromBitSet.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;]: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromBitSet.C&quot;&gt;C&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromBitSet.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228d6787c6516cc11a06ed75315e94a4f8db6616" translate="yes" xml:space="preserve">
          <source>implicit def buildFromIntMap[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[_], (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.buildFromIntMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.buildFromIntMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb7009ce1bc5ce324c280cce2a3330f0f7d91f9" translate="yes" xml:space="preserve">
          <source>implicit def buildFromIterableOps[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.CC.X&quot;&gt;X&lt;/span&gt;] with &lt;a href=&quot;iterableops&quot; id=&quot;scala.collection.IterableOps&quot; name=&quot;scala.collection.IterableOps&quot;&gt;IterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.CC&quot;&gt;CC&lt;/span&gt;, _]&lt;/span&gt;, &lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.A0&quot;&gt;A0&lt;/span&gt;], &lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterableOps.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac09661804956531b47d20954b51cd0fdb7ab8d9" translate="yes" xml:space="preserve">
          <source>implicit def buildFromIterator[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[_], &lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterator.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority2.buildFromIterator.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c0df2d2dad73bcf81d2d7b3c8241811ba0d8a8" translate="yes" xml:space="preserve">
          <source>implicit def buildFromLongMap[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[_], (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.buildFromLongMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.buildFromLongMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf173001de7356fcb71f24510d843cbb9b62732" translate="yes" xml:space="preserve">
          <source>implicit def buildFromLongMap[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[_], (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.buildFromLongMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.buildFromLongMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b17367c212d57a0a602e498c90893e83bd5904" translate="yes" xml:space="preserve">
          <source>implicit def buildFromMapOps[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC.Y&quot;&gt;Y&lt;/span&gt;] with &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC&quot;&gt;CC&lt;/span&gt;, _]&lt;/span&gt;, &lt;span name=&quot;K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;, &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.V0&quot;&gt;V0&lt;/span&gt;], (&lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromMapOps.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4732c80d65948b3c10b928692f8e38974f94a847" translate="yes" xml:space="preserve">
          <source>implicit def buildFromSortedMapOps[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC.Y&quot;&gt;Y&lt;/span&gt;] with &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.SortedMapOps&quot; name=&quot;scala.collection.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC.Y&quot;&gt;Y&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, _]&lt;/span&gt;, &lt;span name=&quot;K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;, &lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.V0&quot;&gt;V0&lt;/span&gt;], (&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.buildFromSortedMapOps.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c141173a7920ca052539fd4d7725be13470655" translate="yes" xml:space="preserve">
          <source>implicit def buildFromSortedSetOps[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.CC.X&quot;&gt;X&lt;/span&gt;] with &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.SortedSetOps&quot; name=&quot;scala.collection.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.CC.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, _]&lt;/span&gt;, &lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.A0&quot;&gt;A0&lt;/span&gt;], &lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.buildFromSortedSetOps.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375777ecf7ceaa8249c2f6d335932cdd9c9e512a" translate="yes" xml:space="preserve">
          <source>implicit def buildFromView[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromView.A&quot;&gt;A&lt;/span&gt;], &lt;span name=&quot;scala.collection.BuildFrom.buildFromView.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.buildFromView.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d031294549b2427db02d764c8f8778fd39fefd36" translate="yes" xml:space="preserve">
          <source>implicit def builderToProcess(&lt;span name=&quot;builder&quot;&gt;builder: &lt;span name=&quot;scala.sys.process.processInternal.JProcessBuilder&quot;&gt;JProcessBuilder&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a833d8f83a6e4cbaa9317c3cb1cd382a4939e521" translate="yes" xml:space="preserve">
          <source>implicit def buildersToProcess[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;builders&quot;&gt;builders: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.sys.process.ProcessImplicits.buildersToProcess.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;convert&quot;&gt;convert: (&lt;span name=&quot;scala.sys.process.ProcessImplicits.buildersToProcess.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4f266d26025663a8c11f4f78b7b5fe809d5dd7" translate="yes" xml:space="preserve">
          <source>implicit def byte2Byte(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e2be92daaed052d618f2db13075b85cc967ca9" translate="yes" xml:space="preserve">
          <source>implicit def byte2double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf0defe9d101c8abd74cda380cc2a23494be99e" translate="yes" xml:space="preserve">
          <source>implicit def byte2float(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd5ed4eb831820e6ddbd8104e5b6b00aa65791a" translate="yes" xml:space="preserve">
          <source>implicit def byte2int(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bbe03444842f6691b7d01dcbb79b87938e0459" translate="yes" xml:space="preserve">
          <source>implicit def byte2long(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7723f64253cfe66be730ca94e1e5bec73ccc3c44" translate="yes" xml:space="preserve">
          <source>implicit def byte2short(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b976e1551255912f2e47a252215ecb935aedd66" translate="yes" xml:space="preserve">
          <source>implicit def byteArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f211aa966abdbcad0ddb836d607efc32322bc14" translate="yes" xml:space="preserve">
          <source>implicit def byteWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichByte&quot;&gt;RichByte&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc6754011ca16db44c5653d70efd617b387024d" translate="yes" xml:space="preserve">
          <source>implicit def char2Character(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30715fb7ea4f7a2d530fd2d8c85ee2fcfa01d5b5" translate="yes" xml:space="preserve">
          <source>implicit def char2double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258ee6bb39f74f93f2cd120035c1559ad1a9e59a" translate="yes" xml:space="preserve">
          <source>implicit def char2float(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0210ade56fdca3da4f8609546c10427a6097161c" translate="yes" xml:space="preserve">
          <source>implicit def char2int(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fd752d3427c4bd33c4b00a152f209753e38883" translate="yes" xml:space="preserve">
          <source>implicit def char2long(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3ffa96f8254a10fcf046fcde478262de70f9a1" translate="yes" xml:space="preserve">
          <source>implicit def charArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b252eea31201c954e92838d7984753e03e1fd51" translate="yes" xml:space="preserve">
          <source>implicit def charWrapper(&lt;span name=&quot;c&quot;&gt;c: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichChar&quot;&gt;RichChar&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc54d64a33a97f311e5a6716a5393166ee27f9e" translate="yes" xml:space="preserve">
          <source>implicit def charset2codec(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.nio.charset.Charset&quot;&gt;Charset&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fd769a96a1ffd82df9a02b93aec1c54239110e" translate="yes" xml:space="preserve">
          <source>implicit def collection AsScalaIterable[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.collection AsScalaIterable.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.collection AsScalaIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2967271457fdb6ef6983f9aac06a27f821776539" translate="yes" xml:space="preserve">
          <source>implicit def collection asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.collection asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.collection asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857a082f728e64f11585c7126ec52efcacef1860" translate="yes" xml:space="preserve">
          <source>implicit def collectionAsScalaIterableConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.collectionAsScalaIterableConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.collectionAsScalaIterableConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4449b246a8d0298b7cb26e8b959daf536d73e1ee" translate="yes" xml:space="preserve">
          <source>implicit def comparatorToOrdering[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;span name=&quot;scala.math.LowPriorityOrderingImplicits.comparatorToOrdering.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.LowPriorityOrderingImplicits.comparatorToOrdering.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f9c100bb9c166e5a2bec913a312d7b8997d44b" translate="yes" xml:space="preserve">
          <source>implicit def decoder2codec(&lt;span name=&quot;cd&quot;&gt;cd: &lt;span name=&quot;java.nio.charset.CharsetDecoder&quot;&gt;CharsetDecoder&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669979a122f7c5d9b8861c47ccdc2d3e466b45fd" translate="yes" xml:space="preserve">
          <source>implicit def default[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.default.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0821133dc6796b9dbf25d70b46eb8f1d846a4a4a" translate="yes" xml:space="preserve">
          <source>implicit def dictionary AsScalaMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.dictionary AsScalaMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToScalaImplicits.dictionary AsScalaMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.dictionary AsScalaMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToScalaImplicits.dictionary AsScalaMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be84fd34f8218c0deb652aa2f423177865fe06fe" translate="yes" xml:space="preserve">
          <source>implicit def dictionary asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.dictionary asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.dictionary asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.dictionary asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.dictionary asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfda4acb19f0d76541cd0b372d997d4088bfb3ab" translate="yes" xml:space="preserve">
          <source>implicit def dictionaryAsScalaMapConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.dictionaryAsScalaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.dictionaryAsScalaMapConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.dictionaryAsScalaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.dictionaryAsScalaMapConverter.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9549246309a996314327924afa5cea274b5529ef" translate="yes" xml:space="preserve">
          <source>implicit def double2Double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc95ce09e545377c771d83624f73c87310509cff" translate="yes" xml:space="preserve">
          <source>implicit def double2bigDecimal(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea247a237f9c996d7e515ecb4de475b802bcca1" translate="yes" xml:space="preserve">
          <source>implicit def doubleArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bf1afd79a2536502883257e91dd48c99f0125e" translate="yes" xml:space="preserve">
          <source>implicit def doubleWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichDouble&quot;&gt;RichDouble&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb221d1ba85ea6de11bafed3cb75482c20e344d" translate="yes" xml:space="preserve">
          <source>implicit def durationToPair(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a99cd4f4396f6ed0c1c9c428b71faebb5f8fcf" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaBiConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbiconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer&quot;&gt;RichFunction2AsBiConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4230569103eca13bda5fc9f072a5483359b840" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority3FunctionExtensions.enrichAsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority3FunctionExtensions.enrichAsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority3FunctionExtensions.enrichAsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction&quot;&gt;RichFunction2AsBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority3FunctionExtensions.enrichAsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority3FunctionExtensions.enrichAsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority3FunctionExtensions.enrichAsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed35329c3c000c6b6af54852ad0178f848e9193e" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaBiPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbipredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate&quot;&gt;RichFunction2AsBiPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70ae12042da8d3dcb92c0cddd808767131a5cf2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaBinaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;evA2&quot;&gt;evA2: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator&quot;&gt;RichFunction2AsBinaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aee76b7a1ec0a013a55a094635800fc3d548be2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaBooleanSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asbooleansupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier&quot;&gt;RichFunction0AsBooleanSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63836e0aa48d2481f90902bde3409bc14090885a" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer&quot;&gt;RichFunction1AsConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5e45d505cee5e8f55ff965aa6ab86ac5394641" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleBinaryOperator[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleBinaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleBinaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asdoublebinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator&quot;&gt;RichFunction2AsDoubleBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd42ba85573385dfdebc414d3368e8979c67903" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleConsumer[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleConsumer.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleConsumer.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer&quot;&gt;RichFunction1AsDoubleConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cc1982dda1e75b1aa9c54b44f78c3359410bf2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaDoubleFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaDoubleFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction&quot;&gt;RichFunction1AsDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5344521e92b9ca5257897ca62f40dd520a5b20b" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoublePredicate[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoublePredicate.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoublePredicate.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoublepredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate&quot;&gt;RichFunction1AsDoublePredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f271ee5ee824949aa56e0a2a9442e0768c18e5a8" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asdoublesupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier&quot;&gt;RichFunction0AsDoubleSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9e2af06bd7b9e0806685170ace4f7e91e85904" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleToIntFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleToIntFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleToIntFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction&quot;&gt;RichFunction1AsDoubleToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67c1068fe40ed51c41ab64f2df93862e4e605f2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleToLongFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleToLongFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleToLongFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubletolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction&quot;&gt;RichFunction1AsDoubleToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cb4815a61933677a4393aee8ddd6799b7a973c" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaDoubleUnaryOperator[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleUnaryOperator.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaDoubleUnaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asdoubleunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator&quot;&gt;RichFunction1AsDoubleUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d99f3e6a558550e632f7b3fbc2897bfb1cbd0e0" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction&quot;&gt;RichFunction1AsFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf9848c805d58a4095192f8a16fda94132471cd" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntBinaryOperator[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntBinaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntBinaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asintbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator&quot;&gt;RichFunction2AsIntBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0c01b055c107e517a364284409a244996595ff" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntConsumer[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntConsumer.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntConsumer.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer&quot;&gt;RichFunction1AsIntConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6121c9d9ea7b209b1fe58a494a06de00383447" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaIntFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaIntFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction&quot;&gt;RichFunction1AsIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5dcf249c2e5571d5304927c952e95c26610484" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntPredicate[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntPredicate.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntPredicate.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate&quot;&gt;RichFunction1AsIntPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca212bdd7166d00cbbd60b4f23c96374d1b06fb1" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0asintsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier&quot;&gt;RichFunction0AsIntSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15166c31e7000b90400656b89989526452c1a096" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntToDoubleFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntToDoubleFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntToDoubleFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asinttodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction&quot;&gt;RichFunction1AsIntToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c528e412c465d5e628347b92b0fe7abe9a8022ee" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntToLongFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntToLongFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntToLongFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asinttolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction&quot;&gt;RichFunction1AsIntToLongFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3050fce7b0df49e89e89cbb6987d498dadbfe6b" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaIntUnaryOperator[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntUnaryOperator.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaIntUnaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asintunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator&quot;&gt;RichFunction1AsIntUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087f516c811ef805d1a5e4f0716f6f7fc5aa6d03" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongBinaryOperator[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongBinaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongBinaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongBinaryOperator.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2aslongbinaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator&quot;&gt;RichFunction2AsLongBinaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a73fb37cc1d38fbae7943aeea829fe74d51200" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongConsumer[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongConsumer.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongConsumer.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer&quot;&gt;RichFunction1AsLongConsumer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d89bbfa3177182bde52ae5874f56a6c4a54835" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaLongFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaLongFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction&quot;&gt;RichFunction1AsLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f254419fe9e38b4a20ab1f248a4763f2d1769d" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongPredicate[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongPredicate.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongPredicate.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongpredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate&quot;&gt;RichFunction1AsLongPredicate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e979941fb6dbbbe7a35cdbb9a3e4728d1c8db7" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0aslongsupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier&quot;&gt;RichFunction0AsLongSupplier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e86067b4284f1cbdc198cf0fe9b4eeeb52cb1a9" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongToDoubleFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongToDoubleFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongToDoubleFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongtodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction&quot;&gt;RichFunction1AsLongToDoubleFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb1f038da3f9509ddc40fd600181799db6e1371" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongToIntFunction[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongToIntFunction.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongToIntFunction.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongtointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction&quot;&gt;RichFunction1AsLongToIntFunction&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3cda56b2560c8c5b3d2081977ee466c68b8b26" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaLongUnaryOperator[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongUnaryOperator.A0&quot;&gt;A0&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA0&quot;&gt;evA0: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsJavaLongUnaryOperator.A0&quot;&gt;A0&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aslongunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator&quot;&gt;RichFunction1AsLongUnaryOperator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9982c901b811f4286212fbe14aa9f89e2924d8" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaObjDoubleConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjDoubleConsumer.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjDoubleConsumer.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjdoubleconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer&quot;&gt;RichFunction2AsObjDoubleConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23af300a1e650c22e1f974423a206ffc96b59fa3" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaObjIntConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjIntConsumer.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjIntConsumer.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjintconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer&quot;&gt;RichFunction2AsObjIntConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103107cee3724a54ef5d9e5b1f24e4ebbc9ceb84" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaObjLongConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjLongConsumer.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjLongConsumer.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2asobjlongconsumer&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer&quot;&gt;RichFunction2AsObjLongConsumer&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f71a3afdc59083db9b1e381c54d3b8d38922935" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1aspredicate&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate&quot;&gt;RichFunction1AsPredicate&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087677dcd666737128049fce9a130900f9a94b68" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaSupplier[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaSupplier.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction0assupplier&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier&quot;&gt;RichFunction0AsSupplier&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bace09d6a5222f98bcd34269f2d8c484953047b" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaToDoubleBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astodoublebifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction&quot;&gt;RichFunction2AsToDoubleBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4562d9bfa0b866a8c0147782611560b3f32cfa26" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaToDoubleFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astodoublefunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction&quot;&gt;RichFunction1AsToDoubleFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efe05731a6bae334a0b4262f554a67d84cbd571" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaToIntBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astointbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction&quot;&gt;RichFunction2AsToIntBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff0aac86746feb5e8264c87e0aa9c9b06932122" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaToIntFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astointfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction&quot;&gt;RichFunction1AsToIntFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd3c4be844e9bb36a1c447d84c0523d786b3189" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaToLongBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction2astolongbifunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction&quot;&gt;RichFunction2AsToLongBiFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority2FunctionExtensions.enrichAsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4dee996843e28261aac9b1ceff2d726b3ae348" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaToLongFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1astolongfunction&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction&quot;&gt;RichFunction1AsToLongFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc7b1e98950058da3fdbe68e43f831573f61170" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsJavaUnaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaUnaryOperator.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;evA1&quot;&gt;evA1: &lt;a href=&quot;../%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaUnaryOperator.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunction1asunaryoperator&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator&quot;&gt;RichFunction1AsUnaryOperator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority1FunctionExtensions.enrichAsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c439f96c1856b4bd293ea07132d610fd841b596" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromBiConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiConsumer.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbiconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2&quot;&gt;RichBiConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e4c63a76ce2f135eae3f0087e87ff429ec7165" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2&quot;&gt;RichBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48760bc8f705c341a23b066ad99772624b589fc9" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromBiPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiPredicate.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbipredicateasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2&quot;&gt;RichBiPredicateAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ecd4e2afaba9aa90c2f74c6fcf226d56637c87" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromBinaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2&quot;&gt;RichBinaryOperatorAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d3c34f0d895c2d4df267af6ec2c5b375bbe78d" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromBooleanSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richbooleansupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0&quot;&gt;RichBooleanSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4953708b8868211c01ce14f32a9419ca72fe30ec" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1&quot;&gt;RichConsumerAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fcb6bcecc1b270ef942424afc7a5560a8c4eb4" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublebinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2&quot;&gt;RichDoubleBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b3cfcc82c1468f5584cfaa81e779437b7f3690" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubleconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1&quot;&gt;RichDoubleConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023fd3e0f2b5b226bc27a9ddc13ab309c5c9f627" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromDoubleFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1&quot;&gt;RichDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f85a6ab7fb0e25eae3b5e6d362d319b634e20d8" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoublePredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublepredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1&quot;&gt;RichDoublePredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefffd8d8e375299fb06783f57f434caf289c6b1" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoublesupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0&quot;&gt;RichDoubleSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4939ba5a3259d43be2e5bc110fd1fbf1685f48" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubletointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1&quot;&gt;RichDoubleToIntFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0706ad7b0efdb77d213eeea1d9517e517e754fbe" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubletolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1&quot;&gt;RichDoubleToLongFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23711591d8bb51f278928a157ea0e64b1c24de40" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromDoubleUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richdoubleunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1&quot;&gt;RichDoubleUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12bf0317097e66a6766204912677ef2f543b715" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1&quot;&gt;RichFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba5c4d9c028c7bbc4f07a484366c63cca3bd263" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2&quot;&gt;RichIntBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70f18e25174aacdb05ed87fc130632cabd9ff95" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1&quot;&gt;RichIntConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7fb65cb1f6d37bccc9286640ab7805ca4fb4e82" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromIntFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1&quot;&gt;RichIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89115053d8574f5085bfc943a1aec337f7e862ce" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1&quot;&gt;RichIntPredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba1883abb307d5e47e2737d75f5aab9f9ceb6b2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0&quot;&gt;RichIntSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f57c7fbb982386f417f987b6e49ca6e3e26bbf3" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richinttodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1&quot;&gt;RichIntToDoubleFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61d764a97fd51ac607d297746c183c0311b76ef" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richinttolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1&quot;&gt;RichIntToLongFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98110f6fc40f2415c51ce83fd53d3316a9828c2a" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromIntUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richintunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1&quot;&gt;RichIntUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a9cad89cc3ee24cc318174294a27828b34785b" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongbinaryoperatorasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2&quot;&gt;RichLongBinaryOperatorAsFunction2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85317c52e90241458df06b7103c4eaae4003c74e" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongconsumerasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1&quot;&gt;RichLongConsumerAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b145b029ef61e82dbc6f532e4e53b5cd4060cda1" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromLongFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1&quot;&gt;RichLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7e54db444be26a9172a0917e61c82528cf6ec2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1&quot;&gt;RichLongPredicateAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f54dbd14637f15462e73789f41081a3cdc22c2f" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0&quot;&gt;RichLongSupplierAsFunction0&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55463dbe29c51c72b5eeac83179e51f5c4099ec2" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1&quot;&gt;RichLongToDoubleFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7934e45e7d8798fc361aee134c4480656db75286" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1&quot;&gt;RichLongToIntFunctionAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094d8cd36c4480f6e8937b7a229d5271033a75be" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromLongUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richlongunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1&quot;&gt;RichLongUnaryOperatorAsFunction1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ab3ed7f77ca591b8020da0ee7718a2bc8575c5" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromObjDoubleConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjdoubleconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2&quot;&gt;RichObjDoubleConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d91ce94fd69cda293cefd4b6a5a04f5b736950d" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromObjIntConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjintconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2&quot;&gt;RichObjIntConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f203370a02778bfb60b7ba87f90a9ad3d8f8fe27" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromObjLongConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richobjlongconsumerasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2&quot;&gt;RichObjLongConsumerAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a222fd55f3189affefb6f305cc0acad16868c03b" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromPredicate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richpredicateasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1&quot;&gt;RichPredicateAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddeadd1b87a617f30f0b31479f9bf31840b842e" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromSupplier[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromSupplier.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richsupplierasfunction0&quot; id=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot; name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0&quot;&gt;RichSupplierAsFunction0&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7ddc950b5b671e5f0de35d98bebb9c38e105e1" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromToDoubleBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtodoublebifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2&quot;&gt;RichToDoubleBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ff8788ef7be0d92254b0428c5f8216095e8095" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromToDoubleFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtodoublefunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1&quot;&gt;RichToDoubleFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b62718ec02a20b623f6e7e0b402b519cb62faba" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromToIntBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtointbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2&quot;&gt;RichToIntBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38876893d5b826770f5152e87a0894e9c728173b" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromToIntFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToIntFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtointfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1&quot;&gt;RichToIntFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425126f51dba601a2b8247c5591ebb6e0660a324" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromToLongBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtolongbifunctionasfunction2&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2&quot;&gt;RichToLongBiFunctionAsFunction2&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb424007fdb3a2de0eef9fc0a0ac635fc138dc70" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromToLongFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToLongFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richtolongfunctionasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1&quot;&gt;RichToLongFunctionAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484b5fadb24fb0ca7ea6807182a07482ef6ba00e" translate="yes" xml:space="preserve">
          <source>implicit def enrichAsScalaFromUnaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromUnaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;functionwrappers%24%24richunaryoperatorasfunction1&quot; id=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot; name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1&quot;&gt;RichUnaryOperatorAsFunction1&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Priority0FunctionExtensions.enrichAsScalaFromUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab15d8ebcdc9727967668911d5eb1eaf47636a9a" translate="yes" xml:space="preserve">
          <source>implicit def enumeration AsScalaIterator[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.enumeration AsScalaIterator.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.enumeration AsScalaIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335feec5c61942ea97ca541f189df208adf1fce5" translate="yes" xml:space="preserve">
          <source>implicit def enumeration asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.enumeration asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.enumeration asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8544ca7d39a942a5e24d2e06b36c099474f819b" translate="yes" xml:space="preserve">
          <source>implicit def enumerationAsScalaIteratorConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.enumerationAsScalaIteratorConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.enumerationAsScalaIteratorConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e7d1778d60984d3b0945200e05c98779154c81" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26e282e4440af594021423e654fe3da34f355bc" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8065165c52019cae86e62112ae7e24aff956b467" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e2e5912e98560cfce6a30d18b419cb894ebc1f" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a801b0f7aaa0deba137539aefe14f08fb337783" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e41deb8eb57906d44e15bbcb1856b37bd01db07" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cce85e82e3388b58f07bb71d20aaf23f2bae62f" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9923a8ae53f90cb05772063b04c80963d4ce9c31" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab71fe8e9db3abbfb389f728af41b7c0a138e63" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40b8b629382b192aeb4a624260c6150368903e5" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7997d283940ccba67ce89a5833bf964489ac9218" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79883091470f5fe6e779e93c76e7a771f17ae24f" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a61f135880c93f015accae56fdcd51f5cd30b8" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7c45daa341c77d61c93039ecc663f4f98f7c42" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f77e099cbd949c839185e6029845b5effec659" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3557adf30476adea24a153b69688ca2990ef22e" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fca2ed97b2d02ae4966322e1e99b73c1f91e0cb" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e9ceb74aea5720f5f8a158d607c43d2213c8ca" translate="yes" xml:space="preserve">
          <source>implicit def evidenceIterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.evidenceIterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfbbee0684a80d912b75bd1302f31f073093786" translate="yes" xml:space="preserve">
          <source>implicit def fallbackStringCanBuildFrom[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.BuildFromLowPriority1.fallbackStringCanBuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFromLowPriority1.fallbackStringCanBuildFrom.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58fb45eaa439fcf78880e7d977cc4a675c51ed6" translate="yes" xml:space="preserve">
          <source>implicit def fileToProcess(&lt;span name=&quot;file&quot;&gt;file: &lt;span name=&quot;scala.sys.process.processInternal.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6530829d773b982eac66831ec4fb2d1992eef22" translate="yes" xml:space="preserve">
          <source>implicit def float2Float(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cad731bcb5c8f52965d74989152327cdd298009" translate="yes" xml:space="preserve">
          <source>implicit def float2double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75d1e304eb4d3660775fe7b29ed548d3806782b" translate="yes" xml:space="preserve">
          <source>implicit def floatArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7170f901fdb9925967cd8cd96ed3e6e10709ea3" translate="yes" xml:space="preserve">
          <source>implicit def floatWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichFloat&quot;&gt;RichFloat&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f715421b894369a9760042ff6d3a37b5d270fa9d" translate="yes" xml:space="preserve">
          <source>implicit def genericArrayOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Predef.genericArrayOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.Predef.genericArrayOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7318b1fff44b0ad707bd995268bb07e53cc131f4" translate="yes" xml:space="preserve">
          <source>implicit def genericWrapArray[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.LowPriorityImplicits.genericWrapArray.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.LowPriorityImplicits.genericWrapArray.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81c28ff35feb5c5fe92d6dd617404e93bffe083" translate="yes" xml:space="preserve">
          <source>implicit def infixFractionalOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.ExtraImplicits.infixFractionalOps.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.ExtraImplicits.infixFractionalOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;fractional%24fractionalops&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cc0fc5a2af7b55025fbc08bfadda4da71b0ad7" translate="yes" xml:space="preserve">
          <source>implicit def infixIntegralOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.ExtraImplicits.infixIntegralOps.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.ExtraImplicits.infixIntegralOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;integral%24integralops&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dd6415f77d942945f8c40a7e55291705ce7c63" translate="yes" xml:space="preserve">
          <source>implicit def infixNumericOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.ExtraImplicits.infixNumericOps.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.ExtraImplicits.infixNumericOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;numeric%24numericops&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7acf67b4f42f2cbef7417624420833f16d68d6" translate="yes" xml:space="preserve">
          <source>implicit def infixOrderingOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.ExtraImplicits.infixOrderingOps.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.infixOrderingOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering%24orderingops&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87f455c2132f03daf0a055a5e5c5a28a6755cb1" translate="yes" xml:space="preserve">
          <source>implicit def int2Integer(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5692f8230dbeb368c3528c61d6f89c39df5c68" translate="yes" xml:space="preserve">
          <source>implicit def int2bigDecimal(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feba3d40e63f61ebfba95469ed6b8d9f44fe056e" translate="yes" xml:space="preserve">
          <source>implicit def int2bigInt(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f24d59ceefac8c4fe7bd78be05a7011bbc0c5d" translate="yes" xml:space="preserve">
          <source>implicit def int2double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e28dad775687fd72502bceb31ff05687943ce0f" translate="yes" xml:space="preserve">
          <source>implicit def int2float(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a29e12aa000c01d46c802841b37aed8afbf302" translate="yes" xml:space="preserve">
          <source>implicit def int2long(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8f6f5e36a2087fdc9ce6be28203675510fedc0" translate="yes" xml:space="preserve">
          <source>implicit def intArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779fbe44a5aafa4b98a3241efe3082dd42a77920" translate="yes" xml:space="preserve">
          <source>implicit def intMapIsMap[&lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;]: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;a href=&quot;../immutable/intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.intMapIsMap.V0&quot;&gt;V0&lt;/span&gt;]] { ... /* 3 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94ccf841b5b61718d47975ffb8c7f28532d1bd8" translate="yes" xml:space="preserve">
          <source>implicit def intWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichInt&quot;&gt;RichInt&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365f122480b428a6d4ffb61587493cd06c464034" translate="yes" xml:space="preserve">
          <source>implicit def isIterableLikeIsIterableOnce[&lt;span name=&quot;Repr&quot;&gt;Repr&lt;/span&gt;](implicit &lt;span name=&quot;isIterableLike&quot;&gt;isIterableLike: &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnceLowPriority.isIterableLikeIsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnceLowPriority.isIterableLikeIsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;] { type A = isIterableLike.A }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f63bb03372cdbd826dafc4bbb45690064af4b2" translate="yes" xml:space="preserve">
          <source>implicit def isMapLikeIsIterable[&lt;span name=&quot;Repr&quot;&gt;Repr&lt;/span&gt;](implicit &lt;span name=&quot;isMapLike&quot;&gt;isMapLike: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableLowPriority.isMapLikeIsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableLowPriority.isMapLikeIsIterable.Repr&quot;&gt;Repr&lt;/span&gt;] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd8b7935cd1bdfb804ddf5bcf1c734db6055eb5" translate="yes" xml:space="preserve">
          <source>implicit def isSeqLikeIsIterable[&lt;span name=&quot;Repr&quot;&gt;Repr&lt;/span&gt;](implicit &lt;span name=&quot;isSeqLike&quot;&gt;isSeqLike: &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableLowPriority.isSeqLikeIsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableLowPriority.isSeqLikeIsIterable.Repr&quot;&gt;Repr&lt;/span&gt;] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a706a2670474cc321ac8dee93842e6435e2e6eb2" translate="yes" xml:space="preserve">
          <source>implicit def iterable AsScalaIterable[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.iterable AsScalaIterable.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.iterable AsScalaIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069521aa372f5d82a9dc9061cbf31fc6e195d50b" translate="yes" xml:space="preserve">
          <source>implicit def iterable asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.iterable asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.iterable asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26444f99a45b906da2c5d06026d87c812b5a1fdc" translate="yes" xml:space="preserve">
          <source>implicit def iterableAsScalaIterableConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.iterableAsScalaIterableConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.iterableAsScalaIterableConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939411063df6c5bdac067df29f856612b0fe99b3" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d64cedf49c33bb741d2a73c96512491b5e18f7" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b2f3c3cc41bef423e24781e8369ab15457ec5a" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc418dce43370d45f5911347c0c2407cef12579" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f7c92a39b38c4d403aa6860c24121e716662e4" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7989ac2d33536615379919588e72154491e4566d" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d89c746d4e09e0a9bb32f55f82ec633cef9371" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e331b6ae417704e9e3092bf387e65544f93d3249" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65204fa936ef53dc894d4cc3b695db73234569a" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28f647bee67aa86d7c7764290112ffbc0d00b35" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d99498612bb8176385acf56fb1f4a1474666b85" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfebe6c4cd47928273018e9a17a59003212468c1" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486e261bfd08c1308d9e0581fe185789d40ce225" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c532fd861d7716103c1d9109bfbceda87a0bc2" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcf6c0580dcdce92af991ecf42580f46dc41c66" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92c2ff675c6275b1121fb1c79c9b482b5c9d621" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b2063adfd6b1967d6a00c6232ee3464813f5a0" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ad54eb279eb6723bdf8b22992633ce456edb12" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75ac04aea02d1e01780d87142ebd3628bf8abf2" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ced8e9330c5062acf78b63b36eb075294c56527" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711759e64a0fc185974b2ba1406ba0822788cc95" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835b26ecdd613eaa590860ec0ced3ee6f6a7bf49" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeb7d848b19ee2ad3616a1344054a287f689576" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddb8f05d98e1489f3f243b68d2fd581eee67d01" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b7f5885b361576a5a20c261f1727ee5fac3259" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b914370011f5fca495709576627e32635b18ccad" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6072cb35e34bc69f1af8d0d1a7666e2dc98637f" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19ffe6988dc191e8583a72c1c052a837384b044" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4809d53f845c147467b35e9cba0cefc891ad91d9" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf7a97043dfe7151c0f01c22f9a3f88ea3b932a" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ec9590b55601cc846ae430c6c976c4da11befa" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc73120c411a5de4739ba10d94197ec13949fcd" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e11e1f15325a22d68025c2d56cf40df1c6307d" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2e009c65f90c25ea83bfd1ccc0f7d7c4e4592f" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e535c66f989e6fca97b578241eac5aad504f5550" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6797e324adc185e0dff5fd1aedf9125fc80d20e" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824e72aa6d6f528b714d97f5266a9e11eceb8b91" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f69216003fbb671f08361e85938dca92315a29" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633c6083337a46eaf6f9687b1638245a06cae5db" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ff0df7e677e7c9876a98dcc949913e37dba097" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterableFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd390181c923e9ae25c388b540eb18bf0c90033" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.iterableFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.iterableFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cb230eb16605d9b018cf49c12cf7d1fb4663b8" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30654785c6b3d74238e41717dd2bcb9ab147ead5" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28efd315fb325bed2bf76939c213db283ca1b660" translate="yes" xml:space="preserve">
          <source>implicit def iterableFactory[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.iterableFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c52f4f9dde9efcfb3ae08fbeec555d74fc929cb" translate="yes" xml:space="preserve">
          <source>implicit def iterableOnceExtensionMethods[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.iterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterableonceextensionmethods&quot; id=&quot;scala.collection.IterableOnceExtensionMethods&quot; name=&quot;scala.collection.IterableOnceExtensionMethods&quot;&gt;IterableOnceExtensionMethods&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnce.iterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a54d43175ef79d7e04c0583cc24442a47e3fd4" translate="yes" xml:space="preserve">
          <source>implicit def iterableOnceIsIterableOnce[&lt;span name=&quot;CC0&quot;&gt;CC0[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.iterableOnceIsIterableOnce.CC0.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;]: &lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.iterableOnceIsIterableOnce.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.iterableOnceIsIterableOnce.A0&quot;&gt;A0&lt;/span&gt;]] { type A = A0 }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd65c43c27b033e26cad1aefdf14a943c0ad96f1" translate="yes" xml:space="preserve">
          <source>implicit def iterableOpsIsIterable[&lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;, &lt;span name=&quot;CC0&quot;&gt;CC0[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../iterableops&quot; id=&quot;scala.collection.IterableOps&quot; name=&quot;scala.collection.IterableOps&quot;&gt;IterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.iterableOpsIsIterable.CC0.X&quot;&gt;X&lt;/span&gt;, &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;span name=&quot;scala.collection.generic.IsIterable.iterableOpsIsIterable.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.iterableOpsIsIterable.CC0.X&quot;&gt;X&lt;/span&gt;]]&lt;/span&gt;]: &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.iterableOpsIsIterable.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.iterableOpsIsIterable.A0&quot;&gt;A0&lt;/span&gt;]] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb893763fa681d9a066ae762aed366c0191e184" translate="yes" xml:space="preserve">
          <source>implicit def iterator asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.iterator asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.iterator asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272f1d92bb5abb3dfe216edd82380de86994e949" translate="yes" xml:space="preserve">
          <source>implicit def iterator asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.iterator asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.iterator asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c80ff7cb1ef0d00db7869245f1d214b83f622df" translate="yes" xml:space="preserve">
          <source>implicit def javaBigDecimal2bigDecimal(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdc672de95304091e95d320ceb0618268d456c5" translate="yes" xml:space="preserve">
          <source>implicit def javaBigInteger2bigInt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.math.BigInteger&quot;&gt;BigInteger&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50980a440e49d1dd82c24f688bd72b37b44004e3" translate="yes" xml:space="preserve">
          <source>implicit def javaRandomToRandom(&lt;span name=&quot;r&quot;&gt;r: &lt;span name=&quot;java.util.Random&quot;&gt;java.util.Random&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;random&quot; id=&quot;scala.util.Random&quot; name=&quot;scala.util.Random&quot;&gt;Random&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c63cb9f61d6417eec58b5b5d18a9c27dfa682e8" translate="yes" xml:space="preserve">
          <source>implicit def lazyZip2ToIterable[&lt;span name=&quot;El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;El2&quot;&gt;El2&lt;/span&gt;](&lt;span name=&quot;zipped2&quot;&gt;zipped2: &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.lazyZip2ToIterable.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.lazyZip2ToIterable.El2&quot;&gt;El2&lt;/span&gt;, _]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.lazyZip2ToIterable.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.lazyZip2ToIterable.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0180768cfbfe6032f5db39be8cd00d21cf61f21a" translate="yes" xml:space="preserve">
          <source>implicit def lazyZip3ToIterable[&lt;span name=&quot;El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;El3&quot;&gt;El3&lt;/span&gt;](&lt;span name=&quot;zipped3&quot;&gt;zipped3: &lt;a href=&quot;lazyzip3&quot; id=&quot;scala.collection.LazyZip3&quot; name=&quot;scala.collection.LazyZip3&quot;&gt;LazyZip3&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.lazyZip3ToIterable.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.lazyZip3ToIterable.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.lazyZip3ToIterable.El3&quot;&gt;El3&lt;/span&gt;, _]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.lazyZip3ToIterable.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.lazyZip3ToIterable.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.lazyZip3ToIterable.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59b8775194f1206080b338d0f79fd9e52fbb6fb" translate="yes" xml:space="preserve">
          <source>implicit def lazyZip4ToIterable[&lt;span name=&quot;El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;El4&quot;&gt;El4&lt;/span&gt;](&lt;span name=&quot;zipped4&quot;&gt;zipped4: &lt;a href=&quot;lazyzip4&quot; id=&quot;scala.collection.LazyZip4&quot; name=&quot;scala.collection.LazyZip4&quot;&gt;LazyZip4&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El4&quot;&gt;El4&lt;/span&gt;, _]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.lazyZip4ToIterable.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1228abac9e7180e168e89b33c013c20da17d8b6" translate="yes" xml:space="preserve">
          <source>implicit def list asScalaBuffer[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.list asScalaBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.list asScalaBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507452c10e09d2c78092a4e06e0f6dd97cf082d7" translate="yes" xml:space="preserve">
          <source>implicit def long2Long(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f18baa846d56e522363b506d5b91b45c687ccaf" translate="yes" xml:space="preserve">
          <source>implicit def long2bigDecimal(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8051fc8a69b3fdced93fc0b921f7be9c9a53dd6" translate="yes" xml:space="preserve">
          <source>implicit def long2bigInt(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee38778c22a03bc4e8f1a78641c33ab55183616a" translate="yes" xml:space="preserve">
          <source>implicit def long2double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3f370ccfe50a228ae67db0bdaeab05846f47e4" translate="yes" xml:space="preserve">
          <source>implicit def long2float(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ae58de8277669f8cccc75e3c518e215cd48c72" translate="yes" xml:space="preserve">
          <source>implicit def longArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c175929a6226faabfa089cb8de1ff6ed5193a4" translate="yes" xml:space="preserve">
          <source>implicit def longMapIsMap[&lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;]: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;a href=&quot;../immutable/longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.longMapIsMap.V0&quot;&gt;V0&lt;/span&gt;]] { ... /* 3 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23647a37ecc38b9eddc841ab86d5204ec52674ab" translate="yes" xml:space="preserve">
          <source>implicit def longWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichLong&quot;&gt;RichLong&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbadcb42d2d82ceb6b6705f28fbb455e44ff22be" translate="yes" xml:space="preserve">
          <source>implicit def map AsJavaConcurrentMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaConcurrentMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaConcurrentMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaConcurrentMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaConcurrentMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed4ce64367965b89d11f53a96ca1cf68b34938c" translate="yes" xml:space="preserve">
          <source>implicit def map AsJavaMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.map AsJavaMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c89a957ffd7697f13d3924114ae7ff725d7bb5" translate="yes" xml:space="preserve">
          <source>implicit def map AsScalaConcurrentMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScalaConcurrentMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScalaConcurrentMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScalaConcurrentMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScalaConcurrentMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b2e4a54cc1d8d4bc0b763238b2d62b1a493ffb" translate="yes" xml:space="preserve">
          <source>implicit def map AsScala[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScala.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToScalaImplicits.map AsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27882166398f322c75ce8610e911869ee57bc8c9" translate="yes" xml:space="preserve">
          <source>implicit def mapAsJavaConcurrentMapConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaConcurrentMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaConcurrentMapConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaConcurrentMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaConcurrentMapConverter.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cea4085801cec85dd2d87aeba4c48202a74772" translate="yes" xml:space="preserve">
          <source>implicit def mapAsJavaMapConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaMapConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsJavaMapConverter.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3078b93a9c3d2b45129e9682874b5df75cbe64" translate="yes" xml:space="preserve">
          <source>implicit def mapAsScalaConcurrentMapConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaConcurrentMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaConcurrentMapConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaConcurrentMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaConcurrentMapConverter.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f643d253482bc1041537be1b9063f51bfd646395" translate="yes" xml:space="preserve">
          <source>implicit def mapAsScalaMapConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaMapConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mapAsScalaMapConverter.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496291554d4ddff2335f30d2abb799a72792fc67" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f49eeae90c1c86defcf40dff45c98671833ee7" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c78eede1c8a330c2b96621983badadd7a94a22" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb36d0307fe1c9890aca445539fcb8271768a33c" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed846d8c39e1a7b1b489c7d8a00528e3b8949e5" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69dca28a5397257862f0ecb3f10f9569ffa5185" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d022ab294edb5773c916e2e0e9f1536cae2e68" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2206fa6be1038376b64e431995441e5dd1477006" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719b67925224928460fbee10fbb0d61d488e20a8" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eef6b60ff16fd5f55d4270a338f261a62ac974" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c27d49e8b511a3378c15e772d64a2781fcb15" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591b94d219b061aa0cf6696797c634104cc85702" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da65cee97b1ecec374fe5c47427029cf9f55bdc4" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8186527ca56aa7c558657285109e618998fbd64" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8275c2a6a929be9174ac217b075f858a374c4d6" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;immutable/seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;immutable.SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02eaee2a96aa11b9e81d3b3f191931ab645b0490" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668d2962abd94bcfe5596755f6aaacce1648e86c" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6af1717fd71993714560865cb99c9bc372ac71e" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceb7480b9cd98b7045e6c50cda3357e9c797b9a" translate="yes" xml:space="preserve">
          <source>implicit def mapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.mapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.mapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1cd0ffddc6d324b763c32157d3289c4c6202f3" translate="yes" xml:space="preserve">
          <source>implicit def mapOpsIsMap[&lt;span name=&quot;CC0&quot;&gt;CC0[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.CC0.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.CC0.Y&quot;&gt;Y&lt;/span&gt;, [X, Y]&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.IsMap.&amp;lt;refinement&amp;gt;.Ap.&amp;lt;local Ap&amp;gt;.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.&amp;lt;refinement&amp;gt;.Ap.&amp;lt;local Ap&amp;gt;.Y&quot;&gt;Y&lt;/span&gt;)], &lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.CC0.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.CC0.Y&quot;&gt;Y&lt;/span&gt;]]&lt;/span&gt;, &lt;span name=&quot;K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;]: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.mapOpsIsMap.V0&quot;&gt;V0&lt;/span&gt;]] { ... /* 3 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f35e52642c0640b452c1b35bb31cf017f3418e1" translate="yes" xml:space="preserve">
          <source>implicit def mapViewIsMap[&lt;span name=&quot;CC0&quot;&gt;CC0[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapViewIsMap.CC0.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.mapViewIsMap.CC0.Y&quot;&gt;Y&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;]: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapViewIsMap.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mapViewIsMap.K0&quot;&gt;K0&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.IsMap.mapViewIsMap.V0&quot;&gt;V0&lt;/span&gt;]] { ... /* 3 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a0dccd0194d5658ddd28aa9ee6a32908c45e15" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2961dadf09cf7925afb13c60bc9e7f286327a375" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ae81ba5ce2f6831310e87ad6e497f6de737b68" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#FractionalOpsextendsFractional.this.NumericOps&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7905c478a5a4a4cdb0dd0f580de1d5bf053a2eb0" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#FractionalOpsextendsFractional.this.NumericOps&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300c3018d675cffc9eef9444c64aa9c5b3b08345" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476df47044fa2cfcad3ae74159f274c3dc940a9d" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25167ab64d6c290f88c379c548fb40bbf338ce61" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b1a7321c25e0d1727d5e02ec8204aab30a0df7" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#FractionalOpsextendsFractional.this.NumericOps&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ef2509b295e2c587adcb6d183e70968b9b88f6" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce42b6de444145ffe3de5232f17718cf23822cb8" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#NumericOpsextendsAnyRef&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcfbc4401fb346b9e1ea721e5d0d410843ff16b" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#IntegralOpsextendsIntegral.this.NumericOps&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac2c514f12d9e662efe370250d0cf435cda091a" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;fractional%24fractionalops&quot; id=&quot;scala.math.Fractional.FractionalOps&quot; name=&quot;scala.math.Fractional.FractionalOps&quot;&gt;FractionalOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7610a59ca61670685ab595f8f9235848ca27c374" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;integral%24integralops&quot; id=&quot;scala.math.Integral.IntegralOps&quot; name=&quot;scala.math.Integral.IntegralOps&quot;&gt;IntegralOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195ca952877eef275311f46ea3fbbae123194b6d" translate="yes" xml:space="preserve">
          <source>implicit def mkNumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;numeric%24numericops&quot; id=&quot;scala.math.Numeric.NumericOps&quot; name=&quot;scala.math.Numeric.NumericOps&quot;&gt;NumericOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1183835167b6300a010821b2b1b464991c5701d" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba393e13e1dc33b3f406c91240ad14b326e514ca" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707ace49164fcd731dfc1446cc4fab3f02745a88" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74af42a3f62e342de23f60f90f9d002b34ef6f3d" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cceb97b84892a3ac13dc156f6332bcea16cac13" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf95737d5756dcd4de20c12a70aecd950788ed5" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fd4b2c4afd27b6d6cbf26761fe6c3d9695084a" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e32515f3ab3ed268528deaa1cb36d539a58f51" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7687a222e9b70c8e92e25f53ee0a4786ed7c1a" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0ce0a261e038369dcd296ec202ee73d3c56b18" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aefda831116ac9bc8fc268a13e22ae642baaec3" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535a705f882ba6ed0d2ac2ef092272a58f180a18" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ddfab4225adae3e624cd1a4e3bdfba9d433927" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ac92fe96aaaeb2aa4cb5aa5daf0173d8a87a88" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a0b11bc05e0800d1c7a9bf514936ab9ed4e510" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d06ca876053f4ad08ff51287855d89de199abb6" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44c1aaa65316a673d0d3488d7b2e803f5a2f437" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b518df8f397118cce855fcb55cb67e8055f955d9" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ea9180aba8b2bb7caa24f1f81b95991e1d6171" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500224e7a7496c18cfbad575b5262bf09554228e" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06744bf65b57a24108773ac6a091eba6b23cfdf9" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24fca809c9c9e5c9e0c0602d750faea4993902d" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;#OrderingOpsextendsAnyRef&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739eecfadd60d13fb78f7451d2b6b17831c74504" translate="yes" xml:space="preserve">
          <source>implicit def mkOrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;ordering%24orderingops&quot; id=&quot;scala.math.Ordering.OrderingOps&quot; name=&quot;scala.math.Ordering.OrderingOps&quot;&gt;OrderingOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc65afbf803224dbd8be35186e4ccd4a9c203833" translate="yes" xml:space="preserve">
          <source>implicit def mutableLongMapIsMap[&lt;span name=&quot;V0&quot;&gt;V0&lt;/span&gt;]: &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;a href=&quot;../mutable/longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.mutableLongMapIsMap.V0&quot;&gt;V0&lt;/span&gt;]] { ... /* 3 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c39e2c4851a4202e2dff7feec05e50516b118a4" translate="yes" xml:space="preserve">
          <source>implicit def mutableMap AsJavaMap[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableMap AsJavaMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableMap AsJavaMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableMap AsJavaMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableMap AsJavaMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162ef80b6c19d7a8c7f0a04ab752e52708130771" translate="yes" xml:space="preserve">
          <source>implicit def mutableMapAsJavaMapConverter[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mutableMapAsJavaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mutableMapAsJavaMapConverter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mutableMapAsJavaMapConverter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.mutableMapAsJavaMapConverter.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49229d1c3f04e69fbebbbccdff472ff6db14b054" translate="yes" xml:space="preserve">
          <source>implicit def mutableSeq AsJavaList[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;seq&quot;&gt;seq: &lt;a href=&quot;../mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableSeq AsJavaList.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableSeq AsJavaList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91896d8e4a4b37e0668011c346a2bf985e61c45" translate="yes" xml:space="preserve">
          <source>implicit def mutableSeqAsJavaListConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mutableSeqAsJavaListConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mutableSeqAsJavaListConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67106b001bdc2cfc194802bf8dce5870c100faa9" translate="yes" xml:space="preserve">
          <source>implicit def mutableSet AsJavaSet[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableSet AsJavaSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.mutableSet AsJavaSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62974a34096c258d775c1ec72e0f681cf8eb4ab7" translate="yes" xml:space="preserve">
          <source>implicit def mutableSetAsJavaSetConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mutableSetAsJavaSetConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.mutableSetAsJavaSetConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcac009e47b87a1f9b0a1008272fdba19e136a79" translate="yes" xml:space="preserve">
          <source>implicit def noAccumulatorFactoryInfo[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;]: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo.noAccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo.noAccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bcf361d55c52213464e9874236f7fae75fddcf" translate="yes" xml:space="preserve">
          <source>implicit def option2Iterable[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xo&quot;&gt;xo: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.option2Iterable.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.option2Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b7d6f35dfabde44e7e3c2bd57fb3036a3da109" translate="yes" xml:space="preserve">
          <source>implicit def ordered[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;asComparable&quot;&gt;asComparable: &lt;a href=&quot;#AsComparable%5BA%5D=A=&amp;gt;Comparable%5B_&amp;gt;:A%5D&quot; id=&quot;scala.math.LowPriorityOrderingImplicits.AsComparable&quot; name=&quot;scala.math.LowPriorityOrderingImplicits.AsComparable&quot;&gt;AsComparable&lt;/a&gt;[&lt;span name=&quot;scala.math.LowPriorityOrderingImplicits.ordered.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.LowPriorityOrderingImplicits.ordered.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cf9f9025f0fd268d8944e95d89e5174a6cf82a" translate="yes" xml:space="preserve">
          <source>implicit def ordered[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;asComparable&quot;&gt;asComparable: &lt;a href=&quot;#AsComparable%5BA%5D=A=&amp;gt;Comparable%5B_&amp;gt;:A%5D&quot; id=&quot;scala.math.Ordering.AsComparable&quot; name=&quot;scala.math.Ordering.AsComparable&quot;&gt;AsComparable&lt;/a&gt;[&lt;span name=&quot;scala.math.LowPriorityOrderingImplicits.ordered.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.LowPriorityOrderingImplicits.ordered.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784dbb5796230feb240a27336c0ecde1ad315702" translate="yes" xml:space="preserve">
          <source>implicit def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85538259a9da78c120f043fd73b64084c9c7c77b" translate="yes" xml:space="preserve">
          <source>implicit def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27e8564ee3e69546ee9555574835a1331cf25c9" translate="yes" xml:space="preserve">
          <source>implicit def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ab2bcba619a76a603fbd441b1ba727933e83cb" translate="yes" xml:space="preserve">
          <source>implicit def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3ad2654f294d82f34092056822d56620f8fe1b" translate="yes" xml:space="preserve">
          <source>implicit def ordering: &lt;a href=&quot;index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49583a926f67308815def08fb4ee5cf3bbdf5373" translate="yes" xml:space="preserve">
          <source>implicit def orderingToOrdered[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordered.orderingToOrdered.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordered.orderingToOrdered.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordered&quot; id=&quot;scala.math.Ordered&quot; name=&quot;scala.math.Ordered&quot;&gt;Ordered&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordered.orderingToOrdered.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbc4b417842eb1e67617a670d74826c1d8ba6fc" translate="yes" xml:space="preserve">
          <source>implicit def pairIntToDuration(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;)&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d5313d2919e18c477a92a42cc2d67abb8bf87f" translate="yes" xml:space="preserve">
          <source>implicit def pairLongToDuration(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;)&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa669b25f487ac594c2400a79d758898282b1f5" translate="yes" xml:space="preserve">
          <source>implicit def properties AsScalaMap(&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Properties&quot;&gt;Properties&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa120b4769fe28829a626679be0525459b526731" translate="yes" xml:space="preserve">
          <source>implicit def propertiesAsScalaMapConverter(&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Properties&quot;&gt;Properties&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asscala&quot; id=&quot;scala.collection.JavaConverters.AsScala&quot; name=&quot;scala.collection.JavaConverters.AsScala&quot;&gt;AsScala&lt;/a&gt;[&lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8566be2da2b8e79e6c5eafb9b8f7533f17ff9e43" translate="yes" xml:space="preserve">
          <source>implicit def rangeIsSeq[&lt;span name=&quot;C0&quot;&gt;C0 &amp;lt;: &lt;a href=&quot;../../index#Range=scala.collection.immutable.Range&quot; id=&quot;scala.Range&quot; name=&quot;scala.Range&quot;&gt;Range&lt;/a&gt;&lt;/span&gt;]: &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.rangeIsSeq.C0&quot;&gt;C0&lt;/span&gt;] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d94ea8932bba1708c1ed6c283483e1c1743123" translate="yes" xml:space="preserve">
          <source>implicit def refArrayOps[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Predef.refArrayOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.Predef.refArrayOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c5147a77d1957d2f9966869760ef5ef325fe95" translate="yes" xml:space="preserve">
          <source>implicit def refl[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.refl.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.refl.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4200be4a34134815137fb55a9047547f58f7fe1f" translate="yes" xml:space="preserve">
          <source>implicit def seq AsJavaList[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;seq&quot;&gt;seq: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.seq AsJavaList.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.seq AsJavaList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7863a1576874ce3c3bf3e0935e00ee9c19923d3" translate="yes" xml:space="preserve">
          <source>implicit def seqAsJavaListConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.seqAsJavaListConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.seqAsJavaListConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54503604b684fce92b0d73aa7c9c4da504b3514" translate="yes" xml:space="preserve">
          <source>implicit def seqEquiv[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.seqEquiv.CC.X&quot;&gt;X&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;eqv&quot;&gt;eqv: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.seqEquiv.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.seqEquiv.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.seqEquiv.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3874b8b66887e9d8e43a2dcc69907ce7ea89dd07" translate="yes" xml:space="preserve">
          <source>implicit def seqOpsIsSeq[&lt;span name=&quot;CC0&quot;&gt;CC0[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../seqops&quot; id=&quot;scala.collection.SeqOps&quot; name=&quot;scala.collection.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqOpsIsSeq.CC0.X&quot;&gt;X&lt;/span&gt;, &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;span name=&quot;scala.collection.generic.IsSeq.seqOpsIsSeq.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqOpsIsSeq.CC0.X&quot;&gt;X&lt;/span&gt;]]&lt;/span&gt;, &lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;]: &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqOpsIsSeq.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqOpsIsSeq.A0&quot;&gt;A0&lt;/span&gt;]] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0423de89f67eb28b16514541867d1943c14eba" translate="yes" xml:space="preserve">
          <source>implicit def seqOrdering[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.seqOrdering.CC.X&quot;&gt;X&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.seqOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.seqOrdering.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.seqOrdering.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3cf21972d5c708e6c9636a84a7ff896f1b86d2" translate="yes" xml:space="preserve">
          <source>implicit def seqViewIsSeq[&lt;span name=&quot;CC0&quot;&gt;CC0[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqViewIsSeq.CC0.X&quot;&gt;X&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;A0&quot;&gt;A0&lt;/span&gt;]: &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqViewIsSeq.CC0&quot;&gt;CC0&lt;/span&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.seqViewIsSeq.A0&quot;&gt;A0&lt;/span&gt;]] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc84c769d5ad359ebd644df423a9d0178485be3" translate="yes" xml:space="preserve">
          <source>implicit def set AsJavaSet[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.set AsJavaSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToJavaImplicits.set AsJavaSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218c0fb3d90d640ca140055287d4402e870fdda2" translate="yes" xml:space="preserve">
          <source>implicit def set asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.set asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.ToScalaImplicits.set asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de4c2e6bf52bfaea2c512014cae6614dc50c433" translate="yes" xml:space="preserve">
          <source>implicit def setAsJavaSetConverter[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.setAsJavaSetConverter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;javaconverters%24%24asjava&quot; id=&quot;scala.collection.JavaConverters.AsJava&quot; name=&quot;scala.collection.JavaConverters.AsJava&quot;&gt;AsJava&lt;/a&gt;[&lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.setAsJavaSetConverter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4ea679bcdf97e10a72b9410bcb32dc946b7ba4" translate="yes" xml:space="preserve">
          <source>implicit def short2Short(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e4694bdf4da195323a4a8892afeac5fd697e10" translate="yes" xml:space="preserve">
          <source>implicit def short2double(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657896561838b59115efe1dabb3e61690ca48e58" translate="yes" xml:space="preserve">
          <source>implicit def short2float(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
