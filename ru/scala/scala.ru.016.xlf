<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="22584ba0e62ca47ddcf70de8bf38ca9e5b54b2a2" translate="yes" xml:space="preserve">
          <source>Returns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1321be65284626c8e66f2aa92903f577ff0c870" translate="yes" xml:space="preserve">
          <source>Returns a pseudorandom, uniformly distributed int value between min (inclusive) and the specified value max (exclusive), drawn from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fa02e4ebd96011d7928a6ad147fbc64912681d" translate="yes" xml:space="preserve">
          <source>Returns a pseudorandom, uniformly distributed long value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0b6519f5bfcb6e4413ecf84e8b0c26ec2269e1" translate="yes" xml:space="preserve">
          <source>Returns a pseudorandom, uniformly distributed long value between min (inclusive) and the specified value max (exclusive), drawn from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5da4f4ddbb709bb8398a7fe1a548798a57b6c6" translate="yes" xml:space="preserve">
          <source>Returns a pseudorandomly generated String. This routine does not take any measures to preserve the randomness of the distribution in the face of factors like unicode's variable-length encoding, so please don't use this for anything important. It's primarily intended for generating test data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e44498ccc78c3cf2b57ae9053e8c2de16ea45a" translate="yes" xml:space="preserve">
          <source>Returns a read-only snapshot of this TrieMap. This operation is lock-free and linearizable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232b1a36df6b833a85d18d1bc068ca2bf0f61356" translate="yes" xml:space="preserve">
          <source>Returns a regular queue containing the same elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68212b2e547131292318c3b2f418e9800685d742" translate="yes" xml:space="preserve">
          <source>Returns a set formed from this set and another iterable collection by combining corresponding elements in pairs. If one of the two collections is longer than the other, its remaining elements are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a89f90522d370ce33035cc516e1c63197ea3ab3" translate="yes" xml:space="preserve">
          <source>Returns a set of characteristics of this Stepper and its elements. See method &lt;code&gt;characteristics&lt;/code&gt; in &lt;span name=&quot;Spliterator&quot;&gt;Spliterator&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda3276adedfbfcc924c1e6586c04313d0e1b204" translate="yes" xml:space="preserve">
          <source>Returns a singleton iterator returning the &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value if it is nonempty, or an empty iterator if the option is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e452dff0b4126c17047b99bf4aece08c86d8ff" translate="yes" xml:space="preserve">
          <source>Returns a singleton list containing the &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value if it is nonempty, or the empty list if the &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750c2ac12e0223c4ec955d4c333a6f56be81d2ca" translate="yes" xml:space="preserve">
          <source>Returns a snapshot of this TrieMap. This operation is lock-free and linearizable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc97706dfc5068fe72f6c1eeda937b0e51f4c3e" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the encoded position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb92326aa5da4df8b0c86175c68bb23ea587407" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8d4df3f38a590e64a9b52fc6028fa685954340" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83da237e49c06916ab37a5c888fbebf5a9562cee" translate="yes" xml:space="preserve">
          <source>Returns a string with a char appended until a given target length is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441df9ea90e4450b998deb35a8cd4115f19a3382" translate="yes" xml:space="preserve">
          <source>Returns a textual representation of a queue as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f839b5d4c2bfcdf5b63390da5917fef3af3c76" translate="yes" xml:space="preserve">
          <source>Returns a three-dimensional array containing values of a given function over ranges of integer values starting from &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5077557e74e336fe41539f36c1c13cfa82aa998" translate="yes" xml:space="preserve">
          <source>Returns a three-dimensional array that contains the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bd2552300eda86baabaf0f32179965771ff4f2" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the first element in the queue, and a new queue with this element removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725170cc41e475c00a4231d4ea93fb0edd3ae33e" translate="yes" xml:space="preserve">
          <source>Returns a two-dimensional array containing values of a given function over ranges of integer values starting from &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377d08c4467a15dbcf65bbb3f24558bf85279a49" translate="yes" xml:space="preserve">
          <source>Returns a two-dimensional array that contains the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce2e10a144f81b76e566a12bf6fe26916e47dbb" translate="yes" xml:space="preserve">
          <source>Returns a value class containing operations for comparing the length of this immutable sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb554cd822e1e86bd153cc68e852447e40a35a6" translate="yes" xml:space="preserve">
          <source>Returns a value class containing operations for comparing the length of this sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29930923f878c26c06188595e4da0700bef7c818" translate="yes" xml:space="preserve">
          <source>Returns a value class containing operations for comparing the size of this immutable sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a27e7cb9ee8704cfee46f4eec653818d7705df8" translate="yes" xml:space="preserve">
          <source>Returns a value class containing operations for comparing the size of this iterable collection to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fd04373d31d2df70007cbdd39a613d7654eed6" translate="yes" xml:space="preserve">
          <source>Returns a value class containing operations for comparing the size of this view to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ad914f234e3573e2489a65d11a77e75c6ec518" translate="yes" xml:space="preserve">
          <source>Returns a view formed from this view and another iterable collection by combining corresponding elements in pairs. If one of the two collections is longer than the other, its remaining elements are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aa6980c35d9af95afa3b80c4a1f0c7c06e16c0" translate="yes" xml:space="preserve">
          <source>Returns a view formed from this view and another iterable collection by combining corresponding elements in pairs. If one of the two collections is shorter than the other, placeholder elements are used to extend the shorter collection to the length of the longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77d2ccda7a4e021dacc1a714c62acece4cc0b1f" translate="yes" xml:space="preserve">
          <source>Returns all active thread in the current thread's thread group and subgroups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2523585b9d5de50e00bcd61c5f9c8403035e82" translate="yes" xml:space="preserve">
          <source>Returns all elements in the queue which satisfy the given predicate, and removes those elements from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0eb86526c4fb9a9bec5ec6df7e4165ea35532ea" translate="yes" xml:space="preserve">
          <source>Returns all elements in this collection which satisfy the given predicate and removes those elements from this collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1eeb88d1718429cf609da2aad3eb6441beb4bcc" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; corresponding to this Stepper. Note that Iterators corresponding to primitive Steppers box the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbfc7e20d627894125dddd5ad252ae3cbb77b9e" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Iterator&lt;/code&gt; over the contents of this &lt;code&gt;AnyAccumulator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b876ea150dd14336f9413a6686d9e942369716d7" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Iterator&lt;/code&gt; over the contents of this &lt;code&gt;DoubleAccumulator&lt;/code&gt;. The &lt;code&gt;Iterator&lt;/code&gt; is not specialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce253861628541653c1d59eae280c8021e967851" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Iterator&lt;/code&gt; over the contents of this &lt;code&gt;IntAccumulator&lt;/code&gt;. The &lt;code&gt;Iterator&lt;/code&gt; is not specialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4558779d24e550f2a0d01d4c5ca9e3a5fdc00f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Iterator&lt;/code&gt; over the contents of this &lt;code&gt;LongAccumulator&lt;/code&gt;. The &lt;code&gt;Iterator&lt;/code&gt; is not specialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92afdaa8b54dd7334ecc90d5258e891db65d8424" translate="yes" xml:space="preserve">
          <source>Returns an array containing a sequence of increasing integers in a range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ec2df2cbb8792044c56750d8944760ebee107d" translate="yes" xml:space="preserve">
          <source>Returns an array containing equally spaced values in some integer interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd115cd4f4f4ff65ad6a7392f75d483819853d81" translate="yes" xml:space="preserve">
          <source>Returns an array containing repeated applications of a function to a start value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9bc3b890a13ede233fd55e5b6a9a3b93eea07e" translate="yes" xml:space="preserve">
          <source>Returns an array containing values of a given function over a range of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffda85714d23f4b2daa0c27ec4ec32ed35e7575" translate="yes" xml:space="preserve">
          <source>Returns an array formed from this array and another iterable collection by combining corresponding elements in pairs. If one of the two collections is longer than the other, its remaining elements are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fbe2283265fa8e5a5c74cb9c3b9a1b4f77860b" translate="yes" xml:space="preserve">
          <source>Returns an array formed from this array and another iterable collection by combining corresponding elements in pairs. If one of the two collections is shorter than the other, placeholder elements are used to extend the shorter collection to the length of the longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79cbaadec679805af62275b93a92a5ae931ce5" translate="yes" xml:space="preserve">
          <source>Returns an array that contains the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6344b3665be4d3783892b84ed7f2974d98ad9d8f" translate="yes" xml:space="preserve">
          <source>Returns an estimate of the number of elements of this Stepper, or &lt;a href=&quot;../long%24#MaxValue:Long(9223372036854775807L)&quot; id=&quot;scala.Long#MaxValue&quot; name=&quot;scala.Long#MaxValue&quot;&gt;Long.MaxValue&lt;/a&gt;. See method &lt;code&gt;estimateSize&lt;/code&gt; in &lt;span name=&quot;Spliterator&quot;&gt;Spliterator&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2cb22b4c04921ea0041e418639631201a9be51" translate="yes" xml:space="preserve">
          <source>Returns an extractor object with a &lt;code&gt;unapplySeq&lt;/code&gt; method, which extracts each element of a sequence data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6b15502989bfe425550ee13adc992110f8da07" translate="yes" xml:space="preserve">
          <source>Returns an integer whose sign communicates how x compares to y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea1d20015fe34afddbc4cd0d9542e3d155a79d1" translate="yes" xml:space="preserve">
          <source>Returns an iterator which groups this iterator into fixed size blocks. Example usages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e5a5d56942eb5752ff1682e5155edafa27c96c" translate="yes" xml:space="preserve">
          <source>Returns an iterator which presents a &quot;sliding window&quot; view of this iterator. The first argument is the window size, and the second argument &lt;code&gt;step&lt;/code&gt; is how far to advance the window on each iteration. The &lt;code&gt;step&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b453dbcc0ec8340818437d90826abd234de28f06" translate="yes" xml:space="preserve">
          <source>Returns an iterator which yields all the elements in the reverse order than that returned by the method &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b46493a7fda2c5bb8dd4152412d34190a8b9cab" translate="yes" xml:space="preserve">
          <source>Returns an iterator which yields all the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef621c02d12533cea0772c67c72d7e755c9d1f60" translate="yes" xml:space="preserve">
          <source>Returns an iterator who returns lines (NOT including newline character(s)). It will treat any of \r\n, \r, or \n as a line separator (longest match) - if you need more refined behavior you can subclass Source#LineIterator directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0d29c56419548a0fb3e98e466806c81ba3cde2" translate="yes" xml:space="preserve">
          <source>Returns an option of the next element of an iterator without advancing beyond it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252e3c68c81b5324d0af38a92569b3cb69b8f2a1" translate="yes" xml:space="preserve">
          <source>Returns and dequeues all elements from the queue which satisfy the given predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1389facca65c0bf847be6d3f7bf47b8f8c5ee3b8" translate="yes" xml:space="preserve">
          <source>Returns and removes all elements from the left of this queue which satisfy the given predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daffa5ab04640e0913bbc8909c813be4442fc9a2" translate="yes" xml:space="preserve">
          <source>Returns and removes all elements from the right of this queue which satisfy the given predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557b3deae481296041c4bba999535a2c1c9bae30" translate="yes" xml:space="preserve">
          <source>Returns and removes all elements from the top of this stack which satisfy the given predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e973d242329440b5373777bf92af2759edffc9e" translate="yes" xml:space="preserve">
          <source>Returns char sequence after last character of match, or &lt;code&gt;null&lt;/code&gt; if nothing was matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b932c9c25e75222464a9079a3e690804de4a51a" translate="yes" xml:space="preserve">
          <source>Returns either the next step of the tailcalling computation, or the result if there are no more steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d78ef06e03d6e83bc841cd9eace4a3a2039f59a" translate="yes" xml:space="preserve">
          <source>Returns false if the option is &lt;code&gt;None&lt;/code&gt;, true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc17a210ebdb49e4bc5eb5abb21fa3daa9291dda" translate="yes" xml:space="preserve">
          <source>Returns new immutable array with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106688b55f3b7b1226a0862a029702d7704a6d34" translate="yes" xml:space="preserve">
          <source>Returns new immutable sequence with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c61bf8ddb036ad4869f355c12d82b01cf56e8a4" translate="yes" xml:space="preserve">
          <source>Returns new lazy list with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6369966c07e7513334af8806153fa0cec8101e7" translate="yes" xml:space="preserve">
          <source>Returns new list with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a966157b60d19ddd7ddcd035607a096d65f93e7e" translate="yes" xml:space="preserve">
          <source>Returns new numeric range with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adda4fb0fbeda18d137da8604355a22cb06df9f3" translate="yes" xml:space="preserve">
          <source>Returns new sequence with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469c893f61e109475807d7b8a45d2c8a279ce676" translate="yes" xml:space="preserve">
          <source>Returns new view with elements in reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf185af2657a332299080f6986671ef591d216c" translate="yes" xml:space="preserve">
          <source>Returns next character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0062900a407595c368001c86cb2e9bd43be0adc" translate="yes" xml:space="preserve">
          <source>Returns string formatted according to given &lt;code&gt;format&lt;/code&gt; string. Format strings are as for &lt;code&gt;String.format&lt;/code&gt; (@see java.lang.String.format).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d4d0c757350c0388106e69fe145199a1d4b0fe" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Double&lt;/code&gt; value that is closest in value to the argument and is equal to a mathematical integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f689fd8c3cdf39cf02e9bc8005ec3c2c14dbd1a8" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;-th element of this queue. The first element is at position &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b83df92f6fa78e5ae865fdd5a9a18a954aa691a" translate="yes" xml:space="preserve">
          <source>Returns the Char at the specified index, counting from 0 as in Arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8983fa3f2906d86fde35a4f4bf8bb66488dc06c" translate="yes" xml:space="preserve">
          <source>Returns the bitwise AND of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134e417566708b3841eff29699dc4fff18148468" translate="yes" xml:space="preserve">
          <source>Returns the bitwise OR of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e6e731237321e1ab308a291eb099d402f78dd0" translate="yes" xml:space="preserve">
          <source>Returns the bitwise XOR of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2190ee1c0e9b3c4840463f4e502ab3b118302fd8" translate="yes" xml:space="preserve">
          <source>Returns the bitwise negation of this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f3ac8cc29734822913fe51724b5821bfd2073b" translate="yes" xml:space="preserve">
          <source>Returns the closest &lt;code&gt;Int&lt;/code&gt; to the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e72e4a50d16d688e1d54dfb2345efe5a2f74774" translate="yes" xml:space="preserve">
          <source>Returns the closest &lt;code&gt;Long&lt;/code&gt; to the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0567cae3920c6dc479761aa2075aef5143a6bb7" translate="yes" xml:space="preserve">
          <source>Returns the column number of the encoded position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3039b22580d007c8f68eef6490c5ae1a9e053c" translate="yes" xml:space="preserve">
          <source>Returns the contents of this StringBuilder as an &lt;code&gt;Array[Char]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636f895546a5af5a8a98a8ce34c1d2834631b649" translate="yes" xml:space="preserve">
          <source>Returns the cube root of the given &lt;code&gt;Double&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3be2a360e813aa1287ac358657bc3a130ecaabb" translate="yes" xml:space="preserve">
          <source>Returns the current capacity, which is the size of the underlying array. A new array will be allocated if the current capacity is exceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1216a94a4b3c4d8cd54b4fa56155e21877f7dc0" translate="yes" xml:space="preserve">
          <source>Returns the decimal String representation of this BigDecimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fdab83beac28a7f7850c99547dad4689c2c034" translate="yes" xml:space="preserve">
          <source>Returns the decimal String representation of this BigInt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad5174c8d1bbe3a11e676c024e64bce20d597c5" translate="yes" xml:space="preserve">
          <source>Returns the difference of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30add8d4f0be4d0de000a20d22e230ec0a1b46e" translate="yes" xml:space="preserve">
          <source>Returns the element with the highest priority in the queue, and removes this element from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaef8b1add1c5a381b0044df665041a3b91464c4" translate="yes" xml:space="preserve">
          <source>Returns the element with the highest priority in the queue, or throws an error if there is no element contained in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35314c44388b8d7ace27a28f42274aa2d2c79d66" translate="yes" xml:space="preserve">
          <source>Returns the elements in the list as an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d7537199739aba20306443f0745b1d0f5de15" translate="yes" xml:space="preserve">
          <source>Returns the first element in the queue which satisfies the given predicate, and removes this element from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4533aa06954c60c327d54cd95c189df84bab3c50" translate="yes" xml:space="preserve">
          <source>Returns the first element in the queue, or throws an error if there is no element contained in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d70a28120009b54b0658da0fd3e06ff9fe0b92" translate="yes" xml:space="preserve">
          <source>Returns the first element which satisfies the given predicate after or at some start index and removes this element from the collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7cfd53b803b959aa5468d65428b678ebe21256" translate="yes" xml:space="preserve">
          <source>Returns the first key of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4bce971643d907ba2cc8422fd6836b25da9ba6" translate="yes" xml:space="preserve">
          <source>Returns the given function applied to the value from this &lt;code&gt;Success&lt;/code&gt; or returns this if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6898ec82c9cd3fa80962ae9099047a7956063c" translate="yes" xml:space="preserve">
          <source>Returns the group with the given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a30d42ab8cd502376596b1725fe6af7e76bb313" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this BigDecimal. Note that this does not merely use the underlying java object's &lt;code&gt;hashCode&lt;/code&gt; because we compare &lt;code&gt;BigDecimal&lt;/code&gt;s with &lt;code&gt;compareTo&lt;/code&gt; which deems 2 == 2.00, whereas in java these are unequal with unequal &lt;code&gt;hashCode&lt;/code&gt;s. These hash codes agree with &lt;code&gt;BigInt&lt;/code&gt; for whole numbers up ~4934 digits (the range of IEEE 128 bit floating point). Beyond this, hash codes will disagree; this prevents the explicit representation of the &lt;code&gt;BigInt&lt;/code&gt; form for &lt;code&gt;BigDecimal&lt;/code&gt; values with large exponents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681a7c99670e75c98ea8d8d5bbbdd9fbe4b3c32d" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this BigInt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e995b5ee739aa2cdd0512397b63e0f93275c2aeb" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of the specified object in this iterable object after or at some start index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e2cdb7d4aab47baecdc82e8437e61a15d8c9b3" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of the specified object in this iterable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe10dd67214f83e759d8afce3647a1c6f38ce374" translate="yes" xml:space="preserve">
          <source>Returns the last key of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e30c30d8a72c6ca988863a3e536fe1d6c1e7a50" translate="yes" xml:space="preserve">
          <source>Returns the length of the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dc83fd3dde6b4896452745e6124d25eb4b5ec0" translate="yes" xml:space="preserve">
          <source>Returns the line number of the encoded position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41f6e4bbe4756951225535e5aae59fea4f67f2a" translate="yes" xml:space="preserve">
          <source>Returns the n-th projection of this product if 0 &amp;lt;= n &amp;lt; productArity, otherwise throws an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed7ee4a59eabbb3903b0dc2a6f9e381d8692512" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm of a &lt;code&gt;Double&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6ec226ce874ff7cef3a0ace5b46df047bc7188" translate="yes" xml:space="preserve">
          <source>Returns the negation of this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5575654e40e3a10e1dde29c6abee60bef63d2c8f" translate="yes" xml:space="preserve">
          <source>Returns the nested &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; value if it is nonempty. Otherwise, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6d0a4e2de72a6a520fc162a3f602801581131a" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, Gaussian (&quot;normally&quot;) distributed double value with mean 0.0 and standard deviation 1.0 from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caf1ad8d1c513189dbee6c05a6c20501f653b88" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed boolean value from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08bd6eb3bd3477d26a5d600585d19ce8017fe03" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed double value between 0.0 and 1.0 from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f15422120f5002e10e46e1bfc9a06cc0bc01841" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed double value between min (inclusive) and max (exclusive) from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8365749fd1626f52752ae71ce7567a97536867ca" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed float value between 0.0 and 1.0 from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790027f375289acd946afaa51edc08a41798d24c" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed float value between min (inclusive) and max (exclusive) from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e36d9f407770bd62e21e12a5919c55ec117b0cc" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed int value from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f8ac5a1225a0b8ed2faee15bf6ae2aeda5a96e" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed long value from this random number generator's sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56400c8ac1b06ced4a4d495c921adfb8329bb2ed" translate="yes" xml:space="preserve">
          <source>Returns the next pseudorandom, uniformly distributed value from the ASCII range 33-126.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfb134ea69c370191f465450d9c0d8fb62131d8" translate="yes" xml:space="preserve">
          <source>Returns the option's value if it is nonempty, or &lt;code&gt;null&lt;/code&gt; if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20ec000d8061ac5401b95be3298456fbf6136c4" translate="yes" xml:space="preserve">
          <source>Returns the option's value if the option is nonempty, otherwise return the result of evaluating &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5002333cbaef52d1b03e88006eb621ec5e2def15" translate="yes" xml:space="preserve">
          <source>Returns the option's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae270db26a89c35d1d20d258e38d135b0ee4737c" translate="yes" xml:space="preserve">
          <source>Returns the product of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06c7545ed7a2bcf3cd7faf7bea75a8f314a6efa" translate="yes" xml:space="preserve">
          <source>Returns the quotient of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6089d40e32f541541ef36804929712d834a07e0" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the division of this value by &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dfa0afdc886b56cba64de50061a7962507b536" translate="yes" xml:space="preserve">
          <source>Returns the result of applying &lt;code&gt;f&lt;/code&gt; to this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value if the &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; is nonempty. Otherwise, evaluates expression &lt;code&gt;ifEmpty&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2b7eb79b20b1d20b12ddb12c972a14697fa19b" translate="yes" xml:space="preserve">
          <source>Returns the result of applying &lt;code&gt;f&lt;/code&gt; to this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value if this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; is nonempty. Returns &lt;code&gt;None&lt;/code&gt; if this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; is empty. Slightly different from &lt;code&gt;map&lt;/code&gt; in that &lt;code&gt;f&lt;/code&gt; is expected to return an &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; (which could be &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fa221fe54f3708f34214a22a8fb1bd2bdf305e" translate="yes" xml:space="preserve">
          <source>Returns the result of the tailcalling computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060fc5ff6003a032aaef0db1fc87b553324b49c6" translate="yes" xml:space="preserve">
          <source>Returns the reverse of this priority queue. The new priority queue has the same elements as the original, but the opposite ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c607e297d7d52553b7a40e9c3b4d1d8792969e7" translate="yes" xml:space="preserve">
          <source>Returns the reverse of this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaf8b21e970d941212f55e926f804445abde5c9" translate="yes" xml:space="preserve">
          <source>Returns the right value if this is right or this value if this is left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010da2e7a13d3827c126c567629942a251e6015e" translate="yes" xml:space="preserve">
          <source>Returns the runtime class representation of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc4c9576832eb56b28dbc5bb82de250a6da18fa" translate="yes" xml:space="preserve">
          <source>Returns the square root of a &lt;code&gt;Double&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d998f5968e50c8c4b7d534c787079cc5f58ce740" translate="yes" xml:space="preserve">
          <source>Returns the square root of the sum of the squares of both given &lt;code&gt;Double&lt;/code&gt; values without intermediate underflow or overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e00481ec617130fb40a5e25a6e6100f00591e9f" translate="yes" xml:space="preserve">
          <source>Returns the sum of this value and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c607d2a18d60b03cad582af9735c08cd53e942d" translate="yes" xml:space="preserve">
          <source>Returns the top element of the stack. This method will not remove the element from the stack. An error is signaled if there is no element on the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87d5289eb5b2af23159a0d3ba2b423da0f7870e" translate="yes" xml:space="preserve">
          <source>Returns the value associated with a key, or a default value if the key is not contained in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc5ab3e923ae0cd3bd64824f960870b70515da1" translate="yes" xml:space="preserve">
          <source>Returns the value from this &lt;code&gt;Left&lt;/code&gt; or the given argument if this is a &lt;code&gt;Right&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044bbd3a774e54be188c8c5b1d67489eb3e99f92" translate="yes" xml:space="preserve">
          <source>Returns the value from this &lt;code&gt;Right&lt;/code&gt; or the given argument if this is a &lt;code&gt;Left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371e6968b509008965563fa88511a5eb75f26ca1" translate="yes" xml:space="preserve">
          <source>Returns the value from this &lt;code&gt;Success&lt;/code&gt; or the given &lt;code&gt;default&lt;/code&gt; argument if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af5564838e258a67d78ff53689b620b8ac0b4ae" translate="yes" xml:space="preserve">
          <source>Returns the value from this &lt;code&gt;Success&lt;/code&gt; or throws the exception if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f2c57a5974b839f8f7f5a6b2172282cf8e1a5d" translate="yes" xml:space="preserve">
          <source>Returns the value of the first argument raised to the power of the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aac6d7f6b089955b69ec1f7633b8499cec41393" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80545adb3d78e3e62311e6df0414146037031982" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;scala.Char&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbd879b211e9d57353a4eb98186f81e2d9c7004" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;scala.Double&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24402c173c54634e6ad06e36f724a563c240641" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;scala.Float&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4126c26fa3da091e91d819a2f7445d4312b8a37c" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc747260a11fbd8fe9214fed678caa5dfc414c8f" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7493c02199e37afc6fc7ca46d2d84d2c28122847" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b418eccb7275100578afc97d34ccb65c671c1de" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;scala.Char&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed22e7b17a2c096ffd3b6d7e4fbc1890e34ef66f" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;scala.Double&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8315a283d4129260199144e58ed8c0358fd0737" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;scala.Float&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2247917fadf6eb89cdb40b7b228491b750de2213" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbaac26e4c72935dcc9ea7f8447311f1c4e869d" translate="yes" xml:space="preserve">
          <source>Returns the value of this as a &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d3c19ccb9bcf448eb53448e4a9b66a3f37df56" translate="yes" xml:space="preserve">
          <source>Returns the value of this as an &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a118f8a375cea420f2adb1d667e942baf98a3f1a" translate="yes" xml:space="preserve">
          <source>Returns the value of this as an &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;. This may involve rounding or truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dae88a3dffde20cb8281bdf4e6667e891a8bac6" translate="yes" xml:space="preserve">
          <source>Returns this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; if it is nonempty &lt;b&gt;and&lt;/b&gt; applying the predicate &lt;code&gt;p&lt;/code&gt; to this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value returns false. Otherwise, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190dc06017d088736f7d5330e134910c610ae0b1" translate="yes" xml:space="preserve">
          <source>Returns this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; if it is nonempty &lt;b&gt;and&lt;/b&gt; applying the predicate &lt;code&gt;p&lt;/code&gt; to this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value returns true. Otherwise, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d774edf3c86caadc7cc948c839eb476d920d1276" translate="yes" xml:space="preserve">
          <source>Returns this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; if it is nonempty, otherwise return the result of evaluating &lt;code&gt;alternative&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d650cfc3991fb7cfeb950f03c2c0c24c9cd725" translate="yes" xml:space="preserve">
          <source>Returns this &lt;code&gt;Right&lt;/code&gt; or the given argument if this is a &lt;code&gt;Left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb3760df470ddc8e82d64047a8e8dc2815f91f7" translate="yes" xml:space="preserve">
          <source>Returns this &lt;code&gt;Try&lt;/code&gt; if it's a &lt;code&gt;Success&lt;/code&gt; or the given &lt;code&gt;default&lt;/code&gt; argument if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce9852ad40150e14e93186be41b1503860a287b" translate="yes" xml:space="preserve">
          <source>Returns this iterator with patched values. Patching at negative indices is the same as patching starting at 0. Patching at indices at or larger than the length of the original iterator appends the patch to the end. If more values are replaced than actually exist, the excess is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc5816de2df2dc930d435d7d5e1c23f07fa1eb3" translate="yes" xml:space="preserve">
          <source>Returns this string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42562142b4210cf45d557d47cb781ebc37d8d9ef" translate="yes" xml:space="preserve">
          <source>Returns this string with first character converted to upper case. If the first character of the string is capitalized, it is returned unchanged. This method does not convert characters outside the Basic Multilingual Plane (BMP).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f4581b7b19408c532fefc3b5cc021a8608fbdc" translate="yes" xml:space="preserve">
          <source>Returns this string with the given &lt;code&gt;prefix&lt;/code&gt; stripped. If this string does not start with &lt;code&gt;prefix&lt;/code&gt;, it is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb326daddd87874d6d6a0757b623bc1991d8b0e" translate="yes" xml:space="preserve">
          <source>Returns this string with the given &lt;code&gt;suffix&lt;/code&gt; stripped. If this string does not end with &lt;code&gt;suffix&lt;/code&gt;, it is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3321e3fd976b1769f1fa214ead347bfdea05cf9" translate="yes" xml:space="preserve">
          <source>Returns this value bit-shifted left by the specified number of bits, filling in the new right bits with zeroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58a36ea7b6f413899a3ccf5ce01bf8fbfa22a72" translate="yes" xml:space="preserve">
          <source>Returns this value bit-shifted right by the specified number of bits, filling in the left bits with the same value as the left-most bit of this. The effect of this is to retain the sign of the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeda8083641c2feb925576860dee89cd73750178" translate="yes" xml:space="preserve">
          <source>Returns this value bit-shifted right by the specified number of bits, filling the new left bits with zeroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e78cd490b6223c0484f7949e75c2d6c1b68b36" translate="yes" xml:space="preserve">
          <source>Returns this value, unmodified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfea12a0bc9ef7c3844b940e3e2f2efc1718c2ef" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;this&lt;/code&gt; is greater than &lt;code&gt;that&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52101a0a3026d7b9f6dc311e82e32505fd6d585a" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;this&lt;/code&gt; is greater than or equal to &lt;code&gt;that&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09711805183514f1d2a3511da67c6c40de1df4c5" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;this&lt;/code&gt; is less than &lt;code&gt;that&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a7587832ffc7e82b79d3dee47a264c56239f9b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;this&lt;/code&gt; is less than or equal to &lt;code&gt;that&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60addafee6257bf580828bef2cf871d79008e44e" translate="yes" xml:space="preserve">
          <source>Returns true if the option is &lt;code&gt;None&lt;/code&gt;, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326f0425d1a328efa562ccebecb6015885a78a7a" translate="yes" xml:space="preserve">
          <source>Returns true if the option is an instance of &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;scala.Some&lt;/a&gt;, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abcd924ab9ea170617f40fa0f1e66af2e175b46" translate="yes" xml:space="preserve">
          <source>Returns true if this BigInt is probably prime, false if it's definitely composite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b458e318de3b0315e1f5c28e8a90d52f3abd21b" translate="yes" xml:space="preserve">
          <source>Returns true if this option is empty &lt;b&gt;or&lt;/b&gt; the predicate &lt;code&gt;p&lt;/code&gt; returns true when applied to this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a4409674030805bab444f903c47e396b805275" translate="yes" xml:space="preserve">
          <source>Returns true if this option is nonempty &lt;b&gt;and&lt;/b&gt; the predicate &lt;code&gt;p&lt;/code&gt; returns true when applied to this &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;'s value. Otherwise, returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fe8ade6774044d7e8c5c52f78eae19b7e1cbec" translate="yes" xml:space="preserve">
          <source>Returns whether a comparison between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; is defined, and if so the result of &lt;code&gt;compare(x, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47df60f6a92faf96af35d96ae782ef49a220105" translate="yes" xml:space="preserve">
          <source>Returns whether or not the other ordering is the opposite ordering of this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06ae5130aeb30f5b0edcc0d534a0010851e97f1" translate="yes" xml:space="preserve">
          <source>Returns whether the future had already been completed with a value or an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707b11dbf6a1e85eaa3839afd6f987a7659e5fee" translate="yes" xml:space="preserve">
          <source>Returns whether the promise has already been completed with a value or an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19dc32be56c2044ebbe80c6a9c9e5ddba51788f" translate="yes" xml:space="preserve">
          <source>Returns whether this &lt;code&gt;Regex&lt;/code&gt; matches the given character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e983b1e5a2341f8638683480c88af46d706a9e6" translate="yes" xml:space="preserve">
          <source>Reusable builder for immutable collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b89a452d8e683c51c8f9b5a5658d95efb1b771" translate="yes" xml:space="preserve">
          <source>ReusableBuilder</source>
          <target state="translated">ReusableBuilder</target>
        </trans-unit>
        <trans-unit id="568eb7f220fdd9d654c0b195944c188c5490ecab" translate="yes" xml:space="preserve">
          <source>ReusableBuilder.clear()</source>
          <target state="translated">ReusableBuilder.clear()</target>
        </trans-unit>
        <trans-unit id="feedef9e3dea6e038cf02775a305db991be0aed7" translate="yes" xml:space="preserve">
          <source>ReusableBuilder.result()</source>
          <target state="translated">ReusableBuilder.result()</target>
        </trans-unit>
        <trans-unit id="10c1977b4a1e7823cc975e1912a60c0642bf636d" translate="yes" xml:space="preserve">
          <source>ReusableBuilder.scala</source>
          <target state="translated">ReusableBuilder.scala</target>
        </trans-unit>
        <trans-unit id="5c1cf3eeda3d0d0df760bf919186b742263ce961" translate="yes" xml:space="preserve">
          <source>Reuse: Advances the iterator, which may exhaust the elements. It is valid to make additional calls on the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7742c809819bf73d35f84b957aecefe20b7cae9a" translate="yes" xml:space="preserve">
          <source>Reuse: After calling this method, one should discard the iterator it was called on, and use only the iterator that was returned. Using the old iterator is undefined, subject to change, and may result in changes to the new iterator as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381cd3711f30e5b52674e8992fa18eedd33b31e8" translate="yes" xml:space="preserve">
          <source>Reuse: After calling this method, one should discard the iterator it was called on, and use only the iterators that were returned. Using the old iterator is undefined, subject to change, and may result in changes to the new iterators as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217288c430042d37dce34f617df46ceff3979602" translate="yes" xml:space="preserve">
          <source>Reuse: After calling this method, one should discard the iterator it was called on, as well as the one passed as a parameter, and use only the iterator that was returned. Using the old iterators is undefined, subject to change, and may result in changes to the new iterator as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45710e5330a03f0a2963f27f47aa3c5d5823a0e3" translate="yes" xml:space="preserve">
          <source>Reuse: After calling this method, one should discard the iterator it was called on. Using it is undefined and subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f8d223e33d0a61779896161f51b10b9347782d" translate="yes" xml:space="preserve">
          <source>Reuse: After calling this method, one should discard the iterator it was called on. Using it is undefined and subject to change. Note: will not terminate for infinite-sized collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec214702a8b3d892b8d43fb50205a890b71f1d4" translate="yes" xml:space="preserve">
          <source>Reuse: The iterator remains valid for further use whatever result is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="389ca5a6a7405d391cd16ab1fc1add17e90c98e2" translate="yes" xml:space="preserve">
          <source>RichBoolean &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071d9675a9c9e53b4a2c1bf3d4d6e48e333cbc84" translate="yes" xml:space="preserve">
          <source>RichByte &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c4b9515856b8f7588143b0023a324d878ebd86" translate="yes" xml:space="preserve">
          <source>RichByte &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5803ed469b1645f45b91605865c654741c950a" translate="yes" xml:space="preserve">
          <source>RichByte &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f4efc8108b597451d3bb7f9be8a0351a9193b1" translate="yes" xml:space="preserve">
          <source>RichByte &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635fbf269ff35766c71e6614b9273ea985c0c8c7" translate="yes" xml:space="preserve">
          <source>RichChar</source>
          <target state="translated">RichChar</target>
        </trans-unit>
        <trans-unit id="87f145106ab5be5672856ae968c120c0a21ad16f" translate="yes" xml:space="preserve">
          <source>RichChar &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb7cab83c97297a367fe47a0d77cd256c15e700" translate="yes" xml:space="preserve">
          <source>RichChar &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29dfa7125d3c7daccd420ef1e105bfd44c5aebd3" translate="yes" xml:space="preserve">
          <source>RichChar &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cc094d38d4f63c672781f035eecded32b51ba4" translate="yes" xml:space="preserve">
          <source>RichChar &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f0f04eb917294764eb75e38cc455107cb6c8a1" translate="yes" xml:space="preserve">
          <source>RichDouble</source>
          <target state="translated">RichDouble</target>
        </trans-unit>
        <trans-unit id="655376711d176f46482f506a3f27bfbadf88c6f1" translate="yes" xml:space="preserve">
          <source>RichDouble &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef09ebfa957dbd02a1806deb8b475467dea5ac7e" translate="yes" xml:space="preserve">
          <source>RichDouble &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd80276ca6ca3dee9c6482f645f732e5e803d6c" translate="yes" xml:space="preserve">
          <source>RichDouble &amp;rarr; FractionalProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3236f49c6d163d39b21e4b64a6162dc68edb231" translate="yes" xml:space="preserve">
          <source>RichDouble &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a649daa441192eb6fa143c5d87d0fa489bf12c3c" translate="yes" xml:space="preserve">
          <source>RichDouble &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c21dfcc77c4acbaecd2e19f105b80a450b1ba9" translate="yes" xml:space="preserve">
          <source>RichFloat</source>
          <target state="translated">RichFloat</target>
        </trans-unit>
        <trans-unit id="5b2221288783fb76ee8cb88b51e5b76e9f9fb9c3" translate="yes" xml:space="preserve">
          <source>RichFloat &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10d52a5215918ed7744e378a29a18ec64077e83" translate="yes" xml:space="preserve">
          <source>RichFloat &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5037211cf74cc1d36558818c1009737fd28e859e" translate="yes" xml:space="preserve">
          <source>RichFloat &amp;rarr; FractionalProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b904d216598d756bf35eca7b4450061cb155a3be" translate="yes" xml:space="preserve">
          <source>RichFloat &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ee198da1a96f552f3db5342456536b63a4866b" translate="yes" xml:space="preserve">
          <source>RichFloat &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd036938ec3611c4ab875c7557d4b40c5ee51450" translate="yes" xml:space="preserve">
          <source>RichInt</source>
          <target state="translated">RichInt</target>
        </trans-unit>
        <trans-unit id="7b56a3dddad98da84872c3c2245ebcfe13849dbe" translate="yes" xml:space="preserve">
          <source>RichInt &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4de967faff943d5a32bf3ea1e6e41e8e71df5ba" translate="yes" xml:space="preserve">
          <source>RichInt &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53ea57700b3be2d6bfb1086c5495801ccd1e63b" translate="yes" xml:space="preserve">
          <source>RichInt &amp;rarr; RangedProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa739295aa8408955e5e63d009cfecaf6bbec4b7" translate="yes" xml:space="preserve">
          <source>RichInt &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d75b2254b974dec48f4b5fc849f35e8fa989b5" translate="yes" xml:space="preserve">
          <source>RichInt &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea5c4f7486c1391c87700ec908bcd223bdc69c9" translate="yes" xml:space="preserve">
          <source>RichLong</source>
          <target state="translated">RichLong</target>
        </trans-unit>
        <trans-unit id="42c11f8cef604b046b04e0803ac6839c8f86cbb0" translate="yes" xml:space="preserve">
          <source>RichLong &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b223a4fc437dab661054db21cd591f5ec55ead" translate="yes" xml:space="preserve">
          <source>RichLong &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8657c449adb4c2c708ae037ab0ceb6e2da823c" translate="yes" xml:space="preserve">
          <source>RichLong &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb779f7138a3ac9369c14367d7eb4c977315fab9" translate="yes" xml:space="preserve">
          <source>RichLong &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50524f12d3b10978cf923fff350c227977836c1" translate="yes" xml:space="preserve">
          <source>RichShort &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e1533455d53c2c65884979c3e01a7791878358" translate="yes" xml:space="preserve">
          <source>RichShort &amp;rarr; &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; &amp;rarr; &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daf63966765cb6b619277ae76a6b8ccfa371e10" translate="yes" xml:space="preserve">
          <source>RichShort &amp;rarr; ScalaNumberProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234c4e658862f17178bbc2b0a3c86b951ca246a2" translate="yes" xml:space="preserve">
          <source>RichShort &amp;rarr; ScalaNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954daa8b00335c66e262106e01f7dc22b19a4372" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Right</target>
        </trans-unit>
        <trans-unit id="a555003fc51a018ff7c4473cc364695b8749f596" translate="yes" xml:space="preserve">
          <source>Right.Right()</source>
          <target state="translated">Right.Right()</target>
        </trans-unit>
        <trans-unit id="9ed94bf09f83f4764d6c25f90b738d3a1c5b29f0" translate="yes" xml:space="preserve">
          <source>Right.isLeft()</source>
          <target state="translated">Right.isLeft()</target>
        </trans-unit>
        <trans-unit id="65c7d54489566a3d5e7fa04fac91adf262253eb2" translate="yes" xml:space="preserve">
          <source>Right.isRight()</source>
          <target state="translated">Right.isRight()</target>
        </trans-unit>
        <trans-unit id="d2b1e60fd35c79ad0b6a0cbfa0e03a49135742fb" translate="yes" xml:space="preserve">
          <source>Right.value()</source>
          <target state="translated">Right.value()</target>
        </trans-unit>
        <trans-unit id="18510e5fcfe2628c02446d4bb0722e5297d42755" translate="yes" xml:space="preserve">
          <source>Right.withLeft()</source>
          <target state="translated">Right.withLeft()</target>
        </trans-unit>
        <trans-unit id="14ab950eb98caa165c8e3b8a580c9eeda3c87fc0" translate="yes" xml:space="preserve">
          <source>RoundingMode</source>
          <target state="translated">RoundingMode</target>
        </trans-unit>
        <trans-unit id="6fdd9795c1a639920de85361042b9b98dc28bb1c" translate="yes" xml:space="preserve">
          <source>Running the Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f985b5a78dba46ab19e828bb88ffc8bbaaa9ed71" translate="yes" xml:space="preserve">
          <source>Running the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc240e97e27f3d0890062e08bc152bb8d07a6c07" translate="yes" xml:space="preserve">
          <source>Runs a block of code on this execution context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67fa0ea2ef53705a4283261b14a529442421fbe" translate="yes" xml:space="preserve">
          <source>Runs in constant time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f7afdacb138f9834bff77da70f900792c4bdbc" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToBoolean&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4716eefc0c6624b7d601939bb59a74120f2cffb8" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToByte&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e75014f013c1a55854206f44c9d59b960d845d" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToCharacter&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4739903d8c65e3b14a2c362b017c7fe021548c" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToDouble&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeea97e64a4802ca0010035b3b709dc69ad0aea1" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToFloat&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d86ca6e6a2a0b2cd6a7f3ecd33e701d82f94bf" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToInteger&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5007bf3f2ae2383331195652d015bb4f72a482" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToLong&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8078e8ff3726726669e70babe2a6c13c7e31253" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.boxToShort&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b37336e939a58ebd7736fb28eb8ad00ac62503f" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToBoolean&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bce8d89293bcc15c187de55148fc0849fbfff57" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToByte&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae49c451c56efaba18fac37ff139d73b1610721" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToChar&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29b2282f867b876f8243faab69f4bc7f7dd7874" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToDouble&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4316567857a28f128d94b88e4dd393369e150c92" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToFloat&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc95aa6b0d62c3c7f09f4380ec2b1edd27a4a1c" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToInt&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27d31437acde7d86b221ca910fee15e4a667d15" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToLong&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e97536e16414d5b6a0f5ba15fef21b69b4c0ee" translate="yes" xml:space="preserve">
          <source>Runtime implementation determined by &lt;code&gt;scala.runtime.BoxesRunTime.unboxToShort&lt;/code&gt;. See &lt;a href=&quot;https://github.com/scala/scala&quot;&gt;src/library/scala/runtime/BoxesRunTime.java&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="7b7e70bcf209a5323526033a9cbf768a3ae70c2c" translate="yes" xml:space="preserve">
          <source>Scala</source>
          <target state="translated">Scala</target>
        </trans-unit>
        <trans-unit id="13d18cc96008d364e99269dfeca6d824b454a31c" translate="yes" xml:space="preserve">
          <source>Scala &lt;code&gt;Option&lt;/code&gt; is extended with a &lt;code&gt;toJava&lt;/code&gt; method that creates a corresponding &lt;code&gt;Optional&lt;/code&gt;, and a &lt;code&gt;toJavaPrimitive&lt;/code&gt; method that creates a specialized variant (e.g., &lt;code&gt;OptionalInt&lt;/code&gt;) if applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da30d49c40153b8c39f5462d499d19e01dfee22" translate="yes" xml:space="preserve">
          <source>Scala collections have a method &lt;code&gt;stepper&lt;/code&gt; that returns a &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;scala.collection.Stepper&lt;/a&gt; for the collection, which in turn can be converted to a Spliterator for creating a Java Stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8750256dc1705f3e18e78c9054bb972f72e289" translate="yes" xml:space="preserve">
          <source>ScalaNumberProxy</source>
          <target state="translated">ScalaNumberProxy</target>
        </trans-unit>
        <trans-unit id="c754c9cd876bef6168a12a9f4fee457c4364c994" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions</source>
          <target state="translated">ScalaNumericAnyConversions</target>
        </trans-unit>
        <trans-unit id="31ec6228339a7dce28599c66554f1d756dd88816" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.byteValue()</source>
          <target state="translated">ScalaNumericAnyConversions.byteValue()</target>
        </trans-unit>
        <trans-unit id="8f3c958ce11302b1af79562b37a1e0d32e3adeeb" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.doubleValue()</source>
          <target state="translated">ScalaNumericAnyConversions.doubleValue()</target>
        </trans-unit>
        <trans-unit id="1c25d4873c77b8e20bd9a3c3b5183d82f83eeff0" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.floatValue()</source>
          <target state="translated">ScalaNumericAnyConversions.floatValue()</target>
        </trans-unit>
        <trans-unit id="eaa27350ab8d6d2d79b3046b7c33dd52621ffe20" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.intValue()</source>
          <target state="translated">ScalaNumericAnyConversions.intValue()</target>
        </trans-unit>
        <trans-unit id="d515dfe1b25d9aeaccc82dc7e6d0c7b65484a673" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.isValidByte()</source>
          <target state="translated">ScalaNumericAnyConversions.isValidByte()</target>
        </trans-unit>
        <trans-unit id="b14ec260b6d028e0f014253b09351f4a8e8e44b2" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.isValidChar()</source>
          <target state="translated">ScalaNumericAnyConversions.isValidChar()</target>
        </trans-unit>
        <trans-unit id="77cce859966e0b72b7c0a5b4546aea55255e2a79" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.isValidInt()</source>
          <target state="translated">ScalaNumericAnyConversions.isValidInt()</target>
        </trans-unit>
        <trans-unit id="58b58c5ceb209d1ab0345f980f4b9e67ff290f7c" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.isValidShort()</source>
          <target state="translated">ScalaNumericAnyConversions.isValidShort()</target>
        </trans-unit>
        <trans-unit id="344aca2513281d07e784013785b7d287b3df17ff" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.isWhole()</source>
          <target state="translated">ScalaNumericAnyConversions.isWhole()</target>
        </trans-unit>
        <trans-unit id="de62cae66b684e4ccfd084de9c315d2cfaa56ec8" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.longValue()</source>
          <target state="translated">ScalaNumericAnyConversions.longValue()</target>
        </trans-unit>
        <trans-unit id="0297a758b54d005c5cacf3b8de3194693d1a4f80" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.shortValue()</source>
          <target state="translated">ScalaNumericAnyConversions.shortValue()</target>
        </trans-unit>
        <trans-unit id="843dd8407e054fcb4eee549cde7694b15fefe67b" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toByte()</source>
          <target state="translated">ScalaNumericAnyConversions.toByte()</target>
        </trans-unit>
        <trans-unit id="83c7dc59756ca6efbf6fffe35372d09a640ce006" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toChar()</source>
          <target state="translated">ScalaNumericAnyConversions.toChar()</target>
        </trans-unit>
        <trans-unit id="a6e664687827471fbf7c6f4bfcbd0f67313d38c4" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toDouble()</source>
          <target state="translated">ScalaNumericAnyConversions.toDouble()</target>
        </trans-unit>
        <trans-unit id="e80451a306c790c11936ce9590003b85bafa1f33" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toFloat()</source>
          <target state="translated">ScalaNumericAnyConversions.toFloat()</target>
        </trans-unit>
        <trans-unit id="e4ce3e9faf720d712e6c06269bed8d0e9ca0cab7" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toInt()</source>
          <target state="translated">ScalaNumericAnyConversions.toInt()</target>
        </trans-unit>
        <trans-unit id="5bf19d007b12293aef90115a9434b36cf97ef7fc" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toLong()</source>
          <target state="translated">ScalaNumericAnyConversions.toLong()</target>
        </trans-unit>
        <trans-unit id="c36be3e907bca10e160b4b8fb971a12464a7089f" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.toShort()</source>
          <target state="translated">ScalaNumericAnyConversions.toShort()</target>
        </trans-unit>
        <trans-unit id="9573b537eb8855f37a974d6950b93dc67d747a04" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.unifiedPrimitiveEquals()</source>
          <target state="translated">ScalaNumericAnyConversions.unifiedPrimitiveEquals()</target>
        </trans-unit>
        <trans-unit id="29b8c9c238f46f54f50d76c864015881b6cff45b" translate="yes" xml:space="preserve">
          <source>ScalaNumericAnyConversions.unifiedPrimitiveHashcode()</source>
          <target state="translated">ScalaNumericAnyConversions.unifiedPrimitiveHashcode()</target>
        </trans-unit>
        <trans-unit id="75eb9688e30f7749de76e69c6cb74b8a49ce6a6d" translate="yes" xml:space="preserve">
          <source>ScalaNumericConversions</source>
          <target state="translated">ScalaNumericConversions</target>
        </trans-unit>
        <trans-unit id="d5bf79861134cf1b3d97389b0b49d2555a2cbf4e" translate="yes" xml:space="preserve">
          <source>ScalaNumericConversions.scala</source>
          <target state="translated">ScalaNumericConversions.scala</target>
        </trans-unit>
        <trans-unit id="bb65f9a4dfb92aec0e2d8d4c8fb4a19208a2d3e4" translate="yes" xml:space="preserve">
          <source>ScalaNumericConversions.underlying()</source>
          <target state="translated">ScalaNumericConversions.underlying()</target>
        </trans-unit>
        <trans-unit id="679fcfd9fca7bbaea6e666172ca9337646214218" translate="yes" xml:space="preserve">
          <source>ScalaReflectionException</source>
          <target state="translated">ScalaReflectionException</target>
        </trans-unit>
        <trans-unit id="1f05ca1a9cb715e821ea0b49ae03d1fc683637c5" translate="yes" xml:space="preserve">
          <source>ScalaReflectionException.ScalaReflectionException()</source>
          <target state="translated">ScalaReflectionException.ScalaReflectionException()</target>
        </trans-unit>
        <trans-unit id="558916777870ced2670e71db84ab4bc2aee4ee39" translate="yes" xml:space="preserve">
          <source>ScalaReflectionException.msg()</source>
          <target state="translated">ScalaReflectionException.msg()</target>
        </trans-unit>
        <trans-unit id="9b8c260d756b0f5d0dc8aeb99e2db063f96eceda" translate="yes" xml:space="preserve">
          <source>ScalaWholeNumberProxy &amp;rarr; &lt;a href=&quot;math/scalanumericanyconversions&quot; id=&quot;scala.math.ScalaNumericAnyConversions&quot; name=&quot;scala.math.ScalaNumericAnyConversions&quot;&gt;ScalaNumericAnyConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8dd8de0d52211d5668040fd5fbdee921100900" translate="yes" xml:space="preserve">
          <source>Search methods are defined directly on SeqOps and do not require scala.collection.Searching any more</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17717b437fcd6a16a2910aa119bb0190ee89d63" translate="yes" xml:space="preserve">
          <source>Search this sorted sequence for a specific element. If the sequence is an &lt;code&gt;IndexedSeq&lt;/code&gt;, a binary search is used. Otherwise, a linear search is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41054dea2320f9c3ab1f2aec7315b36d7cb52d59" translate="yes" xml:space="preserve">
          <source>Search within an interval in this sorted sequence for a specific element. If this sequence is an &lt;code&gt;IndexedSeq&lt;/code&gt;, a binary search is used. Otherwise, a linear search is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dbcd8060074140ff3ac1b91ab8b50d5601872d" translate="yes" xml:space="preserve">
          <source>Searching$</source>
          <target state="translated">Searching$</target>
        </trans-unit>
        <trans-unit id="31676f418d470454b55563645a2de9ceae366db8" translate="yes" xml:space="preserve">
          <source>Searching$.Found</source>
          <target state="translated">Searching$.Found</target>
        </trans-unit>
        <trans-unit id="b6a9ca6eefa2294c7a5daded0487dbeacc332b2f" translate="yes" xml:space="preserve">
          <source>Searching$.Found()</source>
          <target state="translated">Searching$.Found()</target>
        </trans-unit>
        <trans-unit id="2031c4652a58027246e8bc4754f70804e0e14a4d" translate="yes" xml:space="preserve">
          <source>Searching$.Found.Found()</source>
          <target state="translated">Searching$.Found.Found()</target>
        </trans-unit>
        <trans-unit id="dda6795edddbb5cb4c5fbddaeadf7b6a9b7b82a5" translate="yes" xml:space="preserve">
          <source>Searching$.Found.foundIndex()</source>
          <target state="translated">Searching$.Found.foundIndex()</target>
        </trans-unit>
        <trans-unit id="de8241de9b0a12567d078c474a7c56f26748ca37" translate="yes" xml:space="preserve">
          <source>Searching$.Found.insertionPoint()</source>
          <target state="translated">Searching$.Found.insertionPoint()</target>
        </trans-unit>
        <trans-unit id="7b61edf33ec4a7b5f7cecaaeb2eb05612fc54b9d" translate="yes" xml:space="preserve">
          <source>Searching$.InsertionPoint</source>
          <target state="translated">Searching$.InsertionPoint</target>
        </trans-unit>
        <trans-unit id="dd2ad340273e23024c4b00a837eec55fb04e2b7e" translate="yes" xml:space="preserve">
          <source>Searching$.InsertionPoint()</source>
          <target state="translated">Searching$.InsertionPoint()</target>
        </trans-unit>
        <trans-unit id="561fbb0bf5691d8b0ee74cdbccf20cfb7533f455" translate="yes" xml:space="preserve">
          <source>Searching$.InsertionPoint.InsertionPoint()</source>
          <target state="translated">Searching$.InsertionPoint.InsertionPoint()</target>
        </trans-unit>
        <trans-unit id="e12023c8c5943dc2c8d1174bbb1a92c5c682ba06" translate="yes" xml:space="preserve">
          <source>Searching$.InsertionPoint.insertionPoint()</source>
          <target state="translated">Searching$.InsertionPoint.insertionPoint()</target>
        </trans-unit>
        <trans-unit id="ddfb9b5592bb8a1387e9dfcc128cdf37b82ce6f7" translate="yes" xml:space="preserve">
          <source>Searching$.SearchImpl</source>
          <target state="translated">Searching$.SearchImpl</target>
        </trans-unit>
        <trans-unit id="bd05f93f1320cef9eab6b84595d39b74308fb2a5" translate="yes" xml:space="preserve">
          <source>Searching$.SearchImpl()</source>
          <target state="translated">Searching$.SearchImpl()</target>
        </trans-unit>
        <trans-unit id="9d91e2c24634d08b66eb7247c14f6a9d0cceeca8" translate="yes" xml:space="preserve">
          <source>Searching$.SearchImpl.SearchImpl()</source>
          <target state="translated">Searching$.SearchImpl.SearchImpl()</target>
        </trans-unit>
        <trans-unit id="545cc4a52e158fe64a500dc560e587abb2982c13" translate="yes" xml:space="preserve">
          <source>Searching$.SearchResult</source>
          <target state="translated">Searching$.SearchResult</target>
        </trans-unit>
        <trans-unit id="0cdf4504826066ee63f67a40b2652e1578e21e2d" translate="yes" xml:space="preserve">
          <source>Searching$.SearchResult()</source>
          <target state="translated">Searching$.SearchResult()</target>
        </trans-unit>
        <trans-unit id="017ec6df78ae2fbca47be614e4525c8d109b61b1" translate="yes" xml:space="preserve">
          <source>Searching$.SearchResult.insertionPoint()</source>
          <target state="translated">Searching$.SearchResult.insertionPoint()</target>
        </trans-unit>
        <trans-unit id="f7b4d7d98ffc4132780ed29ddf0f1ac3d240ae8b" translate="yes" xml:space="preserve">
          <source>Searching.scala</source>
          <target state="translated">Searching.scala</target>
        </trans-unit>
        <trans-unit id="ac809c417dab1a5f06d06095c229bf26c54eb675" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;scala.sys.SystemProperties&lt;/code&gt; for an example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17928f1f8034e7c9e1673c9f7a50681f5953041" translate="yes" xml:space="preserve">
          <source>See &lt;span name=&quot;scala.reflect.api.TypeTags&quot;&gt;scala.reflect.api.TypeTags&lt;/span&gt; for more examples, or the &lt;a href=&quot;http://docs.scala-lang.org/overviews/reflection/typetags-manifests.html&quot;&gt;Reflection Guide: TypeTags&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="392623ba1f558865ffdcc891530d107308fd8cd5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://docs.scala-lang.org/sips/42.type.html&quot;&gt;SIP-23 about Literal-based Singleton Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9c53c7a4c856b7e491f1c93f804d6fd50b05c3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;equals&lt;/code&gt; in &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;scala.Any&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0181da13096d3e8771e7637a845eb0b1a948e1a2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;equals&lt;/code&gt; in &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;scala.Any&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728bec8949173a96b2bda7ff784144a38fbeb1ff" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;equals&lt;/code&gt; in &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;scala.Any&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1d2b5ed4725daa41121920715eed9af3836de0" translate="yes" xml:space="preserve">
          <source>See method &lt;code&gt;trySplit&lt;/code&gt; in &lt;span name=&quot;Spliterator&quot;&gt;Spliterator&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d025a7b8b27322545b75f5c51d2eab98e3ae41ae" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://docs.scala-lang.org/overviews/core/value-classes.html&quot;&gt;Value Classes and Universal Traits&lt;/a&gt; for more details on the interplay of universal traits and value classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faf203405e4ed5685d0dc4022a6ab929fe7fc59" translate="yes" xml:space="preserve">
          <source>See the main doc for &lt;a href=&quot;using%24&quot; id=&quot;scala.util.Using&quot; name=&quot;scala.util.Using&quot;&gt;&lt;code&gt;Using&lt;/code&gt;&lt;/a&gt; for full details of suppression behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be75e210b4f97f4f8c947bf4c6199217ab8d2735" translate="yes" xml:space="preserve">
          <source>Select whether the last segment may be returned with less than &lt;code&gt;size&lt;/code&gt; elements. If not, some elements of the original iterator may not be returned at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b345b37b12e0746f0bc4f6c4b9541b12cacd85a" translate="yes" xml:space="preserve">
          <source>Selections of dynamic members of existing subclasses of trait &lt;code&gt;Dynamic&lt;/code&gt; are unaffected; they can be used anywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546510f439a0036775f50efd9b455ab2b0ee13a7" translate="yes" xml:space="preserve">
          <source>Selects all chars of this string which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b489d5c66fd084b2c51807442aa98cacd9632e7a" translate="yes" xml:space="preserve">
          <source>Selects all elements except first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789bdd5d991365a09ed58e731def29be7b86f681" translate="yes" xml:space="preserve">
          <source>Selects all elements except last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ef50a75b831eaac8fafb91be626e12182ba43a" translate="yes" xml:space="preserve">
          <source>Selects all elements of this array which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7082ba80b25a07eb1500410f52ccc68c0097fc45" translate="yes" xml:space="preserve">
          <source>Selects all elements of this array which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d876df6ba0a0bfda0e785f41bb988c3ba4ea480" translate="yes" xml:space="preserve">
          <source>Selects all elements of this collection which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a7fdb296620e56598f800305eae19c0e44dabd" translate="yes" xml:space="preserve">
          <source>Selects all elements of this collection which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c867aed8ea24cacf3fe0852781d1097f14b4a48" translate="yes" xml:space="preserve">
          <source>Selects all elements of this growable collection which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcd7da3a8d5a1acbaf01bb1e023e486d03aef1d" translate="yes" xml:space="preserve">
          <source>Selects all elements of this growable collection which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f099beea9d45b324dc1a3829a4e6942f550f665" translate="yes" xml:space="preserve">
          <source>Selects all elements of this immutable integer map which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb2b4ff54c9babd4e5c221639fc944bf69305b8" translate="yes" xml:space="preserve">
          <source>Selects all elements of this immutable long integer map which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c0390a40a8c492d4be6f4f780f90e0853e1c07" translate="yes" xml:space="preserve">
          <source>Selects all elements of this immutable sequence which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08b911ed13cdc7f7b7412d20e26f5bdea66299b" translate="yes" xml:space="preserve">
          <source>Selects all elements of this immutable sequence which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23137b328407027970a283bdf6875b91062394f3" translate="yes" xml:space="preserve">
          <source>Selects all elements of this immutable tree map which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffd7daf3bb1a6b59b6f1f179a94810142ed6d1a" translate="yes" xml:space="preserve">
          <source>Selects all elements of this immutable tree set which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69140a47ed7ec7835d118dded9f51e756ba2513f" translate="yes" xml:space="preserve">
          <source>Selects all elements of this iterable collection which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bcfb736444052419588d16565d9d42b82a0b8a" translate="yes" xml:space="preserve">
          <source>Selects all elements of this iterable collection which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aac8877db0cdebf1e027230bbe5fbb4e1c4253b" translate="yes" xml:space="preserve">
          <source>Selects all elements of this iterator which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd983df45c2d239a68dc9c2b3bf5c35b7d88bca0" translate="yes" xml:space="preserve">
          <source>Selects all elements of this iterator which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e844c6d4af8244618d31994f1d897e4d7f4afe" translate="yes" xml:space="preserve">
          <source>Selects all elements of this lazy list which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779d6cf0cf1a609b60db768d51ad999f91c7ad18" translate="yes" xml:space="preserve">
          <source>Selects all elements of this lazy list which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aead95bff52519a4f558e2ec98901fa166ec902f" translate="yes" xml:space="preserve">
          <source>Selects all elements of this list which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913a2efed7ecd7dd656dcb6bd91c6e422b793122" translate="yes" xml:space="preserve">
          <source>Selects all elements of this list which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435b2f37051f32640876d9a1786cbf7b10f6a292" translate="yes" xml:space="preserve">
          <source>Selects all elements of this view which do not satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5536c0e985133d54f5e79582114c0f102a606fbe" translate="yes" xml:space="preserve">
          <source>Selects all elements of this view which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc7982ccd228a8f08e2a3400e48f40e636a3e75" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this array ignoring the duplicates as determined by &lt;code&gt;==&lt;/code&gt; after applying the transforming function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c34f9844c562ee21f654cb2c5c2c2e5a1b91af" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this array ignoring the duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5ea3a600c40a620f84861ae10b234c3b059613" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this immutable sequence ignoring the duplicates as determined by &lt;code&gt;==&lt;/code&gt; after applying the transforming function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2243b0fba83cfdda50465666653c7aa59b8ce565" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this immutable sequence ignoring the duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302bd26adc23696ab50b336afa7faad77c3b234b" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this range ignoring the duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f3ce0c70aa1000bee131c3911de30d0fe121a6" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this sequence ignoring the duplicates as determined by &lt;code&gt;==&lt;/code&gt; after applying the transforming function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed667851730c3c8c329aabe351275a6b4f4ba66" translate="yes" xml:space="preserve">
          <source>Selects all the elements of this sequence ignoring the duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1f53962f6dc7183a1fd47ed6b5caa86e9c7023" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned array is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa1b95e8111a01a88de8a6b2d4288ec42c9de5b" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned collection is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50e97d1ee99930e54cbf722e5fba229b2ad3f6e" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned immutable array is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d279ac7c9351ad666a2034d908f1afe579ed77" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned immutable sequence is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f465d7907295beb5f7e92cdd4dbb8761e05866" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned immutable tree map is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c0c6af73e676f2cb1568558a1bfa62313bfb9" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned immutable tree seq map is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f035afc28df1c12e1449028bbf981f51a9cbaebc" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned immutable tree set is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2378239a2b9e1ac3a47b7bcccd880b027f20f5" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned iterable collection is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efecb33432bf3c262be3c2e39d4e316d3d95283" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned iterator is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d353b4369d3f0dff3241cfba7154777d9ccd4f95" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned lazy list is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c225e42473890e477eec1b809a7c82695b382faa" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned sequence is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2159c421affda90387fac74842835c91acd0bc82" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned string is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58b38de161273efa0b6a6e1210e74b2e626cabb" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned view is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8930571b7d5202ebd1c19af1625fb6c3c8f7a8" translate="yes" xml:space="preserve">
          <source>Selects an interval of elements. The returned wrapped string is made up of all elements &lt;code&gt;x&lt;/code&gt; which satisfy the invariant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e210cd21ca2cb012ec998f48b7e7ae96e26182" translate="yes" xml:space="preserve">
          <source>Selects the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f20fcf5ac4deafa66386b047a83aaf8d7c8b6e" translate="yes" xml:space="preserve">
          <source>Selects the first char of this string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17556f9066087fc4f49f7cb169584fec3507610" translate="yes" xml:space="preserve">
          <source>Selects the first element of this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8a35de126ba6ff5916876f421f3eb6e5854e69" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable champ hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5557754228c78c74341b66034b9a82d4d3741dda" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable champ hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5946f011d93e0ef11d9249da482d30f9caf2d0a7" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1803ba5e2468779652c20a8178d2610f613a4684" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6574cc739f6e1721209c1951bc341573fe99faa" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de2a11676c336ca0ed0b785e65f9de516ade855" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable tree map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34610ee950e0ba0a08a43303c986e275bb448a7" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable tree seq map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b2c146880f02e54f48fcef9936132b8848f72" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable tree set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c07f76bb2634d0279455dc12c0d45099c8f5c98" translate="yes" xml:space="preserve">
          <source>Selects the first element of this immutable vector map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b02b0fd1b04406a1ecc8bd767a7ef077d0314c6" translate="yes" xml:space="preserve">
          <source>Selects the first element of this iterable collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b432b45c4e9ada72db229b6150b4038e4859dd" translate="yes" xml:space="preserve">
          <source>Selects the first element of this lazy list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bc003e4114ce75daee3a3e3939e0ebec0ea287" translate="yes" xml:space="preserve">
          <source>Selects the first element of this linked hash map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d886347f6880e2fdc5a3f05e2662cef214c7daf6" translate="yes" xml:space="preserve">
          <source>Selects the first element of this linked hash set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee940b8e40da446d698f4a6ae021e330865987d" translate="yes" xml:space="preserve">
          <source>Selects the first element of this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e5fab625b13eca56fa7258a2b9313d32871a70" translate="yes" xml:space="preserve">
          <source>Selects the first element of this mutable tree map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f8500f0243c8cfabe4fa3f2fcd241fa6fd16ff" translate="yes" xml:space="preserve">
          <source>Selects the first element of this mutable tree set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb62c3dac060dda5f61e1884be15bcb42b7a1cf" translate="yes" xml:space="preserve">
          <source>Selects the first element of this numeric range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c767c8fd687ae155e8416d91d73e5eea5fbfee4" translate="yes" xml:space="preserve">
          <source>Selects the first element of this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b083cab96788d62f07a4fffae73aebc68a492b3f" translate="yes" xml:space="preserve">
          <source>Selects the first element of this vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6b6a4baa2be268b485d8361c798d585c7e70be" translate="yes" xml:space="preserve">
          <source>Selects the first element of this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817c95d0aaaa46c53e3f34215c19a403ac075c10" translate="yes" xml:space="preserve">
          <source>Selects the last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd7d9bdfa36c1fdb7259536614954655751f221" translate="yes" xml:space="preserve">
          <source>Selects the last char of this string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36796ea15359322cf89acb8214837e7b154c6ffc" translate="yes" xml:space="preserve">
          <source>Selects the last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e3eb2566aba5e75e2bd382875801c749e42715" translate="yes" xml:space="preserve">
          <source>Self Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd8f3c84a0d23231e5a49ccdd98f1ba82d5f105" translate="yes" xml:space="preserve">
          <source>Separating code blocks from &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa328f49b32e6dbe61c90ab9a659303e1d388d15" translate="yes" xml:space="preserve">
          <source>Seq</source>
          <target state="translated">Seq</target>
        </trans-unit>
        <trans-unit id="91b10b6a7ae66265250253eab686d3e1dc7b341f" translate="yes" xml:space="preserve">
          <source>Seq$</source>
          <target state="translated">Seq$</target>
        </trans-unit>
        <trans-unit id="d0572e15e20de30b5e8f542e0db83eefce26e22d" translate="yes" xml:space="preserve">
          <source>Seq$.apply()</source>
          <target state="translated">Seq$.apply()</target>
        </trans-unit>
        <trans-unit id="be4efdac8b52529cd0cd29aecaf19bfd934c1451" translate="yes" xml:space="preserve">
          <source>Seq$.empty()</source>
          <target state="translated">Seq$.empty()</target>
        </trans-unit>
        <trans-unit id="19c910ad8ca08cbe1311b6ed5eb86e143f675fde" translate="yes" xml:space="preserve">
          <source>Seq$.from()</source>
          <target state="translated">Seq$.from()</target>
        </trans-unit>
        <trans-unit id="fab491b8e22feb5c30115217dee28b8baaffff17" translate="yes" xml:space="preserve">
          <source>Seq$.newBuilder()</source>
          <target state="translated">Seq$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="37f32da8b1bb4e8fb27f2b7925e747e0829da76b" translate="yes" xml:space="preserve">
          <source>Seq$.unapplySeq()</source>
          <target state="translated">Seq$.unapplySeq()</target>
        </trans-unit>
        <trans-unit id="863eb0b3a27f7491046cde053ee092e490b4e7f0" translate="yes" xml:space="preserve">
          <source>Seq.++:()</source>
          <target state="translated">Seq.++:()</target>
        </trans-unit>
        <trans-unit id="0aae42d9ba24ae68e4576b16f459edaadd18a9fc" translate="yes" xml:space="preserve">
          <source>Seq.+:()</source>
          <target state="translated">Seq.+:()</target>
        </trans-unit>
        <trans-unit id="2731e5fe9bb4b99ec21ea3da8e932447cee86a87" translate="yes" xml:space="preserve">
          <source>Seq.:+()</source>
          <target state="translated">Seq.:+()</target>
        </trans-unit>
        <trans-unit id="0114a40b3b78fd46e9468299319c06319249ba67" translate="yes" xml:space="preserve">
          <source>Seq.:++()</source>
          <target state="translated">Seq.:++()</target>
        </trans-unit>
        <trans-unit id="07f63d8e9459795aa5fe641d6860e5f2753ba509" translate="yes" xml:space="preserve">
          <source>Seq.appended()</source>
          <target state="translated">Seq.appended()</target>
        </trans-unit>
        <trans-unit id="bb8ec36df2b03d0c2f9561fa54968589675729e7" translate="yes" xml:space="preserve">
          <source>Seq.appendedAll()</source>
          <target state="translated">Seq.appendedAll()</target>
        </trans-unit>
        <trans-unit id="3967079d623091a2036b0c3d8d58cf906d266d24" translate="yes" xml:space="preserve">
          <source>Seq.apply()</source>
          <target state="translated">Seq.apply()</target>
        </trans-unit>
        <trans-unit id="8b46b9060e1a77115251101e5364f1cc6100b6a7" translate="yes" xml:space="preserve">
          <source>Seq.canEqual()</source>
          <target state="translated">Seq.canEqual()</target>
        </trans-unit>
        <trans-unit id="1b86361005107c154033fc95a3891abdea45ec26" translate="yes" xml:space="preserve">
          <source>Seq.clone()</source>
          <target state="translated">Seq.clone()</target>
        </trans-unit>
        <trans-unit id="a6d18d4d52485cb2f1222b35fa2ffd95d28f390f" translate="yes" xml:space="preserve">
          <source>Seq.combinations()</source>
          <target state="translated">Seq.combinations()</target>
        </trans-unit>
        <trans-unit id="0629382932811bf915b37e9f01b45c3b88d20212" translate="yes" xml:space="preserve">
          <source>Seq.concat()</source>
          <target state="translated">Seq.concat()</target>
        </trans-unit>
        <trans-unit id="44806f5a9ae64bd1fbcf31f9af7b278c1f96b4a5" translate="yes" xml:space="preserve">
          <source>Seq.contains()</source>
          <target state="translated">Seq.contains()</target>
        </trans-unit>
        <trans-unit id="498bde7eab1f8c6dd08fb3e835e21faadb92ebec" translate="yes" xml:space="preserve">
          <source>Seq.containsSlice()</source>
          <target state="translated">Seq.containsSlice()</target>
        </trans-unit>
        <trans-unit id="bff48986b8b8b83b556ac27af2bcc237d2987baa" translate="yes" xml:space="preserve">
          <source>Seq.corresponds()</source>
          <target state="translated">Seq.corresponds()</target>
        </trans-unit>
        <trans-unit id="a9e5958bc44398185787f5c750db5ce144cc4be6" translate="yes" xml:space="preserve">
          <source>Seq.diff()</source>
          <target state="translated">Seq.diff()</target>
        </trans-unit>
        <trans-unit id="c6110a66137f88636c657d6528bfccf7d97394f1" translate="yes" xml:space="preserve">
          <source>Seq.distinct()</source>
          <target state="translated">Seq.distinct()</target>
        </trans-unit>
        <trans-unit id="e3c18523401cbc5004956fdb6d19390f17d8b0d0" translate="yes" xml:space="preserve">
          <source>Seq.distinctBy()</source>
          <target state="translated">Seq.distinctBy()</target>
        </trans-unit>
        <trans-unit id="e59825d254b8028ca90f297f237b0ae653f0b1f6" translate="yes" xml:space="preserve">
          <source>Seq.endsWith()</source>
          <target state="translated">Seq.endsWith()</target>
        </trans-unit>
        <trans-unit id="0c5975cc559ad7bdfd6024d7070957ee67153e26" translate="yes" xml:space="preserve">
          <source>Seq.equals()</source>
          <target state="translated">Seq.equals()</target>
        </trans-unit>
        <trans-unit id="c16dadde744ee2fc98c3cd2a9e74d06405730fea" translate="yes" xml:space="preserve">
          <source>Seq.findLast()</source>
          <target state="translated">Seq.findLast()</target>
        </trans-unit>
        <trans-unit id="2edaf1c45ce62ca0ba9ed2b2d1dda667afceed45" translate="yes" xml:space="preserve">
          <source>Seq.hashCode()</source>
          <target state="translated">Seq.hashCode()</target>
        </trans-unit>
        <trans-unit id="cacf6c76fe59be19683dbc2f572cd429262cf699" translate="yes" xml:space="preserve">
          <source>Seq.indexOf()</source>
          <target state="translated">Seq.indexOf()</target>
        </trans-unit>
        <trans-unit id="1dddbbf5a8a9d7b5ce4a49f9928bf3c1cce357f1" translate="yes" xml:space="preserve">
          <source>Seq.indexOfSlice()</source>
          <target state="translated">Seq.indexOfSlice()</target>
        </trans-unit>
        <trans-unit id="0bac13d7bdf7f7d6f8669c06c86f90c8171986c5" translate="yes" xml:space="preserve">
          <source>Seq.indexWhere()</source>
          <target state="translated">Seq.indexWhere()</target>
        </trans-unit>
        <trans-unit id="5144ddcc717a57503063709ffcbdbf5d3799bc00" translate="yes" xml:space="preserve">
          <source>Seq.indices()</source>
          <target state="translated">Seq.indices()</target>
        </trans-unit>
        <trans-unit id="723d35e13cb1e840db8922a67e919c7671063190" translate="yes" xml:space="preserve">
          <source>Seq.intersect()</source>
          <target state="translated">Seq.intersect()</target>
        </trans-unit>
        <trans-unit id="c4f5ceb032029499bcd8ec6fbefd5803ce18f836" translate="yes" xml:space="preserve">
          <source>Seq.isDefinedAt()</source>
          <target state="translated">Seq.isDefinedAt()</target>
        </trans-unit>
        <trans-unit id="acfb6cbf0a0b60cf86ed2b07486abd3435a0bc77" translate="yes" xml:space="preserve">
          <source>Seq.isEmpty()</source>
          <target state="translated">Seq.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2ddd93c756a7dc0891b74b5284ccd329ff2abec1" translate="yes" xml:space="preserve">
          <source>Seq.iterableFactory()</source>
          <target state="translated">Seq.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="f4ebb7fc193909d64b06170944ad567024b41a16" translate="yes" xml:space="preserve">
          <source>Seq.lastIndexOf()</source>
          <target state="translated">Seq.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="cca0c4e6116e63d6e69babc4e0dc6c939cb32c4c" translate="yes" xml:space="preserve">
          <source>Seq.lastIndexOfSlice()</source>
          <target state="translated">Seq.lastIndexOfSlice()</target>
        </trans-unit>
        <trans-unit id="25a87d3ddaa1e3be156e3f90a0342a445f22f5ec" translate="yes" xml:space="preserve">
          <source>Seq.lastIndexWhere()</source>
          <target state="translated">Seq.lastIndexWhere()</target>
        </trans-unit>
        <trans-unit id="1582e888b5a03371cc45ded373a2c9676cd51c2d" translate="yes" xml:space="preserve">
          <source>Seq.length()</source>
          <target state="translated">Seq.length()</target>
        </trans-unit>
        <trans-unit id="811cbf37fde1d75aa6c8042d033c49904f2bb066" translate="yes" xml:space="preserve">
          <source>Seq.lengthCompare()</source>
          <target state="translated">Seq.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="aee974f8c736bf6d3dede7f40332fd000e0546c0" translate="yes" xml:space="preserve">
          <source>Seq.lengthIs()</source>
          <target state="translated">Seq.lengthIs()</target>
        </trans-unit>
        <trans-unit id="1db6217d460a80bd02caf5fc03bcc6d5a37eecea" translate="yes" xml:space="preserve">
          <source>Seq.occCounts()</source>
          <target state="translated">Seq.occCounts()</target>
        </trans-unit>
        <trans-unit id="8f5d04059dca9918fbff482e330065dafa2f6d4c" translate="yes" xml:space="preserve">
          <source>Seq.padTo()</source>
          <target state="translated">Seq.padTo()</target>
        </trans-unit>
        <trans-unit id="cfc3042776c2632e19a8e3ea9d1f2477c45451a8" translate="yes" xml:space="preserve">
          <source>Seq.patch()</source>
          <target state="translated">Seq.patch()</target>
        </trans-unit>
        <trans-unit id="f7de633c5300af69cf57713793433bf172aaadd4" translate="yes" xml:space="preserve">
          <source>Seq.permutations()</source>
          <target state="translated">Seq.permutations()</target>
        </trans-unit>
        <trans-unit id="de56f1c5a74ac019fab4e334942afc4ef3d3fe28" translate="yes" xml:space="preserve">
          <source>Seq.prepended()</source>
          <target state="translated">Seq.prepended()</target>
        </trans-unit>
        <trans-unit id="6836f8b50afcd8818406dcb8ce32579e768a93a0" translate="yes" xml:space="preserve">
          <source>Seq.prependedAll()</source>
          <target state="translated">Seq.prependedAll()</target>
        </trans-unit>
        <trans-unit id="2563d3138e41f3f68366386d52d33ea269c7ce36" translate="yes" xml:space="preserve">
          <source>Seq.reverse()</source>
          <target state="translated">Seq.reverse()</target>
        </trans-unit>
        <trans-unit id="27a4a7f42fa52f65bc46a97ad0213bfd25af6d4b" translate="yes" xml:space="preserve">
          <source>Seq.reverseIterator()</source>
          <target state="translated">Seq.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="a129d9012f2437ba7c2085e4be5e592e834806b6" translate="yes" xml:space="preserve">
          <source>Seq.sameElements()</source>
          <target state="translated">Seq.sameElements()</target>
        </trans-unit>
        <trans-unit id="f18247928dfbffd4024bf09a8e05fa61445f304c" translate="yes" xml:space="preserve">
          <source>Seq.scala</source>
          <target state="translated">Seq.scala</target>
        </trans-unit>
        <trans-unit id="77b04bcece4fb289cb64c807b33c55827cf4e595" translate="yes" xml:space="preserve">
          <source>Seq.search()</source>
          <target state="translated">Seq.search()</target>
        </trans-unit>
        <trans-unit id="22c7213da85c62973b207547795ca34d4b04293f" translate="yes" xml:space="preserve">
          <source>Seq.segmentLength()</source>
          <target state="translated">Seq.segmentLength()</target>
        </trans-unit>
        <trans-unit id="afa1586a28bf648023f5c3d621ff978faa4ab920" translate="yes" xml:space="preserve">
          <source>Seq.size()</source>
          <target state="translated">Seq.size()</target>
        </trans-unit>
        <trans-unit id="424aa8d623c9745c0bc37c37c740dc2a2c02fd66" translate="yes" xml:space="preserve">
          <source>Seq.sizeCompare()</source>
          <target state="translated">Seq.sizeCompare()</target>
        </trans-unit>
        <trans-unit id="ca4e1614e97ac23372575dfb77d0e188186d3af3" translate="yes" xml:space="preserve">
          <source>Seq.sortBy()</source>
          <target state="translated">Seq.sortBy()</target>
        </trans-unit>
        <trans-unit id="3b6ddc1e787a2a583136b589982b1631f2505109" translate="yes" xml:space="preserve">
          <source>Seq.sortWith()</source>
          <target state="translated">Seq.sortWith()</target>
        </trans-unit>
        <trans-unit id="cfb470f13c07acd7769e2a0eb3ce85aa24192bef" translate="yes" xml:space="preserve">
          <source>Seq.sorted()</source>
          <target state="translated">Seq.sorted()</target>
        </trans-unit>
        <trans-unit id="277a5fec89344de606600a16b2cdcd80210a9753" translate="yes" xml:space="preserve">
          <source>Seq.startsWith()</source>
          <target state="translated">Seq.startsWith()</target>
        </trans-unit>
        <trans-unit id="9914e6f243962a143261adf28aec2d4923805b28" translate="yes" xml:space="preserve">
          <source>Seq.stringPrefix()</source>
          <target state="translated">Seq.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="c8574940fb2ff9c0380df9b51a7dff2bf1474751" translate="yes" xml:space="preserve">
          <source>Seq.toSeq()</source>
          <target state="translated">Seq.toSeq()</target>
        </trans-unit>
        <trans-unit id="d29788d28f86be1a7c317e88c915d0d085d8ca6c" translate="yes" xml:space="preserve">
          <source>Seq.toString()</source>
          <target state="translated">Seq.toString()</target>
        </trans-unit>
        <trans-unit id="1e2f7a076fcbba833cab0025884106f5c22f84f5" translate="yes" xml:space="preserve">
          <source>Seq.update()</source>
          <target state="translated">Seq.update()</target>
        </trans-unit>
        <trans-unit id="5805a111a4b2ec8dc34f3b581ecb6d891285f61c" translate="yes" xml:space="preserve">
          <source>Seq.updated()</source>
          <target state="translated">Seq.updated()</target>
        </trans-unit>
        <trans-unit id="fad0d09d09ffb64896f7aeab06e8a3a98f72bbd4" translate="yes" xml:space="preserve">
          <source>Seq.view()</source>
          <target state="translated">Seq.view()</target>
        </trans-unit>
        <trans-unit id="0a49d770ea9945825baa201cff06491f14c94e1c" translate="yes" xml:space="preserve">
          <source>SeqFactory</source>
          <target state="translated">SeqFactory</target>
        </trans-unit>
        <trans-unit id="0f520de48c88fc0136b7cde2d0af7c68e75a6b4f" translate="yes" xml:space="preserve">
          <source>SeqFactory$</source>
          <target state="translated">SeqFactory$</target>
        </trans-unit>
        <trans-unit id="77ad7de064fe45c50a686296090ef9afda581f1e" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate</source>
          <target state="translated">SeqFactory$.Delegate</target>
        </trans-unit>
        <trans-unit id="6bf4646c981f08b91f84b455944441f9eb408bea" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate()</source>
          <target state="translated">SeqFactory$.Delegate()</target>
        </trans-unit>
        <trans-unit id="66320affeb9f746ea0c3e84417518534545216c8" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate.Delegate()</source>
          <target state="translated">SeqFactory$.Delegate.Delegate()</target>
        </trans-unit>
        <trans-unit id="b879d2510902ee07c140ff4379cc01dd8dbc2f1d" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate.apply()</source>
          <target state="translated">SeqFactory$.Delegate.apply()</target>
        </trans-unit>
        <trans-unit id="9529db760b745d7e5f6b37258c9bde5dfabccc21" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate.empty()</source>
          <target state="translated">SeqFactory$.Delegate.empty()</target>
        </trans-unit>
        <trans-unit id="6bbe8aaece4295c37891c5d3136c56423f185bb3" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate.from()</source>
          <target state="translated">SeqFactory$.Delegate.from()</target>
        </trans-unit>
        <trans-unit id="a08e6e30f3948345366974d7ec36138bb8f76713" translate="yes" xml:space="preserve">
          <source>SeqFactory$.Delegate.newBuilder()</source>
          <target state="translated">SeqFactory$.Delegate.newBuilder()</target>
        </trans-unit>
        <trans-unit id="fca26b0061b43ef370ca205597bda372e138f6a6" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper</target>
        </trans-unit>
        <trans-unit id="136e9cddd8527cb1a987c6901315343ee4aa3fe1" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper()</target>
        </trans-unit>
        <trans-unit id="16182f4c0994579828a7f75aef5a9f101e03f8da" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.UnapplySeqWrapper()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.UnapplySeqWrapper()</target>
        </trans-unit>
        <trans-unit id="48ff02d15f85dcc03f91941824b8f833d40bb3fa" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.apply()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.apply()</target>
        </trans-unit>
        <trans-unit id="4a31436ac228f6af96a61f8bd7cbd6f36c204fa3" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.drop()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.drop()</target>
        </trans-unit>
        <trans-unit id="e7749e15114299f7ffa9ea1cd038822410e39ac7" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.get()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.get()</target>
        </trans-unit>
        <trans-unit id="5f6f49c5332021fe14e47b3dc46efba48acbfff0" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.isEmpty()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.isEmpty()</target>
        </trans-unit>
        <trans-unit id="e58456e0431f0898021e9eba6eac8f3201c2bc34" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.lengthCompare()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="1601455814db88c1fd15ea94ec2d728f6d28875a" translate="yes" xml:space="preserve">
          <source>SeqFactory$.UnapplySeqWrapper.toSeq()</source>
          <target state="translated">SeqFactory$.UnapplySeqWrapper.toSeq()</target>
        </trans-unit>
        <trans-unit id="c70a20ef7bd69f1c74bc93af1430500640e6b2f5" translate="yes" xml:space="preserve">
          <source>SeqFactory.unapplySeq()</source>
          <target state="translated">SeqFactory.unapplySeq()</target>
        </trans-unit>
        <trans-unit id="2c86cd6f619b7cee15486c81a2df53107354846d" translate="yes" xml:space="preserve">
          <source>SeqMap</source>
          <target state="translated">SeqMap</target>
        </trans-unit>
        <trans-unit id="e457fa181dd231f743eafbbca905e5cbc5563804" translate="yes" xml:space="preserve">
          <source>SeqMap$</source>
          <target state="translated">SeqMap$</target>
        </trans-unit>
        <trans-unit id="144a17575700fcd19407d96b7fd8405d5b7544ba" translate="yes" xml:space="preserve">
          <source>SeqMap$.empty()</source>
          <target state="translated">SeqMap$.empty()</target>
        </trans-unit>
        <trans-unit id="e2fb433943fd842b224f17492a3d378436fd1a6f" translate="yes" xml:space="preserve">
          <source>SeqMap$.from()</source>
          <target state="translated">SeqMap$.from()</target>
        </trans-unit>
        <trans-unit id="a164853ed386fb0405f02c5217171b97446d8506" translate="yes" xml:space="preserve">
          <source>SeqMap$.newBuilder()</source>
          <target state="translated">SeqMap$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="4e652acf3ea02026ef83ea925be9bb1a4f53fa24" translate="yes" xml:space="preserve">
          <source>SeqMap.mapFactory()</source>
          <target state="translated">SeqMap.mapFactory()</target>
        </trans-unit>
        <trans-unit id="5bf68c50c0721a28ff71aaa98ddcc98d9fd90c45" translate="yes" xml:space="preserve">
          <source>SeqMap.scala</source>
          <target state="translated">SeqMap.scala</target>
        </trans-unit>
        <trans-unit id="6d4450c0c6f4d4c29edfd6dc97cca135bcc69c21" translate="yes" xml:space="preserve">
          <source>SeqOps</source>
          <target state="translated">SeqOps</target>
        </trans-unit>
        <trans-unit id="1b4d74f96ea5a8d6ea50c208ec2f65a80030dd35" translate="yes" xml:space="preserve">
          <source>SeqOps$</source>
          <target state="translated">SeqOps$</target>
        </trans-unit>
        <trans-unit id="21a3cddc048051ae60ba7d67356e0766324a4310" translate="yes" xml:space="preserve">
          <source>SeqOps.++:()</source>
          <target state="translated">SeqOps.++:()</target>
        </trans-unit>
        <trans-unit id="191ebc37e2d167d6cde77d5118c778cf8dde796d" translate="yes" xml:space="preserve">
          <source>SeqOps.+:()</source>
          <target state="translated">SeqOps.+:()</target>
        </trans-unit>
        <trans-unit id="5b4229b06f2a23a1fc81862e8b14e7f8743d2df4" translate="yes" xml:space="preserve">
          <source>SeqOps.:+()</source>
          <target state="translated">SeqOps.:+()</target>
        </trans-unit>
        <trans-unit id="f13676a598d134231f18fe8db951e0a403523339" translate="yes" xml:space="preserve">
          <source>SeqOps.:++()</source>
          <target state="translated">SeqOps.:++()</target>
        </trans-unit>
        <trans-unit id="30ed9cd29df644d22aef63292a36b3686d6fae9d" translate="yes" xml:space="preserve">
          <source>SeqOps.appended()</source>
          <target state="translated">SeqOps.appended()</target>
        </trans-unit>
        <trans-unit id="84c435e6fa42a864ae7f4603485ab4beed33401c" translate="yes" xml:space="preserve">
          <source>SeqOps.appendedAll()</source>
          <target state="translated">SeqOps.appendedAll()</target>
        </trans-unit>
        <trans-unit id="3ddd888ad4f518529b71c95e4593902655d62151" translate="yes" xml:space="preserve">
          <source>SeqOps.apply()</source>
          <target state="translated">SeqOps.apply()</target>
        </trans-unit>
        <trans-unit id="552d589b94ec46aa5f8b4767407ebadf6807f187" translate="yes" xml:space="preserve">
          <source>SeqOps.clone()</source>
          <target state="translated">SeqOps.clone()</target>
        </trans-unit>
        <trans-unit id="af1d49cf94d3193a65b7c79f2999ac3087ce21c6" translate="yes" xml:space="preserve">
          <source>SeqOps.combinations()</source>
          <target state="translated">SeqOps.combinations()</target>
        </trans-unit>
        <trans-unit id="303667e328ed47a90d69c260d2fe7a4a4212341f" translate="yes" xml:space="preserve">
          <source>SeqOps.concat()</source>
          <target state="translated">SeqOps.concat()</target>
        </trans-unit>
        <trans-unit id="5e18da4a1c26af9d4c8f04c1682f9d454c403adf" translate="yes" xml:space="preserve">
          <source>SeqOps.contains()</source>
          <target state="translated">SeqOps.contains()</target>
        </trans-unit>
        <trans-unit id="663750abf4dc09a203dc753bf1a29edca59d0db0" translate="yes" xml:space="preserve">
          <source>SeqOps.containsSlice()</source>
          <target state="translated">SeqOps.containsSlice()</target>
        </trans-unit>
        <trans-unit id="73ea6c98ce4f4d817d39969803118b7ef88f6b89" translate="yes" xml:space="preserve">
          <source>SeqOps.corresponds()</source>
          <target state="translated">SeqOps.corresponds()</target>
        </trans-unit>
        <trans-unit id="cde1f79865aaad9ce162b143d9d0fbacb08d4abe" translate="yes" xml:space="preserve">
          <source>SeqOps.diff()</source>
          <target state="translated">SeqOps.diff()</target>
        </trans-unit>
        <trans-unit id="857ba8e4ff8eb0499dcb1ad231367e2c85e5eea4" translate="yes" xml:space="preserve">
          <source>SeqOps.distinct()</source>
          <target state="translated">SeqOps.distinct()</target>
        </trans-unit>
        <trans-unit id="ce56e536921c0a682b238c75df62a8d69e345123" translate="yes" xml:space="preserve">
          <source>SeqOps.distinctBy()</source>
          <target state="translated">SeqOps.distinctBy()</target>
        </trans-unit>
        <trans-unit id="57cbaf7945d9b4447b10773e48a481fb905e2473" translate="yes" xml:space="preserve">
          <source>SeqOps.endsWith()</source>
          <target state="translated">SeqOps.endsWith()</target>
        </trans-unit>
        <trans-unit id="a5c9fbd055f62f9d01193ac834c3695c7c6345b7" translate="yes" xml:space="preserve">
          <source>SeqOps.findLast()</source>
          <target state="translated">SeqOps.findLast()</target>
        </trans-unit>
        <trans-unit id="e9e4c98b016444153ccb06f3bf3f3b97c1eadf2a" translate="yes" xml:space="preserve">
          <source>SeqOps.indexOf()</source>
          <target state="translated">SeqOps.indexOf()</target>
        </trans-unit>
        <trans-unit id="d6be28e4b0292054f9718dfbd2e744af70098f0a" translate="yes" xml:space="preserve">
          <source>SeqOps.indexOfSlice()</source>
          <target state="translated">SeqOps.indexOfSlice()</target>
        </trans-unit>
        <trans-unit id="0ca9ad8f1344ddcba20177761f873535194598e7" translate="yes" xml:space="preserve">
          <source>SeqOps.indexWhere()</source>
          <target state="translated">SeqOps.indexWhere()</target>
        </trans-unit>
        <trans-unit id="ef806933f6331f4227f65410752781e7387ad2a0" translate="yes" xml:space="preserve">
          <source>SeqOps.indices()</source>
          <target state="translated">SeqOps.indices()</target>
        </trans-unit>
        <trans-unit id="8090aa96a5890a4f8e1fba0ad67ada5210292798" translate="yes" xml:space="preserve">
          <source>SeqOps.intersect()</source>
          <target state="translated">SeqOps.intersect()</target>
        </trans-unit>
        <trans-unit id="86bee55e73573f44d822bc9da76bcc17f009f169" translate="yes" xml:space="preserve">
          <source>SeqOps.isDefinedAt()</source>
          <target state="translated">SeqOps.isDefinedAt()</target>
        </trans-unit>
        <trans-unit id="a5d87bf64be0d13b149db7c6fe35cd25552011db" translate="yes" xml:space="preserve">
          <source>SeqOps.isEmpty()</source>
          <target state="translated">SeqOps.isEmpty()</target>
        </trans-unit>
        <trans-unit id="634a20c2b01ec718749b7915f7c958ba895b0f6a" translate="yes" xml:space="preserve">
          <source>SeqOps.lastIndexOf()</source>
          <target state="translated">SeqOps.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="441fe819b41f20466707a6f363bf210df2ce799e" translate="yes" xml:space="preserve">
          <source>SeqOps.lastIndexOfSlice()</source>
          <target state="translated">SeqOps.lastIndexOfSlice()</target>
        </trans-unit>
        <trans-unit id="e7fb5d4ed98f004a6db8a0769cfb9e5cab1d0d81" translate="yes" xml:space="preserve">
          <source>SeqOps.lastIndexWhere()</source>
          <target state="translated">SeqOps.lastIndexWhere()</target>
        </trans-unit>
        <trans-unit id="20dba3ba0bf6140478349182a3e9b2c88f7c2c42" translate="yes" xml:space="preserve">
          <source>SeqOps.length()</source>
          <target state="translated">SeqOps.length()</target>
        </trans-unit>
        <trans-unit id="83e1741e23aa19a2f2050325cd7262b6080682c7" translate="yes" xml:space="preserve">
          <source>SeqOps.lengthCompare()</source>
          <target state="translated">SeqOps.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="784308c54e1ab859b27c1ec872a4cbd2fc69760d" translate="yes" xml:space="preserve">
          <source>SeqOps.lengthIs()</source>
          <target state="translated">SeqOps.lengthIs()</target>
        </trans-unit>
        <trans-unit id="b13e6fd60cf84b2e88258fe7944590c52c0fbcde" translate="yes" xml:space="preserve">
          <source>SeqOps.occCounts()</source>
          <target state="translated">SeqOps.occCounts()</target>
        </trans-unit>
        <trans-unit id="8509696c05129ac25236224241402e30c3e02e84" translate="yes" xml:space="preserve">
          <source>SeqOps.padTo()</source>
          <target state="translated">SeqOps.padTo()</target>
        </trans-unit>
        <trans-unit id="f041995343da5bd92d8eebfb4f0d049e38477108" translate="yes" xml:space="preserve">
          <source>SeqOps.patch()</source>
          <target state="translated">SeqOps.patch()</target>
        </trans-unit>
        <trans-unit id="3606ce35a332df64209bbbf258f488cc3077c9f0" translate="yes" xml:space="preserve">
          <source>SeqOps.permutations()</source>
          <target state="translated">SeqOps.permutations()</target>
        </trans-unit>
        <trans-unit id="0229fb4ae9c4126544cbaf3c9004b559cc81b3a9" translate="yes" xml:space="preserve">
          <source>SeqOps.prepended()</source>
          <target state="translated">SeqOps.prepended()</target>
        </trans-unit>
        <trans-unit id="347f2ec33ba408ba3f25c33997c21e7dcbb95b51" translate="yes" xml:space="preserve">
          <source>SeqOps.prependedAll()</source>
          <target state="translated">SeqOps.prependedAll()</target>
        </trans-unit>
        <trans-unit id="3087e05b7ac9ee7758248e8e431b64d0ce771f7b" translate="yes" xml:space="preserve">
          <source>SeqOps.reverse()</source>
          <target state="translated">SeqOps.reverse()</target>
        </trans-unit>
        <trans-unit id="e9eed34448f0f3007bdb9c4c72609b38b0d98341" translate="yes" xml:space="preserve">
          <source>SeqOps.reverseIterator()</source>
          <target state="translated">SeqOps.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="a5c2103dc43818692da5b346a0ad70b2265b2bf4" translate="yes" xml:space="preserve">
          <source>SeqOps.sameElements()</source>
          <target state="translated">SeqOps.sameElements()</target>
        </trans-unit>
        <trans-unit id="097e94b52518bd09438bfb4efc82cea92a6aef03" translate="yes" xml:space="preserve">
          <source>SeqOps.search()</source>
          <target state="translated">SeqOps.search()</target>
        </trans-unit>
        <trans-unit id="389b6f1ab629e1bbe62d5a30b6bea0199dd5f691" translate="yes" xml:space="preserve">
          <source>SeqOps.segmentLength()</source>
          <target state="translated">SeqOps.segmentLength()</target>
        </trans-unit>
        <trans-unit id="e10fc6951327b42318a2908dc63dedb0672e3c31" translate="yes" xml:space="preserve">
          <source>SeqOps.size()</source>
          <target state="translated">SeqOps.size()</target>
        </trans-unit>
        <trans-unit id="c361bb29022ff673ea7c26f97d2b760da273734f" translate="yes" xml:space="preserve">
          <source>SeqOps.sizeCompare()</source>
          <target state="translated">SeqOps.sizeCompare()</target>
        </trans-unit>
        <trans-unit id="2239a174cd204747df77bc41e929db92a297b1a2" translate="yes" xml:space="preserve">
          <source>SeqOps.sortBy()</source>
          <target state="translated">SeqOps.sortBy()</target>
        </trans-unit>
        <trans-unit id="ca567bd1082d9e1e4af0f55eadcd484dfbec1186" translate="yes" xml:space="preserve">
          <source>SeqOps.sortWith()</source>
          <target state="translated">SeqOps.sortWith()</target>
        </trans-unit>
        <trans-unit id="138ab1c258a63a45e126c2c8971196630f5005e6" translate="yes" xml:space="preserve">
          <source>SeqOps.sorted()</source>
          <target state="translated">SeqOps.sorted()</target>
        </trans-unit>
        <trans-unit id="52bb67641a73f8a3e5942beb2b29d0999c3ed9b2" translate="yes" xml:space="preserve">
          <source>SeqOps.startsWith()</source>
          <target state="translated">SeqOps.startsWith()</target>
        </trans-unit>
        <trans-unit id="59150a0cde5cf9a3272734d5a51c7e219ca19fe9" translate="yes" xml:space="preserve">
          <source>SeqOps.update()</source>
          <target state="translated">SeqOps.update()</target>
        </trans-unit>
        <trans-unit id="a501599f77b585f90e362fa13208fadb53d0fc56" translate="yes" xml:space="preserve">
          <source>SeqOps.updated()</source>
          <target state="translated">SeqOps.updated()</target>
        </trans-unit>
        <trans-unit id="b73323fb1d6d3ca920b770c7fb761cbd6e352ec2" translate="yes" xml:space="preserve">
          <source>SeqOps.view()</source>
          <target state="translated">SeqOps.view()</target>
        </trans-unit>
        <trans-unit id="87a6b4f38e0898fe7e4d571584c46b769282ffa6" translate="yes" xml:space="preserve">
          <source>SeqView</source>
          <target state="translated">SeqView</target>
        </trans-unit>
        <trans-unit id="49910ca8a0a30b2e8c7604253336967152a50507" translate="yes" xml:space="preserve">
          <source>SeqView$</source>
          <target state="translated">SeqView$</target>
        </trans-unit>
        <trans-unit id="c13586b6fbcbc51d37eccf7ba2c2daafdfba2206" translate="yes" xml:space="preserve">
          <source>SeqView$.Appended</source>
          <target state="translated">SeqView$.Appended</target>
        </trans-unit>
        <trans-unit id="e359e7728fb260812fb81fd7bca37dbb1c8a0356" translate="yes" xml:space="preserve">
          <source>SeqView$.Appended()</source>
          <target state="translated">SeqView$.Appended()</target>
        </trans-unit>
        <trans-unit id="c254c5bc5dae42964359ab012215eb612d9a904b" translate="yes" xml:space="preserve">
          <source>SeqView$.Appended.Appended()</source>
          <target state="translated">SeqView$.Appended.Appended()</target>
        </trans-unit>
        <trans-unit id="cc7650c8e569880d34e80eaeb56383434b0a0efa" translate="yes" xml:space="preserve">
          <source>SeqView$.Appended.apply()</source>
          <target state="translated">SeqView$.Appended.apply()</target>
        </trans-unit>
        <trans-unit id="e991d9103b1149e683ec8969920f0665a0bdf7ca" translate="yes" xml:space="preserve">
          <source>SeqView$.Appended.length()</source>
          <target state="translated">SeqView$.Appended.length()</target>
        </trans-unit>
        <trans-unit id="e63c3f0fdcb51944e6f5d1ef22dcb428d5b112c0" translate="yes" xml:space="preserve">
          <source>SeqView$.Concat</source>
          <target state="translated">SeqView$.Concat</target>
        </trans-unit>
        <trans-unit id="e7f0c3161ce3e460262b798fab04089709a7fbc6" translate="yes" xml:space="preserve">
          <source>SeqView$.Concat()</source>
          <target state="translated">SeqView$.Concat()</target>
        </trans-unit>
        <trans-unit id="b8c2837314dc9ada28e2df3f3de1b05855bf3a19" translate="yes" xml:space="preserve">
          <source>SeqView$.Concat.Concat()</source>
          <target state="translated">SeqView$.Concat.Concat()</target>
        </trans-unit>
        <trans-unit id="22ace7d879c07be1c2ffeb2c6a4714c194025f51" translate="yes" xml:space="preserve">
          <source>SeqView$.Concat.apply()</source>
          <target state="translated">SeqView$.Concat.apply()</target>
        </trans-unit>
        <trans-unit id="83ffd0f0273117963064e47b091ffe5fc2df15a6" translate="yes" xml:space="preserve">
          <source>SeqView$.Concat.length()</source>
          <target state="translated">SeqView$.Concat.length()</target>
        </trans-unit>
        <trans-unit id="ad2b218e7a1fdccd602c5a77e76a2e27bed272ce" translate="yes" xml:space="preserve">
          <source>SeqView$.Drop</source>
          <target state="translated">SeqView$.Drop</target>
        </trans-unit>
        <trans-unit id="c99ffd7fa92f129612ed7f77280405cb1ed0814c" translate="yes" xml:space="preserve">
          <source>SeqView$.Drop()</source>
          <target state="translated">SeqView$.Drop()</target>
        </trans-unit>
        <trans-unit id="971e6f24e50f9e66bfe6fc51e7d4219c211f32fc" translate="yes" xml:space="preserve">
          <source>SeqView$.Drop.Drop()</source>
          <target state="translated">SeqView$.Drop.Drop()</target>
        </trans-unit>
        <trans-unit id="666240827ddd60dcce5fb7518d6027d6d4519401" translate="yes" xml:space="preserve">
          <source>SeqView$.Drop.apply()</source>
          <target state="translated">SeqView$.Drop.apply()</target>
        </trans-unit>
        <trans-unit id="4ba99da1506c9d65da888698733c51f1809a2a13" translate="yes" xml:space="preserve">
          <source>SeqView$.Drop.length()</source>
          <target state="translated">SeqView$.Drop.length()</target>
        </trans-unit>
        <trans-unit id="6c9cb5e7314e1ea6d132b1e2e56f101c49471ec0" translate="yes" xml:space="preserve">
          <source>SeqView$.DropRight</source>
          <target state="translated">SeqView$.DropRight</target>
        </trans-unit>
        <trans-unit id="f696e7f7b5e315b654b5433c5152a9ad3e7ab8c6" translate="yes" xml:space="preserve">
          <source>SeqView$.DropRight()</source>
          <target state="translated">SeqView$.DropRight()</target>
        </trans-unit>
        <trans-unit id="f371ef80b10c60f7dd051ef48df1e6f04323a64f" translate="yes" xml:space="preserve">
          <source>SeqView$.DropRight.DropRight()</source>
          <target state="translated">SeqView$.DropRight.DropRight()</target>
        </trans-unit>
        <trans-unit id="19dd75f60140decc622cbcd2e173ab6c26e720aa" translate="yes" xml:space="preserve">
          <source>SeqView$.DropRight.apply()</source>
          <target state="translated">SeqView$.DropRight.apply()</target>
        </trans-unit>
        <trans-unit id="b1b08d3ac51b84308db5bacc908318be63699899" translate="yes" xml:space="preserve">
          <source>SeqView$.DropRight.length()</source>
          <target state="translated">SeqView$.DropRight.length()</target>
        </trans-unit>
        <trans-unit id="d2c5db363ff9293bf481fca82126e21893b19f1f" translate="yes" xml:space="preserve">
          <source>SeqView$.Id</source>
          <target state="translated">SeqView$.Id</target>
        </trans-unit>
        <trans-unit id="b06e7c1895f4b37d893ea30a9e2b25c1568d1c0e" translate="yes" xml:space="preserve">
          <source>SeqView$.Id()</source>
          <target state="translated">SeqView$.Id()</target>
        </trans-unit>
        <trans-unit id="ebea1045a5a03687c497ff11464cb780d50ffbef" translate="yes" xml:space="preserve">
          <source>SeqView$.Id.Id()</source>
          <target state="translated">SeqView$.Id.Id()</target>
        </trans-unit>
        <trans-unit id="f27870ac1aa2474d4169ea3aa52855ae9491c07f" translate="yes" xml:space="preserve">
          <source>SeqView$.Id.apply()</source>
          <target state="translated">SeqView$.Id.apply()</target>
        </trans-unit>
        <trans-unit id="f41f3c50f14a46a03ce28fee3fcfe2e898e4f14e" translate="yes" xml:space="preserve">
          <source>SeqView$.Id.isEmpty()</source>
          <target state="translated">SeqView$.Id.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2f4e4a3fa6ef9575cb51f57cfdf323dde1a8d972" translate="yes" xml:space="preserve">
          <source>SeqView$.Id.iterator()</source>
          <target state="translated">SeqView$.Id.iterator()</target>
        </trans-unit>
        <trans-unit id="5f952e7a49ad3f84f48e9842edcbdca9f150dd88" translate="yes" xml:space="preserve">
          <source>SeqView$.Id.knownSize()</source>
          <target state="translated">SeqView$.Id.knownSize()</target>
        </trans-unit>
        <trans-unit id="5b83c9b3ddf1eff514333f176c30b670bbbe4f44" translate="yes" xml:space="preserve">
          <source>SeqView$.Id.length()</source>
          <target state="translated">SeqView$.Id.length()</target>
        </trans-unit>
        <trans-unit id="ea128cad2275183e117ec6a2bf2644ce2556520d" translate="yes" xml:space="preserve">
          <source>SeqView$.Map</source>
          <target state="translated">SeqView$.Map</target>
        </trans-unit>
        <trans-unit id="55ed3d06fe1526a73b89cdd67ec3583fbeccaae5" translate="yes" xml:space="preserve">
          <source>SeqView$.Map()</source>
          <target state="translated">SeqView$.Map()</target>
        </trans-unit>
        <trans-unit id="ad7735e9da69c0b2d56b5253ef28e93cd13fbdcf" translate="yes" xml:space="preserve">
          <source>SeqView$.Map.Map()</source>
          <target state="translated">SeqView$.Map.Map()</target>
        </trans-unit>
        <trans-unit id="a1bf7833afcd568e97c1e09df13620805a111676" translate="yes" xml:space="preserve">
          <source>SeqView$.Map.apply()</source>
          <target state="translated">SeqView$.Map.apply()</target>
        </trans-unit>
        <trans-unit id="315a66745589333ec607dda7667868255c863750" translate="yes" xml:space="preserve">
          <source>SeqView$.Map.length()</source>
          <target state="translated">SeqView$.Map.length()</target>
        </trans-unit>
        <trans-unit id="e716ee5245fb46c5b52395d5b3f5ae7cb01af96b" translate="yes" xml:space="preserve">
          <source>SeqView$.Prepended</source>
          <target state="translated">SeqView$.Prepended</target>
        </trans-unit>
        <trans-unit id="c5abe4700182b3705ded4e32389b31819a5c2abd" translate="yes" xml:space="preserve">
          <source>SeqView$.Prepended()</source>
          <target state="translated">SeqView$.Prepended()</target>
        </trans-unit>
        <trans-unit id="ae23aa89386f18101529b14b405511afe2ae38cf" translate="yes" xml:space="preserve">
          <source>SeqView$.Prepended.Prepended()</source>
          <target state="translated">SeqView$.Prepended.Prepended()</target>
        </trans-unit>
        <trans-unit id="cae2bbcf77375c4cff1e8df6572428d63eb395b9" translate="yes" xml:space="preserve">
          <source>SeqView$.Prepended.apply()</source>
          <target state="translated">SeqView$.Prepended.apply()</target>
        </trans-unit>
        <trans-unit id="9aa8d8fc20490f4a0d6b83cfb9e8452f9a3c331f" translate="yes" xml:space="preserve">
          <source>SeqView$.Prepended.length()</source>
          <target state="translated">SeqView$.Prepended.length()</target>
        </trans-unit>
        <trans-unit id="bedd5277c5f6afc73360055f802e1718d6bcd4b2" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse</source>
          <target state="translated">SeqView$.Reverse</target>
        </trans-unit>
        <trans-unit id="5bc1132ed88f741f2864087d674621aa7d0a2ce0" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse()</source>
          <target state="translated">SeqView$.Reverse()</target>
        </trans-unit>
        <trans-unit id="3c904bd43af819306aec39faf27c3da2da0e74ee" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse.Reverse()</source>
          <target state="translated">SeqView$.Reverse.Reverse()</target>
        </trans-unit>
        <trans-unit id="ca208ecfd0b9e778ceadd761fb1fbab5ddea8862" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse.apply()</source>
          <target state="translated">SeqView$.Reverse.apply()</target>
        </trans-unit>
        <trans-unit id="eab17c89a01bc9ac2cb96606f43cbb021e301e4c" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse.isEmpty()</source>
          <target state="translated">SeqView$.Reverse.isEmpty()</target>
        </trans-unit>
        <trans-unit id="9f630b46a81222311a5dba4ac6c7021ee7aa67ac" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse.iterator()</source>
          <target state="translated">SeqView$.Reverse.iterator()</target>
        </trans-unit>
        <trans-unit id="9a8c44a392f867a696a935bce3e93795fbf7f53b" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse.knownSize()</source>
          <target state="translated">SeqView$.Reverse.knownSize()</target>
        </trans-unit>
        <trans-unit id="8f0aa2b1bac558f8ffd19aeffb1e6ddf1a686982" translate="yes" xml:space="preserve">
          <source>SeqView$.Reverse.length()</source>
          <target state="translated">SeqView$.Reverse.length()</target>
        </trans-unit>
        <trans-unit id="8dcdc126f6a492fba32fbf4e8a36ee9c86818ac2" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted</source>
          <target state="translated">SeqView$.Sorted</target>
        </trans-unit>
        <trans-unit id="323631f8c03fb5497f9a4ff5f7e56f9efdefa3b9" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted()</source>
          <target state="translated">SeqView$.Sorted()</target>
        </trans-unit>
        <trans-unit id="9d9b2e92b8fdd8161af3b0b96b8aaefa1701a105" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.Sorted()</source>
          <target state="translated">SeqView$.Sorted.Sorted()</target>
        </trans-unit>
        <trans-unit id="f651d4320415ff1eba0d96f34d8517f0d92133e4" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.apply()</source>
          <target state="translated">SeqView$.Sorted.apply()</target>
        </trans-unit>
        <trans-unit id="68f46fb74d5342a8ff1c1ec36f22aba145a74d5f" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.isEmpty()</source>
          <target state="translated">SeqView$.Sorted.isEmpty()</target>
        </trans-unit>
        <trans-unit id="dddcba2f4b8c457c601c740cf2a8fca9d4ed26ff" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.iterator()</source>
          <target state="translated">SeqView$.Sorted.iterator()</target>
        </trans-unit>
        <trans-unit id="4089eaaee11aec594008a12aab47cc6749ebbde2" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.knownSize()</source>
          <target state="translated">SeqView$.Sorted.knownSize()</target>
        </trans-unit>
        <trans-unit id="82cc871c5691e8b86d75ea752e246a427e0d5250" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.length()</source>
          <target state="translated">SeqView$.Sorted.length()</target>
        </trans-unit>
        <trans-unit id="8ec4fca078a0ffc0cfd0b5bef53454edc202064c" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.reverse()</source>
          <target state="translated">SeqView$.Sorted.reverse()</target>
        </trans-unit>
        <trans-unit id="a0701d2f4445b3645e9c586fc089c94c8a20d252" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.reversed()</source>
          <target state="translated">SeqView$.Sorted.reversed()</target>
        </trans-unit>
        <trans-unit id="79ab98f29b823ef54de34568d6d28b4926c601f2" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.sorted()</source>
          <target state="translated">SeqView$.Sorted.sorted()</target>
        </trans-unit>
        <trans-unit id="73de4138838251f2a3ee065b659175ee4b791d68" translate="yes" xml:space="preserve">
          <source>SeqView$.Sorted.to()</source>
          <target state="translated">SeqView$.Sorted.to()</target>
        </trans-unit>
        <trans-unit id="3cc41d801f4298b316a59c01a7c41a2036914e44" translate="yes" xml:space="preserve">
          <source>SeqView$.Take</source>
          <target state="translated">SeqView$.Take</target>
        </trans-unit>
        <trans-unit id="c366f3d32fc62410331f8f09b49e020e0bce60ac" translate="yes" xml:space="preserve">
          <source>SeqView$.Take()</source>
          <target state="translated">SeqView$.Take()</target>
        </trans-unit>
        <trans-unit id="3f2829ff37296dcdcdd2927d25548cadc74e55f6" translate="yes" xml:space="preserve">
          <source>SeqView$.Take.Take()</source>
          <target state="translated">SeqView$.Take.Take()</target>
        </trans-unit>
        <trans-unit id="7cd67ade12967726d0f66f88eaf66d469c345080" translate="yes" xml:space="preserve">
          <source>SeqView$.Take.apply()</source>
          <target state="translated">SeqView$.Take.apply()</target>
        </trans-unit>
        <trans-unit id="5f204c9a08e13e2300ef692aed1433fee82912b6" translate="yes" xml:space="preserve">
          <source>SeqView$.Take.length()</source>
          <target state="translated">SeqView$.Take.length()</target>
        </trans-unit>
        <trans-unit id="8ea5acafe8c29ea45bc3d6c82dd784a9fbff627b" translate="yes" xml:space="preserve">
          <source>SeqView$.TakeRight</source>
          <target state="translated">SeqView$.TakeRight</target>
        </trans-unit>
        <trans-unit id="a4760a4e3264b98a9f7367f86584117c8af74a2b" translate="yes" xml:space="preserve">
          <source>SeqView$.TakeRight()</source>
          <target state="translated">SeqView$.TakeRight()</target>
        </trans-unit>
        <trans-unit id="5bb96cf26f1c8ca6c5c8358201fd643659f0cbd9" translate="yes" xml:space="preserve">
          <source>SeqView$.TakeRight.TakeRight()</source>
          <target state="translated">SeqView$.TakeRight.TakeRight()</target>
        </trans-unit>
        <trans-unit id="fed5e28a822af5c3b40b45291c148044c97be36d" translate="yes" xml:space="preserve">
          <source>SeqView$.TakeRight.apply()</source>
          <target state="translated">SeqView$.TakeRight.apply()</target>
        </trans-unit>
        <trans-unit id="edffe39e089b0a2eb5d669e49a77ddb1a1fc69ab" translate="yes" xml:space="preserve">
          <source>SeqView$.TakeRight.length()</source>
          <target state="translated">SeqView$.TakeRight.length()</target>
        </trans-unit>
        <trans-unit id="a9a0998750e3d833e7a1d43faddce16b6ba3d501" translate="yes" xml:space="preserve">
          <source>SeqView.appended()</source>
          <target state="translated">SeqView.appended()</target>
        </trans-unit>
        <trans-unit id="984a0fe7874419ab0539286b34608a1c4c0ab408" translate="yes" xml:space="preserve">
          <source>SeqView.appendedAll()</source>
          <target state="translated">SeqView.appendedAll()</target>
        </trans-unit>
        <trans-unit id="48c787b36f898d812e46ddc41610464f296fb85d" translate="yes" xml:space="preserve">
          <source>SeqView.concat()</source>
          <target state="translated">SeqView.concat()</target>
        </trans-unit>
        <trans-unit id="c262bff0b5e4b5bead9bacaf91df5dac6e261a5f" translate="yes" xml:space="preserve">
          <source>SeqView.drop()</source>
          <target state="translated">SeqView.drop()</target>
        </trans-unit>
        <trans-unit id="6d0ac74527dd309339d5a712e61355e9b7d99668" translate="yes" xml:space="preserve">
          <source>SeqView.dropRight()</source>
          <target state="translated">SeqView.dropRight()</target>
        </trans-unit>
        <trans-unit id="311f0d84a58c9d732eee9fb436ef0a56c84cc139" translate="yes" xml:space="preserve">
          <source>SeqView.map()</source>
          <target state="translated">SeqView.map()</target>
        </trans-unit>
        <trans-unit id="4233b84b97e32447062a0c37775e762659ff0065" translate="yes" xml:space="preserve">
          <source>SeqView.prepended()</source>
          <target state="translated">SeqView.prepended()</target>
        </trans-unit>
        <trans-unit id="a1fd88e837be23cc44c6766495c5e983d7a7daad" translate="yes" xml:space="preserve">
          <source>SeqView.prependedAll()</source>
          <target state="translated">SeqView.prependedAll()</target>
        </trans-unit>
        <trans-unit id="65219c67d15e9f187dde68673b92505d5a66c290" translate="yes" xml:space="preserve">
          <source>SeqView.reverse()</source>
          <target state="translated">SeqView.reverse()</target>
        </trans-unit>
        <trans-unit id="64efdfbd18a827e57012836ee2f14bbd2e03794c" translate="yes" xml:space="preserve">
          <source>SeqView.scala</source>
          <target state="translated">SeqView.scala</target>
        </trans-unit>
        <trans-unit id="e7d146c0a832985d7b2ea580d62a94943f533d3c" translate="yes" xml:space="preserve">
          <source>SeqView.sorted()</source>
          <target state="translated">SeqView.sorted()</target>
        </trans-unit>
        <trans-unit id="9c5b7c016ba6af3f7b232021563ac783e52c6b04" translate="yes" xml:space="preserve">
          <source>SeqView.stringPrefix()</source>
          <target state="translated">SeqView.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="68d55a0e0852d58cbfe52c21115dbad64b9ea502" translate="yes" xml:space="preserve">
          <source>SeqView.take()</source>
          <target state="translated">SeqView.take()</target>
        </trans-unit>
        <trans-unit id="666b54028aac57175aa58775214712c1570bdedd" translate="yes" xml:space="preserve">
          <source>SeqView.takeRight()</source>
          <target state="translated">SeqView.takeRight()</target>
        </trans-unit>
        <trans-unit id="4d410e7aceeb3d72500d3a0907f383fd52f57ad8" translate="yes" xml:space="preserve">
          <source>SeqView.tapEach()</source>
          <target state="translated">SeqView.tapEach()</target>
        </trans-unit>
        <trans-unit id="222a2d5a4bc4e6654ae663c567c9a85a9ddb2f9c" translate="yes" xml:space="preserve">
          <source>SeqView.view()</source>
          <target state="translated">SeqView.view()</target>
        </trans-unit>
        <trans-unit id="07f97106a9956b28e329c8998a670d00f549a9ad" translate="yes" xml:space="preserve">
          <source>Sequential streams are directly converted to the target collection. If the target collection is lazy, the conversion is lazy as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aa3e5d8f3f92c80c20cb510b89b2dd14c9557e" translate="yes" xml:space="preserve">
          <source>SerialVersionUID</source>
          <target state="translated">SerialVersionUID</target>
        </trans-unit>
        <trans-unit id="474bdca721f69cc536fdda7818909c4ab663a1be" translate="yes" xml:space="preserve">
          <source>SerialVersionUID.scala</source>
          <target state="translated">SerialVersionUID.scala</target>
        </trans-unit>
        <trans-unit id="dc1f3c2690cec070768cf5dde8291f16c094e668" translate="yes" xml:space="preserve">
          <source>Serializable</source>
          <target state="translated">Serializable</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="8a371d8ca033264663abcf085b820a9068269995" translate="yes" xml:space="preserve">
          <source>Set the default error stream for the duration of execution of one thunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03114c5ce4c11f73daf5fc2b4053d1adbfcf3f83" translate="yes" xml:space="preserve">
          <source>Set the value of the variable while executing the specified thunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457776d6985cfb5e8388c12b69f3b57a8b638833" translate="yes" xml:space="preserve">
          <source>Set$</source>
          <target state="translated">Set$</target>
        </trans-unit>
        <trans-unit id="c4812e6d347c4153109e10a56742ad22c8c40dfc" translate="yes" xml:space="preserve">
          <source>Set$.Set1</source>
          <target state="translated">Set$.Set1</target>
        </trans-unit>
        <trans-unit id="80dc95404bda8f3ee7755be62254b298113dd0ce" translate="yes" xml:space="preserve">
          <source>Set$.Set1()</source>
          <target state="translated">Set$.Set1()</target>
        </trans-unit>
        <trans-unit id="0e0923de5b51c784bf1878369434ecaea25fae23" translate="yes" xml:space="preserve">
          <source>Set$.Set1.contains()</source>
          <target state="translated">Set$.Set1.contains()</target>
        </trans-unit>
        <trans-unit id="a2f64d2d418c84b18808a62c8483d239f7251b30" translate="yes" xml:space="preserve">
          <source>Set$.Set1.excl()</source>
          <target state="translated">Set$.Set1.excl()</target>
        </trans-unit>
        <trans-unit id="453392be309be4b4f4fd27871e3e07840eec647c" translate="yes" xml:space="preserve">
          <source>Set$.Set1.exists()</source>
          <target state="translated">Set$.Set1.exists()</target>
        </trans-unit>
        <trans-unit id="60d0e6a857652d269d2b34e8e6391e7c4035174e" translate="yes" xml:space="preserve">
          <source>Set$.Set1.find()</source>
          <target state="translated">Set$.Set1.find()</target>
        </trans-unit>
        <trans-unit id="5605e19184b5db5074711e99c5c42f16d0d023e9" translate="yes" xml:space="preserve">
          <source>Set$.Set1.forall()</source>
          <target state="translated">Set$.Set1.forall()</target>
        </trans-unit>
        <trans-unit id="f8670acc210daa8fec82854bf88de8e993aa6df5" translate="yes" xml:space="preserve">
          <source>Set$.Set1.foreach()</source>
          <target state="translated">Set$.Set1.foreach()</target>
        </trans-unit>
        <trans-unit id="782bb3b9d2587fe2e1b91385d3b041dcb09c473d" translate="yes" xml:space="preserve">
          <source>Set$.Set1.head()</source>
          <target state="translated">Set$.Set1.head()</target>
        </trans-unit>
        <trans-unit id="09eb2bdf941bec06611d2148b74dbb19c3e6bd61" translate="yes" xml:space="preserve">
          <source>Set$.Set1.incl()</source>
          <target state="translated">Set$.Set1.incl()</target>
        </trans-unit>
        <trans-unit id="8b153168c1bd2033a448d297acc7f256078c7c8a" translate="yes" xml:space="preserve">
          <source>Set$.Set1.isEmpty()</source>
          <target state="translated">Set$.Set1.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2974280f611284adefe3ad08e332ea7359f0a5ab" translate="yes" xml:space="preserve">
          <source>Set$.Set1.iterator()</source>
          <target state="translated">Set$.Set1.iterator()</target>
        </trans-unit>
        <trans-unit id="93b86637dbc94dd11d3b6d845144587deca94250" translate="yes" xml:space="preserve">
          <source>Set$.Set1.knownSize()</source>
          <target state="translated">Set$.Set1.knownSize()</target>
        </trans-unit>
        <trans-unit id="ad6b58d6ab6b408357b0eb34bf42736acb19b61f" translate="yes" xml:space="preserve">
          <source>Set$.Set1.size()</source>
          <target state="translated">Set$.Set1.size()</target>
        </trans-unit>
        <trans-unit id="42fc8f52d6ac5f099a2b6b4dce1cd1cc34f3a626" translate="yes" xml:space="preserve">
          <source>Set$.Set1.tail()</source>
          <target state="translated">Set$.Set1.tail()</target>
        </trans-unit>
        <trans-unit id="be7df0e4e6085227d17e09cc860741e0050f9664" translate="yes" xml:space="preserve">
          <source>Set$.Set2</source>
          <target state="translated">Set$.Set2</target>
        </trans-unit>
        <trans-unit id="659cc2dbb1622d20dfed4a99aa1f70d33e64fe6d" translate="yes" xml:space="preserve">
          <source>Set$.Set2()</source>
          <target state="translated">Set$.Set2()</target>
        </trans-unit>
        <trans-unit id="039b9552b3840b86979e57a84388c3f79fa0c740" translate="yes" xml:space="preserve">
          <source>Set$.Set2.contains()</source>
          <target state="translated">Set$.Set2.contains()</target>
        </trans-unit>
        <trans-unit id="bd5559c339fa15402881e3ce1bb10c893f8fddbb" translate="yes" xml:space="preserve">
          <source>Set$.Set2.excl()</source>
          <target state="translated">Set$.Set2.excl()</target>
        </trans-unit>
        <trans-unit id="fd4aabff812778e508d3e66e853df5e9e543bc42" translate="yes" xml:space="preserve">
          <source>Set$.Set2.exists()</source>
          <target state="translated">Set$.Set2.exists()</target>
        </trans-unit>
        <trans-unit id="84c56b0a0223cdd53ff0040d1dfbad7385ed970c" translate="yes" xml:space="preserve">
          <source>Set$.Set2.find()</source>
          <target state="translated">Set$.Set2.find()</target>
        </trans-unit>
        <trans-unit id="3751b32b15fca7352b2c7dd10922e9e4c9edfafd" translate="yes" xml:space="preserve">
          <source>Set$.Set2.forall()</source>
          <target state="translated">Set$.Set2.forall()</target>
        </trans-unit>
        <trans-unit id="9e5eb444200d6effd68e7a46d506fb4523eea155" translate="yes" xml:space="preserve">
          <source>Set$.Set2.foreach()</source>
          <target state="translated">Set$.Set2.foreach()</target>
        </trans-unit>
        <trans-unit id="649271e3836a4e9596c989ed3122913d02c5e265" translate="yes" xml:space="preserve">
          <source>Set$.Set2.head()</source>
          <target state="translated">Set$.Set2.head()</target>
        </trans-unit>
        <trans-unit id="b3e1c1f488aa6f429d9cf0df020af2d390dc8c2c" translate="yes" xml:space="preserve">
          <source>Set$.Set2.incl()</source>
          <target state="translated">Set$.Set2.incl()</target>
        </trans-unit>
        <trans-unit id="796fcf371f84331e5c098832c9fa79520f226df8" translate="yes" xml:space="preserve">
          <source>Set$.Set2.isEmpty()</source>
          <target state="translated">Set$.Set2.isEmpty()</target>
        </trans-unit>
        <trans-unit id="faa4503b6e0317f74bfaee88f47f0e54f0645f5d" translate="yes" xml:space="preserve">
          <source>Set$.Set2.iterator()</source>
          <target state="translated">Set$.Set2.iterator()</target>
        </trans-unit>
        <trans-unit id="938dafc8bed5f94ef6d8c21aed779c2b769e5ddc" translate="yes" xml:space="preserve">
          <source>Set$.Set2.knownSize()</source>
          <target state="translated">Set$.Set2.knownSize()</target>
        </trans-unit>
        <trans-unit id="533db1c8e09cc91e9173dad1a738d54056652fab" translate="yes" xml:space="preserve">
          <source>Set$.Set2.size()</source>
          <target state="translated">Set$.Set2.size()</target>
        </trans-unit>
        <trans-unit id="988a5fc813358988950a995842d577a8c6c5c553" translate="yes" xml:space="preserve">
          <source>Set$.Set2.tail()</source>
          <target state="translated">Set$.Set2.tail()</target>
        </trans-unit>
        <trans-unit id="b071f98aba0f9bbdcdecb3e23ca0d72c799b60f3" translate="yes" xml:space="preserve">
          <source>Set$.Set3</source>
          <target state="translated">Set$.Set3</target>
        </trans-unit>
        <trans-unit id="b23fb87c80f8f6ddb590f7ff23b4ef2d9871ad87" translate="yes" xml:space="preserve">
          <source>Set$.Set3()</source>
          <target state="translated">Set$.Set3()</target>
        </trans-unit>
        <trans-unit id="b94bdaa14346259d64572e4ffe41ef9a8e546ca9" translate="yes" xml:space="preserve">
          <source>Set$.Set3.contains()</source>
          <target state="translated">Set$.Set3.contains()</target>
        </trans-unit>
        <trans-unit id="4e87c0e51ef447c709b7011f92916a99fdee1d28" translate="yes" xml:space="preserve">
          <source>Set$.Set3.excl()</source>
          <target state="translated">Set$.Set3.excl()</target>
        </trans-unit>
        <trans-unit id="db4faa2bb3fd4f97b0e8658009a0b09e94826f2a" translate="yes" xml:space="preserve">
          <source>Set$.Set3.exists()</source>
          <target state="translated">Set$.Set3.exists()</target>
        </trans-unit>
        <trans-unit id="a00095988fb125b267c5cea06478ec5d5d9a0ed4" translate="yes" xml:space="preserve">
          <source>Set$.Set3.find()</source>
          <target state="translated">Set$.Set3.find()</target>
        </trans-unit>
        <trans-unit id="066dcebe28978d643896429e1edbb990b1f636ce" translate="yes" xml:space="preserve">
          <source>Set$.Set3.forall()</source>
          <target state="translated">Set$.Set3.forall()</target>
        </trans-unit>
        <trans-unit id="7d0c2ff3af8a816311ede7327fe723c9d5b29438" translate="yes" xml:space="preserve">
          <source>Set$.Set3.foreach()</source>
          <target state="translated">Set$.Set3.foreach()</target>
        </trans-unit>
        <trans-unit id="b65bcf798b003dc7569d8bf9f782f94e17135943" translate="yes" xml:space="preserve">
          <source>Set$.Set3.head()</source>
          <target state="translated">Set$.Set3.head()</target>
        </trans-unit>
        <trans-unit id="8869a21c42c9f68c471934351c6cc830f07d47cf" translate="yes" xml:space="preserve">
          <source>Set$.Set3.incl()</source>
          <target state="translated">Set$.Set3.incl()</target>
        </trans-unit>
        <trans-unit id="892c25109a359e94402c96fca703a857eff31fcb" translate="yes" xml:space="preserve">
          <source>Set$.Set3.isEmpty()</source>
          <target state="translated">Set$.Set3.isEmpty()</target>
        </trans-unit>
        <trans-unit id="032d4233d5b093a7b76ff6e8ea03400ae7192512" translate="yes" xml:space="preserve">
          <source>Set$.Set3.iterator()</source>
          <target state="translated">Set$.Set3.iterator()</target>
        </trans-unit>
        <trans-unit id="7e68058c221ddfa1f5eac08e3cd4403f1c00965d" translate="yes" xml:space="preserve">
          <source>Set$.Set3.knownSize()</source>
          <target state="translated">Set$.Set3.knownSize()</target>
        </trans-unit>
        <trans-unit id="b211756faff88ec752349d260fdc8f3f443978fc" translate="yes" xml:space="preserve">
          <source>Set$.Set3.size()</source>
          <target state="translated">Set$.Set3.size()</target>
        </trans-unit>
        <trans-unit id="c5adcb972cc0da7e389dd7eb03cb5806fe7ff7fc" translate="yes" xml:space="preserve">
          <source>Set$.Set3.tail()</source>
          <target state="translated">Set$.Set3.tail()</target>
        </trans-unit>
        <trans-unit id="b731b4f7461449d0d01e27e3b75154318b2aa9dc" translate="yes" xml:space="preserve">
          <source>Set$.Set4</source>
          <target state="translated">Set$.Set4</target>
        </trans-unit>
        <trans-unit id="38e55829d4c47861b9cb1ccdc547baa9477a0e9b" translate="yes" xml:space="preserve">
          <source>Set$.Set4()</source>
          <target state="translated">Set$.Set4()</target>
        </trans-unit>
        <trans-unit id="4b109dc297708efdf62b0710eea344feb5189070" translate="yes" xml:space="preserve">
          <source>Set$.Set4.contains()</source>
          <target state="translated">Set$.Set4.contains()</target>
        </trans-unit>
        <trans-unit id="16c422239a1c9e2a57163ae8e0f9e703bef8bf55" translate="yes" xml:space="preserve">
          <source>Set$.Set4.excl()</source>
          <target state="translated">Set$.Set4.excl()</target>
        </trans-unit>
        <trans-unit id="eaf31b06cd92a430ff3c4399e0ccae5dd860ce23" translate="yes" xml:space="preserve">
          <source>Set$.Set4.exists()</source>
          <target state="translated">Set$.Set4.exists()</target>
        </trans-unit>
        <trans-unit id="61c064797fec0e0b288ff3c236f96e98b92fa7ff" translate="yes" xml:space="preserve">
          <source>Set$.Set4.find()</source>
          <target state="translated">Set$.Set4.find()</target>
        </trans-unit>
        <trans-unit id="ec2bfef41c66f738b8a88f8305b52f125e6009a6" translate="yes" xml:space="preserve">
          <source>Set$.Set4.forall()</source>
          <target state="translated">Set$.Set4.forall()</target>
        </trans-unit>
        <trans-unit id="45a99367c9eac0a5186086e2ec2f8468e4b197d6" translate="yes" xml:space="preserve">
          <source>Set$.Set4.foreach()</source>
          <target state="translated">Set$.Set4.foreach()</target>
        </trans-unit>
        <trans-unit id="cf0bf541240cae831681dd740f3c8eded4501b0a" translate="yes" xml:space="preserve">
          <source>Set$.Set4.head()</source>
          <target state="translated">Set$.Set4.head()</target>
        </trans-unit>
        <trans-unit id="b079b44c2d0210e3c471fa506824e5c00b4b8a58" translate="yes" xml:space="preserve">
          <source>Set$.Set4.incl()</source>
          <target state="translated">Set$.Set4.incl()</target>
        </trans-unit>
        <trans-unit id="7241d836006256dfe1b615695e507415220263d1" translate="yes" xml:space="preserve">
          <source>Set$.Set4.isEmpty()</source>
          <target state="translated">Set$.Set4.isEmpty()</target>
        </trans-unit>
        <trans-unit id="4efd5586da199369889fc2d3837db61f02b293c2" translate="yes" xml:space="preserve">
          <source>Set$.Set4.iterator()</source>
          <target state="translated">Set$.Set4.iterator()</target>
        </trans-unit>
        <trans-unit id="1881bebb6b7a7d7d0cc637845bba0581292ca843" translate="yes" xml:space="preserve">
          <source>Set$.Set4.knownSize()</source>
          <target state="translated">Set$.Set4.knownSize()</target>
        </trans-unit>
        <trans-unit id="5e5651874e0c7e2592393a77a349f7d18ae4fca4" translate="yes" xml:space="preserve">
          <source>Set$.Set4.size()</source>
          <target state="translated">Set$.Set4.size()</target>
        </trans-unit>
        <trans-unit id="5568c918f96d85e807aa931a74e77c9bced73a31" translate="yes" xml:space="preserve">
          <source>Set$.Set4.tail()</source>
          <target state="translated">Set$.Set4.tail()</target>
        </trans-unit>
        <trans-unit id="7d9b9aa6967ae9737d289de3e138608a6e367226" translate="yes" xml:space="preserve">
          <source>Set$.empty()</source>
          <target state="translated">Set$.empty()</target>
        </trans-unit>
        <trans-unit id="ae11a68572201bd2aab980a7f29095c9aba2e688" translate="yes" xml:space="preserve">
          <source>Set$.from()</source>
          <target state="translated">Set$.from()</target>
        </trans-unit>
        <trans-unit id="d2fdd284c7c315380ad1f2b35a7f657b66ab5c83" translate="yes" xml:space="preserve">
          <source>Set$.newBuilder()</source>
          <target state="translated">Set$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="8d3c4e184546f7600b62f5412e95ffd47dd68e93" translate="yes" xml:space="preserve">
          <source>Set.&amp;amp;()</source>
          <target state="translated">Set.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="6058906a18b024a1e85783e64204646abf033b7c" translate="yes" xml:space="preserve">
          <source>Set.&amp;amp;~()</source>
          <target state="translated">Set.&amp;amp;~()</target>
        </trans-unit>
        <trans-unit id="023fcd3cfb51277d075b84b107709e7310eb838a" translate="yes" xml:space="preserve">
          <source>Set.+()</source>
          <target state="translated">Set.+()</target>
        </trans-unit>
        <trans-unit id="b4d926024813b016ec8d0d4734cb6728ee1026aa" translate="yes" xml:space="preserve">
          <source>Set.++()</source>
          <target state="translated">Set.++()</target>
        </trans-unit>
        <trans-unit id="4c7874e5856fc3ab4aebfd81f8888ceae99efa96" translate="yes" xml:space="preserve">
          <source>Set.-()</source>
          <target state="translated">Set.-()</target>
        </trans-unit>
        <trans-unit id="64575e1ba191513cd7f18aaad2e739a1524d2f53" translate="yes" xml:space="preserve">
          <source>Set.--()</source>
          <target state="translated">Set.--()</target>
        </trans-unit>
        <trans-unit id="a066e601db6ccf55d9c2038c7afa6d56d6a9e731" translate="yes" xml:space="preserve">
          <source>Set.add()</source>
          <target state="translated">Set.add()</target>
        </trans-unit>
        <trans-unit id="bf6837ef24967125700bde9cbbd666e30967f64c" translate="yes" xml:space="preserve">
          <source>Set.apply()</source>
          <target state="translated">Set.apply()</target>
        </trans-unit>
        <trans-unit id="78dab33db1494a88d3584e04f094de2730ca6bfe" translate="yes" xml:space="preserve">
          <source>Set.canEqual()</source>
          <target state="translated">Set.canEqual()</target>
        </trans-unit>
        <trans-unit id="eee6e992c3499d711cabc92c21312fccf1683a0e" translate="yes" xml:space="preserve">
          <source>Set.clone()</source>
          <target state="translated">Set.clone()</target>
        </trans-unit>
        <trans-unit id="b934e5a07d5b038ff912c3edadb1d229fec53a95" translate="yes" xml:space="preserve">
          <source>Set.concat()</source>
          <target state="translated">Set.concat()</target>
        </trans-unit>
        <trans-unit id="b4ff915182f4e2a8f6458fad6adb0c1c38fe4c3b" translate="yes" xml:space="preserve">
          <source>Set.contains()</source>
          <target state="translated">Set.contains()</target>
        </trans-unit>
        <trans-unit id="d05d86b772227990e8981925a822a08ce864c4b4" translate="yes" xml:space="preserve">
          <source>Set.diff()</source>
          <target state="translated">Set.diff()</target>
        </trans-unit>
        <trans-unit id="25c71b008bfad0d0ebbd00953d10a4484e895ef3" translate="yes" xml:space="preserve">
          <source>Set.equals()</source>
          <target state="translated">Set.equals()</target>
        </trans-unit>
        <trans-unit id="323f56a4e8f9bba39d12631492527cc7dd56a632" translate="yes" xml:space="preserve">
          <source>Set.excl()</source>
          <target state="translated">Set.excl()</target>
        </trans-unit>
        <trans-unit id="04f9dae2a7d6319ed2a25455444886a4fd3fbeb9" translate="yes" xml:space="preserve">
          <source>Set.filterInPlace()</source>
          <target state="translated">Set.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="6606dcef0dadb726cbe54363834707761765c29d" translate="yes" xml:space="preserve">
          <source>Set.hashCode()</source>
          <target state="translated">Set.hashCode()</target>
        </trans-unit>
        <trans-unit id="44a8959d11e2c5af65b73ca0e7285f920039e1ad" translate="yes" xml:space="preserve">
          <source>Set.incl()</source>
          <target state="translated">Set.incl()</target>
        </trans-unit>
        <trans-unit id="616d91ff2eaa80d31a2c5208ea9140a74edc7daf" translate="yes" xml:space="preserve">
          <source>Set.intersect()</source>
          <target state="translated">Set.intersect()</target>
        </trans-unit>
        <trans-unit id="afdc5ea75755dd57264818b174b0e20157ec851d" translate="yes" xml:space="preserve">
          <source>Set.iterableFactory()</source>
          <target state="translated">Set.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="5e4b1f5771e702d3b09793e91d19c62342cd5eae" translate="yes" xml:space="preserve">
          <source>Set.knownSize()</source>
          <target state="translated">Set.knownSize()</target>
        </trans-unit>
        <trans-unit id="6f639deb16af3bfb9c6015d9c61b66db08c94f2b" translate="yes" xml:space="preserve">
          <source>Set.remove()</source>
          <target state="translated">Set.remove()</target>
        </trans-unit>
        <trans-unit id="ce6b8ae86ce9d0ac2361e43c960ff6cde431a5a4" translate="yes" xml:space="preserve">
          <source>Set.removedAll()</source>
          <target state="translated">Set.removedAll()</target>
        </trans-unit>
        <trans-unit id="8e3ee703571a8f6871fd2bfafd19dcce1398d84a" translate="yes" xml:space="preserve">
          <source>Set.result()</source>
          <target state="translated">Set.result()</target>
        </trans-unit>
        <trans-unit id="5652b1411330af85e6b2399297ea2c9af5c567e7" translate="yes" xml:space="preserve">
          <source>Set.scala</source>
          <target state="translated">Set.scala</target>
        </trans-unit>
        <trans-unit id="46401b782b1c20c7a2c2d32e4b5f7f645dcc5980" translate="yes" xml:space="preserve">
          <source>Set.stringPrefix()</source>
          <target state="translated">Set.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="f36fba9b33d089655a05a7714952d2a55fc14d51" translate="yes" xml:space="preserve">
          <source>Set.subsetOf()</source>
          <target state="translated">Set.subsetOf()</target>
        </trans-unit>
        <trans-unit id="c26dcc7298eb009cfe7831f76bee5269d78ee2e3" translate="yes" xml:space="preserve">
          <source>Set.subsets()</source>
          <target state="translated">Set.subsets()</target>
        </trans-unit>
        <trans-unit id="af3be0992df0b946831097eb42bda57482617e5c" translate="yes" xml:space="preserve">
          <source>Set.toString()</source>
          <target state="translated">Set.toString()</target>
        </trans-unit>
        <trans-unit id="01e7b61fcaa901f14bebe7f669119817b274f8cb" translate="yes" xml:space="preserve">
          <source>Set.union()</source>
          <target state="translated">Set.union()</target>
        </trans-unit>
        <trans-unit id="8905e7d459e8e7dd13220dabe885f9f816194fb7" translate="yes" xml:space="preserve">
          <source>Set.update()</source>
          <target state="translated">Set.update()</target>
        </trans-unit>
        <trans-unit id="d81cd51aa5ea24d67264951e311629fdb7eb76f4" translate="yes" xml:space="preserve">
          <source>Set.|()</source>
          <target state="translated">Set.|()</target>
        </trans-unit>
        <trans-unit id="b23b247ce8b61b572c5089274e8dd6de3b30a6e4" translate="yes" xml:space="preserve">
          <source>SetOps</source>
          <target state="translated">SetOps</target>
        </trans-unit>
        <trans-unit id="c238af6867c62a69bb8bb699f85a1de26003c62a" translate="yes" xml:space="preserve">
          <source>SetOps.&amp;amp;()</source>
          <target state="translated">SetOps.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="206b65ebba71622e1c3f7054c0c0088e646d1f84" translate="yes" xml:space="preserve">
          <source>SetOps.&amp;amp;~()</source>
          <target state="translated">SetOps.&amp;amp;~()</target>
        </trans-unit>
        <trans-unit id="baf6ee0695082bd056614d5d95a3c0bb9043fc66" translate="yes" xml:space="preserve">
          <source>SetOps.+()</source>
          <target state="translated">SetOps.+()</target>
        </trans-unit>
        <trans-unit id="6863410088542a626c0fb4fb783e876703f01824" translate="yes" xml:space="preserve">
          <source>SetOps.++()</source>
          <target state="translated">SetOps.++()</target>
        </trans-unit>
        <trans-unit id="8cfa3c9fe4a0d94fdaa539c531c9ef965d8539b3" translate="yes" xml:space="preserve">
          <source>SetOps.-()</source>
          <target state="translated">SetOps.-()</target>
        </trans-unit>
        <trans-unit id="1d71d9c40515765b5bea9313f0ea3146b3a6a07b" translate="yes" xml:space="preserve">
          <source>SetOps.--()</source>
          <target state="translated">SetOps.--()</target>
        </trans-unit>
        <trans-unit id="2e575545e0c6fa1a256355930991059f28076537" translate="yes" xml:space="preserve">
          <source>SetOps.add()</source>
          <target state="translated">SetOps.add()</target>
        </trans-unit>
        <trans-unit id="5022704f6fae08738678938c8482a2ab4d6efbff" translate="yes" xml:space="preserve">
          <source>SetOps.apply()</source>
          <target state="translated">SetOps.apply()</target>
        </trans-unit>
        <trans-unit id="a6ff1a526b37149ce0f8239d1a45a7fb83e62d70" translate="yes" xml:space="preserve">
          <source>SetOps.clone()</source>
          <target state="translated">SetOps.clone()</target>
        </trans-unit>
        <trans-unit id="bf82c8faa351eacd040285c639c7aaccc0a69d1f" translate="yes" xml:space="preserve">
          <source>SetOps.concat()</source>
          <target state="translated">SetOps.concat()</target>
        </trans-unit>
        <trans-unit id="d75d6e25907dd41fc5c018bf89a55f40b471f3d2" translate="yes" xml:space="preserve">
          <source>SetOps.contains()</source>
          <target state="translated">SetOps.contains()</target>
        </trans-unit>
        <trans-unit id="ea994d9070b6619d6baa10215337139a8d020050" translate="yes" xml:space="preserve">
          <source>SetOps.diff()</source>
          <target state="translated">SetOps.diff()</target>
        </trans-unit>
        <trans-unit id="c8e2cea134a16f8001a89b99f34981efbadaafb3" translate="yes" xml:space="preserve">
          <source>SetOps.excl()</source>
          <target state="translated">SetOps.excl()</target>
        </trans-unit>
        <trans-unit id="50d34813e8e6a90326a5513c971f561eb647ba26" translate="yes" xml:space="preserve">
          <source>SetOps.filterInPlace()</source>
          <target state="translated">SetOps.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="2fb046572ce458f40e8d9ed2fa14085d8e0beacd" translate="yes" xml:space="preserve">
          <source>SetOps.incl()</source>
          <target state="translated">SetOps.incl()</target>
        </trans-unit>
        <trans-unit id="d4e6e2e746ccbc289ab6f3f4a60b9864ea7edaa9" translate="yes" xml:space="preserve">
          <source>SetOps.intersect()</source>
          <target state="translated">SetOps.intersect()</target>
        </trans-unit>
        <trans-unit id="8502e853e82684226b718373248e006eb85aedbe" translate="yes" xml:space="preserve">
          <source>SetOps.knownSize()</source>
          <target state="translated">SetOps.knownSize()</target>
        </trans-unit>
        <trans-unit id="f4eb95fc11a5d3766fc3b4af6a7d30eb23ce2ad6" translate="yes" xml:space="preserve">
          <source>SetOps.remove()</source>
          <target state="translated">SetOps.remove()</target>
        </trans-unit>
        <trans-unit id="f07eb1893429000e29d4f60069cd95df97e0ec16" translate="yes" xml:space="preserve">
          <source>SetOps.removedAll()</source>
          <target state="translated">SetOps.removedAll()</target>
        </trans-unit>
        <trans-unit id="37df671c8db63e597213bd2a307ea894e8aaf0da" translate="yes" xml:space="preserve">
          <source>SetOps.result()</source>
          <target state="translated">SetOps.result()</target>
        </trans-unit>
        <trans-unit id="489775e12de7a069272b6a219dd321170ac27fb8" translate="yes" xml:space="preserve">
          <source>SetOps.subsetOf()</source>
          <target state="translated">SetOps.subsetOf()</target>
        </trans-unit>
        <trans-unit id="172429308022ff40d4abc63b19e2f07d52e7bdc9" translate="yes" xml:space="preserve">
          <source>SetOps.subsets()</source>
          <target state="translated">SetOps.subsets()</target>
        </trans-unit>
        <trans-unit id="908fdf15646492baceb0f22d7ed6e553421f25c3" translate="yes" xml:space="preserve">
          <source>SetOps.union()</source>
          <target state="translated">SetOps.union()</target>
        </trans-unit>
        <trans-unit id="02ffedbc3e97dc3c371208d831f8fd7664f964e6" translate="yes" xml:space="preserve">
          <source>SetOps.update()</source>
          <target state="translated">SetOps.update()</target>
        </trans-unit>
        <trans-unit id="d5a1f6ac3443884ac03062d78b9c7bacd28ef8c3" translate="yes" xml:space="preserve">
          <source>SetOps.|()</source>
          <target state="translated">SetOps.|()</target>
        </trans-unit>
        <trans-unit id="9466515bd7d92fc1e77b671358f6449f44103881" translate="yes" xml:space="preserve">
          <source>Sets the default error stream for the duration of execution of one thunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f9e3834141f8ebbd7c02c40e4e5c7ea1fdd089" translate="yes" xml:space="preserve">
          <source>Sets the default input stream for the duration of execution of one thunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c3496f19e381725e12965c761e1115af261c0c" translate="yes" xml:space="preserve">
          <source>Sets the default output stream for the duration of execution of one thunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89837502280e0a9b92af952a3af2a124705d7452" translate="yes" xml:space="preserve">
          <source>Sets the length of the character sequence. If the current sequence is shorter than the given length, it is padded with nulls; if it is longer, it is truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c292a04e97782cf0a9d84b33075d3ada26e1d1d" translate="yes" xml:space="preserve">
          <source>Sets the property with a value of the represented type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9010ad4d32bc7f33efc09918a1ee125e902799" translate="yes" xml:space="preserve">
          <source>Sets the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1310bd28426d05b76304a045c09f1ad2d0b7671d" translate="yes" xml:space="preserve">
          <source>Shadowed Implicit Value Members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7331278fb5718617e233df649e90ba9b72bfb49e" translate="yes" xml:space="preserve">
          <source>Shadowing</source>
          <target state="translated">Shadowing</target>
        </trans-unit>
        <trans-unit id="0fe7d82f25a3015040a206e54f9c1d3a9717c4c4" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="translated">Short</target>
        </trans-unit>
        <trans-unit id="64a7cea2e23ea5b8209b40f5779f7f7b3c4c25ad" translate="yes" xml:space="preserve">
          <source>Short &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dc2da01bd13113145318d6bd7f98091f917b22" translate="yes" xml:space="preserve">
          <source>Short &amp;rarr; Comparable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78d8d34a7cabf0f24c618129133f311fb37e026" translate="yes" xml:space="preserve">
          <source>Short &amp;rarr; Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb9c28f6b9e183c9001b50839c87e6840be9d82" translate="yes" xml:space="preserve">
          <source>Short$</source>
          <target state="translated">Short$</target>
        </trans-unit>
        <trans-unit id="1f88988388c2343bf2a17810c19bd73ab17a18b7" translate="yes" xml:space="preserve">
          <source>Short$.MaxValue()</source>
          <target state="translated">Short$.MaxValue()</target>
        </trans-unit>
        <trans-unit id="f2fb48bcedd1e9cd851b4df2c2bd3449cb91f333" translate="yes" xml:space="preserve">
          <source>Short$.MinValue()</source>
          <target state="translated">Short$.MinValue()</target>
        </trans-unit>
        <trans-unit id="3a2dc510147f6d8ff46a2ca95af2551f6f45858b" translate="yes" xml:space="preserve">
          <source>Short$.box()</source>
          <target state="translated">Short$.box()</target>
        </trans-unit>
        <trans-unit id="f06f11e6e4a38810a79dcf834ad7015032404830" translate="yes" xml:space="preserve">
          <source>Short$.short2double()</source>
          <target state="translated">Short$.short2double()</target>
        </trans-unit>
        <trans-unit id="a2ece59d4bdf8eb0dca86f768f30f02ed905fae0" translate="yes" xml:space="preserve">
          <source>Short$.short2float()</source>
          <target state="translated">Short$.short2float()</target>
        </trans-unit>
        <trans-unit id="9988fd91f1c305c7cced302074d611bb18db5655" translate="yes" xml:space="preserve">
          <source>Short$.short2int()</source>
          <target state="translated">Short$.short2int()</target>
        </trans-unit>
        <trans-unit id="b2a277fb4c0312f48b5ad1b25f6331d5352e4fa2" translate="yes" xml:space="preserve">
          <source>Short$.short2long()</source>
          <target state="translated">Short$.short2long()</target>
        </trans-unit>
        <trans-unit id="ab80bed43840ce73904e0f226a31216bba6cdcc8" translate="yes" xml:space="preserve">
          <source>Short$.toString()</source>
          <target state="translated">Short$.toString()</target>
        </trans-unit>
        <trans-unit id="b87c258650ac3c610e0c06616cb6187ec9d4ac54" translate="yes" xml:space="preserve">
          <source>Short$.unbox()</source>
          <target state="translated">Short$.unbox()</target>
        </trans-unit>
        <trans-unit id="fb95edd84bf2b967c6f826eebc4e60d58d53b71c" translate="yes" xml:space="preserve">
          <source>Short.!=()</source>
          <target state="translated">Short.!=()</target>
        </trans-unit>
        <trans-unit id="f8737cbc3bf5fc19c072d15c9144c23d29ecedff" translate="yes" xml:space="preserve">
          <source>Short.%()</source>
          <target state="translated">Short.%()</target>
        </trans-unit>
        <trans-unit id="8d9786ee631642ff477490cee0910e3abd76a546" translate="yes" xml:space="preserve">
          <source>Short.&amp;amp;()</source>
          <target state="translated">Short.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="87886c3a9172e81cc521ec79d17b09ae8ecf498a" translate="yes" xml:space="preserve">
          <source>Short.&amp;gt;()</source>
          <target state="translated">Short.&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="630ca5d337b43ba863b65046f881ddc1c36fa44a" translate="yes" xml:space="preserve">
          <source>Short.&amp;gt;=()</source>
          <target state="translated">Short.&amp;gt;=()</target>
        </trans-unit>
        <trans-unit id="eef8147ab8bd27a87447e8719a8373e282c84b53" translate="yes" xml:space="preserve">
          <source>Short.&amp;lt;()</source>
          <target state="translated">Short.&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="78a2cde8fd63200e23919e391d84a4e2033d65ef" translate="yes" xml:space="preserve">
          <source>Short.&amp;lt;=()</source>
          <target state="translated">Short.&amp;lt;=()</target>
        </trans-unit>
        <trans-unit id="eddaa68912b2638078957c96101265970e768f0b" translate="yes" xml:space="preserve">
          <source>Short.*()</source>
          <target state="translated">Short.*()</target>
        </trans-unit>
        <trans-unit id="1ef35d8f8ef8d1ae25be8e852196a5e8756a7c37" translate="yes" xml:space="preserve">
          <source>Short.-()</source>
          <target state="translated">Short.-()</target>
        </trans-unit>
        <trans-unit id="34af6e56010db744687a1353e19af0972f5a1f10" translate="yes" xml:space="preserve">
          <source>Short./()</source>
          <target state="translated">Short./()</target>
        </trans-unit>
        <trans-unit id="fdcd45106cb6e3fdd71c8057dd3ea647d8c3eff0" translate="yes" xml:space="preserve">
          <source>Short.==()</source>
          <target state="translated">Short.==()</target>
        </trans-unit>
        <trans-unit id="75e4a14f4560e141dea9991e16c6b8c560ef9ca6" translate="yes" xml:space="preserve">
          <source>Short.@deprecated()</source>
          <target state="translated">Short.@deprecated()</target>
        </trans-unit>
        <trans-unit id="467c4e002d92e109236958650ab28b5d2b16af09" translate="yes" xml:space="preserve">
          <source>Short.^()</source>
          <target state="translated">Short.^()</target>
        </trans-unit>
        <trans-unit id="6b17dc3dd794131da2f56e30cc1bc97f2a38bf51" translate="yes" xml:space="preserve">
          <source>Short.getClass()</source>
          <target state="translated">Short.getClass()</target>
        </trans-unit>
        <trans-unit id="14a2c2637fe53a2b9543f329c0c6b46a037620fa" translate="yes" xml:space="preserve">
          <source>Short.scala</source>
          <target state="translated">Short.scala</target>
        </trans-unit>
        <trans-unit id="f1b912889bd92032e0a173e307decab3d230f29a" translate="yes" xml:space="preserve">
          <source>Short.toByte()</source>
          <target state="translated">Short.toByte()</target>
        </trans-unit>
        <trans-unit id="4cdd16251cb6fec7e071bc1a11d906748282b47f" translate="yes" xml:space="preserve">
          <source>Short.toChar()</source>
          <target state="translated">Short.toChar()</target>
        </trans-unit>
        <trans-unit id="528ce0e715b001b1c7b3e975edd5a3dc5baf4265" translate="yes" xml:space="preserve">
          <source>Short.toDouble()</source>
          <target state="translated">Short.toDouble()</target>
        </trans-unit>
        <trans-unit id="3315d76731f077b370dbe042a05a05aba6278d73" translate="yes" xml:space="preserve">
          <source>Short.toFloat()</source>
          <target state="translated">Short.toFloat()</target>
        </trans-unit>
        <trans-unit id="a94ea5f8388ce22f757102b16a2c4bfe825cce02" translate="yes" xml:space="preserve">
          <source>Short.toInt()</source>
          <target state="translated">Short.toInt()</target>
        </trans-unit>
        <trans-unit id="84da027925f0d93d0fcfce37d0bbfeabe6ac4793" translate="yes" xml:space="preserve">
          <source>Short.toLong()</source>
          <target state="translated">Short.toLong()</target>
        </trans-unit>
        <trans-unit id="7cc7ef3320ca6a4f09721837c4f809b043f5f9a5" translate="yes" xml:space="preserve">
          <source>Short.toShort()</source>
          <target state="translated">Short.toShort()</target>
        </trans-unit>
        <trans-unit id="80226cbd60bbfe4960f30072115a98265a784f9b" translate="yes" xml:space="preserve">
          <source>Short.unary_+()</source>
          <target state="translated">Short.unary_+()</target>
        </trans-unit>
        <trans-unit id="d67a4b5cbed959562eebce914373110dcb443f6d" translate="yes" xml:space="preserve">
          <source>Short.unary_-()</source>
          <target state="translated">Short.unary_-()</target>
        </trans-unit>
        <trans-unit id="91e836b1718b9d1721b83e7e240bbf044f39843a" translate="yes" xml:space="preserve">
          <source>Short.unary_~()</source>
          <target state="translated">Short.unary_~()</target>
        </trans-unit>
        <trans-unit id="9a4e46b2f4dcf55eb2222d4fb623db7de8d5fff8" translate="yes" xml:space="preserve">
          <source>Short.|()</source>
          <target state="translated">Short.|()</target>
        </trans-unit>
        <trans-unit id="e714161728723ba5a3e24f88657f54db922211b2" translate="yes" xml:space="preserve">
          <source>ShortIsIntegral</source>
          <target state="translated">ShortIsIntegral</target>
        </trans-unit>
        <trans-unit id="65b6302b5ce1dec44fce734f6cc8747e1523e4e0" translate="yes" xml:space="preserve">
          <source>Should only be called after all known non-primitive types have been excluded. This method won't dispatch anywhere else after checking against the primitives to avoid infinite recursion between equals and this on unknown &quot;Number&quot; variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d040f6b73d4170b5e05978a59b4964e87e95e4" translate="yes" xml:space="preserve">
          <source>Should result in the following being printed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2914171d5daa77a446603a176bc674e01be56899" translate="yes" xml:space="preserve">
          <source>Shrinkable</source>
          <target state="translated">Shrinkable</target>
        </trans-unit>
        <trans-unit id="50c0ea0be50ee8c140aec3c4d1f4787d335bc9b7" translate="yes" xml:space="preserve">
          <source>Shrinkable.--=()</source>
          <target state="translated">Shrinkable.--=()</target>
        </trans-unit>
        <trans-unit id="482e20088fba0165a633205747fcdda84b79261f" translate="yes" xml:space="preserve">
          <source>Shrinkable.-=()</source>
          <target state="translated">Shrinkable.-=()</target>
        </trans-unit>
        <trans-unit id="45f1f39ea88fa4f2ce3e9918d184524f056b84de" translate="yes" xml:space="preserve">
          <source>Shrinkable.scala</source>
          <target state="translated">Shrinkable.scala</target>
        </trans-unit>
        <trans-unit id="fe6e51186c1869f65a9535e6979e94bedd3e54d0" translate="yes" xml:space="preserve">
          <source>Shrinkable.subtractAll()</source>
          <target state="translated">Shrinkable.subtractAll()</target>
        </trans-unit>
        <trans-unit id="36b142f6ad81749a36ff92102accf7cb0e520f99" translate="yes" xml:space="preserve">
          <source>Shrinkable.subtractOne()</source>
          <target state="translated">Shrinkable.subtractOne()</target>
        </trans-unit>
        <trans-unit id="ddcaf6be9b6cb3ecbd3e18a00081be4440056f20" translate="yes" xml:space="preserve">
          <source>ShutdownHookThread</source>
          <target state="translated">ShutdownHookThread</target>
        </trans-unit>
        <trans-unit id="ef322443ab5937aca7612d2de11fac5f230a87bb" translate="yes" xml:space="preserve">
          <source>ShutdownHookThread$</source>
          <target state="translated">ShutdownHookThread$</target>
        </trans-unit>
        <trans-unit id="53d33bb8e5f0f988d0fe4faec8246319699b491c" translate="yes" xml:space="preserve">
          <source>ShutdownHookThread$.apply()</source>
          <target state="translated">ShutdownHookThread$.apply()</target>
        </trans-unit>
        <trans-unit id="b8f78aa6469943ee08bc3f6cfc962ea3161c2744" translate="yes" xml:space="preserve">
          <source>ShutdownHookThread.remove()</source>
          <target state="translated">ShutdownHookThread.remove()</target>
        </trans-unit>
        <trans-unit id="65c7b982959675d24f99f01905cb289b75c2b1df" translate="yes" xml:space="preserve">
          <source>ShutdownHookThread.scala</source>
          <target state="translated">ShutdownHookThread.scala</target>
        </trans-unit>
        <trans-unit id="8328a68c232c2fe81780c531a08db4ee562fd11c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;fromIterable&lt;/code&gt;, but returns a Map collection type. Note that the return type is now &lt;code&gt;CC[K2, V2]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738096d7fe63edafafe0009bd977db5c8dbf0bc5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;mapFromIterable&lt;/code&gt;, but returns a SortedMap collection type. Note that the return type is now &lt;code&gt;CC[K2, V2]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbf8b121029913078f0f6e80b417da04a579d05" translate="yes" xml:space="preserve">
          <source>Simple version of &lt;code&gt;Future.traverse&lt;/code&gt;. Asynchronously and non-blockingly transforms, in essence, a &lt;code&gt;IterableOnce[Future[A]]&lt;/code&gt; into a &lt;code&gt;Future[IterableOnce[A]]&lt;/code&gt;. Useful for reducing many &lt;code&gt;Future&lt;/code&gt;s into a single &lt;code&gt;Future&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58ebc7058b8d00772e4de5897fb102aeec10772" translate="yes" xml:space="preserve">
          <source>Simpler abstractions are available, however. The components of this package that handle I/O are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="f09f091369f01cd8e396f7ce8557e3f22fe089b4" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Either&lt;/code&gt; defines the methods &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;flatMap&lt;/code&gt;, it can also be used in for comprehensions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dc7a331937883b687da3294968ab4bc4aed31a" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;for&lt;/code&gt; comprehensions use &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;flatMap&lt;/code&gt;, the types of function parameters used in the expression must be inferred. These types are constrained by the &lt;code&gt;Either&lt;/code&gt; values. In particular, because of right-biasing, &lt;code&gt;Left&lt;/code&gt; values may require an explicit type argument for type parameter &lt;code&gt;B&lt;/code&gt;, the right value. Otherwise, it might be inferred as &lt;code&gt;Nothing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b5abeba446e33cbaf79d19367872d07a2edef5" translate="yes" xml:space="preserve">
          <source>Since JDK 1.7, a similar effect can be achieved with &lt;code&gt;class Ex extends Throwable(..., writableStackTrace = false)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8206405c68beafc385ab4e121e074c82510c5dd3" translate="yes" xml:space="preserve">
          <source>Since escapes are not processed in multi-line string literals, using triple quotes avoids having to escape the backslash character, so that &lt;code&gt;&quot;\\d&quot;&lt;/code&gt; can be written &lt;code&gt;&quot;&quot;&quot;\d&quot;&quot;&quot;&lt;/code&gt;. The same result is achieved with certain interpolators, such as &lt;code&gt;raw&quot;\d&quot;.r&lt;/code&gt; or a custom interpolator &lt;code&gt;r&quot;\d&quot;&lt;/code&gt; that also compiles the &lt;code&gt;Regex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30527381af8786fa239e0933d8e6d32039f69d5e" translate="yes" xml:space="preserve">
          <source>Since this method executes asynchronously and does not produce a return value, any non-fatal exceptions thrown will be reported to the &lt;code&gt;ExecutionContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39892ce8d343b16aa782fc0cc427d7c5ce4bcd1d" translate="yes" xml:space="preserve">
          <source>Singleton</source>
          <target state="translated">Singleton</target>
        </trans-unit>
        <trans-unit id="e53e8d5300c878019a997d4cfb7201c7ed2ee003" translate="yes" xml:space="preserve">
          <source>Sink</source>
          <target state="translated">Sink</target>
        </trans-unit>
        <trans-unit id="7cf54aea2db36f338c02b17214603422fb9a1771" translate="yes" xml:space="preserve">
          <source>Size of the accumulated collection, as a &lt;code&gt;Long&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f831cb3d4ae7e8a2275a17269e1c0719d54638a0" translate="yes" xml:space="preserve">
          <source>SoftReference</source>
          <target state="translated">SoftReference</target>
        </trans-unit>
        <trans-unit id="3cb3fefff93939affb3b4940c2d487270969ff3e" translate="yes" xml:space="preserve">
          <source>SoftReference$</source>
          <target state="translated">SoftReference$</target>
        </trans-unit>
        <trans-unit id="ce4d40d64a23f32fc3a59e19469d4aa0dda9414f" translate="yes" xml:space="preserve">
          <source>SoftReference$.apply()</source>
          <target state="translated">SoftReference$.apply()</target>
        </trans-unit>
        <trans-unit id="ddc6fbd41846663a5628abc07006afe9715240f7" translate="yes" xml:space="preserve">
          <source>SoftReference$.unapply()</source>
          <target state="translated">SoftReference$.unapply()</target>
        </trans-unit>
        <trans-unit id="1151dc8c97408b14db44fa60ac8f68795836f402" translate="yes" xml:space="preserve">
          <source>SoftReference.SoftReference()</source>
          <target state="translated">SoftReference.SoftReference()</target>
        </trans-unit>
        <trans-unit id="09214752cbcafd25dde59bf5db90dfc3d366f623" translate="yes" xml:space="preserve">
          <source>SoftReference.scala</source>
          <target state="translated">SoftReference.scala</target>
        </trans-unit>
        <trans-unit id="4781dac624756b2931fc25ff7011f2e82b906a92" translate="yes" xml:space="preserve">
          <source>SoftReference.underlying()</source>
          <target state="translated">SoftReference.underlying()</target>
        </trans-unit>
        <trans-unit id="00b2aad45d07b70e1b7eefea74316913901b6e42" translate="yes" xml:space="preserve">
          <source>Some</source>
          <target state="translated">Some</target>
        </trans-unit>
        <trans-unit id="682900a680305b91c84223f9229a436d245dbda3" translate="yes" xml:space="preserve">
          <source>Some examples of I/O handling:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5785c2f1fc481ecb23396d797bcc80eac183e7b" translate="yes" xml:space="preserve">
          <source>Some methods will cause stdin to be used as input. Output can be controlled with a &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;scala.sys.process.ProcessLogger&lt;/a&gt; -- &lt;code&gt;!!&lt;/code&gt; and &lt;code&gt;lazyLines&lt;/code&gt; will only redirect error output when passed a &lt;code&gt;ProcessLogger&lt;/code&gt;. If one desires full control over input and output, then a &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;scala.sys.process.ProcessIO&lt;/a&gt; can be used with &lt;code&gt;run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afe6e0d507885f309f4718679928ef2a58468f0" translate="yes" xml:space="preserve">
          <source>Some of these identifiers are type aliases provided as shortcuts to commonly used classes. For example, &lt;code&gt;List&lt;/code&gt; is an alias for &lt;a href=&quot;scala/collection/immutable/list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;&lt;code&gt;scala.collection.immutable.List&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f9d0503c7461a953e2ac90ce7df20153184a13" translate="yes" xml:space="preserve">
          <source>Some simple examples of these methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728a765bacb86c75dcdad2eabf01bf28421623c3" translate="yes" xml:space="preserve">
          <source>Some((head, tail)) if sequence is non-empty. None otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255d681b37b7f42f85c42bf04cad0d96f7a6ae54" translate="yes" xml:space="preserve">
          <source>Some((init, last)) if sequence is non-empty. None otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33abca7396da45232ace75ac6562df7b7165d945" translate="yes" xml:space="preserve">
          <source>Some(value) if the property is set, None otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1731d44bc98a23387a6c221de6ac1c9611758b" translate="yes" xml:space="preserve">
          <source>Some(value) if value != null, None if value == null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9b6e43d34d9699cf36f3833f950fa18e6ea89d" translate="yes" xml:space="preserve">
          <source>Some(version) if this is a final release build, None if it is an RC, Beta, etc. or was built from source, or if the version cannot be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15c8b80cb4ef464f7491443086f58a6baf98a15" translate="yes" xml:space="preserve">
          <source>Some(version) if this is a non-final version, None if this is a final release or the version cannot be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8eb9760b40b04d36748d413943858a7629b376" translate="yes" xml:space="preserve">
          <source>Some.Some()</source>
          <target state="translated">Some.Some()</target>
        </trans-unit>
        <trans-unit id="933d5ac53ef56814a83d5463c990408d04736efc" translate="yes" xml:space="preserve">
          <source>Some.get()</source>
          <target state="translated">Some.get()</target>
        </trans-unit>
        <trans-unit id="4e97bbde4f2c9dd171402af85fa27c486cb50814" translate="yes" xml:space="preserve">
          <source>Some.value()</source>
          <target state="translated">Some.value()</target>
        </trans-unit>
        <trans-unit id="424cc25a1d591f43ffc40683c89c18fe6a8a7ed5" translate="yes" xml:space="preserve">
          <source>Sort array &lt;code&gt;a&lt;/code&gt; or a part of it using function &lt;code&gt;f&lt;/code&gt; that computes the less-than relation for each element. Uses &lt;code&gt;java.util.Arrays.sort&lt;/code&gt; unless &lt;code&gt;K&lt;/code&gt; is a primitive type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4db590c87243c7b5722b87d2ed42a66beb143b" translate="yes" xml:space="preserve">
          <source>Sort array &lt;code&gt;a&lt;/code&gt; or a part of it using the Ordering on its elements, preserving the original ordering where possible. Uses &lt;code&gt;java.util.Arrays.sort&lt;/code&gt; unless &lt;code&gt;K&lt;/code&gt; is a primitive type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e582a119b7479ccafa03472764ce23251e24cce" translate="yes" xml:space="preserve">
          <source>Sort array &lt;code&gt;a&lt;/code&gt; using function &lt;code&gt;f&lt;/code&gt; that computes the less-than relation for each element. Uses &lt;code&gt;java.util.Arrays.sort&lt;/code&gt; unless &lt;code&gt;K&lt;/code&gt; is a primitive type. This is the same as &lt;code&gt;stableSort(a, f, 0, a.length)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191dfcdac0ab344c95575b899c066c4be3a360ea" translate="yes" xml:space="preserve">
          <source>Sort array &lt;code&gt;a&lt;/code&gt; using the Ordering on its elements, preserving the original ordering where possible. Uses &lt;code&gt;java.util.Arrays.sort&lt;/code&gt; unless &lt;code&gt;K&lt;/code&gt; is a primitive type. This is the same as &lt;code&gt;stableSort(a, 0, a.length)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bb443c7a119262b144d74acb5a77ae8bd8a157" translate="yes" xml:space="preserve">
          <source>Sort array &lt;code&gt;a&lt;/code&gt; with quicksort, using the Ordering on its elements. This algorithm sorts in place, so no additional memory is used aside from what might be required to box individual elements during comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda804f20a7dd5b5e059fb3803daaeda8eb1a464" translate="yes" xml:space="preserve">
          <source>SortedIterableFactory</source>
          <target state="translated">SortedIterableFactory</target>
        </trans-unit>
        <trans-unit id="3dfc878fc7e262256ed067bf541c7ee7920b4f37" translate="yes" xml:space="preserve">
          <source>SortedIterableFactory$</source>
          <target state="translated">SortedIterableFactory$</target>
        </trans-unit>
        <trans-unit id="8429142386ce8ce659bcdbf6ce6a038f455391d7" translate="yes" xml:space="preserve">
          <source>SortedIterableFactory$.Delegate</source>
          <target state="translated">SortedIterableFactory$.Delegate</target>
        </trans-unit>
        <trans-unit id="b3f6cec593f09aecfade4b64a44741a1539f5609" translate="yes" xml:space="preserve">
          <source>SortedIterableFactory$.Delegate()</source>
          <target state="translated">SortedIterableFactory$.Delegate()</target>
        </trans-unit>
        <trans-unit id="f7022a28c135abb1a909e6f61d977a214a8d4738" translate="yes" xml:space="preserve">
          <source>SortedIterableFactory$.Delegate.Delegate()</source>
          <target state="translated">SortedIterableFactory$.Delegate.Delegate()</target>
        </trans-unit>
        <trans-unit id="24dd71ea546520bb095bac9b2e834e1962639d59" translate="yes" xml:space="preserve">
          <source>SortedMap</source>
          <target state="translated">SortedMap</target>
        </trans-unit>
        <trans-unit id="52e6e140498a51eb270930468b8a7d02ac0d21ad" translate="yes" xml:space="preserve">
          <source>SortedMap$</source>
          <target state="translated">SortedMap$</target>
        </trans-unit>
        <trans-unit id="26e21f654f5ec23917c748d75fac06b6977ea770" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault</source>
          <target state="translated">SortedMap$.WithDefault</target>
        </trans-unit>
        <trans-unit id="6fbe4891a3651877e04d388379fcf69dbbd3d264" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault()</source>
          <target state="translated">SortedMap$.WithDefault()</target>
        </trans-unit>
        <trans-unit id="7ed51f724a806880e82c4d427ca58d5d1731b8b7" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.WithDefault()</source>
          <target state="translated">SortedMap$.WithDefault.WithDefault()</target>
        </trans-unit>
        <trans-unit id="841699028e4548d141b973fa44c03f35b29056d6" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.addOne()</source>
          <target state="translated">SortedMap$.WithDefault.addOne()</target>
        </trans-unit>
        <trans-unit id="295d537be93ac381b18fd18371f0472120154e65" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.concat()</source>
          <target state="translated">SortedMap$.WithDefault.concat()</target>
        </trans-unit>
        <trans-unit id="35de2baadabc7e658e21ad800d1cf486deddbe27" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.empty()</source>
          <target state="translated">SortedMap$.WithDefault.empty()</target>
        </trans-unit>
        <trans-unit id="ab5e808b5569db3ce07424f9c0df5e0e021c6795" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.fromSpecific()</source>
          <target state="translated">SortedMap$.WithDefault.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="aa897e1651ae64e71caf6b99697c4a52c5f253d7" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.iteratorFrom()</source>
          <target state="translated">SortedMap$.WithDefault.iteratorFrom()</target>
        </trans-unit>
        <trans-unit id="bc59a8461a0ae08233b61d5f75a8649e089cba63" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.keysIteratorFrom()</source>
          <target state="translated">SortedMap$.WithDefault.keysIteratorFrom()</target>
        </trans-unit>
        <trans-unit id="7ec74edd77e5e36f23f2b1fa787d306da1c33195" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.newSpecificBuilder()</source>
          <target state="translated">SortedMap$.WithDefault.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="884d14990bf766c613a6b02f66056bcdf6a56752" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.ordering()</source>
          <target state="translated">SortedMap$.WithDefault.ordering()</target>
        </trans-unit>
        <trans-unit id="df2127e8bee147b90313cca8fc3154ba343648a5" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.rangeImpl()</source>
          <target state="translated">SortedMap$.WithDefault.rangeImpl()</target>
        </trans-unit>
        <trans-unit id="2c60925647489cb119d13d4a7d66b037fa0f7333" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.removed()</source>
          <target state="translated">SortedMap$.WithDefault.removed()</target>
        </trans-unit>
        <trans-unit id="988a65c7176382e7a31e1589aca067f48bff94e2" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.sortedMapFactory()</source>
          <target state="translated">SortedMap$.WithDefault.sortedMapFactory()</target>
        </trans-unit>
        <trans-unit id="e472bd2dc47e0daa113803ef09e570b111f2c920" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.subtractOne()</source>
          <target state="translated">SortedMap$.WithDefault.subtractOne()</target>
        </trans-unit>
        <trans-unit id="09f420738bb65acb757f01de8c1772a316379a40" translate="yes" xml:space="preserve">
          <source>SortedMap$.WithDefault.updated()</source>
          <target state="translated">SortedMap$.WithDefault.updated()</target>
        </trans-unit>
        <trans-unit id="4c42f568eb7bf76285ddd79b410c176e50425796" translate="yes" xml:space="preserve">
          <source>SortedMap$.apply()</source>
          <target state="translated">SortedMap$.apply()</target>
        </trans-unit>
        <trans-unit id="acde2786f3dd224176e3b5759cc1564715d6ce52" translate="yes" xml:space="preserve">
          <source>SortedMap$.empty()</source>
          <target state="translated">SortedMap$.empty()</target>
        </trans-unit>
        <trans-unit id="700a3fdf7399247bdf0cd94b1b30fbfe0d85cb40" translate="yes" xml:space="preserve">
          <source>SortedMap$.from()</source>
          <target state="translated">SortedMap$.from()</target>
        </trans-unit>
        <trans-unit id="b7082342dfc57158d980a63f80165ef6c48d953d" translate="yes" xml:space="preserve">
          <source>SortedMap$.newBuilder()</source>
          <target state="translated">SortedMap$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="5c9a6df23231e11d86c7aef187e7a480f5226d7c" translate="yes" xml:space="preserve">
          <source>SortedMap$.sortedMapFactory()</source>
          <target state="translated">SortedMap$.sortedMapFactory()</target>
        </trans-unit>
        <trans-unit id="387bb8ec4a26353d4c379a84640c4cea8181f68e" translate="yes" xml:space="preserve">
          <source>SortedMap.+()</source>
          <target state="translated">SortedMap.+()</target>
        </trans-unit>
        <trans-unit id="7abdbf4ac28035c13c36b6b0970bd09035001933" translate="yes" xml:space="preserve">
          <source>SortedMap.++()</source>
          <target state="translated">SortedMap.++()</target>
        </trans-unit>
        <trans-unit id="3645f3f05c541602185de6a3e4aeea0a8832e56d" translate="yes" xml:space="preserve">
          <source>SortedMap.GenKeySortedSet()</source>
          <target state="translated">SortedMap.GenKeySortedSet()</target>
        </trans-unit>
        <trans-unit id="51c4590ed42750e5e5567f2bd7c9ed19f8cc5b6e" translate="yes" xml:space="preserve">
          <source>SortedMap.ImmutableKeySortedSet()</source>
          <target state="translated">SortedMap.ImmutableKeySortedSet()</target>
        </trans-unit>
        <trans-unit id="c9bf2cfd1cc592d6c058c47d6d75cc4741df2b06" translate="yes" xml:space="preserve">
          <source>SortedMap.KeySortedSet()</source>
          <target state="translated">SortedMap.KeySortedSet()</target>
        </trans-unit>
        <trans-unit id="173d6d62d59105901dc466dcac1c4b9afc627e54" translate="yes" xml:space="preserve">
          <source>SortedMap.collect()</source>
          <target state="translated">SortedMap.collect()</target>
        </trans-unit>
        <trans-unit id="356601525b8b0d92979c9408f49c7f1e386de1f9" translate="yes" xml:space="preserve">
          <source>SortedMap.concat()</source>
          <target state="translated">SortedMap.concat()</target>
        </trans-unit>
        <trans-unit id="753f0e6cd063daa9039e554e793c4df31da25021" translate="yes" xml:space="preserve">
          <source>SortedMap.empty()</source>
          <target state="translated">SortedMap.empty()</target>
        </trans-unit>
        <trans-unit id="c502a641561519926619a7876990fe35fdb12cb5" translate="yes" xml:space="preserve">
          <source>SortedMap.firstKey()</source>
          <target state="translated">SortedMap.firstKey()</target>
        </trans-unit>
        <trans-unit id="1da42d5f311b5a8c39c2fb42574db77d3d0f57d1" translate="yes" xml:space="preserve">
          <source>SortedMap.flatMap()</source>
          <target state="translated">SortedMap.flatMap()</target>
        </trans-unit>
        <trans-unit id="a4c8f97fca2b9ef5fc6459725993a0f45e0391fe" translate="yes" xml:space="preserve">
          <source>SortedMap.fromSpecific()</source>
          <target state="translated">SortedMap.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="2fff03884e583eb1bd4b1278bc12afa6e8fc721a" translate="yes" xml:space="preserve">
          <source>SortedMap.iteratorFrom()</source>
          <target state="translated">SortedMap.iteratorFrom()</target>
        </trans-unit>
        <trans-unit id="43f876b9488d14ad2709da0faa84824aae9cd5e6" translate="yes" xml:space="preserve">
          <source>SortedMap.keySet()</source>
          <target state="translated">SortedMap.keySet()</target>
        </trans-unit>
        <trans-unit id="60bf14c0365f306c1ceb878b0abfba7b6a9f9d90" translate="yes" xml:space="preserve">
          <source>SortedMap.keysIteratorFrom()</source>
          <target state="translated">SortedMap.keysIteratorFrom()</target>
        </trans-unit>
        <trans-unit id="66126ef7e08cb488b361d33f418240c62bf8f5ee" translate="yes" xml:space="preserve">
          <source>SortedMap.lastKey()</source>
          <target state="translated">SortedMap.lastKey()</target>
        </trans-unit>
        <trans-unit id="f55b5abe7a188dce3bd8cf5b6308ebd7bdebc620" translate="yes" xml:space="preserve">
          <source>SortedMap.map()</source>
          <target state="translated">SortedMap.map()</target>
        </trans-unit>
        <trans-unit id="880841c66b9fee62a1457d38b9315d4152f2a3c7" translate="yes" xml:space="preserve">
          <source>SortedMap.maxBefore()</source>
          <target state="translated">SortedMap.maxBefore()</target>
        </trans-unit>
        <trans-unit id="6c146d9ffc000d514bf53df0424e3efd43782305" translate="yes" xml:space="preserve">
          <source>SortedMap.minAfter()</source>
          <target state="translated">SortedMap.minAfter()</target>
        </trans-unit>
        <trans-unit id="8e432b37bbb79c7cd96bc056b2b4298add01cca0" translate="yes" xml:space="preserve">
          <source>SortedMap.newSpecificBuilder()</source>
          <target state="translated">SortedMap.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="d7af0c0ebcfac9b849d7aabe1bf2f590a5ca6081" translate="yes" xml:space="preserve">
          <source>SortedMap.rangeTo()</source>
          <target state="translated">SortedMap.rangeTo()</target>
        </trans-unit>
        <trans-unit id="64000c2cf10750a3be79f0676638923c63ff2812" translate="yes" xml:space="preserve">
          <source>SortedMap.scala</source>
          <target state="translated">SortedMap.scala</target>
        </trans-unit>
        <trans-unit id="aa6d7c4fcc9e18481bbf397ebadd6ec64e2c78b7" translate="yes" xml:space="preserve">
          <source>SortedMap.sortedMapFactory()</source>
          <target state="translated">SortedMap.sortedMapFactory()</target>
        </trans-unit>
        <trans-unit id="2599eca7f2e33c3a01630020db5a96e466033602" translate="yes" xml:space="preserve">
          <source>SortedMap.sortedMapFromIterable()</source>
          <target state="translated">SortedMap.sortedMapFromIterable()</target>
        </trans-unit>
        <trans-unit id="30e61fa0e9434fa18486e87c1dbbe2eaab81d476" translate="yes" xml:space="preserve">
          <source>SortedMap.stringPrefix()</source>
          <target state="translated">SortedMap.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="81a6f7a9d7bb90c0fa9ba27b314530c99cab8100" translate="yes" xml:space="preserve">
          <source>SortedMap.transform()</source>
          <target state="translated">SortedMap.transform()</target>
        </trans-unit>
        <trans-unit id="bb9012da21d8e32de5214a2b51c4bd56727c614e" translate="yes" xml:space="preserve">
          <source>SortedMap.unsorted()</source>
          <target state="translated">SortedMap.unsorted()</target>
        </trans-unit>
        <trans-unit id="90f33f11433d1422dd994f049d78ace97a01153c" translate="yes" xml:space="preserve">
          <source>SortedMap.updated()</source>
          <target state="translated">SortedMap.updated()</target>
        </trans-unit>
        <trans-unit id="0705617afeeccdaef0cc2dfb047e093194d5e5d3" translate="yes" xml:space="preserve">
          <source>SortedMap.updatedWith()</source>
          <target state="translated">SortedMap.updatedWith()</target>
        </trans-unit>
        <trans-unit id="6ebaab8cdc0eafb20d2d4738b0fef16d2f7ef484" translate="yes" xml:space="preserve">
          <source>SortedMap.valuesIteratorFrom()</source>
          <target state="translated">SortedMap.valuesIteratorFrom()</target>
        </trans-unit>
        <trans-unit id="314e31bd197b2cd61cb3d155a6f1a9e9fb46a9ff" translate="yes" xml:space="preserve">
          <source>SortedMap.withDefault()</source>
          <target state="translated">SortedMap.withDefault()</target>
        </trans-unit>
        <trans-unit id="1522ed0b42adaf44a3777ac3cb46dac871bc19e2" translate="yes" xml:space="preserve">
          <source>SortedMap.withDefaultValue()</source>
          <target state="translated">SortedMap.withDefaultValue()</target>
        </trans-unit>
        <trans-unit id="d23db950050b4a4e835e0cecb80bf528a809c69a" translate="yes" xml:space="preserve">
          <source>SortedMap.withFilter()</source>
          <target state="translated">SortedMap.withFilter()</target>
        </trans-unit>
        <trans-unit id="b6ef6eca9c5bb023b7ee4fe6648db709a6f84814" translate="yes" xml:space="preserve">
          <source>SortedMapFactory</source>
          <target state="translated">SortedMapFactory</target>
        </trans-unit>
        <trans-unit id="49e00eaa754a2b307c6a6b9fde44fddb56eb01bb" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$</source>
          <target state="translated">SortedMapFactory$</target>
        </trans-unit>
        <trans-unit id="c9de19a081427ebff2e3fd98069e89ea4f380406" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate</source>
          <target state="translated">SortedMapFactory$.Delegate</target>
        </trans-unit>
        <trans-unit id="69f01dc4557f1aca59c2b7ab72d13a6f74a20352" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate()</source>
          <target state="translated">SortedMapFactory$.Delegate()</target>
        </trans-unit>
        <trans-unit id="67b2aa5b49bb0a5518480029db6d608c8e2c40f5" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate.Delegate()</source>
          <target state="translated">SortedMapFactory$.Delegate.Delegate()</target>
        </trans-unit>
        <trans-unit id="4792c78de200a14ef749d868b6f6e6ebf1af3c70" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate.apply()</source>
          <target state="translated">SortedMapFactory$.Delegate.apply()</target>
        </trans-unit>
        <trans-unit id="f4dd9f8c0c324105c3a5b186a2329edc5026ef90" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate.empty()</source>
          <target state="translated">SortedMapFactory$.Delegate.empty()</target>
        </trans-unit>
        <trans-unit id="c9a1409995fc99c04c762d45119c1d8f77631452" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate.from()</source>
          <target state="translated">SortedMapFactory$.Delegate.from()</target>
        </trans-unit>
        <trans-unit id="a6f2c8673808ebf3c80a913dd4914f82723303fb" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.Delegate.newBuilder()</source>
          <target state="translated">SortedMapFactory$.Delegate.newBuilder()</target>
        </trans-unit>
        <trans-unit id="9d5c962d8747378bc07706585be94ae69d635d08" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.toBuildFrom()</source>
          <target state="translated">SortedMapFactory$.toBuildFrom()</target>
        </trans-unit>
        <trans-unit id="d18dc407babadf586397bf5db3d6c70469d1939a" translate="yes" xml:space="preserve">
          <source>SortedMapFactory$.toFactory()</source>
          <target state="translated">SortedMapFactory$.toFactory()</target>
        </trans-unit>
        <trans-unit id="c1eabb45ee15b0520545a04d4ade1baa7b38b5d7" translate="yes" xml:space="preserve">
          <source>SortedMapFactory.apply()</source>
          <target state="translated">SortedMapFactory.apply()</target>
        </trans-unit>
        <trans-unit id="89d88b9c546ef2fb76d428f52c23a416d58ce5ca" translate="yes" xml:space="preserve">
          <source>SortedMapFactory.empty()</source>
          <target state="translated">SortedMapFactory.empty()</target>
        </trans-unit>
        <trans-unit id="833438f1616fcf5962240de0b70ca04349882fdc" translate="yes" xml:space="preserve">
          <source>SortedMapFactory.from()</source>
          <target state="translated">SortedMapFactory.from()</target>
        </trans-unit>
        <trans-unit id="4860d7c7998c0174aa28666f5ac033e911048df4" translate="yes" xml:space="preserve">
          <source>SortedMapFactory.newBuilder()</source>
          <target state="translated">SortedMapFactory.newBuilder()</target>
        </trans-unit>
        <trans-unit id="64a6cabaa357d94be4aaf2c5b700c86e0759be14" translate="yes" xml:space="preserve">
          <source>SortedMapFactory.sortedMapFactory()</source>
          <target state="translated">SortedMapFactory.sortedMapFactory()</target>
        </trans-unit>
        <trans-unit id="0022f46479e0cd587a2049692b315465094b224c" translate="yes" xml:space="preserve">
          <source>SortedMapFactoryDefaults</source>
          <target state="translated">SortedMapFactoryDefaults</target>
        </trans-unit>
        <trans-unit id="4e2b1f6f49a3e6f2eebd37f3e9be3df577eefb98" translate="yes" xml:space="preserve">
          <source>SortedMapFactoryDefaults.empty()</source>
          <target state="translated">SortedMapFactoryDefaults.empty()</target>
        </trans-unit>
        <trans-unit id="50c5eff85ce0957a3aa9237965dbb698983c00a2" translate="yes" xml:space="preserve">
          <source>SortedMapFactoryDefaults.fromSpecific()</source>
          <target state="translated">SortedMapFactoryDefaults.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="767ebb52e8681d5415430acda602fa23d359daec" translate="yes" xml:space="preserve">
          <source>SortedMapFactoryDefaults.newSpecificBuilder()</source>
          <target state="translated">SortedMapFactoryDefaults.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="a2b2694f4685021e595adf3d5e420a1822670119" translate="yes" xml:space="preserve">
          <source>SortedMapFactoryDefaults.withFilter()</source>
          <target state="translated">SortedMapFactoryDefaults.withFilter()</target>
        </trans-unit>
        <trans-unit id="1087705718c7635e88c5568062ba7b82c1f0c8d1" translate="yes" xml:space="preserve">
          <source>SortedMapOps</source>
          <target state="translated">SortedMapOps</target>
        </trans-unit>
        <trans-unit id="80a82e26b9aafada8ca6368f91f4695f86bfd81d" translate="yes" xml:space="preserve">
          <source>SortedMapOps$</source>
          <target state="translated">SortedMapOps$</target>
        </trans-unit>
        <trans-unit id="03117617eddd2bafe6a5bda78ba1bcc1d95948c4" translate="yes" xml:space="preserve">
          <source>SortedMapOps$.WithFilter</source>
          <target state="translated">SortedMapOps$.WithFilter</target>
        </trans-unit>
        <trans-unit id="15d6ea5f29ff9484e99d4f6fd8604944b1955471" translate="yes" xml:space="preserve">
          <source>SortedMapOps$.WithFilter()</source>
          <target state="translated">SortedMapOps$.WithFilter()</target>
        </trans-unit>
        <trans-unit id="c3af3a9394ff56333646bea09ce9803cccb5243b" translate="yes" xml:space="preserve">
          <source>SortedMapOps$.WithFilter.WithFilter()</source>
          <target state="translated">SortedMapOps$.WithFilter.WithFilter()</target>
        </trans-unit>
        <trans-unit id="864bdc472ad2d01963b4aa66bde84b6c84698dcc" translate="yes" xml:space="preserve">
          <source>SortedMapOps$.WithFilter.flatMap()</source>
          <target state="translated">SortedMapOps$.WithFilter.flatMap()</target>
        </trans-unit>
        <trans-unit id="2c8966283c9f15532b8355835198082e0daf158d" translate="yes" xml:space="preserve">
          <source>SortedMapOps$.WithFilter.map()</source>
          <target state="translated">SortedMapOps$.WithFilter.map()</target>
        </trans-unit>
        <trans-unit id="223492c3e388585ee71b65ed6ac2da9df4ce8975" translate="yes" xml:space="preserve">
          <source>SortedMapOps$.WithFilter.withFilter()</source>
          <target state="translated">SortedMapOps$.WithFilter.withFilter()</target>
        </trans-unit>
        <trans-unit id="7dd78c09f1e35b29c6a4d2fd34df95bf79d3a343" translate="yes" xml:space="preserve">
          <source>SortedMapOps.+()</source>
          <target state="translated">SortedMapOps.+()</target>
        </trans-unit>
        <trans-unit id="4a4c5c0464319f19d529605c2508637ba6524b2b" translate="yes" xml:space="preserve">
          <source>SortedMapOps.++()</source>
          <target state="translated">SortedMapOps.++()</target>
        </trans-unit>
        <trans-unit id="e1098a46f32a263bae7b5a0c420a500dafa66c2f" translate="yes" xml:space="preserve">
          <source>SortedMapOps.GenKeySortedSet</source>
          <target state="translated">SortedMapOps.GenKeySortedSet</target>
        </trans-unit>
        <trans-unit id="74e6455ed1c2e2eeaaedc172f0b7cd7a2d315a4a" translate="yes" xml:space="preserve">
          <source>SortedMapOps.GenKeySortedSet()</source>
          <target state="translated">SortedMapOps.GenKeySortedSet()</target>
        </trans-unit>
        <trans-unit id="cfd08af5fc2b61dd68b1d3d91f6dd4d08eee4981" translate="yes" xml:space="preserve">
          <source>SortedMapOps.GenKeySortedSet.iteratorFrom()</source>
          <target state="translated">SortedMapOps.GenKeySortedSet.iteratorFrom()</target>
        </trans-unit>
        <trans-unit id="c7f662ce1ed41a81f3dc6711e43eac3435e6fdab" translate="yes" xml:space="preserve">
          <source>SortedMapOps.GenKeySortedSet.ordering()</source>
          <target state="translated">SortedMapOps.GenKeySortedSet.ordering()</target>
        </trans-unit>
        <trans-unit id="bcf5f4d16f194eb396e9ca10c4223d8c7b750d1e" translate="yes" xml:space="preserve">
          <source>SortedMapOps.ImmutableKeySortedSet</source>
          <target state="translated">SortedMapOps.ImmutableKeySortedSet</target>
        </trans-unit>
        <trans-unit id="53bb960c9d528514b39f472d540a9e669cccd8c6" translate="yes" xml:space="preserve">
          <source>SortedMapOps.ImmutableKeySortedSet()</source>
          <target state="translated">SortedMapOps.ImmutableKeySortedSet()</target>
        </trans-unit>
        <trans-unit id="34d32c15f33d8d500770f8d8e2ddbb0b3b1166e9" translate="yes" xml:space="preserve">
          <source>SortedMapOps.ImmutableKeySortedSet.ImmutableKeySortedSet()</source>
          <target state="translated">SortedMapOps.ImmutableKeySortedSet.ImmutableKeySortedSet()</target>
        </trans-unit>
        <trans-unit id="78f8e39b01fcddb7644c561afd96c59b15845dba" translate="yes" xml:space="preserve">
          <source>SortedMapOps.ImmutableKeySortedSet.excl()</source>
          <target state="translated">SortedMapOps.ImmutableKeySortedSet.excl()</target>
        </trans-unit>
        <trans-unit id="0677944adb0dbd837f0904a53dd05be1d829be59" translate="yes" xml:space="preserve">
          <source>SortedMapOps.ImmutableKeySortedSet.incl()</source>
          <target state="translated">SortedMapOps.ImmutableKeySortedSet.incl()</target>
        </trans-unit>
        <trans-unit id="57f717c2f26d129185b775b7b82df04a096ae933" translate="yes" xml:space="preserve">
          <source>SortedMapOps.ImmutableKeySortedSet.rangeImpl()</source>
          <target state="translated">SortedMapOps.ImmutableKeySortedSet.rangeImpl()</target>
        </trans-unit>
        <trans-unit id="cd1d521fc022f613e2e3257e4e8e30d25488db01" translate="yes" xml:space="preserve">
          <source>SortedMapOps.KeySortedSet</source>
          <target state="translated">SortedMapOps.KeySortedSet</target>
        </trans-unit>
        <trans-unit id="0be4ed08cdbc195c4ef20baef1c414255007df24" translate="yes" xml:space="preserve">
          <source>SortedMapOps.KeySortedSet()</source>
          <target state="translated">SortedMapOps.KeySortedSet()</target>
        </trans-unit>
        <trans-unit id="54ac46e2d02f1028e6d02ab91d7c0871985f1170" translate="yes" xml:space="preserve">
          <source>SortedMapOps.KeySortedSet.KeySortedSet()</source>
          <target state="translated">SortedMapOps.KeySortedSet.KeySortedSet()</target>
        </trans-unit>
        <trans-unit id="220c5b2f8a2f15618a2dce510aefe7f917092194" translate="yes" xml:space="preserve">
          <source>SortedMapOps.KeySortedSet.diff()</source>
          <target state="translated">SortedMapOps.KeySortedSet.diff()</target>
        </trans-unit>
        <trans-unit id="55427178def6d4bfac8a3af077fb85ea32d864f3" translate="yes" xml:space="preserve">
          <source>SortedMapOps.KeySortedSet.rangeImpl()</source>
          <target state="translated">SortedMapOps.KeySortedSet.rangeImpl()</target>
        </trans-unit>
        <trans-unit id="3443eff5f5dac39dab429b7eef87b5c9dfa1eab1" translate="yes" xml:space="preserve">
          <source>SortedMapOps.coll()</source>
          <target state="translated">SortedMapOps.coll()</target>
        </trans-unit>
        <trans-unit id="28898aa2bed2d8231a57f5e1902adb7579fd0347" translate="yes" xml:space="preserve">
          <source>SortedMapOps.collect()</source>
          <target state="translated">SortedMapOps.collect()</target>
        </trans-unit>
        <trans-unit id="9e992915513f8169fb357edff9dc752475e4bc5b" translate="yes" xml:space="preserve">
          <source>SortedMapOps.concat()</source>
          <target state="translated">SortedMapOps.concat()</target>
        </trans-unit>
        <trans-unit id="30775d1eed02432a63256cbef7d14d775f0eab33" translate="yes" xml:space="preserve">
          <source>SortedMapOps.firstKey()</source>
          <target state="translated">SortedMapOps.firstKey()</target>
        </trans-unit>
        <trans-unit id="3d70a67df1d2ac5dbe845c97214e465b6a5899be" translate="yes" xml:space="preserve">
          <source>SortedMapOps.flatMap()</source>
          <target state="translated">SortedMapOps.flatMap()</target>
        </trans-unit>
        <trans-unit id="92f68d3ffe3ea43039252ed58b9cb20dea4378ca" translate="yes" xml:space="preserve">
          <source>SortedMapOps.iteratorFrom()</source>
          <target state="translated">SortedMapOps.iteratorFrom()</target>
        </trans-unit>
        <trans-unit id="f6580dc8912f285a394d9e8be488b475a70edbc3" translate="yes" xml:space="preserve">
          <source>SortedMapOps.keySet()</source>
          <target state="translated">SortedMapOps.keySet()</target>
        </trans-unit>
        <trans-unit id="993ff401820813db5f7bb7d56507e1467e4a0c00" translate="yes" xml:space="preserve">
          <source>SortedMapOps.keysIteratorFrom()</source>
          <target state="translated">SortedMapOps.keysIteratorFrom()</target>
        </trans-unit>
        <trans-unit id="c355f52697d6b52b4c20b81aae069e1e29813474" translate="yes" xml:space="preserve">
          <source>SortedMapOps.lastKey()</source>
          <target state="translated">SortedMapOps.lastKey()</target>
        </trans-unit>
        <trans-unit id="90897a57c4af9737d1819d352e5a03dbe32ee0cd" translate="yes" xml:space="preserve">
          <source>SortedMapOps.map()</source>
          <target state="translated">SortedMapOps.map()</target>
        </trans-unit>
        <trans-unit id="13989d6c56730120dd8ea4e8e6c348834dabb4b0" translate="yes" xml:space="preserve">
          <source>SortedMapOps.maxBefore()</source>
          <target state="translated">SortedMapOps.maxBefore()</target>
        </trans-unit>
        <trans-unit id="da3abc02434a50a75cc1c3519c3077a461ad8fd9" translate="yes" xml:space="preserve">
          <source>SortedMapOps.minAfter()</source>
          <target state="translated">SortedMapOps.minAfter()</target>
        </trans-unit>
        <trans-unit id="4345a792aa6b0a04e7dde0cfba21da7ec504d8c0" translate="yes" xml:space="preserve">
          <source>SortedMapOps.rangeTo()</source>
          <target state="translated">SortedMapOps.rangeTo()</target>
        </trans-unit>
        <trans-unit id="e6710b094cb79f0e186a0a02135a25f7438993a9" translate="yes" xml:space="preserve">
          <source>SortedMapOps.sortedMapFactory()</source>
          <target state="translated">SortedMapOps.sortedMapFactory()</target>
        </trans-unit>
        <trans-unit id="2f6bd7846af404338de859f4824bdc5f907dadab" translate="yes" xml:space="preserve">
          <source>SortedMapOps.sortedMapFromIterable()</source>
          <target state="translated">SortedMapOps.sortedMapFromIterable()</target>
        </trans-unit>
        <trans-unit id="030eaad0ffa9dab5028fc317af980e061698b410" translate="yes" xml:space="preserve">
          <source>SortedMapOps.transform()</source>
          <target state="translated">SortedMapOps.transform()</target>
        </trans-unit>
        <trans-unit id="61d6cbd13f5d77baf9699e92aa3c7edf6d17f49e" translate="yes" xml:space="preserve">
          <source>SortedMapOps.unsorted()</source>
          <target state="translated">SortedMapOps.unsorted()</target>
        </trans-unit>
        <trans-unit id="ab7ccfdf16d5284a2117c3c0d285ad4b7bfb1b29" translate="yes" xml:space="preserve">
          <source>SortedMapOps.updated()</source>
          <target state="translated">SortedMapOps.updated()</target>
        </trans-unit>
        <trans-unit id="f44ac88418ccec76b4112ff76a9b56038ab04e6b" translate="yes" xml:space="preserve">
          <source>SortedMapOps.updatedWith()</source>
          <target state="translated">SortedMapOps.updatedWith()</target>
        </trans-unit>
        <trans-unit id="44a92e84f7728b53a925c9cdc9cd70ea0241f444" translate="yes" xml:space="preserve">
          <source>SortedMapOps.valuesIteratorFrom()</source>
          <target state="translated">SortedMapOps.valuesIteratorFrom()</target>
        </trans-unit>
        <trans-unit id="2ba1d4b118dc8fe1a0702c180ef68cd758daaf66" translate="yes" xml:space="preserve">
          <source>SortedOps</source>
          <target state="translated">SortedOps</target>
        </trans-unit>
        <trans-unit id="bc67f3cedc57505032ce28464ef9193d07cc95bb" translate="yes" xml:space="preserve">
          <source>SortedOps.firstKey()</source>
          <target state="translated">SortedOps.firstKey()</target>
        </trans-unit>
        <trans-unit id="21b3e6a272f173f623d4f44205f456bf19ec4dc0" translate="yes" xml:space="preserve">
          <source>SortedOps.lastKey()</source>
          <target state="translated">SortedOps.lastKey()</target>
        </trans-unit>
        <trans-unit id="01bb05d3a533d3bf03aafe8c22dd919f55adc585" translate="yes" xml:space="preserve">
          <source>SortedOps.ordering()</source>
          <target state="translated">SortedOps.ordering()</target>
        </trans-unit>
        <trans-unit id="a9b4958d4864934d36feff740c2e98d267f09577" translate="yes" xml:space="preserve">
          <source>SortedOps.range()</source>
          <target state="translated">SortedOps.range()</target>
        </trans-unit>
        <trans-unit id="8d280993d244975b6811fa954126f7cf4b30a8f5" translate="yes" xml:space="preserve">
          <source>SortedOps.rangeFrom()</source>
          <target state="translated">SortedOps.rangeFrom()</target>
        </trans-unit>
        <trans-unit id="2312d73e88adf617652a553d2d07b1bdf1009c9d" translate="yes" xml:space="preserve">
          <source>SortedOps.rangeImpl()</source>
          <target state="translated">SortedOps.rangeImpl()</target>
        </trans-unit>
        <trans-unit id="f1125e840121e08cdd4f835d27ed799361cb2b72" translate="yes" xml:space="preserve">
          <source>SortedOps.rangeTo()</source>
          <target state="translated">SortedOps.rangeTo()</target>
        </trans-unit>
        <trans-unit id="6886f57edd5520461434b2b1042a339a49985a5c" translate="yes" xml:space="preserve">
          <source>SortedOps.rangeUntil()</source>
          <target state="translated">SortedOps.rangeUntil()</target>
        </trans-unit>
        <trans-unit id="60299d3e48a4cc3283d1d8a5c21e6dd9ef01224b" translate="yes" xml:space="preserve">
          <source>SortedOps.scala</source>
          <target state="translated">SortedOps.scala</target>
        </trans-unit>
        <trans-unit id="61ccbb93c5fe56b6e2282fb6bf87a67e58f66512" translate="yes" xml:space="preserve">
          <source>SortedSet</source>
          <target state="translated">SortedSet</target>
        </trans-unit>
        <trans-unit id="1cacf3e95c8f45fca1ae3a5fc4d13a07277a1ed2" translate="yes" xml:space="preserve">
          <source>SortedSet$</source>
          <target state="translated">SortedSet$</target>
        </trans-unit>
        <trans-unit id="9e70a0bcdc5927ce1b195ef807cd8cea7cfa2979" translate="yes" xml:space="preserve">
          <source>SortedSet$.from()</source>
          <target state="translated">SortedSet$.from()</target>
        </trans-unit>
        <trans-unit id="a0c779647051b8f57f8c721c99a171e8597070bc" translate="yes" xml:space="preserve">
          <source>SortedSet.collect()</source>
          <target state="translated">SortedSet.collect()</target>
        </trans-unit>
        <trans-unit id="15d67453eb41875889a49a3d93a5fe4bbbf93d4f" translate="yes" xml:space="preserve">
          <source>SortedSet.empty()</source>
          <target state="translated">SortedSet.empty()</target>
        </trans-unit>
        <trans-unit id="18eb9c7fdbffa0b0a3bd90073525f8ea417004ac" translate="yes" xml:space="preserve">
          <source>SortedSet.firstKey()</source>
          <target state="translated">SortedSet.firstKey()</target>
        </trans-unit>
        <trans-unit id="597772546a87bcfa33361b2d5645876b9f2bf710" translate="yes" xml:space="preserve">
          <source>SortedSet.flatMap()</source>
          <target state="translated">SortedSet.flatMap()</target>
        </trans-unit>
        <trans-unit id="9bac5b81a32082bfa21fc006684e190f2cd1debd" translate="yes" xml:space="preserve">
          <source>SortedSet.fromSpecific()</source>
          <target state="translated">SortedSet.fromSpecific()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
