<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="db6f035049988dcb9c97504ae06bc4c222ad9d39" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product15%24&quot;&gt;object Product15&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0bb8df5fd76b259613a6316d9fbec3ce9f9c51" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product16&quot;&gt;trait Product16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322ddf6749e4faec90b5819683be24136517a271" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product16%24&quot;&gt;object Product16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324b54ba693905f56b990339be803e3b8e7fdf5e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product17&quot;&gt;trait Product17&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81ce6b4a0ec5652fde4f79ae0c8861b56d77ae9" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product17%24&quot;&gt;object Product17&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4155900212b091e28ea0e32f27d35ab6025b2bf" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product18&quot;&gt;trait Product18&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c98f5b163f74ee700895abdb10e8c09671a23a6" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product18%24&quot;&gt;object Product18&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbe662cc446288ddd9811fef123d9153b0084ce" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product19&quot;&gt;trait Product19&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6717fd259da517e6ca93b50c941c965f1723d19b" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product19%24&quot;&gt;object Product19&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff086f07f0db802a623ca16b1e6ba473e513920" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product2&quot;&gt;trait Product2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0951482c47f71885f9b14e28cbdacb57fa9ed0e9" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product2%24&quot;&gt;object Product2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39895a0d7344fe1195b0dd98f2685d7107b274d2" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product20&quot;&gt;trait Product20&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ad8d49a4dba4cb7ca4aec7e0008ccdc118eb10" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product20%24&quot;&gt;object Product20&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a50d0a13020997c1053e09ea0b06a033eb9be4" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product21&quot;&gt;trait Product21&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c114c512905d3d982fa4ff8d4ed11306aadfd1e6" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product21%24&quot;&gt;object Product21&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f82772cf0b98e1b6861b5ec4ffd9c3beeaf6e8c" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product22&quot;&gt;trait Product22&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9371ee21ad725c85367c263a31d3ca47fcb2ab64" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product22%24&quot;&gt;object Product22&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f62941c87ee0f20b8bf4a6329d424f4d3efe3b0" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product3&quot;&gt;trait Product3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b548ba7b58f557982f40ac257450179b642159ae" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product3%24&quot;&gt;object Product3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c31bb4380174ee80019e76630a0902e9299de2" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product4&quot;&gt;trait Product4&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86258236a547f669a883237d98e5d122f91ea182" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product4%24&quot;&gt;object Product4&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a720cba55c8fdfc285677e1fa74e7eb51e2524" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product5&quot;&gt;trait Product5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7654153bc986d5b01fd469781a0382d9f950c8e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product5%24&quot;&gt;object Product5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5121eeece040f24399a37ca22779a0311d0da072" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product6&quot;&gt;trait Product6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05b832a2c2d1c3020a95f7a22f2326bd7d82907" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product6%24&quot;&gt;object Product6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac743bc4a2c655c644e9269776988d179366ef6" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product7&quot;&gt;trait Product7&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e317e89346546d83d86299990aae8b57417e52" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product7%24&quot;&gt;object Product7&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622242f772f4d341e658b479df5e4585627c4674" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product8&quot;&gt;trait Product8&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e871ba25e204c68248ff501781b4db440b25e5f6" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product8%24&quot;&gt;object Product8&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc457b841685b8bd537b6a58d8d753c5572e83f" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product9&quot;&gt;trait Product9&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7740cc49589a157f194f37476402320d5c894e6" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;product9%24&quot;&gt;object Product9&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a65ed77a792ba54905758facfbf8dad5be3f541" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;promise&quot;&gt;trait Promise&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c674c48d61201e530c431bc9afb44a4aa30d85" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;promise%24&quot;&gt;object Promise&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddb85aa835089de238cdfc8fca99d28687f26d9" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;prop&quot;&gt;trait Prop&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb96930bcd4c032923b327bab2a4efaffb37f842" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;prop%24&quot;&gt;object Prop&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7b7e1cbfcefd17ea7b0c2932396835d171fa93" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;proxy&quot;&gt;trait Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3c1ef22fe517aee9362d2b0d7c9338d8705b6d" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;proxy%24&quot;&gt;object Proxy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c38b8310a230a417042354c43829186687f2af" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;queue&quot;&gt;class Queue&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd83edc4fd7031026df91385ee13956166aaaf5b" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;queue%24&quot;&gt;object Queue&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070081c3e52869674759ff41d7148ec072754e43" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;random&quot;&gt;class Random&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f196b540ecd966b5e1e043d927e413407a3301ea" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;random%24&quot;&gt;object Random&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f226e27880a49acbbd488bf5226483e545b4817a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;range&quot;&gt;class Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebd79dfb94a91ef28478d7a599e8fa133271cea" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;range%24&quot;&gt;object Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a9fb8f1a9713a73d83874ce03601fd39012b04" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;regex&quot;&gt;class Regex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bdcf00ed2f64b38b1bb03785b39a7a5d0c7b7d" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;regex%24&quot;&gt;object Regex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd63144760ff2b03a6da6327bcb58d3d58dc2a0" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;regex%24%24match&quot;&gt;class Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184e42eca3a1402e6c4bfec49541ba742f9290be" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;regex%24%24match%24&quot;&gt;object Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db90cc68ebca70646169413dbf32508fc6e99384" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seq&quot;&gt;trait Seq&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac69e6c0914c77e8b920159ad4ff2b895e64bed" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seq%24&quot;&gt;object Seq&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c760501c2a24bb2f2575c18e5d509b464b79ac3" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqfactory&quot;&gt;trait SeqFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf4076789c05dd923f07d331c6f977730de7a9" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqfactory%24&quot;&gt;object SeqFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9398c48f5238d1a97bc40dcf3fcd639063dd58ce" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqmap&quot;&gt;trait SeqMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0399d838b4e4ad73e2e8584f8b85d0af0f194709" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqmap%24&quot;&gt;object SeqMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6f3e28048c6fd10d471521265f9f8aaf0598a1" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqops&quot;&gt;trait SeqOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77522747c923b33986a042e161f15e72141a429" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqops%24&quot;&gt;object SeqOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6904bc30afd7abc03494cdc56a6c2f7dd1ba311" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqview&quot;&gt;trait SeqView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be052587d6df1ef2a1c85bd326ad02e365620f72" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;seqview%24&quot;&gt;object SeqView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362cbd6cb245edc21a8c2a05c513060cfbb70a1c" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;set&quot;&gt;trait Set&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b7a4db160ae954bfe76ae54faf07e475f78a5f" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;set%24&quot;&gt;object Set&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714cf2a3b310526b3c0e59dbb79e41a6e7996bc2" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;short&quot;&gt;class Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae0c78b0684b70326c217e4986304666b62f355" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;short%24&quot;&gt;object Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2693819414966b92fe3d87da44268a04eb2b158d" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;shutdownhookthread&quot;&gt;class ShutdownHookThread&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fa6ebcf70ad5613c8763283a1613696c2b375a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;shutdownhookthread%24&quot;&gt;object ShutdownHookThread&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bc8c835e08eaa82f99adb5a2042bdc46bf1c2e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;softreference&quot;&gt;class SoftReference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950a45aa04f686d4538cc5ff200223909cfb6c13" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;softreference%24&quot;&gt;object SoftReference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476750468aefa96561dd493b62dcdfb91907355d" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortediterablefactory&quot;&gt;trait SortedIterableFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c534e1bf36c664da526350b6cabbd076b3ec2232" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortediterablefactory%24&quot;&gt;object SortedIterableFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f3d8fee75feb835fd7e65306d83afc129dbf8e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedmap&quot;&gt;trait SortedMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f22bc9822268c9c898dab52aec1aad30c46501" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedmap%24&quot;&gt;object SortedMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c0dbf36907a0ad67d7990b8411c7a41b728c7f" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedmapfactory&quot;&gt;trait SortedMapFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e384ae732e2b8fcf86aebf3f5ba34a917cbe07" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedmapfactory%24&quot;&gt;object SortedMapFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae5328996323f54609919ae72ebf152ea5ce70" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedmapops&quot;&gt;trait SortedMapOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ec4baee3cf56b8acf3c3f763c38783a6d49c8c" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedmapops%24&quot;&gt;object SortedMapOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4f3117c56e3637f3fc066fb6d1c64800298411" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedset&quot;&gt;trait SortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87453d4687760cbf2da5c1caa82d7fabd10c8d94" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedset%24&quot;&gt;object SortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7026c7764440d07bd970360e99bc4a42eff12e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedsetops&quot;&gt;trait SortedSetOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8aaecb8d8e53e643db60c54976415b497cae1e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;sortedsetops%24&quot;&gt;object SortedSetOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3273dbb638aaa1aba338f911b636305347ef36" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;source&quot;&gt;class Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fee01edd1c179d15c2d784cdc1a6429b1b885dd" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;source%24&quot;&gt;object Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bdc106d7fe9015c62e41107fc2bed432362278" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;specializable&quot;&gt;trait Specializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad2541eaca5c24631b3721d60737a4964a5c623" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;specializable%24&quot;&gt;object Specializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2874edeb9c17afd4cdcecfe0edae4b7ce1c855c8" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stack&quot;&gt;class Stack&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a16a6083fc952c24b095fa2d70189cd10ac5b7" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stack%24&quot;&gt;object Stack&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3b62d44f84aa6a767722be1a8253aa51a6e9f0" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stepper&quot;&gt;trait Stepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b7268f76a8ba288475002175a3d60d60cad7e3" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stepper%24&quot;&gt;object Stepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62432c48caf84ffc1663fb2331929e8fce6e2613" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;steppershape&quot;&gt;trait StepperShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def7b821c7dc50992b0e4bf7fea36b3373d711a8" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;steppershape%24&quot;&gt;object StepperShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c65d30ea5ad36d3befefcd4856d62cff099189" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stream&quot;&gt;class Stream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6221361078a9bdd754346c6fc1b9920c0ac6a0" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stream%24&quot;&gt;object Stream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b244a44fc4e7d6ce0a4040c0aa5cb1f65e31bf" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions&quot;&gt;trait StreamExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0e3587960f129633bd5766d986fd419af0129a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24&quot;&gt;object StreamExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5f2c3c81c3ba124af98d33038d2b526b442fa7" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot;&gt;trait AccumulatorFactoryInfo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ccde1887ba18b688e28700902dd023611963ba" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo%24&quot;&gt;object AccumulatorFactoryInfo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f54334c743cac05cc5095f70e1a5ecb35af1eec" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24%24streamshape&quot;&gt;trait StreamShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32246915dd2b4a7bb9ab80f2c46fe67f03e529c2" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24%24streamshape%24&quot;&gt;object StreamShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e7a876ed520f771f3671285ead0e135fce016e" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24%24streamunboxer&quot;&gt;trait StreamUnboxer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7f6682289c656ddc64dab453ad658a863e0cd7" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;streamextensions%24%24streamunboxer%24&quot;&gt;object StreamUnboxer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2127d3492e6e2e9c94409996c49b7ed226060f7" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stringbuilder&quot;&gt;class StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c3199335454356780b3b4afa1b2bee8f8aaef7" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stringbuilder%24&quot;&gt;object StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2251bf6b4126939e415ff067fcb36acf8a13c99a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stringcontext&quot;&gt;class StringContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5c61eb80a284efd3c915c3852e45e1ca0c31eb" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stringcontext%24&quot;&gt;object StringContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b811bf4a376f1b384ad9d081e16935b9a0fc2fb1" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stringops&quot;&gt;class StringOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecb6a365feb8f5034484cf9b646d19b21c94190" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;stringops%24&quot;&gt;object StringOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3b3ab14869e300bb6b25d68da118a8dd9bf111" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;symbol&quot;&gt;class Symbol&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c535d244e22e100576212b87755135ddb7162ea" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;symbol%24&quot;&gt;object Symbol&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce1457b6d96ceacaa64633ad9e12fc79975c076" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;systemproperties&quot;&gt;class SystemProperties&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411df296361dcdbd228349e7ebe3f66d8b7d4664" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;systemproperties%24&quot;&gt;object SystemProperties&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40548838a3a6ce4af0be67c271bb5ff347b46b3" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treemap&quot;&gt;class TreeMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa49df4e9a1a43fc551ac6fa284ab25d1a638522" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treemap%24&quot;&gt;object TreeMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d365e4a71b8af455fb961f14c9dc87b8a669590c" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treeseqmap&quot;&gt;class TreeSeqMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83944e9d24dc2177c23855f73803732817654b94" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treeseqmap%24&quot;&gt;object TreeSeqMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edfa905f8236c97777acd64c7722b8f9f7cfa23" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treeseqmap%24%24orderby&quot;&gt;trait OrderBy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200d2d90d784ac92d5341ba4627ef3d810512166" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treeseqmap%24%24orderby%24&quot;&gt;object OrderBy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d7f36ad4d616e95bdeb3bde3fbe7fe9d43d800" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treeset&quot;&gt;class TreeSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453274115718a0cd26c81e1ee203366467970667" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;treeset%24&quot;&gt;object TreeSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f57413e4aff49b86d7c79d9642b4add428fec82" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;triemap&quot;&gt;class TrieMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b04a81eb33662941dd72a26bd8eb85a95183c95" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;triemap%24&quot;&gt;object TrieMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608d8806f591c76a434db6892dcaa1abc802932a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;try&quot;&gt;class Try&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c175a1a5bec66fb1d4ea4256203d66f2bb8fbe3" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;try%24&quot;&gt;object Try&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb073f51387ff893bb478516a9d93abca3c2c04a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;unit&quot;&gt;class Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c208bcfb952396756e5f8b1e4aa7ee95834596a5" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;unit%24&quot;&gt;object Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95b27f6b05a9fae25512db3817b452932dbbad0" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;unrolledbuffer&quot;&gt;class UnrolledBuffer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d96aa4f5925d7d14049e666a3ec1732187c77b" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;unrolledbuffer%24&quot;&gt;object UnrolledBuffer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23db8c2cff3cf58c2b78fb58c23b8faca0a92d93" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;using%24%24manager&quot;&gt;class Manager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a533fb5e5bc6e53e913ece1604f2619e9bd6b9" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;using%24%24manager%24&quot;&gt;object Manager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7f6a5971e02d620a188a2b0450b899d989e6c7" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;using%24%24releasable&quot;&gt;trait Releasable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94994e47dfbf59e053cdddde8bb559e0d448804b" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;using%24%24releasable%24&quot;&gt;object Releasable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f31c29c499db4ce3399af488c18eaa5e8507c27" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;vector&quot;&gt;class Vector&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbc272e18bf0170d8310f3bf1362f5f76542e45" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;vector%24&quot;&gt;object Vector&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c646394e42f1c813bee64a5c32fb4ab4408157ff" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;vectormap&quot;&gt;class VectorMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8756e5568ed2c8a33e933f7ed21ce736b3735b71" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;vectormap%24&quot;&gt;object VectorMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707ba9994f8f5af7abc46f4a6168d936baf907ed" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;view&quot;&gt;trait View&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53d648ad81dd968a38c5dba5566d8438e985b6d" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;view%24&quot;&gt;object View&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a115a701c9276cd72dfa42fec4b57ee41354f007" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;view%24%24filter&quot;&gt;class Filter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad9239504776b12362c06605a397411fb8dcbe2" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;view%24%24filter%24&quot;&gt;object Filter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4ea41097a2feda861e1318c6165ad71262ae6a" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;weakhashmap&quot;&gt;class WeakHashMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794cb0dd8a4689fe60b2db14c17be44f60f44b21" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;weakhashmap%24&quot;&gt;object WeakHashMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a15da8b437acad064d799f39e40121b225f2e8" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;weakreference&quot;&gt;class WeakReference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f24afd523e780fb2ff5cb283cfdcad8e1db884d" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;weakreference%24&quot;&gt;object WeakReference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088464409541176ea074c8884f158834094d2343" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;wrappedstring&quot;&gt;class WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0e2d13ee7d3c551dde7b0fa3b3241509ca18fa" translate="yes" xml:space="preserve">
          <source>Companion &lt;a href=&quot;wrappedstring%24&quot;&gt;object WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f823203981c2364925f26801fb8fe15f61d7fc64" translate="yes" xml:space="preserve">
          <source>Companion object for ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5dc2ff43c21afc00e56a2f75cce397b8506026" translate="yes" xml:space="preserve">
          <source>Comparator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1a76968a2ef9f0a24607c0cbfadc134da1905b" translate="yes" xml:space="preserve">
          <source>Compares the given specification version to the major version of the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be15c79484e144f5dddb9d985665f0176eb0ef14" translate="yes" xml:space="preserve">
          <source>Compares the given specification version to the specification version of the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b9004f2dc64bcb17e22989e23317fcf13fc849" translate="yes" xml:space="preserve">
          <source>Compares the length of this array to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f6a1cdeb747436d9931a52095db92c02c219e1" translate="yes" xml:space="preserve">
          <source>Compares the length of this immutable sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b75524de642035980013a4c003c023d3ed5be8" translate="yes" xml:space="preserve">
          <source>Compares the length of this immutable sequence to the size of another &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4856e125dbb487ee628bf9ea7d29a4ea37aa9acf" translate="yes" xml:space="preserve">
          <source>Compares the length of this list to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1d672361cfa6021696f22eff39c630f08e0994" translate="yes" xml:space="preserve">
          <source>Compares the length of this sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d5225f69a70977934015fc36c060d619081ddd" translate="yes" xml:space="preserve">
          <source>Compares the length of this sequence to the size of another &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607241bc2b609858baffe7cc07cd1bc80cea1200" translate="yes" xml:space="preserve">
          <source>Compares the receiver object (&lt;code&gt;this&lt;/code&gt;) with the argument object (&lt;code&gt;that&lt;/code&gt;) for equivalence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b4077030a19bd040635610fc878103fad9826d" translate="yes" xml:space="preserve">
          <source>Compares the size of this array to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccecec10b97f16c7c15fbf9a33edcc7eda6053f" translate="yes" xml:space="preserve">
          <source>Compares the size of this immutable sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e07fa72ce4405dfd23d49fea60a2738d2cbbc1" translate="yes" xml:space="preserve">
          <source>Compares the size of this immutable sequence to the size of another &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f64023b3a0dcaf5396cc137439c73506173b93" translate="yes" xml:space="preserve">
          <source>Compares the size of this iterable collection to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea531ad9320aee4dafb00f58074739f8895e658" translate="yes" xml:space="preserve">
          <source>Compares the size of this iterable collection to the size of another &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58ae7d0ad4d5de65fd9a7b9e00f3f35e4255d4c" translate="yes" xml:space="preserve">
          <source>Compares the size of this sequence to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7364585b80494daa84f54fe74017aa1c6051b64a" translate="yes" xml:space="preserve">
          <source>Compares the size of this sequence to the size of another &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6bde9908b629b9a013e7a2855c8759fd3048f7" translate="yes" xml:space="preserve">
          <source>Compares the size of this view to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6240a5e06fc519306bb537e3b037dfad708a286" translate="yes" xml:space="preserve">
          <source>Compares the size of this view to the size of another &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2caecf995ef2b7a18777eedd193d51f090f7cd" translate="yes" xml:space="preserve">
          <source>Compares this BigDecimal with the specified BigDecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817f69464e0b0584cbedcfcfa8c2921a2ba5f677" translate="yes" xml:space="preserve">
          <source>Compares this BigDecimal with the specified value for equality. Where &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; disagree, &lt;code&gt;BigDecimal&lt;/code&gt; will agree with the &lt;code&gt;Double&lt;/code&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff03ba936607d8a2ee48a598466126ecbd173faa" translate="yes" xml:space="preserve">
          <source>Compares this BigInt with the specified BigInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c3756e017bd833c89f2e7ca07ed3b8e9854344" translate="yes" xml:space="preserve">
          <source>Compares this BigInt with the specified value for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19abe584a85a73fa244274cb93391a8e4375760" translate="yes" xml:space="preserve">
          <source>Compares two Boolean expressions and returns &lt;code&gt;true&lt;/code&gt; if both of them evaluate to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8820c85522d7b1a899931853fac1d176650421a9" translate="yes" xml:space="preserve">
          <source>Compares two Boolean expressions and returns &lt;code&gt;true&lt;/code&gt; if one or both of them evaluate to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d818c5577ded15f6ea29fe505ca8d5950672d93f" translate="yes" xml:space="preserve">
          <source>Compares two Boolean expressions and returns &lt;code&gt;true&lt;/code&gt; if they evaluate to a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3b6b61c40ce9883392594a997d5be9de4d3126" translate="yes" xml:space="preserve">
          <source>Compares two Boolean expressions and returns &lt;code&gt;true&lt;/code&gt; if they evaluate to the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c038682c9b205c4ebbcb0518aadae23026fea195" translate="yes" xml:space="preserve">
          <source>Compile a regular expression, supplied as a string, into a pattern that can be matched against inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9182251d9a50f8527aad46b97b15d765e309744f" translate="yes" xml:space="preserve">
          <source>Complete example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f72ba021b579093ad8ee522c5f5a9928a4525d" translate="yes" xml:space="preserve">
          <source>Completes the promise with a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ec991faa17439cc97c91411db108a7170fc215" translate="yes" xml:space="preserve">
          <source>Completes the promise with an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45af6a3c82f94fe14d967f8f670c3257265c466" translate="yes" xml:space="preserve">
          <source>Completes the promise with either an exception or a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ecd6b0c18083d56aeba0952c51d5d6e1b58cc7" translate="yes" xml:space="preserve">
          <source>Completes this &lt;code&gt;Try&lt;/code&gt; by applying the function &lt;code&gt;f&lt;/code&gt; to this if this is of type &lt;code&gt;Failure&lt;/code&gt;, or conversely, by applying &lt;code&gt;s&lt;/code&gt; if this is a &lt;code&gt;Success&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb64eb08387d6179e4dc5079a61dac217346c3e2" translate="yes" xml:space="preserve">
          <source>Completes this promise with the specified future, once that future is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489e110245c94be91696243600b2f00675aafd10" translate="yes" xml:space="preserve">
          <source>Compose multiple &lt;code&gt;Catch&lt;/code&gt;s with &lt;code&gt;or&lt;/code&gt; to build a &lt;code&gt;Catch&lt;/code&gt; that provides default values varied by exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca91650c40b9a3d21527f2a64571ad220cd0dc6" translate="yes" xml:space="preserve">
          <source>Composes another partial function &lt;code&gt;k&lt;/code&gt; with this partial function so that this partial function gets applied to results of &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bb2c99ce49f74e831084282c79bf897ff89618" translate="yes" xml:space="preserve">
          <source>Composes this partial function with a fallback partial function which gets applied where this partial function is not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ff642d1b0fd5dccd983afc641bd6606cacb74a" translate="yes" xml:space="preserve">
          <source>Composes this partial function with a transformation function that gets applied to results of this partial function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f07f091c75a14d23695541468579a39cc00051" translate="yes" xml:space="preserve">
          <source>Composes this partial function with an action function which gets applied to results of this partial function. The action function is invoked only for its side effects; its result is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00579c25d5fb3d20fcdee3cdd0d8bae3bf0d8c5d" translate="yes" xml:space="preserve">
          <source>Composes this partial function with another partial function that gets applied to results of this partial function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb9c4518a70eb33be09ceaa52f451aa4dd6327c" translate="yes" xml:space="preserve">
          <source>Composes two instances of Function1 in a new Function1, with this function applied first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4d582ec6a2420f5e07197bad3df43f017a8930" translate="yes" xml:space="preserve">
          <source>Composes two instances of Function1 in a new Function1, with this function applied last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad628ff3010691ea1dd12897f8e07d38bf8a31e" translate="yes" xml:space="preserve">
          <source>Compute a hash that depends on the order of its arguments. Potential range hashes are recognized to produce a hash that is compatible with rangeHash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dd98078c44e1b4d61406e0efd9cf6a580f4112" translate="yes" xml:space="preserve">
          <source>Compute a hash that is symmetric in its arguments - that is a hash where the order of appearance of elements does not matter. This is useful for hashing sets, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140f550a9c456eac936b00497f95ba4a76d3982b" translate="yes" xml:space="preserve">
          <source>Compute the hash of a List. Potential range hashes are recognized to produce a hash that is compatible with rangeHash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779dfb3e49c68eb6bb3c7a035110da8108038161" translate="yes" xml:space="preserve">
          <source>Compute the hash of a Range with at least 2 elements. Ranges with fewer elements need to use seqHash instead. The &lt;code&gt;last&lt;/code&gt; parameter must be the actual last element produced by a Range, not the nominal &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ae1b22c92a4a6ee6c03707d476661819d20ec4" translate="yes" xml:space="preserve">
          <source>Compute the hash of a byte array. Faster than arrayHash, because it hashes 4 bytes at once. Note that the result is not compatible with arrayHash!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ce5f649c751d7b641df3b3ee346d671da092e2" translate="yes" xml:space="preserve">
          <source>Compute the hash of a product</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa9f04296d11acceef9c21771d2afdb59751f50" translate="yes" xml:space="preserve">
          <source>Compute the hash of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2321b718e70a180724709999a47bb01810478b33" translate="yes" xml:space="preserve">
          <source>Compute the hash of an IndexedSeq. Potential range hashes are recognized to produce a hash that is compatible with rangeHash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946a43c87fc656ec7cd5e86b14a5215ae3f16a0d" translate="yes" xml:space="preserve">
          <source>Compute the hash of an array. Potential range hashes are recognized to produce a hash that is compatible with rangeHash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e365deac494634c872b540a440e71003bf8fa5" translate="yes" xml:space="preserve">
          <source>Computes a prefix scan of the elements of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b4c4fcb15ae5298c59e6100a7082a9c7fde344" translate="yes" xml:space="preserve">
          <source>Computes a prefix scan of the elements of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a32740bf9d995fb2a0ed0c6008a52519c648db0" translate="yes" xml:space="preserve">
          <source>Computes length of longest segment whose elements all satisfy some predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0eaa75dd44dcf0c17ed72a4dee46f8d21a0fb3f" translate="yes" xml:space="preserve">
          <source>Computes the difference of this set and another set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e6bd495724ccd2f2a353ed22b8acd5bf65e47f" translate="yes" xml:space="preserve">
          <source>Computes the intersection between this set and another set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab5a575c44109d8b0947ce22d3c9dafc5576603" translate="yes" xml:space="preserve">
          <source>Computes the multiset difference between this array and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ded18a4859fc6ae3c1a3d8c194482625daafd8f" translate="yes" xml:space="preserve">
          <source>Computes the multiset difference between this immutable sequence and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d0e1a7e5cabb89dca30d0904de40ec6e2cb10f" translate="yes" xml:space="preserve">
          <source>Computes the multiset difference between this lazy list and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d203b38505478926dfd40cece8f07d2b1d8782ff" translate="yes" xml:space="preserve">
          <source>Computes the multiset difference between this sequence and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affb241836bcd04bdd88844f2a9a5d90a595bfca" translate="yes" xml:space="preserve">
          <source>Computes the multiset intersection between this array and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cedc9857ccde4f7befaca5f079aabbf466978e" translate="yes" xml:space="preserve">
          <source>Computes the multiset intersection between this immutable sequence and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d51938f74e0d20596761d021f49e072b2e19e8" translate="yes" xml:space="preserve">
          <source>Computes the multiset intersection between this lazy list and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eed1ec7feb3dbf76120c2526b54d0c540a290ea" translate="yes" xml:space="preserve">
          <source>Computes the multiset intersection between this sequence and another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9491f8c4fbec25372ffb139921cb301f3ced5a0a" translate="yes" xml:space="preserve">
          <source>Computes the next element (or returns &lt;code&gt;None&lt;/code&gt; to signal the end of the collection)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b962cb0f9df9b21f12fe646cfd4dcf1aa21fb02a" translate="yes" xml:space="preserve">
          <source>Computes the symmetric difference of this bitset and another bitset by performing a bitwise &quot;exclusive-or&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef82a3d0f5575040c30092451e5797dd9ba2e76f" translate="yes" xml:space="preserve">
          <source>Computes the union between of set and another set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad79ab6353b1eee8ebbc085e10d17c4fcfb024f" translate="yes" xml:space="preserve">
          <source>Concat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66363f767950de27abd0f47e2dbed9395e465b2d" translate="yes" xml:space="preserve">
          <source>Concatenates all argument collections into a single Accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c287b680fa000baff7fdb08fcd23b441bebbd977" translate="yes" xml:space="preserve">
          <source>Concatenates all argument collections into a single collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b3c9b141920340db6db1724862901950af1258" translate="yes" xml:space="preserve">
          <source>Concatenates all argument collections into a single lazy list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb81123d39452c1266d0a59edae8ec113821147" translate="yes" xml:space="preserve">
          <source>Concatenates all arrays into a single array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8b93071b5162e61ce343add8bb292202f7b112" translate="yes" xml:space="preserve">
          <source>Concatenates the target unrolled buffer to this unrolled buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3bab26e41bd0adcf6d99ed773b7fd1ec57c6d5" translate="yes" xml:space="preserve">
          <source>Concepts and Architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eca0238afb681013691b06eeba2afe527a1d2e4" translate="yes" xml:space="preserve">
          <source>Concrete Value Members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfd87528ba87c3ef56c34ea04cf081594c974a7" translate="yes" xml:space="preserve">
          <source>Concurrent map implementations may evaluate the expression &lt;code&gt;op&lt;/code&gt; multiple times, or may evaluate &lt;code&gt;op&lt;/code&gt; without inserting the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e19bdbad38e46f6b19e0227ca469539a6c9c6" translate="yes" xml:space="preserve">
          <source>Connects a stream element type &lt;code&gt;A&lt;/code&gt; to the corresponding, potentially specialized, Stream type. Used in the &lt;code&gt;stream.asJavaPrimitiveStream&lt;/code&gt; extension method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b73fe7dda53c7030c2e7c637af62cba077025e" translate="yes" xml:space="preserve">
          <source>Consider this example for safe and unsafe use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39babaeb124f20c11a8e3ef8f1ca5be2df9d079" translate="yes" xml:space="preserve">
          <source>Consider using the f interpolator as more type safe and idiomatic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0987d53a32240b31b77d62f436f72dac74b2c1" translate="yes" xml:space="preserve">
          <source>Console Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84740452ad6cb8fafc0e809199eb56469ee5fc9" translate="yes" xml:space="preserve">
          <source>Console$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507e6e70a9e3594f4cee8d0eac6d615f0f442743" translate="yes" xml:space="preserve">
          <source>Console$.err()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc93f6a751cd8672aee9b6e0167e7f258c84ff8a" translate="yes" xml:space="preserve">
          <source>Console$.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cce8e14036895fd2f7d23956aeb4d345cf99835" translate="yes" xml:space="preserve">
          <source>Console$.in()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c667a82464da1b1c1fbbd50c9584dad7cf0743" translate="yes" xml:space="preserve">
          <source>Console$.out()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb86281adacccf1020d5a231a383870b7a363a0" translate="yes" xml:space="preserve">
          <source>Console$.print()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812acaec312e222c92c5f239635b2d973855ac60" translate="yes" xml:space="preserve">
          <source>Console$.printf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d9870290880776d067436e88c91b5e2f812791" translate="yes" xml:space="preserve">
          <source>Console$.println()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222abbadd6f862da197fd24e7e9a93e1733a8dd2" translate="yes" xml:space="preserve">
          <source>Console$.setErrDirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898721d16e6a8ff38e18c710ce00c8fb14be639a" translate="yes" xml:space="preserve">
          <source>Console$.setInDirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2484a9ed2362e6f97f353c569c2bec987912033" translate="yes" xml:space="preserve">
          <source>Console$.setOutDirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277a8099bfc5881bb083973ef4f7c27cbccb83cf" translate="yes" xml:space="preserve">
          <source>Console$.withErr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f33224be0153b3f9cf10cdf66f15114870a1e7" translate="yes" xml:space="preserve">
          <source>Console$.withIn()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0e3345ad0b3f6d98383e2761d9c47ac2fa5f43" translate="yes" xml:space="preserve">
          <source>Console$.withOut()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfdb52c2894993f864c2c6043223117cdc64c15" translate="yes" xml:space="preserve">
          <source>Console.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5945e6fc1223eaa29adbf5a120efe732fc958e7" translate="yes" xml:space="preserve">
          <source>Constant annotations are not allowed to define auxiliary constructors, and the primary constructor is required to have a single parameter list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba45eaa0b4d369ffdd6657b49d6503cb79849dce" translate="yes" xml:space="preserve">
          <source>Constant annotations may use default arguments. Note that the internal representation of an annotation usage (which is visible for compiler plugins, for example) only contains arguments that are explicitly provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b535cef228f8366d940a5dbaf7fbe38e0fd941ed" translate="yes" xml:space="preserve">
          <source>ConstantAnnotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef54062a35a415f558d059280017b99caa89e952" translate="yes" xml:space="preserve">
          <source>ConstantAnnotation.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb3235d5e7e5ec02a809d52cc1ee8d3050673d8" translate="yes" xml:space="preserve">
          <source>Construct a Duration from the given length and unit. Observe that nanosecond precision may be lost if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb8c6eeec6ab0af13c18f55c43f2e19078b7fec" translate="yes" xml:space="preserve">
          <source>Construct a LazyList consisting of a given first element followed by elements from another LazyList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412b93177f156ffa6146b674bbd1d59dab5c70ee" translate="yes" xml:space="preserve">
          <source>Construct a LazyList consisting of the concatenation of the given LazyList and another LazyList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3b9eb1b46ed627e2d03c3ab97c19b3ce5f355e" translate="yes" xml:space="preserve">
          <source>Construct a Stream consisting of a given first element followed by elements from another Stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b11d411aab1bf8a3b922cb7a29f09aecc97f94b" translate="yes" xml:space="preserve">
          <source>Construct a Stream consisting of the concatenation of the given Stream and another Stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc378d3c09ca58d658dd1f32f869e218f8c66a0" translate="yes" xml:space="preserve">
          <source>Construct a deadline due exactly at the point where this method is called. Useful for then advancing it to obtain a future deadline, or for sampling the current time exactly once and then comparing it to multiple deadlines (using subtraction).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc208d1bb654aede23b4641647b3775997b13394" translate="yes" xml:space="preserve">
          <source>Construct a finite duration from the given length and time unit, where the latter is looked up in a list of string representation. Valid choices are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86da36e993b31565983a9e418a6d14562a278887" translate="yes" xml:space="preserve">
          <source>Construct a finite duration from the given length and time unit. The unit given is retained throughout calculations as long as possible, so that it can be retrieved later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d57d3d7cf2ec609712c3d4eed2cc3996f401d5" translate="yes" xml:space="preserve">
          <source>Construct a finite duration from the given number of nanoseconds. The result will have the coarsest possible time unit which can exactly express this duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adae2a39dede1192d60f2393a3e8d2172555d35" translate="yes" xml:space="preserve">
          <source>Construct a possibly infinite or undefined Duration from the given number of nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7593a3d798c129eb631a47c01a38fc94cc7250" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; by expanding the binary fraction contained by &lt;code&gt;Double&lt;/code&gt; value &lt;code&gt;d&lt;/code&gt; into a decimal representation, rounding if necessary. When a &lt;code&gt;Float&lt;/code&gt; is converted to a &lt;code&gt;Double&lt;/code&gt;, the binary fraction is preserved, so this method also works for converted &lt;code&gt;Float&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f15fa2da916ff42f7781d2c55e49512df7f6c9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; by expanding the binary fraction contained by &lt;code&gt;Double&lt;/code&gt; value &lt;code&gt;d&lt;/code&gt; into a decimal representation. Note: this also works correctly on converted &lt;code&gt;Float&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ed63e887c7620bea078bbb684f8926c3352ec0" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; by fully expanding the binary fraction contained by &lt;code&gt;Double&lt;/code&gt; value &lt;code&gt;d&lt;/code&gt;, adjusting the precision as necessary. Note: this works correctly on converted &lt;code&gt;Float&lt;/code&gt;s also.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198038c70f06c57e45a082a3ca901530177e543b" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; from a &lt;code&gt;Long&lt;/code&gt;, rounding if necessary. This is identical to &lt;code&gt;BigDecimal(l, mc)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a583f127ddcec63bf2ca8e77d7d7f63e4382b0a" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; from a &lt;code&gt;Long&lt;/code&gt;. This is identical to &lt;code&gt;BigDecimal(l)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37380de644923f1710e9c91470693eb568c5cde8" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; from a &lt;code&gt;java.math.BigDecimal&lt;/code&gt;. The precision is the default for &lt;code&gt;BigDecimal&lt;/code&gt; or enough to represent the &lt;code&gt;java.math.BigDecimal&lt;/code&gt; exactly, whichever is greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497b8c09870ee27e3bceb145ad59acc730c16c08" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; that exactly represents a &lt;code&gt;Long&lt;/code&gt;. Note that all creation methods for &lt;code&gt;BigDecimal&lt;/code&gt; that do not take a &lt;code&gt;MathContext&lt;/code&gt; represent a &lt;code&gt;Long&lt;/code&gt;; this is equivalent to &lt;code&gt;apply&lt;/code&gt;, &lt;code&gt;valueOf&lt;/code&gt;, etc..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66129461a9c6db1135591d26093ac0f066188c9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; using the decimal text representation of &lt;code&gt;Float&lt;/code&gt; value &lt;code&gt;f&lt;/code&gt;, rounding if necessary. Note that &lt;code&gt;BigDecimal.decimal(0.1f) != 0.1f&lt;/code&gt; since equality agrees with the &lt;code&gt;Double&lt;/code&gt; representation, and &lt;code&gt;0.1 != 0.1f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4cd865a972e5de288802f2078f2488b7d95b30" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; using the decimal text representation of &lt;code&gt;Float&lt;/code&gt; value &lt;code&gt;f&lt;/code&gt;. Note that &lt;code&gt;BigDecimal.decimal(0.1f) != 0.1f&lt;/code&gt; since equality agrees with the &lt;code&gt;Double&lt;/code&gt; representation, and &lt;code&gt;0.1 != 0.1f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daf26a30d8efa76bd672e40d9bcd20670afaa37" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; using the java BigDecimal static valueOf constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5355c6c0639cddd4b2e0b26bd3d24c60c7f62d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; using the java BigDecimal static valueOf constructor. Equivalent to &lt;code&gt;BigDecimal.decimal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42852859cba9e5fc3d6bf7d8cceb65e8431efa6d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose unscaled value is equal to that of the specified &lt;code&gt;BigInt&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0010acdfe0855473eb9eef22047d7b1f2729824d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose unscaled value is equal to that of the specified long value, but rounded if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8acc9fc97e9ea1c7180abe1ff044dd9ad9c0c86" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose unscaled value is equal to that of the specified long value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f77aa1db13baf1278887495322e37a923e9c499" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified &lt;code&gt;BigInt&lt;/code&gt; value, rounding if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ea84483104a44871a5d9bc20954976fe97d8b2" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified &lt;code&gt;BigInt&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ea303dfc9e02a7638acc9e90d391cfaf5846cf" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified &lt;code&gt;Integer&lt;/code&gt; value, rounding if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8738725825fbbd565b13c7ae0e294abe1217520c" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified &lt;code&gt;Integer&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0be96bd84e2155f684ace23508149f41398bb4d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified double value, but rounded if necessary. Equivalent to &lt;code&gt;BigDecimal.decimal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d86b48b1ba2f576713610d37cac5bcd0cd1266" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified double value. Equivalent to &lt;code&gt;BigDecimal.decimal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5311ed183c4a42e0c7870675e1bdf13a396c16d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified long value, but rounded if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a317cc51a4fe1f4e914830ee703f4343d9d6c4" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is equal to that of the specified long value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78402fb4ca22c40e6d5dd04903a62e4395f774f3" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigInt&lt;/code&gt; whose value is equal to that of the specified integer value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdccfd453b4c4b82db3da77498e1b393af2e782" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;BigInt&lt;/code&gt; whose value is equal to that of the specified long value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3990d26ac526964c66be71d46a1e418872e63521" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Try&lt;/code&gt; using the by-name parameter. This method will ensure any non-fatal exception is caught and a &lt;code&gt;Failure&lt;/code&gt; object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd50aca92c5f7bbe630e0836656578ca236cc157" translate="yes" xml:space="preserve">
          <source>Constructs a command that will run this command and pipes the output to &lt;code&gt;other&lt;/code&gt;. &lt;code&gt;other&lt;/code&gt; must be a simple command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905864b95deb7be2d39091bd0352c4ebccfd8976" translate="yes" xml:space="preserve">
          <source>Constructs a command that will run this command and then &lt;code&gt;other&lt;/code&gt;. The exit code will be the exit code of &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5279e898097cd819b3d679f7d27b641de98e9c5a" translate="yes" xml:space="preserve">
          <source>Constructs a string builder with no characters in it and an initial capacity specified by the &lt;code&gt;capacity&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e619fc516a0e3dd7b9ac5b6d61618ecc1fe164f" translate="yes" xml:space="preserve">
          <source>Consult the documentation in package &lt;a href=&quot;index&quot; id=&quot;scala.annotation.meta&quot; name=&quot;scala.annotation.meta&quot;&gt;scala.annotation.meta&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c707f2781a489cf7e4ea7d11c190f8dfe3a0bf0" translate="yes" xml:space="preserve">
          <source>Consumer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ca514e37bf89d28bd7b5230186b807eab817a8" translate="yes" xml:space="preserve">
          <source>Contains factory methods for creating execution contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a3573cfc65f20ce3ba30f866ecaf29e7ae1a1e" translate="yes" xml:space="preserve">
          <source>Contains factory methods to build Accumulators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031ec952e81888d2f13b76f8aab30878d48f1ea9" translate="yes" xml:space="preserve">
          <source>Continue the computation with &lt;code&gt;f&lt;/code&gt; and merge the trampolining of this computation with that of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170f8fedfc31a198a157a1d6cdb6e1aced94b627" translate="yes" xml:space="preserve">
          <source>Continue the computation with &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a9c51efd38e062f4b3969450df7ba778752b1e" translate="yes" xml:space="preserve">
          <source>Continuing the analogy with &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;, a &lt;code&gt;LeftProjection&lt;/code&gt; declares that &lt;code&gt;Left&lt;/code&gt; should be analogous to &lt;code&gt;Some&lt;/code&gt; in some code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3784de8a8f5d734624dae763f58bfcac642cf07" translate="yes" xml:space="preserve">
          <source>Continuous output of the process as a &lt;code&gt;LazyList[String]&lt;/code&gt; (&lt;code&gt;lazyLines&lt;/code&gt; methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435ea08ed6c94fafbf708f6f2c89f4a9b143bf35" translate="yes" xml:space="preserve">
          <source>ControlThrowable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc628a3ae715955e81966b50044c829ac33975e" translate="yes" xml:space="preserve">
          <source>ControlThrowable.ControlThrowable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc1f6a5487477afa2aebc739930c1360fa5a919" translate="yes" xml:space="preserve">
          <source>ControlThrowable.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96492f0439bd890b90e89698ccce678700002fa4" translate="yes" xml:space="preserve">
          <source>Convenience for miscellaneous implicit conversions between Java and Scala collections API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739972db12714cb085a6b58150f181f04cc9aa11" translate="yes" xml:space="preserve">
          <source>Convenience for miscellaneous implicit conversions from Java to Scala collections API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a84262d45106d8f4e5f36a65ea63be9e40bed7f" translate="yes" xml:space="preserve">
          <source>Convenience for miscellaneous implicit conversions from Scala to Java collections API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85a104d33e034b4b67c52f721ea41c4e8d999c7" translate="yes" xml:space="preserve">
          <source>Convenient type level function that takes a unary type constructor &lt;code&gt;F[_]&lt;/code&gt; and returns a binary type constructor that tuples its parameters and passes them to &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822a82f42e059548944fc01b1f8b15f5f3b8923a" translate="yes" xml:space="preserve">
          <source>Conversions which present a consistent conversion interface across all the numeric types, suitable for use in value classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4e89e784800a7895f3217c53797fdd6f6869ca" translate="yes" xml:space="preserve">
          <source>Convert a Java &lt;code&gt;OptionalDouble&lt;/code&gt; to a Scala &lt;code&gt;Option[java.lang.Double]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967ca114ba631812583aec53907bd8488cf0abe0" translate="yes" xml:space="preserve">
          <source>Convert a Java &lt;code&gt;OptionalInt&lt;/code&gt; to a Scala &lt;code&gt;Option[java.lang.Integer]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6297bbc0f0acf13eeec87ce1ba47212e2d22c519" translate="yes" xml:space="preserve">
          <source>Convert a Java &lt;code&gt;OptionalLong&lt;/code&gt; to a Scala &lt;code&gt;Option[java.lang.Long]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a35c1724f135ecb41e42aadcfb73c1733a78c89" translate="yes" xml:space="preserve">
          <source>Convert a Java duration to a Scala duration. If the nanosecond part of the Java duration is zero, the returned duration will have a time unit of seconds. If there is a nanoseconds part, the Scala duration will have a time unit of nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623184fc0e0c16afe0d5daea8ba8400b0dabf168" translate="yes" xml:space="preserve">
          <source>Convert a Scala &lt;code&gt;FiniteDuration&lt;/code&gt; to a Java duration. Note that the Scala duration keeps the time unit it was created with, while a Java duration always is a pair of seconds and nanos, so the unit it lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11431427a2ca503a12cee95395730e809866e6b" translate="yes" xml:space="preserve">
          <source>Convert a Scala &lt;code&gt;Option[java.lang.Double]&lt;/code&gt; to a Java &lt;code&gt;OptionalDouble&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b81129f339574307a77d0305ab3f23c7ae01148" translate="yes" xml:space="preserve">
          <source>Convert a Scala &lt;code&gt;Option[java.lang.Integer]&lt;/code&gt; to a Java &lt;code&gt;OptionalInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5f935f4e8c3ba281dd33df457bc0f459017684" translate="yes" xml:space="preserve">
          <source>Convert a Scala &lt;code&gt;Option[java.lang.Long]&lt;/code&gt; to a Java &lt;code&gt;OptionalLong&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d89dc03aef6e2a2c56b0a26f5978c7cd0c77184" translate="yes" xml:space="preserve">
          <source>Convert collection to array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258cb62db9130db415cd662cabf79df3194da513" translate="yes" xml:space="preserve">
          <source>Converting a Java function to Scala is done using the &lt;code&gt;asScala&lt;/code&gt; extension method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf3a7dc827998c2356e40e21cbaee0e947e609f" translate="yes" xml:space="preserve">
          <source>Converting a parallel streams to an &lt;span name=&quot;Accumulator&quot;&gt;Accumulator&lt;/span&gt; using &lt;code&gt;stream.toScala(Accumulator)&lt;/code&gt; builds the result in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eabbfbe90d4c93e70d7c3f82b63588484155c4e" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Collection&lt;/code&gt; to a Scala &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcf549366187a023173aca33745a2faf5c34555" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;ConcurrentMap&lt;/code&gt; to a Scala mutable &lt;code&gt;ConcurrentMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4697d134ff86c221f3b91dd94c9f3478ab997da" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Dictionary&lt;/code&gt; to a Scala mutable &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabd8d3fd39037983cd5b7b7541eeb0e1e8d7533" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Enumeration&lt;/code&gt; to a Scala &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba015dc7914a89cfa3830e6b2caeb5295dfd90c" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Iterable&lt;/code&gt; to a Scala &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781ebd9d9368aaf55adfd19df76d0fc7f689548f" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Iterator&lt;/code&gt; to a Scala &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c41389d97b1136c265e3070c395f7514a4c9f1" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;List&lt;/code&gt; to a Scala mutable &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39463467e173b74da6636788e72d287e25708d61" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Map&lt;/code&gt; to a Scala mutable &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b380091e9389fbbbd041292592a9f641eb13f10" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Properties&lt;/code&gt; to a Scala mutable &lt;code&gt;Map[String, String]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dba1719cb1934f66cab4330d9382e383c3aabf" translate="yes" xml:space="preserve">
          <source>Converts a Java &lt;code&gt;Set&lt;/code&gt; to a Scala mutable &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b095b50a17f9c3a9b59e20c318e9fa7bf3647f6" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Iterable&lt;/code&gt; to a Java &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4908eb7dc931487428ce46cb75523b0bac2df8" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Iterable&lt;/code&gt; to an immutable Java &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf11f5a9f6d3cdf014f1c2ab9274ecb7ecedef0" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Iterator&lt;/code&gt; to a Java &lt;code&gt;Enumeration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7508def570771ceaace2b0b7886ee66066ea9b4f" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Iterator&lt;/code&gt; to a Java &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52a6ef7e05e3bf32899c41d4bb0c1db37685198" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4021d8b96c39acce4ccdb046c50bbacc5114649e" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Seq&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2b6557f771e4029102c4c8aed52d13526df057" translate="yes" xml:space="preserve">
          <source>Converts a Scala &lt;code&gt;Set&lt;/code&gt; to a Java &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4415a441782560f1998c80f48b71effd890bbece" translate="yes" xml:space="preserve">
          <source>Converts a Scala mutable &lt;code&gt;Buffer&lt;/code&gt; to a Java List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa94f7574624f3c3261870e9e0266590877cee0" translate="yes" xml:space="preserve">
          <source>Converts a Scala mutable &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Dictionary&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c63c91ae3a81102f6108eeb103fbca0185d01a" translate="yes" xml:space="preserve">
          <source>Converts a Scala mutable &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdceda2dfb3bd23cef26d9115b2aab6cca28d8e5" translate="yes" xml:space="preserve">
          <source>Converts a Scala mutable &lt;code&gt;Seq&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c42b5f50cb7c5de01af2dc97a26e4686efb264" translate="yes" xml:space="preserve">
          <source>Converts a Scala mutable &lt;code&gt;Set&lt;/code&gt; to a Java &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d294fe3089d512acaddbb6e122d953cdce95b6c" translate="yes" xml:space="preserve">
          <source>Converts a Scala mutable &lt;code&gt;concurrent.Map&lt;/code&gt; to a Java &lt;code&gt;ConcurrentMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f934c2b79df5818040faa4019ea47cbd5486dd33" translate="yes" xml:space="preserve">
          <source>Converts an Option of a pair into an Option of the first element and an Option of the second element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c437606735378c2471b02b21ba98f5c68c98a52" translate="yes" xml:space="preserve">
          <source>Converts an Option of a triple into three Options, one containing the element from each position of the triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee464a623f6f3337f14099defed3a1d8bd7f5f2" translate="yes" xml:space="preserve">
          <source>Converts an angle measured in degrees to an approximately equivalent angle measured in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48b24f51beac3c2423787ba8dd90b750d87551c" translate="yes" xml:space="preserve">
          <source>Converts an angle measured in radians to an approximately equivalent angle measured in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cb10f1d23993e00c7ede8919a4becf85be6997" translate="yes" xml:space="preserve">
          <source>Converts an array of pairs into an array of first elements and an array of second elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c269d56f6fe45f1b435ed078e61fd3d3be9da5d0" translate="yes" xml:space="preserve">
          <source>Converts an array of triples into three arrays, one containing the elements from each position of the triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8881f6788504c914a2f15b0f62b8225dc7814c8" translate="yes" xml:space="preserve">
          <source>Converts an optional function to a partial function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca5dcedcb74b7b04b87dd3a94a7a634e0bdaf89" translate="yes" xml:space="preserve">
          <source>Converts an ordinary function to a partial function. Note that calling &lt;code&gt;isDefinedAt(x)&lt;/code&gt; on this partial function will return &lt;code&gt;true&lt;/code&gt; for every &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4608dd1bbee0f7070f72941f3154210c3000bec" translate="yes" xml:space="preserve">
          <source>Converts rectangular coordinates &lt;code&gt;(x, y)&lt;/code&gt; to polar &lt;code&gt;(r, theta)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7736e37da099d69c588e73512978812919e28bca" translate="yes" xml:space="preserve">
          <source>Converts the value by applying the function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f5cbee4229614d5b47f3243ba833786d18a029" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part, or is out of the possible range for a &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;scala.Byte&lt;/a&gt; result, then a &lt;code&gt;java.lang.ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a04460e5040521b1f907ad8f591246f7526376c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part, or is out of the possible range for an &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt; result, then a &lt;code&gt;java.lang.ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200a5a38e6e1dd4cd400a6155bca0462693b7604" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part, or is out of the possible range for a &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt; result, then a &lt;code&gt;java.lang.ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4c2bce5ef9f34c293415288fc24e6e9438572d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt;, checking for lost information. If this &lt;code&gt;BigDecimal&lt;/code&gt; has a nonzero fractional part, or is out of the possible range for a &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;scala.Short&lt;/a&gt; result, then a &lt;code&gt;java.lang.ArithmeticException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c839c1531a1432c335f5ee218ee874f446c1ec" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigInt&lt;/code&gt; to a &lt;code&gt;double&lt;/code&gt;. if this &lt;code&gt;BigInt&lt;/code&gt; has too great a magnitude to represent as a double, it will be converted to &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e449cda6aae7627f228f81a541d378a86d16e5d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;BigInt&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;. If this &lt;code&gt;BigInt&lt;/code&gt; has too great a magnitude to represent as a float, it will be converted to &lt;code&gt;Float.NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6fe55fcd1ca6d563870c02d0f4e376a7a7c724" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to a Byte. If the BigDecimal is too big to fit in a Byte, only the low-order 8 bits are returned. Note that this conversion can lose information about the overall magnitude of the BigDecimal value as well as return a result with the opposite sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8acc7514623363ad99ca463d897b2ffcd55e6d" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to a Char. If the BigDecimal is too big to fit in a Char, only the low-order 16 bits are returned. Note that this conversion can lose information about the overall magnitude of the BigDecimal value and that it always returns a positive result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7aacea6235da6f5e8aa40d2df1d2ff9504a94" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to a Double. if this BigDecimal has too great a magnitude to represent as a double, it will be converted to &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a2d2e7a9c3df9bb6c67ddebd68a4aabe406ab4" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to a Float. if this BigDecimal has too great a magnitude to represent as a float, it will be converted to &lt;code&gt;Float.NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a597294f9001ac839df1862f66e8d3f7315091" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to a Long. If the BigDecimal is too big to fit in a Long, only the low-order 64 bits are returned. Note that this conversion can lose information about the overall magnitude of the BigDecimal value as well as return a result with the opposite sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d1962a9367d0b3439dbe207601c5ef1e3571a5" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to a Short. If the BigDecimal is too big to fit in a Short, only the low-order 16 bits are returned. Note that this conversion can lose information about the overall magnitude of the BigDecimal value as well as return a result with the opposite sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2b0ea41e13d9ea78b7a4908ae63a121d2c4c11" translate="yes" xml:space="preserve">
          <source>Converts this BigDecimal to an Int. If the BigDecimal is too big to fit in an Int, only the low-order 32 bits are returned. Note that this conversion can lose information about the overall magnitude of the BigDecimal value as well as return a result with the opposite sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca10e113d8a3335a25fd6dad5e57cf6254696cc5" translate="yes" xml:space="preserve">
          <source>Converts this BigInt to a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b17cd647ba5832b7dd1fde48155db3a783c233b" translate="yes" xml:space="preserve">
          <source>Converts this BigInt to an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d135de33121c455ae3fa86d40f65860ae5b8c41c" translate="yes" xml:space="preserve">
          <source>Converts this collection of traversable collections into a collection formed by the elements of these traversable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce73464290ebb10c02e282aa3e77a36b59f2833" translate="yes" xml:space="preserve">
          <source>Converts this immutable sequence of pairs into two collections of the first and second half of each pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ab17a25dc269237e45381c88efdd44ed06d4a4" translate="yes" xml:space="preserve">
          <source>Converts this immutable sequence of traversable collections into a immutable sequence formed by the elements of these traversable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098f863f317b638bdd41fb742cf0b45a423a563e" translate="yes" xml:space="preserve">
          <source>Converts this immutable sequence of triples into three collections of the first, second, and third element of each triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834f23033d2fdae67e00564b3ddf342df695c922" translate="yes" xml:space="preserve">
          <source>Converts this iterable collection of pairs into two collections of the first and second half of each pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b0d6de321272f1f9c495c562b70f57ed8eee57" translate="yes" xml:space="preserve">
          <source>Converts this iterable collection of traversable collections into a iterable collection formed by the elements of these traversable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e13d95050a8ef641e914677ca0b0d3405dea1dd" translate="yes" xml:space="preserve">
          <source>Converts this iterable collection of triples into three collections of the first, second, and third element of each triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6c519f926037f5206182bc2eb864b66c342627" translate="yes" xml:space="preserve">
          <source>Converts this iterable collection to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad43b524e8aac26774678676640288097a3d40c" translate="yes" xml:space="preserve">
          <source>Converts this iterator of traversable collections into a iterator formed by the elements of these traversable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c00eb7c1a5f5240292c9e4768e54595daa90f4" translate="yes" xml:space="preserve">
          <source>Converts this iterator to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fb68771d7fd6ed600a4747226f4649975f74e8" translate="yes" xml:space="preserve">
          <source>Converts this lazy list of pairs into two collections of the first and second half of each pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebe0d16dc3f2c388b04bba28df77a1513d58d0c" translate="yes" xml:space="preserve">
          <source>Converts this lazy list of traversable collections into a lazy list formed by the elements of these traversable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb00b51185cce721881b9fa58b15cba051efd92c" translate="yes" xml:space="preserve">
          <source>Converts this lazy list of triples into three collections of the first, second, and third element of each triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180be5c9bb70c1a97be17a090a86dcf35807ffb3" translate="yes" xml:space="preserve">
          <source>Converts this list of pairs into two collections of the first and second half of each pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac85760206a95d076201b931f889744a74f4609" translate="yes" xml:space="preserve">
          <source>Converts this priority queue to a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aceb3a38f726dc5203d596089e0a2648edfbd21" translate="yes" xml:space="preserve">
          <source>Converts this sequence to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332382c66cf5463e87e74cf521011d5bfd191289" translate="yes" xml:space="preserve">
          <source>Converts this symbol to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1678387c68faf3562998170ab9d5e602ac555ba4" translate="yes" xml:space="preserve">
          <source>Converts this to a &lt;code&gt;Failure&lt;/code&gt; if the predicate is not satisfied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07bba4e827a5237a4d3e7fa771284de14be4f1d" translate="yes" xml:space="preserve">
          <source>Converts this view of pairs into two collections of the first and second half of each pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2c9ea0bec797cbc77e6250fc78d0e459398abd" translate="yes" xml:space="preserve">
          <source>Converts this view of traversable collections into a view formed by the elements of these traversable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0051ae45c55e04689a17f714c1950484c4a54e" translate="yes" xml:space="preserve">
          <source>Converts this view of triples into three collections of the first, second, and third element of each triple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb7f5b9653d6934ec2a51edb2376a3af8772523" translate="yes" xml:space="preserve">
          <source>Converts this view to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a278f8aaaf8cf559425e84955f00fd8ba84faaee" translate="yes" xml:space="preserve">
          <source>Copies the elements in this &lt;code&gt;AnyAccumulator&lt;/code&gt; to a &lt;code&gt;List&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180d4669f82af7ef364f6edbb65406161285a67e" translate="yes" xml:space="preserve">
          <source>Copies the elements in this &lt;code&gt;DoubleAccumulator&lt;/code&gt; to a &lt;code&gt;List&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3e4d58d9854fcec394635587c17834b8b00519" translate="yes" xml:space="preserve">
          <source>Copies the elements in this &lt;code&gt;IntAccumulator&lt;/code&gt; to a &lt;code&gt;List&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f3c4176411b0ed25de4ea16604ff48a2a60f7c" translate="yes" xml:space="preserve">
          <source>Copies the elements in this &lt;code&gt;LongAccumulator&lt;/code&gt; to a &lt;code&gt;List&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7225a86a1bd62825339fa947a7d1f68607926710" translate="yes" xml:space="preserve">
          <source>Copy all input from the input stream to the output stream. Closes the input stream once it's all read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b4b1f92823127fef167fac3c5ffa2056a9b02a" translate="yes" xml:space="preserve">
          <source>Copy chars of this string to an array. Fills the given array &lt;code&gt;xs&lt;/code&gt; starting at index 0. Copying will stop once either the entire string has been copied or the end of the array is reached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8867ec11efa50291bac6b5b66d412209a0d9899" translate="yes" xml:space="preserve">
          <source>Copy chars of this string to an array. Fills the given array &lt;code&gt;xs&lt;/code&gt; starting at index &lt;code&gt;start&lt;/code&gt; with at most &lt;code&gt;len&lt;/code&gt; chars. Copying will stop once either the entire string has been copied, or the end of the array is reached or &lt;code&gt;len&lt;/code&gt; chars have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449e27ad686d1e3e30ffc726ecc793a8b683a764" translate="yes" xml:space="preserve">
          <source>Copy chars of this string to an array. Fills the given array &lt;code&gt;xs&lt;/code&gt; starting at index &lt;code&gt;start&lt;/code&gt;. Copying will stop once either the entire string has been copied or the end of the array is reached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4611aa998b9c8a4d4e65ae0ded9db80bf263d84" translate="yes" xml:space="preserve">
          <source>Copy elements of this array to another array. Fills the given array &lt;code&gt;xs&lt;/code&gt; starting at index 0. Copying will stop once either all the elements of this array have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe7bb230d6061b6bd844a54fef2aa9936eb626e" translate="yes" xml:space="preserve">
          <source>Copy elements of this array to another array. Fills the given array &lt;code&gt;xs&lt;/code&gt; starting at index &lt;code&gt;start&lt;/code&gt; with at most &lt;code&gt;len&lt;/code&gt; values. Copying will stop once either all the elements of this array have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b403a1767f815141cf3cacd15f856c701ddb142" translate="yes" xml:space="preserve">
          <source>Copy elements of this array to another array. Fills the given array &lt;code&gt;xs&lt;/code&gt; starting at index &lt;code&gt;start&lt;/code&gt;. Copying will stop once either all the elements of this array have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6177c39c5500d67a3ea03912e88c5689db8c0c0b" translate="yes" xml:space="preserve">
          <source>Copy elements to an array, returning the number of elements written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b6e249854208ff9081ece0250f399b14b882b1" translate="yes" xml:space="preserve">
          <source>Copy one array to another, truncating or padding with default values (if necessary) so the copy has the specified length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bde3758c35c79da1ccfc3a165c283c92a4fc1a" translate="yes" xml:space="preserve">
          <source>Copy one array to another, truncating or padding with default values (if necessary) so the copy has the specified length. The new array can have a different type than the original one as long as the values are assignment-compatible. When copying between primitive and object arrays, boxing and unboxing are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b0162de81a2638d637c1b66ce0e57d3655bf8b" translate="yes" xml:space="preserve">
          <source>Copy one array to another. Equivalent to Java's &lt;code&gt;System.arraycopy(src, srcPos, dest, destPos, length)&lt;/code&gt;, except that this also works for polymorphic and boxed arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8537cdbcd3966fb69cea46e97c23b4109034a3" translate="yes" xml:space="preserve">
          <source>Copy the elements in this &lt;code&gt;AnyAccumulator&lt;/code&gt; into an &lt;code&gt;Array&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37db950b0883cbc4595c05eed73ab6df040cceea" translate="yes" xml:space="preserve">
          <source>Copy the elements in this &lt;code&gt;AnyAccumulator&lt;/code&gt; to a specified collection. Example use: &lt;code&gt;acc.to(Vector)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c02b74a6b43d32c7318abbcf7dfe5130fd8214" translate="yes" xml:space="preserve">
          <source>Copy the elements in this &lt;code&gt;DoubleAccumulator&lt;/code&gt; to a specified collection. Note that the target collection is not specialized. Usage example: &lt;code&gt;acc.to(Vector)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8c808f80d5a76e3f69e030e3a224cc77da0575" translate="yes" xml:space="preserve">
          <source>Copy the elements in this &lt;code&gt;LongAccumulator&lt;/code&gt; to a specified collection. Note that the target collection is not specialized. Usage example: &lt;code&gt;acc.to(Vector)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2608b51cea1f16c08df9e25ebca6f14a8c814677" translate="yes" xml:space="preserve">
          <source>Copy the elements of this stream into a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640d32104a0a9f0b4f33ea0cdb26774d77abd4be" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this array buffer have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f53cfe2c7f4fcea07343fd12b553254d61715e3" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this array buffer have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ea9e3bad8b6d262a8f641515ee6492db245f21" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this array deque have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b996b2bb064985404ab94aac2277fc42d43039" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this collection have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da44198a668240b9a56230c4b2df9edb2ccdac8" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this collection have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d0d378c900353e55a5afd64381aac27e5d4438" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this immutable array have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dadab5bae047a98f7c1e26cb9e3eb79adbf5fd0" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this immutable array have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d0abe810677bd29ac754e267b7d40357576018" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this immutable sequence have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab07579f380da77b2cf4329a2dea67a9a8e1352e" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this immutable sequence have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc230a49e8c38a9ef9c69e7f3246854efb923e7" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this iterable collection have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db27246e3fb79cdcace5e5c88acd4acd6b2702f" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this iterable collection have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b101a350acf670edfb1175e253eeb9e709020930" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this iterator have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fed8b971973a92982a85a30ece601db454c155e" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this priority queue have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476f5d65b0dcb75a9611a04a32ed5d0f76ab7a99" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this priority queue have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0f8942aa2d1b6267da8518fec1086fe8c81565" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this vector have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2246b89a98f5cd071d962c1e81e1bf390c751b" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this view have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35f66ae8e6ba13d1f969cae54c312185f586a99" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this view have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd0774c5e2743639d72eaa1d4cdc957460fb728" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this wrapped array have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dde7783c7dcb53cbd666e780f643574b3cf63fb" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this wrapped array have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50120ab1db4bca103e2475b62a1eff964d0ec5c4" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this wrapped string have been copied, or the end of the array is reached, or &lt;code&gt;len&lt;/code&gt; elements have been copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22b9db5bc6b494c89df3b4dd63678105b39bf75" translate="yes" xml:space="preserve">
          <source>Copying will stop once either all the elements of this wrapped string have been copied, or the end of the array is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43870887f2060d4f911233f1243070d9c2a9378b" translate="yes" xml:space="preserve">
          <source>Core Scala types. They are always available without an explicit import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ad791aa5cfabb76371acbbe680ee06d42532b1" translate="yes" xml:space="preserve">
          <source>Correspondence to Double Semantics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0935d596237312190a842d9741986cfd6475637d" translate="yes" xml:space="preserve">
          <source>Counts the number of elements in the collection which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90726ca41d60a4d4182aa95131ce96686ab9a20" translate="yes" xml:space="preserve">
          <source>Counts the number of elements in the growable collection which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed8904ce79746ba5a5a6f1ee8fad59a814943d3" translate="yes" xml:space="preserve">
          <source>Counts the number of elements in the immutable sequence which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29837cc89b6f9635f5d7b34cd8ec0607466c7f36" translate="yes" xml:space="preserve">
          <source>Counts the number of elements in the iterable collection which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f06598402bf17acd9ebd7f5bfad6b5a5f8092ef" translate="yes" xml:space="preserve">
          <source>Counts the number of elements in the view which satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0133aa40e3537f4c4aa9b5981821348eb3c07f8b" translate="yes" xml:space="preserve">
          <source>Counts the number of elements in this array which satisfy a predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9f9b5cb1f81cd478124c9c1d19b7b361988947" translate="yes" xml:space="preserve">
          <source>Counts the number of range elements. precondition: step != 0 If the size of the range exceeds Int.MaxValue, the result will be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc7fc690a83c8fbd8d4b32d08354807d9699713" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Catch&lt;/code&gt; which handles specified exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c6abc29691d46a05399772f286bcc4a353d21c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Catch&lt;/code&gt; which logs exceptions using &lt;code&gt;handling&lt;/code&gt; and &lt;code&gt;by&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2975875c5c3d15633547ad9eacfd4802fe0214bb" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;NumericRange[BigInt]&lt;/code&gt; in range &lt;code&gt;[start;end)&lt;/code&gt; with the specified step, where start is the target BigInt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0371da96bae18ec5b1f360e287f91a728ddd6e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Source&lt;/code&gt; from array of bytes, decoding the bytes according to codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4260a0ea858468b6e0c66f3c7cf3903081bdf8db" translate="yes" xml:space="preserve">
          <source>Create a ValueSet which contains this value and another one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05426e0cada13ee22b433bd29a6d7669d29ad3b1" translate="yes" xml:space="preserve">
          <source>Create a copy of the receiver object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5417b8519cc114051d71eb2d6c6dbb5cda43d06" translate="yes" xml:space="preserve">
          <source>Create a copy of this array with the specified element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f2af0de1bb439a9fb041358d235c69933cd71e" translate="yes" xml:space="preserve">
          <source>Create a copy of this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ea29ad92af6abc1296bf4a048260a7bb1ac06f" translate="yes" xml:space="preserve">
          <source>Create a new Builder which can be reused after calling &lt;code&gt;result()&lt;/code&gt; without an intermediate call to &lt;code&gt;clear()&lt;/code&gt; in order to build multiple related results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eeb77c03621a062c640b2e045623c52dc7643b" translate="yes" xml:space="preserve">
          <source>Create a new Catch container from this object and the supplied finally body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4970a1d0f48af13bb0f0f228bf2147d7e102e97b" translate="yes" xml:space="preserve">
          <source>Create a new Regex with the same pattern, but no requirement that the entire String matches in extractor patterns and &lt;a href=&quot;#matches(source:CharSequence):Boolean&quot; id=&quot;scala.util.matching.Regex#matches&quot; name=&quot;scala.util.matching.Regex#matches&quot;&gt;Regex#matches&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f95ad2041e938bcb650793c8b3aa40a102020c" translate="yes" xml:space="preserve">
          <source>Create a new Regex with the same pattern, but no requirement that the entire String matches in extractor patterns and &lt;a href=&quot;regex#matches(source:CharSequence):Boolean&quot; id=&quot;scala.util.matching.Regex#matches&quot; name=&quot;scala.util.matching.Regex#matches&quot;&gt;Regex#matches&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a3387a0a975ef99c413b7b7830443c793baf6d" translate="yes" xml:space="preserve">
          <source>Create a new range with the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; values of this range and a new &lt;code&gt;step&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebd52e8c082367ff555aaf3ab2f7412c9c13e7d" translate="yes" xml:space="preserve">
          <source>Create a new range with the start and end values of this range and a new &lt;code&gt;step&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0439cc86ecc0061e9fd816d0e250f6efc5ed2fd8" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 1 elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defc9bb62560830ef5504c151e1e856d8da5ca1f" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 10 elements. Note that it is more idiomatic to create a Tuple10 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5933c64e254ed9e4413ad74d004c91fb6a390b5d" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 11 elements. Note that it is more idiomatic to create a Tuple11 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ee2bc33af2a4445b84be9807ca49e70a34eb82" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 12 elements. Note that it is more idiomatic to create a Tuple12 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7ad6845ed297eaa65644185b6938939cff206e" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 13 elements. Note that it is more idiomatic to create a Tuple13 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f17b127957de2a09e1748081b7f6a4dc0763cb" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 14 elements. Note that it is more idiomatic to create a Tuple14 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf6a48fe130609bc91bebe8f16b76865393571" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 15 elements. Note that it is more idiomatic to create a Tuple15 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875e15a9caa4ab6f9dcd02bd2c20c3e12b413bc8" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 16 elements. Note that it is more idiomatic to create a Tuple16 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e90a5b4557ebdf95ac44748c7542577b1c69fe" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 17 elements. Note that it is more idiomatic to create a Tuple17 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c2153a3ca2de900c45cb64e7def2260d05dcb6" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 18 elements. Note that it is more idiomatic to create a Tuple18 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6ea8c0fc6d92e159e2fe39341cb251e8573731" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 19 elements. Note that it is more idiomatic to create a Tuple19 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a66925969791d8c18453cf3eaa93c7aa6b79185" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 2 elements. Note that it is more idiomatic to create a Tuple2 via &lt;code&gt;(t1, t2)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2cc508964815cda92b36d2e019db25015d1df1" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 20 elements. Note that it is more idiomatic to create a Tuple20 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5502061b4cea7d73cd455fba28ee906c06245cb0" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 21 elements. Note that it is more idiomatic to create a Tuple21 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc39d11c20462f5856f7503e270516aa242af27e" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 22 elements. Note that it is more idiomatic to create a Tuple22 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcab0f1154836bfefb4c2892b83f5ef2fd8239b" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 3 elements. Note that it is more idiomatic to create a Tuple3 via &lt;code&gt;(t1, t2, t3)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005ccfbf6471f7943b793b97e9168ca1cac03436" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 4 elements. Note that it is more idiomatic to create a Tuple4 via &lt;code&gt;(t1, t2, t3, t4)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73991197991669393a055639ffdea6b8973543be" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 5 elements. Note that it is more idiomatic to create a Tuple5 via &lt;code&gt;(t1, t2, t3, t4, t5)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f8f3686286fd8bf7407ab3acaac93d08692bdb" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 6 elements. Note that it is more idiomatic to create a Tuple6 via &lt;code&gt;(t1, t2, t3, t4, t5, t6)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ce4c1fdff9a18a3d53ef74ed15dec9b91f75ea" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 7 elements. Note that it is more idiomatic to create a Tuple7 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3786f6ed8dfd916e6a0e581b285d8f88d713fee" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 8 elements. Note that it is more idiomatic to create a Tuple8 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc55f16b95b3b98efde4ed9d57b3b34de4a7d51b" translate="yes" xml:space="preserve">
          <source>Create a new tuple with 9 elements. Note that it is more idiomatic to create a Tuple9 via &lt;code&gt;(t1, t2, t3, t4, t5, t6, t7, t8, t9)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f2fd3f89a959fe71a120cb66fca72c6213a729" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;Java DoubleStream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e433c8230bc3ab4f73a72a98b538323a53fb5f2b" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;Java DoubleStream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c914df9e1b9494f82c8f19d3abad3aa732ade92a" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;Java DoubleStream&lt;/span&gt; for the values of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c0d2edaa9f0decb254e8295e813f0309b0bcb9" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;Java IntStream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f6b8ecaa0596c0b307c11ece4e4cab3cdb490b" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;Java IntStream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45c3c26b6afd0c1de2d973c7db0c637885016f8" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;Java IntStream&lt;/span&gt; for the values of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f6721e2a95a7d48db356e7d319f7caf79790fc" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;Java LongStream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac713ca59412c2e41052c547952bc577698fd9d8" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;Java LongStream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15d44fff96921039c5ac3b1d4c91a90853d6f6f" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;Java LongStream&lt;/span&gt; for the values of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2f70f0030f690f998355c8a4397a027234e8af" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdba82a53083891cd6267cd09cec149533931556" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b9fae826c53c1b1a2a924581a1dcf7e7892d7d" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for the keys of this map. If the keys are primitive values, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c682eb6264a0810e6f36df4217e28ae3b8b5921" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for the values of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1508a7df319d6441e0a7470ab73533b2bd34db5" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for the values of this map. If the values are primitives, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928038926b8cbbd8d190ca428c0b81522a5406b0" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for this collection. If the collection contains primitive values, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea86b3ca6e9c8fd12ac5b9b8840ec53b3f8ead6" translate="yes" xml:space="preserve">
          <source>Create a parallel &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for this stepper. If the stepper yields primitive values, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e941b3d9d9f013632de629ad807386def2738fc" translate="yes" xml:space="preserve">
          <source>Create a range projection of this collection with no lower-bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3481aaf46b2df3eb946c798f6fcf244f5b51d2a" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;Java DoubleStream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fde6c5f6f855ff66a264cb8775153833b6bd83c" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;Java DoubleStream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54586d4623f9054ef914db8dffab6471a91602f9" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;Java DoubleStream&lt;/span&gt; for the values of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3d696b23863ac8d51b1dd9039971b98b291951" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;Java IntStream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a95c6780908a88f58dee637702eac40ca8948d3" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;Java IntStream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b6c584454ccf7da20608a758d0eace367a6776" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;Java IntStream&lt;/span&gt; for the values of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3a0d47eef0d548b88990f1d0cf1bbac5127e69" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;Java LongStream&lt;/span&gt; for a Scala collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce8b7e5508bf95bb28ff313b13d53014bc463c8" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;Java LongStream&lt;/span&gt; for the keys of a Scala Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23f7abfa8637f62ad723b73d45e30d28f289d70" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;Java LongStream&lt;/span&gt; for the values of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b092938ad81fa4fc64f9e9720b19a79d8adc106e" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for the keys of this map. If the keys are primitive values, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfff6117d452e3c34dd9654d32bd3b2ddbd311cb" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for the values of this map. If the values are primitives, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a1c2da5f011e6bdce43552ed0c501950159326" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for this collection. If the collection contains primitive values, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662f87566f0c492b88431ae096cf70911873c9a0" translate="yes" xml:space="preserve">
          <source>Create a sequential &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Stream&lt;/span&gt; for this stepper. If the stepper yields primitive values, a corresponding specialized Stream is returned (e.g., &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/span&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d136ff5e09323c0d41a4246ba7fb37f62ef7e2" translate="yes" xml:space="preserve">
          <source>Create an infinite LazyList containing the given element expression (which is computed for each occurrence).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096c0185c2c2172979cfa7c19609ad299904df06" translate="yes" xml:space="preserve">
          <source>Create an infinite LazyList starting at &lt;code&gt;start&lt;/code&gt; and incrementing by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88aff7c37404a553eb82a17a393c0823a0d97028" translate="yes" xml:space="preserve">
          <source>Create an infinite LazyList starting at &lt;code&gt;start&lt;/code&gt; and incrementing by step &lt;code&gt;step&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c231dad4baed9242f401064c93ef60b291665e7a" translate="yes" xml:space="preserve">
          <source>Create an infinite Stream containing the given element expression (which is computed for each occurrence).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d93783163838a642831a054caf8f7d96d31406" translate="yes" xml:space="preserve">
          <source>Create an infinite Stream starting at &lt;code&gt;start&lt;/code&gt; and incrementing by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e240a80a0ab0da4bf5009d9c0a9fc7115e83e809" translate="yes" xml:space="preserve">
          <source>Create an infinite Stream starting at &lt;code&gt;start&lt;/code&gt; and incrementing by step &lt;code&gt;step&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6996ebd060140e0a8ee8e9859d24f4a79f55a250" translate="yes" xml:space="preserve">
          <source>Create an unboxing primitive parallel (i.e. &lt;code&gt;with EfficientSplit&lt;/code&gt;) Stepper from a boxed &lt;code&gt;AnyStepper&lt;/code&gt;. This is an identity operation for reference shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565a8cb26aa405fbd9ec4f5add73096076b74c95" translate="yes" xml:space="preserve">
          <source>Create an unboxing primitive sequential Stepper from a boxed &lt;code&gt;AnyStepper&lt;/code&gt;. This is an identity operation for reference shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b0bc5e730179f897e7b4c3b4996fbc7d5fb2c2" translate="yes" xml:space="preserve">
          <source>Creates Source from &lt;code&gt;file&lt;/code&gt;, using given character encoding, setting its description to filename. Input is buffered in a buffer of size &lt;code&gt;bufferSize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c99f38b2eb43fe0ea7f4704e93c02582e9432d" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a &lt;code&gt;Boolean&lt;/code&gt;. This can be to force an exit value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29ccbb1b47e8b75bca889ccb6786904b9b68ea7" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a &lt;code&gt;String&lt;/code&gt; name and a &lt;code&gt;Boolean&lt;/code&gt;. This can be used to force an exit value, with the name being used for &lt;code&gt;toString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9f13f036b01473f8d5e13060f25d89fcda413b" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a &lt;code&gt;String&lt;/code&gt;, including the parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe35af191d93aa77b972915bec9725baf1c7453" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a &lt;code&gt;java.io.File&lt;/code&gt;. This &lt;code&gt;ProcessBuilder&lt;/code&gt; can then be used as a &lt;code&gt;Source&lt;/code&gt; or a &lt;code&gt;Sink&lt;/code&gt;, so one can pipe things from and to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f5f7af933bbb5132a5230a49c58fc08d06761b" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a &lt;code&gt;java.lang.ProcessBuilder&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c24562586f01ceed5534ad55cef7535e73f2a5" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a &lt;code&gt;java.net.URL&lt;/code&gt;. This &lt;code&gt;ProcessBuilder&lt;/code&gt; can then be used as a &lt;code&gt;Source&lt;/code&gt;, so that one can pipe things from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf9e6086ad7dad81948b51ab1e9ecdca72a4517" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a command represented by a &lt;code&gt;String&lt;/code&gt;, and a sequence of &lt;code&gt;String&lt;/code&gt; representing the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f1a6a17accf8918f0b9e711bea566a96e5db04" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a non-empty sequence of &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;scala.sys.process.ProcessBuilder.Source&lt;/a&gt;, which can then be piped to something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30da9428ab78788da0478361b93fd6af2a2b4084" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from a sequence of &lt;code&gt;String&lt;/code&gt;, where the head is the command and each element of the tail is a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3610d3c35942744b9d5a96c0929a39003b9e7b11" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; from one or more &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;scala.sys.process.ProcessBuilder.Source&lt;/a&gt;, which can then be piped to something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72206b49fbb38f0fbc02aadf31ad66b3820793dd" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; with working dir optionally set to &lt;code&gt;File&lt;/code&gt; and extra environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcce7f41b16447011d9c857e74b1220a1299436" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt; with working dir set to &lt;code&gt;File&lt;/code&gt; and extra environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15db341467abd70d693eac30a4502335ed73d2da" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;scala.sys.process.ProcessLogger&lt;/a&gt; that sends all output to the corresponding function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b04f2cf6b7ac20009b2326aeba00ad94a3eba" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Catch&lt;/code&gt; object which will catch any of the supplied exceptions. Since the returned &lt;code&gt;Catch&lt;/code&gt; object has no specific logic defined and will simply rethrow the exceptions it catches, you will typically want to call &lt;code&gt;opt&lt;/code&gt;, &lt;code&gt;either&lt;/code&gt; or &lt;code&gt;withTry&lt;/code&gt; on the return value, or assign custom logic by calling &quot;withApply&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b626dc9a428ed9cd3db75dc55233a43e6bc84d" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Catch&lt;/code&gt; object which will catch any of the supplied exceptions. Unlike &quot;catching&quot; which filters out those in shouldRethrow, this one will catch whatever you ask of it including &lt;code&gt;ControlThrowable&lt;/code&gt; or &lt;code&gt;InterruptedException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac4b8e0c47d4c216a54c7f2cb026859fe8755ca" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;ProcessIO&lt;/code&gt; from a &lt;code&gt;ProcessLogger&lt;/code&gt; . It can attach the process input to stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6baefc7a09e36b44fdb9dda045c02bfb6feab382" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;ProcessIO&lt;/code&gt; from a function &lt;code&gt;String =&amp;gt; Unit&lt;/code&gt;. It can attach the process input to stdin, and it will either send the error stream to stderr, or to a &lt;code&gt;ProcessLogger&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eaf839a89d26b9b7d39a8927fc389c5e7fc6ac" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;ProcessIO&lt;/code&gt; that appends its output to an &lt;code&gt;Appendable&lt;/code&gt;. It can attach the process input to stdin, and it will either send the error stream to stderr, or to a &lt;code&gt;ProcessLogger&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643bc8f2f5f5b32a4ad8f745b962c3addacd0cd7" translate="yes" xml:space="preserve">
          <source>Creates a Boolean test based on a value and a partial function. It behaves like a 'match' statement with an implied 'case _ =&amp;gt; false' following the supplied cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70c175edf6ad01316acf257ffd2d77b7d670b45" translate="yes" xml:space="preserve">
          <source>Creates a Prop[T] of this type based on the given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63feb49c117005c43e65747044a41bb31f4e964" translate="yes" xml:space="preserve">
          <source>Creates a Source from an Iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c602481bd9b55194e6ed5cb8f883378b5826951" translate="yes" xml:space="preserve">
          <source>Creates a String representation of this object. The default representation is platform dependent. On the java platform it is the concatenation of the class name, &quot;@&quot;, and the object's hashcode in hexadecimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619341458b9c63460eb5d4ef59f0c5c750a2cab7" translate="yes" xml:space="preserve">
          <source>Creates a bit mask for this set as a new array of longs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3001b8225560b853b28be7b3b4bd721c4cb334" translate="yes" xml:space="preserve">
          <source>Creates a buffered iterator from this iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc7d548073268999e819db9d87b902c54aa447e" translate="yes" xml:space="preserve">
          <source>Creates a collection with the specified elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a86f6e442ede26cb092e6c2a047dbfacf6e9e3c" translate="yes" xml:space="preserve">
          <source>Creates a curried version of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922ada19cc17ea55cf750722f5e24e9ea73c2138" translate="yes" xml:space="preserve">
          <source>Creates a fresh value, part of this enumeration, called &lt;code&gt;name&lt;/code&gt; and identified by the integer &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaa176826cf1fcb676ba3ab925fc672994c2e73" translate="yes" xml:space="preserve">
          <source>Creates a fresh value, part of this enumeration, called &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261585b70dcf3f972de9532308e52132ec50b6af" translate="yes" xml:space="preserve">
          <source>Creates a fresh value, part of this enumeration, identified by the integer &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0fe000136ebf7342bdf5b26015dec1f7da73ac" translate="yes" xml:space="preserve">
          <source>Creates a fresh value, part of this enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7de13b7cac84d3a96628e7b6f9cfbb1536cd93" translate="yes" xml:space="preserve">
          <source>Creates a immutable queue with the specified elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8b98b6f425bbe5e15c6383054c4c2293e4f153" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AnyRefMap&lt;/code&gt; from an existing source collection. A source collection which is already an &lt;code&gt;AnyRefMap&lt;/code&gt; gets cloned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8757c0b39348d99badb6b3e9c29ee15af2e613e9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AnyRefMap&lt;/code&gt; from arrays of keys and values. Equivalent to but more efficient than &lt;code&gt;AnyRefMap((keys zip values): _*)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105f83d84823609edd974c4873584be3054b5805" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AnyRefMap&lt;/code&gt; from keys and values. Equivalent to but more efficient than &lt;code&gt;AnyRefMap((keys zip values): _*)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb44a5e4eea2a7464b35e547c6810d240d0366f0" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AnyRefMap&lt;/code&gt; with an initial buffer of specified size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b5617fd10076db637f9d463086b3d753252001" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AnyRefMap&lt;/code&gt; with different values. Unlike &lt;code&gt;mapValues&lt;/code&gt;, this method generates a new collection immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89320f700d65a137c3b061deb956c75d07ba65f6" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Future[S]&lt;/code&gt; which is completed with this &lt;code&gt;Future&lt;/code&gt;'s result if that conforms to &lt;code&gt;S&lt;/code&gt;'s erased type or a &lt;code&gt;ClassCastException&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c802b86bcf9e3d5b703ed7281b41095b1af4ceba" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LongMap&lt;/code&gt; from an existing source collection. A source collection which is already a &lt;code&gt;LongMap&lt;/code&gt; gets cloned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eba663445d80301dbfaf794ee45b72a17640af" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LongMap&lt;/code&gt; from arrays of keys and values. Equivalent to but more efficient than &lt;code&gt;LongMap((keys zip values): _*)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ed848a46f88b51fff803d1e2567e0f85685d5a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LongMap&lt;/code&gt; from keys and values. Equivalent to but more efficient than &lt;code&gt;LongMap((keys zip values): _*)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0af65fea23b00004dc2834bcb4b914ee6482b20" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LongMap&lt;/code&gt; with an initial buffer of specified size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1415aecf79ff5a18f7c4acafcc644e6a16187a7b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LongMap&lt;/code&gt; with different values. Unlike &lt;code&gt;mapValues&lt;/code&gt;, this method generates a new collection immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68439844ca6f247386629a9eed5ba7d440774a0" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;TreeSet&lt;/code&gt; with the entry added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2decc38d83d58f4571d2a55846168f88d6079f0b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;TreeSet&lt;/code&gt; with the entry removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f79ba9aa907f72f1f7d068ab06a197e9dc17f1" translate="yes" xml:space="preserve">
          <source>Creates a new Future by applying the specified function to the result of this Future. If there is any non-fatal exception thrown when 'f' is applied then that exception will be propagated to the resulting future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7e7b9c9a4759931e9725e978943b841970e450" translate="yes" xml:space="preserve">
          <source>Creates a new Future by applying the specified function, which produces a Future, to the result of this Future. If there is any non-fatal exception thrown when 'f' is applied then that exception will be propagated to the resulting future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab79980b6105f2e6a4e3ddfe8e20f56b0b9c7c2" translate="yes" xml:space="preserve">
          <source>Creates a new arraybuilder of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dd557a9a4c865d4994b9f98ffc9c033acc662f" translate="yes" xml:space="preserve">
          <source>Creates a new collection from this collection by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d723054d98609138d282b921771e82432c71259b" translate="yes" xml:space="preserve">
          <source>Creates a new collection from this collection with an element removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a736e5a74ef9c3cd4ecbddba7e4c9245a49ff9b" translate="yes" xml:space="preserve">
          <source>Creates a new collection from this collection with some elements removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfb0d94ff0448c10baa9514608c31eecad786c5" translate="yes" xml:space="preserve">
          <source>Creates a new future by applying a function to the successful result of this future, and returns the result of the function as the new future. If this future is completed with an exception then the new future will also contain this exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde7419e7f63323e53dc523ffdf9759d6bac9d2d" translate="yes" xml:space="preserve">
          <source>Creates a new future by applying a function to the successful result of this future. If this future is completed with an exception then the new future will also contain this exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e927946ace8c605a531241db0c8898b7f9782d82" translate="yes" xml:space="preserve">
          <source>Creates a new future by applying the 's' function to the successful result of this future, or the 'f' function to the failed result. If there is any non-fatal exception thrown when 's' or 'f' is applied, that exception will be propagated to the resulting future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed43dfa3b2df2f188df36abadd6cc8002867c1c" translate="yes" xml:space="preserve">
          <source>Creates a new future by filtering the value of the current future with a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352e23281866f309bf626e83d09080d61ec7d75c" translate="yes" xml:space="preserve">
          <source>Creates a new future by mapping the value of the current future, if the given partial function is defined at that value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36e363ccdf1b8852af2b647dbf995716097bd5f" translate="yes" xml:space="preserve">
          <source>Creates a new future that will handle any matching throwable that this future might contain by assigning it a value of another future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3079bbdc86dd815ab57366e81f4b7d54411d4ec0" translate="yes" xml:space="preserve">
          <source>Creates a new future that will handle any matching throwable that this future might contain. If there is no match, or if this future contains a valid result then the new future will contain the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0edad0399f4e6c37fd3439a682511cf847f347" translate="yes" xml:space="preserve">
          <source>Creates a new future which holds the result of this future if it was completed successfully, or, if not, the result of the &lt;code&gt;that&lt;/code&gt; future if &lt;code&gt;that&lt;/code&gt; is completed successfully. If both futures are failed, the resulting future holds the throwable object of the first future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8f432141ccac7be9fe2a1beb70b824aeafaabf" translate="yes" xml:space="preserve">
          <source>Creates a new future with one level of nesting flattened, this method is equivalent to &lt;code&gt;flatMap(identity)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3c8503b30c9f912e818b5ba80312f63e25d376" translate="yes" xml:space="preserve">
          <source>Creates a new immutable champ hash map from this immutable champ hash map by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3436a52de9103d8ef702b052edd76bdff2dcc7" translate="yes" xml:space="preserve">
          <source>Creates a new immutable champ hash set by adding all elements contained in another collection to this immutable champ hash set, omitting duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba40870d4d183ed1547504e3db59fa2bff9de5f" translate="yes" xml:space="preserve">
          <source>Creates a new immutable champ hash set from this immutable champ hash set by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285a4ac9dc499e183ef2d0eaa04deea73e0e5bf3" translate="yes" xml:space="preserve">
          <source>Creates a new immutable map from this immutable map by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2bc4169f703543a83807c0b99ec11741f5bfc6" translate="yes" xml:space="preserve">
          <source>Creates a new immutable set by adding all elements contained in another collection to this immutable set, omitting duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e351440f852928bc0d5c5929a1c53c0e7e5842" translate="yes" xml:space="preserve">
          <source>Creates a new immutable set from this immutable set by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96c2815f664d21c83a7019b8c58fdb26cc29fd3" translate="yes" xml:space="preserve">
          <source>Creates a new immutable tree map from this immutable tree map by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1c198f5c428ccef95120e689862172f616a10e" translate="yes" xml:space="preserve">
          <source>Creates a new immutable tree set by adding all elements contained in another collection to this immutable tree set, omitting duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbc3528cadd8bd5dae5a77975f89949dfad1046" translate="yes" xml:space="preserve">
          <source>Creates a new immutable tree set from this immutable tree set by removing all elements of another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e46767be40ed5256f64aae06d832e56230a6c12" translate="yes" xml:space="preserve">
          <source>Creates a new map obtained by updating this map with a given key/value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4f08c87271e4d86a0e2334a01ae0feefa79991" translate="yes" xml:space="preserve">
          <source>Creates a new queue with all elements provided by an &lt;code&gt;Iterable&lt;/code&gt; object added at the end of the old queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b003688ff792cd962c83522665b9792f7116a93d" translate="yes" xml:space="preserve">
          <source>Creates a new queue with element added at the end of the old queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3727cbb9be4892b8ae6fff9dc5fe12f79264ed9c" translate="yes" xml:space="preserve">
          <source>Creates a new range consisting of the initial &lt;code&gt;length - n&lt;/code&gt; elements of the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a903fd9b8387c2df7d98e9fbe973a033566f91" translate="yes" xml:space="preserve">
          <source>Creates a new range consisting of the last &lt;code&gt;n&lt;/code&gt; elements of the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9938b98c143081a86be434db5cacff6101313b6" translate="yes" xml:space="preserve">
          <source>Creates a new range containing all the elements of this range except the first &lt;code&gt;n&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f848f4549191c06d12722acb061e436edd92f070" translate="yes" xml:space="preserve">
          <source>Creates a new range containing all the elements of this range except the first one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e531921fbe0a426bd9bd18acb8df272cf16b60" translate="yes" xml:space="preserve">
          <source>Creates a new range containing all the elements of this range except the last one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e0d60186b0365ed2892f5bfddaa6cfe23e2fa3" translate="yes" xml:space="preserve">
          <source>Creates a new range containing the elements starting at &lt;code&gt;from&lt;/code&gt; up to but not including &lt;code&gt;until&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22e464c8929650e57d92adc4b7082646ed9f906" translate="yes" xml:space="preserve">
          <source>Creates a new range containing the first &lt;code&gt;n&lt;/code&gt; elements of this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb9d252fb148cc7cfc5c5a8fd1fbec94229c2f2" translate="yes" xml:space="preserve">
          <source>Creates a new set by adding all elements contained in another collection to this set, omitting duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d9bb6405d515c31a2768d21187cd159a4d6634" translate="yes" xml:space="preserve">
          <source>Creates a new set of this kind from an array of longs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a25ab21261fee7ac1208066dd14bae203d3245" translate="yes" xml:space="preserve">
          <source>Creates a new set with a given element removed from this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554d7b28701d994bf20a20f7bd14a8b0a0ecb271" translate="yes" xml:space="preserve">
          <source>Creates a new set with an additional element, unless the element is already present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06d89288ca8dfcdd5dec4c46dde5af1fbb0339d" translate="yes" xml:space="preserve">
          <source>Creates a new set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28244747fa341f8a7eca1aababa0f61b778ba0c" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216717a227a1bf58734c81fb8d8e7578f04880f4" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this immutable sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb6c701575aa03fadeb67a676d2c41082621ad5" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this iterable collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa18f57c0d0667d7da2a9143857d6eabb06d4a" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f8345744fff55cfab54813355b3dcf1357007a" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca706d5ce2818648810081dd2fa84a5537ba90e" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcce4d09dd5d78c0c0b1b467b4d523c29c734422" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter of this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051a0fea36fdee03ecaafab6039d1aa9acb88877" translate="yes" xml:space="preserve">
          <source>Creates a non-strict filter, which eventually converts this to a &lt;code&gt;Failure&lt;/code&gt; if the predicate is not satisfied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805eaba6b6218eecab48ca88d18f065b82edfe8" translate="yes" xml:space="preserve">
          <source>Creates a partially constructed NumericRange[BigDecimal] in range &lt;code&gt;[start;end)&lt;/code&gt;, where start is the target BigDecimal. The step must be supplied via the &quot;by&quot; method of the returned object in order to receive the fully constructed range. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b5f6fd5015995352c77250ff83bf85412ce2fa" translate="yes" xml:space="preserve">
          <source>Creates a promise object which can be completed with a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06423c26fad174c5cfe159e737ca41646832c5b6" translate="yes" xml:space="preserve">
          <source>Creates a ranged projection of this collection with both a lower-bound and an upper-bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f198d62226b65f2bd650349f3d30899d9c4d88d6" translate="yes" xml:space="preserve">
          <source>Creates a ranged projection of this collection with no lower-bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2af336abeb6593542e888d69bfa6b7733d640d" translate="yes" xml:space="preserve">
          <source>Creates a ranged projection of this collection with no upper-bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb7ffa611015fda4887f42a6005959ac95c0d9c" translate="yes" xml:space="preserve">
          <source>Creates a ranged projection of this collection. Any mutations in the ranged projection will update this collection and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb1586142b32fa88cd417b4396c95bfbdad7ace" translate="yes" xml:space="preserve">
          <source>Creates a ranged projection of this map. Any mutations in the ranged projection will update the original map and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63d02ac9259a68deb29d49768752ec61f65c24f" translate="yes" xml:space="preserve">
          <source>Creates a sequence of &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;scala.sys.process.ProcessBuilder.Source&lt;/a&gt; from a sequence of something else for which there's an implicit conversion to &lt;code&gt;Source&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d386d860279de6561c5168911727e574c0521dfb" translate="yes" xml:space="preserve">
          <source>Creates a target Accumulator from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ac3202ba3d7dcffa98458d328021196a135797" translate="yes" xml:space="preserve">
          <source>Creates a target array buffer from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23598fe390d860d47345493c63b99330a9d5b2bc" translate="yes" xml:space="preserve">
          <source>Creates a target array deque from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2f2d92f29494a78646dfc6eda949239b769db3" translate="yes" xml:space="preserve">
          <source>Creates a target collection from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d36c7a3bee66c97fd2cdf891ecccac0cb6f9bd" translate="yes" xml:space="preserve">
          <source>Creates a target immutable champ hash set from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe6c4f3b322a2f1694761a7cecca2d3318ec28" translate="yes" xml:space="preserve">
          <source>Creates a target immutable queue from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcde272b222dabb024d152e4c4f2ce1eccab431b" translate="yes" xml:space="preserve">
          <source>Creates a target immutable sequence from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b5ed9a20ee4956561bda89e3f90f37db973bfa" translate="yes" xml:space="preserve">
          <source>Creates a target immutable set from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3e3d720f6b9c31c068da45d07abe811a33b894" translate="yes" xml:space="preserve">
          <source>Creates a target lazy list from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2e01e808d88697c96c1534321f97a659c338bb" translate="yes" xml:space="preserve">
          <source>Creates a target linked hash set from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b533a6c6734285708716005523529b18ac0b13d2" translate="yes" xml:space="preserve">
          <source>Creates a target list from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b0c0dd7f24aad79d1f1c1aebc6225fcafe431" translate="yes" xml:space="preserve">
          <source>Creates a target list set from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5f0f946298f833559dfdeafc982e6659e482a3" translate="yes" xml:space="preserve">
          <source>Creates a target mutable hash set from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8126c06734e5dad6b67a4596865dfd35a58f43d7" translate="yes" xml:space="preserve">
          <source>Creates a target queue from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1980a3c2bc0ab592e68bd0cd5a3ca4df6a1eaaca" translate="yes" xml:space="preserve">
          <source>Creates a target stack from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b98969b17eb9e23877c1d0af02ae3b5382af10d" translate="yes" xml:space="preserve">
          <source>Creates a target vector from an existing source collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b54cb6ae41cd2eb5a513d8ab8175c3db689da41" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 10 arguments, it accepts a single &lt;a href=&quot;tuple10&quot; id=&quot;scala.Tuple10&quot; name=&quot;scala.Tuple10&quot;&gt;scala.Tuple10&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa66a9ee09962c5e0a8e6362a5493270bce06abf" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 11 arguments, it accepts a single &lt;a href=&quot;tuple11&quot; id=&quot;scala.Tuple11&quot; name=&quot;scala.Tuple11&quot;&gt;scala.Tuple11&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c111580861feb47a51699763292d389dab6fefbf" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 12 arguments, it accepts a single &lt;a href=&quot;tuple12&quot; id=&quot;scala.Tuple12&quot; name=&quot;scala.Tuple12&quot;&gt;scala.Tuple12&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a451d100d71499f685108a3f64d0351f2c8028d7" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 13 arguments, it accepts a single &lt;a href=&quot;tuple13&quot; id=&quot;scala.Tuple13&quot; name=&quot;scala.Tuple13&quot;&gt;scala.Tuple13&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d3512b11dcaed8be856ddfd7b75c45acaad73a" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 14 arguments, it accepts a single &lt;a href=&quot;tuple14&quot; id=&quot;scala.Tuple14&quot; name=&quot;scala.Tuple14&quot;&gt;scala.Tuple14&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b26a849170a939e05cd49be2504b42a68052cd" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 15 arguments, it accepts a single &lt;a href=&quot;tuple15&quot; id=&quot;scala.Tuple15&quot; name=&quot;scala.Tuple15&quot;&gt;scala.Tuple15&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f468d697c0f225d3aefbfbf5696bf74c039e383" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 16 arguments, it accepts a single &lt;a href=&quot;tuple16&quot; id=&quot;scala.Tuple16&quot; name=&quot;scala.Tuple16&quot;&gt;scala.Tuple16&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46883464ea8048f2526bc2e57f724b0580f8000" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 17 arguments, it accepts a single &lt;a href=&quot;tuple17&quot; id=&quot;scala.Tuple17&quot; name=&quot;scala.Tuple17&quot;&gt;scala.Tuple17&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090605b7da2c7710340fc602cbe6aca199bd8aaa" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 18 arguments, it accepts a single &lt;a href=&quot;tuple18&quot; id=&quot;scala.Tuple18&quot; name=&quot;scala.Tuple18&quot;&gt;scala.Tuple18&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc0336433e3078d68cffdefe268e01d53d93b79" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 19 arguments, it accepts a single &lt;a href=&quot;tuple19&quot; id=&quot;scala.Tuple19&quot; name=&quot;scala.Tuple19&quot;&gt;scala.Tuple19&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9293d3ad705d115fe26b135ec723923667f9315" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 2 arguments, it accepts a single &lt;a href=&quot;../tuple2&quot; id=&quot;scala.Tuple2&quot; name=&quot;scala.Tuple2&quot;&gt;scala.Tuple2&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb05b0268cdff26c432aef2cc60b2ac3c703cd4" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 2 arguments, it accepts a single &lt;a href=&quot;tuple2&quot; id=&quot;scala.Tuple2&quot; name=&quot;scala.Tuple2&quot;&gt;scala.Tuple2&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e94ecaf02f72cf42a2bd78c06c4f6f7cf7ebb0" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 20 arguments, it accepts a single &lt;a href=&quot;tuple20&quot; id=&quot;scala.Tuple20&quot; name=&quot;scala.Tuple20&quot;&gt;scala.Tuple20&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f390455d4a44cfb0485ebdb120d3bc53427d920" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 21 arguments, it accepts a single &lt;a href=&quot;tuple21&quot; id=&quot;scala.Tuple21&quot; name=&quot;scala.Tuple21&quot;&gt;scala.Tuple21&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9112039493d2311148352403940171f1332e361" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 22 arguments, it accepts a single &lt;a href=&quot;tuple22&quot; id=&quot;scala.Tuple22&quot; name=&quot;scala.Tuple22&quot;&gt;scala.Tuple22&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1239a2d1efdce75e05ef22e47805ffa803dabdf4" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 3 arguments, it accepts a single &lt;a href=&quot;tuple3&quot; id=&quot;scala.Tuple3&quot; name=&quot;scala.Tuple3&quot;&gt;scala.Tuple3&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3244bc6d0d4842346cddb27472cf17ae5b8a97" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 4 arguments, it accepts a single &lt;a href=&quot;tuple4&quot; id=&quot;scala.Tuple4&quot; name=&quot;scala.Tuple4&quot;&gt;scala.Tuple4&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d98a28cd68aa3e037ebbebdfa9da9f1a373c2a" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 5 arguments, it accepts a single &lt;a href=&quot;tuple5&quot; id=&quot;scala.Tuple5&quot; name=&quot;scala.Tuple5&quot;&gt;scala.Tuple5&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cac0b76dfafd1eb18de3e4af4735b02fa2bcfa" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 6 arguments, it accepts a single &lt;a href=&quot;tuple6&quot; id=&quot;scala.Tuple6&quot; name=&quot;scala.Tuple6&quot;&gt;scala.Tuple6&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f78060e9ea18d99f7b0f15ad4d7bb78b5ab0b3c" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 7 arguments, it accepts a single &lt;a href=&quot;tuple7&quot; id=&quot;scala.Tuple7&quot; name=&quot;scala.Tuple7&quot;&gt;scala.Tuple7&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955b46a004a7ddbcdb45ee4ff2155d70606ec885" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 8 arguments, it accepts a single &lt;a href=&quot;tuple8&quot; id=&quot;scala.Tuple8&quot; name=&quot;scala.Tuple8&quot;&gt;scala.Tuple8&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7f9cf7f73ec549aab8bfa80e930e52cd3fea3f" translate="yes" xml:space="preserve">
          <source>Creates a tupled version of this function: instead of 9 arguments, it accepts a single &lt;a href=&quot;tuple9&quot; id=&quot;scala.Tuple9&quot; name=&quot;scala.Tuple9&quot;&gt;scala.Tuple9&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b182e66d993734d75b154ffee878f25f659bca28" translate="yes" xml:space="preserve">
          <source>Creates a view with the specified elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59be47348b1b5b7535e12a8e01345e76267bb4b" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;ExecutionContext&lt;/code&gt; from the given &lt;code&gt;Executor&lt;/code&gt; with the &lt;a href=&quot;#defaultReporter:Throwable=&amp;gt;Unit&quot; id=&quot;scala.concurrent.ExecutionContext#defaultReporter&quot; name=&quot;scala.concurrent.ExecutionContext#defaultReporter&quot;&gt;default reporter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d59db865a08ece6356661fb7e7e4e60791ca4d7" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;ExecutionContext&lt;/code&gt; from the given &lt;code&gt;Executor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baa0e81ebb0bddd9feb274b6cf8be21c3bde096" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;ExecutionContext&lt;/code&gt; from the given &lt;code&gt;ExecutorService&lt;/code&gt; with the &lt;a href=&quot;#defaultReporter:Throwable=&amp;gt;Unit&quot; id=&quot;scala.concurrent.ExecutionContext#defaultReporter&quot; name=&quot;scala.concurrent.ExecutionContext#defaultReporter&quot;&gt;default reporter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0417cfab740706b6199fbbe5c06129efb01dd5d9" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;ExecutionContext&lt;/code&gt; from the given &lt;code&gt;ExecutorService&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eb837f44002d8539bb242ab46f27078bd81ad1" translate="yes" xml:space="preserve">
          <source>Creates an Accumulator with the specified elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b643335c3dd30cf6168112a737b5190e6b894d" translate="yes" xml:space="preserve">
          <source>Creates an Iterator that uses a function &lt;code&gt;f&lt;/code&gt; to produce elements of type &lt;code&gt;A&lt;/code&gt; and update an internal state of type &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4f0dad1ccb52a3609f37a2254f3cd5eda6287a" translate="yes" xml:space="preserve">
          <source>Creates an Ordering[T] whose compare function returns the result of this Ordering's compare function, if it is non-zero, or else the result of &lt;code&gt;other&lt;/code&gt;s compare function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f36ae88e4530f4aeeb395e740e606fd92dcd769" translate="yes" xml:space="preserve">
          <source>Creates an already completed Future with the specified exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2008a3c83a17f5b21feeea3034854a594f8f760e" translate="yes" xml:space="preserve">
          <source>Creates an already completed Future with the specified result or exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a719a943be027fa9354914d7d309e25bb49d76ac" translate="yes" xml:space="preserve">
          <source>Creates an already completed Future with the specified result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34937abc364d8061defd3e02bb9bbdfad24ac147" translate="yes" xml:space="preserve">
          <source>Creates an already completed Promise with the specified exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb55e2d23416e23f592de9325be5780f8bf71fe" translate="yes" xml:space="preserve">
          <source>Creates an already completed Promise with the specified result or exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2686c51f4c496fba5d112d2e59fee169fed21aa9" translate="yes" xml:space="preserve">
          <source>Creates an already completed Promise with the specified result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4816abd873d550521a83caf0338fe279b69acca4" translate="yes" xml:space="preserve">
          <source>Creates an array with given elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb2f08c29feb1abeab6792964847eef75d49af7" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;TreeMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5823ec2fbcf8c6c9f8ee1fc6f30bb06073c386a8" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;TreeSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce185bd8b53b539ff4535f5d55c692e3ba18fb1" translate="yes" xml:space="preserve">
          <source>Creates an infinite iterator that repeatedly applies a given function to the previous result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbfe55460f1ef4026d5fc4dcdc2a8210ba32642" translate="yes" xml:space="preserve">
          <source>Creates an infinite-length iterator returning the results of evaluating an expression. The expression is recomputed for every element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0337c2b998f1761e5893c4bc01720fab471c18d1" translate="yes" xml:space="preserve">
          <source>Creates an infinite-length iterator returning values equally spaced apart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fa23966a4ce43d4bb2a4ae540920e4c81c2b91" translate="yes" xml:space="preserve">
          <source>Creates an infinite-length iterator which returns successive values from some start value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc48cf303d87d1e3c246879046030e3eea514d65" translate="yes" xml:space="preserve">
          <source>Creates an iterator for all keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da122e2a278ea9024790507611faf7203b050f78" translate="yes" xml:space="preserve">
          <source>Creates an iterator for all values in this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8856f8769ca5651089d51303c1b82a2e1adfe87" translate="yes" xml:space="preserve">
          <source>Creates an iterator over all the elements of this iterator that satisfy the predicate &lt;code&gt;p&lt;/code&gt;. The order of the elements is preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1e7adfa19e407df594521a2db42e13b9ab49a9" translate="yes" xml:space="preserve">
          <source>Creates an iterator over all the key/value pairs contained in this map having a key greater than or equal to &lt;code&gt;start&lt;/code&gt; according to the ordering of this map. x.iteratorFrom(y) is equivalent to but often more efficient than x.from(y).iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129644005fa4ff0af7e958bc43cf626bc0c1f93d" translate="yes" xml:space="preserve">
          <source>Creates an iterator over all the keys(or elements) contained in this collection greater than or equal to &lt;code&gt;start&lt;/code&gt; according to the ordering of this collection. x.keysIteratorFrom(y) is equivalent to but often more efficient than x.from(y).keysIterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd3e1b10da215dbc8b955a8bf9868491426a70c" translate="yes" xml:space="preserve">
          <source>Creates an iterator over all the values contained in this map that are associated with a key greater than or equal to &lt;code&gt;start&lt;/code&gt; according to the ordering of this map. x.valuesIteratorFrom(y) is equivalent to but often more efficient than x.from(y).valuesIterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b5e5b6dc00327de935688fc27524880a7d4082" translate="yes" xml:space="preserve">
          <source>Creates an iterator producing the values of a given function over a range of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cb68afeb945d5783143cccdab4fd9386d280b0" translate="yes" xml:space="preserve">
          <source>Creates an iterator that contains all values from this collection greater than or equal to &lt;code&gt;start&lt;/code&gt; according to the ordering of this collection. x.iteratorFrom(y) is equivalent to but will usually be more efficient than x.from(y).iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd6a67e95e018885b829d42f117c4c4ee49205b" translate="yes" xml:space="preserve">
          <source>Creates an optionally bounded slice, unbounded if &lt;code&gt;until&lt;/code&gt; is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be303fe2fec4e899a3194698d01fe849980afff" translate="yes" xml:space="preserve">
          <source>Creates iterator that produces the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e38126914aa94a078b3ab7b2a05ed0ea597a249" translate="yes" xml:space="preserve">
          <source>Creates nn iterator returning successive values in some integer interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f6309e295f56346f912517a78e331910369195" translate="yes" xml:space="preserve">
          <source>Creates two new iterators that both iterate over the same elements as this iterator (in the same order). The duplicate iterators are considered equal if they are positioned at the same element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cdd6e7c95a25df0c03d67d9f1d0c21e8895abc" translate="yes" xml:space="preserve">
          <source>CreatorImpl &amp;rarr; &lt;a href=&quot;prop%24%24creator&quot; id=&quot;scala.sys.Prop.Creator&quot; name=&quot;scala.sys.Prop.Creator&quot;&gt;Creator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4456dbdba62053368eec97ccb9ce3c1b2129906" translate="yes" xml:space="preserve">
          <source>Currently unused; intended as an annotation target for classes such as case classes that automatically generate a companion object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b12f36924915fa2101627fa804a0746579a911d" translate="yes" xml:space="preserve">
          <source>Deadline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43624cc532750210d3ea213283cc819b4b604ca" translate="yes" xml:space="preserve">
          <source>Deadline$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b889ea781ccd4e01caeed68ee3b10ee60bedbc2" translate="yes" xml:space="preserve">
          <source>Deadline$.DeadlineIsOrdered$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ca760647014724540076c49e4e1663be67b438" translate="yes" xml:space="preserve">
          <source>Deadline$.DeadlineIsOrdered$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047caf8dff7aff909477b055d41a1725488d0677" translate="yes" xml:space="preserve">
          <source>Deadline$.DeadlineIsOrdered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ea09545c5d9c887ca5dc35965b071ca69a6130" translate="yes" xml:space="preserve">
          <source>Deadline$.now()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1bf22ca4dbf9b64700cf552b0ea6f825beeac6" translate="yes" xml:space="preserve">
          <source>Deadline.+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2560d31a458ecdacce9157b8322cb60dd61bd3ea" translate="yes" xml:space="preserve">
          <source>Deadline.-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cbdfc3c596ab62638fc2c7c6c2c3a849376e42" translate="yes" xml:space="preserve">
          <source>Deadline.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7390e4170ab90e6dd1ae599ce4b10ca37e594966" translate="yes" xml:space="preserve">
          <source>Deadline.hasTimeLeft()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34466f2e1d0ec4dad803347150a39aa244af252e" translate="yes" xml:space="preserve">
          <source>Deadline.isOverdue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6b31d3c31148a484fa6df115cdf0f60519207f" translate="yes" xml:space="preserve">
          <source>Deadline.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a42193039ae81e6b867f5aa41d4f59716f4f82b" translate="yes" xml:space="preserve">
          <source>Deadline.time()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79c62dd322332b460f72942c510c8ebabfd0edf" translate="yes" xml:space="preserve">
          <source>Deadline.timeLeft()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bd4813a792e18771dc0588da0c9aecfad4ea22" translate="yes" xml:space="preserve">
          <source>Decorator representing lazily zipped 4-tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75348a0e42056b6eb66dbbd9706f9a436318c557" translate="yes" xml:space="preserve">
          <source>Decorator representing lazily zipped pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94180bcbc5658b16486dd96e588e334b54a75337" translate="yes" xml:space="preserve">
          <source>Decorator representing lazily zipped triples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52e078d2b8b0270e77c540eceadaf59f2d7de49" translate="yes" xml:space="preserve">
          <source>DefaultMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d35191bc864ef906f3a3963e2f35b785202ba2e" translate="yes" xml:space="preserve">
          <source>DefaultMap is no longer necessary; extend Map directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602592bbe46337665ad83a3838ad8cf7576aec00" translate="yes" xml:space="preserve">
          <source>DefaultMap.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1eb73438995a107cd9e837f537406da1226ecef" translate="yes" xml:space="preserve">
          <source>DefaultSerializable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f31f6904102cf41137b90d166a220945d76d6f3" translate="yes" xml:space="preserve">
          <source>DefaultSerializable.writeReplace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7ba42f6504955c4643f6b361470ea4e76a1e40" translate="yes" xml:space="preserve">
          <source>DefaultSerializationProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaa2192dabf17081398a666dc13cf1ed33e4191" translate="yes" xml:space="preserve">
          <source>DefaultSerializationProxy.DefaultSerializationProxy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da0b0d8a569705a53e95cf40279ad45bffe3bb6" translate="yes" xml:space="preserve">
          <source>DefaultSerializationProxy.builder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa47d743420903760d86b42bbfa8c5970b0b270" translate="yes" xml:space="preserve">
          <source>DefaultSerializationProxy.readResolve()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0633027eee95e8e6764004f683154dbdc536ce0c" translate="yes" xml:space="preserve">
          <source>DefaultSerializationProxy.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaeaa30cf40327f5e021ba1b36eb5360b3351c2" translate="yes" xml:space="preserve">
          <source>Deferrer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c2558ed4ddf055209bece83071cd3cc10aa8da" translate="yes" xml:space="preserve">
          <source>Defers to defaultEntry to find a default value for the key. Throws an exception if no other default behavior was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c3799ebc81481da47b0ff259c3a2ba4db2d1e5" translate="yes" xml:space="preserve">
          <source>Definable behavior for overflow conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a46cbf99f8cc755944cd02028b3df3ab83b9d33" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;asJava&lt;/code&gt; extension methods, available through &lt;a href=&quot;../../jdk/collectionconverters%24&quot; id=&quot;scala.jdk.CollectionConverters&quot; name=&quot;scala.jdk.CollectionConverters&quot;&gt;scala.jdk.CollectionConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5bacd465f143746f38c2aeaf45bc16e1edd068" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;asScala&lt;/code&gt; extension methods, available through &lt;a href=&quot;../../jdk/collectionconverters%24&quot; id=&quot;scala.jdk.CollectionConverters&quot; name=&quot;scala.jdk.CollectionConverters&quot;&gt;scala.jdk.CollectionConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1940509a5c2cabcb1983ce7a5dcb5bef6de8a0" translate="yes" xml:space="preserve">
          <source>Defines a finite set of values specific to the enumeration. Typically these values enumerate all possible forms something can take and provide a lightweight alternative to case classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b4291a311befafbf21352450a9806b509f4313" translate="yes" xml:space="preserve">
          <source>Defines converter methods from Java to Scala collections. These methods are available through the &lt;a href=&quot;../../jdk/javaapi/collectionconverters%24&quot; id=&quot;scala.jdk.javaapi.CollectionConverters&quot; name=&quot;scala.jdk.javaapi.CollectionConverters&quot;&gt;scala.jdk.javaapi.CollectionConverters&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146cc249a3820fdf8919e1004aec2f3b012df9ac" translate="yes" xml:space="preserve">
          <source>Defines converter methods from Scala to Java collections. These methods are available through the &lt;a href=&quot;../../jdk/javaapi/collectionconverters%24&quot; id=&quot;scala.jdk.javaapi.CollectionConverters&quot; name=&quot;scala.jdk.javaapi.CollectionConverters&quot;&gt;scala.jdk.javaapi.CollectionConverters&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61db7d176e9d51f61bdeef7ebd12c489d18d6795" translate="yes" xml:space="preserve">
          <source>Defines extension methods to create Java Streams for Scala collections, available through &lt;span name=&quot;scala.jdk.StreamConverters.Ops&quot;&gt;scala.jdk.StreamConverters.Ops&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063a5c143c7ba419541071da2a0be6b096cec93a" translate="yes" xml:space="preserve">
          <source>Defines how to turn a given &lt;code&gt;Iterable[A]&lt;/code&gt; into a collection of type &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d3e011dbbfde34bc7f3367f3ed1f2e3db7c4e4" translate="yes" xml:space="preserve">
          <source>Defines implicit conversions from Scala to Java collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa1e2f535de39c64412c8567d01f03954fa0fd7" translate="yes" xml:space="preserve">
          <source>Defines implicit converter methods from Java to Scala collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5a59cd17fbeb467d0f07cd586ddf62de556b24" translate="yes" xml:space="preserve">
          <source>Defines the default value computation for the map, returned when a key is not found The method implemented here throws an exception, but it might be overridden in subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b877fb65f9744090e60431bca83de5b5b8019425" translate="yes" xml:space="preserve">
          <source>Defines the prefix of this object's &lt;code&gt;toString&lt;/code&gt; representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78851b7b7afe7f8a7ffd6e7276d922f40eccbb8e" translate="yes" xml:space="preserve">
          <source>Definition Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655876332ac72e0b29844bac96bc3ae4811739e2" translate="yes" xml:space="preserve">
          <source>DelayedInit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4fb9a85ed4fee887c2568e7f985bfe81b96891" translate="yes" xml:space="preserve">
          <source>DelayedInit semantics can be surprising. Support for &lt;code&gt;App&lt;/code&gt; will continue. See the release notes for more details: https://github.com/scala/scala/releases/tag/v2.11.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ff7e7c702f7dec5103af4156be33e83c8d328b" translate="yes" xml:space="preserve">
          <source>DelayedInit.delayedInit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee9b1ba14e7f71d2138e3baa30ba2835bbbd740" translate="yes" xml:space="preserve">
          <source>DelayedInit.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c0c7b389ff012b52c21e1ab93e6475b06dfaba" translate="yes" xml:space="preserve">
          <source>DelayedLazyVal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01eeef4507477b5dccc3fe92b8cd8aeab3f1d0e" translate="yes" xml:space="preserve">
          <source>DelayedLazyVal.DelayedLazyVal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4432b76b4206431894603220dd793130af8d182d" translate="yes" xml:space="preserve">
          <source>DelayedLazyVal.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda4b1c2fe6499b52493239f9900c82708b577e4" translate="yes" xml:space="preserve">
          <source>DelayedLazyVal.isDone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c759c0fa2cac87da7eb3e3c33addf1ce6e2df37" translate="yes" xml:space="preserve">
          <source>DelayedLazyVal.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ab214df85e4910f7e4400eea924b9565854a9f" translate="yes" xml:space="preserve">
          <source>Delegate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5236b018e6f09d0f4cea754ddbe80918583b0b" translate="yes" xml:space="preserve">
          <source>Delegates to addString, which can be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5541ea75952a12645b4ae7fdd6cea7c7d884aeb1" translate="yes" xml:space="preserve">
          <source>Deleting a mapping is always permitted.Changing the value of mapping which is already present is permitted.Anything else is not permitted. It will usually, but not always, throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f5d17d4bc058e44e52c1b1a6ea40dbda25d60b" translate="yes" xml:space="preserve">
          <source>Described</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d1c52409df0f21e2aece47eee05fb4775faa45" translate="yes" xml:space="preserve">
          <source>Determine whether the deadline lies in the past at the point where this method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83779c42bc32c3eeb55ad9244ebce9e1ec89dbea" translate="yes" xml:space="preserve">
          <source>Determine whether the deadline still lies in the future at the point where this method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e42166c4ab94bf69ed85d902ae98351c194eed" translate="yes" xml:space="preserve">
          <source>Displays all elements of this collection in a string using a separator string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558de801db4ff5c0da18274e866c9defa7be5434" translate="yes" xml:space="preserve">
          <source>Displays all elements of this collection in a string using start, end, and separator strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8259be408db51169a3c16f6e0ac53b7c851af75b" translate="yes" xml:space="preserve">
          <source>Displays all elements of this collection in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e535fc6793654a4d565a77ab24cd7e92414e6ae" translate="yes" xml:space="preserve">
          <source>Displays all elements of this immutable sequence in a string using a separator string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707d4a677c7a4009b6d34cb4fd8112aa3ea96870" translate="yes" xml:space="preserve">
          <source>Displays all elements of this immutable sequence in a string using start, end, and separator strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24ba3007ef1df7cc29d8cf65f90fdbe686d0a73" translate="yes" xml:space="preserve">
          <source>Displays all elements of this immutable sequence in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb04bd4fa3cf5059e2d82364858d6a421bb77477" translate="yes" xml:space="preserve">
          <source>Displays all elements of this iterable collection in a string using a separator string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9045279db03b749dcc760a56e8de1814492d4d0b" translate="yes" xml:space="preserve">
          <source>Displays all elements of this iterable collection in a string using start, end, and separator strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e25910317c98d481e141509f90748a6da3fc87a" translate="yes" xml:space="preserve">
          <source>Displays all elements of this iterable collection in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a958c90be34920d0d7b7ae6bcf080c0611e3ba" translate="yes" xml:space="preserve">
          <source>Displays all elements of this string in a string using a separator string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e57ef357debcfc49a6452ba5d27314405edcb78" translate="yes" xml:space="preserve">
          <source>Displays all elements of this string in a string using start, end, and separator strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577eb5641a241305cb90fe12cceb8d6e6373c43b" translate="yes" xml:space="preserve">
          <source>Displays all elements of this view in a string using a separator string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9a4f6e0dff93574d41d763bf0cdbbbc687b478" translate="yes" xml:space="preserve">
          <source>Displays all elements of this view in a string using start, end, and separator strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db413e9cd52f1c126906a9f8a4fa9cc5d0d910c" translate="yes" xml:space="preserve">
          <source>Displays all elements of this view in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4864eada9ea5288eb60902bb0da8c5294eaf2a1f" translate="yes" xml:space="preserve">
          <source>Division and Remainder - returns tuple containing the result of divideToIntegralValue and the remainder. The computation is exact: no rounding is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a682b43dc38dac3e0bc633458d80f904d0feae39" translate="yes" xml:space="preserve">
          <source>Do *not* call any blocking code in the &lt;code&gt;Runnable&lt;/code&gt;s submitted to this &lt;code&gt;ExecutionContext&lt;/code&gt; as it will prevent progress by other enqueued &lt;code&gt;Runnable&lt;/code&gt;s and the calling &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d936e88c31295eba6ff0db89e7b53894c9d9964" translate="yes" xml:space="preserve">
          <source>Double &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6ac522c075cff47b456808636efd2a0c13f272" translate="yes" xml:space="preserve">
          <source>Double &amp;rarr; Comparable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33b6ce186e09d00916b0fbce34303cecd8e9afd" translate="yes" xml:space="preserve">
          <source>Double &amp;rarr; Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9962fb4e16a196c25948323df0b5bc1a73c6d1c2" translate="yes" xml:space="preserve">
          <source>Double$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bb8c40e4d84f18bdb9885602a7b4a84e21ccf0" translate="yes" xml:space="preserve">
          <source>Double$.MaxValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419b1209e04f3fe300d3511c4c85bac30dd98450" translate="yes" xml:space="preserve">
          <source>Double$.MinPositiveValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3b33e0b54bacc55526e581fe354903c60c9e34" translate="yes" xml:space="preserve">
          <source>Double$.MinValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f27f223234da3658fa3def2c3327cf9e6b2a94" translate="yes" xml:space="preserve">
          <source>Double$.NaN()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883752cc35e2091001708472343028412451f481" translate="yes" xml:space="preserve">
          <source>Double$.NegativeInfinity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f150618722f9ccba695a298977961d576528c0e8" translate="yes" xml:space="preserve">
          <source>Double$.PositiveInfinity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ae7fa0545331a47bd93bb57242f99184d7e14" translate="yes" xml:space="preserve">
          <source>Double$.box()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef983522efdb162c4a9ec01f2d5fe5e87091fcf" translate="yes" xml:space="preserve">
          <source>Double$.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fd5dc0dcaadfce4088bbf12879cb270e50118c" translate="yes" xml:space="preserve">
          <source>Double$.unbox()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eff75a19a07c5c1028959474ec67a11c172e65" translate="yes" xml:space="preserve">
          <source>Double.!=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0bcde2ccb30bf13fd41042181eab511c4b9097" translate="yes" xml:space="preserve">
          <source>Double.%()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcf6ac0ebd8be0bceb3981fbb9e21a35c01e815" translate="yes" xml:space="preserve">
          <source>Double.&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257d70cd974cab2af830b4fc76ec1b530655b890" translate="yes" xml:space="preserve">
          <source>Double.&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140f884b28da00698bbed780e0f344d82cebd74d" translate="yes" xml:space="preserve">
          <source>Double.&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d616f8e14a3d625ad5da675e9baec1b93a7547" translate="yes" xml:space="preserve">
          <source>Double.&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e43d16d939e2aec60aa93fd6ebe00c8803689db" translate="yes" xml:space="preserve">
          <source>Double.*()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd34bed4494efae1c003328bcbf92a447b18385" translate="yes" xml:space="preserve">
          <source>Double.+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ab36811d9368f3d4f701bd6fe2a5084040e286" translate="yes" xml:space="preserve">
          <source>Double.-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c240f8548433848df1cf101ddfa23c44d276210" translate="yes" xml:space="preserve">
          <source>Double./()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5725f51d832c201bce8f10799bc352a9da364a3" translate="yes" xml:space="preserve">
          <source>Double.==()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae702e7eef1304b18cded6b5cf5785f1903b14b5" translate="yes" xml:space="preserve">
          <source>Double.getClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40612a45e583dcd518d215f610c4c069b95da79c" translate="yes" xml:space="preserve">
          <source>Double.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04908020e7b5483389b35e5a85abac496451c75d" translate="yes" xml:space="preserve">
          <source>Double.toByte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4b14ee4264d3d8a7a4995684679d10031fe3b9" translate="yes" xml:space="preserve">
          <source>Double.toChar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91366c89e1e8515439b90a88b9e04b0b8283c834" translate="yes" xml:space="preserve">
          <source>Double.toDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc0573250d60ee655af22dff8735708f477f860" translate="yes" xml:space="preserve">
          <source>Double.toFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad29272116165bea492ace4a59d1e49c421174c" translate="yes" xml:space="preserve">
          <source>Double.toInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e83954c8798fc30c957326a2980e2882bc1a489" translate="yes" xml:space="preserve">
          <source>Double.toLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96b6d32ea12e3079341e3c6f5225f70f9f5b5c5" translate="yes" xml:space="preserve">
          <source>Double.toShort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113fc00592a77f37e7560f644b6120415f5b49f4" translate="yes" xml:space="preserve">
          <source>Double.unary_+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c026d270e45ea75beb8a83d9fb012dc86904ddd" translate="yes" xml:space="preserve">
          <source>Double.unary_-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c74513f006c865ae01427c3c9199a125624e94f" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac82ca00453888bc5b3072bd8327585f20a86038" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49fca1ff8bfa87bfd79a5ea68e84e121e83aef6" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.SerializationProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d495657a400c12b1e615d3fd9583244e0d46c87a" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.SerializationProxy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eb51dcddb3d9711295ce59ce7df66aab44e2b2" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.SerializationProxy.SerializationProxy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d295d32f5601a063b3210401d56cd3aff0e8be1" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.adder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f01c6bbe7358ca3af5f5bd9c6aa15ff0a348ef" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.boxedAdder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f10fd73f34636c5cf3557369006b5ea563626b" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765e009b1d9b1b1a6716bef388388813ac382ee6" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.fromSpecific()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd97afc99c3bfd45d52ee008f2172de1b938804" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.merger()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822515d45cbc0307bb90ab647eb2d1e2f31d12a6" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.newBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbef3e40fb189e71d755423958e73e7c8d6b17a" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.supplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63d0416850a069485d0c4b2d4a83c1e7fdb11b2" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator$.toJavaDoubleAccumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ec098d79609c26948c1d924e96c6f3ff9fa56c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.DoubleAccumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa009cd21b673cb2c0f4e7bfe15f6aa25f9f7d9" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.addOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e701c81026a8efc0ba772986a2cf10010589f96d" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c277dacf87415b73b341456f3a8b0d7bee56ec7" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.className()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e3650c2c8647324b4ce255b66fe517dbcea01f" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed28a4766a7ebfd54559752c68dd14d84e5b6666" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.collect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4b46972ac8cccba53e284e3a04fb4b72694029" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d612eed4ce74a6420503e4645987812d592392" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.countLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef242dfd7b3f8c12a62c28cf5daf63c6a59ba18" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.drain()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d9733450320dc8a89bc9a7704bf49398259786" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.efficientStepper()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da7c8b1ecbc81f9034f8b89d7dd6f5d880906ab" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea5b5083f1596585b2a120a1de87a068cb3b067" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6a2752cc3c3004ac7ac7d3070cdcc1f2e3db1c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7ad5d06e2ac0e423cb1bd9efe5a4959f417f3d" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.filterNot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f3f21866fb017f9f69a6f56eb55db491066739" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.flatMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990fbf54ccf4860cabeb170d4ab4853d21b53f23" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.forall()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa928d7fb27d114bd3bbcdff487f6b5161a3532f" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.foreach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7fdfde514b4d321aec9b5bf1c830119abb43151" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.fromSpecific()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfd671791e5d774f0d7af31558b7b99262733ab" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.iterableFactory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06530d7019bb43a2e788834625d4fc355fb353d" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e338e2898dae713f6750e0c3514e76b89d34d09" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e4c0d1d0c3b8b36658b1bf02534666e2b395cd" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.newSpecificBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f692bad133bc3d74433a87c58d2ffe8a704aed" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.result()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d83eae4e8257b85d06090278b04a2a7ab11cf9" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e8d31c553fa7107fce8e01b44d37acbc964c80" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.to()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2282d21ec4bbd3e425f55db39b92f9373ec5e4b6" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e90bb5f46ada32a108f62697918f818b393737" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.toList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adeca84b87a0667408df5c003deaead85d6218a" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6c7e402f35d32dd0077c4d3e4467def7ca73f1" translate="yes" xml:space="preserve">
          <source>DoubleConsumer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f8109ec5fdf2135fac1d27eecf2916a3b1bfe2" translate="yes" xml:space="preserve">
          <source>DoubleIsFractional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d79a48ac4c9ccd71c9226deac3a8f25fe5bd3f" translate="yes" xml:space="preserve">
          <source>DoublePredicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ef9a012e1b04f581afb7e8e297eaeb1c486f0f" translate="yes" xml:space="preserve">
          <source>DoubleStepper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca655b80f0c19360689c5144bc2356f3f7c7144" translate="yes" xml:space="preserve">
          <source>DoubleStepper$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0310fa9947b5253213b72e623cfbfbe9855b424a" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c939fb333fbe45f5c9914d33fd3d3563b524ae1" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd86898d0df40d4e340c34b096adeeb0ccc241a" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator.DoubleStepperSpliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5483427db13ea9e9a83d4093cee2c4421df3742c" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator.characteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac61396991381388ba9a40d38b5174643adb6c67" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator.estimateSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef3faacd32c474444a62cfbc3d5453e12a78864" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fde1188540a835dca06d67aa88f7d0fae8f82aa" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator.tryAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b82cb20d400ae00642bdc2551a760487e905f2" translate="yes" xml:space="preserve">
          <source>DoubleStepper$.DoubleStepperSpliterator.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a863fea8a2b09671d4c82769bf2ed3e9916be158" translate="yes" xml:space="preserve">
          <source>DoubleStepper.javaIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3be52d2ebc30fcb9e2b8b6b89ee797a3438532d" translate="yes" xml:space="preserve">
          <source>DoubleStepper.spliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14ff4532ab9735d44c6c0b64149a061d7a1c702" translate="yes" xml:space="preserve">
          <source>DoubleStepper.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39432ca436cbaa15b5b576f20b33b2a3cbd6174e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a088b3115056ef6acd3ab4b406c823e1724e216" translate="yes" xml:space="preserve">
          <source>Drop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa2e258a25ce83055559047425815730723ff09" translate="yes" xml:space="preserve">
          <source>DropRight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555e7c2252712e1d6efae05457d2ab100d68eed6" translate="yes" xml:space="preserve">
          <source>Drops longest prefix of chars that satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7ff073ba493b7eec40c62423d4edad40171659" translate="yes" xml:space="preserve">
          <source>Drops longest prefix of elements that satisfy a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd362c05982eea589ecab5d551937dbea6a91ed" translate="yes" xml:space="preserve">
          <source>DummyImplicit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d99e4276f916facff5c8b9377a075dfadc398f" translate="yes" xml:space="preserve">
          <source>DummyImplicit$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd04ce4a21582707022260a2ef33f76551a366a" translate="yes" xml:space="preserve">
          <source>DummyImplicit$.dummyImplicit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448c79c00687ceec4fd724156b37affd2fc8f32b" translate="yes" xml:space="preserve">
          <source>DummyImplicit.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d36c8ae3a13b0b88b2e6107460289b2cab0ac" translate="yes" xml:space="preserve">
          <source>Duration$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9532d8e9fbe30c15244c2d517dd42862e86bcaf7" translate="yes" xml:space="preserve">
          <source>Duration$.DurationIsOrdered$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd4acdf24dc6b912eba59e249af1945bfd5cac4" translate="yes" xml:space="preserve">
          <source>Duration$.DurationIsOrdered$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0086b1adc062a12e1919e9931c526807b6951789" translate="yes" xml:space="preserve">
          <source>Duration$.DurationIsOrdered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5b665c7b1c02da03cf0b13b1b343880523600f" translate="yes" xml:space="preserve">
          <source>Duration$.Inf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb12d42dcd936b4046db4a7cb09ebc86095a3b9" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a68f5b5262838dd967e7738dd1816ca7b9fc25" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5116b16294c9259876d6e9001af5c7dbabbe5775" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.*()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a5cb932cb0d67d3b1a71cc88996be1ac31737f" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec27c9069fad059e0b219951ab63c131bec4486" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaff98bfa04efd0db0eb2270da3052c0069d031" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite./()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c219ddcc3f4c1c92ba469f610dea4dc032da1c" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.isFinite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eae28def7bfc4bd21db5cff8858789d811bd08f" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.length()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca11bfaa7485642ba882b1bb45dc823216c20a13" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toCoarsest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58f4047841388444aac0ce3483b2fe40392195c" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec0df87650fd90f550bf3f1cc2a32089c45eb44" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toHours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e175380cc3d9cd71d5511473c1e108378d160845" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toMicros()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d7a50ca6a10aad56d99da2f32e80a47e1fc5d6" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toMillis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdde72be9e4eedf69ff4c65075b8c409e93e5a4" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toMinutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db318e137950d10bfefb1d13e7c2d96296c851e" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toNanos()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5ed6c255f0a03d42f79e134f6090eeae1e174e" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.toSeconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae112261e9d87d86d0c8b40dd73e551e97103e6c" translate="yes" xml:space="preserve">
          <source>Duration$.Infinite.unit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df12910546efb51b10d4e85877239da3669819" translate="yes" xml:space="preserve">
          <source>Duration$.MinusInf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c48bd28ba78ca36960cfba2c56ca696ecfe8ad1" translate="yes" xml:space="preserve">
          <source>Duration$.Undefined()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a7e3f2a8c4c2819f7634d2f87a9c150140344d" translate="yes" xml:space="preserve">
          <source>Duration$.Zero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c4220e4af70e3947c986b9313755614e064116" translate="yes" xml:space="preserve">
          <source>Duration$.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b741132b98f6df787ea8fcbbd8c788ddc24f2b8" translate="yes" xml:space="preserve">
          <source>Duration$.create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6979c2332f03ab3717aa8e48527f49cd6f345532" translate="yes" xml:space="preserve">
          <source>Duration$.fromNanos()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e41763b65dfbfbc28d47918dbb36873dc61905" translate="yes" xml:space="preserve">
          <source>Duration$.timeUnit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87599c507308e475986b99a8dd34872c77f9d4d7" translate="yes" xml:space="preserve">
          <source>Duration$.timeUnitName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e709609ee0d0d96a80b3551bd236e18c71f59da" translate="yes" xml:space="preserve">
          <source>Duration$.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06fd45db0442aa4d51f4630ac652660e5741e72" translate="yes" xml:space="preserve">
          <source>Duration.*()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba27fb5af522824c7abe4ea5b6581753356cff0e" translate="yes" xml:space="preserve">
          <source>Duration.+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9b69c23012940b1e1580134ff59f9d8d53937c" translate="yes" xml:space="preserve">
          <source>Duration.-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0451ab0b4108362b21e1eb79ebac3dca31d4cd31" translate="yes" xml:space="preserve">
          <source>Duration./()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4052c68ad9359738874308fa12ae10f4fc4864" translate="yes" xml:space="preserve">
          <source>Duration.div()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cfcb71aececf86fd1455b37c05c4418cfbaa06" translate="yes" xml:space="preserve">
          <source>Duration.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718fefc49feeabb31c2432d28b4e4806f6b68da7" translate="yes" xml:space="preserve">
          <source>Duration.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f936024a841e3374b0b46aa3ff8bcb97bba0cacb" translate="yes" xml:space="preserve">
          <source>Duration.isFinite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3514ccabfcbd8e18a650a92a3b4a16d1a4237617" translate="yes" xml:space="preserve">
          <source>Duration.length()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72890c0a9024a7982bbf4f35b49859177b0cda63" translate="yes" xml:space="preserve">
          <source>Duration.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acee66527c07eee9a0b5a24e02c75ff1ab995f1d" translate="yes" xml:space="preserve">
          <source>Duration.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a00d6fe74035faccd25dccc9c603e9ac1fb796" translate="yes" xml:space="preserve">
          <source>Duration.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5569fb13d656f6c97c11189d4c349b89345d1d" translate="yes" xml:space="preserve">
          <source>Duration.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa7c6d3eb42b70a0c389e693126098f8700dabb" translate="yes" xml:space="preserve">
          <source>Duration.minus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95c27c1ff520a51273248d65b532eedcd235734" translate="yes" xml:space="preserve">
          <source>Duration.mul()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b344f512e15e29827ed261fc934460e04e87777" translate="yes" xml:space="preserve">
          <source>Duration.neg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8651625c717f1a7818151031436eac646482f4e" translate="yes" xml:space="preserve">
          <source>Duration.plus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b37d058346c86e097e9887e306d4e6c5adc0099" translate="yes" xml:space="preserve">
          <source>Duration.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f88ef39616c3820be269ef35fac443af691905" translate="yes" xml:space="preserve">
          <source>Duration.toCoarsest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca97be59853ebe5716f826aec5de090bd060154" translate="yes" xml:space="preserve">
          <source>Duration.toDays()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d022b07e8f4e7cc5b0776021b84e5644805d00e2" translate="yes" xml:space="preserve">
          <source>Duration.toHours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4438fd4fec56757beea8383850cb7dc5fff51e8f" translate="yes" xml:space="preserve">
          <source>Duration.toMicros()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2713ff82ff0496b7fb1aef3f5eca7927287c72" translate="yes" xml:space="preserve">
          <source>Duration.toMillis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf5200687fb4cf46a5c2d5187012eee190cf30f" translate="yes" xml:space="preserve">
          <source>Duration.toMinutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e88c4380b27b903b1943dca4ed67bacbe28633" translate="yes" xml:space="preserve">
          <source>Duration.toNanos()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c07f1a7a1dabc61cfc12f22e9c3cafcdc04bd17" translate="yes" xml:space="preserve">
          <source>Duration.toSeconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9f40d8ad0d1eb97dc0fdd81f519402c930ac65" translate="yes" xml:space="preserve">
          <source>Duration.toUnit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbe6a935b566c0005a3b4c0a4d09f16647d638d" translate="yes" xml:space="preserve">
          <source>Duration.unary_-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640f938b807d4ac9861b5350e5a6044ce921a78b" translate="yes" xml:space="preserve">
          <source>Duration.unit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525bad7b406cc55fb294c90d4a4845f35a14e6a6" translate="yes" xml:space="preserve">
          <source>DurationConversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8651aed007d5959e10d719d204a40e7f9099e2c0" translate="yes" xml:space="preserve">
          <source>DurationConversions$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c486ef4ea2613a61bfa7eb177695a276c5b524b" translate="yes" xml:space="preserve">
          <source>DurationConversions$.Classifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266a81c2187ae2dad5adfe58248203e9afbb646e" translate="yes" xml:space="preserve">
          <source>DurationConversions$.Classifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561912941bdd784e6b1d5b10bb5e2b3fe0757d0e" translate="yes" xml:space="preserve">
          <source>DurationConversions$.Classifier.R()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8224a708c42cf87c52bc5ee892814f91c3cf2e29" translate="yes" xml:space="preserve">
          <source>DurationConversions$.Classifier.convert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988125d1088371a3e8bceefa3da652ff9fabd186" translate="yes" xml:space="preserve">
          <source>DurationConversions$.fromNowConvert$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94c4955644edeedf216ba1acf6d03a3e7c6a1f5" translate="yes" xml:space="preserve">
          <source>DurationConversions$.fromNowConvert$.R()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48c7e473ebe3e44a94a31420ff272feb5d6a442" translate="yes" xml:space="preserve">
          <source>DurationConversions$.fromNowConvert$.convert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf22d3ff66661482d35ffa9eb5acf12b6539533" translate="yes" xml:space="preserve">
          <source>DurationConversions$.fromNowConvert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2429aeddd06a1737cdffeddd7897ef7d34dfa5" translate="yes" xml:space="preserve">
          <source>DurationConversions$.spanConvert$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eba27cb7dd1a2705c527b20409c990219146b1d" translate="yes" xml:space="preserve">
          <source>DurationConversions$.spanConvert$.R()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc1afaded9b3eabd5405a006d499d289ad13702" translate="yes" xml:space="preserve">
          <source>DurationConversions$.spanConvert$.convert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a73ed0ed86d93987c3f475fb1e59b5e7edc676" translate="yes" xml:space="preserve">
          <source>DurationConversions$.spanConvert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d422db871a59206d01aacec2823662d4f3ba58" translate="yes" xml:space="preserve">
          <source>DurationConversions.day()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd53ac45588eda44d35d9784dfed0b3f41f97160" translate="yes" xml:space="preserve">
          <source>DurationConversions.days()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a963b0876e53206d775d4825a62fc5e2ac91df9d" translate="yes" xml:space="preserve">
          <source>DurationConversions.durationIn()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8451a2d740ee58ecad5b163ee88132052a6ec2b6" translate="yes" xml:space="preserve">
          <source>DurationConversions.hour()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6074855e996b63f08f3b628989488408b98c1f" translate="yes" xml:space="preserve">
          <source>DurationConversions.hours()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e216b8482a5a7fac555ff2ad87fb77156a849d94" translate="yes" xml:space="preserve">
          <source>DurationConversions.micro()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2f2ec21fad521e5b9767dc380b1af458cd5cfe" translate="yes" xml:space="preserve">
          <source>DurationConversions.micros()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf19ecb1fa00b7b06970084865a35f82dababfb" translate="yes" xml:space="preserve">
          <source>DurationConversions.microsecond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13ccf83d8fd5d3ce2f4a49ffb8048552129606b" translate="yes" xml:space="preserve">
          <source>DurationConversions.microseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2318c997d8217916c1001b9fe32e650de01f56aa" translate="yes" xml:space="preserve">
          <source>DurationConversions.milli()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6b9ad0b32f37fcf91d74217c6f6307d847eb52" translate="yes" xml:space="preserve">
          <source>DurationConversions.millis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2bea54c52ed11b33b540124a2aecd5ef44eab4" translate="yes" xml:space="preserve">
          <source>DurationConversions.millisecond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca74d37aeb104d0b1f0bdd8f8738fe9e010ab35c" translate="yes" xml:space="preserve">
          <source>DurationConversions.milliseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a999250994b20678d7be745fee8524c0210dda0" translate="yes" xml:space="preserve">
          <source>DurationConversions.minute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5e561693fdd04cff8013dbe23e7bea80d9072f" translate="yes" xml:space="preserve">
          <source>DurationConversions.minutes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ee2a25bfebd0d3a1b5c61a9ad64e92be2c691f" translate="yes" xml:space="preserve">
          <source>DurationConversions.nano()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310ef36d0dbc3325b87bee4a5531c8c1de9c522b" translate="yes" xml:space="preserve">
          <source>DurationConversions.nanos()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763b3726c6a970783d597d09c12c722400764114" translate="yes" xml:space="preserve">
          <source>DurationConversions.nanosecond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e16a4bbec25392beaeb8457276d09395efc870" translate="yes" xml:space="preserve">
          <source>DurationConversions.nanoseconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d53d310a22b5b6348032262910658bb2df0d82" translate="yes" xml:space="preserve">
          <source>DurationConversions.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69543b7ba0bcc4a177ece3968132084934db2e82" translate="yes" xml:space="preserve">
          <source>DurationConversions.second()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8181b812c5419abf059732faef629e0592412272" translate="yes" xml:space="preserve">
          <source>DurationConversions.seconds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dcb1f1bfb718b62cf8c02804f3b9b3d65c5c63" translate="yes" xml:space="preserve">
          <source>DurationConverters$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d2db18a868c5dc4cc0fcaea6313522fc0ee661" translate="yes" xml:space="preserve">
          <source>DurationConverters$.JavaDurationOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e354791ce124c897e870748943e2f9a0cd7ad9a1" translate="yes" xml:space="preserve">
          <source>DurationConverters$.JavaDurationOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2becebfa175b7ad571d47d4df5edf56d95a8a75" translate="yes" xml:space="preserve">
          <source>DurationConverters$.JavaDurationOps.JavaDurationOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6666f9bd03aba435569e49c17449b4f9cedb901" translate="yes" xml:space="preserve">
          <source>DurationConverters$.JavaDurationOps.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83192f43a2c3f515ae585f2cc884fbd1b496151" translate="yes" xml:space="preserve">
          <source>DurationConverters$.ScalaDurationOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf2d10735e2ec6238e877684275f5747054e77" translate="yes" xml:space="preserve">
          <source>DurationConverters$.ScalaDurationOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbc6e8ef5cb18023d6636322d3de14bf53893c1" translate="yes" xml:space="preserve">
          <source>DurationConverters$.ScalaDurationOps.ScalaDurationOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5e215ed174f29cd85c7f17c050bfbfd679fce8" translate="yes" xml:space="preserve">
          <source>DurationConverters$.ScalaDurationOps.toJava()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9352e47a375cd8bdb9462c7471454d68ec686e" translate="yes" xml:space="preserve">
          <source>DurationConverters$.toJava()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b204caefdb61a78a99398e7bf2a260babc35ea" translate="yes" xml:space="preserve">
          <source>DurationConverters$.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12c6dbf34c3d6d70ded50fe3cc3dfaffd38c99b" translate="yes" xml:space="preserve">
          <source>DurationConverters.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb739dfaa883916a2f3db6aaa122bce70006b53" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cca21f0f84b59602d673ed64a2dedc883c6853f" translate="yes" xml:space="preserve">
          <source>Dynamic.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e6ec0ccb08ee17b810d003203db9da4e0f8155" translate="yes" xml:space="preserve">
          <source>DynamicVariable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e821935e955dcfb471136885f8dbc3f2d63d32" translate="yes" xml:space="preserve">
          <source>DynamicVariable.DynamicVariable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5d57cde437d15ecce332aa80ab64bc1bfcd342" translate="yes" xml:space="preserve">
          <source>DynamicVariable.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1f80848696696d198379203fd3c3aba46f4173" translate="yes" xml:space="preserve">
          <source>DynamicVariable.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0d1797ae50b4bee7a0e9eec19794cc066be8c8" translate="yes" xml:space="preserve">
          <source>DynamicVariable.value()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da43a1a59ea4401954a07c97ccafbd7ed0848ef" translate="yes" xml:space="preserve">
          <source>DynamicVariable.value_=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e7cc0cfc97871547a178fb85e41e73c4a82772" translate="yes" xml:space="preserve">
          <source>DynamicVariable.withValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1faff9dba43b0c97849acff295f9fc2023c8d8b" translate="yes" xml:space="preserve">
          <source>Each call to a &lt;code&gt;Value&lt;/code&gt; method adds a new unique value to the enumeration. To be accessible, these values are usually defined as &lt;code&gt;val&lt;/code&gt; members of the enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc473e3948c1b6cce6480e701f4301059beb18c" translate="yes" xml:space="preserve">
          <source>Each class is independently composable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2495f61f7905c3e4a81167fa8045bd83edd23b" translate="yes" xml:space="preserve">
          <source>Each of these features has to be explicitly imported into the current scope to become available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733b7da2bbac5b076e2731cca0e78ccba39213fe" translate="yes" xml:space="preserve">
          <source>Each thread gets its own stack of bindings. When a new thread is created, the &lt;code&gt;DynamicVariable&lt;/code&gt; gets a copy of the stack of bindings from the parent thread, and from then on the bindings for the new thread are independent of those for the original thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d082051969d0c789ed34552d945745c65292c" translate="yes" xml:space="preserve">
          <source>Efficiently appends the entire remaining input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce66816f136197c7d250d6b7049ac23c96d5063f" translate="yes" xml:space="preserve">
          <source>Either is now right-biased, calls to &lt;code&gt;right&lt;/code&gt; should be removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e253392a9826512ad0bc017b5264d3bdc3d07e4e" translate="yes" xml:space="preserve">
          <source>Either the development or release version if known, otherwise the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f46288f96970e120627cc1b32424ad3c6256bca" translate="yes" xml:space="preserve">
          <source>Either the value or the exception to complete the promise with. If the promise has already been fulfilled, failed or has timed out, calling this method will throw an IllegalStateException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e0e6bbf6119bab873ed499dcb00fb5742ae217" translate="yes" xml:space="preserve">
          <source>Either$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99abc86a76fc3ae2c4d184f80bb439eb0e8ee7f" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b669073890f39e1ce5535966e665ccc7574a11" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14aabb135562272ef63b3993fce47e8daa56cbb8" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.LeftProjection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f313acb61b95986bc902643d988e251dcf8348" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.e()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f51dca84fab2eea4e209f6e34e589f9189fb026" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bd4dd578d10d54f88f36533fdcadfdef2b32c0" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.filterToOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4301247b3a0212a27696517f545b15030d576fdb" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.flatMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f1b61452abe03954e2aa7e9aac96df705f433f" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.forall()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1da2bd40bca4bdb04acb300dfecb2ca3b2deb8" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.foreach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf6643283c25825cb47c1601e40eb2a48fb48fd" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.getOrElse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632cd23c6ecebd92e392f9d1f4aa509cc5c91130" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd938ecad8656ecb5d1224c302e4c8bdbf1f0749" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.toOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ac9e1eb53a889a07b7683d4df272417f49697" translate="yes" xml:space="preserve">
          <source>Either$.LeftProjection.toSeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39ee7ad92a443bbdf03dd89ed0ba1d78c32992d" translate="yes" xml:space="preserve">
          <source>Either$.MergeableEither</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047120e28f10759eb0a5d81a7557f8ec0e86a8b0" translate="yes" xml:space="preserve">
          <source>Either$.MergeableEither()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4716255e08e98124014d83bb71dffd906a604d1" translate="yes" xml:space="preserve">
          <source>Either$.MergeableEither.MergeableEither()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3f590b8d6b1c79a2a32800579df7b48c3e0736" translate="yes" xml:space="preserve">
          <source>Either$.MergeableEither.merge()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c737d874b02e96faf48fc7efabfed1a255fd8e4c" translate="yes" xml:space="preserve">
          <source>Either$.RightProjection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3353e2499f9df7821d50c3436cd67b12efd95eb6" translate="yes" xml:space="preserve">
          <source>Either$.RightProjection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af66eda54ea95d8a3fbd4fdf315ad42fe6b5d9dd" translate="yes" xml:space="preserve">
          <source>Either$.RightProjection.RightProjection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f377472c9171342863ee29ffe00e2c7dba7868" translate="yes" xml:space="preserve">
          <source>Either$.RightProjection.e()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88eb635dbef111db3a63b06aeabaa7fa4d85a216" translate="yes" xml:space="preserve">
          <source>Either$.RightProjection.exists()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
