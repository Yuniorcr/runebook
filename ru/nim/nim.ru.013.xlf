<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="nim">
    <body>
      <group id="nim">
        <trans-unit id="8116bea897b2743f77f8a66b5128d6cba5adfe30" translate="yes" xml:space="preserve">
          <source>compile project to Objective C code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5858e91bd397257dbec71c46ea7c93a1771d3ccd" translate="yes" xml:space="preserve">
          <source>compile project with C code generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56189673f55c74d6be27ff5907c5f7238ac6a0ca" translate="yes" xml:space="preserve">
          <source>compile project with default code generator (C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e427a299ac2655d68a7d3adfbc62239369a3c0e" translate="yes" xml:space="preserve">
          <source>compile the whole module as usual, following import statements recursively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e109f33d33779792ba8650726693fed3313fc1" translate="yes" xml:space="preserve">
          <source>compile time define pragmas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f41b9482eb8d3b1b4de6aa988d408c0f07f3f7c" translate="yes" xml:space="preserve">
          <source>compile, c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82710ccc442ca5dd46bdb0326c21c40a466a7376" translate="yes" xml:space="preserve">
          <source>compileTime pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06fa39103880dfc0024e25d424fa232b76d4eaf" translate="yes" xml:space="preserve">
          <source>compileToC, cc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e374ceb13877fe53b489a4f9ebce897bdc445a9d" translate="yes" xml:space="preserve">
          <source>compileToCpp, cpp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60989cfddb11a604917d09ae093ba0031b9cc1c3" translate="yes" xml:space="preserve">
          <source>compileToOC, objc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff16b36dc77810e63bda254427a1d6965fa127a" translate="yes" xml:space="preserve">
          <source>complex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484fea418bcd6b1cd515748dc365ae6d01b83095" translate="yes" xml:space="preserve">
          <source>complex.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c94fc7df5eb2c410b25736e80091057db8c53c" translate="yes" xml:space="preserve">
          <source>complex.*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60d3e1f07c71272413b5bfc3ebf9f7a28a60549" translate="yes" xml:space="preserve">
          <source>complex.*=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a610867f8fbf1be285a854eefe49e7a21fb849" translate="yes" xml:space="preserve">
          <source>complex.+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983d7d2fc9dd7181a0794556bb8991653633a751" translate="yes" xml:space="preserve">
          <source>complex.+=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfb0aad7d9c4ddcf67d44f87a4420b7e153bcd1" translate="yes" xml:space="preserve">
          <source>complex.-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e8660d83bc9371f5c2e0d6c6e915018293aa12" translate="yes" xml:space="preserve">
          <source>complex.-=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daefbf219b57d6c9875f1067310e19803e8e2137" translate="yes" xml:space="preserve">
          <source>complex./</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a883f6ff25d85ce07f3ac7bd6342dab9bc51f494" translate="yes" xml:space="preserve">
          <source>complex./=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31306e83798fab120d570195851396a96ffed726" translate="yes" xml:space="preserve">
          <source>complex.==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80e0f105e24b87d1112884050c38708ae26ef63" translate="yes" xml:space="preserve">
          <source>complex.=~</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3b0ce6e99c5777842adf319fe10571d40c1696" translate="yes" xml:space="preserve">
          <source>complex.im</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd74c717c34aff1f158ccb3fdd52b36648b3690b" translate="yes" xml:space="preserve">
          <source>complex.ln()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19452fa612f6d74eb9f60dd0f9ff534042181f22" translate="yes" xml:space="preserve">
          <source>computedGoto pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beebfd39a5e0eba9e3c35b552b6e46143d56b83" translate="yes" xml:space="preserve">
          <source>computes an MD5 value of &lt;em&gt;s&lt;/em&gt; and returns its string representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbadfec528568a9d4864ab3e6b26d19e1f3274c" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;bitwise and&lt;/em&gt; of numbers &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b004a00e4d00ea8e2b863eb92d003b65d7d077f1" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;bitwise complement&lt;/em&gt; of the integer &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4147196185cfcc2bc6ed2f70f3fc240370a13325" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;bitwise or&lt;/em&gt; of numbers &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322bae07c422b09d69e1350cd39e724491927986" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;bitwise xor&lt;/em&gt; of numbers &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5cf175c1df864692a03f1e486225af0e25c6bf" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;shift left&lt;/em&gt; operation of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bf9b03d5731adf30be782e848cda78bd9fc106" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;shift right&lt;/em&gt; operation of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, filling vacant bit positions with zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d31db4c82f8cd8e643509887f8a4fd8c090d77" translate="yes" xml:space="preserve">
          <source>computes the &lt;em&gt;shift right&lt;/em&gt; operation of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22453b900504ef1fa2078fe20986e09440c27b6b" translate="yes" xml:space="preserve">
          <source>computes the MD5Digest value for a string &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b47cb299a3a0bd0e02a82f19472b4e5a1bc5d7" translate="yes" xml:space="preserve">
          <source>computes the current correlation of the two data sets pushed into &lt;em&gt;r&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f027ba7a4cea53ef7fab81d2ef40a2c9b89d5b8" translate="yes" xml:space="preserve">
          <source>computes the current intercept of &lt;em&gt;r&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4174ccb363a20e83470a5af2a1a79ff29fe0af" translate="yes" xml:space="preserve">
          <source>computes the current mean of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2304e2a2d5c35399e239a8ba377207791ad84c9f" translate="yes" xml:space="preserve">
          <source>computes the current population kurtosis of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177c6ee88709a9d786479c5986faae841e826b0d" translate="yes" xml:space="preserve">
          <source>computes the current population skewness of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8b3882092daff33449648e44ef23b49543c9ce" translate="yes" xml:space="preserve">
          <source>computes the current population standard deviation of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2ee4e5de991995034cf5906a649f85d5c3a60e" translate="yes" xml:space="preserve">
          <source>computes the current population variance of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4632d5e375f278ed3e88e0df8f5d48ee732d68f3" translate="yes" xml:space="preserve">
          <source>computes the current sample kurtosis of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32df280d908a64ecdee81ee2851bb6ce77e844cf" translate="yes" xml:space="preserve">
          <source>computes the current sample skewness of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481104789002a3355b1cc5646f42ca0b443bbf2f" translate="yes" xml:space="preserve">
          <source>computes the current sample standard deviation of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b6b19e9bf8d074ae9cde88060aa936a79b5742" translate="yes" xml:space="preserve">
          <source>computes the current sample variance of &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf37a7b5ea6f666360e9dd828ed46ee1eaf9dc8" translate="yes" xml:space="preserve">
          <source>computes the current slope of &lt;em&gt;r&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9c8e3279a23d9be02736d0796bd22c1a75fb0b" translate="yes" xml:space="preserve">
          <source>computes the floating point division</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5223f13b9cbb887e1e805b1e885b49e6cf8c0ae3" translate="yes" xml:space="preserve">
          <source>computes the integer division. This is roughly the same as &lt;code&gt;trunc(x/y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661e6625cdfe3697934430407f65527bd4674200" translate="yes" xml:space="preserve">
          <source>computes the integer modulo operation (remainder). This is the same as &lt;code&gt;x - (x div y) * y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4e34c0281d500a9d7f186c9ea5a76f55e1acb8" translate="yes" xml:space="preserve">
          <source>computes the mean of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45762202252a46647971d4824b191a4c713c35bd" translate="yes" xml:space="preserve">
          <source>computes the population kurtosis of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7be40839a62ff27a6972f6b3fc214c6344db21" translate="yes" xml:space="preserve">
          <source>computes the population skewness of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fe205470177419c50b0ec90c89cbc5a07bea30" translate="yes" xml:space="preserve">
          <source>computes the population standardDeviation of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b1108eb688cd00f27fc8eb71e8286d2e855ce7" translate="yes" xml:space="preserve">
          <source>computes the population variance of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d3d0e71416ee87949e72ea181f8176e5cbbc5b" translate="yes" xml:space="preserve">
          <source>computes the sample kurtosis of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58287548101f7eddc40de5727f89508b119dbfb" translate="yes" xml:space="preserve">
          <source>computes the sample skewness of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da6abcb69a18586465d62958af42a4a35d9707f" translate="yes" xml:space="preserve">
          <source>computes the sample variance of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee442b4271e8d013079a6299f004a4806f980cd9" translate="yes" xml:space="preserve">
          <source>computes the sanple standardDeviation of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821c416a64e1eb7b37854a12b1dc1b2c4eaa3d55" translate="yes" xml:space="preserve">
          <source>computes x to power raised of y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0652e436f42d75f5672a8bd9ae2f398a55115d51" translate="yes" xml:space="preserve">
          <source>configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2236cfe146831cff52ba89d879b3b96fd0a802b7" translate="yes" xml:space="preserve">
          <source>configuration files for Nim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff6eb82820ea436aadbc7a1a67e09ff3fd3fd0f" translate="yes" xml:space="preserve">
          <source>confirm each occurrence/replacement; there is a chance to abort any time without touching the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d859a2e521a548c9295e39f0e9d266095a454b" translate="yes" xml:space="preserve">
          <source>consider overloading &lt;code&gt;[]&lt;/code&gt; for get; consider to not use &lt;code&gt;get&lt;/code&gt; as a prefix: &lt;code&gt;len&lt;/code&gt; instead of &lt;code&gt;getLen&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64895d284300d0df33a7f44a1099c0984f21008c" translate="yes" xml:space="preserve">
          <source>consider overloading &lt;code&gt;[]=&lt;/code&gt; for put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9ebcb7eaf781313c9fab7a945f314fbceedbd7" translate="yes" xml:space="preserve">
          <source>constructs a &quot;captured search&quot; for the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8a30dbf8cc90f24337f357c8c5c5245d892f0d" translate="yes" xml:space="preserve">
          <source>constructs a &quot;greedy positive repetition&quot; with the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99c221431e380b22c9be3f7a1078f7998c8f0ab" translate="yes" xml:space="preserve">
          <source>constructs a &quot;greedy repetition&quot; for the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9554f68842651378a7f461acb1aee712f4e513" translate="yes" xml:space="preserve">
          <source>constructs a &quot;not predicate&quot; with the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b91f6eb1f0963e796e6176cb0f5a173da4a16a5" translate="yes" xml:space="preserve">
          <source>constructs a &quot;search&quot; for the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094abaea407548f9da97fa411ecebaad828fec2f" translate="yes" xml:space="preserve">
          <source>constructs a &lt;code&gt;Any&lt;/code&gt; object from &lt;em&gt;x&lt;/em&gt;. This captures &lt;em&gt;x&lt;/em&gt;'s address, so &lt;em&gt;x&lt;/em&gt; can be modified with its &lt;code&gt;Any&lt;/code&gt; wrapper! The client needs to ensure that the wrapper &lt;strong&gt;does not&lt;/strong&gt; live longer than &lt;em&gt;x&lt;/em&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e642b1965bd894ebe61a434604f48932e27d1292" translate="yes" xml:space="preserve">
          <source>constructs a &lt;em&gt;substitution expression&lt;/em&gt; from &lt;em&gt;s&lt;/em&gt;. Currently this performs no syntax checking but this may change in later versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04636909d64d9b40cad6c9ad05603098a7f3b297" translate="yes" xml:space="preserve">
          <source>constructs a PEG from a character set &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4d62adf3d0e0e08b52898c6a0e6e4ec317cf29" translate="yes" xml:space="preserve">
          <source>constructs a PEG from a terminal char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50d8dde46fb5cc51d427d53c6aae9a1f06ed0cf" translate="yes" xml:space="preserve">
          <source>constructs a PEG from a terminal string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ab7cd8a97f5da594a268a241252db284893c00" translate="yes" xml:space="preserve">
          <source>constructs a PEG from a terminal string; ignore case for matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e9084757897b92e08b5538bd1a3e0a33b4e19c" translate="yes" xml:space="preserve">
          <source>constructs a PEG from a terminal string; ignore style for matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833251986f25e1cddb142deb6c9af8ea46afc79b" translate="yes" xml:space="preserve">
          <source>constructs a PEG that consists of the nonterminal symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e28101c35362f33307f5adcec7e8600e864e83f" translate="yes" xml:space="preserve">
          <source>constructs a Peg object from &lt;em&gt;pattern&lt;/em&gt;. &lt;em&gt;filename&lt;/em&gt;, &lt;em&gt;line&lt;/em&gt;, &lt;em&gt;col&lt;/em&gt; are used for error messages, but they only provide start offsets. &lt;em&gt;parsePeg&lt;/em&gt; keeps track of line and column numbers within &lt;em&gt;pattern&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860933076bf9860bffdc717421de3ecaaee81518" translate="yes" xml:space="preserve">
          <source>constructs a Peg object from the &lt;em&gt;pattern&lt;/em&gt;. The short name has been chosen to encourage its use as a raw string modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f540fd003fe9a28bdfeada6445c048677b0a454" translate="yes" xml:space="preserve">
          <source>constructs a SqlQuery from the string &lt;em&gt;query&lt;/em&gt;. This is supposed to be used as a raw-string-literal modifier: &lt;code&gt;sql&quot;update user set counter = counter + 1&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9822bcbb1e2ebb30e12a0b027ab8e37652d29497" translate="yes" xml:space="preserve">
          <source>constructs a back reference of the given &lt;em&gt;index&lt;/em&gt;. &lt;em&gt;index&lt;/em&gt; starts counting from 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f33e7c0c751b8d7f03dfc47a66787f3aa07e0b" translate="yes" xml:space="preserve">
          <source>constructs a back reference of the given &lt;em&gt;index&lt;/em&gt;. &lt;em&gt;index&lt;/em&gt; starts counting from 1. Ignores case for matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6285d4e2a00a1876b030a912429b75f1651eea81" translate="yes" xml:space="preserve">
          <source>constructs a back reference of the given &lt;em&gt;index&lt;/em&gt;. &lt;em&gt;index&lt;/em&gt; starts counting from 1. Ignores style for matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893ae5eb4181e2c777883ec076350c1e34510593" translate="yes" xml:space="preserve">
          <source>constructs a capture with the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91652f6e76c60fa6b2078e9f0341758052c0e99" translate="yes" xml:space="preserve">
          <source>constructs a color from RGB values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff0aefbff04bb68d3ad91db809af734bc4b7243" translate="yes" xml:space="preserve">
          <source>constructs a nonterminal symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab112ac0fb8ee7516870b056a74f4cae7342a1e" translate="yes" xml:space="preserve">
          <source>constructs a sequence with all the PEGs from &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868b5116745195bb63d091f5a4187a79e52566b8" translate="yes" xml:space="preserve">
          <source>constructs an &quot;and predicate&quot; with the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40463a957552d7f7e03172d182b99692663b521" translate="yes" xml:space="preserve">
          <source>constructs an identifier from the string &lt;em&gt;s&lt;/em&gt;&lt;strong&gt;Deprecated since version 0.18.0&lt;/strong&gt;: Use &lt;code&gt;ident&lt;/code&gt; or &lt;code&gt;newIdentNode&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00eeee6c5b5f199f3dd029adb421324ebef2cdc5" translate="yes" xml:space="preserve">
          <source>constructs an identifier from the string &lt;em&gt;s&lt;/em&gt;&lt;strong&gt;Deprecated since version 0.18.1&lt;/strong&gt;; Use &lt;code&gt;ident&lt;/code&gt; or &lt;code&gt;newIdentNode&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121121a82af3f956b745ab8b62b8e0328da8062f" translate="yes" xml:space="preserve">
          <source>constructs an optional for the PEG &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2854c037ed60f70794dfd711d2f67878a892e2" translate="yes" xml:space="preserve">
          <source>constructs an ordered choice with the PEGs in &lt;em&gt;a&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a7b382a280f9ed3b512d9f1b34a8b70be126e" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;$&lt;/code&gt; which matches the end of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8bd65c40013b5f4e8692acd11a1edbcc303524" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;\letter&lt;/code&gt; which matches any Unicode letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b851647767e5d7a19f2402a62cde5a1ccdc1524" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;\lower&lt;/code&gt; which matches any Unicode lowercase letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7290afc0d873ba67d90a4d400e4b79e7cbc4ba0f" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;\title&lt;/code&gt; which matches any Unicode title letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6343c624dd53e4d64a0f179826dc766cdcb5641" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;\upper&lt;/code&gt; which matches any Unicode uppercase letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab965d8107d6f4797e73c3229512c58f713cf0b2" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;\white&lt;/code&gt; which matches any Unicode whitespace character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be6be6b8a22fb8cb02112c76c8ccda0508b1641" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;code&gt;^&lt;/code&gt; which matches the start of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c161e580ba1f70a998705542592d27e4db5af86d" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;span id=&quot;any-character_1&quot;&gt;any character&lt;/span&gt; (&lt;code&gt;.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09919d3f030554b805d5e8faf13aa2b5b53444c" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;span id=&quot;any-rune_1&quot;&gt;any rune&lt;/span&gt; (&lt;code&gt;_&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175d52f4295f5e16591799341c5e97ee1cc7aae9" translate="yes" xml:space="preserve">
          <source>constructs the PEG &lt;span id=&quot;newline_1&quot;&gt;newline&lt;/span&gt; (&lt;code&gt;\n&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8375efe0890520313af55bfe3b1b335a41c872f" translate="yes" xml:space="preserve">
          <source>contains an AST interpreter for compile time evaluation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eb64c8d0783b7ef4ec08c9408cd88d6dcf832d" translate="yes" xml:space="preserve">
          <source>contains an IEEE floating point value of &lt;em&gt;Not A Number&lt;/em&gt;. Note that you cannot compare a floating point value to this value and expect a reasonable result - use the &lt;em&gt;classify&lt;/em&gt; procedure in the module &lt;code&gt;math&lt;/code&gt; for checking for NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4110d8ef00d2e52ed29a1527078027cf4dc10f17" translate="yes" xml:space="preserve">
          <source>contains code to deal with constant folding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4129df156cdf1770f76c074a26e22b9a06b06d3f" translate="yes" xml:space="preserve">
          <source>contains global and local compiler options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6985247cb770cb230a606295a740ba7c3ead40f9" translate="yes" xml:space="preserve">
          <source>contains helpers for the C code generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83a32b48ab7a60cdb66f6e382c27162f6b6caa7" translate="yes" xml:space="preserve">
          <source>contains the IEEE floating point value of negative infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77f88fbb3607ba1e76462261811b1720f7eac81" translate="yes" xml:space="preserve">
          <source>contains the IEEE floating point value of positive infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313f1984894092b4e29c2a0e1e7227487c044de2" translate="yes" xml:space="preserve">
          <source>contains the captured substrings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520895428a9677f585f0a3fefce67fddb2955e06" translate="yes" xml:space="preserve">
          <source>contains the matching algorithm that is used for proc calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5eddd3d8c471e0887238495f689c1558fd8f287" translate="yes" xml:space="preserve">
          <source>contains the semantic checking phase for expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edda41e3807c0b750835ad49c767c77360423af7" translate="yes" xml:space="preserve">
          <source>contains the semantic checking phase for statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cb1f6dddd6bac11693bf136c739530dcd8a4b9" translate="yes" xml:space="preserve">
          <source>contains the semantic checking phase for types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2712f600ed89d9cd3b059a8e56cce12435f6ef12" translate="yes" xml:space="preserve">
          <source>convert a reStructuredText file to HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0636f4c75ee4cbced61fbd7380d3b69c27b805" translate="yes" xml:space="preserve">
          <source>convert a reStructuredText file to TeX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3199988097e4bb3103e8c34b8dfe8796545d8f" translate="yes" xml:space="preserve">
          <source>converter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d97534444a72230599dcb604722200edae332d" translate="yes" xml:space="preserve">
          <source>converts &lt;em&gt;n&lt;/em&gt; into its string representation. No &lt;code&gt;&amp;lt;$xml ...$&amp;gt;&lt;/code&gt; declaration is produced, so that the produced XML fragments are composable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330e3ea7d24907a4eacac3efcb1d687cddee30d6" translate="yes" xml:space="preserve">
          <source>converts &lt;em&gt;s&lt;/em&gt; to &lt;em&gt;destEncoding&lt;/em&gt; that was given to the converter &lt;em&gt;c&lt;/em&gt;. It assumed that &lt;em&gt;s&lt;/em&gt; is in &lt;em&gt;srcEncoding&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c5050d3911947c3d204cb47210db4e95c411af" translate="yes" xml:space="preserve">
          <source>converts &lt;em&gt;s&lt;/em&gt; to &lt;em&gt;destEncoding&lt;/em&gt;. It assumed that &lt;em&gt;s&lt;/em&gt; is in &lt;em&gt;srcEncoding&lt;/em&gt;. This opens a converter, uses it and closes it again and is thus more convienent but also likely less efficient than re-using a converter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517950b22a3a5a19bc7d5e33b5e0880e3475d97f" translate="yes" xml:space="preserve">
          <source>converts a &lt;code&gt;cstringArray&lt;/code&gt; to a &lt;code&gt;seq[string]&lt;/code&gt;. &lt;em&gt;a&lt;/em&gt; is supposed to be of length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefd3ea3f31f04abc111ed46c936b61e816ed2d1" translate="yes" xml:space="preserve">
          <source>converts a &lt;code&gt;cstringArray&lt;/code&gt; to a &lt;code&gt;seq[string]&lt;/code&gt;. &lt;em&gt;a&lt;/em&gt; is supposed to be terminated by &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6efbd456ee9223316b3e7a331cb223b0ca9096" translate="yes" xml:space="preserve">
          <source>converts a &lt;em&gt;Time&lt;/em&gt; value to a string representation. It will use the local time zone and use the format &lt;code&gt;yyyy-MM-dd'T'HH-mm-sszzz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db34bd2941ae41b79501e456d4ed34e56b1da10" translate="yes" xml:space="preserve">
          <source>converts a MD5Digest value into its string representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1035556aa0743f9daa8e79ff9efd4b6a47969a" translate="yes" xml:space="preserve">
          <source>converts a Nim identifier to a string &lt;strong&gt;Deprecated since version 0.18.1&lt;/strong&gt;; Use &lt;code&gt;strVal&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee44af61c52980a66f7ea9f77b3981eae7ca6c2" translate="yes" xml:space="preserve">
          <source>converts a Nim symbol to a string &lt;strong&gt;Deprecated since version 0.18.1&lt;/strong&gt;; Use &lt;code&gt;strVal&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b466c4f112a57e50e20465d371c20a9f779ae2a4" translate="yes" xml:space="preserve">
          <source>converts a PEG to its string representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c01d8f49833648e18c2e3762784c62604ee4a" translate="yes" xml:space="preserve">
          <source>converts a Rune to its numeric HTML entity equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412fb8b43d037303b2668483682287be45d63e22" translate="yes" xml:space="preserve">
          <source>converts a biggestfloat &lt;em&gt;f&lt;/em&gt; into a &lt;code&gt;biggestint&lt;/code&gt;. Conversion rounds &lt;em&gt;f&lt;/em&gt; if it does not contain an integer value. If the conversion fails (because &lt;em&gt;f&lt;/em&gt; is infinite for example), &lt;em&gt;EInvalidValue&lt;/em&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b12ec106116673e105210be8f6066fb117d817" translate="yes" xml:space="preserve">
          <source>converts a color into its textual representation. Example: &lt;code&gt;#00FF00&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be30ce1437619f174553f3ade5639def52e0897f" translate="yes" xml:space="preserve">
          <source>converts a floating point number &lt;em&gt;f&lt;/em&gt; into an &lt;code&gt;int&lt;/code&gt;. Conversion rounds &lt;em&gt;f&lt;/em&gt; if it does not contain an integer value. If the conversion fails (because &lt;em&gt;f&lt;/em&gt; is infinite for example), &lt;em&gt;EInvalidValue&lt;/em&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b312ba0fa810a59476ed25122119f57b12997a0" translate="yes" xml:space="preserve">
          <source>converts a rope back to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe22b1b84554f9107d5b2329ecd4bcc6749f2b9" translate="yes" xml:space="preserve">
          <source>converts an biggestint &lt;em&gt;i&lt;/em&gt; into a &lt;code&gt;biggestfloat&lt;/code&gt;. If the conversion fails, &lt;em&gt;EInvalidValue&lt;/em&gt; is raised. However, on most platforms the conversion cannot fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d197e360e51bb26b484cf63d751f2c11cc4884" translate="yes" xml:space="preserve">
          <source>converts an int in the range 0..255 to a character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaf4382c79464751cdc55889a93a988f379c45e" translate="yes" xml:space="preserve">
          <source>converts an integer &lt;em&gt;i&lt;/em&gt; into a &lt;code&gt;float&lt;/code&gt;. If the conversion fails, &lt;em&gt;EInvalidValue&lt;/em&gt; is raised. However, on most platforms the conversion cannot fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de6e43bbbd95b8d8bae08aa95e0e40b8f820e3a" translate="yes" xml:space="preserve">
          <source>converts the AST &lt;em&gt;n&lt;/em&gt; to the concrete Nim code and wraps that in a string literal node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d12dccd406897cfbf8d4b388eb54928df5aeff5" translate="yes" xml:space="preserve">
          <source>converts the AST of &lt;em&gt;x&lt;/em&gt; into a string representation. This is very useful for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bd354967d6da5d68c9540c90a6352e927c88c6" translate="yes" xml:space="preserve">
          <source>cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e16358ab54ebfa3d0beb08be1e6a65375cb1a3" translate="yes" xml:space="preserve">
          <source>coord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df43804bfd95d9367aaf5bbd971d9cf9b6d7c34a" translate="yes" xml:space="preserve">
          <source>coordinate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c45c3b9b55048f0f391f6a264b7a7ab1c1a16fe" translate="yes" xml:space="preserve">
          <source>copies &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;. &lt;em&gt;dest&lt;/em&gt; does not need to be initialized by &lt;em&gt;initIntSet&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f58c230367051b64a8f4add270ffa3bebe23609" translate="yes" xml:space="preserve">
          <source>copies a slice of &lt;em&gt;s&lt;/em&gt; into a new string and returns this new string. The bounds &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;last&lt;/em&gt; denote the indices of the first and last characters that shall be copied. If &lt;code&gt;last&lt;/code&gt; is omitted, it is treated as &lt;code&gt;high(s)&lt;/code&gt;. If &lt;code&gt;last &amp;gt;= s.len&lt;/code&gt;, &lt;code&gt;s.len&lt;/code&gt; is used instead: This means &lt;code&gt;substr&lt;/code&gt; can also be used to &lt;span id=&quot;cut_1&quot;&gt;cut&lt;/span&gt; or &lt;span id=&quot;limit_1&quot;&gt;limit&lt;/span&gt; a string's length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def451ccc5c6796b7b26019a29db835fc25aaf39" translate="yes" xml:space="preserve">
          <source>copies the contents from the memory at &lt;code&gt;source&lt;/code&gt; to the memory at &lt;code&gt;dest&lt;/code&gt;. Exactly &lt;code&gt;size&lt;/code&gt; bytes will be copied. The memory regions may not overlap. Like any procedure dealing with raw memory this is &lt;em&gt;unsafe&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87923e2c84b484112f34d47f2c2fd7f2a718578" translate="yes" xml:space="preserve">
          <source>copies the contents from the memory at &lt;code&gt;source&lt;/code&gt; to the memory at &lt;code&gt;dest&lt;/code&gt;. Exactly &lt;code&gt;size&lt;/code&gt; bytes will be copied. The memory regions may overlap, &lt;code&gt;moveMem&lt;/code&gt; handles this case appropriately and is thus somewhat more safe than &lt;code&gt;copyMem&lt;/code&gt;. Like any procedure dealing with raw memory this is still &lt;em&gt;unsafe&lt;/em&gt;, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c6f2753b7a22b4942e64c42b553fd0baa407e2" translate="yes" xml:space="preserve">
          <source>copies the value of &lt;em&gt;y&lt;/em&gt; to &lt;em&gt;x&lt;/em&gt;. The assignment operator for &lt;code&gt;Any&lt;/code&gt; does NOT do this; it performs a shallow copy instead!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f46892fac7adf17f5fd4a6784f79eb39e8bd234" translate="yes" xml:space="preserve">
          <source>copy lineinfo from info node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720a9c05577b498c577f3768dc190a98fd0b206d" translate="yes" xml:space="preserve">
          <source>coro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1469596fc89ae50a650e8c64e3e152a16b66cd18" translate="yes" xml:space="preserve">
          <source>correlation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bbd745f9340a2e865036333ddce7fdf0c537bb" translate="yes" xml:space="preserve">
          <source>cpuinfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d935177b1e5f13f934de25b6d6a653858406ebf" translate="yes" xml:space="preserve">
          <source>cpuload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10795d84f69c9068600580548a91e46cf8023c97" translate="yes" xml:space="preserve">
          <source>create a tags file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19d908b6fc7aa343700bb93d5d9b75f674f4d17" translate="yes" xml:space="preserve">
          <source>creates a NULL terminated cstringArray from &lt;em&gt;a&lt;/em&gt;. The result has to be freed with &lt;em&gt;deallocCStringArray&lt;/em&gt; after it's not needed anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c65362432336536556ae93b7eb553d9bc239e4" translate="yes" xml:space="preserve">
          <source>creates a comment statement node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea3dcf88d2e260b175dda2eec01169ff7d9e9dc" translate="yes" xml:space="preserve">
          <source>creates a float literal node from &lt;em&gt;f&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9e07bbd53f0e64fca20c86c569bfdcba9961a3" translate="yes" xml:space="preserve">
          <source>creates a int literal node from &lt;em&gt;i&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c461113c2a3b770419ab87bdd3aaafeb454c2d" translate="yes" xml:space="preserve">
          <source>creates a new &lt;code&gt;PXmlNode&lt;/code&gt; of kind &lt;code&gt;xnComment&lt;/code&gt; with the text &lt;em&gt;cdata&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58eea856b0470ca9bb339994b7632c7e1cc587ce" translate="yes" xml:space="preserve">
          <source>creates a new &lt;code&gt;PXmlNode&lt;/code&gt; of kind &lt;code&gt;xnComment&lt;/code&gt; with the text &lt;em&gt;comment&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349e827e6aaf392e13cf3e559e93b6adb03c4dad" translate="yes" xml:space="preserve">
          <source>creates a new &lt;code&gt;PXmlNode&lt;/code&gt; of kind &lt;code&gt;xnEntity&lt;/code&gt; with the text &lt;em&gt;entity&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7f0729e5789c664856296f8f69d038c6b6a5a8" translate="yes" xml:space="preserve">
          <source>creates a new &lt;code&gt;PXmlNode&lt;/code&gt; of kind &lt;code&gt;xnText&lt;/code&gt; with the given &lt;em&gt;tag&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09316dc9241582332bb83ae473883c546d24c25" translate="yes" xml:space="preserve">
          <source>creates a new &lt;code&gt;PXmlNode&lt;/code&gt; of kind &lt;code&gt;xnText&lt;/code&gt; with the text &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6d07455c00a7db5e82909e4155c46f7eb3116e" translate="yes" xml:space="preserve">
          <source>creates a new XML tree with &lt;em&gt;tag&lt;/em&gt;, &lt;em&gt;children&lt;/em&gt; and &lt;em&gt;attributes&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cddc615e2438a3b0b906fa830e096d77a0a1d5b" translate="yes" xml:space="preserve">
          <source>creates a new count table that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfa08ecf3e2a73ca1a0dd0b37ab726fcca25c8e" translate="yes" xml:space="preserve">
          <source>creates a new count table with every key in &lt;em&gt;keys&lt;/em&gt; having a count of how many times it occurs in &lt;em&gt;keys&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b7fc73096211cb0d280cc12c36323c64ca21bd" translate="yes" xml:space="preserve">
          <source>creates a new doubly linked list that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fec826920fd438b84452c7f540366955ec5bc3" translate="yes" xml:space="preserve">
          <source>creates a new doubly linked node with the given &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c46709b22376758718c9fe15655554fc2c05441" translate="yes" xml:space="preserve">
          <source>creates a new doubly linked ring that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc2f9317b69d0528d9b6aeae14883fee90f356e" translate="yes" xml:space="preserve">
          <source>creates a new hash table that contains the given &lt;em&gt;pairs&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b66ad67693d5c16b4440592088245ab80e8f96" translate="yes" xml:space="preserve">
          <source>creates a new hash table that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5231b982ad5abe887ae454e89d29a307809ea84f" translate="yes" xml:space="preserve">
          <source>creates a new int set that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a538eadbf5590aeee4a964f63aa07810d9c2dd8d" translate="yes" xml:space="preserve">
          <source>creates a new object of type &lt;code&gt;T&lt;/code&gt; and returns a safe (traced) reference to it as result value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e21a870d97e7896c2a09d2ec59e8b55e6e96b35" translate="yes" xml:space="preserve">
          <source>creates a new object of type &lt;code&gt;T&lt;/code&gt; and returns a safe (traced) reference to it in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b41ae557afea56775cd7cd04aaccd2b8dc880a1" translate="yes" xml:space="preserve">
          <source>creates a new object of type &lt;code&gt;T&lt;/code&gt; and returns a safe (traced) reference to it in &lt;code&gt;a&lt;/code&gt;. This is &lt;strong&gt;unsafe&lt;/strong&gt; as it allocates an object of the passed &lt;code&gt;size&lt;/code&gt;. This should only be used for optimization purposes when you know what you're doing!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe741f2e50d91d21d462484d2e4cc2b0e1f864b" translate="yes" xml:space="preserve">
          <source>creates a new object of type &lt;code&gt;T&lt;/code&gt; and returns a safe (traced) reference to it in &lt;code&gt;a&lt;/code&gt;. When the garbage collector frees the object, &lt;em&gt;finalizer&lt;/em&gt; is called. The &lt;em&gt;finalizer&lt;/em&gt; may not keep a reference to the object pointed to by &lt;em&gt;x&lt;/em&gt;. The &lt;em&gt;finalizer&lt;/em&gt; cannot prevent the GC from freeing the object. Note: The &lt;em&gt;finalizer&lt;/em&gt; refers to the type &lt;em&gt;T&lt;/em&gt;, not to the object! This means that for each object of type &lt;em&gt;T&lt;/em&gt; the finalizer will be called!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0419ee8b6d525104cc82c439fd2f24af9012c94" translate="yes" xml:space="preserve">
          <source>creates a new ordered hash table that contains the given &lt;em&gt;pairs&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba136868f54996fe82d7b173221a2614eaba8ba9" translate="yes" xml:space="preserve">
          <source>creates a new ordered hash table that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d951ed86093adc9c8e9530a58926ffe48a044295" translate="yes" xml:space="preserve">
          <source>creates a new sequence of type &lt;code&gt;seq[T]&lt;/code&gt; with length 0 and capacity &lt;code&gt;cap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3a2ec1748f0337420a5e483f4115c2eacb3c09" translate="yes" xml:space="preserve">
          <source>creates a new sequence of type &lt;code&gt;seq[T]&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d9e49d15519c613e3d2a99e6dd59e6d989c567" translate="yes" xml:space="preserve">
          <source>creates a new sequence of type &lt;code&gt;seq[T]&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;. This is equivalent to &lt;code&gt;s = @[]; setlen(s, len)&lt;/code&gt;, but more efficient since no reallocation is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72d23bbea62b1a1ed9b3f7ccb1f42a63a5e273c" translate="yes" xml:space="preserve">
          <source>creates a new sequence, calling &lt;em&gt;init&lt;/em&gt; to initialize each value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d24f4741242e235518e2c1e51319dc77d062a7e" translate="yes" xml:space="preserve">
          <source>creates a new singly linked list that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b16db830cc6a53f705543e137d70c43dfeb651a" translate="yes" xml:space="preserve">
          <source>creates a new singly linked node with the given &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7780ad51f38942e15c3cf816162666ab7f66d0cd" translate="yes" xml:space="preserve">
          <source>creates a new singly linked ring that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2398b905380e89043e4d2523e458c63d2e8e1fa" translate="yes" xml:space="preserve">
          <source>creates a new stream from the file &lt;em&gt;f&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe935700d335801cd92f588caf9f13e32a790ff" translate="yes" xml:space="preserve">
          <source>creates a new stream from the file named &lt;em&gt;filename&lt;/em&gt; with the mode &lt;em&gt;mode&lt;/em&gt;. If the file cannot be opened, an IO exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe27b886184cf55a0dd616acaa868f1bbbb35ba" translate="yes" xml:space="preserve">
          <source>creates a new stream from the file named &lt;em&gt;filename&lt;/em&gt; with the mode &lt;em&gt;mode&lt;/em&gt;. If the file cannot be opened, nil is returned. See the &lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; module for a list of available FileMode enums. &lt;strong&gt;This function returns nil in case of failure. To prevent unexpected behavior and ensure proper error handling, use openFileStream instead.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128a07c8a331ac619a67fdcd36daeb1bbcb89fe8" translate="yes" xml:space="preserve">
          <source>creates a new stream from the file named &lt;em&gt;filename&lt;/em&gt; with the mode &lt;em&gt;mode&lt;/em&gt;. Raises ## &lt;em&gt;EOS&lt;/em&gt; if the file cannot be opened. See the &lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; module for a list of available FileMode enums. &lt;code&gt;fileSize&lt;/code&gt; can only be set if the file does not exist and is opened with write access (e.g., with fmReadWrite).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ca6e6a0695341490c6ccef4e78cdcb27812fd2" translate="yes" xml:space="preserve">
          <source>creates a new stream from the string &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7a3cde400075a918e7a219d5397f5a1f8c8a35" translate="yes" xml:space="preserve">
          <source>creates a new string table that is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d88f9ba967c6d93d94023ba951013456509afb1" translate="yes" xml:space="preserve">
          <source>creates a new string table with given key value pairs. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead2f5268a7af99e0a4101769072627b791d3b52" translate="yes" xml:space="preserve">
          <source>creates a new thread &lt;em&gt;t&lt;/em&gt; and starts its execution. Entry point is the proc &lt;em&gt;tp&lt;/em&gt;. &lt;em&gt;param&lt;/em&gt; is passed to &lt;em&gt;tp&lt;/em&gt;. &lt;em&gt;TArg&lt;/em&gt; can be &lt;code&gt;void&lt;/code&gt; if you don't need to pass any data to the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f32a087152b8e2faa910117cadd5d11c035dcd6" translate="yes" xml:space="preserve">
          <source>creates a node that binds &lt;em&gt;ident&lt;/em&gt; to a symbol node. The bound symbol may be an overloaded symbol. if &lt;em&gt;ident&lt;/em&gt; is a NimNode, it must have nkIdent kind. If &lt;code&gt;rule == brClosed&lt;/code&gt; either an &lt;code&gt;nkClosedSymChoice&lt;/code&gt; tree is returned or &lt;code&gt;nkSym&lt;/code&gt; if the symbol is not ambiguous. If &lt;code&gt;rule == brOpen&lt;/code&gt; either an &lt;code&gt;nkOpenSymChoice&lt;/code&gt; tree is returned or &lt;code&gt;nkSym&lt;/code&gt; if the symbol is not ambiguous. If &lt;code&gt;rule == brForceOpen&lt;/code&gt; always an &lt;code&gt;nkOpenSymChoice&lt;/code&gt; tree is returned even if the symbol is not ambiguous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdaa82cac17ad3fae01feeee4bdf67025fe59da" translate="yes" xml:space="preserve">
          <source>creates a string literal node from &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffacf0f4b3edd0c9753f8154652d60034c45431a" translate="yes" xml:space="preserve">
          <source>creates an exception object of type &lt;code&gt;exceptn&lt;/code&gt; and sets its &lt;code&gt;msg&lt;/code&gt; field to &lt;em&gt;message&lt;/em&gt;. Returns the new exception object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761533e919ef8c95b0da5949cb2b97992968ec61" translate="yes" xml:space="preserve">
          <source>creates an identifier node from &lt;em&gt;i&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8aee0f43bb016c5d33a9fc46ba91efef70d79e1" translate="yes" xml:space="preserve">
          <source>creates an identifier node from &lt;em&gt;i&lt;/em&gt;. It is simply an alias for &lt;code&gt;ident(string)&lt;/code&gt;. Use that, it's shorter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521292fc1740f6e43122e56fd3139c33c49e3b23" translate="yes" xml:space="preserve">
          <source>critbits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a42ae29b132c85b02582a1c225deb593a5ea2a" translate="yes" xml:space="preserve">
          <source>critbits.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8256fe84b8876953945adc857af58aa365e218" translate="yes" xml:space="preserve">
          <source>critbits.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ee86a8f756b68e10a54c231d3ce4f5c92406e4" translate="yes" xml:space="preserve">
          <source>critbits.[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfe36fca83935468caeeafbf4b282e09e4ec4af" translate="yes" xml:space="preserve">
          <source>critbits.keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a8a58d2a021107658a30c85402a136c205b238" translate="yes" xml:space="preserve">
          <source>csource command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d09981d43e5ba79a200a2f8ef250167e7b2e21" translate="yes" xml:space="preserve">
          <source>cstring type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c24e533285f436277bff5568bb8a8e7109b3ccd" translate="yes" xml:space="preserve">
          <source>cstrutils</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28e687a42f85916d928d0dab20c25ef2691a3f0" translate="yes" xml:space="preserve">
          <source>ctags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb4517567b2170013c761fe77424c97f2b7d7bf" translate="yes" xml:space="preserve">
          <source>db_common</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4998313a1a26dbfac8203d5da1be55235ee7170f" translate="yes" xml:space="preserve">
          <source>db_mysql</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1bcbf35deb68fe05e92bc5921fc19b6c9fe727" translate="yes" xml:space="preserve">
          <source>db_mysql.Row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f532b875fa69393f278175240e35495d22f6003e" translate="yes" xml:space="preserve">
          <source>db_mysql.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209a73718c092bc660fb3454cb847ab97ffe6f66" translate="yes" xml:space="preserve">
          <source>db_mysql.rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878af4f78c057276e63c04efc7d106e824aea441" translate="yes" xml:space="preserve">
          <source>db_odbc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899f5671e9719cb2febdb8f1f6499d99b78e68d3" translate="yes" xml:space="preserve">
          <source>db_odbc.Row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7494a34255ab1629d3aea79be7368c5fb942a22f" translate="yes" xml:space="preserve">
          <source>db_odbc.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5285a8a37cc35403b67c53f7b8e09e3f82a0cc4" translate="yes" xml:space="preserve">
          <source>db_odbc.rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb9254e6a7a6582952455df898089697ebe27d5" translate="yes" xml:space="preserve">
          <source>db_postgres</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343ed7fabc5e150566d0bd4cc24daed5152ed11b" translate="yes" xml:space="preserve">
          <source>db_postgres.Row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64292813f4d76ceb8d79a019a3f7461f41840301" translate="yes" xml:space="preserve">
          <source>db_postgres.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab08bed2d0ed700c2a2f23d546951363617b53e8" translate="yes" xml:space="preserve">
          <source>db_postgres.rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd923859bcef976d5eb442e018806e5f22ecc6f6" translate="yes" xml:space="preserve">
          <source>db_sqlite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd8aa0f5e5da69a943fdb2f6e0a56811aaaee20" translate="yes" xml:space="preserve">
          <source>db_sqlite.Row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4207f66766dc1c120dffca21f4658be4b31cc3" translate="yes" xml:space="preserve">
          <source>db_sqlite.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95664eff312f955fb8f5869a80a098127107440" translate="yes" xml:space="preserve">
          <source>db_sqlite.rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737cadfdf8fe139420f010857dd7e20bb7fb4dd2" translate="yes" xml:space="preserve">
          <source>deactivate the Nimble path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5574c4eb0023838b9792250d22ca95eb0cecdf9" translate="yes" xml:space="preserve">
          <source>decodes a string in base64 representation back into its original form. Whitespace is skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50b25cf6e3932cb7e2819194cf57ca6d7a84ab6" translate="yes" xml:space="preserve">
          <source>decrements &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;n&lt;/em&gt;; &lt;em&gt;n&lt;/em&gt; is an integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bec54e58ebcdb0f7e08f7444c70a51c62a2bb6" translate="yes" xml:space="preserve">
          <source>decrements &lt;em&gt;x&lt;/em&gt; by one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f9440287cb5d42111b987ceece642d4012da39" translate="yes" xml:space="preserve">
          <source>decrements the ordinal &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt;. If such a value does not exist, &lt;code&gt;EOutOfRange&lt;/code&gt; is raised or a compile time error occurs. This is a short notation for: &lt;code&gt;x = pred(x, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7725917a3b4741839b3a42cdce68020e1811cb19" translate="yes" xml:space="preserve">
          <source>deep program analysis for threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043cfb4bed39bcc5bd8120c98bb165427e83c0f2" translate="yes" xml:space="preserve">
          <source>deepCopy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7fbe0f4435e17dfd5821d13b67cc60ec063664" translate="yes" xml:space="preserve">
          <source>default arguments for slice, so that this procedure operates on the entire &lt;code&gt;arg&lt;/code&gt;, and not just on a part of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e231c728b72edab516894164678d17f1c37470eb" translate="yes" xml:space="preserve">
          <source>default floating point type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1ca3e8c262b0298626e9f125c653a49cec9ec4" translate="yes" xml:space="preserve">
          <source>default format string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ce6854d4cd35674bf0b4b7b4033d029ad47a63" translate="yes" xml:space="preserve">
          <source>default integer type; bitwidth depends on architecture, but is always the same as a pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec4152f62fae6054423ca50abbabea94c96c69a" translate="yes" xml:space="preserve">
          <source>default iterator over a collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6aa25e6cb9026a984b4aa1baf5206dea83a8c4" translate="yes" xml:space="preserve">
          <source>default value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1110f52db318f5286caa8e6d5b099edbeaf2c126" translate="yes" xml:space="preserve">
          <source>default(T); this may be out of the valid range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898a97f01b27b58678b2c74519b63b57c5a03cd7" translate="yes" xml:space="preserve">
          <source>define a conditional symbol (Optionally: Define the value for that symbol, see: &quot;compile time define pragmas&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391adff33493f24652d67eebd2b61a13413aef43" translate="yes" xml:space="preserve">
          <source>defines the maximum number of subpatterns that can be captured. More subpatterns cannot be captured!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7a6bf16d748d6d419cbe593e396c1bfeafdffc" translate="yes" xml:space="preserve">
          <source>defines the maximum number of subpatterns that can be captured. This limit still exists for &lt;code&gt;replacef&lt;/code&gt; and &lt;code&gt;parallelReplace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0615bd208587617b70d1e81b70d79d38faba8c65" translate="yes" xml:space="preserve">
          <source>del is supposed to be faster than delete, because it does not keep the order; delete keeps the order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9485989ff514b5106b7738850fd73c23e8c1e3f7" translate="yes" xml:space="preserve">
          <source>delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4318ec769b58274a741e6e16bdce2a6d6151ce" translate="yes" xml:space="preserve">
          <source>delete the &lt;em&gt;i&lt;/em&gt;'th child of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8dc584fb2c03a34dca04b474313cf0e5b9a7d6" translate="yes" xml:space="preserve">
          <source>delete, del</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16a42a7ea3adc628c4dd2d432580d2894488a5e" translate="yes" xml:space="preserve">
          <source>deletes &lt;em&gt;key&lt;/em&gt; from hash table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d5ad0d37268194f16e521c3c9e6c21e13a5e03" translate="yes" xml:space="preserve">
          <source>deletes &lt;em&gt;key&lt;/em&gt; from hash table &lt;em&gt;t&lt;/em&gt;. Does nothing if the key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1eb69acc24d0ba99ee8a0826ef14cf920d6fbe" translate="yes" xml:space="preserve">
          <source>deletes &lt;em&gt;key&lt;/em&gt; from ordered hash table &lt;em&gt;t&lt;/em&gt;. O(n) complexity. Does nothing if the key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a369dda9bf27ec731e84bff2f0ef419a2ff11436" translate="yes" xml:space="preserve">
          <source>deletes &lt;em&gt;n&lt;/em&gt; children of &lt;em&gt;father&lt;/em&gt; starting at index &lt;em&gt;idx&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa070e9d1092178b4ca493d5e99808c51fc48c4" translate="yes" xml:space="preserve">
          <source>deletes the item at index &lt;em&gt;i&lt;/em&gt; by moving &lt;code&gt;x[i+1..]&lt;/code&gt; by one position. This is an O(n) operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adb2bc07b2d7d1ed9c5ed232541f66f0a34c7db" translate="yes" xml:space="preserve">
          <source>deletes the item at index &lt;em&gt;i&lt;/em&gt; by putting &lt;code&gt;x[high(x)]&lt;/code&gt; into position &lt;em&gt;i&lt;/em&gt;. This is an O(1) operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a44baadebb7417fde0c40f6babc69c4851a009" translate="yes" xml:space="preserve">
          <source>deprecated pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6e3ae706dc34d4dca994c45d2e00d6ac2808ea" translate="yes" xml:space="preserve">
          <source>deques</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83f4d888d6f094f64882854532b1d669083db94" translate="yes" xml:space="preserve">
          <source>deques.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f1e15eab256a9c1270edfb6f3d2a41117e5edc" translate="yes" xml:space="preserve">
          <source>deques.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8971351c5e8bd932d9875f6650599a888a5661" translate="yes" xml:space="preserve">
          <source>deques.[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8e95371d0227e98beaa7902e851983bcca2e74" translate="yes" xml:space="preserve">
          <source>dereference operation for the any &lt;em&gt;x&lt;/em&gt; that represents a ptr or a ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3665a46cecd60984fb5fd1305230f96e80bb0db" translate="yes" xml:space="preserve">
          <source>describes a binary number (example: 0b11101)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168062e46433196f1cc53adaf20d2dc1255d85e6" translate="yes" xml:space="preserve">
          <source>describes a common email address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a2da797ad137858c7e607f36426cf342238b6f" translate="yes" xml:space="preserve">
          <source>describes a database type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc0b4935cd071332e4ceff552795f96ca549c55" translate="yes" xml:space="preserve">
          <source>describes a floating point number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cb3e58bcdb00784ffb30b22fbdcceebb358f3e" translate="yes" xml:space="preserve">
          <source>describes a hexadecimal number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f7b047cc82b235c1a62ccc60bfb3b57df95c12" translate="yes" xml:space="preserve">
          <source>describes a natural number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56460d7ad4423fa7fc1e84fe0a059b4f7a71bc9" translate="yes" xml:space="preserve">
          <source>describes a parsing event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63467532b82b9e8c6d9894509f436d5f79756854" translate="yes" xml:space="preserve">
          <source>describes an URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f9c5265bf749052c73520c7f34f1fbb66d835c" translate="yes" xml:space="preserve">
          <source>describes an identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825720e090e754fc5957e7e7248952552c382f58" translate="yes" xml:space="preserve">
          <source>describes an integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b18b571cf8193c1250c7c78639727ef9930c58b" translate="yes" xml:space="preserve">
          <source>describes an octal number (example: 0o777)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d671495fdb01c25a001e0bd45df9b7ab7ff5613d" translate="yes" xml:space="preserve">
          <source>describes for &lt;em&gt;interpolatedFragments&lt;/em&gt; which part of the interpolated string is yielded; for example in &quot;str$$$var${expr}&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e9317e3d3b201e3b8a28a3be733a7f8365f7c9" translate="yes" xml:space="preserve">
          <source>describes the class a floating point value belongs to. This is the type that is returned by &lt;em&gt;classify&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d9c9dc4d799793e2950d83202737f483e82a77" translate="yes" xml:space="preserve">
          <source>describes the tables operation mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb329146a0dd0d566b0628744d67936558741ffa" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537c1c70887e28a201bc70c300ec31cd75e5bf5c" translate="yes" xml:space="preserve">
          <source>destructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7282f317f21176b86a8d69dfa7b9c1ff1b374f6" translate="yes" xml:space="preserve">
          <source>difference of two sets (A without B's elements)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc1cf1721c304f3a402506625b76241a7ce2c2d" translate="yes" xml:space="preserve">
          <source>different kinds of &lt;code&gt;XmlNode&lt;/code&gt;'s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b4e952685c02835f8520186786f3e9e12c24f2" translate="yes" xml:space="preserve">
          <source>different styles for text output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee737c83ee689c96ef37d3a029068c390ebc8f8" translate="yes" xml:space="preserve">
          <source>dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d392f56d616a516ceabb82ed8906418bce4647d" translate="yes" xml:space="preserve">
          <source>directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89086adb297f1242a1c20cb2ef8a636976d31940" translate="yes" xml:space="preserve">
          <source>directory name of $app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f435fa336612adeb110797726eaf298349340d" translate="yes" xml:space="preserve">
          <source>disables filtering tests with the command line params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c41c62c0e2a9d090fff93b69a6fbe0c21c598b8" translate="yes" xml:space="preserve">
          <source>dispatcher for the different parsers and filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2aee5b3be9261336556a018849e834b0dadd6a" translate="yes" xml:space="preserve">
          <source>distinct auto (see below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db799a6ea6f8c20a36607b109448d269f17f152f" translate="yes" xml:space="preserve">
          <source>distros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3658877899ce8f6c651faf3cf4fdf90b0fe84e79" translate="yes" xml:space="preserve">
          <source>division by zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b622526d53802a91564aaa9357bbbcb88aafb37c" translate="yes" xml:space="preserve">
          <source>do low-level optimizations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981b2664c48164aca9f64764127310d2987b5bb8" translate="yes" xml:space="preserve">
          <source>do not generate a main procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b312b29ca942ac2b8afd00a63d6b5285014d8f37" translate="yes" xml:space="preserve">
          <source>do not read the general configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c017d0f217b4c8380b064f3a378d20afd15ca44" translate="yes" xml:space="preserve">
          <source>do not read the parent dirs' configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbc4412e6d5c5f704a23b641b0b78697bd15be9" translate="yes" xml:space="preserve">
          <source>do not read the project's configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2975db0b28dd4a2c15b2e29cca675b4fcc0106d0" translate="yes" xml:space="preserve">
          <source>do not read the user's configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f029ecb98abe979074a3ab45b74dbd9af02d42" translate="yes" xml:space="preserve">
          <source>doc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0c5b26e357b3eb0aea7989642903f4a8c8778a" translate="yes" xml:space="preserve">
          <source>docgen_sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3d7472d2833a2b4dadb1984045f02c56a1ef54" translate="yes" xml:space="preserve">
          <source>document the whole project (doc2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be65d27ae088a0e03fd8e1331d90b01649464cb6" translate="yes" xml:space="preserve">
          <source>dom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5653f7a7c8efd3dcc57968d0e91d295964c7333" translate="yes" xml:space="preserve">
          <source>dom.Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f26c545eb309bcb5eb0e2471701c1abce6544c" translate="yes" xml:space="preserve">
          <source>dom.go()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0f90618bd12061baae7ba6bd149dd866d20ac4" translate="yes" xml:space="preserve">
          <source>domain, which specifies the protocol family of the created socket. Other domains than those that are listed here are unsupported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05db97d32af1575774fa1a07e87b8a1a87c623f0" translate="yes" xml:space="preserve">
          <source>dot operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9567d1547e105470e4e53c1568f07a209e82a161" translate="yes" xml:space="preserve">
          <source>dump</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58ff5670f2c6cb8733fa2c23948b12ed80b0b59" translate="yes" xml:space="preserve">
          <source>dump all defined conditionals and search paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdce911f6c7a4e81733457f3f5d0283c8e33d9d3" translate="yes" xml:space="preserve">
          <source>dynlib</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b58ebf8cc5a16f65fc4056853ebe818ddd3c2a" translate="yes" xml:space="preserve">
          <source>e raised to the power &lt;em&gt;z&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7815beeecfed542a914949eb8183be30bb4c99d8" translate="yes" xml:space="preserve">
          <source>effect that denotes a database operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6093e023dd06d8632d86bfaa17e60ca6e2937e3" translate="yes" xml:space="preserve">
          <source>effect that denotes a read from an environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e500d6cd968288f265ca4b9558521b9600c8a0" translate="yes" xml:space="preserve">
          <source>effect that denotes a read operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f003998576e60102a4e30fc979510b7d71bf23" translate="yes" xml:space="preserve">
          <source>effect that denotes a read operation from the directory structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1924f64587a9c8974a557d87ec86c357cf48b437" translate="yes" xml:space="preserve">
          <source>effect that denotes a write operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac670cb40ca37d8dbb14957502e46a1fc2205bc" translate="yes" xml:space="preserve">
          <source>effect that denotes a write operation to the directory structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ee533dddaf72e58f44ada13f9d4a3e5e516d03" translate="yes" xml:space="preserve">
          <source>effect that denotes a write to an environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a58f45c4b69fd637ca075ef81e53a19375efca5" translate="yes" xml:space="preserve">
          <source>efficient hashing of a string buffer, from starting position &lt;em&gt;sPos&lt;/em&gt; to ending position &lt;em&gt;ePos&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33132e28ad235a69e3e09b4f4ec179f5434bf1f8" translate="yes" xml:space="preserve">
          <source>efficient hashing of a string buffer, from starting position &lt;em&gt;sPos&lt;/em&gt; to ending position &lt;em&gt;ePos&lt;/em&gt;; case is ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09a92ef7218558a582a400e22e51a50552aaa86" translate="yes" xml:space="preserve">
          <source>efficient hashing of a string buffer, from starting position &lt;em&gt;sPos&lt;/em&gt; to ending position &lt;em&gt;ePos&lt;/em&gt;; style is ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2eb1bdd3cce2e36f82f856f19d32486b8904aa" translate="yes" xml:space="preserve">
          <source>efficient hashing of arrays and sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd25fb6d76d7caa417321e4edaa0a233db7b0da" translate="yes" xml:space="preserve">
          <source>efficient hashing of characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc2a934459f71c672e55cf752898545284a5e17" translate="yes" xml:space="preserve">
          <source>efficient hashing of floats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4709583e1de3c3fa3e25e85583d1a60c7a975b46" translate="yes" xml:space="preserve">
          <source>efficient hashing of int64 integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6670d02b5d4d0d9c81135ecb3c2a404401338f" translate="yes" xml:space="preserve">
          <source>efficient hashing of integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75862e671af55cc482fcec4d8f188e48d23d13f9" translate="yes" xml:space="preserve">
          <source>efficient hashing of null-terminated strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca3db63551787c7516b64df8c63ea16ff83e83f" translate="yes" xml:space="preserve">
          <source>efficient hashing of other ordinal types (e.g., enums)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbbd58e52102e015b3cb1fe5486a65dbe000037" translate="yes" xml:space="preserve">
          <source>efficient hashing of pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6afe0eb8da953274977f7690b6f1dc04a9ebf9" translate="yes" xml:space="preserve">
          <source>efficient hashing of portions of arrays and sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5926c72183d1537a6c7fe0df5584f1f7d328f912" translate="yes" xml:space="preserve">
          <source>efficient hashing of proc vars; closures are supported too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3254aa9b77d1965d63957bf9a3929da13e363ff9" translate="yes" xml:space="preserve">
          <source>efficient hashing of sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75fd1fe3fd3da34dd2135f96c2993c2e94d11bf" translate="yes" xml:space="preserve">
          <source>efficient hashing of strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c653db3db34b4463fc593b511801a3a230d1bc3c" translate="yes" xml:space="preserve">
          <source>efficient hashing of strings; case is ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65ea3fa574d3317a995ef12dcf3041ba947d039" translate="yes" xml:space="preserve">
          <source>efficient hashing of strings; style is ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aef7f74be7741d47ad8159e4c6a3421b7277f25" translate="yes" xml:space="preserve">
          <source>efficient hashing of tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9a416f18239918227f2894db47f304305ae783" translate="yes" xml:space="preserve">
          <source>efficient hashing of uint64 integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d9feaf65082203785c50be4acd4cd3e3197a78" translate="yes" xml:space="preserve">
          <source>efficient hashing of unsigned integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c943495c63fabb3849e25172a8266ecdf8e4e7" translate="yes" xml:space="preserve">
          <source>embeds the original source code as comments in the generated output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6abd54aabd8a0aca102e5fcbd8ab5063afa6bd" translate="yes" xml:space="preserve">
          <source>empty rope is represented by nil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a74d212f7e051aad2f24cde70c984bb01333531" translate="yes" xml:space="preserve">
          <source>enable experimental language feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707e5ce32731cb8377f26bbcca3d52b568bd26c7" translate="yes" xml:space="preserve">
          <source>enables debug information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f29d80c7e9c3ea4fcab5898390ed83b1c484fc" translate="yes" xml:space="preserve">
          <source>encapsulates a database connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c863d5fcc65835bd13adb9b1207fd653546ffac" translate="yes" xml:space="preserve">
          <source>encapsulates the SCGI object and main loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d48b1acbd832a82356f194e13af768a93ab2f2" translate="yes" xml:space="preserve">
          <source>encodes &lt;em&gt;s&lt;/em&gt; into base64 representation. After &lt;em&gt;lineLen&lt;/em&gt; characters, a &lt;em&gt;newline&lt;/em&gt; is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ea170fb85c65de80d382832c897fa8fb1209e6" translate="yes" xml:space="preserve">
          <source>encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8bec266e399bdffcfb1f53dd92b5eaf1055edd" translate="yes" xml:space="preserve">
          <source>end of file marker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e326a663cddb4231701d2610415b0c6a04b9813" translate="yes" xml:space="preserve">
          <source>end subpattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41deefa0f20bbacdf167cacaf9f51246d8b717ac" translate="yes" xml:space="preserve">
          <source>endians</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23594b63deb736919c4122b711d7b1e7e5b50e01" translate="yes" xml:space="preserve">
          <source>enumation of all events that may occur when parsing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41c44c1dfad5d97e0673b71cbaf2991247f6b94" translate="yes" xml:space="preserve">
          <source>enumeration of all events that may occur when parsing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211092c487458b6aaf8672d335b63d9e82a282bf" translate="yes" xml:space="preserve">
          <source>enumeration that lists all errors that can occur</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e454d960df4845f9d69eb11377c8b23882715b" translate="yes" xml:space="preserve">
          <source>environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd7846384181b261593c29caf0613c57a91d38c" translate="yes" xml:space="preserve">
          <source>error pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8398b1bf2a243ed45c127f48e9c749383ea31c6f" translate="yes" xml:space="preserve">
          <source>escape (hex 1B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11bed0feb37c9a9ca2db7ad7de3a387fbfa96bd" translate="yes" xml:space="preserve">
          <source>escapes &lt;code&gt;s&lt;/code&gt; so that it is matched verbatim when used as a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5106584b3c15000cd88618de950c7a8adb469ac" translate="yes" xml:space="preserve">
          <source>escapes &lt;em&gt;s&lt;/em&gt; for inclusion into an XML document. Escapes these characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00c83a25173f6f723e0b0641bef6933dc6d25f2" translate="yes" xml:space="preserve">
          <source>escapes &lt;em&gt;s&lt;/em&gt; so that it is matched verbatim when used as a peg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bacb15ef3747e8b924858ff06e4cc7f54df43b" translate="yes" xml:space="preserve">
          <source>evals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9022e39cf7f815eb56f678864569a7cc8c0d26a" translate="yes" xml:space="preserve">
          <source>every other character is carried over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3499c2729730a7f807efb8676a92dcb6f8a3f8f" translate="yes" xml:space="preserve">
          <source>example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5c3300fc06e4b6d6d22768e5c52e3665f8e704" translate="yes" xml:space="preserve">
          <source>exception that is raised for an invalid subex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f11163ca646822de40bf8d79af8024fdd24572" translate="yes" xml:space="preserve">
          <source>exception that is raised for encoding errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f387ef9fa79bf93dd78373139a36f08d4330886b" translate="yes" xml:space="preserve">
          <source>exception that is raised if a CGI error occurs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d847e4fce9f640893df8b3162b27e71a2d04bee" translate="yes" xml:space="preserve">
          <source>exception that is raised if a database error occurs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87e1f70898205d1065131e1516c2e108f46f11e" translate="yes" xml:space="preserve">
          <source>exception that is raised if a parsing error occurs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5087476b5ebfc72a299db2950baaf0198b7e5a" translate="yes" xml:space="preserve">
          <source>exception that is raised when server does not conform to the implemented protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903569917d904d2425502622b1c4c4ffce621b91" translate="yes" xml:space="preserve">
          <source>excl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3acce247faff36de39e9ee2f7d244c87ceed765" translate="yes" xml:space="preserve">
          <source>exclude</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473fc70f60dd6e6471a9716769b8d750ebf821f9" translate="yes" xml:space="preserve">
          <source>exclude a path from the list of search paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c864c5bdd53bcf66586ea3d677cb2b9fa2a3b302" translate="yes" xml:space="preserve">
          <source>excludes &lt;em&gt;key&lt;/em&gt; from the set &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07bbdcef691ec33eecc85da313c3ab6e2f44758" translate="yes" xml:space="preserve">
          <source>excludes element &lt;code&gt;y&lt;/code&gt; to the set &lt;code&gt;x&lt;/code&gt;. This is the same as &lt;code&gt;x = x - {y}&lt;/code&gt;, but it might be more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383c5b63c3c8a3f9f89d99763423b62ac833693c" translate="yes" xml:space="preserve">
          <source>excludes the set of flags to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d659d96d15c7a1206f44eb36ed72495563140859" translate="yes" xml:space="preserve">
          <source>exe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5602f9eacdb79b54a675b2e91433cd13ed246e" translate="yes" xml:space="preserve">
          <source>executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ae89e0a135945a5e08d9340cd2eac771f228f6" translate="yes" xml:space="preserve">
          <source>execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4a35f1ae7e7c77c71bab8609824ae58fbd42c5" translate="yes" xml:space="preserve">
          <source>executes the commands &lt;em&gt;cmds&lt;/em&gt; in parallel. Creates &lt;em&gt;n&lt;/em&gt; processes that execute in parallel. The highest return value of all processes is returned. Runs &lt;em&gt;beforeRunEvent&lt;/em&gt; before running each command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962626642ad9dabff54c87d78cb5f0005e66d396" translate="yes" xml:space="preserve">
          <source>executes the prepared query and iterates over the result dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b330f057582c9fef5b36d0df971199a154df5d" translate="yes" xml:space="preserve">
          <source>executes the prepared query and returns the whole result dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46373ea605b19c9326dceeae7c694aa4a50fb491" translate="yes" xml:space="preserve">
          <source>executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row or -1 in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c413c6998daace6055bf1759104106f9adf5f69b" translate="yes" xml:space="preserve">
          <source>executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row or -1 in case of an error. For Postgre this adds &lt;code&gt;RETURNING id&lt;/code&gt; to the query, so it only works if your primary key is named &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44b46e27a80ca1ed07f3c8f9444bc01c978e7e8" translate="yes" xml:space="preserve">
          <source>executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fc5f710d2ed600a81989a81cae717c7ced9f14" translate="yes" xml:space="preserve">
          <source>executes the query (typically &quot;INSERT&quot;) and returns the generated ID for the row. For Postgre this adds &lt;code&gt;RETURNING id&lt;/code&gt; to the query, so it only works if your primary key is named &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b713fb78038b1e32e2fc6a4a2a771630b439bcb7" translate="yes" xml:space="preserve">
          <source>executes the query (typically &quot;UPDATE&quot;) and returns the number of affected rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a34344c3fb0962f94df3885bdd5109ae4ac02e6" translate="yes" xml:space="preserve">
          <source>executes the query and iterates over the result dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5472844dd61a913af70986e857f46f7096197d76" translate="yes" xml:space="preserve">
          <source>executes the query and iterates over the result dataset. This is very fast, but potenially dangerous: If the for-loop-body executes another query, the results can be undefined. For Postgres it is safe though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425929b9056ffb09c184232f1793e02c46aeda27" translate="yes" xml:space="preserve">
          <source>executes the query and raises DbError if not successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de4b7e0475cf2259599c719796a0da7c44d8ab5" translate="yes" xml:space="preserve">
          <source>executes the query and raises EDB if not successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f074d0d967b76ea315cc8ea936fb603fe5c64166" translate="yes" xml:space="preserve">
          <source>executes the query and returns the first column of the first row of the result dataset. Returns &quot;&quot; if the dataset contains no rows or the database value is NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5037f75fbc8902be04b3360a1be9ce02a12deb" translate="yes" xml:space="preserve">
          <source>executes the query and returns the whole result dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13c0b4fa702bf890477d547829e0037a005265d" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;charset({' ', '\9'..'\13'})&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b878a6ad8abbaecfaf2717f41a70ffdfcdc2ab" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;charset({'0'..'9'})&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835e71b920e53e8882d670e840b7d3354fb50963" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;charset({'A'..'Z', 'a'..'z', '_'})&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcb22eea9defdccbf8da3d965e44493312d1de4" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;charset({'A'..'Z', 'a'..'z'})&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60c7d07e9cc8e610247880d7db8973b5081636f" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;charset({'a'..'z', 'A'..'Z', '0'..'9', '_'})&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b9924837ce46a992118810ef157b8740d34c34" translate="yes" xml:space="preserve">
          <source>experimental feature: use {.experimental: &quot;dynamicBindSym&quot;.} to activate it if called from template / regular code, &lt;em&gt;ident&lt;/em&gt; and &lt;em&gt;rule&lt;/em&gt; must be constant expression / literal value. if called from macros / compile time procs / static blocks, &lt;em&gt;ident&lt;/em&gt; and &lt;em&gt;rule&lt;/em&gt; can be VM computed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab532ae41cdf144ee29ef49d1afe1eaa1bbfa033" translate="yes" xml:space="preserve">
          <source>experimental pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176d41e15ed58160ff5794cc48cabe66e45ae1ac" translate="yes" xml:space="preserve">
          <source>ext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa757a4c420ad8ce7960a3d8424de402318d11d" translate="yes" xml:space="preserve">
          <source>extccomp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddb3b6ee30ed6e5f304e061e9ac01a58d0302ed" translate="yes" xml:space="preserve">
          <source>extends the bits of &lt;code&gt;a&lt;/code&gt; with zeros until it has the width of the &lt;code&gt;int&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e6dbb819c1bb269748920544dbec5bae19c82a" translate="yes" xml:space="preserve">
          <source>extends the meaning of &lt;code&gt;(&lt;/code&gt; also 0 or 1 quantifier also quantifier minimizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98961015a0ac393630f4eda3749d644a716da64" translate="yes" xml:space="preserve">
          <source>extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4f1ff8dc3e0248ebd3ecdf633835ba22ca31d7" translate="yes" xml:space="preserve">
          <source>extract the documentation to a json file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ecdf2ef10a21c8d687e46c0eeb9b1d1ee7ac59" translate="yes" xml:space="preserve">
          <source>extracts the red/green/blue components of the color &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3949a13fd48584e25b7708e5e5fa8f12f8f1f3" translate="yes" xml:space="preserve">
          <source>fatal pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e838446f19e6eaa8ac7cdcfda3fd16a9dfbc83" translate="yes" xml:space="preserve">
          <source>fenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372eab32683e7d779dd781c699eb942e801c99c9" translate="yes" xml:space="preserve">
          <source>file access permission; modelled after UNIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562c20206d1c2e941116f08bec4f191711addc00" translate="yes" xml:space="preserve">
          <source>file management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e2150eff090918acbd372552fa308cd6ca1c98" translate="yes" xml:space="preserve">
          <source>fills the appropriate environment variables to test your CGI application. This can only simulate the 'GET' request method. &lt;em&gt;keysvalues&lt;/em&gt; should provide embedded (name, value)-pairs. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a3212961bfe514b98cc6059fbc1f05f19df865" translate="yes" xml:space="preserve">
          <source>fills the array &lt;code&gt;a[first..last]&lt;/code&gt; with &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77a3295238939c5943e17cb84073de71ae88657" translate="yes" xml:space="preserve">
          <source>fills the array &lt;em&gt;a&lt;/em&gt; with &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8826e85ebde6f2584724dabe4488dfb4a33d3a20" translate="yes" xml:space="preserve">
          <source>filter_tmpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef8c5ea25b6b4e1f6781b9b622161040aa45759" translate="yes" xml:space="preserve">
          <source>final pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20500c2f1eb164e91ed52b85f15f68f70dff1642" translate="yes" xml:space="preserve">
          <source>find the pattern (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82932dec7803f93e1597e9d6aae0ff9f7739adc" translate="yes" xml:space="preserve">
          <source>finishes the MD5Context and stores the result in &lt;em&gt;digest&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a7e0827de7894c7faaca75a4226360597e3cc9" translate="yes" xml:space="preserve">
          <source>finishes the computation of the hash value. This is only needed if you need to implement a hash proc for a new datatype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d853f7a8e0769d85b5ddce68d8b622a0314e69de" translate="yes" xml:space="preserve">
          <source>first letter of log level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f8dfd17603d231266446ea9c3f3bc3fb683f72" translate="yes" xml:space="preserve">
          <source>flags for the &lt;em&gt;%&lt;/em&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f99dbb83f6345d9c349bcd1a621b3653be97b79" translate="yes" xml:space="preserve">
          <source>flips &lt;em&gt;x&lt;/em&gt; if &lt;code&gt;order == Descending&lt;/code&gt;; if &lt;code&gt;order == Ascending&lt;/code&gt; then &lt;em&gt;x&lt;/em&gt; is returned. &lt;em&gt;x&lt;/em&gt; is supposed to be the result of a comparator, ie &lt;code&gt;&amp;lt; 0&lt;/code&gt; for &lt;em&gt;less than&lt;/em&gt;, &lt;code&gt;== 0&lt;/code&gt; for &lt;em&gt;equal&lt;/em&gt;, &lt;code&gt;&amp;gt; 0&lt;/code&gt; for &lt;em&gt;greater than&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be898f26202e62eff988ee0b22e9ff7600804c2b" translate="yes" xml:space="preserve">
          <source>float128</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43690a125cb85876987b215e2914b2ced36d4fec" translate="yes" xml:space="preserve">
          <source>float32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48519c08a0a61d41e5c48183b35db71d5d00c0d" translate="yes" xml:space="preserve">
          <source>float64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b388a4a3449394e72c8a093f966a7c86add6de" translate="yes" xml:space="preserve">
          <source>floatXX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be840b003c7ac1629fd6f7f05f532e36efc0487" translate="yes" xml:space="preserve">
          <source>floating point types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f945e7384d595301ad2cb7d4040e3e76d28a4c4f" translate="yes" xml:space="preserve">
          <source>flushes the buffers that the stream &lt;em&gt;s&lt;/em&gt; might use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55259e97c925b8183686b21d1707341434d19d6" translate="yes" xml:space="preserve">
          <source>follow real directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a4a7ebe858b2078ae2f47d58e8ed00b674133d" translate="yes" xml:space="preserve">
          <source>follow symbolic links to directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305216b400d6c1e490ea64c905d3b0199843cc45" translate="yes" xml:space="preserve">
          <source>followFilter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f92b6bd7c736738453c3e9c3bb6e9cec21f05a" translate="yes" xml:space="preserve">
          <source>force rebuilding of all modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01740b1eb908e5ccf0e5248ebc5575392d60fde" translate="yes" xml:space="preserve">
          <source>formfeed (hex 0C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95101e39bda0e10c87bd514abc5ee4675ae98fb" translate="yes" xml:space="preserve">
          <source>frees a NULL terminated cstringArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f55c9048a7fc8c8c6b2b9ce25fe6c139dca992" translate="yes" xml:space="preserve">
          <source>frees the memory allocated with &lt;code&gt;createShared&lt;/code&gt;, &lt;code&gt;createSharedU&lt;/code&gt; or &lt;code&gt;resizeShared&lt;/code&gt;. This procedure is dangerous! If one forgets to free the memory a leak occurs; if one tries to access freed memory (or just freeing it twice!) a core dump may happen or other memory may be corrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc13d2edbb150786bd91d07a7ae880b5cec7824e" translate="yes" xml:space="preserve">
          <source>frees the resources the converter &lt;em&gt;c&lt;/em&gt; holds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170d9fc2095907605e06a0567f862673d1882dc7" translate="yes" xml:space="preserve">
          <source>ftpclient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c659bf3d747ba81134a0b8ac662f3dfa2f264a79" translate="yes" xml:space="preserve">
          <source>ftpclient.cd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d10b426d05d110fca398e7ec41e34fbf5fa399" translate="yes" xml:space="preserve">
          <source>genDepend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a72eb6290944418347ac3a073505efbdbe9b1" translate="yes" xml:space="preserve">
          <source>general escape character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16d117b939bc19847d8cfee39564d71c5a721bb" translate="yes" xml:space="preserve">
          <source>general escape character with several uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb47d5a644f309885382799488a133a900532e07" translate="yes" xml:space="preserve">
          <source>generate a '.deps' file containing the dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6daea00f133c03d91b35435d220eb3d78a6966" translate="yes" xml:space="preserve">
          <source>generate a DOT file containing the module dependency graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6412768929eb3f0c618b9f6cf3bd28d9305365cd" translate="yes" xml:space="preserve">
          <source>generate a compile script (in the 'nimcache' subdirectory named 'compile_$$project$$scriptext'), implies --compileOnly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103a8f92cd0dd752017f3659adf248b2d7d787b8" translate="yes" xml:space="preserve">
          <source>generate a console app|GUI app|DLL|static library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70bed6429848695c895edf599bf5c35dc857ec4" translate="yes" xml:space="preserve">
          <source>generate a mapping file containing (Nim, mangled) identifier pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8480eb784736e7af0a9748fee72f0ee471d80d3" translate="yes" xml:space="preserve">
          <source>generate the documentation for inputfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b26bfabb2ba2e0964e76809ad4147ee9b4c3b1" translate="yes" xml:space="preserve">
          <source>generated C code for the installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99e17d60ac0889dd2da92eb0ce53815058efdc6" translate="yes" xml:space="preserve">
          <source>generated binary files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a059ee350dcb5f6b88ce91b3f062a7b5e43b450" translate="yes" xml:space="preserve">
          <source>generates a fresh symbol that is guaranteed to be unique. The symbol needs to occur in a declaration context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342f4fc62eb12c1a707ba639f034aa973221488c" translate="yes" xml:space="preserve">
          <source>generates a new OID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c97243277055b6d62b6fcdf8a8972e4ee266c15" translate="yes" xml:space="preserve">
          <source>generates a tuple constructor expression listing all the local variables in the current scope. This is quite fast as it does not rely on any debug or runtime information. Note that in contrast to what the official signature says, the return type is not &lt;code&gt;RootObj&lt;/code&gt; but a tuple of a structure that depends on the current scope. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d66b0ea733fb76ee1ef007690ec1d74220e5eb1" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;a&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a7ee78f74c32ebe60d5afd7c7259ddf497f29b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;abbr&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3223c84440ca91a76e15dcb55d2e689973a26565" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;address&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980371c2342fbd019139c5d787504df5e7b71e4b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;area&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745c6f76552d1bc3c0dbda057f8819d4d1b7c856" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;article&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5891884f35a632f7a1897621692dea755148116a" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;aside&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71e0dca939ac10cb4ba63dc55bf93fd9b531818" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;audio&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b5843b8051f02d31cb6d9432ca939fcbbd63cc" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;b&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1383155aa8e3d6f6e553cbfe57db838eef6300" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;base&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2738ee2460b34f7ef4a2e978c2483718daf32d" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;bdi&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63a81fda979aa87f6422af69f714f1296084efd" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;bdo&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a901a4fac9259c64fc49cfd26dcdff8f2994cf7e" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;big&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994bb362f6236648a249f922ab8ad43a5c1dcd65" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;blockquote&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4986379dc6c0f2ef8fd04a3c4cc492d4922bf8" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;body&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8bf7b99fdcd40e5e4b6051cf5b5741d9de193e" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;br&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b617333e78f6dc1d8f16bbef01648fe9573d06" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;button&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808a3e9fc7df19acbd062872bf136d875eff4886" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;canvas&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d23bdfc7995e244faf244653ebed53a3a31ad3b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;caption&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d680909872ddb8828ff790d85ac03ca5ea4aab4c" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;cite&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd96098cdacef8e5d72b62ded6c9c67f4904260" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;code&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e735467523a29a1dfe927af94618be3f54b6d0e0" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;col&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846c6b650ce5b30214b9f2a00b0e466fdf2c4f99" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;colgroup&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c820dcfd65b237a13ffb9d453b5b04141fb1653d" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;data&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5561073de768bb62b949d1223e23c80f1d6ac5" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;datalist&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faab582e219d120c7f1816901f4594f5c985bcb3" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;dd&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b4115a50c6c4a1172004ec6edc8f540c628d63" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;del&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546eebec89ad1683c1887f88bad5df8e05e62e6c" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;dfn&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620c9e8df89ef70d38ec0d9a2c53f5ccfbdb0209" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8dfefa4e9422dfbad31a65d1802a0eb47bffc9" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;dl&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ac04fb9eb8e55d5e90b5e17d7674357da6cf7d" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;dt&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3505f389dfe6d52dcda317348e3e68026df316cf" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;em&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016bd7560ce2716251850d56b1e1130fd655607d" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;embed&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737ce73129d465819a174815f53cc365fcdab550" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;fieldset&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4352719cc84ea1652b48bee92a704a9e6ee7c1c" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;figcaption&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6feb78f63813b8b5f06d864ab8c1f2433dcd328" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;figure&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b807910443a30589d75156ad45f1394f867b0a" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;footer&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e512de2c53552129833354e1931c7d3b9ed46090" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;form&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa305dd63314b8834c64cbc4112260c6ce74cead" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;h1&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5207a9915fc9d331ce3ee5fd5bf2add100b08b8b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;h2&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7e7767957725ba3e2868bf54eb9338423a93ca" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;h3&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88006aefa08683926d440beccacd727bac9fdb8a" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;h4&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2aa0577df09997e91b599206c573b5c591b94b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;h5&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f6539a879aefe6703ed3e2780b081313da7edb" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;h6&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c746723a28a19c34c01d9492a5c685c8e88054" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;head&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed764a6c567e1a3fcfc68c02ed8a0510810f2799" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;header&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6166f2927be61c3661408fbf5742805b90a476ed" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;hr&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d8a0d3c9632a6b629c5fc1548feda6ea44474e" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;html&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed46a6fc8a5eb8e3a79abf983f85c1f541a5db2" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;i&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1cc7549d57bb863c17e811b7dc25fddc91e733" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;iframe&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9123e872afd74308e84454d015e8dca1990dc509" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;img&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c986213734fada5df190dae36233a188b5b410cf" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;input&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28e20bbe55eddf3db7c2288970ab09480cbdb3c" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;ins&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a9a52653e9bcaa8b56c2f02350bab99fc4170f" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;kbd&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c2af994bb8a30813659bfce3557d99077224d7" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;keygen&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab784397dfad83bc53311034f5cf8c8fee150ba" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;label&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b5ad5e310c73d761e73fbda1c7dbf365131698" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;legend&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c720cb4b1cfd7dd8dfb50d539e4be02b3d3e0b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;li&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41c7baf4b7d2266e831e51301e9e1904b14a619" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;link&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db605ddb714b617b2a04276de9aac626a05eaec1" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;main&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2e371c6fda8e2e117a05fad7b4987ce0e459f3" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;map&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795ab7301717796f62f6d921489efe2624af2997" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;mark&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a450067f95d72a072fbe2e1d842f4f4ad5450f" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;meta&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89d61b6cd1c785958782b5f181eeaa510fd230f" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;meter&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48c7ab431ff673c8c21af568c45908383d35d83" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;nav&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade002709167295221931e482579a08a490718e0" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;noscript&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23de5663b02cd02716dca8aca6e8d78511e380aa" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;object&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b72f777f876e84c68c240af37cca0d012b7d376" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;ol&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe820678b227b41d3d973031540f723852d17003" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;optgroup&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1070ac8a74ba58a7f202bf2d6716bbdbca449c03" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;option&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5ee118c8e5ade5ae00ba3d524b18250d7386bc" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;output&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d2c67a476fb88002cc748cfdadba067c493c14" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;p&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b442919a36365f63831cd6e0fd47366b47a0360" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;param&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524eefc0162d0c27a5a82191fca5313289e41fe9" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;pre&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba11ffc6a4466f9ffc88ba783934487b49229a2" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;progress&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fa8ad1760879ccd1ff079b139ca00e96bc7f80" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;q&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87d5bd78d1664ead5726efa0535a72de5d6e806" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;rb&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b960ae13b3c0866dcb5aaf61706dc3adf40e39b9" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;rp&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b336b9e1f9fa5fbabbb79ad0296e3bc6bb7fe902" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;rt&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30670d8ccf4fd3d618e7742300e6a3e49554a608" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;rtc&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c9d28e097b673f17f840c526c91817b182af81" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;ruby&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2c981e25414dda22c17bc48c943bf06cae21b8" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;s&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbdf202f689948df3232351800f5295b26c55ce" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;samp&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc5eb71915eba46020aafc3421a017c3dfc88a7" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;script&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ace5c2ae92cc05545e1e4b94f454a4189cdf526" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;section&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f3b9fdc4238ab6b5651f783b43f083bde17975" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;select&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75bf2279966e80863a5fce89f6c6a7b562956a9" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;small&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2d9bedbb8eb841d9b71463747369aa49b3807c" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;source&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3ced6609319dac173f83fe704b8379148e2ed1" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;span&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418f16519f7cce327196dbd265e89f7075aa9ccd" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;strong&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674b5321d42244972c5d5c99c7ebea46d8735b3e" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;style&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e713a35e4ad9d7539bc1cc0db9477f7d8c46a76" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;sub&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ce27a5bb1aa138f4ece1a5d10493bff75bfed4" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;sup&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42f84ce13db662afcf9e96d9e569df9af9d445e" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;table&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ed590a0b4f81c562a6201a27cb2330300ded1" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;tbody&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548babbb12f836625047c337307c234c4d2e97a9" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;td&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52603b3bcb0311806a9206085b0d97e620bf98f2" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;template&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1eafecc218327a2957f399507fbc2fd9a201e9" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;textarea&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e8b14e11d0a12d4d08ab3c997c33e24d227b1d" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;tfoot&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb87265d4a1d3e3272707d5f443cfb67a79bb64" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;th&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0936bdabba661e9d7b27324efc996f84f334f6d2" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;thead&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d38363a05df369e9186d6c6d63bccc78e7b297" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;time&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf89dab6b176597be86474778ba2226fca87bf6" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;title&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bf2c7abf19fe0404817f6b849375cbf8baf6a6" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;tr&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b2573e3e93d1acb1da160362fa7068d2b4431b" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;track&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a96d440918e01e322136e378ef756214ba8620" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;tt&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6308f98a7ef5888843f6affbd42e94336232baf" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;u&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9085174bb2bb030f0ee71bdc75997a964e6b80c3" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;ul&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e72b1b459cd276950f473850d282ae0c528bd7c" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;var&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a81b94c64cb15a561f8693c9460a24bcd61b646" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;video&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7ee084d23f739a86c8cc01e3cd432e7c681384" translate="yes" xml:space="preserve">
          <source>generates the HTML &lt;code&gt;wbr&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a56894a292223f27e3c3e8bd6897fcc4cba4ad" translate="yes" xml:space="preserve">
          <source>generates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad06b229aa30f60970c2117c8119a77f964caf86" translate="yes" xml:space="preserve">
          <source>generation of #line directive on|off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7729ff4deb851d4af3707f46463199015326dc3c" translate="yes" xml:space="preserve">
          <source>generic 'sink' operator for Nim. For files an alias for &lt;code&gt;write&lt;/code&gt;. If not specialized further an alias for &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90053ad3cde0e3fcd26ea6417c7ba73faab741fd" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;$&lt;/code&gt; operator for arrays that is lifted from the components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e676d336a9441981a21ae9f65565d154cc7f86d" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;$&lt;/code&gt; operator for openarrays that is lifted from the components of &lt;em&gt;x&lt;/em&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b1da3cf50a6351ccb1346ffdb3b5f0a57293d2" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;$&lt;/code&gt; operator for seqs that is lifted from the components of &lt;em&gt;x&lt;/em&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6954774ca8d140bf16ad1ae23ff920b490d2ad90" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;$&lt;/code&gt; operator for sets that is lifted from the components of &lt;em&gt;x&lt;/em&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8428ef444dea6a9d396628656f899adc5afa674b" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;$&lt;/code&gt; operator for tuples that is lifted from the components of &lt;em&gt;x&lt;/em&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57c76791e72af48a1fee7ec12b179c27e840665" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;&amp;lt;&lt;/code&gt; operator for tuples that is lifted from the components of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. This implementation uses &lt;em&gt;cmp&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985a75431152ba92b67782f1ec605e4461e7d3f5" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;&amp;lt;=&lt;/code&gt; operator for tuples that is lifted from the components of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. This implementation uses &lt;em&gt;cmp&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5677201809d18f928e86454344019eb0b0fa8a78" translate="yes" xml:space="preserve">
          <source>generic &lt;code&gt;==&lt;/code&gt; operator for tuples that is lifted from the components of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4529deed5f51d9421b5588199fb55934368949c7" translate="yes" xml:space="preserve">
          <source>generic &lt;span id=&quot;destructor_1&quot;&gt;destructor&lt;/span&gt; implementation that can be overriden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8014eba141e1ef2bf8c183fa433ac572cbba5c" translate="yes" xml:space="preserve">
          <source>generic &lt;span id=&quot;sink_1&quot;&gt;sink&lt;/span&gt; implementation that can be overriden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c0618265423061badbf05a5a4bd0566b629c16" translate="yes" xml:space="preserve">
          <source>generic hash SharedTable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d5f6e83de048a2e44667cf7e13a88697a018aa" translate="yes" xml:space="preserve">
          <source>generic hash table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92c82eb30e9bcbc1f930865d75b9fd23a7af37b" translate="yes" xml:space="preserve">
          <source>generic shared list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b03f4cdb7dba4bb75757fa88619af646e4bec6c" translate="yes" xml:space="preserve">
          <source>generic type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4a34eaffa859ead08c3609c379215e6cd90ffd" translate="yes" xml:space="preserve">
          <source>generic write procedure. Writes &lt;em&gt;x&lt;/em&gt; to the stream &lt;em&gt;s&lt;/em&gt;. Implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ee17183b823877e8eb2139698913204d4fe3a3" translate="yes" xml:space="preserve">
          <source>get &lt;em&gt;n&lt;/em&gt;'s &lt;em&gt;i&lt;/em&gt;'th child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4167fddfbc64fa77d2e8c784d7ff0041d24d56b" translate="yes" xml:space="preserve">
          <source>get the ID of the currently running thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c883f280e0cb1cc61283b743ec51966f223f776" translate="yes" xml:space="preserve">
          <source>get the base type's kind; &lt;code&gt;akNone&lt;/code&gt; is returned if &lt;em&gt;x&lt;/em&gt; has no base type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed37c0c72bdc86266a89c66d593c814d771b502" translate="yes" xml:space="preserve">
          <source>get the current column the parser has arrived at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36803a5b80b29879337c8658fe859637883f6e3a" translate="yes" xml:space="preserve">
          <source>get the current line the parser has arrived at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfe21e90dc8f618f6bbadb57c64ba2bed5fb8c4" translate="yes" xml:space="preserve">
          <source>get the filename of the file that the parser processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3534ca69777db596d4c0737068c45883b4d0d939" translate="yes" xml:space="preserve">
          <source>get the milliseconds from the start of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c12f316f9edb8020da853686cad6ebd44f19734" translate="yes" xml:space="preserve">
          <source>get the type kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e0b9d06a86881aa5d1502e929234cadbae90b0" translate="yes" xml:space="preserve">
          <source>get type information for &lt;em&gt;x&lt;/em&gt;. Ordinary code should not use this, but the &lt;em&gt;typeinfo&lt;/em&gt; module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4b4aaedbd9b2f1e29edb19c23c35b02fe3feaa" translate="yes" xml:space="preserve">
          <source>get, &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d99312b279c4f8d28f1d10d165fd3135785bb7b" translate="yes" xml:space="preserve">
          <source>getFreeMem(): bytes reserved by the GC and not in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869ff269128cdf4003458c0f1b262f606a34a5c8" translate="yes" xml:space="preserve">
          <source>getOccupiedMem(): bytes reserved by the GC and used by objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99afc6729406061e28aad8f22ea6a96631240a6d" translate="yes" xml:space="preserve">
          <source>getTotalMem(): returns the amount of total memory managed by the GC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641f86e0e6e0887616e4e55193449b143e6f2b45" translate="yes" xml:space="preserve">
          <source>gets a field of &lt;em&gt;x&lt;/em&gt;; &lt;em&gt;x&lt;/em&gt; represents an object or a tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a68da22f2cbaa382aa0601c0de173b1161f592" translate="yes" xml:space="preserve">
          <source>gets the associated text with the node &lt;em&gt;n&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; can be a CDATA, Text, comment, or entity node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e0e2d62c3fa2d670920234ad3955a1976586f" translate="yes" xml:space="preserve">
          <source>gets the attributes belonging to &lt;em&gt;n&lt;/em&gt;. Returns &lt;em&gt;nil&lt;/em&gt; if attributes have not been initialised for this node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde3bb8bc98fc20ca14246b51f84368bba0276ff" translate="yes" xml:space="preserve">
          <source>gets the client data of &lt;em&gt;n&lt;/em&gt;. The client data field is used by the HTML parser and generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c84ab37f2630f54192b1209e0057b263b24a43c" translate="yes" xml:space="preserve">
          <source>gets the current stack trace. This only works for debug builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea9b8f6a2faa04c068af8f0bb89096ab90baca0" translate="yes" xml:space="preserve">
          <source>gets the enum field name as a string. &lt;em&gt;x&lt;/em&gt; needs to represent an enum but is only used to access the type information. The field name of &lt;em&gt;ordinalValue&lt;/em&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931db2f826fd68dc218a32d337e2081af9e93561" translate="yes" xml:space="preserve">
          <source>gets the enum field name as a string. &lt;em&gt;x&lt;/em&gt; needs to represent an enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb76b27e295bd8caefb0a4ca1d80eec5b2e5cd87" translate="yes" xml:space="preserve">
          <source>gets the enum field ordinal from &lt;em&gt;name&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an enum but is only used to access the type information. In case of an error &lt;code&gt;low(int)&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e509ec0f191122f6f102de4bd769020020a13e" translate="yes" xml:space="preserve">
          <source>gets the handle from the current executable. Returns nil if the library could not be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfdd61ee4affc5ca872d9bdb8d2dc105efef960" translate="yes" xml:space="preserve">
          <source>gets the inner text of &lt;em&gt;n&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fcc140e60a17cac2c20c710938d04cbffe51fb" translate="yes" xml:space="preserve">
          <source>gets the stack trace associated with &lt;em&gt;e&lt;/em&gt;, which is the stack that lead to the &lt;code&gt;raise&lt;/code&gt; statement. This only works for debug builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fb7ec2ba4f477a23b0cdf4d7cbd1840ff8bc86" translate="yes" xml:space="preserve">
          <source>gets the tag name of &lt;em&gt;n&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; has to be an &lt;code&gt;xnElement&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f56a6487ddb3aeb779f77c946209438bd30d908" translate="yes" xml:space="preserve">
          <source>gets time after the UNIX epoch (1970) in seconds. It is a float because sub-second resolution is likely to be supported (depending on the hardware/OS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabd29a7d9f2645bc51f41d7257bd6831ffbfe39" translate="yes" xml:space="preserve">
          <source>gets time spent that the CPU spent to run the current process in seconds. This may be more useful for benchmarking than &lt;code&gt;epochTime&lt;/code&gt;. However, it may measure the real time instead (depending on the OS). The value of the result has no meaning. To generate useful timing values, take the difference between the results of two &lt;code&gt;cpuTime&lt;/code&gt; calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fbb37460370acb4b9d73aa3dd6bef77de057e1" translate="yes" xml:space="preserve">
          <source>getsockopt for integer options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d79b8c33a3383461e289bf237afe21e44c0cc5" translate="yes" xml:space="preserve">
          <source>given a library name pattern &lt;em&gt;s&lt;/em&gt; write possible library names to &lt;em&gt;dest&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c29440ec331ee3846dceb456f7fdaf9c65e94e" translate="yes" xml:space="preserve">
          <source>global pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45216c4e0f41911e395cf7b1b0355ff13185062a" translate="yes" xml:space="preserve">
          <source>grows or shrinks a given memory block on the heap. If p is &lt;strong&gt;nil&lt;/strong&gt; then a new memory block is returned. In either way the block has at least &lt;code&gt;T.sizeof * newSize&lt;/code&gt; bytes. If &lt;code&gt;newSize == 0&lt;/code&gt; and p is not &lt;strong&gt;nil&lt;/strong&gt;&lt;code&gt;resizeShared&lt;/code&gt; calls &lt;code&gt;freeShared(p)&lt;/code&gt;. In other cases the block has to be freed with &lt;code&gt;freeShared&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd64cf05488a9d30e7bee00ecf98565d63eb864d" translate="yes" xml:space="preserve">
          <source>grows or shrinks a given memory block. If p is &lt;strong&gt;nil&lt;/strong&gt; then a new memory block is returned. In either way the block has at least &lt;code&gt;T.sizeof * newSize&lt;/code&gt; bytes. If &lt;code&gt;newSize == 0&lt;/code&gt; and p is not &lt;strong&gt;nil&lt;/strong&gt;&lt;code&gt;resize&lt;/code&gt; calls &lt;code&gt;dealloc(p)&lt;/code&gt;. In other cases the block has to be freed with &lt;code&gt;free&lt;/code&gt;. The allocated memory belongs to its allocating thread! Use &lt;em&gt;resizeShared&lt;/em&gt; to reallocate from a shared heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fe08fc0dd44e79f799d03ece903e62be25dc7d" translate="yes" xml:space="preserve">
          <source>hashes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa50aa26ef6cbf5959627f1c3704a9201f1ebb06" translate="yes" xml:space="preserve">
          <source>hashes an array of bytes of size &lt;em&gt;size&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17e9d66337426108a69f866d7b9d011e1a40cf8" translate="yes" xml:space="preserve">
          <source>hashes.!$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115182e8170a5af45ca99008eda0422fffb1a89b" translate="yes" xml:space="preserve">
          <source>hashes.Hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412fa29a6cf6d63005fefc626bb448352d4b884e" translate="yes" xml:space="preserve">
          <source>hashing of HashSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea5b43b2dca92f28ea4566d138e62a234c3b5e1" translate="yes" xml:space="preserve">
          <source>hashing of OrderedSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8b0ca768d787023ad36fc412404e9ef7326671" translate="yes" xml:space="preserve">
          <source>header to use for complete XML output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10759726ecb81b70fa0c92f18729eceef2b5a54d" translate="yes" xml:space="preserve">
          <source>heapqueue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b47c566af97178c08826fe0d9e4b73c887b736" translate="yes" xml:space="preserve">
          <source>heapqueue.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f2c46226713bff068e9573680c325fb432bf97" translate="yes" xml:space="preserve">
          <source>helps to convert an iterator to a proc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35532b5d751b026934a4b14b3a587ff8eee351a" translate="yes" xml:space="preserve">
          <source>highlite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a76579177bffa9e14100868053198432bc63cd" translate="yes" xml:space="preserve">
          <source>hint pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c5017f15c5cbd940ce8296d021d603b9255cd8" translate="yes" xml:space="preserve">
          <source>hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b604685d6992a2ac46aa9060ed91596981d4f933" translate="yes" xml:space="preserve">
          <source>htmlgen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64b36e9b67c2a295757833596e0ae193ee62a08" translate="yes" xml:space="preserve">
          <source>htmlgen.a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c006e762d7fb0bf3ff3226a9661885881c37a206" translate="yes" xml:space="preserve">
          <source>htmlgen.abbr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a3cdd35fac00d78bec7e07537db15544a14072" translate="yes" xml:space="preserve">
          <source>htmlgen.area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c80d014a54fc3325fcec339fc898389ebd7329f" translate="yes" xml:space="preserve">
          <source>htmlgen.b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930af90c95a79fc840cae955e4fb86aa70f167a5" translate="yes" xml:space="preserve">
          <source>htmlgen.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd8141a3020981c297ea50f2c0a81b040c641fc" translate="yes" xml:space="preserve">
          <source>htmlgen.bdi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da78daf16b445a008d87f7b4922212dfcafa49a" translate="yes" xml:space="preserve">
          <source>htmlgen.bdo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9861cf053ff3a429198439d53646102dca5e0d" translate="yes" xml:space="preserve">
          <source>htmlgen.big</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc01c791d2f45c5b804e5bbdec74590e6a59258a" translate="yes" xml:space="preserve">
          <source>htmlgen.body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32582c86bf08375a9186723cab46b56a527a54a4" translate="yes" xml:space="preserve">
          <source>htmlgen.br</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20035dedbd6d0818c51349b6f6b6977baf95f68" translate="yes" xml:space="preserve">
          <source>htmlgen.cite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf644e627514087e82e9be58e343851f7b298a86" translate="yes" xml:space="preserve">
          <source>htmlgen.code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddce0bbba84e2e96a642c5693c33992a09f4455c" translate="yes" xml:space="preserve">
          <source>htmlgen.col</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f8af8b61955673e83262b5eb693a3e71c82a79" translate="yes" xml:space="preserve">
          <source>htmlgen.data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03053ae5cd1205c8c4e260d6a99a0e8e9aed239a" translate="yes" xml:space="preserve">
          <source>htmlgen.dd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911d735e2e8acd7899c7befab5ec49687d88050e" translate="yes" xml:space="preserve">
          <source>htmlgen.del</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d69e6fe5837c03439a8c02cddec82495f54fd9" translate="yes" xml:space="preserve">
          <source>htmlgen.dfn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a4f7dd9529408a92c14f2f5b138f724b8e3b68" translate="yes" xml:space="preserve">
          <source>htmlgen.div</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c92f9286430b02a7770933fd2fc0dc4bab06f2" translate="yes" xml:space="preserve">
          <source>htmlgen.dl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7329e47ad4461ff80a5c40382006ac3f848ca6bd" translate="yes" xml:space="preserve">
          <source>htmlgen.dt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2a3b1b7bb513937420678782bcaade32ca9835" translate="yes" xml:space="preserve">
          <source>htmlgen.em</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc68be5f80ffd69b46e57b6ac2e8ff7f607d074" translate="yes" xml:space="preserve">
          <source>htmlgen.form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc143263d52732719483a86c3e188966d9317a8" translate="yes" xml:space="preserve">
          <source>htmlgen.h1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56684f7cf3fcb4af3fb08b3af40de40a72a58a7e" translate="yes" xml:space="preserve">
          <source>htmlgen.h2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf00d4a54f1cbf3cb1b8f9e01e0fe245f9ab61f" translate="yes" xml:space="preserve">
          <source>htmlgen.h3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c55cb3a298c966d13b6f2c97acf406c66dc4191" translate="yes" xml:space="preserve">
          <source>htmlgen.h4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bad6b6bd74fefa31af83dc594154501cb643f0" translate="yes" xml:space="preserve">
          <source>htmlgen.h5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94099fa59699ce6ead8c257f8f6fe02e9af3d1ee" translate="yes" xml:space="preserve">
          <source>htmlgen.h6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bc878ce4cc92c8f03989ddc007a3ed657d623a" translate="yes" xml:space="preserve">
          <source>htmlgen.head</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ab12185dc86d2a06747c5eeee9cf52a93a4061" translate="yes" xml:space="preserve">
          <source>htmlgen.hr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c5c37bd9e8fc819796389ec72580df86a8a1f2" translate="yes" xml:space="preserve">
          <source>htmlgen.html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ee29edb3a5e049ff88d810324da24a4a32a713" translate="yes" xml:space="preserve">
          <source>htmlgen.i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183a1f3dc27cd94db29f22e69430d4044bdac1b6" translate="yes" xml:space="preserve">
          <source>htmlgen.img</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36fcfae78c76f4985f18a740014d2ad970f3b39" translate="yes" xml:space="preserve">
          <source>htmlgen.ins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d53297a27965391095d4a6f648f4cde3ab7535c" translate="yes" xml:space="preserve">
          <source>htmlgen.kbd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7efb2e35e2fc911b014f318ce24e96c080d792" translate="yes" xml:space="preserve">
          <source>htmlgen.li</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48e2986bde2fef251d781ce3670d4585f647c6d" translate="yes" xml:space="preserve">
          <source>htmlgen.link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e46adaba18f10f85164ed3aecc5cbf941e43b50" translate="yes" xml:space="preserve">
          <source>htmlgen.main</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8e951f7263588da0a8866ba06a4fca35ac1fcf" translate="yes" xml:space="preserve">
          <source>htmlgen.map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0571b1611e7e4f52386d1f2505ca6a10d1814175" translate="yes" xml:space="preserve">
          <source>htmlgen.mark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a40a7e5b367cbaaf8d1a75856db37ca420515d" translate="yes" xml:space="preserve">
          <source>htmlgen.meta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452e3e684792196272f9ffb6394bd63207334fe2" translate="yes" xml:space="preserve">
          <source>htmlgen.nav</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797bf0cd4acd2b836d9a4066c7d79507d0b1c918" translate="yes" xml:space="preserve">
          <source>htmlgen.ol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4f1848264a362c82423002fdbda8bd36766fbd" translate="yes" xml:space="preserve">
          <source>htmlgen.p</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53dfa3647d52617f358965c0f7984e2dc5d82bd" translate="yes" xml:space="preserve">
          <source>htmlgen.pre</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99591d10c33c6718219d04badd50e5bdda7ba27" translate="yes" xml:space="preserve">
          <source>htmlgen.q</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff34e86a3f98edd9a3a4fc06871eae9e7a769d0c" translate="yes" xml:space="preserve">
          <source>htmlgen.rb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2fe4015408d743173f65140359ec5a158d0b8a" translate="yes" xml:space="preserve">
          <source>htmlgen.rp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f038c40bf7659093488a0596fc506fa4708ce0c" translate="yes" xml:space="preserve">
          <source>htmlgen.rt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a2e939ed74fad3c3c6ce6924e211907f9fa3f5" translate="yes" xml:space="preserve">
          <source>htmlgen.rtc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d770c5f2ee6bc7b3acfc7f7acc88fee3f6c80e09" translate="yes" xml:space="preserve">
          <source>htmlgen.ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80853fe132b2d06a42da16a235741238c09e801" translate="yes" xml:space="preserve">
          <source>htmlgen.s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd5ce585e185955d4e42e79e93348055cc68d79" translate="yes" xml:space="preserve">
          <source>htmlgen.samp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed15972a46b05a424540e05ec52e922db216f8b2" translate="yes" xml:space="preserve">
          <source>htmlgen.span</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f4a5b52c59f86a59bed0fe842a06bd8a47eaa8" translate="yes" xml:space="preserve">
          <source>htmlgen.sub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012b0e58cf1af594eef8860ab92c287dadb6f80a" translate="yes" xml:space="preserve">
          <source>htmlgen.sup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97e209f6e860550a7bb4fe6fd644f8f797d49c9" translate="yes" xml:space="preserve">
          <source>htmlgen.td</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ed74355f62f64edcf31c1c7ac65585354fef3a" translate="yes" xml:space="preserve">
          <source>htmlgen.th</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afc4fd92c6dbec4600e287d9edd4544e2f41cb8" translate="yes" xml:space="preserve">
          <source>htmlgen.time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da38a02b1c6b0cbe80e8327c11f33b62f223e99" translate="yes" xml:space="preserve">
          <source>htmlgen.tr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7c5b32d49ff0e199af1bf0f77f56ca764e715a" translate="yes" xml:space="preserve">
          <source>htmlgen.tt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1559319a4005a7cdfe279a96d2ed34afa767726" translate="yes" xml:space="preserve">
          <source>htmlgen.u</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2e58b0b7c44b42bb4cf106bfacd9a475696c82" translate="yes" xml:space="preserve">
          <source>htmlgen.ul</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0611f8d5223c19557bb3fda2c9b76a1d392d3889" translate="yes" xml:space="preserve">
          <source>htmlgen.var</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bcf4256810a3037c530ba052fe5271f5777077" translate="yes" xml:space="preserve">
          <source>htmlgen.wbr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0440dfb6e8e41abd79fa91da9e5efe29e51a6a6" translate="yes" xml:space="preserve">
          <source>htmlparser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7de67e7dd7dca447a60fdf8abdafbc9d45cfc9d" translate="yes" xml:space="preserve">
          <source>httpclient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40febe43c6c5f6d430c6246cb706145f637e4649" translate="yes" xml:space="preserve">
          <source>httpclient.[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4990b82f0038ebe035f898106ca0691021f2e85d" translate="yes" xml:space="preserve">
          <source>httpcore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e76c7fabf64d06e656b501372bf1815a2b86a93" translate="yes" xml:space="preserve">
          <source>httpcore.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157f79ef39e9d4cf537c2c5fac61284e30253dfd" translate="yes" xml:space="preserve">
          <source>httpcore.==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9960f27bb7b8ba955d03db4ec86992474f5369" translate="yes" xml:space="preserve">
          <source>httpcore.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051cde6055f2796d6a3ae85841971e2e2c06317d" translate="yes" xml:space="preserve">
          <source>httpcore.[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efee61c10bc322d0b636ba3dd5c3a2656badd1f" translate="yes" xml:space="preserve">
          <source>ident</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9451ea063b07b4b75a06df6600d464e698ef13b6" translate="yes" xml:space="preserve">
          <source>idents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e084b9db117ca75f862fb7567fcd3f360bcf33" translate="yes" xml:space="preserve">
          <source>if there is a cycle only import the already parsed symbols (that are exported); if an unknown identifier occurs then abort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18393e687deb4a8424596d9045757748128d3b79" translate="yes" xml:space="preserve">
          <source>ignore case for matching; use this at the start of the PEG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97833ff7beed50e542ce88940d9856d4714f9d97" translate="yes" xml:space="preserve">
          <source>ignore style for matching; use this at the start of the PEG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d49985b1340976eb9acf128f7c4f728dbf8dd8" translate="yes" xml:space="preserve">
          <source>immediate pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9b92edf390069193aa965c33392001b4cccab6" translate="yes" xml:space="preserve">
          <source>implement the passes manager for passes over the AST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6256d87d624e773f6e6bb05708a18235a968141" translate="yes" xml:space="preserve">
          <source>implements a general mapping from identifiers to an internal representation (&lt;code&gt;PIdent&lt;/code&gt;) that is used so that a simple id-comparison suffices to say whether two Nim identifiers are equivalent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3862400651815a3e4baf81a01d4c25d624eed718" translate="yes" xml:space="preserve">
          <source>implements long strings represented as trees for lazy evaluation; used mainly by the code generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79731fa28189987858a0d6608e68f7f46a38c23" translate="yes" xml:space="preserve">
          <source>implements the config file reader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987ed6edd307a3026f063361f9d7145f9ba6085a" translate="yes" xml:space="preserve">
          <source>implements the top-level command dispatching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7f39ce7f324101dc6127bc2771fbfc61a9b377" translate="yes" xml:space="preserve">
          <source>implies a low-level operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffe79c1b34a93a327992e77260ddb5ad136d38e" translate="yes" xml:space="preserve">
          <source>incl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ecb0d890368d7659ee54010045b835dacb8efe" translate="yes" xml:space="preserve">
          <source>include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3f3d32fdf028cc81e58df77b8985409795bc53" translate="yes" xml:space="preserve">
          <source>includes &lt;em&gt;key&lt;/em&gt; in &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a974592aeb4a826f88047c6cab602980afec2e2" translate="yes" xml:space="preserve">
          <source>includes an element &lt;em&gt;elem&lt;/em&gt; in &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a Nim bitset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e053f80f59e5db1387151a3a61d7313dc53e35" translate="yes" xml:space="preserve">
          <source>includes an element &lt;em&gt;key&lt;/em&gt; in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818ee1315dcafc657dde68365c19c26de9dc1a68" translate="yes" xml:space="preserve">
          <source>includes element &lt;code&gt;y&lt;/code&gt; to the set &lt;code&gt;x&lt;/code&gt;. This is the same as &lt;code&gt;x = x + {y}&lt;/code&gt;, but it might be more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154ffd493c79fa062ebaa52bb88b3890fdd3a447" translate="yes" xml:space="preserve">
          <source>includes the set of flags to the set &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4841aaf242ed808b36344ffb28d8b5efc075348a" translate="yes" xml:space="preserve">
          <source>inconsistent right now</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f8d8dc88cdcfd37c9e6bb64f8b16971cdbd6c3" translate="yes" xml:space="preserve">
          <source>increments &lt;em&gt;c[key]&lt;/em&gt; by &lt;em&gt;val&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d56c3097cec7a5a7f4cd10258fb689da8c981a" translate="yes" xml:space="preserve">
          <source>increments &lt;em&gt;t[key]&lt;/em&gt; by &lt;em&gt;val&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b47d541c3cef9764c5f7b224d12bdc3daf37379" translate="yes" xml:space="preserve">
          <source>increments &lt;em&gt;x&lt;/em&gt; by &lt;em&gt;n&lt;/em&gt;; &lt;em&gt;n&lt;/em&gt; is an integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86097b549cfe607b427d7785f3e8ad1fade582be" translate="yes" xml:space="preserve">
          <source>increments &lt;em&gt;x&lt;/em&gt; by one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ba350832b359c9bb65797cfef6f0bf6042f8e9" translate="yes" xml:space="preserve">
          <source>increments the ordinal &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt;. If such a value does not exist, &lt;code&gt;EOutOfRange&lt;/code&gt; is raised or a compile time error occurs. This is a short notation for: &lt;code&gt;x = succ(x, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc46d20365996efe5ff1d4a9e0d401d68f186ed" translate="yes" xml:space="preserve">
          <source>indent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552996511153dbc6bd3cf490278df239fca7a6ec" translate="yes" xml:space="preserve">
          <source>indentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8413925019b565454d8b01ef245e7e0774083a8e" translate="yes" xml:space="preserve">
          <source>indicates character range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d7c8b27b6f5d1349740aa4ba885a67e71b1475" translate="yes" xml:space="preserve">
          <source>inexact result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792efa4850e2cc12922b3ee8cb108f4160ff1cac" translate="yes" xml:space="preserve">
          <source>information about a database column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fd810138d0b26b5a79e7f2a2ddf2ed5c976f52" translate="yes" xml:space="preserve">
          <source>information about a given host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c22719d524968166d1a9eb86ec262e0ee3da6e" translate="yes" xml:space="preserve">
          <source>information about a service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849dec5373d6d3122228a8dc9dbce387eb4ab0fe" translate="yes" xml:space="preserve">
          <source>initT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4728f278b1371bfd6c3804c60f121bb5b72b9089" translate="yes" xml:space="preserve">
          <source>initialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ccf2eb994a4e0a251ca5f491e1de359d11152b" translate="yes" xml:space="preserve">
          <source>initializes a MD5Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8001980c9660caf7984fbb3f45a66f7222e3fce3" translate="yes" xml:space="preserve">
          <source>initializes the parser with an input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92341d19f8452b18e096742e26a010f3d2ccbd0f" translate="yes" xml:space="preserve">
          <source>initializes the parser with an input stream. &lt;em&gt;Filename&lt;/em&gt; is only used for nice error messages. &lt;em&gt;lineOffset&lt;/em&gt; can be used to influence the line number information in the generated error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13022b7ea1a0e4b3da100f8fe91bf2a909358136" translate="yes" xml:space="preserve">
          <source>initializes the parser with an input stream. &lt;em&gt;Filename&lt;/em&gt; is only used for nice error messages. If &lt;em&gt;rawStringLiterals&lt;/em&gt; is true, string literals are kepts with their surrounding quotes and escape sequences in them are left untouched too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d446175ab1f2df50246826aa32c57b04bc86dd23" translate="yes" xml:space="preserve">
          <source>initializes the parser with an input stream. &lt;em&gt;Filename&lt;/em&gt; is only used for nice error messages. The parser's behaviour can be controlled by the &lt;em&gt;options&lt;/em&gt; parameter: If &lt;em&gt;options&lt;/em&gt; contains &lt;code&gt;reportWhitespace&lt;/code&gt; a whitespace token is reported as an &lt;code&gt;xmlWhitespace&lt;/code&gt; event. If &lt;em&gt;options&lt;/em&gt; contains &lt;code&gt;reportComments&lt;/code&gt; a comment token is reported as an &lt;code&gt;xmlComment&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b57074f7ded7a4badda044bb3930e000720fd76" translate="yes" xml:space="preserve">
          <source>initializes the parser with an input stream. &lt;em&gt;Filename&lt;/em&gt; is only used for nice error messages. The parser's behaviour can be controlled by the diverse optional parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a489a4cfbc511aca545ff4b3ca4a19f6519a0c" translate="yes" xml:space="preserve">
          <source>inits the BaseLexer with a stream to read from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1311b9a5ae51604529428ea2c2c483456bd0ddff" translate="yes" xml:space="preserve">
          <source>inits the option parser. If &lt;code&gt;cmdline == &quot;&quot;&lt;/code&gt;, the real command line (as provided by the &lt;code&gt;OS&lt;/code&gt; module) is taken. If &lt;code&gt;shortNoVal&lt;/code&gt; is provided command users do not need to delimit short option keys and values with a ':' or '='. If &lt;code&gt;longNoVal&lt;/code&gt; is provided command users do not need to delimit long option keys and values with a ':' or '=' (though they still need at least a space). In both cases, ':' or '=' may still be used if desired. They just become optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a53c210ee9cd8198e1a4380b17a65bb14148ac" translate="yes" xml:space="preserve">
          <source>inits the option parser. If &lt;code&gt;cmdline.len == 0&lt;/code&gt;, the real command line (as provided by the &lt;code&gt;OS&lt;/code&gt; module) is taken. &lt;code&gt;shortNoVal&lt;/code&gt; and &lt;code&gt;longNoVal&lt;/code&gt; behavior is the same as for &lt;code&gt;initOptParser(string,...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0d92d5801f0acbe8cb8de8f54ea34174b0392d" translate="yes" xml:space="preserve">
          <source>insert the child &lt;em&gt;son&lt;/em&gt; to a given position in &lt;em&gt;father&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06acaaf8d1dad249294297447179c992ed60c3cd" translate="yes" xml:space="preserve">
          <source>inserts &lt;em&gt;item&lt;/em&gt; into &lt;em&gt;x&lt;/em&gt; at position &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db002f68332f56d4bbca926200943de57b2404b8" translate="yes" xml:space="preserve">
          <source>inserts &lt;em&gt;key&lt;/em&gt; with value &lt;em&gt;val&lt;/em&gt; into &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097c03362a9de7ecbcba48b21a2311a14da5aed3" translate="yes" xml:space="preserve">
          <source>instantiation of generic procs and types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63748dc4a180dba69f5a8f04f0e484e9843dc1d0" translate="yes" xml:space="preserve">
          <source>int16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71739707a7eafbe926fe99f6312cc8634db005d" translate="yes" xml:space="preserve">
          <source>int32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf12f96228a3fa41a25040bdcc6eac3659e7844" translate="yes" xml:space="preserve">
          <source>int64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74777c55db0fb6707ffab4f3db006eb69c34c57" translate="yes" xml:space="preserve">
          <source>int8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d4f97da63e6a1c5f6710dec50f4d5738a3eedd" translate="yes" xml:space="preserve">
          <source>intXX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1410bb8eea7b373209e2556d31cbcc4da340cba9" translate="yes" xml:space="preserve">
          <source>integer division that results in a float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1feeaa7daab93ac02212ffb2207aa531e0d8298" translate="yes" xml:space="preserve">
          <source>intercept</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb251a0707fe07c21a5499bcbc4859ccf629127" translate="yes" xml:space="preserve">
          <source>intersection of two sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25dc7b982fe12f2300c4a55a0b9df70778186122" translate="yes" xml:space="preserve">
          <source>intsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e4715e60622b1dd5d446458865ef176c82f3e0" translate="yes" xml:space="preserve">
          <source>intsets.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed08b9f7765512177a39b7e3bce3f84d8abbd41" translate="yes" xml:space="preserve">
          <source>intsets.&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f2ac8051c41aa80e57557c1f9de3bc26b2424e" translate="yes" xml:space="preserve">
          <source>intsets.*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0018aa3bcd7f90776ce07d0ee16fdbf7ce91c5a" translate="yes" xml:space="preserve">
          <source>intsets.+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64908986ea819128199532eabeed1dc8365f7e94" translate="yes" xml:space="preserve">
          <source>intsets.-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6346739e4674b688f1fb7623dda40446d6ece5e" translate="yes" xml:space="preserve">
          <source>intsets.==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a0780be493d704c9a3b09c0cb3715d4267be8a" translate="yes" xml:space="preserve">
          <source>invalid operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21c8233b68a85867e87ea59e72aff5996cbf6a3" translate="yes" xml:space="preserve">
          <source>invalid socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a1c4270bd095af845a84f60534c27fd4082b3b" translate="yes" xml:space="preserve">
          <source>invoking a macro like a procedure call (&lt;em&gt;expression macros&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8447fe0b69cb951f691aa2d269768e81391914d" translate="yes" xml:space="preserve">
          <source>invoking a macro like a procedure call (expression macros)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c87c75d4fe7443d99c19190a1d05e64bd8167f2" translate="yes" xml:space="preserve">
          <source>invoking a macro with the special &lt;code&gt;macrostmt&lt;/code&gt; syntax (&lt;em&gt;statement macros&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59103b38a68089739e22b198bf623ce76db375bc" translate="yes" xml:space="preserve">
          <source>invoking a macro with the special &lt;code&gt;macrostmt&lt;/code&gt; syntax (statement macros)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3583deb9cb9f6dd063cc5c3b3f658a643389c0f5" translate="yes" xml:space="preserve">
          <source>is Posix's &lt;code&gt;bind&lt;/code&gt;, because &lt;code&gt;bind&lt;/code&gt; is a reserved word</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ae7df1f6f6e76794662ab3ce9c43d88889df78" translate="yes" xml:space="preserve">
          <source>is a tab followed by the character &quot;3&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca0526d48ef21c0f3eb67ce1cb22589f5e4e553" translate="yes" xml:space="preserve">
          <source>is a type describing the endianness of a processor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7080ffa805d171fc852c14b72135dc8d0b262ca8" translate="yes" xml:space="preserve">
          <source>is always a back reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae26e3c90a1fbb1a0b3991a407ec3249aa67f053" translate="yes" xml:space="preserve">
          <source>is always a tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb79d40c8034f96701f62905bdefd55788f8d195" translate="yes" xml:space="preserve">
          <source>is an alias for the biggest floating point type the Nim compiler supports. Currently this is &lt;code&gt;float64&lt;/code&gt;, but it is platform-dependant in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb80b1f5ccfd7dc7c8a7b5646d83c4d7c66c51a" translate="yes" xml:space="preserve">
          <source>is an alias for the biggest signed integer type the Nim compiler supports. Currently this is &lt;code&gt;int64&lt;/code&gt;, but it is platform-dependant in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b132e3fbeb2bd1e2b9b095d1801f1c0bf5c6db" translate="yes" xml:space="preserve">
          <source>is an alias for the biggest unsigned integer type the Nim compiler supports. Currently this is &lt;code&gt;uint32&lt;/code&gt; for JS and &lt;code&gt;uint64&lt;/code&gt; for other targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb878a458876d8e30f7e3a0a8ebcb6aa4f348b6" translate="yes" xml:space="preserve">
          <source>is an int type ranging from one to the maximum value of an int. This type is often useful for documentation and debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8cb718b33a2806b4222a3af9ffa451091dc51f" translate="yes" xml:space="preserve">
          <source>is an int type ranging from zero to the maximum value of an int. This type is often useful for documentation and debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27964c56e4080ef4be8f376476d2377abbb9df9" translate="yes" xml:space="preserve">
          <source>is another way of writing a space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b51d068b25b6440cbcc20cf74bd0bd4d569a5c2" translate="yes" xml:space="preserve">
          <source>is converted to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ae59f49ec459bb5536883de80247249dc880e2" translate="yes" xml:space="preserve">
          <source>is either a back reference, or a binary zero followed by the two characters &quot;8&quot; and &quot;1&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ff94abe46a6e3e8cd8bdec294d3650175d23f2" translate="yes" xml:space="preserve">
          <source>is raised for a JSON error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a015e835f0c91dc529b4e6bf249ed8c343e1b91d" translate="yes" xml:space="preserve">
          <source>is raised for a SEXP error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9be8f950af42dc740e318e4d282d30d5e1a728a" translate="yes" xml:space="preserve">
          <source>is raised if the pattern is no valid regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701932bf09c10716a64c64a4c0639c4ea5f55c44" translate="yes" xml:space="preserve">
          <source>is the date of compilation as a string of the form &lt;code&gt;YYYY-MM-DD&lt;/code&gt;. This works thanks to compiler magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd7ca8bfe96dd9964ffddbecb136e63461b2138" translate="yes" xml:space="preserve">
          <source>is the default calling convention for a &lt;strong&gt;procedural type&lt;/strong&gt; that lacks any pragma annotations. It indicates that the procedure has a hidden implicit parameter (an &lt;em&gt;environment&lt;/em&gt;). Proc vars that have the calling convention &lt;code&gt;closure&lt;/code&gt; take up two machine words: One for the proc pointer and another one for the pointer to implicitly passed environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee974182d99f5dd4db4aed03368168f3212b4f7" translate="yes" xml:space="preserve">
          <source>is the default convention used for a Nim &lt;strong&gt;proc&lt;/strong&gt;. It is the same as &lt;code&gt;fastcall&lt;/code&gt;, but only for C compilers that support &lt;code&gt;fastcall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f0c0e0c47f3b54d5ed0e9d22d664e0f964d075" translate="yes" xml:space="preserve">
          <source>is the endianness of the target CPU. This is a valuable piece of information for low-level code only. This works thanks to compiler magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad37dfd54f39152009af1ecfc0e2f157871a49c8" translate="yes" xml:space="preserve">
          <source>is the major number of Nim's version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dab719d7f28fc95b276a089872894b64a9cf23" translate="yes" xml:space="preserve">
          <source>is the minor number of Nim's version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff0f035f148832bbc53b074d02797a7ccdc5f77" translate="yes" xml:space="preserve">
          <source>is the patch number of Nim's version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3e2e0d3d456752d6975979c37521746c4bb400" translate="yes" xml:space="preserve">
          <source>is the same, provided there are fewer than 40 previous capturing subpatterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597790fc619a5c3b1873a50a589349940a14e043" translate="yes" xml:space="preserve">
          <source>is the signed integer type that should be used for converting pointers to integer addresses for readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d67e2cdda26b4aacca12424f1da1b35f562d599" translate="yes" xml:space="preserve">
          <source>is the time of compilation as a string of the form &lt;code&gt;HH:MM:SS&lt;/code&gt;. This works thanks to compiler magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55adc982d8a7167690ea9ddca85c2764b2e00e1" translate="yes" xml:space="preserve">
          <source>is the value that should be passed to &lt;a href=&quot;#quit&quot;&gt;quit&lt;/a&gt; to indicate failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46b1dd430f0faaeb4830ca69b5d4a0f6b190276" translate="yes" xml:space="preserve">
          <source>is the value that should be passed to &lt;a href=&quot;#quit&quot;&gt;quit&lt;/a&gt; to indicate success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271d1f15ce97d251c26ffc14acb008892b24144d" translate="yes" xml:space="preserve">
          <source>is the version of Nim as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dd266308e2b14c03ba706f1dbb5a1213eb4bde" translate="yes" xml:space="preserve">
          <source>is true only when accessed in the main module. This works thanks to compiler magic. It is useful to embed testing code in a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7316c8b2e74870d9d7e9d30bbc28ecf4cdf945ee" translate="yes" xml:space="preserve">
          <source>items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1760a509566052aa060f4c63cf6e1be0a2217f9" translate="yes" xml:space="preserve">
          <source>iterates over any (key, value) pair in the table &lt;em&gt;t&lt;/em&gt; in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13591100ac00911cd60cfa8110b9ab031d7ba233" translate="yes" xml:space="preserve">
          <source>iterates over any (key, value) pair in the table &lt;em&gt;t&lt;/em&gt; in insertion order. The values can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabfa3d229d5e5ac45e1949e3e4a3eb8290b0219" translate="yes" xml:space="preserve">
          <source>iterates over any (key, value) pair in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487236e0a222d87388aa077563b227ed351112d0" translate="yes" xml:space="preserve">
          <source>iterates over any (key, value) pair in the table &lt;em&gt;t&lt;/em&gt;. The values can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e81d079ce95ef83e15004370c43135399caf3e" translate="yes" xml:space="preserve">
          <source>iterates over any character in the rope &lt;em&gt;r&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd8ef9bb2cff254c2eb414930ee3bceaa572df4" translate="yes" xml:space="preserve">
          <source>iterates over any child of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04058c90afe4d4b5ae017129b2c7300322141c0" translate="yes" xml:space="preserve">
          <source>iterates over any included element of &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4fab60e5d17b8390de2bfc788a280280afac7a" translate="yes" xml:space="preserve">
          <source>iterates over any key in the table &lt;em&gt;t&lt;/em&gt; in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c46fb8b4c7757bcf13add4b2a9c734e4fd5289f" translate="yes" xml:space="preserve">
          <source>iterates over any key in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e0525787ac7a3774db6eb9bbc47574f2685233" translate="yes" xml:space="preserve">
          <source>iterates over any leaf string in the rope &lt;em&gt;r&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ccf74139557d7d2194eb8c791ed888f62fd975" translate="yes" xml:space="preserve">
          <source>iterates over any value in the table &lt;em&gt;t&lt;/em&gt; in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8570bd2a088284d9e907879130a9157ef5fe8433" translate="yes" xml:space="preserve">
          <source>iterates over any value in the table &lt;em&gt;t&lt;/em&gt; in insertion order. The values can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f44a06f00693902a142256b7403fc1eb6d6c5bc" translate="yes" xml:space="preserve">
          <source>iterates over any value in the table &lt;em&gt;t&lt;/em&gt; that belongs to the given &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91034afeffdca73aa01401e6de279f46d9691e18" translate="yes" xml:space="preserve">
          <source>iterates over any value in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be4f65c78f152d72537408d27f9d18d3dac6a35" translate="yes" xml:space="preserve">
          <source>iterates over any value in the table &lt;em&gt;t&lt;/em&gt;. The values can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2ce017f68fb69f7d455c0c4f07a3e619c8c8f9" translate="yes" xml:space="preserve">
          <source>iterates over each element of &lt;em&gt;a&lt;/em&gt;. &lt;em&gt;items&lt;/em&gt; iterates only over the elements that are really in the set (and not over the ones the set is able to hold).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ede53895f962cb43850eb08c5e70c841077a2b7" translate="yes" xml:space="preserve">
          <source>iterates over each item of &lt;em&gt;a&lt;/em&gt; so that you can modify the yielded value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4404f78478fb1b5d5e07b7e42d76ffc9ce222903" translate="yes" xml:space="preserve">
          <source>iterates over each item of &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f739d112bc338698811fd7d215414a886f544a" translate="yes" xml:space="preserve">
          <source>iterates over each item of &lt;em&gt;a&lt;/em&gt;. Yields &lt;code&gt;(index, a[index])&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4bdd07a8e4306ee9d935526ccc968c91fff2c2" translate="yes" xml:space="preserve">
          <source>iterates over each item of &lt;em&gt;a&lt;/em&gt;. Yields &lt;code&gt;(index, a[index])&lt;/code&gt; pairs. &lt;code&gt;a[index]&lt;/code&gt; can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43a103e10b9e9fed69a2d61aede4f0c10953906" translate="yes" xml:space="preserve">
          <source>iterates over every (key, value) pair in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29cfcc5a9e7150d657f3ea7dab98fa3edb9a4f1" translate="yes" xml:space="preserve">
          <source>iterates over every active field of the any &lt;em&gt;x&lt;/em&gt; that represents an object or a tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb1083b8b5caa5fe08ccff78da4bc1b8b3f673d" translate="yes" xml:space="preserve">
          <source>iterates over every element of &lt;em&gt;x&lt;/em&gt; that represents a Nim bitset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f4645a689e1d074cb5c4f3e5cc1f9e10925057" translate="yes" xml:space="preserve">
          <source>iterates over every field of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. Warning: This is really transforms the 'for' and unrolls the loop. The current implementation also has a bug that affects symbol binding in the loop body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2808acb565a8ff1ad6fa34311dd8fd505221f3b8" translate="yes" xml:space="preserve">
          <source>iterates over every field of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. Warning: This really transforms the 'for' and unrolls the loop. The current implementation also has a bug that affects symbol binding in the loop body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69daadb41b417c26b566a32cb54f50640a2e7ad" translate="yes" xml:space="preserve">
          <source>iterates over every field of &lt;em&gt;x&lt;/em&gt;. Warning: This really transforms the 'for' and unrolls the loop. The current implementation also has a bug that affects symbol binding in the loop body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e49fbb6f02a6aa33742354d29e04ba0e32546b" translate="yes" xml:space="preserve">
          <source>iterates over every key in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c404430658a4184acb6d0a313590070dc841bf01" translate="yes" xml:space="preserve">
          <source>iterates over every node of &lt;em&gt;x&lt;/em&gt;. Removing the current node from the list during traversal is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef50e9ef0266cf3f5baf46f53ddf9635f7f158d7" translate="yes" xml:space="preserve">
          <source>iterates over every value in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcae91457a9fd325c3767a73a918454708211014" translate="yes" xml:space="preserve">
          <source>iterates over the list. If 'action' returns true, the current item is removed from the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5cffca53ea53338ba4107780a81a83e24f1515" translate="yes" xml:space="preserve">
          <source>iterates over the slice &lt;em&gt;s&lt;/em&gt;, yielding each value between &lt;em&gt;s.a&lt;/em&gt; and &lt;em&gt;s.b&lt;/em&gt; (inclusively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d2a93534419ef90f4cf164ee7cd0dfd7bab3b3" translate="yes" xml:space="preserve">
          <source>iterates over the values of the enum &lt;code&gt;E&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef4aaaa11015ef79d88f3701f4c69ad690eb4c7" translate="yes" xml:space="preserve">
          <source>iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad671b0295cbb4f1a5a62a2a5a66f4ef8b15a84" translate="yes" xml:space="preserve">
          <source>iterator over (key, value) pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768636396ad136abc35d25242c564f775ab12dde" translate="yes" xml:space="preserve">
          <source>iup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed170a77d51dee4ee19a8ab3d2c4d0c9f205f08" translate="yes" xml:space="preserve">
          <source>iup.K_0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b457086994a3810c4767f0ee0236c32e1e7bbf1c" translate="yes" xml:space="preserve">
          <source>iup.K_1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e463072851684b95c2cc1144f43d01fe8948bcce" translate="yes" xml:space="preserve">
          <source>iup.K_2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03898b98c4ed03b96c52cf8c4494990846e9ee03" translate="yes" xml:space="preserve">
          <source>iup.K_3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429cfeb1888ddbef1dea8ca1fe8bccdeb000299f" translate="yes" xml:space="preserve">
          <source>iup.K_4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a56bf07c1a7fd07a7e4ac59fef0dfe3dab1e48b" translate="yes" xml:space="preserve">
          <source>iup.K_5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f61bb92acbd9e779eba56a95de1540c31fd537" translate="yes" xml:space="preserve">
          <source>iup.K_6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7da5ae5d538795060349feb3025dbba5f7a4043" translate="yes" xml:space="preserve">
          <source>iup.K_7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913470b3500a8b1593cdd851c75ec3bd978b18e6" translate="yes" xml:space="preserve">
          <source>iup.K_8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b5ac6253b742edcbcacca478869341a7418b96" translate="yes" xml:space="preserve">
          <source>iup.K_9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9099b355f1fd90f5540f071c3e86be92f81f4b70" translate="yes" xml:space="preserve">
          <source>iup.K_BS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb7d598f2283342b7cd159beb163df8569b0d88" translate="yes" xml:space="preserve">
          <source>iup.K_CR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be9dec42cd096179acd9b99676f871b3b6d4e30" translate="yes" xml:space="preserve">
          <source>iup.K_F1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e02b803bf9aa05f4358c231f8e466cf31c1629" translate="yes" xml:space="preserve">
          <source>iup.K_F2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1837a8f58a28a93b4357b185f64d3a391b22e5c2" translate="yes" xml:space="preserve">
          <source>iup.K_F3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce79beb5f06f232d2a724c817068a22a2631b37" translate="yes" xml:space="preserve">
          <source>iup.K_F4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608678a201bbf9ec6d67fb53501698dca1ff1c25" translate="yes" xml:space="preserve">
          <source>iup.K_F5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba6946c45074ef9d2d9b8c695a6581b5a37c0cd" translate="yes" xml:space="preserve">
          <source>iup.K_F6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59c3d942040dbc5e173967d03142025e36e4a12" translate="yes" xml:space="preserve">
          <source>iup.K_F7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1712cebdb768b2b3c75ba30cf2780f219f9d8477" translate="yes" xml:space="preserve">
          <source>iup.K_F8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697e48e54566aa57c38f7ca95772b05e32e27f0a" translate="yes" xml:space="preserve">
          <source>iup.K_F9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d5d3c05285010b6c830b8f8dfcdd08385af6b4" translate="yes" xml:space="preserve">
          <source>iup.K_LF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e6c5417456b2b447d717795142f4e46dc34a69" translate="yes" xml:space="preserve">
          <source>iup.K_SP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5955e7ca1212adac10669295c926ce2f6812a9" translate="yes" xml:space="preserve">
          <source>iup.K_UP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4082ed3cf965118869ce4bff7c6ef1216ac5a160" translate="yes" xml:space="preserve">
          <source>iup.K_at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9ca6a20375f359504d1c35b82cc17890e0bf25" translate="yes" xml:space="preserve">
          <source>iup.K_c0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a39a907bc2c554aaa728e0dd909dbca8b4f7645" translate="yes" xml:space="preserve">
          <source>iup.K_c1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe879d10185f2e76eb7c0853e5784be99ff25da" translate="yes" xml:space="preserve">
          <source>iup.K_c2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168f91c47553a747a102b536856348661b7dfb63" translate="yes" xml:space="preserve">
          <source>iup.K_c3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e641eb97261b97c59936284f7d5ca148516d038" translate="yes" xml:space="preserve">
          <source>iup.K_c4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b16362bf7dddbe7d509416b6650e5963ab66785" translate="yes" xml:space="preserve">
          <source>iup.K_c5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905b74eab7c5a7443d8e52989f8ea16e173ea623" translate="yes" xml:space="preserve">
          <source>iup.K_c6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52a94f3ff80eafb92ba43831f484b3896aa36c4" translate="yes" xml:space="preserve">
          <source>iup.K_c7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c02150f9923b9230ab90158f12f6f21237a689" translate="yes" xml:space="preserve">
          <source>iup.K_c8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed962a21400e2be6a7fb0f5b0d2d430fb5e66917" translate="yes" xml:space="preserve">
          <source>iup.K_c9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e85f323e17fcaf30c4be9cda6de4d6b9be890ab" translate="yes" xml:space="preserve">
          <source>iup.K_m0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa9aaff03b428cf1c6986d3179fde6f4fb8f0db" translate="yes" xml:space="preserve">
          <source>iup.K_m1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706e12281877d5f78de2a72d40c06e8300a2722a" translate="yes" xml:space="preserve">
          <source>iup.K_m2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7d98d05f78b2e38599d1901a1bf059ce36568e" translate="yes" xml:space="preserve">
          <source>iup.K_m3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0ee034d6a110bd13d4cafc70b39d0ccae5c662" translate="yes" xml:space="preserve">
          <source>iup.K_m4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882c8082a8d5acbd80333e43244524040466994c" translate="yes" xml:space="preserve">
          <source>iup.K_m5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb58a7510c74da7bce31cc03d4a90d909141383" translate="yes" xml:space="preserve">
          <source>iup.K_m6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408615129b8973e234801af9397da699f7c7421e" translate="yes" xml:space="preserve">
          <source>iup.K_m7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c075ef0060d8c26479b857c820549d26a04e69" translate="yes" xml:space="preserve">
          <source>iup.K_m8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dfe1f41207d866c0c3b36677e399b629881f21" translate="yes" xml:space="preserve">
          <source>iup.K_m9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8888e262ae5b6491fd5c1f1fe1580bc5378bdd" translate="yes" xml:space="preserve">
          <source>iup.K_y0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff0d558074bd7402a785a7f064cf8dc6645e018" translate="yes" xml:space="preserve">
          <source>iup.K_y1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbabc4af06b04fdc9ae426c13e8c1fd9d2c0b33" translate="yes" xml:space="preserve">
          <source>iup.K_y2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a351afbd31b00ac2692b21eafb6b5c34983f8501" translate="yes" xml:space="preserve">
          <source>iup.K_y3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bb7e7535b317f9d0652ed95bcc7aa73cf0ed90" translate="yes" xml:space="preserve">
          <source>iup.K_y4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ea90471432cd35b1f830a0097ebaad5ef7f1c3" translate="yes" xml:space="preserve">
          <source>iup.K_y5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32dd53aab1551b231be7ba06b97c42e8dd33f89" translate="yes" xml:space="preserve">
          <source>iup.K_y6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e065dcd802d54198d93b2af913d97d42f4c1136" translate="yes" xml:space="preserve">
          <source>iup.K_y7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8907a4558d8aeed4d486a3d50fd35c784832a9d" translate="yes" xml:space="preserve">
          <source>iup.K_y8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d7c6812a21c6427250cdb7b23a9223a7e58359" translate="yes" xml:space="preserve">
          <source>iup.K_y9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2fedc73de05c04084d01a25d3ed7696a98a7c0" translate="yes" xml:space="preserve">
          <source>iup.K_yA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e87d8e036f9376c08af00cc2451ee9a536cb6d9" translate="yes" xml:space="preserve">
          <source>iup.K_yB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a9d8f5721538d72cb3bde474cb5edda44bbd5f" translate="yes" xml:space="preserve">
          <source>iup.K_yC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3615bac09029dba382d64bc7006f12dec4336287" translate="yes" xml:space="preserve">
          <source>iup.K_yD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6d6b0222d9811e6d6e7d9e7dfef10690fef987" translate="yes" xml:space="preserve">
          <source>iup.K_yE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65a30c704976fc2dc8681809b2a3ca64ef815fd" translate="yes" xml:space="preserve">
          <source>iup.K_yF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e25d75350ce074cfeb26af8ff4f12bee52c615" translate="yes" xml:space="preserve">
          <source>iup.K_yG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8da9e2c6bcf7aba928ba1d5220b78377cb5f8f0" translate="yes" xml:space="preserve">
          <source>iup.K_yH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323dca4bcb698fd4f78c7ba7e44281c8b47ec3df" translate="yes" xml:space="preserve">
          <source>iup.K_yI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f0123d893e61d57a3a08537c5bdd2d961996f5" translate="yes" xml:space="preserve">
          <source>iup.K_yJ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c1aa3ff73c3210df280df1c7b54bc9f1982199" translate="yes" xml:space="preserve">
          <source>iup.K_yK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f668794c944cd548eaf9253862f780e65919c3a1" translate="yes" xml:space="preserve">
          <source>iup.K_yL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c27a0e373a9c125ce123e4724958556e1b6213" translate="yes" xml:space="preserve">
          <source>iup.K_yM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482847b5c3f702d5c23c88f39bdb3a2557c81cc6" translate="yes" xml:space="preserve">
          <source>iup.K_yN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89938e82c51519b1b1e74f4cbe64e3e0273dc54" translate="yes" xml:space="preserve">
          <source>iup.K_yO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa537c587bfd6da797f306e7d3ad198ecb90c489" translate="yes" xml:space="preserve">
          <source>iup.K_yP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70086c803dadfdbc93e903c64744d3a65a7a9db3" translate="yes" xml:space="preserve">
          <source>iup.K_yQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97572e84aa9604e2b961df0e8cabc13efa247ed" translate="yes" xml:space="preserve">
          <source>iup.K_yR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ee6bd4d2eb74000caddc4e582122500b0814c6" translate="yes" xml:space="preserve">
          <source>iup.K_yS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dd17bccbb31cd087e5e0097e9b03ed058ca4eb" translate="yes" xml:space="preserve">
          <source>iup.K_yT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4529c658711714ec4160b710a5e528b0ecb0e8ea" translate="yes" xml:space="preserve">
          <source>iup.K_yU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e51754f3d55801af36bcbb6634fe0edf2551c7" translate="yes" xml:space="preserve">
          <source>iup.K_yV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927d246b62ea876712e35f576610421aee6b78b1" translate="yes" xml:space="preserve">
          <source>iup.K_yW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9896d81219776d9e5e35f23c7f36c6de2cddfdba" translate="yes" xml:space="preserve">
          <source>iup.K_yX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2102c02ab21b906538f70960cd402abb2d2061fa" translate="yes" xml:space="preserve">
          <source>iup.K_yY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9a4427042a92c62eeccd0310412971163f509b" translate="yes" xml:space="preserve">
          <source>iup.K_yZ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f8bb0eb2c659b85694486c41717eaf0fe23cd4" translate="yes" xml:space="preserve">
          <source>js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb7a463977e20eba6b0f28bc5443130b13727ff" translate="yes" xml:space="preserve">
          <source>jscore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9371fa0aa91633e9dd44ec5825f9ae6f62f341e8" translate="yes" xml:space="preserve">
          <source>jscore.Date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68425d01df13c23c72f162ee0e719a594287b864" translate="yes" xml:space="preserve">
          <source>jscore.JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f502e8b5677c2b7de44f6d8ee82a1d7b72ff980" translate="yes" xml:space="preserve">
          <source>jscore.Math</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f02bfbbc70f154b7a6d20b5b4ad633fdaa46b4" translate="yes" xml:space="preserve">
          <source>jsffi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e31a3812f30ca21649ff82f229e51ab7332657" translate="yes" xml:space="preserve">
          <source>jsffi.%</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1e9a51ac9c5da811619b07c3894248240175dd" translate="yes" xml:space="preserve">
          <source>jsffi.%=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ff2e416f963e71806a59d8e3bd09a3f2104095" translate="yes" xml:space="preserve">
          <source>jsffi.&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1501542bcd8f7a506db5d7d68f30e89244ff00a2" translate="yes" xml:space="preserve">
          <source>jsffi.&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9694e1c6602e5b54e3f1ad8000ca14374990a7d5" translate="yes" xml:space="preserve">
          <source>jsffi.*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4343e7053943295c507fc810520cbe1e580e7e47" translate="yes" xml:space="preserve">
          <source>jsffi.*=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ec4a1072fc35b3f9c8d3a948a8a804ded7482e" translate="yes" xml:space="preserve">
          <source>jsffi.+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8287b11e2a33c291b7819111ba00b2e2054ac6e1" translate="yes" xml:space="preserve">
          <source>jsffi.++</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a3f560f684ef0abb413f30ae0e88f00845419c" translate="yes" xml:space="preserve">
          <source>jsffi.+=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c0002f579e6e0c645e1210b05531cc429b09b4" translate="yes" xml:space="preserve">
          <source>jsffi.-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8797ab1dde2435b6b8a55dfb6b5ede0bee84ce66" translate="yes" xml:space="preserve">
          <source>jsffi.--</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5d3e10833aeecfae08d194887a36a24fbfafe3" translate="yes" xml:space="preserve">
          <source>jsffi.-=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47775bdb0216d90096d2eb6c24bd7a93bb1b6d71" translate="yes" xml:space="preserve">
          <source>jsffi..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e403f50455add588ed222ec4bda18363ca2c542e" translate="yes" xml:space="preserve">
          <source>jsffi..()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4007d0acb279a2d55011f70cc26f85f38d3e8454" translate="yes" xml:space="preserve">
          <source>jsffi..=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa00db80c4c4a91981eee9ea354ea0601b269b3" translate="yes" xml:space="preserve">
          <source>jsffi./</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a989ce42c9cda92c26daa9901813801f924d5c" translate="yes" xml:space="preserve">
          <source>jsffi./=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acaf765768b52e33db2824791fc13ff9920fc58" translate="yes" xml:space="preserve">
          <source>jsffi.==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc9511b69d709b4285d42ed8e19be359332ba96" translate="yes" xml:space="preserve">
          <source>jsffi.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a073d10aef6ef3cb40fb2cd9c8daf618d3c80d" translate="yes" xml:space="preserve">
          <source>jsffi.[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d70efb7c81332bb32f90c2108b76df7e6eadd28" translate="yes" xml:space="preserve">
          <source>jsffi.and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84697f53ca73ef8a9d02fcefb838ca14db63ee5c" translate="yes" xml:space="preserve">
          <source>jsffi.in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96344a7111a3251a2da2b5d675108ebe79896d7" translate="yes" xml:space="preserve">
          <source>jsffi.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b7abbff4cec230578b2d0986ffe89ebda0ceae" translate="yes" xml:space="preserve">
          <source>jsffi.keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31af75b7ec9f991bdb2fa79617d4cf3f96167373" translate="yes" xml:space="preserve">
          <source>jsffi.not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cd9a925de8da01fa2c2b8e3960870628592bf8" translate="yes" xml:space="preserve">
          <source>jsffi.or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0246fb25676b03a4e83644abeef0abbaa05125d8" translate="yes" xml:space="preserve">
          <source>jsffi.to()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4185e34ce44328056fa518acdb623d046abaafb9" translate="yes" xml:space="preserve">
          <source>jsffi.{}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d97e6e9834ccf063c552e404b9ecafc5e4d662" translate="yes" xml:space="preserve">
          <source>json</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429c036b7968f730163e9183836355073c741a82" translate="yes" xml:space="preserve">
          <source>json.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d6559f6a57429ba7741d0cb7212c1f85c1ceab" translate="yes" xml:space="preserve">
          <source>json.%</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6615a37596b346217fd44fba311b17c6bd851524" translate="yes" xml:space="preserve">
          <source>json.%*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e111cfab35aea57a10f28dd5ba6bc67b2f4b1e7" translate="yes" xml:space="preserve">
          <source>json.==</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e061d523e79cc6dd25a2a4a0b7cf54a954eb37c" translate="yes" xml:space="preserve">
          <source>json.[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54836da02ce6a76c7dd3f5159ea53600f6cac66e" translate="yes" xml:space="preserve">
          <source>json.[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9e1f2bce220a64f7c0ac3b34416625737b3e4d" translate="yes" xml:space="preserve">
          <source>json.to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f7ca24306a702efced71b37dd8e7964699af68" translate="yes" xml:space="preserve">
          <source>json.{}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5167cfb3feccceee8cb3daa91fc41cd2b449a5" translate="yes" xml:space="preserve">
          <source>json.{}=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3be429138afd53f57eefec469e6fd3754480237" translate="yes" xml:space="preserve">
          <source>jsondoc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9530ca6b701ac82482f6d21a070d23f28c5d65bd" translate="yes" xml:space="preserve">
          <source>kind of SQL abstract syntax tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12924f08ffcd1967e5b97c08deefd9874a876b3" translate="yes" xml:space="preserve">
          <source>kurtosis (the fourth statistical moment)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e085cd6cd84b8a9c9c579703230f4d095e37474" translate="yes" xml:space="preserve">
          <source>leaked implementation detail. Do not use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cfa7bfe3afb564f5833390a590edf6497074e0" translate="yes" xml:space="preserve">
          <source>len for an any &lt;em&gt;x&lt;/em&gt; that represents an array or a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64279c99d1a2d60bcb4a1ed4f2ee0b4835522e3" translate="yes" xml:space="preserve">
          <source>length of ordinal slice, when x.b &amp;lt; x.a returns zero length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bd2953de024e609b3b31a25c0e570ab7e01fb5" translate="yes" xml:space="preserve">
          <source>length of the last rune in 's[0..last]'. Returns the rune and its length in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fb7752a9d8992226a7728c692ac9c9e4be667c" translate="yes" xml:space="preserve">
          <source>lenientops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f1275a1d46bc229631fd8cc78c72379d85363b" translate="yes" xml:space="preserve">
          <source>lenientops.&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c69696fc8d2bc06aba7e3df5a80e4c2b0d201a" translate="yes" xml:space="preserve">
          <source>lenientops.*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da66afa794b0afae6060218eef580c15a318d7a5" translate="yes" xml:space="preserve">
          <source>lenientops.+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fd390513b5a78304c2fa4f9e4068358392e992" translate="yes" xml:space="preserve">
          <source>lenientops.-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f063864e7cb75f42e66926c1f4d592677a2639e6" translate="yes" xml:space="preserve">
          <source>lenientops./</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c640c87238437b3b96c679a84e5fb7f70b68b3e5" translate="yes" xml:space="preserve">
          <source>let statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9d2ac7993f431fa97689813001e66033f281f3" translate="yes" xml:space="preserve">
          <source>lexbase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8210eb0d5691adfd76b912ed016ca84049c0602" translate="yes" xml:space="preserve">
          <source>lexer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4e0d463b33fdf94feb7c0918244c89f059454e" translate="yes" xml:space="preserve">
          <source>lexical analyser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3793df7b7ef070a806d59e41ec7c8ee7c3712aa" translate="yes" xml:space="preserve">
          <source>limits the value &lt;code&gt;x&lt;/code&gt; within the interval [a, b]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f2146a07da76046a64dc3b9ccbbb7b6db46521" translate="yes" xml:space="preserve">
          <source>line pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621b10186515b6335760c47232f54bc809743568" translate="yes" xml:space="preserve">
          <source>linearScanEnd pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cc61577ee729aafd415915a632f93827c64dfa" translate="yes" xml:space="preserve">
          <source>link an additional C library (you should omit platform-specific extensions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af9cd106173297170c6b574e8b61ccced0de040" translate="yes" xml:space="preserve">
          <source>list full paths in messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff31192d4084811ecd6dc82301d8c8eec1320c7" translate="yes" xml:space="preserve">
          <source>list of all supported HTML tags; order will always be alphabetically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c57a39ff0708432a0dad43ebfa696170dd66511" translate="yes" xml:space="preserve">
          <source>list the commands used to execute external programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2ea5bee82302925a2874f529684e980c179d70" translate="yes" xml:space="preserve">
          <source>lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f342bd8c5dac166773cbd50916e67ef876ea9d" translate="yes" xml:space="preserve">
          <source>lists.$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12ecf748ae98816f683ff45cdbf4b8c2c72ad7b" translate="yes" xml:space="preserve">
          <source>lit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6866ce0a7d40aa9a2c8ad0c3ee75d3b586ab68" translate="yes" xml:space="preserve">
          <source>literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6fb2589a1dd37b1b8302e658489a844632afb8" translate="yes" xml:space="preserve">
          <source>loads &lt;em&gt;data&lt;/em&gt; from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5a157c3d773ce798c421dc4baf14c844ff725d" translate="yes" xml:space="preserve">
          <source>loads a library from &lt;em&gt;path&lt;/em&gt;. Returns nil if the library could not be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b7604c2de1dcec846e14e06632f970f0dd75d" translate="yes" xml:space="preserve">
          <source>loads a library with name matching &lt;em&gt;pattern&lt;/em&gt;, similar to what &lt;em&gt;dlimport&lt;/em&gt; pragma does. Returns nil if the library could not be loaded. Warning: this proc uses the GC and so cannot be used to load the GC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8190c4b88c5e4d12303fd181019f59b4f19984b" translate="yes" xml:space="preserve">
          <source>locks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c52e112b26600b41d3332b8096d48534eb82840" translate="yes" xml:space="preserve">
          <source>locks.Cond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a049464a8a7853b2c0983b5a41525977c2f98f93" translate="yes" xml:space="preserve">
          <source>locks.Lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc5d6b8e6fafeb858ddffb94eda984d80685fa0" translate="yes" xml:space="preserve">
          <source>log level name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea234c416a5a7d52e335bb6cced062a38cfca75" translate="yes" xml:space="preserve">
          <source>logger that writes the messages to a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff419c4a53e1ff42bf1f4e070285c30a41413ea6" translate="yes" xml:space="preserve">
          <source>logger that writes the messages to a file and performs log rotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba406b1f2f5c00c430c8d22cc9821ee382e84626" translate="yes" xml:space="preserve">
          <source>logger that writes the messages to the console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70602ad9098cedf1342fbf4785e5b1c2a9b1518f" translate="yes" xml:space="preserve">
          <source>logging level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02c2ed69b7b63017af6af50a990f3b766a8f457" translate="yes" xml:space="preserve">
          <source>logging.log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70624210adb08ca506fa482e1db036c62f2fd22c" translate="yes" xml:space="preserve">
          <source>long option - &lt;code&gt;--foo:bar&lt;/code&gt;, &lt;code&gt;--foo=bar&lt;/code&gt; or &lt;code&gt;--foo&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3878bc896d472d6d8284d6f711b2373bbd272dad" translate="yes" xml:space="preserve">
          <source>low level proc that reads data into an untyped &lt;em&gt;buffer&lt;/em&gt; of &lt;em&gt;bufLen&lt;/em&gt; size without moving stream position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216237a33b33791ef993e5b6c847235ba2d9aed6" translate="yes" xml:space="preserve">
          <source>low level proc that reads data into an untyped &lt;em&gt;buffer&lt;/em&gt; of &lt;em&gt;bufLen&lt;/em&gt; size.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
