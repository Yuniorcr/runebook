<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django_rest_framework">
    <body>
      <group id="django_rest_framework">
        <trans-unit id="5c4159b1674c9d9eee90edebbbd69a30bf4a40af" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;That's why I always prefer extensions. Neither choice has anything to do with REST.&amp;rdquo; &amp;mdash; Roy Fielding, &lt;a href=&quot;https://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/14844&quot;&gt;REST discuss mailing list&lt;/a&gt;</source>
          <target state="translated">&amp;ldquo;That's why I always prefer extensions. Neither choice has anything to do with REST.&amp;rdquo; &amp;mdash; Roy Fielding, &lt;a href=&quot;https://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/14844&quot;&gt;REST discuss mailing list&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0766e480338b30f50f24e44c6047a3fca95b3434" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;http://users.ece.utexas.edu/~adnan/pike.html&quot;&gt;Rob Pike&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;http://users.ece.utexas.edu/~adnan/pike.html&quot;&gt;Rob Pike&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c49e7d2524ebef3573e965373a388e2b5ea019a" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;http://www.boredomandlaziness.org/2012/05/djangos-cbvs-are-not-mistake-but.html&quot;&gt;Nick Coghlan&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;http://www.boredomandlaziness.org/2012/05/djangos-cbvs-are-not-mistake-but.html&quot;&gt;Nick Coghlan&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7828ca229c3ddbaa7e1724020e02d505841bac60" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/security/Conceptual/AuthenticationAndAuthorizationGuide/Authorization/Authorization.html&quot;&gt;Apple Developer Documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/security/Conceptual/AuthenticationAndAuthorizationGuide/Authorization/Authorization.html&quot;&gt;Apple Developer Documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9adaafd8f5b8c04ade4e7d78b60d807b83462693" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/class-based-views/#base-vs-generic-views&quot;&gt;Django Documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/class-based-views/#base-vs-generic-views&quot;&gt;Django Documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f56afb99039d8f8c6ed4c152d17fbc8eb1a5fc6b" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.Form.cleaned_data&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.Form.cleaned_data&quot;&gt;Django documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaabab638cc756bb4bf30fe54f05e8e2dd399f54" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/validators/&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/validators/&quot;&gt;Django documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7caa04c71f575c7371e336a200047ed4c0a95957" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/&quot;&gt;Django documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3951f059e209bceb060cff2b84367882061bdc46" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/#the-rendering-process&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/#the-rendering-process&quot;&gt;Django documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78287f966b48c48df0ce1c41c917d1b33b8ae867" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/db/queries/#retrieving-specific-objects-with-filters&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/db/queries/#retrieving-specific-objects-with-filters&quot;&gt;Django documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae51f4d68a475e7137866891a35557f82335be56" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/pagination/&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/pagination/&quot;&gt;Django documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d96c92ae7a9587ed26a5eaa9e51387672a4ac30" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://guides.rubyonrails.org/routing.html&quot;&gt;Ruby on Rails Documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://guides.rubyonrails.org/routing.html&quot;&gt;Ruby on Rails Documentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a835eb6dd385c816c3305585782cef79e04350f3" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://jacobian.org/writing/django-apps-with-buildout/#s-create-a-test-wrapper&quot;&gt;Jacob Kaplan-Moss&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://jacobian.org/writing/django-apps-with-buildout/#s-create-a-test-wrapper&quot;&gt;Jacob Kaplan-Moss&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="532a8d31af40866fdd22405cbdb27d6c8e87571e" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://reinout.vanrees.org/weblog/2011/08/24/class-based-views-usage.html&quot;&gt;Reinout van Rees&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://reinout.vanrees.org/weblog/2011/08/24/class-based-views-usage.html&quot;&gt;Reinout van Rees&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80171fca69d894ac423e778460c660d47dd1ef91" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.7&quot;&gt;RFC7231, Section 4.3.7.&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.7&quot;&gt;RFC7231, Section 4.3.7.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f33e7936addb1c1ce2336f44c50a4fd9820e935" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.ietf.org/rfc/rfc2324.txt&quot;&gt;RFC 2324&lt;/a&gt;, Hyper Text Coffee Pot Control Protocol</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.ietf.org/rfc/rfc2324.txt&quot;&gt;RFC 2324&lt;/a&gt;, Hyper Text Coffee Pot Control Protocol</target>
        </trans-unit>
        <trans-unit id="89f30ccf065875bee8b864a2ddf8b96703a08794" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt;The Zen of Python&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt;The Zen of Python&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4ce7a26bf7830d5af5bd2b90c4b0c938899947a" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.slideshare.net/evolve_conference/201308-fielding-evolve/31&quot;&gt;Roy Fielding&lt;/a&gt;.</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.slideshare.net/evolve_conference/201308-fielding-evolve/31&quot;&gt;Roy Fielding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="30ca59dd5587158182745f957f9e385c289465f6" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html&quot;&gt;RFC 2616&lt;/a&gt;, Fielding et al.</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html&quot;&gt;RFC 2616&lt;/a&gt;, Fielding et al.</target>
        </trans-unit>
        <trans-unit id="85543eb6a8a9ccf2a1761cf90f6594c0eace9f95" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Doug Hellmann, &lt;a href=&quot;https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/&quot;&gt;Python Exception Handling Techniques&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Doug Hellmann, &lt;a href=&quot;https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/&quot;&gt;Python Exception Handling Techniques&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e678bc067abe4f213b1dc030841e907d8cc383bc" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Heroku, [JSON Schema for the Heroku Platform API][cite]</source>
          <target state="translated">&amp;mdash; Heroku, [JSON Schema for the Heroku Platform API][cite]</target>
        </trans-unit>
        <trans-unit id="fd18e50cf45c35d817540ce9a716e2774eddeaae" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Jacob Kaplan-Moss, &lt;a href=&quot;https://jacobian.org/writing/rest-worst-practices/&quot;&gt;&quot;REST worst practices&quot;&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Jacob Kaplan-Moss, &lt;a href=&quot;https://jacobian.org/writing/rest-worst-practices/&quot;&gt;&quot;REST worst practices&quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9323441f5b6c06290b5a195c01e098d760b1a965" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Malcom Tredinnick, &lt;a href=&quot;https://groups.google.com/d/topic/django-developers/dxI4qVzrBY4/discussion&quot;&gt;Django developers group&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Malcom Tredinnick, &lt;a href=&quot;https://groups.google.com/d/topic/django-developers/dxI4qVzrBY4/discussion&quot;&gt;Django developers group&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e2aa6f1438da2a3f2b0ae42767928f8fe87e181" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Roy Fielding, &lt;a href=&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/5857&quot;&gt;REST discuss mailing list&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Roy Fielding, &lt;a href=&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/5857&quot;&gt;REST discuss mailing list&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c939794625666f347c6c428ff7a465985edfa01f" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Roy Fielding, &lt;a href=&quot;https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_5&quot;&gt;Architectural Styles and the Design of Network-based Software Architectures&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Roy Fielding, &lt;a href=&quot;https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_5&quot;&gt;Architectural Styles and the Design of Network-based Software Architectures&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d16bf918edf807929f5c60ce8c53a35264a62c0b" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Russell Keith-Magee, &lt;a href=&quot;https://groups.google.com/d/topic/django-users/sVFaOfQi4wY/discussion&quot;&gt;Django users group&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Russell Keith-Magee, &lt;a href=&quot;https://groups.google.com/d/topic/django-users/sVFaOfQi4wY/discussion&quot;&gt;Django users group&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aeff29b13faff5bc4a50504976a0d8720d5dbab" translate="yes" xml:space="preserve">
          <source>'$' Regex search.</source>
          <target state="translated">'$' Regex search.</target>
        </trans-unit>
        <trans-unit id="7ea81e97253331cab11ac0916c92415e36be303a" translate="yes" xml:space="preserve">
          <source>'=' Exact matches.</source>
          <target state="translated">'=' Exact matches.</target>
        </trans-unit>
        <trans-unit id="d266cf597492d21ca69553ae8293f172ebc44ebf" translate="yes" xml:space="preserve">
          <source>'@' Full-text search. (Currently only supported Django's MySQL backend.)</source>
          <target state="translated">'@' Full-text search. (Currently only supported Django's MySQL backend.)</target>
        </trans-unit>
        <trans-unit id="cb7efbbf3a1848278adda45f032d9f9dfbb406d6" translate="yes" xml:space="preserve">
          <source>'^' Starts-with search.</source>
          <target state="translated">'^' Starts-with search.</target>
        </trans-unit>
        <trans-unit id="14776d849d667ec5802f8cf3b91d240618957785" translate="yes" xml:space="preserve">
          <source>...and start up Django's development server.</source>
          <target state="translated">...and start up Django's development server.</target>
        </trans-unit>
        <trans-unit id="4d37ce9a652cc2f3e659d41f2c9c396cced65f35" translate="yes" xml:space="preserve">
          <source>...and the following settings.</source>
          <target state="translated">...and the following settings.</target>
        </trans-unit>
        <trans-unit id="8ede7e3f6dd7dbf4ee9098dbca44ccd781fc5a3b" translate="yes" xml:space="preserve">
          <source>...or clone the project from github.</source>
          <target state="translated">...or clone the project from github.</target>
        </trans-unit>
        <trans-unit id="8048213b6dfc176e0c291ac80e3b7ed3af721d3b" translate="yes" xml:space="preserve">
          <source>...then we restore those native datatypes into a dictionary of validated data.</source>
          <target state="translated">...then we restore those native datatypes into a dictionary of validated data.</target>
        </trans-unit>
        <trans-unit id="4375591ea9c5069125bd6bd5b9215a617402065a" translate="yes" xml:space="preserve">
          <source>...then we restore those native datatypes into a fully populated object instance.</source>
          <target state="translated">...then we restore those native datatypes into a fully populated object instance.</target>
        </trans-unit>
        <trans-unit id="1c37a49b0e1fd9af7d086b8b357c06a99cb9f599" translate="yes" xml:space="preserve">
          <source>.accepted_media_type</source>
          <target state="translated">.accepted_media_type</target>
        </trans-unit>
        <trans-unit id="97fe9c243f69f65d68cafed9d4f135f7bbe7b461" translate="yes" xml:space="preserve">
          <source>.accepted_renderer</source>
          <target state="translated">.accepted_renderer</target>
        </trans-unit>
        <trans-unit id="3a3567f073e974408aa44b573c85e30a0160d315" translate="yes" xml:space="preserve">
          <source>.auth</source>
          <target state="translated">.auth</target>
        </trans-unit>
        <trans-unit id="128aeaaf37f880d6d7f78586c230f5ae2d17d9ce" translate="yes" xml:space="preserve">
          <source>.authentication_classes</source>
          <target state="translated">.authentication_classes</target>
        </trans-unit>
        <trans-unit id="f5db330eed7ec20487392ef478cc87bf48014772" translate="yes" xml:space="preserve">
          <source>.authenticators</source>
          <target state="translated">.authenticators</target>
        </trans-unit>
        <trans-unit id="abf90cda96d455adeddb630e6d262680dc55ee32" translate="yes" xml:space="preserve">
          <source>.build_nested_field(self, field_name, relation_info, nested_depth)</source>
          <target state="translated">.build_nested_field(self, field_name, relation_info, nested_depth)</target>
        </trans-unit>
        <trans-unit id="d2d09a41d7dc443654d8fd173df43501280aeb2d" translate="yes" xml:space="preserve">
          <source>.build_property_field(self, field_name, model_class)</source>
          <target state="translated">.build_property_field(self, field_name, model_class)</target>
        </trans-unit>
        <trans-unit id="df857b1e77e76ebc168dd068d3475750e033c0d4" translate="yes" xml:space="preserve">
          <source>.build_relational_field(self, field_name, relation_info)</source>
          <target state="translated">.build_relational_field(self, field_name, relation_info)</target>
        </trans-unit>
        <trans-unit id="d8b45ab35ef80f73a971c19b7de46c3815aa8144" translate="yes" xml:space="preserve">
          <source>.build_standard_field(self, field_name, model_field)</source>
          <target state="translated">.build_standard_field(self, field_name, model_field)</target>
        </trans-unit>
        <trans-unit id="1b7e80248f4f75b2c8b58c7aea8cd60cc726b11c" translate="yes" xml:space="preserve">
          <source>.build_unknown_field(self, field_name, model_class)</source>
          <target state="translated">.build_unknown_field(self, field_name, model_class)</target>
        </trans-unit>
        <trans-unit id="d31e7b8bc09fb5b6102e81725511f2e9bedba0c0" translate="yes" xml:space="preserve">
          <source>.build_url_field(self, field_name, model_class)</source>
          <target state="translated">.build_url_field(self, field_name, model_class)</target>
        </trans-unit>
        <trans-unit id="aa69604f864c0dcf2eaf76444b2538d64275aaeb" translate="yes" xml:space="preserve">
          <source>.check_permissions(self, request)</source>
          <target state="translated">.check_permissions(self, request)</target>
        </trans-unit>
        <trans-unit id="036e6719e99369fa4d19a04a37a05acf53466e00" translate="yes" xml:space="preserve">
          <source>.check_throttles(self, request)</source>
          <target state="translated">.check_throttles(self, request)</target>
        </trans-unit>
        <trans-unit id="42004dde1b5b3c487ffeb93d5a0cdfa6dce73208" translate="yes" xml:space="preserve">
          <source>.content</source>
          <target state="translated">.content</target>
        </trans-unit>
        <trans-unit id="0d599c2f32e131186e373e3cfd21335a6570ce8d" translate="yes" xml:space="preserve">
          <source>.content_negotiation_class</source>
          <target state="translated">.content_negotiation_class</target>
        </trans-unit>
        <trans-unit id="0d327fc7d5731f04b454bf4d5e968fafd3652d33" translate="yes" xml:space="preserve">
          <source>.content_type</source>
          <target state="translated">.content_type</target>
        </trans-unit>
        <trans-unit id="d7deaa4f8f1ac6cf7f78cd6f0762b9e3b8d48d51" translate="yes" xml:space="preserve">
          <source>.credentials(**kwargs)</source>
          <target state="translated">.credentials(**kwargs)</target>
        </trans-unit>
        <trans-unit id="3d995a49285741de520c4a7112a75e61c9f5ea2d" translate="yes" xml:space="preserve">
          <source>.data</source>
          <target state="translated">.data</target>
        </trans-unit>
        <trans-unit id="1faa6c3cac355e69e5afcfda094beb8b050cc37b" translate="yes" xml:space="preserve">
          <source>.finalize_response(self, request, response, *args, **kwargs)</source>
          <target state="translated">.finalize_response(self, request, response, *args, **kwargs)</target>
        </trans-unit>
        <trans-unit id="39225c2eb37409cb1b1723f6a7f6c438f439062f" translate="yes" xml:space="preserve">
          <source>.force_authenticate(user=None, token=None)</source>
          <target state="translated">.force_authenticate(user=None, token=None)</target>
        </trans-unit>
        <trans-unit id="179b6f4e853baf85d558b73659f9e39b136509f7" translate="yes" xml:space="preserve">
          <source>.get_authenticators(self)</source>
          <target state="translated">.get_authenticators(self)</target>
        </trans-unit>
        <trans-unit id="9d691643ef984b9f0fc892084a4af20f87987fc7" translate="yes" xml:space="preserve">
          <source>.get_content_negotiator(self)</source>
          <target state="translated">.get_content_negotiator(self)</target>
        </trans-unit>
        <trans-unit id="7ebaacd67b1a4ea838eb73eeb2a6eb80c545d15a" translate="yes" xml:space="preserve">
          <source>.get_exception_handler(self)</source>
          <target state="translated">.get_exception_handler(self)</target>
        </trans-unit>
        <trans-unit id="565146c2d37e1e181a85375d3bb88b0c88546fc9" translate="yes" xml:space="preserve">
          <source>.get_parsers(self)</source>
          <target state="translated">.get_parsers(self)</target>
        </trans-unit>
        <trans-unit id="5109039216348cafd3edbeb71496c5fa26f4466d" translate="yes" xml:space="preserve">
          <source>.get_permissions(self)</source>
          <target state="translated">.get_permissions(self)</target>
        </trans-unit>
        <trans-unit id="eddf1adaf8fdd7d979dc7fed39bcdd576aa63b50" translate="yes" xml:space="preserve">
          <source>.get_renderers(self)</source>
          <target state="translated">.get_renderers(self)</target>
        </trans-unit>
        <trans-unit id="62e497b6b7f8fe938b9662ad20a58ac7a41b2ceb" translate="yes" xml:space="preserve">
          <source>.get_throttles(self)</source>
          <target state="translated">.get_throttles(self)</target>
        </trans-unit>
        <trans-unit id="93557e386a0e65568cde092c042b0fbeedd38c9c" translate="yes" xml:space="preserve">
          <source>.handle_exception(self, exc)</source>
          <target state="translated">.handle_exception(self, exc)</target>
        </trans-unit>
        <trans-unit id="807ea0f08b64b04eca968457f7b0100c75887545" translate="yes" xml:space="preserve">
          <source>.initial(self, request, *args, **kwargs)</source>
          <target state="translated">.initial(self, request, *args, **kwargs)</target>
        </trans-unit>
        <trans-unit id="4392c6108af4c2c8eb7d18167e966072b42bd6eb" translate="yes" xml:space="preserve">
          <source>.initialize_request(self, request, *args, **kwargs)</source>
          <target state="translated">.initialize_request(self, request, *args, **kwargs)</target>
        </trans-unit>
        <trans-unit id="8d97ce046bf8d12c75260e985ea4ba7c6367cfd4" translate="yes" xml:space="preserve">
          <source>.login(**kwargs)</source>
          <target state="translated">.login(**kwargs)</target>
        </trans-unit>
        <trans-unit id="d85dd2521fce5e46b7da78b1f81e437215dcdd29" translate="yes" xml:space="preserve">
          <source>.method</source>
          <target state="translated">.method</target>
        </trans-unit>
        <trans-unit id="3d8146a23ef40a8b19eb8e6639d635e4680d27df" translate="yes" xml:space="preserve">
          <source>.parser_classes</source>
          <target state="translated">.parser_classes</target>
        </trans-unit>
        <trans-unit id="2fd0657b6591ef75af9885a91ac2e795c141c7e6" translate="yes" xml:space="preserve">
          <source>.parsers</source>
          <target state="translated">.parsers</target>
        </trans-unit>
        <trans-unit id="9de26d44a1c729d682dc4aacbd33f2b3bb0cf392" translate="yes" xml:space="preserve">
          <source>.perform_content_negotiation(self, request, force=False)</source>
          <target state="translated">.perform_content_negotiation(self, request, force=False)</target>
        </trans-unit>
        <trans-unit id="e24ca76d9baa5c86c2dba09116d801f60e875d37" translate="yes" xml:space="preserve">
          <source>.permission_classes</source>
          <target state="translated">.permission_classes</target>
        </trans-unit>
        <trans-unit id="cdb75ebca4b959a4a4dd30a6c2ff629d23feb4f3" translate="yes" xml:space="preserve">
          <source>.query_params</source>
          <target state="translated">.query_params</target>
        </trans-unit>
        <trans-unit id="1a388604a7dd5ecab37a223d2c0246def5b8740b" translate="yes" xml:space="preserve">
          <source>.render()</source>
          <target state="translated">.render()</target>
        </trans-unit>
        <trans-unit id="344237570f883a6deede21508320d6698ca8c698" translate="yes" xml:space="preserve">
          <source>.renderer_classes</source>
          <target state="translated">.renderer_classes</target>
        </trans-unit>
        <trans-unit id="57c75b389f684c1803ed6da84532bef61ff74aef" translate="yes" xml:space="preserve">
          <source>.renderer_context</source>
          <target state="translated">.renderer_context</target>
        </trans-unit>
        <trans-unit id="48cd05ef1c00d8f2b8cb6ef9a9e77a846f7ef5bc" translate="yes" xml:space="preserve">
          <source>.serializer_field_mapping</source>
          <target state="translated">.serializer_field_mapping</target>
        </trans-unit>
        <trans-unit id="65f342bd7f8d857080829a6a6329d60ff7efe9e1" translate="yes" xml:space="preserve">
          <source>.serializer_related_field</source>
          <target state="translated">.serializer_related_field</target>
        </trans-unit>
        <trans-unit id="beccb38161393ff1634d1b5b583c21e810873b04" translate="yes" xml:space="preserve">
          <source>.status_code</source>
          <target state="translated">.status_code</target>
        </trans-unit>
        <trans-unit id="78e5faf5b7d709206f06e8f3760ae2c054b0f777" translate="yes" xml:space="preserve">
          <source>.stream</source>
          <target state="translated">.stream</target>
        </trans-unit>
        <trans-unit id="32565a72888bef7457ae1cfb36b92675b9148f76" translate="yes" xml:space="preserve">
          <source>.template_name</source>
          <target state="translated">.template_name</target>
        </trans-unit>
        <trans-unit id="9859e7926bc401ee79fc37d905e533ad368e976e" translate="yes" xml:space="preserve">
          <source>.throttle_classes</source>
          <target state="translated">.throttle_classes</target>
        </trans-unit>
        <trans-unit id="a54ad78c954a807a0683caabad8b1faf035d940e" translate="yes" xml:space="preserve">
          <source>.to_internal_value(self, data)</source>
          <target state="translated">.to_internal_value(self, data)</target>
        </trans-unit>
        <trans-unit id="8e78e13b92ba39c5949a0d8aa75c31f9d3280e7b" translate="yes" xml:space="preserve">
          <source>.to_representation(self, obj)</source>
          <target state="translated">.to_representation(self, obj)</target>
        </trans-unit>
        <trans-unit id="9e4b0760820632accdb63d7eb0a1d5a43f4fba44" translate="yes" xml:space="preserve">
          <source>.user</source>
          <target state="translated">.user</target>
        </trans-unit>
        <trans-unit id="e6ef7307a2fd72eff84c626a8699010841f0e61d" translate="yes" xml:space="preserve">
          <source>/users</source>
          <target state="translated">/users</target>
        </trans-unit>
        <trans-unit id="87c40db479b83fd05e0c6d9b98d2dfff4a48831d" translate="yes" xml:space="preserve">
          <source>/users/{username}</source>
          <target state="translated">/users/{username}</target>
        </trans-unit>
        <trans-unit id="2c7237f4fb5e8441c9f520de1c24e38c58995337" translate="yes" xml:space="preserve">
          <source>/users/{username}/group_names</source>
          <target state="translated">/users/{username}/group_names</target>
        </trans-unit>
        <trans-unit id="5c7cc6fc88622a2ab848bef9fe4d2e336ee951c2" translate="yes" xml:space="preserve">
          <source>0: Quickstart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5b7bd4ce5aec6d7611141dc197c2ba895823a6" translate="yes" xml:space="preserve">
          <source>1: Serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42505e0ff7c309432bda44dba798bc984ad1c64b" translate="yes" xml:space="preserve">
          <source>2: Requests and Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e1a1b35fbd2ac420c5c4afdbd4366730078336" translate="yes" xml:space="preserve">
          <source>3: Class-based Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a90138953004e7b448456550359453116b0d6d" translate="yes" xml:space="preserve">
          <source>418 I'm a teapot - Any attempt to brew coffee with a teapot should result in the error code &quot;418 I'm a teapot&quot;. The resulting entity body MAY be short and stout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72cbfdf2bd851d320c164e98d1a710831c26024" translate="yes" xml:space="preserve">
          <source>4: Authentication &amp;amp; Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0832710e1c2b91fa595dc41b1fb6731544139d3" translate="yes" xml:space="preserve">
          <source>5: Relationships &amp;amp; Hyperlinked APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea6bea66432da4d40925cda2e551700bcf0bd43" translate="yes" xml:space="preserve">
          <source>6: ViewSets &amp;amp; Routers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b94faca717232b946ccdf4d5b22c749255df620" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-guide/authentication/index&quot;&gt;Authentication policies&lt;/a&gt; including packages for &lt;a href=&quot;api-guide/authentication/index#django-rest-framework-oauth&quot;&gt;OAuth1a&lt;/a&gt; and &lt;a href=&quot;api-guide/authentication/index#django-oauth-toolkit&quot;&gt;OAuth2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255e2e716b341f5916eddf565ca8d83be2bb87ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-guide/serializers/index&quot;&gt;Serialization&lt;/a&gt; that supports both &lt;a href=&quot;api-guide/serializers#modelserializer&quot;&gt;ORM&lt;/a&gt; and &lt;a href=&quot;api-guide/serializers#serializers&quot;&gt;non-ORM&lt;/a&gt; data sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c1ac4d52fa1805375e066e7f7ba98a99d87882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://bitbucket.org/levit_scs/drf_base64&quot;&gt;DRF-Base64&lt;/a&gt; provides a set of field and model serializers that handles the upload of base64-encoded files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71cee55c58843704ed4d47922a14d16f9a70f08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://djangorestframework-queryfields.readthedocs.io/&quot;&gt;djangorestframework-queryfields&lt;/a&gt; allows API clients to specify which fields will be sent in the response via inclusion/exclusion query parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2bb46b873fe6a88591abc60c2ad9deddb64ff4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/James1345/django-rest-knox&quot;&gt;Django-rest-knox&lt;/a&gt; library provides models and views to handle token based authentication in a more secure and extensible way than the built-in TokenAuthentication scheme - with Single Page Applications and Mobile clients in mind. It provides per-client tokens, and views to generate them when provided some other authentication (usually basic authentication), to delete the token (providing a server enforced logout) and to delete all tokens (logs out all clients that a user is logged into).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f2d3ea1a71cf73c5d1bde79a6b2a9b4a7deb35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MattBroach/DjangoRestMultipleModels&quot;&gt;Django Rest Multiple Models&lt;/a&gt; provides a generic view (and mixin) for sending multiple serialized models and/or querysets via a single API request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec866defd7ed7d43315e054bd5ec0541f9726443" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/PhilipGarnero/django-rest-framework-social-oauth2&quot;&gt;Django-rest-framework-social-oauth2&lt;/a&gt; library provides an easy way to integrate social plugins (facebook, twitter, google, etc.) to your authentication system and an easy oauth2 setup. With this library, you will be able to authenticate users based on external tokens (e.g. facebook access token), convert these tokens to &quot;in-house&quot; oauth2 tokens and use and generate oauth2 tokens to authenticate your users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fc318324b033b0063e6b2005c2c8ef85183778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Tivix/django-rest-auth&quot;&gt;Django-rest-auth&lt;/a&gt; library provides a set of REST API endpoints for registration, authentication (including social media authentication), password reset, retrieve and update user details, etc. By having these API endpoints, your client apps such as AngularJS, iOS, Android, and others can communicate to your Django backend site independently via REST APIs for user management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f66de6eb96d5bf80f665fb4ea13f00b4d89107" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aaronn/django-rest-framework-passwordless&quot;&gt;drfpasswordless&lt;/a&gt; adds (Medium, Square Cash inspired) passwordless support to Django REST Framework's own TokenAuthentication scheme. Users log in and sign up with a token sent to a contact point like an email address or a mobile number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b485a77dbde5d11c1eb61960a376dba9e4766d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/django-guardian/django-guardian&quot;&gt;django-guardian&lt;/a&gt; (1.1.1+) - Object level permissions support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a74d87a00eed4c64280de6b9e8cd851b5e3e7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/drf-forms/drf-schema-adapter&quot;&gt;drf-schema-adapter&lt;/a&gt; is a set of tools that makes it easier to provide schema information to frontend frameworks and libraries. It provides a metadata mixin as well as 2 metadata classes and several adapters suitable to generate &lt;a href=&quot;https://json-schema.org/&quot;&gt;json-schema&lt;/a&gt; as well as schema information readable by various libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149e510f87b0f74179b37a0d5f1710a5f5161fdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/decorators.py&quot;&gt;decorators.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/views.py&quot;&gt;views.py&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/decorators.py&quot;&gt;decorators.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/views.py&quot;&gt;views.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b340a27e380821a4ef3a1f0b2c104386dd8e0879" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/mixins.py&quot;&gt;mixins.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/generics.py&quot;&gt;generics.py&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/mixins.py&quot;&gt;mixins.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/generics.py&quot;&gt;generics.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7e99618648dc1d79251325734ad5b391a6ee2e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/esnme/ultrajson&quot;&gt;UltraJSON&lt;/a&gt; is an optimized C JSON encoder which can give significantly faster JSON rendering. &lt;a href=&quot;https://github.com/hzy&quot;&gt;Jacob Haslehurst&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/gizmag/drf-ujson-renderer&quot;&gt;drf-ujson-renderer&lt;/a&gt; package which implements JSON rendering using the UJSON package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07ca95ecb352612e86a9dc7a486dde8eea41de9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;MessagePack&lt;/a&gt; is a fast, efficient binary serialization format. &lt;a href=&quot;https://github.com/juanriaza&quot;&gt;Juan Riaza&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;djangorestframework-msgpack&lt;/a&gt; package which provides MessagePack renderer and parser support for REST framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317a373df33764aad5b93c6f892391900038b5f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/manjitkumar/drf-url-filters&quot;&gt;drf-url-filter&lt;/a&gt; is a simple Django app to apply filters on drf &lt;code&gt;ModelViewSet&lt;/code&gt;'s &lt;code&gt;Queryset&lt;/code&gt; in a clean, simple and configurable way. It also supports validations on incoming query params and their values. A beautiful python package &lt;code&gt;Voluptuous&lt;/code&gt; is being used for validations on the incoming query parameters. The best part about voluptuous is you can define your own validations as per your query params requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68cb521c6a40bfb2daa251e10d3bb7ffbf6e440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/miki725/django-url-filter&quot;&gt;django-url-filter&lt;/a&gt; provides a safe way to filter data via human-friendly URLs. It works very similar to DRF serializers and fields in a sense that they can be nested except they are called filtersets and filters. That provides easy way to filter related data. Also this library is generic-purpose so it can be used to filter other sources of data and not only Django &lt;code&gt;QuerySet&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aac2aacdebc467d4f504908aff865b79ce189d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mypebble/rest-framework-latex&quot;&gt;Rest Framework Latex&lt;/a&gt; provides a renderer that outputs PDFs using Laulatex. It is maintained by &lt;a href=&quot;https://github.com/mypebble&quot;&gt;Pebble (S/F Software)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3352a0c66f2b4ddbe2ccc2c1f88c162d8257aea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sunscrapers/djoser&quot;&gt;Djoser&lt;/a&gt; library provides a set of views to handle basic actions such as registration, login, logout, password reset and account activation. The package works with a custom user model and it uses token based authentication. This is a ready to use REST implementation of Django authentication system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71103d99be9b5a4b671770d8a6791d192994112f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vbabiy/djangorestframework-camel-case&quot;&gt;djangorestframework-camel-case&lt;/a&gt; provides camel case JSON renderers and parsers for REST framework. This allows serializers to use Python-style underscored field names, but be exposed in the API as Javascript-style camel case field names. It is maintained by &lt;a href=&quot;https://github.com/vbabiy&quot;&gt;Vitaly Babiy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868be62aef0b1074f9e6d19ef584b172bae14234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/wq/django-rest-pandas&quot;&gt;Django REST Pandas&lt;/a&gt; provides a serializer and renderers that support additional data processing and output via the &lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt; DataFrame API. Django REST Pandas includes renderers for Pandas-style CSV files, Excel workbooks (both &lt;code&gt;.xls&lt;/code&gt; and &lt;code&gt;.xlsx&lt;/code&gt;), and a number of &lt;a href=&quot;https://github.com/wq/django-rest-pandas#supported-formats&quot;&gt;other formats&lt;/a&gt;. It is maintained by &lt;a href=&quot;https://github.com/sheppard&quot;&gt;S. Andrew Sheppard&lt;/a&gt; as part of the &lt;a href=&quot;https://github.com/wq&quot;&gt;wq Project&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a91f7062260404645ae3314d0bc409912b8ff53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-jsonp/&quot;&gt;REST framework JSONP&lt;/a&gt; provides JSONP rendering support. It was previously included directly in the REST framework package, and is now instead supported as a third-party package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3181048a840108b8c123bdb179aee31f316a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-xml/&quot;&gt;REST Framework XML&lt;/a&gt; provides a simple informal XML format. It was previously included directly in the REST framework package, and is now instead supported as a third-party package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180f02d4e0eed5fb8d1d45a644e4d5c18387667e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-yaml/&quot;&gt;REST framework YAML&lt;/a&gt; provides &lt;a href=&quot;http://www.yaml.org/&quot;&gt;YAML&lt;/a&gt; parsing and rendering support. It was previously included directly in the REST framework package, and is now instead supported as a third-party package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ec1f2d3f433e88eb24223e27d4e58480c24fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt; is a fast, efficient binary serialization format. &lt;a href=&quot;https://github.com/juanriaza&quot;&gt;Juan Riaza&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;djangorestframework-msgpack&lt;/a&gt; package which provides MessagePack renderer and parser support for REST framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a8d7c987059528b10c39ea501496d448332efa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/Markdown/&quot;&gt;Markdown&lt;/a&gt; (3.0.0+) - Markdown support for the browsable API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eed537987fd7651fbd2a040b4d669698d4255ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/Pygments/&quot;&gt;Pygments&lt;/a&gt; (2.4.0+) - Add syntax highlighting to Markdown processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd3b399443d065e00c4761f061824c8415e7974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/coreapi/&quot;&gt;coreapi&lt;/a&gt; (1.32.0+) - Schema generation support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ad19e58c832aa2dc1cc5a1aa0ccbb9e515956d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/django-filter/&quot;&gt;django-filter&lt;/a&gt; (1.0.1+) - Filtering support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f2fb343a4527b18b508a6e40391c9cd1e93e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.django-rest-framework.org/&quot;&gt;Extensive documentation&lt;/a&gt;, and &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/django-rest-framework&quot;&gt;great community support&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b082e3ea168c488f396620e53f00187cf4be83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hex'&lt;/code&gt; - The compact hex representation of the UUID, not including hyphens: &lt;code&gt;&quot;5ce0e9a55ffa654bcee01238041fb31a&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'hex'&lt;/code&gt; - The compact hex representation of the UUID, not including hyphens: &lt;code&gt;&quot;5ce0e9a55ffa654bcee01238041fb31a&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="629285abe94c1386672db9e3c510194f5af019df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hex_verbose'&lt;/code&gt; - The canonical hex representation, including hyphens: &lt;code&gt;&quot;5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'hex_verbose'&lt;/code&gt; - The canonical hex representation, including hyphens: &lt;code&gt;&quot;5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bebdd279c0d51a6e21207a30ac7cb87fe4b50d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'int'&lt;/code&gt; - A 128 bit integer representation of the UUID: &lt;code&gt;&quot;123456789012312313134124512351145145114&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'int'&lt;/code&gt; - A 128 bit integer representation of the UUID: &lt;code&gt;&quot;123456789012312313134124512351145145114&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23f86b0c5441da7ba1f3eec24143d3e4cafe86ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'urn'&lt;/code&gt; - RFC 4122 URN representation of the UUID: &lt;code&gt;&quot;urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt; Changing the &lt;code&gt;format&lt;/code&gt; parameters only affects representation values. All formats are accepted by &lt;code&gt;to_internal_value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'urn'&lt;/code&gt; - RFC 4122 URN representation of the UUID: &lt;code&gt;&quot;urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt; Changing the &lt;code&gt;format&lt;/code&gt; parameters only affects representation values. All formats are accepted by &lt;code&gt;to_internal_value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa9f1c854d330f7a69b54f7edd4da6e7d6a7f004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; - Override either or both of these to support saving instances.</source>
          <target state="translated">&lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; - Override either or both of these to support saving instances.</target>
        </trans-unit>
        <trans-unit id="0e4ed8ad79e4007f1efa2eb781afe6517abee088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.data&lt;/code&gt; - Returns the outgoing primitive representation.</source>
          <target state="translated">&lt;code&gt;.data&lt;/code&gt; - Returns the outgoing primitive representation.</target>
        </trans-unit>
        <trans-unit id="33fac13c0d52030d5ac6cfe10ef9ea1935697f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.detail&lt;/code&gt; - Return the textual description of the error.</source>
          <target state="translated">&lt;code&gt;.detail&lt;/code&gt; - Return the textual description of the error.</target>
        </trans-unit>
        <trans-unit id="02c8e5e760e07ca420619217d3b70f1438c46360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.errors&lt;/code&gt; - Returns any errors during validation.</source>
          <target state="translated">&lt;code&gt;.errors&lt;/code&gt; - Returns any errors during validation.</target>
        </trans-unit>
        <trans-unit id="d1c0b62c90cea710d8f358bc4f99d7e0d1971846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.get_codes()&lt;/code&gt; - Return the code identifier of the error.</source>
          <target state="translated">&lt;code&gt;.get_codes()&lt;/code&gt; - Return the code identifier of the error.</target>
        </trans-unit>
        <trans-unit id="f0953cfe5696cf0e0b5a2e96cb8cc75f47ec628d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.get_full_details()&lt;/code&gt; - Return both the textual description and the code identifier.</source>
          <target state="translated">&lt;code&gt;.get_full_details()&lt;/code&gt; - Return both the textual description and the code identifier.</target>
        </trans-unit>
        <trans-unit id="85c8d4be7eeb3cc6565e01830980b6e6e43db646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.is_valid()&lt;/code&gt; - Deserializes and validates incoming data.</source>
          <target state="translated">&lt;code&gt;.is_valid()&lt;/code&gt; - Deserializes and validates incoming data.</target>
        </trans-unit>
        <trans-unit id="21d78c71413151b51a1e867bc8a982e7267734db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.save()&lt;/code&gt; - Persists the validated data into an object instance.</source>
          <target state="translated">&lt;code&gt;.save()&lt;/code&gt; - Persists the validated data into an object instance.</target>
        </trans-unit>
        <trans-unit id="72ca4f05c6bdd33ded979e26d64778242791dba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.to_internal_value()&lt;/code&gt; - Override this to support deserialization, for write operations.</source>
          <target state="translated">&lt;code&gt;.to_internal_value()&lt;/code&gt; - Override this to support deserialization, for write operations.</target>
        </trans-unit>
        <trans-unit id="4d0b758f000823fcf589aef610b562a046ed969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.to_representation()&lt;/code&gt; - Override this to support serialization, for read operations.</source>
          <target state="translated">&lt;code&gt;.to_representation()&lt;/code&gt; - Override this to support serialization, for read operations.</target>
        </trans-unit>
        <trans-unit id="1031b13b7c893ea4e7be3d7397d0ea1da8ed109e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.validated_data&lt;/code&gt; - Returns the validated incoming data.</source>
          <target state="translated">&lt;code&gt;.validated_data&lt;/code&gt; - Returns the validated incoming data.</target>
        </trans-unit>
        <trans-unit id="69066d5107a5c7caaa5b523b843e6cb9fa568efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOWED_VERSIONS&lt;/code&gt;. If set, this value will restrict the set of versions that may be returned by the versioning scheme, and will raise an error if the provided version is not in this set. Note that the value used for the &lt;code&gt;DEFAULT_VERSION&lt;/code&gt; setting is always considered to be part of the &lt;code&gt;ALLOWED_VERSIONS&lt;/code&gt; set (unless it is &lt;code&gt;None&lt;/code&gt;). Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07683160e13fe0836c1e6a831cfe1da3b9e756e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APIView&lt;/code&gt; classes are different from regular &lt;code&gt;View&lt;/code&gt; classes in the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732c5ee5360db49edb76348506d4a322d648bee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnonRateThrottle&lt;/code&gt; is suitable if you want to restrict the rate of requests from unknown sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952f4d7602206ed65b2a7f109695015e66ab735e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseSerializer&lt;/code&gt; class that can be used to easily support alternative serialization and deserialization styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9198770c9649ec9f9a37c3370c9a6ed2e43ba74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULT_VERSION&lt;/code&gt;. The value that should be used for &lt;code&gt;request.version&lt;/code&gt; when no versioning information is present. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcdeabac272e5c0e46a58f966f1ec2a2973a1c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE&lt;/code&gt; requests require the user to have the &lt;code&gt;delete&lt;/code&gt; permission on the model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659e1e4476aaa44856b6854eff002861e885afca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE&lt;/code&gt; requests require the user to have the &lt;code&gt;delete&lt;/code&gt; permission on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465ede37d09003a5188756add202c731969e22b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadParser&lt;/code&gt; respects Django's standard &lt;code&gt;FILE_UPLOAD_HANDLERS&lt;/code&gt; setting, and the &lt;code&gt;request.upload_handlers&lt;/code&gt; attribute. See the &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/http/file-uploads/#upload-handlers&quot;&gt;Django documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e494c9e9c1a7c14c07b2b9496cc8b66030fd6798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HyperlinkedRelatedField&lt;/code&gt; may be used to represent the target of the relationship using a hyperlink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf827c38e4995290f2a2f23201f67eccab60dfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; requests require the user to have the &lt;code&gt;add&lt;/code&gt; permission on the model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4980fd6493d9cca7fa271a8d8dfd5857ce6001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; requests require the user to have the &lt;code&gt;add&lt;/code&gt; permission on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feab58807683cc94dbecafc4693d34aae187cd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;PATCH&lt;/code&gt; requests require the user to have the &lt;code&gt;change&lt;/code&gt; permission on the model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33527826f55e615d31db1f2ae6b15257f4e74aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;PATCH&lt;/code&gt; requests require the user to have the &lt;code&gt;change&lt;/code&gt; permission on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0117506ff626ac57770a4d5b4ef2e516282f1edd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt; may be used to represent the target of the relationship using its primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cb7b43bbcadb16f703c34cef47bfcbd7db9c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SlugRelatedField&lt;/code&gt; may be used to represent the target of the relationship using a field on the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0fe93102388e969390a2ad817010af1668a530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringRelatedField&lt;/code&gt; may be used to represent the target of the relationship using its &lt;code&gt;__str__&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d64e5f08e863b4b6c197a81d3725d6f2f2fe0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserRateThrottle&lt;/code&gt; is suitable if you want simple global rate restrictions per-user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989ef7e65f95c2e7f3449acdf1e9fb4324246f83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION_PARAM&lt;/code&gt;. The string that should be used for any versioning parameters, such as in the media type or URL query parameters. Defaults to &lt;code&gt;'version'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c376c03897453cd91b1afd5a5fa3791d01f026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewSet&lt;/code&gt; classes are almost the same thing as &lt;code&gt;View&lt;/code&gt; classes, except that they provide operations such as &lt;code&gt;read&lt;/code&gt;, or &lt;code&gt;update&lt;/code&gt;, and not method handlers such as &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;put&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15c21c058573925930f5906cd62daeee9246369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - the name of the current action (e.g., &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e207977185d333a2d77554395e17ab3abe03dd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_blank&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then the empty string should be considered a valid value. If set to &lt;code&gt;False&lt;/code&gt; then the empty string is considered invalid and will raise a validation error. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0b0994b2e8a5044906d661da9c5ecf92c0c2a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_empty&lt;/code&gt; - Designates if empty dictionaries are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f970b9ab35396b63efb9e02a2991e0df3d15cc29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_empty&lt;/code&gt; - Designates if empty lists are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d7406bb259816f0a01feab7a795a4f5465a06a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_empty_file&lt;/code&gt; - Designates if empty files are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e9b58aca6015762c474317563c2e8e38d2977e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_files&lt;/code&gt; - Specifies whether files in the specified location should be included. Default is &lt;code&gt;True&lt;/code&gt;. Either this or &lt;code&gt;allow_folders&lt;/code&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078daa6e9d8edfe46d8bd26e919d61a52650ed9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_folders&lt;/code&gt; - Specifies whether folders in the specified location should be included. Default is &lt;code&gt;False&lt;/code&gt;. Either this or &lt;code&gt;allow_files&lt;/code&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1a17d07abcd1db04d3d58c0e701c4dd6edd8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_null&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt;, the field will accept values of &lt;code&gt;None&lt;/code&gt; or the empty string for nullable relationships. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c09136da0694bbba1edaf41a2e380b0c8b0ce9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/json&lt;/code&gt;, &lt;code&gt;application/yaml&lt;/code&gt; and &lt;code&gt;text/html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58ad34ac5d6eafba0c5ceb636e8f632f56298dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;authentication_classes&lt;/code&gt;: May be used to specify the list of authentication classes that will apply to the schema endpoint. Defaults to &lt;code&gt;settings.DEFAULT_AUTHENTICATION_CLASSES&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c374e2348c5ab98f134070f777ba85f1c474dc1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basename&lt;/code&gt; - The base to use for the URL names that are created. If unset the basename will be automatically generated based on the &lt;code&gt;queryset&lt;/code&gt; attribute of the viewset, if it has one. Note that if the viewset does not include a &lt;code&gt;queryset&lt;/code&gt; attribute then you must set &lt;code&gt;basename&lt;/code&gt; when registering the viewset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865e1ebc399ba0fd9679b6f438cae5eecd12bed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basename&lt;/code&gt; - the base to use for the URL names that are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef22515c4bd44b7593f91fe7329c5fdfa91c062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then the field will output and validate a JSON encoded string, rather than a primitive data structure. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c4b3f397eccc9e3d10f98c7f28d9230170d257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child&lt;/code&gt; - A field instance that is used for validating the values in the dictionary. The default child field accepts both empty strings and null values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1107519d6377b20735b8c155edbea2f916ade8a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child&lt;/code&gt; - A field instance that should be used for validating the objects in the list. If this argument is not provided then objects in the list will not be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c24f7a5b57bfb59065e6a43a56618cc5d16d3de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child&lt;/code&gt; - A field instance that should be used for validating the values in the dictionary. If this argument is not provided then values in the mapping will not be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1315321f0fdd53d937c9ec63e9d9222ea8d2d2e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;choices&lt;/code&gt; - A list of valid values, or a list of &lt;code&gt;(key, display_name)&lt;/code&gt; tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e747fec11d261aaa0da62fc92ee531f70f9eeb3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;coerce_to_string&lt;/code&gt; Set to &lt;code&gt;True&lt;/code&gt; if string values should be returned for the representation, or &lt;code&gt;False&lt;/code&gt; if &lt;code&gt;Decimal&lt;/code&gt; objects should be returned. Defaults to the same value as the &lt;code&gt;COERCE_DECIMAL_TO_STRING&lt;/code&gt; settings key, which will be &lt;code&gt;True&lt;/code&gt; unless overridden. If &lt;code&gt;Decimal&lt;/code&gt; objects are returned by the serializer, then the final output format will be determined by the renderer. Note that setting &lt;code&gt;localize&lt;/code&gt; will force the value to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa943a3b0156295f38375afff35ec2fac02cb79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content_type&lt;/code&gt;: The content type of the response. Typically, this will be set automatically by the renderer as determined by content negotiation, but there may be some cases where you need to specify the content type explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd1790d3920da6d1294bc80f7cbd6d8d05bdf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cursor_query_param&lt;/code&gt; = A string value indicating the name of the &quot;cursor&quot; query parameter. Defaults to &lt;code&gt;'cursor'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b40060b1a0c8c45a5871542bd646e753e886a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;: The serialized data for the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861f1b9bf79ba2720e5731a960206c4241c6e427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_field&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - A field name which will be used to determine date range for the uniqueness constrain. This must exist as a field on the serializer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d2c5f97a91bd4ee0abfe9ce77a63ec8a252d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal_places&lt;/code&gt; The number of decimal places to store with the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb5c0430b04f55a60a0b2925b39f0597aaa3101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_limit&lt;/code&gt; - A numeric value indicating the limit to use if one is not provided by the client in a query parameter. Defaults to the same value as the &lt;code&gt;PAGE_SIZE&lt;/code&gt; settings key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0261e4dc8cbe6ddaf0915c37b14a7aaa00d4185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_timezone&lt;/code&gt; - A &lt;code&gt;pytz.timezone&lt;/code&gt; representing the timezone. If not specified and the &lt;code&gt;USE_TZ&lt;/code&gt; setting is enabled, this defaults to the &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/i18n/timezones/#default-time-zone-and-current-time-zone&quot;&gt;current timezone&lt;/a&gt;. If &lt;code&gt;USE_TZ&lt;/code&gt; is disabled, then datetime objects will be naive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de547ec49c6d8c9649853452f23a2566c562e674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; - the display description for the individual view of a viewset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d06a8cade6875729a4c4d4727c0ab146c260bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;: A description explicitly provided to the view in the viewset. Typically, this is set by extra viewset &lt;code&gt;action&lt;/code&gt;s, and should be used as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97af22bf9ed3eb2cbc253fa245a5c15f3c8323d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;: Longer descriptive text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818414fb0f1492b82a473ccd9d63ce9482047c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detail&lt;/code&gt; - boolean indicating if the current action is configured for a list or detail view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0894dec9ddb65aa3cdc6541bc39950b9897fa5e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detail&lt;/code&gt;: Boolean that differentiates an individual view in a viewset as either being a 'list' or 'detail' view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230c5616e59009cc80b3a475c491e7a2d780eb56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;django_paginator_class&lt;/code&gt; - The Django Paginator class to use. Default is &lt;code&gt;django.core.paginator.Paginator&lt;/code&gt;, which should be fine for most use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c05a28280615fe4951dde0fc949f85cbbde101f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoder&lt;/code&gt; - Use this JSON encoder to serialize input object. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57585d40256740c566bc80ffcd59e2805166fe18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exc&lt;/code&gt;: The exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014dc42ba49c84a32283a9718db6eb9b9eeee177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - A field name against which uniqueness in the given date range will be validated. This must exist as a field on the serializer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9ec4508c083b65c8efc99cbea1191b3ae9a6ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fields&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - A list or tuple of field names which should make a unique set. These must exist as fields on the serializer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324ab14f1b451460cd53976d2342c1e95a6a9544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter_backends&lt;/code&gt; - A list of filter backend classes that should be used for filtering the queryset. Defaults to the same value as the &lt;code&gt;DEFAULT_FILTER_BACKENDS&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22350df4c859b9654762586c22b17ac6ff667955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter_queryset(self, queryset)&lt;/code&gt; - Given a queryset, filter it with whichever filter backends are in use, returning a new queryset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2176248be8df2cb308fdcdf66f1982fe0dec51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - A string representing the output format. If not specified, this defaults to the same value as the &lt;code&gt;DATETIME_FORMAT&lt;/code&gt; settings key, which will be &lt;code&gt;'iso-8601'&lt;/code&gt; unless set. Setting to a format string indicates that &lt;code&gt;to_representation&lt;/code&gt; return values should be coerced to string output. Format strings are described below. Setting this value to &lt;code&gt;None&lt;/code&gt; indicates that Python &lt;code&gt;datetime&lt;/code&gt; objects should be returned by &lt;code&gt;to_representation&lt;/code&gt;. In this case the datetime encoding will be determined by the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fb8a565839588d69bad45f578baf2fd344addb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - A string representing the output format. If not specified, this defaults to the same value as the &lt;code&gt;DATE_FORMAT&lt;/code&gt; settings key, which will be &lt;code&gt;'iso-8601'&lt;/code&gt; unless set. Setting to a format string indicates that &lt;code&gt;to_representation&lt;/code&gt; return values should be coerced to string output. Format strings are described below. Setting this value to &lt;code&gt;None&lt;/code&gt; indicates that Python &lt;code&gt;date&lt;/code&gt; objects should be returned by &lt;code&gt;to_representation&lt;/code&gt;. In this case the date encoding will be determined by the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5f7c8402dcdf963fe7b26b318dd6bb708068d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - A string representing the output format. If not specified, this defaults to the same value as the &lt;code&gt;TIME_FORMAT&lt;/code&gt; settings key, which will be &lt;code&gt;'iso-8601'&lt;/code&gt; unless set. Setting to a format string indicates that &lt;code&gt;to_representation&lt;/code&gt; return values should be coerced to string output. Format strings are described below. Setting this value to &lt;code&gt;None&lt;/code&gt; indicates that Python &lt;code&gt;time&lt;/code&gt; objects should be returned by &lt;code&gt;to_representation&lt;/code&gt;. In this case the time encoding will be determined by the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e5ad1113f938a7587700465209ca977024b7ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - If using format suffixes, hyperlinked fields will use the same format suffix for the target unless overridden by using the &lt;code&gt;format&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c803216b1f9427d27fc2d912d0d1d9c371ce3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt;: Determines the representation format of the uuid value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009b924db98f7be765d6800914df35ecdb752de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generator_class&lt;/code&gt;: May be used to specify a &lt;code&gt;SchemaGenerator&lt;/code&gt; subclass to be passed to the &lt;code&gt;SchemaView&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fffb956b1a337bd6a6ed8a7a74dbbf241d5c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_paginated_response(self, data)&lt;/code&gt; - Returns a paginated style &lt;code&gt;Response&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1449fe0c65ab6608de22123ae5b8ceab14cc630d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_serializer(self, instance=None, data=None, many=False, partial=False)&lt;/code&gt; - Returns a serializer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32ab046ddff60d13781520d451b3d79a8941e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_serializer_context(self)&lt;/code&gt; - Returns a dictionary containing any extra context that should be supplied to the serializer. Defaults to including &lt;code&gt;'request'&lt;/code&gt;, &lt;code&gt;'view'&lt;/code&gt; and &lt;code&gt;'format'&lt;/code&gt; keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fa747c001148f65be5bef43a1af03273c57a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt;: A dictionary of HTTP headers to use in the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fde6289bceed60eedddbba630b41c12594864f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt;: A boolean indicating if HTML output is required. &lt;code&gt;True&lt;/code&gt; when used in the browsable API, and &lt;code&gt;False&lt;/code&gt; when used in generating &lt;code&gt;OPTIONS&lt;/code&gt; responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f573d52f16e4cd51e148f6dcc236f05704e7f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_cutoff&lt;/code&gt; - If set this will be the maximum number of choices that will be displayed by a HTML select drop down. Can be used to ensure that automatically generated ChoiceFields with very large possible selections do not prevent a template from rendering. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b8ab74cfb5c3c447c37637f3ed192d66695cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_cutoff&lt;/code&gt; - If set this will be the maximum number of choices that will be displayed by a HTML select drop down. Set to &lt;code&gt;None&lt;/code&gt; to disable any limiting. Defaults to &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f664b8ce3360997f445c1088c886917a623354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_cutoff_text&lt;/code&gt; - If set this will display a textual indicator if the maximum number of items have been cutoff in an HTML select drop down. Defaults to &lt;code&gt;&quot;More than {count} items&amp;hellip;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a08ec4336dd27f86f308c8f2fc05331385d3616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_formats&lt;/code&gt; - A list of strings representing the input formats which may be used to parse the date. If not specified, the &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; setting will be used, which defaults to &lt;code&gt;['iso-8601']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce34704451a3832811b7abfdf3def8b18106415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_formats&lt;/code&gt; - A list of strings representing the input formats which may be used to parse the date. If not specified, the &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; setting will be used, which defaults to &lt;code&gt;['iso-8601']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f20604ad53d39ad02f0c07ba8f7d4120a9a727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_formats&lt;/code&gt; - A list of strings representing the input formats which may be used to parse the date. If not specified, the &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; setting will be used, which defaults to &lt;code&gt;['iso-8601']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95977c448b733f3a38b6e1dd0d75ebabb961261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last_page_strings&lt;/code&gt; - A list or tuple of string values indicating values that may be used with the &lt;code&gt;page_query_param&lt;/code&gt; to request the final page in the set. Defaults to &lt;code&gt;('last',)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6308442c23f1498c706702b708cfcb5b9e4daa41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit_query_param&lt;/code&gt; - A string value indicating the name of the &quot;limit&quot; query parameter. Defaults to &lt;code&gt;'limit'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4d339039052799ff56ff09a25adee880e18464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;localize&lt;/code&gt; Set to &lt;code&gt;True&lt;/code&gt; to enable localization of input and output based on the current locale. This will also force &lt;code&gt;coerce_to_string&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Note that data formatting is enabled if you have set &lt;code&gt;USE_L10N=True&lt;/code&gt; in your settings file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9ed8159d5fd2143a053b208d32f348c95a8863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup&lt;/code&gt; - The lookup used to find an existing instance with the value being validated. Defaults to &lt;code&gt;'exact'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115f3e0b862d27bb2a7201b31f8dac4003b2dbdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_field&lt;/code&gt; - The field on the target that should be used for the lookup. Should correspond to a URL keyword argument on the referenced view. Default is &lt;code&gt;'pk'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98205e8f590d7e75d2de40ce3f2dc09e18da50f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_field&lt;/code&gt; - The model field that should be used to for performing object lookup of individual model instances. Defaults to &lt;code&gt;'pk'&lt;/code&gt;. Note that when using hyperlinked APIs you'll need to ensure that &lt;em&gt;both&lt;/em&gt; the API views &lt;em&gt;and&lt;/em&gt; the serializer classes set the lookup fields if you need to use a custom value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cceeea004100aac80a50bfda95eeebcbfdaab9f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_url_kwarg&lt;/code&gt; - The URL keyword argument that should be used for object lookup. The URL conf should include a keyword argument corresponding to this value. If unset this defaults to using the same value as &lt;code&gt;lookup_field&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ee5e88b0b7ab7b3545f54b8684d7921fa73bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_url_kwarg&lt;/code&gt; - The name of the keyword argument defined in the URL conf that corresponds to the lookup field. Defaults to using the same value as &lt;code&gt;lookup_field&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb33d63fc5fa0c34928416c1cbd920ec6f06c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;many&lt;/code&gt; - If applied to a to-many relationship, you should set this argument to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0df6ca7159932970368c33dd86f9d67bfe17ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; - A regular expression, as a string, that FilePathField will use to filter filenames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd104dbef8cb5f82c21ac9036cd51288f7da5e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_digits&lt;/code&gt; The maximum number of digits allowed in the number. It must be either &lt;code&gt;None&lt;/code&gt; or an integer greater than or equal to &lt;code&gt;decimal_places&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc4ae8be71ab7eb45e88cdfe24c31c91c60dbcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_length&lt;/code&gt; - Designates the maximum length for the file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59424a40b4f098e7ded199b1171c8a24a6857e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_length&lt;/code&gt; - Validates that the input contains no more than this number of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53de53c060fd03d07b3fc76727cc3494d8088ef0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_length&lt;/code&gt; - Validates that the list contains no more than this number of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c16bfc760bab5913343437c089c9119fe59e760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_limit&lt;/code&gt; - If set this is a numeric value indicating the maximum allowable limit that may be requested by the client. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3e231bf461fbb613c4318acc9380b37a8e9197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_page_size&lt;/code&gt; - If set, this is a numeric value indicating the maximum allowable requested page size. This attribute is only valid if &lt;code&gt;page_size_query_param&lt;/code&gt; is also set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd4fd6abc70c8e81e9a332e1b3c5ff35c2ba0c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_value&lt;/code&gt; Validate that the duration provided is no greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651f67256b969f63daa5f20d210a0b9b742b9e7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_value&lt;/code&gt; Validate that the number provided is no greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08684c40131b2cf82c300cb0d36559c23e3e7b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The error message that should be used when validation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d23b6774d781783023a978ef45ee88499cb8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method_name&lt;/code&gt; - The name of the method on the serializer to be called. If not included this defaults to &lt;code&gt;get_&amp;lt;field_name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7928f016bc7c90299dbe79c69e856792760373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_length&lt;/code&gt; - Validates that the input contains no fewer than this number of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f67b1cacdeeecf9741815419a346cb72e49b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_length&lt;/code&gt; - Validates that the list contains no fewer than this number of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e48ffc748b33b1b05c9023a73b2fe52dc7d9c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_value&lt;/code&gt; Validate that the duration provided is no less than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d7cd7013bd43dc8be586f4fabf814f55b10eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_value&lt;/code&gt; Validate that the number provided is no less than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c56d0f83cd2288eccd823b35995caf06471ca87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the display name for the viewset. This argument is mutually exclusive to &lt;code&gt;suffix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ab589b7cfc8d6a665cda15d6de1e1ca3a973f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: A name explicitly provided to a view in the viewset. Typically, this value should be used as-is when provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951c6d1c5d7234bcffbea8bcc27888c819062343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset_query_param&lt;/code&gt; - A string value indicating the name of the &quot;offset&quot; query parameter. Defaults to &lt;code&gt;'offset'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be8835e8aab7814c2a0c7233ccf884836c5a17b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ordering&lt;/code&gt; = This should be a string, or list of strings, indicating the field against which the cursor based pagination will be applied. For example: &lt;code&gt;ordering = 'slug'&lt;/code&gt;. Defaults to &lt;code&gt;-created&lt;/code&gt;. This value may also be overridden by using &lt;code&gt;OrderingFilter&lt;/code&gt; on the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a41df2847fa2aac2279e53b0db5ca78f02b0e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_query_param&lt;/code&gt; - A string value indicating the name of the query parameter to use for the pagination control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1fad9126d13979401fe2e498dc94f07c5909fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_size&lt;/code&gt; - A numeric value indicating the page size. If set, this overrides the &lt;code&gt;PAGE_SIZE&lt;/code&gt; setting. Defaults to the same value as the &lt;code&gt;PAGE_SIZE&lt;/code&gt; settings key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102df1e8ff347361046048ae9e5d176b70fd650d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_size&lt;/code&gt; = A numeric value indicating the page size. If set, this overrides the &lt;code&gt;PAGE_SIZE&lt;/code&gt; setting. Defaults to the same value as the &lt;code&gt;PAGE_SIZE&lt;/code&gt; settings key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fafed2a919ab145ac261c3beb6c3d5f2262208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_size_query_param&lt;/code&gt; - If set, this is a string value indicating the name of a query parameter that allows the client to set the page size on a per-request basis. Defaults to &lt;code&gt;None&lt;/code&gt;, indicating that the client may not control the requested page size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a870dac33dd3abe39fc570f342bc31e36591e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paginate_queryset(self, queryset)&lt;/code&gt; - Paginate a queryset if required, either returning a page object, or &lt;code&gt;None&lt;/code&gt; if pagination is not configured for this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b521e21baa15f3a6bdf4f8a679df2a7246b5bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pagination_class&lt;/code&gt; - The pagination class that should be used when paginating list results. Defaults to the same value as the &lt;code&gt;DEFAULT_PAGINATION_CLASS&lt;/code&gt; setting, which is &lt;code&gt;'rest_framework.pagination.PageNumberPagination'&lt;/code&gt;. Setting &lt;code&gt;pagination_class=None&lt;/code&gt; will disable pagination on this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d61b986ce18deb207fd7b5b131005d40355128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - The absolute filesystem path to a directory from which this FilePathField should get its choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205b29c5a4fcccd525a17ab261de4b322bbc865e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patterns&lt;/code&gt;: A list of URLs to inspect when generating the schema. Defaults to the project's URL conf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4033dfce5b1e239d5acf684b9bbe898729a791b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patterns&lt;/code&gt;: List of url patterns to limit the schema introspection to. If you only want the &lt;code&gt;myproject.api&lt;/code&gt; urls to be exposed in the schema:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dded643f0eec891139752b9820d1e96e2ac3f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_create(self, serializer)&lt;/code&gt; - Called by &lt;code&gt;CreateModelMixin&lt;/code&gt; when saving a new object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b819db81642170e468c3173250a21d1bf3e466b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_destroy(self, instance)&lt;/code&gt; - Called by &lt;code&gt;DestroyModelMixin&lt;/code&gt; when deleting an object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac896a2eebfa06640d50e1c81f6bea44ac7f5b44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_update(self, serializer)&lt;/code&gt; - Called by &lt;code&gt;UpdateModelMixin&lt;/code&gt; when saving an existing object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4050004ad76c60f29d8d674829d56582da5709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permission_classes&lt;/code&gt;: May be used to specify the list of permission classes that will apply to the schema endpoint. Defaults to &lt;code&gt;settings.DEFAULT_PERMISSION_CLASSES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d112f7e18b6f29e042c9a85ae95c9bdcb50c03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pk_field&lt;/code&gt; - Set to a field to control serialization/deserialization of the primary key's value. For example, &lt;code&gt;pk_field=UUIDField(format='hex')&lt;/code&gt; would serialize a UUID primary key into its compact hex representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344aec8e3b0a65c0615e99e6848754ee2082c702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt; - The URL prefix to use for this set of routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c8bce3406048749996139443873f1f98284269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol&lt;/code&gt; Limits valid inputs to the specified protocol. Accepted values are 'both' (default), 'IPv4' or 'IPv6'. Matching is case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cf7e02884433b639707510bd6f5d87ba803347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryset&lt;/code&gt; - The queryset that should be used for returning objects from this view. Typically, you must either set this attribute, or override the &lt;code&gt;get_queryset()&lt;/code&gt; method. If you are overriding a view method, it is important that you call &lt;code&gt;get_queryset()&lt;/code&gt; instead of accessing this property directly, as &lt;code&gt;queryset&lt;/code&gt; will get evaluated once, and those results will be cached for all subsequent requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b95d4ed3f23eb30651f65cbfa018deeace9585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryset&lt;/code&gt; - The queryset used for model instance lookups when validating the field input. Relationships must either set a queryset explicitly, or set &lt;code&gt;read_only=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61527124553c82637b071074c4bad237d2dbb9fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryset&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - This is the queryset against which uniqueness should be enforced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8db030ac8e716295455abb2d2f3b21f190aa8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recursive&lt;/code&gt; - Specifies whether all subdirectories of path should be included. Default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b9dbe32c54dce69baa5c2a1e1f942a36610461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;renderer_classes&lt;/code&gt;: May be used to pass the set of renderer classes that can be used to render the API root endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e313a879948dfbbf0c7772e4749525b90724bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.auth&lt;/code&gt; returns any additional authentication context. The exact behavior of &lt;code&gt;request.auth&lt;/code&gt; depends on the authentication policy being used, but it may typically be an instance of the token that the request was authenticated against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021d18407b1d5b2cef8a9d1e2827c2726a41ea41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.auth&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bbcba28ffeb6d29e8d5a887cadaaed626be97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.auth&lt;/code&gt; will be a &lt;code&gt;rest_framework.authtoken.models.Token&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd9e388c8890887444d9a4351f5164dcc876e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.content_type&lt;/code&gt;, returns a string object representing the media type of the HTTP request's body, or an empty string if no media type was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b9bf7a3b1beb0f0c6d1980d56060d4aa36e0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.data&lt;/code&gt; returns the parsed content of the request body. This is similar to the standard &lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.FILES&lt;/code&gt; attributes except that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0388793a5d3e219b53e98b647ce6bddda1ee072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.method&lt;/code&gt; returns the &lt;strong&gt;uppercased&lt;/strong&gt; string representation of the request's HTTP method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2978b71adca57233c0f9f03297dec9829da0691c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.query_params&lt;/code&gt; is a more correctly named synonym for &lt;code&gt;request.GET&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cadc93e1dc02100dbc3bcacae08f80a8e52f1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.stream&lt;/code&gt; returns a stream representing the content of the request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b9c407dedd19c2bb4bb37cdac42f96f8b77816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.user&lt;/code&gt; typically returns an instance of &lt;code&gt;django.contrib.auth.models.User&lt;/code&gt;, although the behavior depends on the authentication policy being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee5a3a7352cf8459bac22389b2480ab3e384b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.user&lt;/code&gt; will be a Django &lt;code&gt;User&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ca173d2dc5e54c974e64e79c21efe590b18bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rounding&lt;/code&gt; Sets the rounding mode used when quantising to the configured precision. Valid values are &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#rounding-modes&quot;&gt;&lt;code&gt;decimal&lt;/code&gt; module rounding modes&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c019988f1f8f73492cbb534cb9fcbb3139d2acb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;: The view instance. Typically the description function would inspect the docstring of the class when generating a description, by accessing &lt;code&gt;self.__class__.__doc__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cfedbcec5e7780c16abe9ccba468a007c98524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;: The view instance. Typically the name function would inspect the name of the class when generating a descriptive name, by accessing &lt;code&gt;self.__class__.__name__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9330adee080848312d2f1ba89e25bb66416e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializer_class&lt;/code&gt; - The serializer class that should be used for validating and deserializing input, and for serializing output. Typically, you must either set this attribute, or override the &lt;code&gt;get_serializer_class()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27769483427b7931e938554f00f6508ad68d8032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slug_field&lt;/code&gt; - The field on the target that should be used to represent it. This should be a field that uniquely identifies any given instance. For example, &lt;code&gt;username&lt;/code&gt;. &lt;strong&gt;required&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91d9c3d8f973703cc6cc67e81cd63aa8f67fe32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt;: A status code for the response. Defaults to 200. See also &lt;a href=&quot;../status-codes/index&quot;&gt;status codes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6d5de81e197be6162f35d0a5522ea3ab97f795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suffix&lt;/code&gt; - the display suffix for the viewset type - mirrors the &lt;code&gt;detail&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb3dd17fde1a0048dcc7aa013094f74f84e7194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suffix&lt;/code&gt;: Text used when differentiating individual views in a viewset. This argument is mutually exclusive to &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86de5298600817119dc6253b3326c8d6c8db9c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; - The name of a template to use when rendering pagination controls in the browsable API. May be overridden to modify the rendering style, or set to &lt;code&gt;None&lt;/code&gt; to disable HTML pagination controls completely. Defaults to &lt;code&gt;&quot;rest_framework/pagination/numbers.html&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246c86c5d0304f5637350b66cb2fed1425e45e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; = The name of a template to use when rendering pagination controls in the browsable API. May be overridden to modify the rendering style, or set to &lt;code&gt;None&lt;/code&gt; to disable HTML pagination controls completely. Defaults to &lt;code&gt;&quot;rest_framework/pagination/previous_and_next.html&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43a667f3bfd3e20c23a63b2d459e94e12bcf1c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template_name&lt;/code&gt;: A template name to use if &lt;code&gt;HTMLRenderer&lt;/code&gt; is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5379f33a86d82011c34651d7e5a7c1ab8a822030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;: May be used to provide a descriptive title for the schema definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bebf935a61e8bade8896bdcec585a223a3c561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;&lt;strong&gt;required&lt;/strong&gt;: The name of the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33b067ff2c5d51b1e5f63514d15719f78548e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_representation&lt;/code&gt; is passed the entire &lt;code&gt;DataPoint&lt;/code&gt; object and must map from that to the desired output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599cbf05e785e497fb4e8193442ce9bdf85a5125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trim_whitespace&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then leading and trailing whitespace is trimmed. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb09d18744b386215bc782a8b91797ebbb181c69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unpack_ipv4&lt;/code&gt; Unpacks IPv4 mapped addresses like ::ffff:192.0.2.1. If this option is enabled that address would be unpacked to 192.0.2.1. Default is disabled. Can only be used when protocol is set to 'both'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ea496c09e13b3854228b9218d257904709d902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: May be used to pass a canonical base URL for the schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77916efb40c2e6d30e6b4b83399754bf8684f6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: The root URL of the API schema. This option is not required unless the schema is included under path prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74de2657284a07f49e9482cf79b5f637382b35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlconf&lt;/code&gt;: A URL conf module name to use when generating the schema. Defaults to &lt;code&gt;settings.ROOT_URLCONF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02dcc2ed40b8dd09a6baeb68499a713e7c103cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlconf&lt;/code&gt;: A string representing the import path to the URL conf that you want to generate an API schema for. This defaults to the value of Django's &lt;code&gt;ROOT_URLCONF&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08a9953c592db91a79be52f34e524d3ea582225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urls.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;urls.py&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="91c1c859b514082aa4fb17aa2df188f51cfa1768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_url&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then URL string values will be used for the output representation. If set to &lt;code&gt;False&lt;/code&gt; then filename string values will be used for the output representation. Defaults to the value of the &lt;code&gt;UPLOADED_FILES_USE_URL&lt;/code&gt; settings key, which is &lt;code&gt;True&lt;/code&gt; unless set otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a881a47dcd3a77aa261b503087ac35a95634460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;view_name&lt;/code&gt; - The view name that should be used as the target of the relationship. If you're using &lt;a href=&quot;../routers#defaultrouter&quot;&gt;the standard router classes&lt;/a&gt; this will be a string with the format &lt;code&gt;&amp;lt;model_name&amp;gt;-detail&lt;/code&gt;. &lt;strong&gt;required&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9e3c20178ff22d9f3b5edd63d6bfaa83b4802d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;view_name&lt;/code&gt; - The view name that should be used as the target of the relationship. If you're using &lt;a href=&quot;../routers#defaultrouter&quot;&gt;the standard router classes&lt;/a&gt; this will be a string with the format &lt;code&gt;&amp;lt;modelname&amp;gt;-detail&lt;/code&gt;. &lt;strong&gt;required&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb26242b98819667a1286564a8f8cbefc67dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;views.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;views.py&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="586ee2ea0ed1985e360bb0b7258d533ce3f344d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewset&lt;/code&gt; - The viewset class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4dd020d61cf25e24876e6b8806824fc4c34032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;your_app/admin.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;your_app/admin.py&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="b66477c3de98cbf66286f421d6fb87dcc1ed45c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{basename}&lt;/code&gt; - The base to use for the URL names that are created.</source>
          <target state="translated">&lt;code&gt;{basename}&lt;/code&gt; - The base to use for the URL names that are created.</target>
        </trans-unit>
        <trans-unit id="5137cac284266f46f156778fc1d3fb6b33944d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{lookup}&lt;/code&gt; - The lookup field used to match against a single instance.</source>
          <target state="translated">&lt;code&gt;{lookup}&lt;/code&gt; - The lookup field used to match against a single instance.</target>
        </trans-unit>
        <trans-unit id="bfa7bd943d1b68f07a2747f42dcd9d91d26de008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{prefix}&lt;/code&gt; - The URL prefix to use for this set of routes.</source>
          <target state="translated">&lt;code&gt;{prefix}&lt;/code&gt; - The URL prefix to use for this set of routes.</target>
        </trans-unit>
        <trans-unit id="a2364b5a64b2c6d8a46c0cd8b9e581abd3e2b2ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{trailing_slash}&lt;/code&gt; - Either a '/' or an empty string, depending on the &lt;code&gt;trailing_slash&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;{trailing_slash}&lt;/code&gt; - Either a '/' or an empty string, depending on the &lt;code&gt;trailing_slash&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="aaa692a4527fed84f1072e6b2467db8c2a0aa00c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{url_name}&lt;/code&gt; - The &lt;code&gt;url_name&lt;/code&gt; provided to the &lt;code&gt;@action&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{url_name}&lt;/code&gt; - The &lt;code&gt;url_name&lt;/code&gt; provided to the &lt;code&gt;@action&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="965fb568be56c0974c3a1ce6ea3f5825ba428f7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A custom pagination style, using the 'Link' header'&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc909cda8038ed71a65d5623f645f2edae6602f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Every single sign-up helps us make REST framework long-term financially sustainable.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174e5b7261f566b5a52e7595209b9f6e6817155f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Many thanks to all our &lt;a href=&quot;https://fund.django-rest-framework.org/topics/funding/#our-sponsors&quot;&gt;wonderful sponsors&lt;/a&gt;, and in particular to our premium backers, &lt;a href=&quot;https://getsentry.com/welcome/&quot;&gt;Sentry&lt;/a&gt;, &lt;a href=&quot;https://getstream.io/?utm_source=drf&amp;amp;utm_medium=banner&amp;amp;utm_campaign=drf&quot;&gt;Stream&lt;/a&gt;, &lt;a href=&quot;https://software.esg-usa.com/&quot;&gt;ESG&lt;/a&gt;, &lt;a href=&quot;https://rollbar.com/?utm_source=django&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=freetrial&quot;&gt;Rollbar&lt;/a&gt;, &lt;a href=&quot;https://cadre.com&quot;&gt;Cadre&lt;/a&gt;, &lt;a href=&quot;https://hubs.ly/H0f30Lf0&quot;&gt;Kloudless&lt;/a&gt;, and &lt;a href=&quot;https://lightsonsoftware.com&quot;&gt;Lights On Software&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733036293b9f941d1619131e9491138c3290a890" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings are used to control how date and time representations may be parsed and rendered.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572623a1d1a642a3f4c91d2c63a74eba157329a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the basic API policies, and are applied to every &lt;code&gt;APIView&lt;/code&gt; class-based view, or &lt;code&gt;@api_view&lt;/code&gt; function based view.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ae40af963c0edd79a3338297094ed9dccd7e10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the behavior of APIRequestFactory and APIClient&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bcb7ca0414718caea996fbb14394168f4ee517" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the behavior of the generic class-based views.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92109b25caff72dadf20ba29dc80550f7305d267" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the behavior of unauthenticated requests.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f1b8481b4c6151a734675f21688ea50630bd0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.charset&lt;/strong&gt;: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.charset&lt;/strong&gt;: &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c17ecd5cd337cf73df20d1409c3d1e8fbef122" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.charset&lt;/strong&gt;: &lt;code&gt;utf-8&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.charset&lt;/strong&gt;: &lt;code&gt;utf-8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afda7493a31e4df89dd71e5be36cf9dedf822ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'admin'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'admin'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5856eed2f006c22f7ae509ee06b32136e65dec76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'api'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'api'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b81bc076734e39d6fd03791c75c9e87b9515612" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'form'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'form'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60116e3f28a9008c4e8a0b85a1470f0bf6bbf8eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="596dde28e359b4a09df5029dc6db9f5e9ae89b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'json'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'json'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458de4e391126ed5eb76ea79af3fee97de3fb889" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'multipart'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'multipart'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ba4ac44884e74e71785e8d5cdbca08e5c8e254a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;*/*&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;*/*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10787fb9b41b13726ea9e2225ea2df79c2761a1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;application/json&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;application/json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d10a8e1806f8293f87972a098436650698e284ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07d0329ffcc4fd31deac843ed7a0337d9b8e1bdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;multipart/form-data; boundary=BoUnDaRyStRiNg&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;multipart/form-data; boundary=BoUnDaRyStRiNg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84dd75d042cfa53879c3a076727a395ac3eb4f01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;multipart/form-data&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;multipart/form-data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="868cc724cc5e680f8ba1257d90986968ddaa2508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;text/html&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;text/html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93acb68e002621b2ad9f5f96f9b27254e227cb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/admin.html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/admin.html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aeca56fef67c1f9616df0b97e25b7909d312f3ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/api.html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/api.html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab854b35931f7e64a5c448a003cf88983c1afea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/horizontal/form.html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/horizontal/form.html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0a205d2b3de2c4f756a0f007ab11b2eb18591c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Arguments&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="d8f0ab47bda0619b92186595c8e1c70b2e98477b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Base methods&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7f4e8546d0b334be1aacc6674c3aed4b6f4bbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Basic settings&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f060cfc8b19362f545fb0a6933c40944a7c93b6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filtering&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Filtering&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="63bc4ef70839dccd2d01f224b1876e56e3f73643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache&quot;&gt;&lt;code&gt;cache_page&lt;/code&gt;&lt;/a&gt; decorator only caches the &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; responses with status 200.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38f9736e1a2fdfb8ff87c806788a7e75f3472e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Don't forget that &lt;strong&gt;authentication by itself won't allow or disallow an incoming request&lt;/strong&gt;, it simply identifies the credentials that the request was made with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91723a1bdbc899542833af21fd1571e5180ba148" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If a client sends malformed content, then accessing &lt;code&gt;request.data&lt;/code&gt; may raise a &lt;code&gt;ParseError&lt;/code&gt;. By default REST framework's &lt;code&gt;APIView&lt;/code&gt; class or &lt;code&gt;@api_view&lt;/code&gt; decorator will catch the error and return a &lt;code&gt;400 Bad Request&lt;/code&gt; response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ebf90a33067debf6ea2b800027583eb9c836c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you use &lt;code&gt;BasicAuthentication&lt;/code&gt; in production you must ensure that your API is only available over &lt;code&gt;https&lt;/code&gt;. You should also ensure that your API clients will always re-request the username and password at login, and will never store those details to persistent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80305cfd923a97bd1f2c416c52a5794bcc8cc04c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you use &lt;code&gt;TokenAuthentication&lt;/code&gt; in production you must ensure that your API is only available over &lt;code&gt;https&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21472781acf1d47b41b6918f73421e4a8f0deac1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to use a different keyword in the header, such as &lt;code&gt;Bearer&lt;/code&gt;, simply subclass &lt;code&gt;TokenAuthentication&lt;/code&gt; and set the &lt;code&gt;keyword&lt;/code&gt; class variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa62e49062f1e1ce3c27d2a5895fd4a519798b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If your &lt;code&gt;&amp;lt;field_name&amp;gt;&lt;/code&gt; is declared on your serializer with the parameter &lt;code&gt;required=False&lt;/code&gt; then this validation step will not take place if the field is not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae37962915721839f8344c3b213d739ecf3134f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Make sure to run &lt;code&gt;manage.py migrate&lt;/code&gt; after changing your settings. The &lt;code&gt;rest_framework.authtoken&lt;/code&gt; app provides Django database migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26877f649edbf86ffb771aff1c14a8f2a74f75cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The relational fields are declared in &lt;code&gt;relations.py&lt;/code&gt;, but by convention you should import them from the &lt;code&gt;serializers&lt;/code&gt; module, using &lt;code&gt;from rest_framework import serializers&lt;/code&gt; and refer to fields as &lt;code&gt;serializers.&amp;lt;FieldName&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2378250e0134633c06d25c9bc661f11e181a2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The serializer fields are declared in &lt;code&gt;fields.py&lt;/code&gt;, but by convention you should import them using &lt;code&gt;from rest_framework import serializers&lt;/code&gt; and refer to fields as &lt;code&gt;serializers.&amp;lt;FieldName&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fff364fc9724aee430c5d78bacce354e573d76c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; To exit the virtual environment at any time, just type &lt;code&gt;deactivate&lt;/code&gt;. For more information see the &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01078865f56074d6db2e97f40eb58441da6f22c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When your custom authenticator is invoked by the request object's &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; properties, you may see an &lt;code&gt;AttributeError&lt;/code&gt; re-raised as a &lt;code&gt;WrappedAttributeError&lt;/code&gt;. This is necessary to prevent the original exception from being suppressed by the outer property access. Python will not recognize that the &lt;code&gt;AttributeError&lt;/code&gt; originates from your custom authenticator and will instead assume that the request object does not have a &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; property. These errors should be fixed or otherwise handled by your authenticator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c9b6e097494ae189da2f45d4c4445e53e877cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You may see a &lt;code&gt;WrappedAttributeError&lt;/code&gt; raised when calling the &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; properties. These errors originate from an authenticator as a standard &lt;code&gt;AttributeError&lt;/code&gt;, however it's necessary that they be re-raised as a different exception type in order to prevent them from being suppressed by the outer property access. Python will not recognize that the &lt;code&gt;AttributeError&lt;/code&gt; originates from the authenticator and will instead assume that the request object does not have a &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; property. The authenticator will need to be fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb4b82d0263c2c519ac5a3eec94cc3631a2a1b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; it supports &amp;amp; (and), | (or) and ~ (not).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4623f08f297bab1143d09b22aad5c41ad73bdcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; when you set new permission classes through class attribute or decorators you're telling the view to ignore the default list set over the &lt;strong&gt;settings.py&lt;/strong&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103fb76e957e5bf6916c1003c79d077093a39beb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &quot;q&quot; values are not taken into account by REST framework when determining preference. The use of &quot;q&quot; values negatively impacts caching, and in the author's opinion they are an unnecessary and overcomplicated approach to content negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc14c4af899b6dcde5f3c8af35fdabd35d99745c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;force_authenticate&lt;/code&gt; directly sets &lt;code&gt;request.user&lt;/code&gt; to the in-memory &lt;code&gt;user&lt;/code&gt; instance. If you are re-using the same &lt;code&gt;user&lt;/code&gt; instance across multiple tests that update the saved &lt;code&gt;user&lt;/code&gt; state, you may need to call &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/ref/models/instances/#django.db.models.Model.refresh_from_db&quot;&gt;&lt;code&gt;refresh_from_db()&lt;/code&gt;&lt;/a&gt; between tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14b1084a827da2c95d807ceb1ed1d377e597335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For basic &lt;code&gt;APIView&lt;/code&gt; subclasses, default introspection is essentially limited to the URL kwarg path parameters. For &lt;code&gt;GenericAPIView&lt;/code&gt; subclasses, which includes all the provided class based views, &lt;code&gt;AutoSchema&lt;/code&gt; will attempt to introspect serialiser, pagination and filter fields, as well as provide richer path field descriptions. (The key hooks here are the relevant &lt;code&gt;GenericAPIView&lt;/code&gt; attributes and methods: &lt;code&gt;get_serializer&lt;/code&gt;, &lt;code&gt;pagination_class&lt;/code&gt;, &lt;code&gt;filter_backends&lt;/code&gt; and so on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b27d4431744882d14bd52eaf81c6150342c81e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If &lt;code&gt;DEBUG=True&lt;/code&gt;, Django's standard traceback error page will be displayed instead of rendering the HTTP status code and text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bec20fd3f19a0b202fe8d9591164e522abb0fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If using namespacing with hyperlinked serializers you'll also need to ensure that any &lt;code&gt;view_name&lt;/code&gt; parameters on the serializers correctly reflect the namespace. In the examples above you'd need to include a parameter such as &lt;code&gt;view_name='app_name:user-detail'&lt;/code&gt; for serializer fields hyperlinked to the user detail view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a5e71c06ca3c7f6443329871646fcb267d8ebf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you need object level &lt;code&gt;view&lt;/code&gt; permissions for &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;OPTIONS&lt;/code&gt; requests and are using django-guardian for your object-level permissions backend, you'll want to consider using the &lt;code&gt;DjangoObjectPermissionsFilter&lt;/code&gt; class provided by the &lt;a href=&quot;https://github.com/rpkilby/django-rest-framework-guardian&quot;&gt;&lt;code&gt;djangorestframework-guardian&lt;/code&gt; package&lt;/a&gt;. It ensures that list endpoints only return results including objects for which the user has appropriate view permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff567660951833def2d4b69004497081cc4cd8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It's worth noting that Django's standard &lt;code&gt;RequestFactory&lt;/code&gt; doesn't need to include this option, because when using regular Django the CSRF validation takes place in middleware, which is not run when testing views directly. When using REST framework, CSRF validation takes place inside the view, so the request factory needs to disable view-level CSRF checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbeac0c886d413bf090b2a85e6568dcc6371a891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Make sure you also add &lt;code&gt;'owner',&lt;/code&gt; to the list of fields in the inner &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833d09d89e082c75fd00592909d699d9066e4bfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;AdminRenderer&lt;/code&gt; is only able to include links to detail pages when a properly configured &lt;code&gt;URL_FIELD_NAME&lt;/code&gt; (&lt;code&gt;url&lt;/code&gt; by default) attribute is present in the data. For &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; this will be the case, but for &lt;code&gt;ModelSerializer&lt;/code&gt; or plain &lt;code&gt;Serializer&lt;/code&gt; classes you'll need to make sure to include the field explicitly. For example here we use models &lt;code&gt;get_absolute_url&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefdf0e2bdec1f22ba0c6e2f0d01bc590d2ea368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;UniqueFor&amp;lt;Range&amp;gt;Validator&lt;/code&gt; classes impose an implicit constraint that the fields they are applied to are always treated as required. Fields with &lt;code&gt;default&lt;/code&gt; values are an exception to this as they always supply a value even when omitted from user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afb9a3ff000ffd6294a999de4cf9800911bc7c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;UniqueTogetherValidator&lt;/code&gt; class always imposes an implicit constraint that all the fields it applies to are always treated as required. Fields with &lt;code&gt;default&lt;/code&gt; values are an exception to this as they always supply a value even when omitted from user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8962de2ae647f035bd085e382cb1bb9d448f30d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;basename&lt;/code&gt; argument is used to specify the initial part of the view name pattern. In the example above, that's the &lt;code&gt;user&lt;/code&gt; or &lt;code&gt;account&lt;/code&gt; part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afcc950983c6c1be340bbf0fc16d656b9d0384e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The code for this tutorial is available in the &lt;a href=&quot;https://github.com/encode/rest-framework-tutorial&quot;&gt;encode/rest-framework-tutorial&lt;/a&gt; repository on GitHub. The completed implementation is also online as a sandbox version for testing, &lt;a href=&quot;https://restframework.herokuapp.com/&quot;&gt;available here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2d732a965eadf0c3c6b2dedb8d9383dfdba839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The full methods, attributes on, and relations between Django REST Framework's &lt;code&gt;APIView&lt;/code&gt;, &lt;code&gt;GenericAPIView&lt;/code&gt;, various &lt;code&gt;Mixins&lt;/code&gt;, and &lt;code&gt;Viewsets&lt;/code&gt; can be initially complex. In addition to the documentation here, the &lt;a href=&quot;http://www.cdrf.co&quot;&gt;Classy Django REST Framework&lt;/a&gt; resource provides a browsable reference, with full methods and attributes, for each of Django REST Framework's class-based views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eda49a5a6590fa751f3331053f48408fbfce45a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The instance-level &lt;code&gt;has_object_permission&lt;/code&gt; method will only be called if the view-level &lt;code&gt;has_permission&lt;/code&gt; checks have already passed. Also note that in order for the instance-level checks to run, the view code should explicitly call &lt;code&gt;.check_object_permissions(request, obj)&lt;/code&gt;. If you are using the generic views then this will be handled for you by default. (Function-based views will need to check object permissions explicitly, raising &lt;code&gt;PermissionDenied&lt;/code&gt; on failure.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d390b1b575157e1078387d52a0d5b915ff16fd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is a special-case where a read-only field is part of a &lt;code&gt;unique_together&lt;/code&gt; constraint at the model level. In this case the field is required by the serializer class in order to validate the constraint, but should also not be editable by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1530926597c142e16bd6a8ce8e4c8f2f2f7c2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: These methods replace the old-style version 2.x &lt;code&gt;pre_save&lt;/code&gt;, &lt;code&gt;post_save&lt;/code&gt;, &lt;code&gt;pre_delete&lt;/code&gt; and &lt;code&gt;post_delete&lt;/code&gt; methods, which are no longer available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed17ddeae23dfaa709c76bca14ca3cc5e43829f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This field is designed for objects that map to a URL that accepts a single URL keyword argument, as set using the &lt;code&gt;lookup_field&lt;/code&gt; and &lt;code&gt;lookup_url_kwarg&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d630001d335773a65142a5fa59d8dfff858a7eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When developing client applications always remember to make sure you're setting the &lt;code&gt;Content-Type&lt;/code&gt; header when sending data in an HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d67bca00f03e6291abedf5c504cf7c3e8a8c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When using &lt;code&gt;APIRequestFactory&lt;/code&gt;, the object that is returned is Django's standard &lt;code&gt;HttpRequest&lt;/code&gt;, and not REST framework's &lt;code&gt;Request&lt;/code&gt; object, which is only generated once the view is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251bca831a27d1594fb2805112bd4cd6484fc26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: With the exception of &lt;code&gt;DjangoObjectPermissions&lt;/code&gt;, the provided permission classes in &lt;code&gt;rest_framework.permissions&lt;/code&gt;&lt;strong&gt;do not&lt;/strong&gt; implement the methods necessary to check object permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a924623a71ee13433bcfd1fb9d31366386377570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other methods&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0912a72d8c368d94e6315b22b2cd83999f194d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pagination&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Pagination&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="f4da174bcb126ec9f594065e7ee6a6fc5900979e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Request&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Request&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="840d79ed30ab86347aa15088b8588c646ad92b31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Response&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Response&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="9bcaf04c838e03b724fe7716ae3a6ce3262e8422" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Save and deletion hooks&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7e4a9ab1fed10f0b7b917d435ba9402021d67f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;.render()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;.render()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad0363c489efcc54f0e87908a53f653a5b7377af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;@api_view(http_method_names=['GET'])&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;@api_view(http_method_names=['GET'])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06b850ce5ad14406285d4979096dac50bda1a362" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;APIException()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;APIException()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3527d596250809b5dc9e81d3e5d774189c5078b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;AuthenticationFailed(detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b99eaf1c0f3f8f2318e04c792dabecd93f93f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;BooleanField()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;BooleanField()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24115d61c25524a5d1d941880887b299249ef841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dde148085f78daa3fcac4e51170069af339441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ChoiceField(choices)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ChoiceField(choices)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7b0f582c189191a0ca3f37a6dc39f906b058f88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;DateField(format=api_settings.DATE_FORMAT, input_formats=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3840d357933ef5a6a00350305da6a70042772580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None, default_timezone=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166794a4fafde0a245bee61efa9842eae1bd98d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;DurationField(max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d307f154b71ca1a52163fddca31acf3df98dd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;EmailField(max_length=None, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f168a3a67035eea9bb61e8df2350bca13f2f4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4dc082b13d247b7163e9e4f80c94b8bb867e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61c16609710d1e77ee99cd162979fd5b9010449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e3e1b8e1ba392a5467ffacf5027e6d2ce5a9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;MethodNotAllowed(method, detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57c435c4cbe504efa27a102820521d00f98e411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ModelField(model_field=&amp;lt;Django ModelField instance&amp;gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70e447e4ded6aed1e2e9603fb00f286a617bef1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;MultipleChoiceField(choices)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;MultipleChoiceField(choices)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a35107bfc1b3882c992475073fdd83906294d178" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NotAcceptable(detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e433ebce391ab5be282e10463af41f1d41e5b2b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NotAuthenticated(detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8983fea4c11cbaa29eb426c79e005ba8db22546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NotFound(detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa71d617840a05b0f03c42c9059a773f14b75db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NullBooleanField()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NullBooleanField()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44c9dee61d2a1cf26be3a5d3f3f3f61ff02436f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ParseError(detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3772d0bdb3f0be7d4430cbdb1ab0d13d2391f364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;PermissionDenied(detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7eda1f990c8a35a6180b5d0aa016f84138762e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;RegexField(regex, max_length=None, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d572276c000f804a49a62b48d102b9f906be86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;Response(data, status=None, template_name=None, headers=None, content_type=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0925c1819f8ed79c2cf02ee5925d12d4026fd74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;SlugField(max_length=50, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa421ad8d150991128f41ed597e653b1455ab695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;Throttled(wait=None, detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb5e2213bec048f6bcb5116122b95b3d60fd7f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;TimeField(format=api_settings.TIME_FORMAT, input_formats=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39352a61fe317f5d2af34359511d40f5b5d2b656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;URLField(max_length=200, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ff5d3920b67b6a4b22d8dea8a2beac45ab5d85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;UUIDField(format='hex_verbose')&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;UUIDField(format='hex_verbose')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbf9b01d763cb2b945a0528c57fb402d01162969" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;UnsupportedMediaType(media_type, detail=None, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee5590ef734e82c5a561fff9c179ca21559117e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ValidationError(detail, code=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3fbf04d39cb24b74030687cc96070bd33ea91c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;reverse(viewname, *args, **kwargs)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310c2ae0d5405880ce9ced89feaac3b045ba269e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;reverse_lazy(viewname, *args, **kwargs)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e27467c27bed299f6ea5fa5b83417e46f030eee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82175a6a37f10e42eb81b41c777c59a3fba7cd49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;DictField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8847cef19d572674220dfc65aeb59e293fd90b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;FloatField(max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1b29c71d5fd55e24efcb929fd2b61dcbb10f02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;HStoreField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea87d4845db17ab339700f6fa455935e78043448" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;HiddenField()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d770c017f867ab622673905f1783a3c4ae78e077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;IPAddressField(protocol='both', unpack_ipv4=False, **options)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d07c2fb0e88adf148087da7fe061991d06a2899" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;IntegerField(max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b40141796fb5a7150d932cbbb180748fe6e0341" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;JSONField(binary, encoder)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462184317b5a8aeb29a95a599f1d24d19ad6d4ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;ListField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True, min_length=None, max_length=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe35fd106274bef1a095e9cea0c0003f34b90bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;ReadOnlyField()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ff4849bf79b9220a298e28781d625724762791" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;SerializerMethodField(method_name=None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b3327f07563eda2b3e6de9352d98393c5c9fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: format_suffix_patterns(urlpatterns, suffix_required=False, allowed=None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d11a4125a8f9226225a3321ae6c230da0cb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;ModelSerializer&lt;/code&gt; class is the same as a regular &lt;code&gt;Serializer&lt;/code&gt; class, except that&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15db84739dd2b1fdd753a729d9855519491a68a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following settings are used to generate the view names and descriptions, as used in responses to &lt;code&gt;OPTIONS&lt;/code&gt; requests, and as used in the browsable API.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31eb10f22c896fac17b957df55cb462a7858bd54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;: Properly matching together hyperlinked representations and your URL conf can sometimes be a bit fiddly. Printing the &lt;code&gt;repr&lt;/code&gt; of a &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; instance is a particularly useful way to inspect exactly which view names and lookup fields the relationships are expected to map too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df72b814ddb962154e2b2a04e11e9a5369fdb2c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Always use Django's standard login view when creating login pages. This will ensure your login views are properly protected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233afa537d310ffc48ddfd9e7d2eabd4995bc731" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: If you require cross-domain AJAX requests, you should generally be using the more modern approach of &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;CORS&lt;/a&gt; as an alternative to &lt;code&gt;JSONP&lt;/code&gt;. See the &lt;a href=&quot;https://www.django-rest-framework.org/topics/ajax-csrf-cors/&quot;&gt;CORS documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990e526833e096ce3f1dcce1785a3bffa2df70eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowed&lt;/strong&gt;: Optional. A list or tuple of valid format suffixes. If not provided, a wildcard format suffix pattern will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a1a2b987fca2f819c27c895228967bbe85c5d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_object(self, view_name, view_args, view_kwargs)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdf10f704d25fa5b064b8fbe09c89bca7f00deb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_url(self, obj, view_name, request, format)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90273f0dcf3faa2bc85ca69ec899d9b3fcf5be45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;initkwargs&lt;/strong&gt;: A dictionary of any additional arguments that should be passed when instantiating the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9196f6780a26053223f5c3f551bce4093a6464e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;initkwargs&lt;/strong&gt;: A dictionary of any additional arguments that should be passed when instantiating the view. Note that the &lt;code&gt;detail&lt;/code&gt;, &lt;code&gt;basename&lt;/code&gt;, and &lt;code&gt;suffix&lt;/code&gt; arguments are reserved for viewset introspection and are also used by the browsable API to generate the view name and breadcrumb links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869e22854ad0f61ceb92938ce7aecf3420337554" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mapping&lt;/strong&gt;: A mapping of HTTP method names to the view methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bf2e9d8ddd6c7d0bea76a56d94b438a64723c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: The name of the URL as used in &lt;code&gt;reverse&lt;/code&gt; calls. May include the following format string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7f3696d3b6b61a8e76242732250198cf928753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: The name of the URL as used in &lt;code&gt;reverse&lt;/code&gt; calls. May include the following format strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cc3dc9c6fdd9988d6699ae8c79b4f151df166f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix_required&lt;/strong&gt;: Optional. A boolean indicating if suffixes in the URLs should be optional or mandatory. Defaults to &lt;code&gt;False&lt;/code&gt;, meaning that suffixes are optional by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf23e3cc010c7d3feb3e10512527b54de30db0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt;: A string representing the URL to be routed. May include the following format strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82217013c8ebf9d845fef636600d1a0234bef9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt;: A string representing the URL to be routed. May include the same format strings as &lt;code&gt;Route&lt;/code&gt;, and additionally accepts the &lt;code&gt;{url_path}&lt;/code&gt; format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89adc3b3d26e54332a773e99cd8478b6c03f780b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urlpatterns&lt;/strong&gt;: Required. A URL pattern list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2190c4584f780f23a25319e185707eca15dd6e4e" translate="yes" xml:space="preserve">
          <source>@api_view()</source>
          <target state="translated">@api_view()</target>
        </trans-unit>
        <trans-unit id="a8ea27ee278e3e79add3e49fd646f9f2dbfc9561" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RegexField&lt;/code&gt; that validates the input against a URL matching pattern. Expects fully qualified URLs of the form &lt;code&gt;http://&amp;lt;host&amp;gt;/&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6899f4286cc62fb9119f5d1371ccfc2d4e8aeb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RegexField&lt;/code&gt; that validates the input against the pattern &lt;code&gt;[a-zA-Z0-9_-]+&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1d1d87b2db3300f11cb792e8899acee6713b64" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ViewSet&lt;/code&gt; class is only bound to a set of method handlers at the last moment, when it is instantiated into a set of views, typically by using a &lt;code&gt;Router&lt;/code&gt; class which handles the complexities of defining the URL conf for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75083b3f86171651859327d77a0976d77d5ccb3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ViewSet&lt;/code&gt; class is simply &lt;strong&gt;a type of class-based View, that does not provide any method handlers&lt;/strong&gt; such as &lt;code&gt;.get()&lt;/code&gt; or &lt;code&gt;.post()&lt;/code&gt;, and instead provides actions such as &lt;code&gt;.list()&lt;/code&gt; and &lt;code&gt;.create()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d360ddbaf7ea111858ae12e7da16613f5ece4e21" translate="yes" xml:space="preserve">
          <source>A Basic Custom Field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cd79f293977a38bfc8e7a5d67f991452ae096a" translate="yes" xml:space="preserve">
          <source>A Duration representation. Corresponds to &lt;code&gt;django.db.models.fields.DurationField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb807b07814b97c30fee88f1a7fcc56157659e64" translate="yes" xml:space="preserve">
          <source>A boolean representation that also accepts &lt;code&gt;None&lt;/code&gt; as a valid value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66a5618734fa42c114367ef5f1fc6fcf7f8b8ed" translate="yes" xml:space="preserve">
          <source>A boolean representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7f055e2e9b4f8cf5ebec865a41c60faa39559d" translate="yes" xml:space="preserve">
          <source>A certain woman had a very sharp consciousness but almost no memory ... She remembered enough to work, and she worked hard. - Lydia Davis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d6e7b2ab64733928504d837edfe4b90933644b" translate="yes" xml:space="preserve">
          <source>A class that walks a list of routed URL patterns, requests the schema for each view and collates the resulting OpenAPI schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abef8f72963a0d556a49b69a3c9c8145b95f2668" translate="yes" xml:space="preserve">
          <source>A common pattern for Web APIs is to use filename extensions on URLs to provide an endpoint for a given media type. For example, 'http://example.com/api/users.json' to serve a JSON representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7817dbd2fb5ecb59535c60eae00e939fcfdf34" translate="yes" xml:space="preserve">
          <source>A content negotiation class, that determines how a renderer is selected for the response, given an incoming request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37450830edfdcc0d41d160bbbb7a977818a78137" translate="yes" xml:space="preserve">
          <source>A date and time representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70729bde944c80eea16de2f822f75e74a1bf7061" translate="yes" xml:space="preserve">
          <source>A date representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b4967feec32cc3ba5c19b96d4b61336d1dd4bd" translate="yes" xml:space="preserve">
          <source>A decimal representation, represented in Python by a &lt;code&gt;Decimal&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd75a641cb60891957286d6e0eac4ee3d86474f" translate="yes" xml:space="preserve">
          <source>A default class that can be used to &lt;em&gt;only set a default argument during create operations&lt;/em&gt;. During updates the field is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0b0b6f52a06aff2bdcf5d693138352b6b30d9c" translate="yes" xml:space="preserve">
          <source>A default class that can be used to represent the current user. In order to use this, the 'request' must have been provided as part of the context dictionary when instantiating the serializer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa32178288700e9b193b9b6275a4c801fd5832cb" translate="yes" xml:space="preserve">
          <source>A dictionary of additional context information that will be passed to the renderer's &lt;code&gt;.render()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6b719aff99f3d4f67637ddd95314201251a87e" translate="yes" xml:space="preserve">
          <source>A dictionary of error codes to error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2312af2f54793f792c323538306dcbc41febcad" translate="yes" xml:space="preserve">
          <source>A dictionary of key-value pairs that can be used to control how renderers should render the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280734e4373bb7d58a46b43421723ed6471371cd" translate="yes" xml:space="preserve">
          <source>A field class that does not take a value based on user input, but instead takes its value from a default value or callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216db60ebd1c01c6c11ba85ba1e7d4c61be1ac3b" translate="yes" xml:space="preserve">
          <source>A field class that simply returns the value of the field without modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51be49600ac6f1c4972a5f437b1864a62609bfd" translate="yes" xml:space="preserve">
          <source>A field class that validates a dictionary of objects. The keys in &lt;code&gt;DictField&lt;/code&gt; are always assumed to be string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fbcd06f32b2a45119b1f642e0c800adb59ff94" translate="yes" xml:space="preserve">
          <source>A field class that validates a list of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425f470623390a04eceaf38043007daeeec89980" translate="yes" xml:space="preserve">
          <source>A field class that validates that the incoming data structure consists of valid JSON primitives. In its alternate binary mode, it will represent and validate JSON-encoded binary strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa55eb24562b2af860a31305113acb2b024a144" translate="yes" xml:space="preserve">
          <source>A field that can accept a set of zero, one or many values, chosen from a limited set of choices. Takes a single mandatory argument. &lt;code&gt;to_internal_value&lt;/code&gt; returns a &lt;code&gt;set&lt;/code&gt; containing the selected values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cc2096091def775b6223f3a67d7132ccc959b5" translate="yes" xml:space="preserve">
          <source>A field that can accept a value out of a limited set of choices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68339641b264616dc5dd6bf7beb8e46e08f77644" translate="yes" xml:space="preserve">
          <source>A field that ensures the input is a valid IPv4 or IPv6 string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baab67bca0965620dee5c03b3bf04b691c5bee1f" translate="yes" xml:space="preserve">
          <source>A field that ensures the input is a valid UUID string. The &lt;code&gt;to_internal_value&lt;/code&gt; method will return a &lt;code&gt;uuid.UUID&lt;/code&gt; instance. On output the field will return a string in the canonical hyphenated format, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a2076c13e69e4aec87cd664c2d6ca046f2d69e" translate="yes" xml:space="preserve">
          <source>A field whose choices are limited to the filenames in a certain directory on the filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc14e6f3a49bdd6bf9b3f65ef4b0a73a4cf56a1" translate="yes" xml:space="preserve">
          <source>A file representation. Performs Django's standard FileField validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e22ac67c2619cf3ab25833a884912ee3b698c35" translate="yes" xml:space="preserve">
          <source>A final example of filtering the initial queryset would be to determine the initial queryset based on query parameters in the url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d156c4f2709d6002738fa1607908e36ed230e614" translate="yes" xml:space="preserve">
          <source>A floating point representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb93b53a7299ef6cf754656560e1fb56c7c4189" translate="yes" xml:space="preserve">
          <source>A format string that should be used by default for rendering the output of &lt;code&gt;DateField&lt;/code&gt; serializer fields. If &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;DateField&lt;/code&gt; serializer fields will return Python &lt;code&gt;date&lt;/code&gt; objects, and the date encoding will be determined by the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c3881981d0febb3babb03243853ce8f39ccbf5" translate="yes" xml:space="preserve">
          <source>A format string that should be used by default for rendering the output of &lt;code&gt;DateTimeField&lt;/code&gt; serializer fields. If &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;DateTimeField&lt;/code&gt; serializer fields will return Python &lt;code&gt;datetime&lt;/code&gt; objects, and the datetime encoding will be determined by the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcfef92cf02d537149218138bbb9479c15b9eee" translate="yes" xml:space="preserve">
          <source>A format string that should be used by default for rendering the output of &lt;code&gt;TimeField&lt;/code&gt; serializer fields. If &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;TimeField&lt;/code&gt; serializer fields will return Python &lt;code&gt;time&lt;/code&gt; objects, and the time encoding will be determined by the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f1cdccef3e5fda6bbe6646920f0910e60e125b" translate="yes" xml:space="preserve">
          <source>A generic field that can be tied to any arbitrary model field. The &lt;code&gt;ModelField&lt;/code&gt; class delegates the task of serialization/deserialization to its associated model field. This field can be used to create serializer fields for custom model fields, without having to create a new custom serializer field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4f6f26389ce544e19d2e7878ccbff517742719" translate="yes" xml:space="preserve">
          <source>A list of filter backend classes that should be used for generic filtering. If set to &lt;code&gt;None&lt;/code&gt; then generic filtering is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08e298fdbc60a815852721dd0ce81ef3d0d1263" translate="yes" xml:space="preserve">
          <source>A list of format strings that should be used by default for parsing inputs to &lt;code&gt;DateField&lt;/code&gt; serializer fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7d42dcccc5f7d69c5b0fe3a0caa6ad13839cb8" translate="yes" xml:space="preserve">
          <source>A list of format strings that should be used by default for parsing inputs to &lt;code&gt;DateTimeField&lt;/code&gt; serializer fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cb67d3d390abae88e47af4da5026d8e3149705" translate="yes" xml:space="preserve">
          <source>A list of format strings that should be used by default for parsing inputs to &lt;code&gt;TimeField&lt;/code&gt; serializer fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19996471a205e471118c5bec5b85fe7fccea340f" translate="yes" xml:space="preserve">
          <source>A list of validator functions which should be applied to the incoming field input, and which either raise a validation error or simply return. Validator functions should typically raise &lt;code&gt;serializers.ValidationError&lt;/code&gt;, but Django's built-in &lt;code&gt;ValidationError&lt;/code&gt; is also supported for compatibility with validators defined in the Django codebase or third party Django packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e4c34d022f60e2a503b177c66dddbd1b460cfc" translate="yes" xml:space="preserve">
          <source>A list or tuple of authentication classes, that determines the default set of authenticators used when accessing the &lt;code&gt;request.user&lt;/code&gt; or &lt;code&gt;request.auth&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fa284dec3ef301473360d70addb0c90e366466" translate="yes" xml:space="preserve">
          <source>A list or tuple of parser classes, that determines the default set of parsers used when accessing the &lt;code&gt;request.data&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f777c4c9afeb248e68ce70edeac968f50eb08166" translate="yes" xml:space="preserve">
          <source>A list or tuple of permission classes, that determines the default set of permissions checked at the start of a view. Permission must be granted by every class in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c7632a532c72caea39585207dff0806e23fe4b" translate="yes" xml:space="preserve">
          <source>A list or tuple of renderer classes, that determines the default set of renderers that may be used when returning a &lt;code&gt;Response&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f8b01cced30db3b116bdb8bfd07a07531ba3e9" translate="yes" xml:space="preserve">
          <source>A list or tuple of throttle classes, that determines the default set of throttles checked at the start of a view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b180124ede3d3c1f9fc098ac9db7e1dc02f22c" translate="yes" xml:space="preserve">
          <source>A machine-readable [schema] describes what resources are available via the API, what their URLs are, how they are represented and what operations they support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507c94091a5a1f23bf7b7c533785a40f580adc62" translate="yes" xml:space="preserve">
          <source>A mapping of Django model classes to REST framework serializer classes. You can override this mapping to alter the default serializer classes that should be used for each model class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e923a2f3bb4ecc77b63a48328f35610b4c09c9f" translate="yes" xml:space="preserve">
          <source>A more complete example of extra actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4315b7a9a9a5c1f99eae15f869438cdf58ca4980" translate="yes" xml:space="preserve">
          <source>A preconfigured &lt;code&gt;DictField&lt;/code&gt; that is compatible with Django's postgres &lt;code&gt;HStoreField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f75a8f0c031405af45a7bdb6f7e86b3a2a7d0d1" translate="yes" xml:space="preserve">
          <source>A serializer class is very similar to a Django &lt;code&gt;Form&lt;/code&gt; class, and includes similar validation flags on the various fields, such as &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;max_length&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7919f757c6591c5d9578ed6348a1ea6d197b4e5f" translate="yes" xml:space="preserve">
          <source>A short text string that may be used as the name of the field in HTML form fields or other descriptive elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66818c8a2603973977796c72fde93903b5a86c6f" translate="yes" xml:space="preserve">
          <source>A simple renderer that simply returns pre-rendered HTML. Unlike other renderers, the data passed to the response object should be a string representing the content to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1f6bc7072b134adb052d0de5b818e3aeb7ed20" translate="yes" xml:space="preserve">
          <source>A slightly less strict style of permission would be to allow full access to authenticated users, but allow read-only access to unauthenticated users. This corresponds to the &lt;code&gt;IsAuthenticatedOrReadOnly&lt;/code&gt; class in REST framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b810a4f297df4816455fb15ff60e82e6e703ee0d" translate="yes" xml:space="preserve">
          <source>A stream-like object representing the body of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05792298dd30f4e0d67b784dbc71072488e5a16" translate="yes" xml:space="preserve">
          <source>A string representing a global setting for &lt;code&gt;html_cutoff_text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb97af577b21640a6e51dd2c239c1fbee1ea418a" translate="yes" xml:space="preserve">
          <source>A string representing the function that should be used when generating view descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff44148c25e4cd48cbb3bb7374bc5a56046f5f1" translate="yes" xml:space="preserve">
          <source>A string representing the function that should be used when generating view names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9aaa7474f17600eabf4aa5c56a2a14fc0f7af60" translate="yes" xml:space="preserve">
          <source>A string representing the function that should be used when returning a response for any given exception. If the function returns &lt;code&gt;None&lt;/code&gt;, a 500 error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9157b60850af399b39f745ee6dd8505454b6361e" translate="yes" xml:space="preserve">
          <source>A string representing the key that should be used for serializer errors that do not refer to a specific field, but are instead general errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad23af71cffa356d038917afec289b44a8e1ea7" translate="yes" xml:space="preserve">
          <source>A string representing the key that should be used for the URL fields generated by &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f957b8833e8046b4ebbed65f2a904cafd97da85d" translate="yes" xml:space="preserve">
          <source>A string representing the media type that was accepted by the content negotiation stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4322b1070d0565022059fa837c8924e3fcfdb17" translate="yes" xml:space="preserve">
          <source>A text representation, that validates the given value matches against a certain regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5ecb4767c294bd173f7fb80362df6d61bf1852" translate="yes" xml:space="preserve">
          <source>A text representation, validates the text to be a valid e-mail address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1046e964e4640cf636fcf5ee58eea31fb79b6f8" translate="yes" xml:space="preserve">
          <source>A text representation. Optionally validates the text to be shorter than &lt;code&gt;max_length&lt;/code&gt; and longer than &lt;code&gt;min_length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f4482dbe29b9594331e7d41e3b72aac28c253" translate="yes" xml:space="preserve">
          <source>A text string that may be used as a description of the field in HTML form fields or other descriptive elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed0a75a1ad3bdabd61a28d3a4c15793af4a0288" translate="yes" xml:space="preserve">
          <source>A time representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61863a64d4839d048a589dfa1acefd9baf1e0e67" translate="yes" xml:space="preserve">
          <source>A validator may be any callable that raises a &lt;code&gt;serializers.ValidationError&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cb64e3cae61b0b074967beba97e6e7b2a1e3b3" translate="yes" xml:space="preserve">
          <source>A value that should be used for pre-populating the value of HTML form fields. You may pass a callable to it, just as you may do with any regular Django &lt;code&gt;Field&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31678772aac93a0dba06bf47f07b1eaf1a91f5d9" translate="yes" xml:space="preserve">
          <source>A view inspector class that will be used for schema generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35aa15253a340d655ef1184e4fde52e347209882" translate="yes" xml:space="preserve">
          <source>A viewset may &lt;a href=&quot;../viewsets/index#marking-extra-actions-for-routing&quot;&gt;mark extra actions for routing&lt;/a&gt; by decorating a method with the &lt;code&gt;@action&lt;/code&gt; decorator. These extra actions will be included in the generated routes. For example, given the &lt;code&gt;set_password&lt;/code&gt; method on the &lt;code&gt;UserViewSet&lt;/code&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700f85be354bd46ac142a877edde3acce4ea55fa" translate="yes" xml:space="preserve">
          <source>ALLOWED_VERSIONS</source>
          <target state="translated">ALLOWED_VERSIONS</target>
        </trans-unit>
        <trans-unit id="95bf0e870e2f1145571690754754b56cb523c59b" translate="yes" xml:space="preserve">
          <source>API Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ab60e163f50576b56eaa9cf1ed01cbacd6a373" translate="yes" xml:space="preserve">
          <source>API Test cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c08be4451eae3b581564ed0dbeffee7268381a9" translate="yes" xml:space="preserve">
          <source>API policy attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b599358995bd743e4d3802671c154b5e237a07" translate="yes" xml:space="preserve">
          <source>API policy decorators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0db662a8f590905db662108ed1454c9dc117b27" translate="yes" xml:space="preserve">
          <source>API policy implementation methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df6349951e95bdcb8635812f4a9db0aecbb9249" translate="yes" xml:space="preserve">
          <source>API policy instantiation methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484781e3fe5aa2a3c4660352db7cc1a2f2e26352" translate="yes" xml:space="preserve">
          <source>API policy settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4887ee9de17551ebdc7934c9620c2775d22c5db0" translate="yes" xml:space="preserve">
          <source>API responses for list endpoints will now include a &lt;code&gt;Link&lt;/code&gt; header, instead of including the pagination links as part of the body of the response, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cc8eac11c2378ffb6f413fd1df4944237c03c4" translate="yes" xml:space="preserve">
          <source>API schemas are a useful tool that allow for a range of use cases, including generating reference documentation, or driving dynamic client libraries that can interact with your API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b91ace0cf4162153fd95404ac94439dbe6cf95e" translate="yes" xml:space="preserve">
          <source>API versioning allows you to alter behavior between different clients. REST framework provides for a number of different versioning schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405728e6be28d950652dcd39007fda27b1bebfb9" translate="yes" xml:space="preserve">
          <source>APIClient</source>
          <target state="translated">APIClient</target>
        </trans-unit>
        <trans-unit id="cc08c58b5748d22ce6d321439d4e7daa185a352d" translate="yes" xml:space="preserve">
          <source>APIException</source>
          <target state="translated">APIException</target>
        </trans-unit>
        <trans-unit id="8b71643b3275d27da08f1db5b9d0e8ff819c295a" translate="yes" xml:space="preserve">
          <source>APIRequestFactory</source>
          <target state="translated">APIRequestFactory</target>
        </trans-unit>
        <trans-unit id="ab245b349e96dc5edcaaf4f8569344541e42c20f" translate="yes" xml:space="preserve">
          <source>Absolute and relative URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd07e2480f97727f9fbfb2889abfa63f0bcfc343" translate="yes" xml:space="preserve">
          <source>Accept headers vs. format suffixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386039b196c9d17c2bbd49fbbd76151eec498789" translate="yes" xml:space="preserve">
          <source>AcceptHeaderVersioning</source>
          <target state="translated">AcceptHeaderVersioning</target>
        </trans-unit>
        <trans-unit id="cf1805d8ff46d8c49cff35d050b513a00a450d98" translate="yes" xml:space="preserve">
          <source>Accessing settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d8be1dcea4d14b4ffd3fd6d1ee35fd498894f9" translate="yes" xml:space="preserve">
          <source>Accessing the initial data and instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="a475fa3eee6f21778ed319422aa2c2554c6a0fe1" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'rest_framework'&lt;/code&gt; to &lt;code&gt;INSTALLED_APPS&lt;/code&gt;. The settings module will be in &lt;code&gt;tutorial/settings.py&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bb3a052a2744179e4e00a68b76dc297ba17733" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'rest_framework'&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7857cf7794ff4b860991b60510f21277a3d93f18" translate="yes" xml:space="preserve">
          <source>Add the following import at the top of the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005931c0256bc7a0f92c4c693f4fbad062dbbc6e" translate="yes" xml:space="preserve">
          <source>Add the following two fields to the &lt;code&gt;Snippet&lt;/code&gt; model in &lt;code&gt;models.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea0b2d327c102dbbfb858aaf9687c213134dc65" translate="yes" xml:space="preserve">
          <source>Add the package to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; and modify your REST framework settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f42a50c9a526a1eee4375e65f3338f06974082" translate="yes" xml:space="preserve">
          <source>Adding endpoints for our User models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde27e44640f15e0de91fc8e2f4a90d0dce8d7f8" translate="yes" xml:space="preserve">
          <source>Adding format-suffix patterns to each individual entry in the URLconf for your API is error-prone and non-DRY, so REST framework provides a shortcut to adding these patterns to your URLConf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272c4fcd2810dae47ace6f1121eca8c60d872ae8" translate="yes" xml:space="preserve">
          <source>Adding information to our model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d79a1d8f8b430b8475aeb8cbcda3bd931b1ddf2" translate="yes" xml:space="preserve">
          <source>Adding login to the Browsable API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db5bd5eede66fa224fc04788c6b56bcc39122ed" translate="yes" xml:space="preserve">
          <source>Adding new behavior for new serializer base classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cd03e02c40943315c30f8928cb4714fefbcd20" translate="yes" xml:space="preserve">
          <source>Adding optional format suffixes to our URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0b5b348027ab06657bacedad688d2454b6cfdd" translate="yes" xml:space="preserve">
          <source>Adding pagination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d195e39171c9daed2c98f537255f6cd88b8da4" translate="yes" xml:space="preserve">
          <source>Adding required permissions to views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b34254993ec2e6ca344ad3e7d1605a37ae4fe0" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fe530884e52e534d6ef110e1b8437436e8e4af" translate="yes" xml:space="preserve">
          <source>Additionally, the following caveats apply to serializer inheritance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b9f6e3a6788254daf3ea4930d4bed67e2e264d" translate="yes" xml:space="preserve">
          <source>AdminRenderer</source>
          <target state="translated">AdminRenderer</target>
        </trans-unit>
        <trans-unit id="24d87c8f45b081246c7e851229bad533c32fb1e9" translate="yes" xml:space="preserve">
          <source>Advanced custom routers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cede2fdfa247136a88e6b8d7a47fff18e2cf500" translate="yes" xml:space="preserve">
          <source>Advanced field defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f537c326789799d1f985a50818cd510fe52b49" translate="yes" xml:space="preserve">
          <source>Advanced renderer usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5b7f1a827bc9255b5b021d7d534cae2f6d3950" translate="yes" xml:space="preserve">
          <source>Advanced serializer usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710b8941cffc4db9b5dfc277c53fa9ca258e9d20" translate="yes" xml:space="preserve">
          <source>After adding all those names into our URLconf, our final &lt;code&gt;snippets/urls.py&lt;/code&gt; file should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e64a0dda5fce98d247c764460db3bb48409d811" translate="yes" xml:space="preserve">
          <source>After routing has determined which controller to use for a request, your controller is responsible for making sense of the request and producing the appropriate output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcaff642f755af168a40afb8adec78ad999a651" translate="yes" xml:space="preserve">
          <source>Again, as with &lt;code&gt;ModelViewSet&lt;/code&gt;, you can use any of the standard attributes and method overrides available to &lt;code&gt;GenericAPIView&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aea5dc8e309adc73aa6ed507c9a5db543bd1064" translate="yes" xml:space="preserve">
          <source>Again, if we need more control over the API URLs we can simply drop down to using regular class-based views, and writing the URL conf explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3950d132e3a94b612b9f2b6d25894c0068c253" translate="yes" xml:space="preserve">
          <source>Again, you'll probably want to explicitly remove the validator from the serializer class, and write the code the for the validation constraint explicitly, in a &lt;code&gt;.validate()&lt;/code&gt; method, or in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f4ce8807911729657287bbbc5d531a2a0ab184" translate="yes" xml:space="preserve">
          <source>AllowAny</source>
          <target state="translated">AllowAny</target>
        </trans-unit>
        <trans-unit id="10d370951942e8d488fef2f7ea4065c06bc3983d" translate="yes" xml:space="preserve">
          <source>Allowing &lt;code&gt;PUT&lt;/code&gt; as create operations is problematic, as it necessarily exposes information about the existence or non-existence of objects. It's also not obvious that transparently allowing re-creating of previously deleted instances is necessarily a better default behavior than simply returning &lt;code&gt;404&lt;/code&gt; responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931b88ea385ffde3fa07bb1a0f29b1df1af101c6" translate="yes" xml:space="preserve">
          <source>Also keep in mind that with complex cases it can often be better to explicitly define your serializer classes, rather than relying on the default &lt;code&gt;ModelSerializer&lt;/code&gt; behavior. This involves a little more code, but ensures that the resulting behavior is more transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f62d152058664a8b6d980aa51786055cd05ac63" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;format_suffix_patterns&lt;/code&gt; does not support descending into &lt;code&gt;include&lt;/code&gt; URL patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b82bf49e54fc695cc9a37b2a9bbdaa6ae587d3" translate="yes" xml:space="preserve">
          <source>Also note that although this class provides the complete set of create/list/retrieve/update/destroy actions by default, you can restrict the available operations by using the standard permission classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54550cc78bba107dd564a9edf60675798401d580" translate="yes" xml:space="preserve">
          <source>Also note that the generic views will only check the object-level permissions for views that retrieve a single model instance. If you require object-level filtering of list views, you'll need to filter the queryset separately. See the &lt;a href=&quot;../filtering/index&quot;&gt;filtering documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417ac66375724eefe3aa5c0cd70a23aa4061e58e" translate="yes" xml:space="preserve">
          <source>Also provides a &lt;code&gt;.partial_update(request, *args, **kwargs)&lt;/code&gt; method, which is similar to the &lt;code&gt;update&lt;/code&gt; method, except that all fields for the update will be optional. This allows support for HTTP &lt;code&gt;PATCH&lt;/code&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2747351646955bad6de90a8a19c1d84e865ade20" translate="yes" xml:space="preserve">
          <source>Alternative representations include serializing using hyperlinks, serializing complete nested representations, or serializing with a custom representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643337242b53c976382d9c62b1c3109bb1826b14" translate="yes" xml:space="preserve">
          <source>Alternatively names in the &lt;code&gt;fields&lt;/code&gt; options can map to properties or methods which take no arguments that exist on the model class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f03a223ac4d42c392a2491d184d9c48fb691a1e" translate="yes" xml:space="preserve">
          <source>Alternatively you can disable HTML pagination controls completely by subclassing on of the existing classes, setting &lt;code&gt;template = None&lt;/code&gt; as an attribute on the class. You'll then need to configure your &lt;code&gt;DEFAULT_PAGINATION_CLASS&lt;/code&gt; settings key to use your custom class as the default pagination style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6076ce3457b944563f1466e7dc3c684dd1f0ac" translate="yes" xml:space="preserve">
          <source>Alternatively you can set the fields on the serializer explicitly. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3528da0134499e6e64147580baf2d282bf381b89" translate="yes" xml:space="preserve">
          <source>Alternatively you can use Django's &lt;code&gt;include&lt;/code&gt; function, like so...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e69f370f9be443618967eb92eeae6a446c4fcb" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;url_name&lt;/code&gt; attribute set by the &lt;code&gt;@action&lt;/code&gt; decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b05af3df283f2f3262c7b593c2c354166f274c" translate="yes" xml:space="preserve">
          <source>An API may have multiple &lt;code&gt;UserRateThrottles&lt;/code&gt; in place at the same time. To do so, override &lt;code&gt;UserRateThrottle&lt;/code&gt; and set a unique &quot;scope&quot; for each class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43aaca11208c7770758ea597268b84a99bbd201" translate="yes" xml:space="preserve">
          <source>An alternative to saving multiple related instances in the serializer is to write custom model manager classes that handle creating the correct instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf7b978a856d1fbba7defdda836703244e98b41" translate="yes" xml:space="preserve">
          <source>An alternative to the format suffixes is to include the requested format in a query parameter. REST framework provides this option by default, and it is used in the browsable API to switch between differing available representations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0967f4ea70852bc3f9f8f186c297d820fd78a658" translate="yes" xml:space="preserve">
          <source>An automatically determined set of fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16cf4fbce027d77a139782f5c4e0e43e8f31eaf" translate="yes" xml:space="preserve">
          <source>An example of a view that uses &lt;code&gt;StaticHTMLRenderer&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b349dac92343be50141482340d7ecf90837b03" translate="yes" xml:space="preserve">
          <source>An example of a view that uses &lt;code&gt;TemplateHTMLRenderer&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6397c4e030fd6e971bc2cd72c82e644be6f140e9" translate="yes" xml:space="preserve">
          <source>An explicit &lt;code&gt;.template_name&lt;/code&gt; attribute set on this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eece6e7748f616432ea939d382a4f4ce3a81aab" translate="yes" xml:space="preserve">
          <source>An explicit &lt;code&gt;template_name&lt;/code&gt; argument passed to the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a484e895640bda87e8fc422a1bcf15608a5dd7" translate="yes" xml:space="preserve">
          <source>An image representation. Validates the uploaded file content as matching a known image format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9382ea9a98e317d03ba6204209b414e589476710" translate="yes" xml:space="preserve">
          <source>An integer of 0 or more, that may be used to specify the number of application proxies that the API runs behind. This allows throttling to more accurately identify client IP addresses. If set to &lt;code&gt;None&lt;/code&gt; then less strict IP matching will be used by the throttle classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc142577244ee31b00d19d5b777b37ee20137fa" translate="yes" xml:space="preserve">
          <source>An integer representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d01fe241f53058476f3c279f504b31f45fe944f" translate="yes" xml:space="preserve">
          <source>And in your &lt;code&gt;urls.py&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f7cbd299e8e7fdb98f06bcda7a46dc72044a75" translate="yes" xml:space="preserve">
          <source>And now we can add a &lt;code&gt;.save()&lt;/code&gt; method to our model class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a688136a7fda817d10ac5848b8f23e47407fd87" translate="yes" xml:space="preserve">
          <source>And the following two models, which may have associated tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91240ceae67458cba85a4879684ebc85a134ab6b" translate="yes" xml:space="preserve">
          <source>And then add a url pattern for the snippet highlights:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae057b5d890ed0c7e38d90f542d3f52236b048ba" translate="yes" xml:space="preserve">
          <source>And to validate numbers up to anything less than one billion with a resolution of 10 decimal places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54812275003c8d03c16b6f67a43df539bb092432" translate="yes" xml:space="preserve">
          <source>And, at the end of the file, add a pattern to include the login and logout views for the browsable API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b34a50b774804b4d2557305cb0a399206521e91" translate="yes" xml:space="preserve">
          <source>AnonRateThrottle</source>
          <target state="translated">AnonRateThrottle</target>
        </trans-unit>
        <trans-unit id="052d41d82be1969ee17e8802aeeb435ada93cde8" translate="yes" xml:space="preserve">
          <source>Another scenario where you might want to use multiple throttles would be if you need to impose different constraints on different parts of the API, due to some services being particularly resource-intensive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cbc2d356dbf76758d52521a341a28d672d0bf2" translate="yes" xml:space="preserve">
          <source>Another style of filtering might involve restricting the queryset based on some part of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af66ea0e3a8b91fd732b2b612ac153a5a506850" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;APIException&lt;/code&gt; exceptions will be caught and mediated into appropriate responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e87cd29be59a23fb419b267c36f222aaec5f7d" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments will be included in the &lt;code&gt;validated_data&lt;/code&gt; argument when &lt;code&gt;.create()&lt;/code&gt; or &lt;code&gt;.update()&lt;/code&gt; are called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dd97d19dd786bf20aa8c11eb1698afcde86753" translate="yes" xml:space="preserve">
          <source>Any example validation error might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15817563e39898ac2e2909b4b1ef6d4e02597fa8" translate="yes" xml:space="preserve">
          <source>Any exception thrown by the handler method will be passed to this method, which either returns a &lt;code&gt;Response&lt;/code&gt; instance, or re-raises the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1258b8274b2c889136800f5a54a6c5e0f72505" translate="yes" xml:space="preserve">
          <source>Any global settings for a REST framework API are kept in a single configuration dictionary named &lt;code&gt;REST_FRAMEWORK&lt;/code&gt;. Start off by adding the following to your &lt;code&gt;settings.py&lt;/code&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d6592eed7cc4301c56efb2de7e4f789aea6293" translate="yes" xml:space="preserve">
          <source>Any relationships such as foreign keys on the model will be mapped to &lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt;. Reverse relationships are not included by default unless explicitly included as specified in the &lt;a href=&quot;../relations/index&quot;&gt;serializer relations&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b4138ca92e13aa1fc9c526f19412ce158982af" translate="yes" xml:space="preserve">
          <source>Apache Authentication How-To</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa887992a77cdf177f4aa3b79860e213b11a087b" translate="yes" xml:space="preserve">
          <source>Apache mod_wsgi specific configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="translated">Arguments:</target>
        </trans-unit>
        <trans-unit id="ab31f6e6fd333d0e1f29fe5ed1e1ddd8f3435b70" translate="yes" xml:space="preserve">
          <source>As REST framework's &lt;code&gt;Request&lt;/code&gt; extends Django's &lt;code&gt;HttpRequest&lt;/code&gt;, all the other standard attributes and methods are also available. For example the &lt;code&gt;request.META&lt;/code&gt; and &lt;code&gt;request.session&lt;/code&gt; dictionaries are available as normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1857d60d1a09ae95374b744b72e8a17fdc37aae6" translate="yes" xml:space="preserve">
          <source>As a rule, it's probably better practice to return absolute URIs from your Web APIs, such as &lt;code&gt;http://example.com/foobar&lt;/code&gt;, rather than returning relative URIs, such as &lt;code&gt;/foobar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceb9fd46750a2dd170bd1f02af9583d49307365" translate="yes" xml:space="preserve">
          <source>As an example of how REST framework uses explicit validation, we'll take a simple model class that has a field with a uniqueness constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548b597f43be3d7f2bef7fe320675dc787cba6fb" translate="yes" xml:space="preserve">
          <source>As an example, if you are sending &lt;code&gt;json&lt;/code&gt; encoded data using jQuery with the &lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;.ajax() method&lt;/a&gt;, you should make sure to include the &lt;code&gt;contentType: 'application/json'&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b3e20135008fb9f139f67c9400ba2d0d95cded" translate="yes" xml:space="preserve">
          <source>As an example, let's create a field that can be used to represent the class name of the object being serialized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2806075cd60db46c2f93bb201dbb4c4e8d4a24f" translate="yes" xml:space="preserve">
          <source>As usual CSRF validation will only apply to any session authenticated views. This means CSRF validation will only occur if the client has been logged in by calling &lt;code&gt;login()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a254c23ef143531b0b3b1accbfbfbb5f6111c8b5" translate="yes" xml:space="preserve">
          <source>As usual we need to add the new views that we've created in to our URLconf. We'll add a url pattern for our new API root in &lt;code&gt;snippets/urls.py&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb438aebb83abedf2681f6247af6a8f1e1ad0a2" translate="yes" xml:space="preserve">
          <source>As well as allowing clients to perform searches and filtering, generic filter backends can be useful for restricting which objects should be visible to any given request or user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd672ce4380530b59c02a6d4bc5ed969170ecfd6" translate="yes" xml:space="preserve">
          <source>As well as being able to override the default queryset, REST framework also includes support for generic filtering backends that allow you to easily construct complex searches and filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34f164cfc9f53bc51873d82a3087f8e1ff63bae" translate="yes" xml:space="preserve">
          <source>As well as global permissions, that are run against all incoming requests, you can also create object-level permissions, that are only run against operations that affect a particular object instance. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a757247f6a87cc009055c73c6066fc617ed90e" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ChoiceField&lt;/code&gt;, both the &lt;code&gt;allow_blank&lt;/code&gt; and &lt;code&gt;allow_null&lt;/code&gt; options are valid, although it is highly recommended that you only use one and not both. &lt;code&gt;allow_blank&lt;/code&gt; should be preferred for textual choices, and &lt;code&gt;allow_null&lt;/code&gt; should be preferred for numeric or other non-textual choices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6d63184b4cd25ef4cd200f30eb93b3c7f2b43f" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;DjangoModelPermissions&lt;/code&gt; you can use custom model permissions by overriding &lt;code&gt;DjangoObjectPermissions&lt;/code&gt; and setting the &lt;code&gt;.perms_map&lt;/code&gt; property. Refer to the source code for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8b10ae86f828b3515e3d8df41a8a831fe7788e" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;DjangoModelPermissions&lt;/code&gt;, this permission must only be applied to views that have a &lt;code&gt;.queryset&lt;/code&gt; property or &lt;code&gt;.get_queryset()&lt;/code&gt; method. Authorization will only be granted if the user &lt;em&gt;is authenticated&lt;/em&gt; and has the &lt;em&gt;relevant per-object permissions&lt;/em&gt; and &lt;em&gt;relevant model permissions&lt;/em&gt; assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00daa11b54779266636bfd22587c60b47b4b5b7a" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ModelViewSet&lt;/code&gt;, you'll normally need to provide at least the &lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;serializer_class&lt;/code&gt; attributes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf71a8ccb7870141aebd662e08fef7d0cf36e67" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;SimpleRouter&lt;/code&gt; the trailing slashes on the URL routes can be removed by setting the &lt;code&gt;trailing_slash&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; when instantiating the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1895db66e711dcc1958471199606e361316fffe7" translate="yes" xml:space="preserve">
          <source>As with any other &lt;code&gt;TemplateResponse&lt;/code&gt;, this method is called to render the serialized data of the response into the final response content. When &lt;code&gt;.render()&lt;/code&gt; is called, the response content will be set to the result of calling the &lt;code&gt;.render(data, accepted_media_type, renderer_context)&lt;/code&gt; method on the &lt;code&gt;accepted_renderer&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b4546aede8d117773cba3f0e45270a90157ed7" translate="yes" xml:space="preserve">
          <source>As with permissions and authentication, throttling in REST framework is always defined as a list of classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8790e19f3925fea33b554fc2b02293caaf00c8e" translate="yes" xml:space="preserve">
          <source>As with permissions, multiple throttles may be used. Your API might have a restrictive throttle for unauthenticated requests, and a less restrictive throttle for authenticated requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d402b0f3c34bdf009d52174e78cdb2bdf1825211" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;reverse&lt;/code&gt; function, you should &lt;strong&gt;include the request as a keyword argument&lt;/strong&gt; to the function, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277efe000f04c4854d4ae142161556be653643b4" translate="yes" xml:space="preserve">
          <source>Associating Snippets with Users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262cd7b3d6fabfa86cf8643b167658c0bf6a5412" translate="yes" xml:space="preserve">
          <source>At the moment relationships within our API are represented by using primary keys. In this part of the tutorial we'll improve the cohesion and discoverability of our API, by instead using hyperlinking for relationships.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61033a343444ebed799d4383f6705ea6c27c07a" translate="yes" xml:space="preserve">
          <source>At this point we've translated the model instance into Python native datatypes. To finalise the serialization process we render the data into &lt;code&gt;json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5f6af3a9cd23351f88cabaf3be81acb89b6d0e" translate="yes" xml:space="preserve">
          <source>At this point we've translated the model instance into Python native datatypes. To finalize the serialization process we render the data into &lt;code&gt;json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="dea6f63c23218f19af20fc16842c1931bbdade40" translate="yes" xml:space="preserve">
          <source>Auth needs to be pluggable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409174a70b4c668b2da825c8e34e494647dea904" translate="yes" xml:space="preserve">
          <source>Authenticating</source>
          <target state="translated">Authenticating</target>
        </trans-unit>
        <trans-unit id="d1a133717ed2e3d83b37838a83588f384fff7c07" translate="yes" xml:space="preserve">
          <source>Authenticating with the API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="49e0c1aa528d028fb9a5af042d782a7e3d6c4275" translate="yes" xml:space="preserve">
          <source>Authentication is always run at the very start of the view, before the permission and throttling checks occur, and before any other code is allowed to proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f5fe9e3e67af38f5a0bdd5a683a5117cadb951" translate="yes" xml:space="preserve">
          <source>Authentication is the mechanism of associating an incoming request with a set of identifying credentials, such as the user the request came from, or the token that it was signed with. The &lt;a href=&quot;../permissions/index&quot;&gt;permission&lt;/a&gt; and &lt;a href=&quot;../throttling/index&quot;&gt;throttling&lt;/a&gt; policies can then use those credentials to determine if the request should be permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a9d6ae546047f9d203830e4943cb3e3f10b7b9" translate="yes" xml:space="preserve">
          <source>Authentication or identification by itself is not usually sufficient to gain access to information or code. For that, the entity requesting access must have authorization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34aed4c0d9d20a37d0e40a3973026365f75f4b2e" translate="yes" xml:space="preserve">
          <source>Authentication settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13eac5286cda5d3e17c0b951ff68b3225ca93cce" translate="yes" xml:space="preserve">
          <source>AuthenticationFailed</source>
          <target state="translated">AuthenticationFailed</target>
        </trans-unit>
        <trans-unit id="72fe6a59896fe12fa437e7912008cd3baf314da0" translate="yes" xml:space="preserve">
          <source>BaseSerializer</source>
          <target state="translated">BaseSerializer</target>
        </trans-unit>
        <trans-unit id="30a9f8a0441549550539e36ec0f9f9002255cfd0" translate="yes" xml:space="preserve">
          <source>Basic usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda87634942b254bbf33e86d16895c10036e5d5d" translate="yes" xml:space="preserve">
          <source>BasicAuthentication</source>
          <target state="translated">BasicAuthentication</target>
        </trans-unit>
        <trans-unit id="925289f0e426fca48b9a503578f41e37805924f2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;'snippets'&lt;/code&gt; is a &lt;em&gt;reverse&lt;/em&gt; relationship on the User model, it will not be included by default when using the &lt;code&gt;ModelSerializer&lt;/code&gt; class, so we needed to add an explicit field for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbba9d7db234dd7a5745d0778b84ce4294871be0" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;ModelViewSet&lt;/code&gt; extends &lt;code&gt;GenericAPIView&lt;/code&gt;, you'll normally need to provide at least the &lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;serializer_class&lt;/code&gt; attributes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75be96fe56d31d3cf3bb933182c8924a760b8d49" translate="yes" xml:space="preserve">
          <source>Because of this more explicit style REST framework includes a few validator classes that are not available in core Django. These classes are detailed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e954b72ee25546ab1f855398bd40c142098c18" translate="yes" xml:space="preserve">
          <source>Because the API chooses the content type of the response based on the client request, it will, by default, return an HTML-formatted representation of the resource when that resource is requested by a web browser. This allows for the API to return a fully web-browsable HTML representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4486f3ca9358d9522b3925ebe7a3199b901726bb" translate="yes" xml:space="preserve">
          <source>Because the behavior of nested creates and updates can be ambiguous, and may require complex dependencies between related models, REST framework 3 requires you to always write these methods explicitly. The default &lt;code&gt;ModelSerializer&lt;/code&gt;&lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; methods do not include support for writable nested representations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c838cd4bf404838425986a4f0e65deaa558e75" translate="yes" xml:space="preserve">
          <source>Because the serializers have been fundamentally redesigned with 3.0 this API no longer exists. You can still modify the fields that get created but you'll need to refer to the source code, and be aware that if the changes you make are against private bits of API then they may be subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c04d3a2e7dd46b0961b8656bff5af966a8e8a6" translate="yes" xml:space="preserve">
          <source>Because this class provides the same interface as the &lt;code&gt;Serializer&lt;/code&gt; class, you can use it with the existing generic class-based views exactly as you would for a regular &lt;code&gt;Serializer&lt;/code&gt; or &lt;code&gt;ModelSerializer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cd93d3b41dde5d7aec419e39c01da1626bd1f5" translate="yes" xml:space="preserve">
          <source>Because we now have a set of permissions on the API, we need to authenticate our requests to it if we want to edit any snippets. We haven't set up any &lt;a href=&quot;../../api-guide/authentication/index&quot;&gt;authentication classes&lt;/a&gt;, so the defaults are currently applied, which are &lt;code&gt;SessionAuthentication&lt;/code&gt; and &lt;code&gt;BasicAuthentication&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111239a25ddb27b5a84faa50069acffd0a885ccc" translate="yes" xml:space="preserve">
          <source>Because we're using &lt;code&gt;ViewSet&lt;/code&gt; classes rather than &lt;code&gt;View&lt;/code&gt; classes, we actually don't need to design the URL conf ourselves. The conventions for wiring up resources into views and urls can be handled automatically, using a &lt;code&gt;Router&lt;/code&gt; class. All we need to do is register the appropriate view sets with a router, and let it do the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5e48450e57bb1f3f7548605ebcf2c61d72d274" translate="yes" xml:space="preserve">
          <source>Because we're using viewsets instead of views, we can automatically generate the URL conf for our API, by simply registering the viewsets with a router class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0030ace90803234901b1972aa82435659c294f" translate="yes" xml:space="preserve">
          <source>Because we've included format suffixed URLs such as &lt;code&gt;'.json'&lt;/code&gt;, we also need to indicate on the &lt;code&gt;highlight&lt;/code&gt; field that any format suffixed hyperlinks it returns should use the &lt;code&gt;'.html'&lt;/code&gt; suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf65f4713147a6adf7ebfc27a79022acd6ca97c" translate="yes" xml:space="preserve">
          <source>Before a TemplateResponse instance can be returned to the client, it must be rendered. The rendering process takes the intermediate representation of template and context, and turns it into the final byte stream that can be served to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfb9d015dd42106f2ebfa4c0f9c938ce5879236" translate="yes" xml:space="preserve">
          <source>Before running the main body of the view each permission in the list is checked. If any permission check fails an &lt;code&gt;exceptions.PermissionDenied&lt;/code&gt; or &lt;code&gt;exceptions.NotAuthenticated&lt;/code&gt; exception will be raised, and the main body of the view will not run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56cf6bfd48198ea7479ab88de3d6d7d9ea5ba23" translate="yes" xml:space="preserve">
          <source>Before running the main body of the view each throttle in the list is checked. If any throttle check fails an &lt;code&gt;exceptions.Throttled&lt;/code&gt; exception will be raised, and the main body of the view will not run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b777325def458a3c67eca5f104fcf7f424d292" translate="yes" xml:space="preserve">
          <source>Before we do anything else we'll create a new virtual environment, using &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv&lt;/a&gt;. This will make sure our package configuration is kept nicely isolated from any other projects we're working on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5055ad0db7b7bb1f8efc342195f67f3f54ec29" translate="yes" xml:space="preserve">
          <source>Before we go any further we'll familiarize ourselves with using our new Serializer class. Let's drop into the Django shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad9fb75fb33347503267e992f96af98b0cc28ff" translate="yes" xml:space="preserve">
          <source>Binding ViewSets to URLs explicitly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafa078aec21edbd3a9df037cf91c28f8fd7cba9" translate="yes" xml:space="preserve">
          <source>Boolean fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e661326b86b56c73e2281ceb60444cc34611bb1f" translate="yes" xml:space="preserve">
          <source>BooleanField</source>
          <target state="translated">BooleanField</target>
        </trans-unit>
        <trans-unit id="6d847b95828dd0fabfffc6b331108e2dd5180b78" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;URLPathVersioning&lt;/code&gt; and &lt;code&gt;NamespaceVersioning&lt;/code&gt; are reasonable if you just need a simple versioning scheme. The &lt;code&gt;URLPathVersioning&lt;/code&gt; approach might be better suitable for small ad-hoc projects, and the &lt;code&gt;NamespaceVersioning&lt;/code&gt; is probably easier to manage for larger projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2771637855f759c542a27be1ce37a21c2c55281" translate="yes" xml:space="preserve">
          <source>Both of these come with a trade-off. Using regular views and URL confs is more explicit and gives you more control. ViewSets are helpful if you want to get up and running quickly, or when you have a large API and you want to enforce a consistent URL configuration throughout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85144a4cb39a8cbb8310c72ccba0d3b28ddb0078" translate="yes" xml:space="preserve">
          <source>Both styles &quot;&lt;code&gt;PUT&lt;/code&gt; as 404&quot; and &quot;&lt;code&gt;PUT&lt;/code&gt; as create&quot; can be valid in different circumstances, but from version 3.0 onwards we now use 404 behavior as the default, due to it being simpler and more obvious.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb25287f6c7de167910844a66437bfce35aff899" translate="yes" xml:space="preserve">
          <source>Both styles conform to &lt;a href=&quot;https://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt;, and are syntactically valid JSON. The unicode style is preferred as being more user-friendly when inspecting API responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08fde39e2490d07787f932f095d4fc45d7ee7a8" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; methods are optional. You can implement either neither, one, or both of them, depending on the use-case for your serializer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc519d00cc04f0c1fc28520b5eb9d7994204812" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;allow_blank&lt;/code&gt; and &lt;code&gt;allow_null&lt;/code&gt; are valid options on &lt;code&gt;ChoiceField&lt;/code&gt;, although it is highly recommended that you only use one and not both. &lt;code&gt;allow_blank&lt;/code&gt; should be preferred for textual choices, and &lt;code&gt;allow_null&lt;/code&gt; should be preferred for numeric or other non-textual choices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e1fd65c922058ff3ae891c17daf82189a44bd8" translate="yes" xml:space="preserve">
          <source>Browsability</source>
          <target state="translated">Browsability</target>
        </trans-unit>
        <trans-unit id="ff8d2fd6da0acc0dfdb6c3544d865bf0bb373741" translate="yes" xml:space="preserve">
          <source>BrowsableAPIRenderer</source>
          <target state="translated">BrowsableAPIRenderer</target>
        </trans-unit>
        <trans-unit id="704c13d624aeec5b311490871e8ad1d178b03c10" translate="yes" xml:space="preserve">
          <source>Browser enhancements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2297b6823277d59ae5717234a21a689f0141bbf2" translate="yes" xml:space="preserve">
          <source>Browser-based &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; forms are transparently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41acb5b056590caa62370a6912c43a73124ee6d" translate="yes" xml:space="preserve">
          <source>Browsing the API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6070344b699c38b399143d4c16680a60ea3e065" translate="yes" xml:space="preserve">
          <source>But we also get the built-in validation for free:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6cac0053857ac99a3e2f70a4f13726bdc6e05c" translate="yes" xml:space="preserve">
          <source>By convention you should import the serializers module and use a fully qualified &lt;code&gt;ValidationError&lt;/code&gt; style, in order to differentiate it from Django's built-in validation error. For example. &lt;code&gt;raise serializers.ValidationError('This field must be an integer value.')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da1e11d1b267eb26866a99ab18f0a13cd6c82f0" translate="yes" xml:space="preserve">
          <source>By creating your own base &lt;code&gt;ViewSet&lt;/code&gt; classes, you can provide common behavior that can be reused in multiple viewsets across your API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fe913d03527b807f577ed58e877dbc7294c83f" translate="yes" xml:space="preserve">
          <source>By default &quot;unique together&quot; validation enforces that all fields be &lt;code&gt;required=True&lt;/code&gt;. In some cases, you might want to explicit apply &lt;code&gt;required=False&lt;/code&gt; to one of the fields, in which case the desired behaviour of the validation is ambiguous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32831b36507291e794291281ac70095e2aec1e9" translate="yes" xml:space="preserve">
          <source>By default CSRF validation is not applied when using &lt;code&gt;APIClient&lt;/code&gt;. If you need to explicitly enable CSRF validation, you can do so by setting the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; flag when instantiating the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccd698719a70d0577ce4661f6d7b0eb8efc58dc" translate="yes" xml:space="preserve">
          <source>By default field values are treated as mapping to an attribute on the object. If you need to customize how the field value is accessed and set you need to override &lt;code&gt;.get_attribute()&lt;/code&gt; and/or &lt;code&gt;.get_value()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3a0ddbb3ec855c5b89ac5cf71c5c17ea123dca" translate="yes" xml:space="preserve">
          <source>By default hyperlinks are expected to correspond to a view name that matches the style &lt;code&gt;'{model_name}-detail'&lt;/code&gt;, and looks up the instance by a &lt;code&gt;pk&lt;/code&gt; keyword argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ca3c04ed6e7e2ff6f0f93e2539834bc2173ecd" translate="yes" xml:space="preserve">
          <source>By default nested serializers are read-only. If you want to support write-operations to a nested serializer field you'll need to create &lt;code&gt;create()&lt;/code&gt; and/or &lt;code&gt;update()&lt;/code&gt; methods in order to explicitly specify how the child relationships should be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2977f1a0ed5e8e6a808b13168856d3ab2355bb9" translate="yes" xml:space="preserve">
          <source>By default only &lt;code&gt;GET&lt;/code&gt; methods will be accepted. Other methods will respond with &quot;405 Method Not Allowed&quot;. To alter this behaviour, specify which methods the view allows, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b10931dab70741ed333c3eef6dcdfb566bcf5f" translate="yes" xml:space="preserve">
          <source>By default renderer classes are assumed to be using the &lt;code&gt;UTF-8&lt;/code&gt; encoding. To use a different encoding, set the &lt;code&gt;charset&lt;/code&gt; attribute on the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d84b35cd6a0c82387c454cdcaa2535493c6705" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;ListSerializer&lt;/code&gt; class does not support multiple updates. This is because the behavior that should be expected for insertions and deletions is ambiguous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422fe234aee64d405a54695e47d908df0d343b72" translate="yes" xml:space="preserve">
          <source>By default the URLs created by &lt;code&gt;SimpleRouter&lt;/code&gt; are appended with a trailing slash. This behavior can be modified by setting the &lt;code&gt;trailing_slash&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; when instantiating the router. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428bd0833c9d8a1e605e61568c31b464e2d6de65" translate="yes" xml:space="preserve">
          <source>By default the available formats are &lt;code&gt;'multipart'&lt;/code&gt; and &lt;code&gt;'json'&lt;/code&gt;. For compatibility with Django's existing &lt;code&gt;RequestFactory&lt;/code&gt; the default format is &lt;code&gt;'multipart'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c1bc115bad7eaf3727600a57d85c802776227c" translate="yes" xml:space="preserve">
          <source>By default the response content will be rendered with the highest priority renderer apart from &lt;code&gt;BrowsableAPIRenderer&lt;/code&gt;. If you need to customize this behavior, for example to use HTML as the default return format, but use JSON in the browsable API, you can do so by overriding the &lt;code&gt;get_default_renderer()&lt;/code&gt; method. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5577313017e9493388560f18d0f3c07bda33dc6b" translate="yes" xml:space="preserve">
          <source>By default the serializer will include a &lt;code&gt;url&lt;/code&gt; field instead of a primary key field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ae53098f0abc1686b2c10040d348b526eb56fe" translate="yes" xml:space="preserve">
          <source>By default there are no permissions or throttling applied to the &lt;code&gt;obtain_auth_token&lt;/code&gt; view. If you do wish to apply throttling you'll need to override the view class, and include them using the &lt;code&gt;throttle_classes&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e5b6a0a08e9b57a60944a9c913fc31a537366f" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;400 Bad Request&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9906d679eae99b3c9d4cbf1a024903fd3fbb2a9" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;401 Unauthenticated&quot;, but it may also result in a &quot;403 Forbidden&quot; response, depending on the authentication scheme in use. See the &lt;a href=&quot;../authentication/index&quot;&gt;authentication documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00aa4245e69b8c2c9db61a61441a0a16d6c366b" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;403 Forbidden&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c9b11d7c9da258f4beb412db76e73840a5f5ac" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;404 Not Found&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba66c1e27aa44b1f68d16215667de914dba6662" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;405 Method Not Allowed&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d887baa7aa460b4b8a81c73c65e85acc4577bad3" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;406 Not Acceptable&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b74174a046c45625b7afda8a0d9ec133d8d0c3" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;415 Unsupported Media Type&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e994427ca30dff63778934518718734cb4860a8" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;429 Too Many Requests&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262f7b008609d6c6cdf297aed10147cbb8be7212" translate="yes" xml:space="preserve">
          <source>By default this field is read-write, although you can change this behavior using the &lt;code&gt;read_only&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2267923fa4eb8dabad064e76d0d8cd78d402680" translate="yes" xml:space="preserve">
          <source>By default this implementation expects the hostname to match this simple regular expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7031b3d7874ab52801301e93f7ad8ae316ba6a3" translate="yes" xml:space="preserve">
          <source>By default this will include the following keys: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;kwargs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8351aae53c308384ff507a5a6d2e08cb2f046943" translate="yes" xml:space="preserve">
          <source>By default this will include the following keys: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;response&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;kwargs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7c83b8f70ef037e2352eb5a903a2d2aa2b6e71" translate="yes" xml:space="preserve">
          <source>By default using the pagination classes will cause HTML pagination controls to be displayed in the browsable API. There are two built-in display styles. The &lt;code&gt;PageNumberPagination&lt;/code&gt; and &lt;code&gt;LimitOffsetPagination&lt;/code&gt; classes display a list of page numbers with previous and next controls. The &lt;code&gt;CursorPagination&lt;/code&gt; class displays a simpler style that only displays a previous and next control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3420a49eb47a93d90cbffca87d64d9eb61d19b31" translate="yes" xml:space="preserve">
          <source>By default, all the model fields on the class will be mapped to a corresponding serializer fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054e2533d55a78f3900ddc622e047c9195deaeca" translate="yes" xml:space="preserve">
          <source>By default, relational fields that target a &lt;code&gt;ManyToManyField&lt;/code&gt; with a &lt;code&gt;through&lt;/code&gt; model specified are set to read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f3faa142677f480747c9b827d58417ea80de87" translate="yes" xml:space="preserve">
          <source>By default, requests created with &lt;code&gt;APIRequestFactory&lt;/code&gt; will not have CSRF validation applied when passed to a REST framework view. If you need to explicitly turn CSRF validation on, you can do so by setting the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; flag when instantiating the factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69db42e63c3a80e6aed954e2a62d5be8facb833d" translate="yes" xml:space="preserve">
          <source>By default, searches will use case-insensitive partial matches. The search parameter may contain multiple search terms, which should be whitespace and/or comma separated. If multiple search terms are used then objects will be returned in the list only if all the provided terms are matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedda41ff570585eadeb08064c10fdd4177e5a23" translate="yes" xml:space="preserve">
          <source>By default, serializers must be passed values for all required fields or they will raise validation errors. You can use the &lt;code&gt;partial&lt;/code&gt; argument in order to allow partial updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945e8544adc6b221fdeab1f921abcff4f8087a96" translate="yes" xml:space="preserve">
          <source>By default, the URL pattern is based on the method name, and the URL name is the combination of the &lt;code&gt;ViewSet.basename&lt;/code&gt; and the hyphenated method name. If you don't want to use the defaults for either of these values, you can instead provide the &lt;code&gt;url_path&lt;/code&gt; and &lt;code&gt;url_name&lt;/code&gt; arguments to the &lt;code&gt;@action&lt;/code&gt; decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac2aa344841e03a5ce50139a10f00af2df10052" translate="yes" xml:space="preserve">
          <source>By default, the query parameter is named &lt;code&gt;'ordering'&lt;/code&gt;, but this may by overridden with the &lt;code&gt;ORDERING_PARAM&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98436bb092768a173ffe892c7e9cc9ee55a03c3" translate="yes" xml:space="preserve">
          <source>By default, the search parameter is named &lt;code&gt;'search'&lt;/code&gt;, but this may be overridden with the &lt;code&gt;SEARCH_PARAM&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9c7662faf95ae927cd04822f9e70f25620e354" translate="yes" xml:space="preserve">
          <source>By default, versioning is not enabled, and &lt;code&gt;request.version&lt;/code&gt; will always return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0593d20f1b8df0dde1732d11ee6d5dc18143738" translate="yes" xml:space="preserve">
          <source>By default, view introspection is performed by an &lt;code&gt;AutoSchema&lt;/code&gt; instance accessible via the &lt;code&gt;schema&lt;/code&gt; attribute on &lt;code&gt;APIView&lt;/code&gt;. This provides the appropriate &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operationObject&quot;&gt;Open API operation object&lt;/a&gt; for the view, request method and path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a917f3d61aefddc8ec6cf79b0a6b4607ff50b0" translate="yes" xml:space="preserve">
          <source>By exposing an api endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140d4c5c6509f65a82cd90ec22bc5f88a5c5e988" translate="yes" xml:space="preserve">
          <source>By using routers, we no longer need to deal with wiring up the URL conf ourselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9427874c561ee5a822fe423813ce64486abd97f" translate="yes" xml:space="preserve">
          <source>By using signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d878a98505710c36df1fe7705152dea7db0a4f" translate="yes" xml:space="preserve">
          <source>COERCE_DECIMAL_TO_STRING</source>
          <target state="translated">COERCE_DECIMAL_TO_STRING</target>
        </trans-unit>
        <trans-unit id="b24f639be98c3c98e22015a99626669532dea2fb" translate="yes" xml:space="preserve">
          <source>COMPACT_JSON</source>
          <target state="translated">COMPACT_JSON</target>
        </trans-unit>
        <trans-unit id="efdcba0fe786b2be5708383d9452f98b6311b80a" translate="yes" xml:space="preserve">
          <source>CSRF</source>
          <target state="translated">CSRF</target>
        </trans-unit>
        <trans-unit id="343fb5d0659da08132da35cba41ebd5a4f1b625a" translate="yes" xml:space="preserve">
          <source>CSRF validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea9227e9470556fb2423a61ff6a9a0815e98ed8" translate="yes" xml:space="preserve">
          <source>CSRF validation in REST framework works slightly differently to standard Django due to the need to support both session and non-session based authentication to the same views. This means that only authenticated requests require CSRF tokens, and anonymous requests may be sent without CSRF tokens. This behaviour is not suitable for login views, which should always have CSRF validation applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="788255dde90b6eb3efaff8c73d21bb3448175b4f" translate="yes" xml:space="preserve">
          <source>Caching in REST Framework works well with the cache utilities provided in Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2586a9e4e3ba9092547e3eac14e105c5ffbda37b" translate="yes" xml:space="preserve">
          <source>Cadre</source>
          <target state="translated">Cadre</target>
        </trans-unit>
        <trans-unit id="107d4468335bf891f9faeee3d18053952d77218d" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field for the serializer's own &lt;code&gt;url&lt;/code&gt; field. The default implementation returns a &lt;code&gt;HyperlinkedIdentityField&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af39f2d8837dd8d46bf3493fd13ce29237e9c609" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a property or zero-argument method on the model class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbe89ef09ad7ef8822fbca44feed3aab8034cd9" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a relational model field, when the &lt;code&gt;depth&lt;/code&gt; option has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bfe960557481df1786a706f0b4c90eea9da3d9" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a relational model field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49d82ca2e86a52f2f4010a9188ec3e798e06986" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a standard model field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f831acc6b71103966be887ce768cc6d744024767" translate="yes" xml:space="preserve">
          <source>Called when the field name did not map to any model field or model property. The default implementation raises an error, although subclasses may customize this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4d1788659ab0df8f21f2f6552ed5cc34cd980d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.save()&lt;/code&gt; will either create a new instance, or update an existing instance, depending on if an existing instance was passed when instantiating the serializer class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c93cc6cc9e049066b90d27870946a4376bb0f60" translate="yes" xml:space="preserve">
          <source>CamelCase JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233d4b443209f18da118e113d04dec9905a2abc4" translate="yes" xml:space="preserve">
          <source>Can't wait to get started? The &lt;a href=&quot;tutorial/quickstart/index&quot;&gt;quickstart guide&lt;/a&gt; is the fastest way to get up and running, and building APIs with REST framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59522bcf90b57fb18b3f9fc956016970eb7a5aa3" translate="yes" xml:space="preserve">
          <source>Changing the URL field name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3867f011be69d215d29bce2965e2daa03f4ebf8f" translate="yes" xml:space="preserve">
          <source>CharField</source>
          <target state="translated">CharField</target>
        </trans-unit>
        <trans-unit id="09db451be16ac6c8f4525600cd5a7d022956f044" translate="yes" xml:space="preserve">
          <source>Checking the response data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ab83a60c1d19a608173852e84f2332cfedfb3a" translate="yes" xml:space="preserve">
          <source>Choice selection fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bbb2b068053dfe0061c5d1e103e08687b3b718" translate="yes" xml:space="preserve">
          <source>ChoiceField</source>
          <target state="translated">ChoiceField</target>
        </trans-unit>
        <trans-unit id="fc6a90731120b2333b1676ed519fa1dad348f940" translate="yes" xml:space="preserve">
          <source>Class-based</source>
          <target state="translated">Class-based</target>
        </trans-unit>
        <trans-unit id="b78d8a2b5a3807690bcee7438a97617effbcb0d3" translate="yes" xml:space="preserve">
          <source>Class-based Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e73a3f7c80791c5e0529bed897df43b80ffa059" translate="yes" xml:space="preserve">
          <source>Client Error - 4xx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983babb29cf4f6b20a671e5d80156a1a40ecb391" translate="yes" xml:space="preserve">
          <source>Code snippets are always associated with a creator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0d607a9d010ee2a9a1aed58cd8279f6420072b" translate="yes" xml:space="preserve">
          <source>Code without tests is broken as designed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9d18d75961e9c7b19644cf57f71d183e2b756f" translate="yes" xml:space="preserve">
          <source>Comma-separated values are a plain-text tabular data format, that can be easily imported into spreadsheet applications. &lt;a href=&quot;https://github.com/mjumbewu&quot;&gt;Mjumbe Poe&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/mjumbewu/django-rest-framework-csv&quot;&gt;djangorestframework-csv&lt;/a&gt; package which provides CSV renderer support for REST framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bb79c1d34846e9fe55e7c1396f134145bacd06" translate="yes" xml:space="preserve">
          <source>Composed Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1c81b269a5d555c93c97a6ea39c518ad50f1b5" translate="yes" xml:space="preserve">
          <source>Composite fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b8fddaa862fea66cc9a74eb801d8f4ff8531f4" translate="yes" xml:space="preserve">
          <source>Concrete View Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="c80d4dc472df4edefab6138841a61774028bb676" translate="yes" xml:space="preserve">
          <source>Configuration for REST framework is all namespaced inside a single Django setting, named &lt;code&gt;REST_FRAMEWORK&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d0f209e424e2ac559c403dd16975a00b6416a1" translate="yes" xml:space="preserve">
          <source>Configuring the versioning scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893f1c3ab053ed8cdb51bb027bcc5a9aafc0de2f" translate="yes" xml:space="preserve">
          <source>Consult your web server's documentation for information about configuring an authentication method, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a5b02fc5865df6d33b3a0dd8b7b5896602250e" translate="yes" xml:space="preserve">
          <source>Content negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25893afed7cf66cc447350b4a187e1eb8230a37c" translate="yes" xml:space="preserve">
          <source>Content negotiation is the process of selecting one of multiple possible representations to return to a client, based on client or server preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d323d4a602fe0c94a742497bffdc2610cdb9ba" translate="yes" xml:space="preserve">
          <source>Content type controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ee595ab66fd6c7e896c59da1b8f772d5e32b70" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2011&amp;ndash;present Encode OSS Ltd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43441b36d0708cafe5ff9986485c53cd9a017faa" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2011-present, &lt;a href=&quot;https://www.encode.io/&quot;&gt;Encode OSS Ltd&lt;/a&gt;. All rights reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77a38148fa274cafe129706f2ddf21cb576bcfe" translate="yes" xml:space="preserve">
          <source>Core arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0c0f6e00888f11d8b1d625db68dc22f18d0447" translate="yes" xml:space="preserve">
          <source>CoreAPIClient</source>
          <target state="translated">CoreAPIClient</target>
        </trans-unit>
        <trans-unit id="16f1a08f10b2d379974b982175b1c770eb56163c" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.BooleanField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d4f09703cbd0906dc1c70a76bd46f3f1311c44" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.CharField&lt;/code&gt; or &lt;code&gt;django.db.models.fields.TextField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986f859ced898736aa0da8f5913c7f9c646595ae" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.DateField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fd85db2a2555ec06cf5db6493170dd499bc470" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.DateTimeField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663b340707f5dd7bf6c0d2066c75694eb276ce50" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.DecimalField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df458c63e88da9c0042cb9a3d7d55076ccc775df" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.EmailField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2663c87ce9757861bcd6075be38c62503551d81" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.FloatField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac975ab1297cae6bfc9184a3a7afffe982fc2a4" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.IntegerField&lt;/code&gt;, &lt;code&gt;django.db.models.fields.SmallIntegerField&lt;/code&gt;, &lt;code&gt;django.db.models.fields.PositiveIntegerField&lt;/code&gt; and &lt;code&gt;django.db.models.fields.PositiveSmallIntegerField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e98122b65f7b743dd650ed86c0225a4950c4544" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.NullBooleanField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8304ecc40d693a7a60c559c8c9ee4955ffe9358" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.SlugField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f791bdd8aae816b4927b623d02824b47003b6db" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.TimeField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d47d94e6ecb94841e11dad781ec655252ac03bb" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.URLField&lt;/code&gt;. Uses Django's &lt;code&gt;django.core.validators.URLValidator&lt;/code&gt; for validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8016babc00573f72f18fa3326beb5e900cb9f32" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.FileField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e40b6eedc4c74adc0ddef659375f41b05ec77b" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.FilePathField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57e5e501f4ffe1f90eeb2e36336acd427364f91" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.IPAddressField&lt;/code&gt; and &lt;code&gt;django.forms.fields.GenericIPAddressField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57600969d01ce49b5a9a2aeb5d0afc205bd04081" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.ImageField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eac665df3eb8df460e9f262a371339f5850b42d" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.RegexField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d38ed88ab47fac9001ea5cb27390c6a930e9679" translate="yes" xml:space="preserve">
          <source>Create a new Django project named &lt;code&gt;tutorial&lt;/code&gt;, then start a new app called &lt;code&gt;quickstart&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66074e1c2da370e426bea769cf2b4a1dacbc173" translate="yes" xml:space="preserve">
          <source>CreateAPIView</source>
          <target state="translated">CreateAPIView</target>
        </trans-unit>
        <trans-unit id="6d3b732e19052031ab023951b18df2d6f6da527d" translate="yes" xml:space="preserve">
          <source>CreateModelMixin</source>
          <target state="translated">CreateModelMixin</target>
        </trans-unit>
        <trans-unit id="38e6ac1d4c559f2bfff28b670222f6282642ae42" translate="yes" xml:space="preserve">
          <source>CreateOnlyDefault</source>
          <target state="translated">CreateOnlyDefault</target>
        </trans-unit>
        <trans-unit id="42aa6f2f196f462332cfe04a56991a6b3fd6929f" translate="yes" xml:space="preserve">
          <source>Creating a Serializer class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc954c868910c3e6f10db9c834644df85b537b1b" translate="yes" xml:space="preserve">
          <source>Creating a model to work with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87717206a3306e6933a28aba290ae418e328d3f5" translate="yes" xml:space="preserve">
          <source>Creating an endpoint for the highlighted snippets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d444b7d4f26cca5e9a7c40883875586bb8c7e6" translate="yes" xml:space="preserve">
          <source>Creating an endpoint for the root of our API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7df9c17e3c7446423379ca5c4aa42d9d3716527" translate="yes" xml:space="preserve">
          <source>Creating custom base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc07edc8eeb0a1b97184ce297c6d4e524046dd6e" translate="yes" xml:space="preserve">
          <source>Creating custom mixins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ee3699c39261517354eabf93e9410456e44a49" translate="yes" xml:space="preserve">
          <source>Creating new base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3d73f81dff5b6e2fbde3ee77f302d1aff9cc76" translate="yes" xml:space="preserve">
          <source>Creating responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90f4d4664ab58b29a831f6fed1d6241e66b3492" translate="yes" xml:space="preserve">
          <source>Creating schema endpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff192399aad9d751c6c81882ce86dfd6f24390d" translate="yes" xml:space="preserve">
          <source>Creating test requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edc409607c6d95ac387b265b14527f8daed7e4a" translate="yes" xml:space="preserve">
          <source>CurrentUserDefault</source>
          <target state="translated">CurrentUserDefault</target>
        </trans-unit>
        <trans-unit id="654b92dced9e6317d81d6f17d9ac4a34fbea5b92" translate="yes" xml:space="preserve">
          <source>Currently our API doesn't have any restrictions on who can edit or delete code snippets. We'd like to have some more advanced behavior in order to make sure that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb56a4e5630324c41b0bf4f5ff5022f4b4f38c5" translate="yes" xml:space="preserve">
          <source>Cursor based pagination is more complex than other schemes. It also requires that the result set presents a fixed ordering, and does not allow the client to arbitrarily index into the result set. However it does provide the following benefits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45828243fbec6c251b7a981dfb1d3f3f6427ba1" translate="yes" xml:space="preserve">
          <source>Cursor based pagination requires that there is a unique, unchanging ordering of items in the result set. This ordering might typically be a creation timestamp on the records, as this presents a consistent ordering to paginate against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb13266289a033469da54ce6d4976c7434e1ae35" translate="yes" xml:space="preserve">
          <source>CursorPagination</source>
          <target state="translated">CursorPagination</target>
        </trans-unit>
        <trans-unit id="7d4e4042402db652eb9245c2378f0292ebd1cee9" translate="yes" xml:space="preserve">
          <source>Custom Routers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bb877ba85d5d1ff392a7029f21841909dbfe58" translate="yes" xml:space="preserve">
          <source>Custom ViewSet base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8e5a8850c6aad38be4e2ef13d877780ac9f21e" translate="yes" xml:space="preserve">
          <source>Custom actions which use the &lt;code&gt;@action&lt;/code&gt; decorator will respond to &lt;code&gt;GET&lt;/code&gt; requests by default. We can use the &lt;code&gt;methods&lt;/code&gt; argument if we wanted an action that responded to &lt;code&gt;POST&lt;/code&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b50487892f03ddf6db3b4e145a03b7bf0c92fc" translate="yes" xml:space="preserve">
          <source>Custom authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179628bd33f8cebac22206cc93d91dfa0b38b842" translate="yes" xml:space="preserve">
          <source>Custom content negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114a2c7a23b8613c909c2966e5d1f8776ceb8aa6" translate="yes" xml:space="preserve">
          <source>Custom exception handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f86d5227e987ad9feec36387a01f71ac50987e" translate="yes" xml:space="preserve">
          <source>Custom fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314eb2fd8e880e115ac73bff5e65ce63165b2c66" translate="yes" xml:space="preserve">
          <source>Custom generic filtering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa4b782d13bf92ffc16e0ea732a217c135836ee" translate="yes" xml:space="preserve">
          <source>Custom headers and authentication credentials can be provided in the same way as &lt;a href=&quot;http://docs.python-requests.org/en/master/user/advanced/#session-objects&quot;&gt;when using a standard &lt;code&gt;requests.Session&lt;/code&gt; instance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6933b0773aea474742217fdd32ce9fb866409b" translate="yes" xml:space="preserve">
          <source>Custom headers and authentication may be used with &lt;code&gt;CoreAPIClient&lt;/code&gt; in a similar way as with &lt;code&gt;RequestsClient&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918b6a2c19d2a8f7f57b00f35fabd3f0c1a9bd6f" translate="yes" xml:space="preserve">
          <source>Custom hyperlinked fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67acda0daebe678eee3d16e2a81316bbcfbcaca6" translate="yes" xml:space="preserve">
          <source>Custom metadata classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456ec865e6093f33303547c98a849c74d08d61d1" translate="yes" xml:space="preserve">
          <source>Custom pagination styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3d495e32da9c04ad26c7c747b0a2bd7b66a815" translate="yes" xml:space="preserve">
          <source>Custom parsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac0aaaaa8bf55e8fcc051ed1bc33ea819de9179" translate="yes" xml:space="preserve">
          <source>Custom permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7fbe8fccfea29e56500ecb22b32e55e6010b76" translate="yes" xml:space="preserve">
          <source>Custom permissions will raise a &lt;code&gt;PermissionDenied&lt;/code&gt; exception if the test fails. To change the error message associated with the exception, implement a &lt;code&gt;message&lt;/code&gt; attribute directly on your custom permission. Otherwise the &lt;code&gt;default_detail&lt;/code&gt; attribute from &lt;code&gt;PermissionDenied&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dcd3c4fbe0440b087a44ad0ac9785e8d426dd7" translate="yes" xml:space="preserve">
          <source>Custom relational fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa29bcc5d72075e2914f8d647b10835288a247f" translate="yes" xml:space="preserve">
          <source>Custom renderers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108e2325ce05d7269106b549ddd095241604d9d6" translate="yes" xml:space="preserve">
          <source>Custom throttles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bf91557a40b583febdf741d4a41cf601998a52" translate="yes" xml:space="preserve">
          <source>Custom versioning schemes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fa0d10db5c6b52d2f9b992c126f171c873b647" translate="yes" xml:space="preserve">
          <source>Customizable all the way down - just use &lt;a href=&quot;api-guide/views#function-based-views&quot;&gt;regular function-based views&lt;/a&gt; if you don't need the &lt;a href=&quot;api-guide/generic-views/index&quot;&gt;more&lt;/a&gt;&lt;a href=&quot;api-guide/viewsets/index&quot;&gt;powerful&lt;/a&gt;&lt;a href=&quot;api-guide/routers/index&quot;&gt;features&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4c9b141107d07307784903144ff6216215d802" translate="yes" xml:space="preserve">
          <source>Customizing BrowsableAPIRenderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc76b6181b81dd5962b0957e6a67d1e7496c43f3" translate="yes" xml:space="preserve">
          <source>Customizing ListSerializer behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e61eebc8787faee6462027d2d274378f5d6588" translate="yes" xml:space="preserve">
          <source>Customizing ListSerializer initialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f0b97fcf4b54e9e2b15f97201400a3b7640845" translate="yes" xml:space="preserve">
          <source>Customizing Schema Generation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b8b10ead3a32ade21895dd22bf0f4ba38a8931" translate="yes" xml:space="preserve">
          <source>Customizing dynamic routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ff75bee1cae6b62910a8e686d6e7dafda2281c" translate="yes" xml:space="preserve">
          <source>Customizing field mappings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396a35b2d7548a8b76e8798f24395c99be8a15d5" translate="yes" xml:space="preserve">
          <source>Customizing multiple create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f9791b10bde0213cb5850767b46abaa5e092be" translate="yes" xml:space="preserve">
          <source>Customizing multiple update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bca0f10ac0f0e46dc848849686aa5b46c421b25" translate="yes" xml:space="preserve">
          <source>Customizing the HTML display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c1d62e07899886f9378c4e8dff0045fc97d80f" translate="yes" xml:space="preserve">
          <source>Customizing the controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9502b39a59fe54dc1b5a8c8323ba42c380712ec" translate="yes" xml:space="preserve">
          <source>Customizing the default fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4b717b6bb210cc473f1a4d36b6bad9fe9989ee" translate="yes" xml:space="preserve">
          <source>Customizing the generic views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303a919695f360b43e6437a1c00dcbe908fdd5f5" translate="yes" xml:space="preserve">
          <source>Customizing the interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c3042859c18a1ca3f21d618e7d01cefb664805" translate="yes" xml:space="preserve">
          <source>DATETIME_FORMAT</source>
          <target state="translated">DATETIME_FORMAT</target>
        </trans-unit>
        <trans-unit id="21059f4afcb403f577508f77e6b841799e7de00e" translate="yes" xml:space="preserve">
          <source>DATETIME_INPUT_FORMATS</source>
          <target state="translated">DATETIME_INPUT_FORMATS</target>
        </trans-unit>
        <trans-unit id="35afffbfe97473f23d31d6e449cd8a9a0af5eb64" translate="yes" xml:space="preserve">
          <source>DATE_FORMAT</source>
          <target state="translated">DATE_FORMAT</target>
        </trans-unit>
        <trans-unit id="28a546dafec26a6bd9ed9d7d006211611038b0f4" translate="yes" xml:space="preserve">
          <source>DATE_INPUT_FORMATS</source>
          <target state="translated">DATE_INPUT_FORMATS</target>
        </trans-unit>
        <trans-unit id="4ef0f9567a1913a34269aa90a3efc076a57f5370" translate="yes" xml:space="preserve">
          <source>DEFAULT_AUTHENTICATION_CLASSES</source>
          <target state="translated">DEFAULT_AUTHENTICATION_CLASSES</target>
        </trans-unit>
        <trans-unit id="63ddff9d63f9b2cacc83b93a6998399961ff6ca8" translate="yes" xml:space="preserve">
          <source>DEFAULT_CONTENT_NEGOTIATION_CLASS</source>
          <target state="translated">DEFAULT_CONTENT_NEGOTIATION_CLASS</target>
        </trans-unit>
        <trans-unit id="eb57d48c0c6925a6320dedccd7ad96db43621035" translate="yes" xml:space="preserve">
          <source>DEFAULT_FILTER_BACKENDS</source>
          <target state="translated">DEFAULT_FILTER_BACKENDS</target>
        </trans-unit>
        <trans-unit id="0e89c770e5b790faff4310d0b3397f880da92181" translate="yes" xml:space="preserve">
          <source>DEFAULT_PAGINATION_CLASS</source>
          <target state="translated">DEFAULT_PAGINATION_CLASS</target>
        </trans-unit>
        <trans-unit id="63998194da3c67b872c93d9e8f9ebf0f0f799a69" translate="yes" xml:space="preserve">
          <source>DEFAULT_PARSER_CLASSES</source>
          <target state="translated">DEFAULT_PARSER_CLASSES</target>
        </trans-unit>
        <trans-unit id="b0a0bf5c1061674954c158ea0f0b6224128908c8" translate="yes" xml:space="preserve">
          <source>DEFAULT_PERMISSION_CLASSES</source>
          <target state="translated">DEFAULT_PERMISSION_CLASSES</target>
        </trans-unit>
        <trans-unit id="20f7b4931557b57337769e7bfd32e8ff37eba7f2" translate="yes" xml:space="preserve">
          <source>DEFAULT_RENDERER_CLASSES</source>
          <target state="translated">DEFAULT_RENDERER_CLASSES</target>
        </trans-unit>
        <trans-unit id="aeda38b5b0ee0b0fc4f8d9a7f9b4ac1e471387b7" translate="yes" xml:space="preserve">
          <source>DEFAULT_SCHEMA_CLASS</source>
          <target state="translated">DEFAULT_SCHEMA_CLASS</target>
        </trans-unit>
        <trans-unit id="122e42d0540691b90c564cc0f63e8e36e7f5ef56" translate="yes" xml:space="preserve">
          <source>DEFAULT_THROTTLE_CLASSES</source>
          <target state="translated">DEFAULT_THROTTLE_CLASSES</target>
        </trans-unit>
        <trans-unit id="0cd0dd3d1869b02d70767afdf9a0c8eee24924a2" translate="yes" xml:space="preserve">
          <source>DEFAULT_VERSION</source>
          <target state="translated">DEFAULT_VERSION</target>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="7139f05bf3942ef1bd4ba479220f0365d1e18225" translate="yes" xml:space="preserve">
          <source>DRF - Access Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba5776c126811e5a62da0146e1d95102d3d9ac3" translate="yes" xml:space="preserve">
          <source>DRF Compound Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da5f19d4d0027f6380047a53d96b7bac371702d" translate="yes" xml:space="preserve">
          <source>DRF Extra Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ee82dcccd12ccc2d2f393440c649f6a58b90b7" translate="yes" xml:space="preserve">
          <source>DRF FlexFields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf95da8f735fdde863b4f042bfc71b5a6bdc25bd" translate="yes" xml:space="preserve">
          <source>DRF Nested Routers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3857a7108c0d88fbed132280379e05884b7893b2" translate="yes" xml:space="preserve">
          <source>DRF Writable Nested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457a3201c3490c32fdc2ec04936bc61bc13039d5" translate="yes" xml:space="preserve">
          <source>DRF-Base64</source>
          <target state="translated">DRF-Base64</target>
        </trans-unit>
        <trans-unit id="ecbe365faeb9961ec5b0bb5f0cbb4aaff5553fcb" translate="yes" xml:space="preserve">
          <source>DRF-extensions</source>
          <target state="translated">DRF-extensions</target>
        </trans-unit>
        <trans-unit id="48582ac3bf61b0496d55fec1484562752af10b39" translate="yes" xml:space="preserve">
          <source>DRF-schema-adapter</source>
          <target state="translated">DRF-schema-adapter</target>
        </trans-unit>
        <trans-unit id="1606826c28c68b72b3e91a11cb5f226e06b346f9" translate="yes" xml:space="preserve">
          <source>DRY Rest Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842e4cbc91141f8af241b62f2cd2117cedd31cd3" translate="yes" xml:space="preserve">
          <source>Data structures, not algorithms, are central to programming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9da1c44029d7c7e762adc8ae81a82ecaf9bff4" translate="yes" xml:space="preserve">
          <source>Date and time fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daa6ae4a628ab1c6f403ecfd6677e3e81fa1a6c" translate="yes" xml:space="preserve">
          <source>Date and time formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39285aa5d1cf5a1fca924401b3659da7b60e1960" translate="yes" xml:space="preserve">
          <source>DateField</source>
          <target state="translated">DateField</target>
        </trans-unit>
        <trans-unit id="b7234c3c04adf27a199747ce86d75aad0a944ae6" translate="yes" xml:space="preserve">
          <source>DateField format strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f53a7866e0d1cd0fcd822e7416f62051b2b596" translate="yes" xml:space="preserve">
          <source>DateTimeField</source>
          <target state="translated">DateTimeField</target>
        </trans-unit>
        <trans-unit id="79298ed3fc357a79209f42ed52972b2e14749aec" translate="yes" xml:space="preserve">
          <source>DateTimeField format strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be521ff5cce3e345e5697b61779aae5412bfd58f" translate="yes" xml:space="preserve">
          <source>Dealing with multiple objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3f2d7b6f3770373fd618026bcee42b004fb7cb" translate="yes" xml:space="preserve">
          <source>Dealing with nested objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdf75c752c12f8f0574410ccb46c2c86388e568" translate="yes" xml:space="preserve">
          <source>Dealing with relationships between entities is one of the more challenging aspects of Web API design. There are a number of different ways that we might choose to represent a relationship:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d223b08894bb091b9543c6e86622187a78fe17" translate="yes" xml:space="preserve">
          <source>Debugging complex cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae9e6d08648981451e31d69171cf362e0a1e0fd" translate="yes" xml:space="preserve">
          <source>DecimalField</source>
          <target state="translated">DecimalField</target>
        </trans-unit>
        <trans-unit id="1323e56f4ee628f7d08380a29004b1e74f370fbf" translate="yes" xml:space="preserve">
          <source>Declaring Serializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642675f49d73e335723a0a5eb6b8103effda8773" translate="yes" xml:space="preserve">
          <source>Declaring a &lt;code&gt;ModelSerializer&lt;/code&gt; looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc374162e52457b10eb5dd2637af9ec7ab0b67e" translate="yes" xml:space="preserve">
          <source>Declaring a serializer looks very similar to declaring a form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="a75337aa8e9e7d9de1d51649f390cfc4c2036b71" translate="yes" xml:space="preserve">
          <source>Default: 1000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8a2da95ecee77e08c6887656a1f7e306396669" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;&quot;More than {count} items...&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b43dc94240f0eac3ff99296e94b68d846a85d7" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'format'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a7459af044aed7385ae74fca00ebe99823a324" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'iso-8601'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73481dcfb189774b2044998682e3c0798d143fc8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'multipart'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f396fb0021adc6ab25ed022a184fc3fa911c5680" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'non_field_errors'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef6f2f0ecffb7e6e6dfb0ddbd1aa078a121f679" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.negotiation.DefaultContentNegotiation'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20ea103965a3929dc9055b7ae4c86275f7ebf7c" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.schemas.AutoSchema'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97750df22ae08b037a2668a93af65ef9f5be2ee0" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.views.exception_handler'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06e7cf2910c035a200edb0757d7d85e0734c82c" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.views.get_view_description'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe593653a60197320013ee02734221498c67d28" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.views.get_view_name'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989edb988bdb8e20d8cb6fc4b7630e075ba64f94" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'url'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0862d00c642f600905a513d149dd41a60b478fac" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'version'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4f64360906e7f1452e75f1085dc507b2bff801" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8ca82e4a52fce1712b0adec6141e66b586eb41" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0781b5adccd6d0f6f2b1285100f13f614e26b62" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;['iso-8601']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffa1281e650e63433a7c2437e7f3068376e6c83" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81676f6a57f3dc94d298ad0f87853b7adfa3791d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;django.contrib.auth.models.AnonymousUser&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07630cda93e600807a0e7fde2c134d865ad92ee0" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;ordering&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44edcd736cfd7e19e5c05ac400b9259e6e5d2b51" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;search&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d28234e539c94715d7f4e74c2047260441d56" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{'retrieve': 'read', 'destroy': 'delete'}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684d0cdc1ebdfd17dc0658c2be41f090f61da56d" translate="yes" xml:space="preserve">
          <source>DefaultRouter</source>
          <target state="translated">DefaultRouter</target>
        </trans-unit>
        <trans-unit id="588f811977e78e2306235dd703556ced59dedf17" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff337cc61a33d1de8550e8b38d516a56b2c6f76" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7a711d44932d0696f926eddee55ca5c4ea625f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;serializers.ChoiceField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eeb5b4db43923d58ac592d457914ef3e03ffbd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;serializers.HyperlinkedIdentityField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e528b5a5b6f80e21687c62fdaf2010800f00e46e" translate="yes" xml:space="preserve">
          <source>Defaults to the name of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd1a2d76f220c8115b2721f195d52e376329aaf" translate="yes" xml:space="preserve">
          <source>Delete the associated instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30714db6fe6329f7085bf73f779b59d3d779974c" translate="yes" xml:space="preserve">
          <source>Depending on the client's &lt;code&gt;Accept:&lt;/code&gt; header, this may be more specific than the renderer's &lt;code&gt;media_type&lt;/code&gt; attribute, and may include media type parameters. For example &lt;code&gt;&quot;application/json; nested=true&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7a6e85e88a5a6fa909688b480188188fd3793d" translate="yes" xml:space="preserve">
          <source>Depending on the request's &lt;code&gt;Content-Type:&lt;/code&gt; header, this may be more specific than the renderer's &lt;code&gt;media_type&lt;/code&gt; attribute, and may include media type parameters. For example &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa93dfb1b8e7a4ef20cf07c512da27ea204ec87" translate="yes" xml:space="preserve">
          <source>Deserialising:</source>
          <target state="translated">Deserialising:</target>
        </trans-unit>
        <trans-unit id="eebb6cd8621ad551debba81fe2a635169d63bdcf" translate="yes" xml:space="preserve">
          <source>Deserialization is similar. First we parse a stream into Python native datatypes...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11351f44fcc8bba476c855bbb73d00cc5b797bad" translate="yes" xml:space="preserve">
          <source>Deserializing multiple objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18781ad0f4929a85d5fb4ef9ac32b53395e22ed2" translate="yes" xml:space="preserve">
          <source>Deserializing objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec588ebb50851865a863d6f3d5ff4fc7f705e2c1" translate="yes" xml:space="preserve">
          <source>Designing your media types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dc06df305d330dfbc455546e986dcdb1262d0d" translate="yes" xml:space="preserve">
          <source>DestroyAPIView</source>
          <target state="translated">DestroyAPIView</target>
        </trans-unit>
        <trans-unit id="c9c987f3ddb2cb6850ed5834e051183fd2244b31" translate="yes" xml:space="preserve">
          <source>DestroyModelMixin</source>
          <target state="translated">DestroyModelMixin</target>
        </trans-unit>
        <trans-unit id="908c4b6b16371ce7e7485daa13ff9f7646cc66cc" translate="yes" xml:space="preserve">
          <source>Details and limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0a8508ce8161b653474c2ab4b8a8b404c343f7" translate="yes" xml:space="preserve">
          <source>Determining the accepted renderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="3c91c8aa60a2a5708ad474bd3a53d74c13c1e2ee" translate="yes" xml:space="preserve">
          <source>DictField</source>
          <target state="translated">DictField</target>
        </trans-unit>
        <trans-unit id="3d5360c6ea0d8e99ac86cd3a4d21742fa0637c3e" translate="yes" xml:space="preserve">
          <source>Dispatch methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147cf3560b49f5ebdda69b2ae446a79451542669" translate="yes" xml:space="preserve">
          <source>Django (1.11, 2.0, 2.1, 2.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c7830a7947e8b0dbccef8acb7311b5868cb3ef" translate="yes" xml:space="preserve">
          <source>Django OAuth Toolkit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0b57648ddc6e50ced7c1b74282bcb2ae26ec9e" translate="yes" xml:space="preserve">
          <source>Django REST Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c79be21773f9b35fb641761c8b8e70d13caf91" translate="yes" xml:space="preserve">
          <source>Django REST Framework API Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2a7990763fe979b07a0e3af963e1df801f4f8b" translate="yes" xml:space="preserve">
          <source>Django REST Framework bulk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba222e6825cd91c2b199f30da37787081fc0cb34" translate="yes" xml:space="preserve">
          <source>Django REST Framework provides support for automatic generation of &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification&quot;&gt;OpenAPI&lt;/a&gt; schemas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e46c03cf17beef6a39b5a2fe25e2b47079db48f" translate="yes" xml:space="preserve">
          <source>Django REST Framework provides two error views suitable for providing generic JSON &lt;code&gt;500&lt;/code&gt; Server Error and &lt;code&gt;400&lt;/code&gt; Bad Request responses. (Django's default error views provide HTML responses, which may not be appropriate for an API-only application.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3181485aa102d988402709d46b4eeeebcf6ad7" translate="yes" xml:space="preserve">
          <source>Django REST framework OAuth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307ee732172ebb5aaea34f3cfbb650ad7b82ad32" translate="yes" xml:space="preserve">
          <source>Django REST framework allows you to combine the logic for a set of related views in a single class, called a &lt;code&gt;ViewSet&lt;/code&gt;. In other frameworks you may also find conceptually similar implementations named something like 'Resources' or 'Controllers'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acedd647deee3407ff0e2d0c2be662cb741c80d5" translate="yes" xml:space="preserve">
          <source>Django REST framework filters package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af76ddc1d540a142a6985cdee0c6c86e60bdff4" translate="yes" xml:space="preserve">
          <source>Django REST framework full word search filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c520473dc86627a72fd5ebd7661a49e0a46544fb" translate="yes" xml:space="preserve">
          <source>Django REST framework is a powerful and flexible toolkit for building Web APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de50fa24a71584d334a8b4b258328be52d27bdf" translate="yes" xml:space="preserve">
          <source>Django REST marshmallow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ee946ac32c2f53817b2c01c73cd17fb318a0da" translate="yes" xml:space="preserve">
          <source>Django Rest Framework Role Filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0113a606630d27f7f05d458f49fd6c3dcab9bbb5" translate="yes" xml:space="preserve">
          <source>Django Rest Framework Roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d78a7e51fcafd62d26f583ecedaff1a1d561f2" translate="yes" xml:space="preserve">
          <source>Django Rest Multiple Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d5b89d123e5e9954f061cd98c4a93621ee3bc7" translate="yes" xml:space="preserve">
          <source>Django URL Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1325d58cde10dc164a8ffe02cdd5e7f4fd0625c" translate="yes" xml:space="preserve">
          <source>Django provides a &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/#decorating-the-class&quot;&gt;&lt;code&gt;method_decorator&lt;/code&gt;&lt;/a&gt; to use decorators with class based views. This can be used with other cache decorators such as &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache&quot;&gt;&lt;code&gt;cache_page&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/http/decorators/#django.views.decorators.vary.vary_on_cookie&quot;&gt;&lt;code&gt;vary_on_cookie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391f8d414834e0208cf822b441b0f979baf37eaa" translate="yes" xml:space="preserve">
          <source>Django provides a few classes that help you manage paginated data &amp;ndash; that is, data that&amp;rsquo;s split across several pages, with &amp;ldquo;Previous/Next&amp;rdquo; links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055ea5b1bded671c351efa90a3fbe2c258360c49" translate="yes" xml:space="preserve">
          <source>Django&amp;rsquo;s generic views... were developed as a shortcut for common usage patterns... They take certain common idioms and patterns found in view development and abstract them so that you can quickly write common views of data without having to repeat yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddba5767f7b44b2c223c9e6d9da072e31d577491" translate="yes" xml:space="preserve">
          <source>Django's &lt;code&gt;Http404&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164b9e1971dc2b35a3ae53b9355459becc2f829c" translate="yes" xml:space="preserve">
          <source>Django's &lt;code&gt;PermissionDenied&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38104aaa8df9c81242fe8d7d7bf3dece8d098f94" translate="yes" xml:space="preserve">
          <source>Django's class-based views are a welcome departure from the old-style views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfb9370078d949cf91659f05fef105911f2b31a" translate="yes" xml:space="preserve">
          <source>DjangoFilterBackend</source>
          <target state="translated">DjangoFilterBackend</target>
        </trans-unit>
        <trans-unit id="6ebcd0718f15348a8c86e0a586ae97bf018d0085" translate="yes" xml:space="preserve">
          <source>DjangoModelPermissions</source>
          <target state="translated">DjangoModelPermissions</target>
        </trans-unit>
        <trans-unit id="0538ec5d367edb7b0f6937d172df4ca314016406" translate="yes" xml:space="preserve">
          <source>DjangoModelPermissionsOrAnonReadOnly</source>
          <target state="translated">DjangoModelPermissionsOrAnonReadOnly</target>
        </trans-unit>
        <trans-unit id="dbf7679c73583a638075b4b48b21d78d346cab0c" translate="yes" xml:space="preserve">
          <source>DjangoObjectPermissions</source>
          <target state="translated">DjangoObjectPermissions</target>
        </trans-unit>
        <trans-unit id="40f08011d7ecc140f52bf6b191b3fc5ef808816f" translate="yes" xml:space="preserve">
          <source>Djoser</source>
          <target state="translated">Djoser</target>
        </trans-unit>
        <trans-unit id="dfec20ebf559498feeb0aece73d0bca0f7d4c0a1" translate="yes" xml:space="preserve">
          <source>Doing so reduces the amount of hidden 'magic' that &lt;code&gt;ModelSerializer&lt;/code&gt; provides, makes the behavior of the field more clear, and ensures that it is trivial to move between using the &lt;code&gt;ModelSerializer&lt;/code&gt; shortcut, or using fully explicit &lt;code&gt;Serializer&lt;/code&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167e17833d7ae304e668b1b4ef08c429e31b35c3" translate="yes" xml:space="preserve">
          <source>Doing so will allow any returned URLs to include the appropriate versioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966ab16265b1103efeb1496d4e6d878eb747fd71" translate="yes" xml:space="preserve">
          <source>Doing so will ensure that the hyperlinks can include an appropriate hostname, so that the resulting representation uses fully qualified URLs, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0662081748162b8640341d50d732ff2b64584419" translate="yes" xml:space="preserve">
          <source>Don't forget to make sure you've also added &lt;code&gt;rest_framework&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350b31e9ef9c845b0e9feb3c8a0b0fc2fa56313f" translate="yes" xml:space="preserve">
          <source>DurationField</source>
          <target state="translated">DurationField</target>
        </trans-unit>
        <trans-unit id="1745158ed670935e9dbbd97e13535e4c646e3726" translate="yes" xml:space="preserve">
          <source>During dispatch, the following attributes are available on the &lt;code&gt;ViewSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c904bcfac1297f417c516c6b59f9b093b65cfd94" translate="yes" xml:space="preserve">
          <source>Dynamic Fields Mixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5302b0d17a97913173ab7e3e09c594d1e1cd1a" translate="yes" xml:space="preserve">
          <source>Dynamic REST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08add85a720f38076f72b1a8dc378d76334ea207" translate="yes" xml:space="preserve">
          <source>Dynamically modifying fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7704ff80ba96a58ce836f412358d3a8f0fe7bbf6" translate="yes" xml:space="preserve">
          <source>ESG</source>
          <target state="translated">ESG</target>
        </trans-unit>
        <trans-unit id="df76764a5c1ee99072ffeaa450945d48b3d77172" translate="yes" xml:space="preserve">
          <source>EXCEPTION_HANDLER</source>
          <target state="translated">EXCEPTION_HANDLER</target>
        </trans-unit>
        <trans-unit id="476d94b557483460c30e5cf92c0f2ead46226551" translate="yes" xml:space="preserve">
          <source>Each field in a Form class is responsible not only for validating data, but also for &quot;cleaning&quot; it &amp;mdash; normalizing it to a consistent format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d7be99738f1f94ba9a180c81ff834f413f722e" translate="yes" xml:space="preserve">
          <source>Each key in the dictionary will be the field name, and the values will be lists of strings of any error messages corresponding to that field. The &lt;code&gt;non_field_errors&lt;/code&gt; key may also be present, and will list any general validation errors. The name of the &lt;code&gt;non_field_errors&lt;/code&gt; key may be customized using the &lt;code&gt;NON_FIELD_ERRORS_KEY&lt;/code&gt; REST framework setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117b784fa66913cc15c884d29c1d3b069085dc44" translate="yes" xml:space="preserve">
          <source>Each of the concrete generic views provided is built by combining &lt;code&gt;GenericAPIView&lt;/code&gt;, with one or more mixin classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412c2c79e41051f20a171b8b67ad937fb619c74c" translate="yes" xml:space="preserve">
          <source>Each of these decorators takes a single argument which must be a list or tuple of classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45619e5e5e859f22e542ddb326684a8f7db496f" translate="yes" xml:space="preserve">
          <source>Each serializer field class constructor takes at least these arguments. Some Field classes take additional, field-specific arguments, but the following should always be accepted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633355623fcc95dfef5d0ad7a3c26b72e2ee92f6" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;snippets/views.py&lt;/code&gt; file, and add the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55611e4377c447cc996610b48ec236a6d5d43c5" translate="yes" xml:space="preserve">
          <source>EmailField</source>
          <target state="translated">EmailField</target>
        </trans-unit>
        <trans-unit id="91e7aa89332b6cee8751327a9d69e3cd920f8ea8" translate="yes" xml:space="preserve">
          <source>Encodings</source>
          <target state="translated">Encodings</target>
        </trans-unit>
        <trans-unit id="53414d1f238286311e1cb3715f611d1041fb82dc" translate="yes" xml:space="preserve">
          <source>Ensures that any &lt;code&gt;Response&lt;/code&gt; object returned from the handler method will be rendered into the correct content type, as determined by the content negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c3690ab796c08c6311d5a3bfcf04c0263122bd" translate="yes" xml:space="preserve">
          <source>Ensures that the request object that is passed to the handler method is an instance of &lt;code&gt;Request&lt;/code&gt;, rather than the usual Django &lt;code&gt;HttpRequest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">Пример использования</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="aa7dbf5e15153d64b7b645803acc5731b04bf7f6" translate="yes" xml:space="preserve">
          <source>Exception handling in REST framework views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="955722d3270c6e250cdbce9d8f4d3991cd40f8b5" translate="yes" xml:space="preserve">
          <source>Exceptions raised and handled by an HTML renderer will attempt to render using one of the following methods, by order of precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20dcd7693cac83e296f186865162822cf0c3bfa6" translate="yes" xml:space="preserve">
          <source>Exceptions&amp;hellip; allow error handling to be organized cleanly in a central or high-level place within the program structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d97f5c1f363e4a80555252372cc363acff8e679" translate="yes" xml:space="preserve">
          <source>Expanding the usefulness of the serializers is something that we would like to address. However, it's not a trivial problem, and it will take some serious design work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cef9ccf02d007bea41c3ba8180064b1bd846a0d" translate="yes" xml:space="preserve">
          <source>Explicitly encoding the request body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d950e7d5b988b053fbdbd3ab11020426230d8a5b" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/advanced/#django.test.client.RequestFactory&quot;&gt;Django's existing &lt;code&gt;RequestFactory&lt;/code&gt; class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ff3d65dbf393e4c2008c3b48586dfc2fb0766b" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/tools/#the-test-client&quot;&gt;Django's existing &lt;code&gt;Client&lt;/code&gt; class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e5b4704165f69072e77051cd13ee4643c2d67e" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#createmodelmixin&quot;&gt;CreateModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8066ccd6670b80df11621b61e9770ace1238d871" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481e3e3177f623da5ca19ab173d2954af4fce276" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#listmodelmixin&quot;&gt;ListModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb403f2c2fb0acf301833712523100797d3c269" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#listmodelmixin&quot;&gt;ListModelMixin&lt;/a&gt;, &lt;a href=&quot;#createmodelmixin&quot;&gt;CreateModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1d97e677a8abd57773b8a062cf0b589321fcba" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee67930c09309615e4e157400b014ce579a4410" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;, &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538b830b16537064b07095a8888f88675ef18e60" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;, &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea4836c3ef14fb4fefc9bb8e214153b4443456d" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;, &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;, &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe9fea6d13b8a93dd2de8017da8ab74056600fa" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef76653b306988783092dcf3e7eb20a3386d076" translate="yes" xml:space="preserve">
          <source>Extra actions can map additional HTTP methods to separate &lt;code&gt;ViewSet&lt;/code&gt; methods. For example, the above password set/unset methods could be consolidated into a single route. Note that additional mappings do not accept arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b41e7e2f99feed1067c1321b5df66c9108d72b8" translate="yes" xml:space="preserve">
          <source>Extra fields can correspond to any property or callable on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0cf5eef948b6f301867a79ac2c03c9db727e59" translate="yes" xml:space="preserve">
          <source>FORMAT_SUFFIX_KWARG</source>
          <target state="translated">FORMAT_SUFFIX_KWARG</target>
        </trans-unit>
        <trans-unit id="45e91ce3ef250a150e4bc5a89326563f549c8536" translate="yes" xml:space="preserve">
          <source>Field-level validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4105342b89e9a2d233fd737ad8c34867bdb3ea3b" translate="yes" xml:space="preserve">
          <source>File upload fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaab7368147ce3b8e9cd4bae206ba854e90a8d1b" translate="yes" xml:space="preserve">
          <source>FileField</source>
          <target state="translated">FileField</target>
        </trans-unit>
        <trans-unit id="269358c08be1f44a0f790c5bce56066dceebadc6" translate="yes" xml:space="preserve">
          <source>FilePathField</source>
          <target state="translated">FilePathField</target>
        </trans-unit>
        <trans-unit id="c3071ec2a35112139620d6d71a09fa699496e391" translate="yes" xml:space="preserve">
          <source>FileUploadParser</source>
          <target state="translated">FileUploadParser</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="6db47f21e5e53d36832ede7f8dea48c1b155d3bb" translate="yes" xml:space="preserve">
          <source>Filtering against query parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0307ddcee6f5701606960307b7c55c09bdd00f87" translate="yes" xml:space="preserve">
          <source>Filtering against the URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4241ea529a908bd9c09c459c4b716326b407eaef" translate="yes" xml:space="preserve">
          <source>Filtering against the current user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadb25b54f458bae227100228ba3a3bcd8b1cb72" translate="yes" xml:space="preserve">
          <source>Filtering and object lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2c423efdb6db2bf5d38ddbddb43ac18ace5460" translate="yes" xml:space="preserve">
          <source>Finally we need to add those views into the API, by referencing them from the URL conf. Add the following to the patterns in &lt;code&gt;snippets/urls.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae610a86fbfe5ea8ee12713a6d22c9764177ce4b" translate="yes" xml:space="preserve">
          <source>Finally we need to wire these views up. Create the &lt;code&gt;snippets/urls.py&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fdc2148677f7d82e0da0ba0101d5a1b8a91eb0" translate="yes" xml:space="preserve">
          <source>Finally, we can get a list of all of the snippets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657692ac300e7753528cea510dc14e82bbf1dc51" translate="yes" xml:space="preserve">
          <source>Finally, we're including default login and logout views for use with the browsable API. That's optional, but useful if your API requires authentication and you want to use the browsable API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4e717474869391f4dbd0e9c12eecc7a840d962" translate="yes" xml:space="preserve">
          <source>First add the following import in the views module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24aea0064932b4921d12304cf483f082236df127" translate="yes" xml:space="preserve">
          <source>First of all let's refactor our &lt;code&gt;UserList&lt;/code&gt; and &lt;code&gt;UserDetail&lt;/code&gt; views into a single &lt;code&gt;UserViewSet&lt;/code&gt;. We can remove the two views, and replace them with a single class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412937927a08c2dd71924c57e25e26f76315a756" translate="yes" xml:space="preserve">
          <source>First up we're going to define some serializers. Let's create a new module named &lt;code&gt;tutorial/quickstart/serializers.py&lt;/code&gt; that we'll use for our data representations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdc1208676b23ea32d59df3dcc23e4161aa6a26" translate="yes" xml:space="preserve">
          <source>FloatField</source>
          <target state="translated">FloatField</target>
        </trans-unit>
        <trans-unit id="947a79bce117dbf5b7048cdde9ac9c8a8d8489cb" translate="yes" xml:space="preserve">
          <source>Follow @_tomchristie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cab832dd77f1ae814847058f01d05d1c983f035" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; this defaults to &lt;code&gt;serializers.HyperlinkedRelatedField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b7973e53936506126f83cdae1674a63901071b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;ModelSerializer&lt;/code&gt; this defaults to &lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b0e8d8f87df69f511232d96727a3c81e11bbc8" translate="yes" xml:space="preserve">
          <source>For another example of setting the &lt;code&gt;.routes&lt;/code&gt; attribute, see the source code for the &lt;code&gt;SimpleRouter&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c1918f8018982cbfea0f084bbbe04d3d2be7b6" translate="yes" xml:space="preserve">
          <source>For clarity inside your code, we recommend using &lt;code&gt;request.query_params&lt;/code&gt; instead of the Django's standard &lt;code&gt;request.GET&lt;/code&gt;. Doing so will help keep your codebase more correct and obvious - any HTTP method type may include query parameters, not just &lt;code&gt;GET&lt;/code&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffce9db3c92fab56b6e9d17af08db657418628e8" translate="yes" xml:space="preserve">
          <source>For clients to authenticate, the token key should be included in the &lt;code&gt;Authorization&lt;/code&gt; HTTP header. The key should be prefixed by the string literal &quot;Token&quot;, with whitespace separating the two strings. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c84efcff8720671370e548208d35045435e037b" translate="yes" xml:space="preserve">
          <source>For completeness lets do the same thing again but with the nested serialiser approach suggested above:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
