<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="785af2a4ad3c4ee912623c6e0b6d4299ea305bf6" translate="yes" xml:space="preserve">
          <source>Pipes</source>
          <target state="translated">Pipes</target>
        </trans-unit>
        <trans-unit id="cb2a8758a90a6a1ad70e15ab2f35125d3e28bbb8" translate="yes" xml:space="preserve">
          <source>Pipes and change detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cbce5e043d7e4ec78bddca83822e6747dfe443" translate="yes" xml:space="preserve">
          <source>Pipes are a great way to encapsulate and share common display-value transformations. Use them like styles, dropping them into your template's expressions to enrich the appeal and usability of your views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1e8453a9c510b7cd81f9ac0bf7d273b2689f33" translate="yes" xml:space="preserve">
          <source>Pipes are easy to test without the Angular testing utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2597b4963ef049463e405c7d6e73c90c9e1c5e0" translate="yes" xml:space="preserve">
          <source>Pipes are simple functions that accept an input value and return a transformed value. They're easy to apply within template expressions, using the pipe operator (&lt;code&gt;|&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03700b0b5a3875f2890e5cc29d64836f946d234e" translate="yes" xml:space="preserve">
          <source>Pipes using Intl API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d35fb2984acf418b500f8848a540a960cf182c8" translate="yes" xml:space="preserve">
          <source>Place the providers into the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1dbc6a6def246b8e7db2c645d69cb1c276181b2" translate="yes" xml:space="preserve">
          <source>Plain InjectionToken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecd2749d5ebdc23a466e45d8cd30c925b0c7d2a" translate="yes" xml:space="preserve">
          <source>Platform for testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152cf3d0db209f7bfd4079d8a34ddf474b9c46f5" translate="yes" xml:space="preserve">
          <source>Platform injector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea7d8d71c17bf523a37e15e5174526dd62f1bee" translate="yes" xml:space="preserve">
          <source>PlatformConfig</source>
          <target state="translated">PlatformConfig</target>
        </trans-unit>
        <trans-unit id="97be63e4c422f1cc7f9c7446a9e450eba2bd657c" translate="yes" xml:space="preserve">
          <source>PlatformLocation</source>
          <target state="translated">PlatformLocation</target>
        </trans-unit>
        <trans-unit id="a6f2b49d2e89ca8c89d96a762ff57c52051eaa40" translate="yes" xml:space="preserve">
          <source>PlatformRef</source>
          <target state="translated">PlatformRef</target>
        </trans-unit>
        <trans-unit id="b01e2980d8515172a9d3aa79b81950b4a90ed0e2" translate="yes" xml:space="preserve">
          <source>PlatformState</source>
          <target state="translated">PlatformState</target>
        </trans-unit>
        <trans-unit id="74639aadcc28aae30a85e69871c18d9bc9c1915f" translate="yes" xml:space="preserve">
          <source>Please note that directives &lt;em&gt;do not&lt;/em&gt; support namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef8776654a5598bd9bf8265ea86a4a13f90f500" translate="yes" xml:space="preserve">
          <source>Plural</source>
          <target state="translated">Plural</target>
        </trans-unit>
        <trans-unit id="c822c5e43dd02bebbfa621e9e82432f691815c11" translate="yes" xml:space="preserve">
          <source>Plurality cases used for translating plurals to different languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="translated">Pluralization</target>
        </trans-unit>
        <trans-unit id="691fb17d9ec645abcccef304dd3d450d16a59184" translate="yes" xml:space="preserve">
          <source>Pluralization categories include (depending on the language):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9261553f8e998b6ca0acfcb68f69cb942b6b73bc" translate="yes" xml:space="preserve">
          <source>Point the browser to the project root when loading things through SystemJS, instead of using the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="686b77cb484e01d6f0a696a15e0937d89d1ac793" translate="yes" xml:space="preserve">
          <source>Polyfill packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65de7239130b2221dc156af1c9b5fa8125b9bf3" translate="yes" xml:space="preserve">
          <source>Polyfills</source>
          <target state="translated">Polyfills</target>
        </trans-unit>
        <trans-unit id="7e22065c36bcda31ffb06eb771fe814a5d369aa6" translate="yes" xml:space="preserve">
          <source>Polyfills Required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c3a3711b3b9e6b7b93a7d53aeecbb508abe8a7" translate="yes" xml:space="preserve">
          <source>Polyfills for non-CLI users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f319abcfdc41549454a65108740afd882caa7d" translate="yes" xml:space="preserve">
          <source>PopStateEvent</source>
          <target state="translated">PopStateEvent</target>
        </trans-unit>
        <trans-unit id="db23d762d8b57c6ab54bf69340014948dacf2947" translate="yes" xml:space="preserve">
          <source>Port to listen on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f8228b4f271aef80dab1a0ae9f8cd988cceaa1" translate="yes" xml:space="preserve">
          <source>Portuguese Brazil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9310c30efd49230a522a5476fb106e532c4ad304" translate="yes" xml:space="preserve">
          <source>Power Boost Calculator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55eed3cc7013197cfb7c5f1ea92b2dffefeffbe8" translate="yes" xml:space="preserve">
          <source>Practical observable usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ec019e6613fb1af300ed7695a138dc18ac2d81" translate="yes" xml:space="preserve">
          <source>Pre-defined format options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51f30cc3e4fcf0ee07c35bd2dec0b89b0f47eaa" translate="yes" xml:space="preserve">
          <source>Precaching with Angular Service Worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60517df9a72adb7b98fdcba382b4e39193f1749a" translate="yes" xml:space="preserve">
          <source>Predefined shipping data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18648d5cf93cb7cc4f85cc03b3fd481807b3442" translate="yes" xml:space="preserve">
          <source>Predefined states and wildcard matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0808b401a93f815fe9ce2e731fcd95f9ed6c3b2a" translate="yes" xml:space="preserve">
          <source>Predefined tokens and multiple providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="translated">Predicate</target>
        </trans-unit>
        <trans-unit id="a48d36ce88487edcdf3dd5e1a22e2e472b581b19" translate="yes" xml:space="preserve">
          <source>Predicates for use with &lt;a href=&quot;../core/debugelement&quot;&gt;&lt;code&gt;DebugElement&lt;/code&gt;&lt;/a&gt;'s query functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b9770eb11beb11e06dbb58f1ae277a38245e61" translate="yes" xml:space="preserve">
          <source>Predicates for use with &lt;a href=&quot;core/debugelement&quot;&gt;&lt;code&gt;DebugElement&lt;/code&gt;&lt;/a&gt;'s query functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5f6af855c155d6a39527f646350ea131a41ef5" translate="yes" xml:space="preserve">
          <source>Predictability</source>
          <target state="translated">Predictability</target>
        </trans-unit>
        <trans-unit id="6e3db619f4a80838687fe01789222032b8d6100a" translate="yes" xml:space="preserve">
          <source>Prefer spies as they are usually the easiest way to mock services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6733962201f798f0db7d044124ca4a429500f7ca" translate="yes" xml:space="preserve">
          <source>Prefer the asterisk (*) syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bcf74484be0c909148ef3e9fcd55cd2fd3d70d" translate="yes" xml:space="preserve">
          <source>Prefix to add when computing the name of the factory module for a given module name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067fba24288444a687cd633599a47db827992c93" translate="yes" xml:space="preserve">
          <source>PreloadAllModules</source>
          <target state="translated">PreloadAllModules</target>
        </trans-unit>
        <trans-unit id="70b0d75388db068d0fbf3c78a8238d3453737e41" translate="yes" xml:space="preserve">
          <source>Preloading every lazy loaded modules works well in many situations, but it isn't always the right choice, especially on mobile devices and over low bandwidth connections. You may choose to preload only certain feature modules, based on user metrics and other business and technical factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2387fc03ded4c31718c0ef578b18d0483e829707" translate="yes" xml:space="preserve">
          <source>Preloading of all lazy loaded feature areas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd65d9f77e29b00400e7a44f95cb0d92219a686a" translate="yes" xml:space="preserve">
          <source>Preloading: background loading of feature areas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d168fd8834b30e1d7b8838cae58a5296aa2e1bdc" translate="yes" xml:space="preserve">
          <source>PreloadingStrategy</source>
          <target state="translated">PreloadingStrategy</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="e04cc35909b27a6ac7cade1e37466d6a00dd9496" translate="yes" xml:space="preserve">
          <source>Preparing text in component templates for translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dddd2437fc8dd1f3739d4f926746d2bba80f8c" translate="yes" xml:space="preserve">
          <source>Prerequisite: Configure External Web tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249d4f1b938b2ffe89ffd88c1806ec40c41ea35b" translate="yes" xml:space="preserve">
          <source>Prerequisite: Install TypeScript for Visual Studio 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5d7871d8f55fc42e58f9720f864a7546fca7dd" translate="yes" xml:space="preserve">
          <source>Prerequisite: Node.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18356b763e9cc10776248e27eee06a9d47a8e25c" translate="yes" xml:space="preserve">
          <source>Prerequisite: Visual Studio 2015 Update 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="a664240f3a496c80cf7c7945e11febbe499af8fa" translate="yes" xml:space="preserve">
          <source>Preserving whitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49aabd1ffb70da3ce1ce41784926f360b6672f92" translate="yes" xml:space="preserve">
          <source>Prevent reimport of the &lt;code&gt;GreetingModule&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e96ff8a7a9a6e2ece9594270b5512699fedc119" translate="yes" xml:space="preserve">
          <source>Preventing cross-site scripting (XSS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de8376e3ea51bf0a509280a292b540b5c6feb3d" translate="yes" xml:space="preserve">
          <source>Preview releases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1ba4ab538c84c12fdc06c5d80c072fbde98280" translate="yes" xml:space="preserve">
          <source>Previous code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686686ccc1b3cc405bda1243ad4a225064fcc6c7" translate="yes" xml:space="preserve">
          <source>Previous index of the item in &lt;code&gt;Iterable&lt;/code&gt; or null if added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe29fa6e4ca4b83b765a11d9edd97051ad3fde0" translate="yes" xml:space="preserve">
          <source>Previous value for the key or &lt;code&gt;null&lt;/code&gt; if added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b507f09fc4bea4e4450552af2d404c4ddfcd2d" translate="yes" xml:space="preserve">
          <source>Previously, the parent &lt;code&gt;HeroesComponent&lt;/code&gt; set the &lt;code&gt;HeroDetailComponent.hero&lt;/code&gt; property and the &lt;code&gt;HeroDetailComponent&lt;/code&gt; displayed the hero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54927c3b29c57a1de1bad9235800797c8db4802d" translate="yes" xml:space="preserve">
          <source>Previously, when navigating from the &lt;code&gt;HeroListComponent&lt;/code&gt; to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;, you subscribed to the route parameter map &lt;code&gt;Observable&lt;/code&gt; and made it available to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service. You injected that service in the constructor of the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705295bd37f84d6f4e7bb50594c331369aa909a2" translate="yes" xml:space="preserve">
          <source>Previously, when you wanted to add a component to an app at runtime, you had to define a &lt;em&gt;dynamic component&lt;/em&gt;. The app module would have to list your dynamic component under &lt;code&gt;entryComponents&lt;/code&gt;, so that the app wouldn't expect it to be present at startup, and then you would have to load it, attach it to an element in the DOM, and wire up all of the dependencies, change detection, and event handling, as described in &lt;a href=&quot;dynamic-component-loader&quot;&gt;Dynamic Component Loader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a96ec019494d5b8b041c1d2468061ae66e35d5" translate="yes" xml:space="preserve">
          <source>Primary</source>
          <target state="translated">Primary</target>
        </trans-unit>
        <trans-unit id="7e1d2a68a12c861b36ffdc8817f6e71bb1c656a4" translate="yes" xml:space="preserve">
          <source>Primary entry point exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63424cddc8268426b09cae09b791cdebb47ef4bf" translate="yes" xml:space="preserve">
          <source>Primary: &lt;a href=&quot;https://developers.google.com/style/&quot;&gt;Google Developer Documentation Style Guide&lt;/a&gt;This guide: Specifies any special considerations for Angular docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26fe41a6ef090622403b199fdf17129d3f82806" translate="yes" xml:space="preserve">
          <source>Primary: &lt;a href=&quot;styleguide&quot;&gt;Angular Style Guide&lt;/a&gt;.This guide: How to create, store, and include code examples in guides and tutorials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336665dc97315ab21d91e9eb3f466f9f1f2acb75" translate="yes" xml:space="preserve">
          <source>Primary: This guideThis guide: Specifies guidelines for markup of guides and tutorials, which are written primarily in Markdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237dfa0a21c8e17a7276cf161eef7e0fba067c47" translate="yes" xml:space="preserve">
          <source>Private</source>
          <target state="translated">Private</target>
        </trans-unit>
        <trans-unit id="ccdb05e9287a5643b0f46a8a795873398b701006" translate="yes" xml:space="preserve">
          <source>Private components, directives, and pipes that you need only within components declared in this NgModule. If you don't want another NgModule to see it, don't export it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa7faa011241b58e6d3463522ad478e4a417345" translate="yes" xml:space="preserve">
          <source>Proceed to the first application milestone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c986803a139eeb1814cb1cb9c60f9e6ba08db226" translate="yes" xml:space="preserve">
          <source>Processes a JSONP request and returns an event stream of the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1b293ff91a747b9e1c725d22d905891bd9334a" translate="yes" xml:space="preserve">
          <source>Processes a request and returns a stream of response events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54af06306ac63586c56e2970c71f3615862b1a0" translate="yes" xml:space="preserve">
          <source>Processes an &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the JSONP method, by performing JSONP style requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d4096b59eb068acdc46953d49c4acf765ebb6a" translate="yes" xml:space="preserve">
          <source>Processes an &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the JSONP method, by performing JSONP style requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c180d40fb357028ba0ac0fc56f7be7c5d9174d1" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked from elsewhere. Used together with &lt;code&gt;&lt;a href=&quot;../api/animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04be5c86df2b6217e4d14d7d23cb19226f4775b8" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked in another animation or sequence, by calling the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f565e89ffc1021668b87fc6b07e6130b5fb67a8c" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked in another animation or sequence, by calling the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25405283945c03fa70894ed8ca915f1d20c3cd2" translate="yes" xml:space="preserve">
          <source>Produces only one &lt;code&gt;.metadata.json&lt;/code&gt; file, which contains all the metadata necessary for symbols exported from the library index. In the generated &lt;code&gt;.ngfactory.js&lt;/code&gt; files, the flat module index is used to import symbols that includes both the public API from the library index as well as shrowded internal symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c1e993da4701016c19505ac8a40f8ca68e2496" translate="yes" xml:space="preserve">
          <source>Production optimizations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790662d7276fecead0642a68863411158d8bdf71" translate="yes" xml:space="preserve">
          <source>Products are linked from the product list page to individual products</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0ae4a78280da384552260861eade2c6574f548" translate="yes" xml:space="preserve">
          <source>Programmatic animations built using the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; service also make use of &lt;code&gt;&lt;a href=&quot;animationoptions&quot;&gt;AnimationOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dd459e772b968a8a788978ab7b3d9e6d236052" translate="yes" xml:space="preserve">
          <source>Progress and status reporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b091ed47915c75bb4f4374dd46c3e4c7702fdf54" translate="yes" xml:space="preserve">
          <source>Progress event type is either upload or download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a227fc0f2d5149392f6b32708deaf0d23d5fdf" translate="yes" xml:space="preserve">
          <source>Progress events are expensive (change detection runs on each event) and so they should only be requested if the consumer intends to monitor them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5ea6dee40bc1957609cc91d1c8de4b38422dbc" translate="yes" xml:space="preserve">
          <source>Project configuration options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9801a527c5f2ea94ead96ffb5c51c7f0c4ce2ab" translate="yes" xml:space="preserve">
          <source>Project tool configuration options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c0f70175cb25524a755932b999ce0195dcc462" translate="yes" xml:space="preserve">
          <source>Project-specific &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration files inherit from the workspace-wide &lt;code&gt;tsconfig.json&lt;/code&gt;, and project-specific &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration files inherit from the workspace-wide &lt;code&gt;tslint.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fbfba240d8133d7be4736881a0b978769181b7" translate="yes" xml:space="preserve">
          <source>Projecting AngularJS Content into Angular Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="75960a1110ccba8def033cd86e8a10afcbc14cdb" translate="yes" xml:space="preserve">
          <source>Promises are not cancellable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd075a0c7e57b8824112b06a641202fb7b294988" translate="yes" xml:space="preserve">
          <source>Promises do not differentiate between the last &lt;code&gt;.then&lt;/code&gt; clauses (equivalent to subscription) and intermediate &lt;code&gt;.then&lt;/code&gt; clauses (equivalent to map).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c863d38da402eed1e862ef6202e429af3628e9cf" translate="yes" xml:space="preserve">
          <source>Promises execute immediately, and just once. The computation of the result is initiated when the promise is created. There is no way to restart work. All &lt;code&gt;then&lt;/code&gt; clauses (subscriptions) share the same computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1472af86dfdb390fa3ffb01b3adfce53c1fcc332" translate="yes" xml:space="preserve">
          <source>Promises push errors to the child promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d234326a4b0c46809ea38bd58ac4911bd7981881" translate="yes" xml:space="preserve">
          <source>Prompt Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392aee6a644d305cd374d40592dc974e0a918a9e" translate="yes" xml:space="preserve">
          <source>Prompt long-form syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0269bd29a48abe5475f986f050d08f2eeff4876" translate="yes" xml:space="preserve">
          <source>Prompt short-form syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="7064440d35d215018bde74bbba3e67cfce94975a" translate="yes" xml:space="preserve">
          <source>Properties of elements in a view can change dynamically, in response to user actions; the structure (number and order) of elements in a view can't. You can change the structure of elements by inserting, moving, or removing nested views within their view containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3749a2f44a01eb5b1fc0310f059eb04a298bb6" translate="yes" xml:space="preserve">
          <source>Properties of elements in a view can change, but the structure (number and order) of elements in a view cannot. Change the structure of elements by inserting, moving, or removing nested views in a view container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f263dc38915b90a9052d4809c811ec821890851f" translate="yes" xml:space="preserve">
          <source>Properties that are not present take the HammerJS default values. For information about which properties are supported for which events, and their allowed and default values, see &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed351121737bec708f3bda86370f451930772ef7" translate="yes" xml:space="preserve">
          <source>Properties whose default values can be overridden for a given event. Different sets of properties apply to different events. For information about which properties are supported for which events, and their allowed and default values, see &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="c795710dede9c7672e5c93daff8ab98596997b26" translate="yes" xml:space="preserve">
          <source>Property Schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c250a939425c6fc56d3c5dfb59b1a229e6fe841d" translate="yes" xml:space="preserve">
          <source>Property access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32aec98261097813a762b28180fc560fa718d3e" translate="yes" xml:space="preserve">
          <source>Property binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346228906e73d1ee019e8cb4344383d3b2e78030" translate="yes" xml:space="preserve">
          <source>Property binding &lt;code&gt;[ ]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107d6306f9bdce4c0ee8743d04ec8cf9e6d3d6f1" translate="yes" xml:space="preserve">
          <source>Property binding &lt;code&gt;[property]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d005f2fc0afb36c018f3e878d6e0cd2d41a51288" translate="yes" xml:space="preserve">
          <source>Property binding flows a value in one direction, from a component's property into a target element property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9667b791a7bcc826c9e552e1706d5a403ead2e7" translate="yes" xml:space="preserve">
          <source>Property binding vs. interpolation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0902ed8a581443aca3fb5c8b2932e9ac7cc78ce6" translate="yes" xml:space="preserve">
          <source>Property decorator that configures a view query. The change detector looks for the first element or the directive matching the selector in the view DOM. If the view DOM changes, and a new child matches the selector, the property is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea0aadb2f222603c648dcc5c4806d773bae7566" translate="yes" xml:space="preserve">
          <source>Prototype for a class constructor based on an Angular component that can be used for custom element registration. Implemented and returned by the &lt;a href=&quot;createcustomelement&quot;&gt;createCustomElement() function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c734d8a118ca7943160a8da1958d4c97694962" translate="yes" xml:space="preserve">
          <source>Prototype for a class constructor based on an Angular component that can be used for custom element registration. Implemented and returned by the &lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement() function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcc05d10bd22bcb6a57ac35cf578bc945f3e4b3" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to a change in an observed attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4242981546e21fdb3b0aa7f0ab3725709e00971" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to the deletion of the custom element from the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49d3370133fd5f84996c090070b457117aa588f" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to the insertion of the custom element in the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364720ef6a6da0616b055436186192f1428f1e06" translate="yes" xml:space="preserve">
          <source>Provide a &lt;em&gt;spy stub&lt;/em&gt; (&lt;em&gt;HeroDetailServiceSpy&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b5fca9733d4354e4809cb7d8c15b0bda4b5f16" translate="yes" xml:space="preserve">
          <source>Provide a custom async validator directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b032de3dd61fd02081b246c3ef63793dca34072" translate="yes" xml:space="preserve">
          <source>Provide a custom validator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c1c920f554dc482156bd3d156adf2320a527b" translate="yes" xml:space="preserve">
          <source>Provide a name for the sub-group and it will become the key for the sub-group in the form's full value. If you need direct access, export the directive into a local template variable using &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt; (ex: &lt;code&gt;#myGroup=&quot;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bfac5b60f2cfcdb1e326e2371e802dee9bb7f9" translate="yes" xml:space="preserve">
          <source>Provide service test doubles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282b3a69f60a0417d266e1f3b3454cd26e7ab9f8" translate="yes" xml:space="preserve">
          <source>Provide services with the &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property of &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a96aec90d191ffcecd423feab632222f110bd83" translate="yes" xml:space="preserve">
          <source>Provide the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba09a50b5ef8c8573323c50d8562ae64d92b88c" translate="yes" xml:space="preserve">
          <source>Provide the Angular compiler with three translation-specific pieces of information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd2227ddb36c454e328ebcf762ca2c448cf687b" translate="yes" xml:space="preserve">
          <source>Provide the interceptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99278df1a4d2a1a33d21799411dc49cbf8fdcf3b" translate="yes" xml:space="preserve">
          <source>Provide the router with an appropriate [APP_BASE_HREF][] value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c22d5ad96ec6d26862683406067aafe9ec5e5b" translate="yes" xml:space="preserve">
          <source>Provide this token at bootstrap to set the format of your &lt;a href=&quot;core/translations&quot;&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e1db8d3331ddf65a5f5534e13ef7f98172968e" translate="yes" xml:space="preserve">
          <source>Provide this token at bootstrap to set the format of your &lt;a href=&quot;translations&quot;&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7468cc67031b821d79418d798168b9eabf1a6630" translate="yes" xml:space="preserve">
          <source>Provide this token to control if form directives buffer IME input until the &quot;compositionend&quot; event occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9db331ca7175b54bfdbfa34f22999c194ea5071" translate="yes" xml:space="preserve">
          <source>Provide this token to set the locale of your application. It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe, DecimalPipe and PercentPipe) and by ICU expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b54d983d0d3ed6b5e9f9aeae0e1fc2f2a5a2391" translate="yes" xml:space="preserve">
          <source>Provide visual feedback using special CSS classes that track the state of the controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="translated">Provider</target>
        </trans-unit>
        <trans-unit id="3dd300f86b0abe3e7bd81d9da97630a87c0ac831" translate="yes" xml:space="preserve">
          <source>Provider for mock platform location config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5c9e13d407299a81137be96842ae46ff27b552" translate="yes" xml:space="preserve">
          <source>Provider scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f79863ed2d8ccad17111669817b34b89c65690a" translate="yes" xml:space="preserve">
          <source>Provider token alternatives: class interface and 'InjectionToken'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b7c08baed1c8e93db95b79bcdca55b631dd7bb" translate="yes" xml:space="preserve">
          <source>Providers</source>
          <target state="translated">Providers</target>
        </trans-unit>
        <trans-unit id="3b0d079fabe95eb9cc4ce3f476c28f24898ca9ac" translate="yes" xml:space="preserve">
          <source>Providers can also be scoped by injector through constructor parameter decorators. The following example overrides the &lt;code&gt;BROWSER_STORAGE&lt;/code&gt; token in the &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; class &lt;code&gt;providers&lt;/code&gt; with the &lt;code&gt;sessionStorage&lt;/code&gt; browser API. The same &lt;code&gt;BrowserStorageService&lt;/code&gt; is injected twice in the constructor, decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; to define which injector handles the provider dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9473cc02003bc3c9e71c517ef33a8522746744" translate="yes" xml:space="preserve">
          <source>Providers listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; of a bootstrapped module have application scope. Adding a service provider to &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; effectively publishes the service to the entire application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abb2e3cbd25921f13920a13b7f90b2a78b1807e" translate="yes" xml:space="preserve">
          <source>Providers should be configured using &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; syntax. If possible, they should be provided in the application root (&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt;). Services that are configured this way are lazily loaded if they are only used from a lazily loaded context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7782a1cdf5537b6ab45a90229b534099ab9b51" translate="yes" xml:space="preserve">
          <source>Provides &lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt; to the entire workspace. Workspace-wide &lt;code&gt;node_modules&lt;/code&gt; dependencies are visible to all projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec98dd94321496de1f50cda2aba357145312ef3" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke after the animation is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06472f531d20296a330d531003931c66f789f354" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke before the animation is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0ddb064076a8f2b3798d4ffc50ea81406f82a8" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke when the animation finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebb62f995874d193a7e43140c19b5194b764559" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke when the animation starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2aa0adcb1a04b38b56e0f68cb4a215cb7b21263" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;core/iterablediffer&quot;&gt;&lt;code&gt;IterableDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4fc46799c84b04ab8e83e799bb8be92d40e11d" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;core/keyvaluediffer&quot;&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daefdde64d29ae124d1a275a5108bdc322b38c48" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;iterablediffer&quot;&gt;&lt;code&gt;IterableDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa9a3518ecfe1b22563104d95c8551aaf9c2bd7" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;keyvaluediffer&quot;&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b415e077e3361988c2f857fc3dc967e9bcb745" translate="yes" xml:space="preserve">
          <source>Provides a hook for centralized exception handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9257fc421b719e7e9ea89910b760bb128facd7fa" translate="yes" xml:space="preserve">
          <source>Provides a module to replace or remove when testing the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1ff873c15a55ade83acb0552102896a99c7a2f" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy that does not preload any modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3db596ece1a1c58b1beb16d0c3dc92a7c136abc" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy that preloads all modules as quickly as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abd726c53b26c510edb7d119ea042c8c042f3e6" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6003de65fb37910ad1a52f6b6630c1e94cb1fd3" translate="yes" xml:space="preserve">
          <source>Provides a set of built-in validators that can be used by form controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c69c00c305a0f684394aef06d5173d76d12e07" translate="yes" xml:space="preserve">
          <source>Provides a switch case expression to match against an enclosing &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression. When the expressions match, the given &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; template is rendered. If multiple match expressions match the switch expression value, all of them are displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae483f3e883980573fd75c34e895e749c9373866" translate="yes" xml:space="preserve">
          <source>Provides a switch case expression to match against an enclosing &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression. When the expressions match, the given &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; template is rendered. If multiple match expressions match the switch expression value, all of them are displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b1a486c61e7b580fdac0431f7516a11581529f" translate="yes" xml:space="preserve">
          <source>Provides a way to customize when activated routes get reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62a1c7ef9d3bbcad1a36c5bdad9477fd5656228" translate="yes" xml:space="preserve">
          <source>Provides a way to migrate AngularJS applications to Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dac37e322fe7a9dc40c678f9aaf99f6bce745a" translate="yes" xml:space="preserve">
          <source>Provides a well-known location for routing service providers including guards and resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0b1afb53b64fcdaef8af76086b6d95e29f87a8" translate="yes" xml:space="preserve">
          <source>Provides access to information about a route associated with a component that is loaded in an outlet. Use to traverse the &lt;code&gt;&lt;a href=&quot;router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; tree and extract information from nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54f33cad6368b991f49961d69ade9a14c72730e" translate="yes" xml:space="preserve">
          <source>Provides access to information about a route associated with a component that is loaded in an outlet. Use to traverse the &lt;code&gt;&lt;a href=&quot;routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; tree and extract information from nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893dd0b5ea5c90570a7bd768f6628369ae2522d9" translate="yes" xml:space="preserve">
          <source>Provides encoding and decoding of URL parameter and query-string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d55cfc88208fa3c7756e47a6e9d219a4ae5b37" translate="yes" xml:space="preserve">
          <source>Provides interactive prompts for optional configuration, such as adding routing support. All prompts can safely be allowed to default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca69fc3bc5f789656d8ed09a709f1cb74634f5e" translate="yes" xml:space="preserve">
          <source>Provides options for configuring the reactive forms module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8624e0d8f629e6c4af27527c1af12eb72275bf" translate="yes" xml:space="preserve">
          <source>Provides options for configuring the template-driven forms module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a021fc04fe85e843383ae9c651e172eb3dfefa" translate="yes" xml:space="preserve">
          <source>Provides polyfill scripts for browser support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb1814644e83e6dab9bc61869f6e53fd387fb8" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c96285b383fef43295b3135d866170627e2d20" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee31ee58a96e307c62cc23950dacff6aef2f0cec" translate="yes" xml:space="preserve">
          <source>Provides services that the other application components can use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff991c0c03e1035aea145f4b7da55a45e0bee0a1" translate="yes" xml:space="preserve">
          <source>Provides support for upgrading routing applications from Angular JS to Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aab6da2713355991f786bb57b0146d7ac753ac" translate="yes" xml:space="preserve">
          <source>Provides the control for the given name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bad13220af84327cd38d58af7f3576f91e518a" translate="yes" xml:space="preserve">
          <source>Provides two-way data-binding, parsing, and validation for form controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9c5e5e14bf9a68f0892495dd4456680789eb8c" translate="yes" xml:space="preserve">
          <source>Provides version information for all packages installed into &lt;code&gt;node_modules&lt;/code&gt; by the npm client. See &lt;a href=&quot;https://docs.npmjs.com/files/package-lock.json&quot;&gt;npm documentation&lt;/a&gt; for details. If you use the yarn client, this file will be &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/yarn-lock/&quot;&gt;yarn.lock&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f3eba6d80ef73de65802ad20df346f7e1692a5" translate="yes" xml:space="preserve">
          <source>Providing a custom validator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfaee2f6f116a78b47b69dd046ba40ae17f0ddb" translate="yes" xml:space="preserve">
          <source>Providing a router spy for &lt;em&gt;this component&lt;/em&gt; test suite happens to be as easy as providing a &lt;code&gt;HeroService&lt;/code&gt; spy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c05b6699d468083412915848d3a58b803e467c" translate="yes" xml:space="preserve">
          <source>Providing a service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f758b5933ac8f87bcf11d903a4818a87ac5ca080" translate="yes" xml:space="preserve">
          <source>Providing a service in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator using its &lt;code&gt;providers&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; property configures an &lt;code&gt;ElementInjector&lt;/code&gt;. For example, the following &lt;code&gt;TestComponent&lt;/code&gt; configures the &lt;code&gt;ElementInjector&lt;/code&gt; by providing the service as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab75bb136196a83a81e241eb6436efdf4c60701" translate="yes" xml:space="preserve">
          <source>Providing a singleton service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025158ef48c0e24c8476e3fa9acc7bb8431d7b36" translate="yes" xml:space="preserve">
          <source>Providing generation support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0fd17d9cf45eaceb9ed3050e791d808af9e432" translate="yes" xml:space="preserve">
          <source>Providing installation support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056018e2ab4674ddf211b8d8c0859cc45a70ce7d" translate="yes" xml:space="preserve">
          <source>Providing services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc9952295f635438967dc9b2ddab45f118fc97b" translate="yes" xml:space="preserve">
          <source>Providing services in &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7944c0f736389d481ac564fb987aa5a6c848bbd" translate="yes" xml:space="preserve">
          <source>Providing services in modules vs. components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac51cd4294aa1b2a5aee66d570f83fa58a143d7b" translate="yes" xml:space="preserve">
          <source>Proxy configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e86ed99293715243569378d313cb684f9dc6ca3" translate="yes" xml:space="preserve">
          <source>Proxy log levels are &lt;code&gt;info&lt;/code&gt; (the default), &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;silent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5119e9ea25163bffe862724260bc3d1343041e2" translate="yes" xml:space="preserve">
          <source>Proxy multiple entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdd72cd21d53fec0f196d1c6be8b3f2bd4cd199" translate="yes" xml:space="preserve">
          <source>Proxying to a backend server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c90af14bd313fa9ced2d1de95fd73ba071b57a" translate="yes" xml:space="preserve">
          <source>Public API surface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db0aa8489c076d646ed83d0785591b0a12e847e" translate="yes" xml:space="preserve">
          <source>Public domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547ca5ba25e06e7a974e12cb26f896e55c3e3ed3" translate="yes" xml:space="preserve">
          <source>Public symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a858cdee59dc4153f27cf9b6b21b190625fd9982" translate="yes" xml:space="preserve">
          <source>Publishing your library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179f6f644c523fa27e67fcaba9dbd74e9f678fc3" translate="yes" xml:space="preserve">
          <source>Pure AngularJS applications can be automatically bootstrapped by using an &lt;code&gt;ng-app&lt;/code&gt; directive somewhere on the HTML page. But for hybrid applications, you manually bootstrap via the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;. Therefore, it is a good preliminary step to switch AngularJS applications to use the manual JavaScript &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;&lt;code&gt;angular.bootstrap&lt;/code&gt;&lt;/a&gt; method even before switching them to hybrid mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7f90fdf2da497092a18a6bc45ba3c4f12e823d" translate="yes" xml:space="preserve">
          <source>Pure and impure pipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db9ba7ce2d64da8346dc7bbe64e9299d2d0a950" translate="yes" xml:space="preserve">
          <source>Pure pipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e623d5dadd9f4c5fad9b7f3fd0071b4f8bd49058" translate="yes" xml:space="preserve">
          <source>Pure pipes and pure functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbb7f091909bcd9878a3757528b6daf128c91ae" translate="yes" xml:space="preserve">
          <source>Pure service modules that don't have public (exported) declarations. For example, there's no point in re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; because it doesn't export anything. Its only purpose is to add http service providers to the application as a whole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="3cc1997089b1b6ce49ba3955b42550ad27889873" translate="yes" xml:space="preserve">
          <source>Purpose and Timing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fe58ffd0349acdd100420150f69d1281dd76ce" translate="yes" xml:space="preserve">
          <source>Push Notifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed30fc09e1412ff8de0e7d508541d501b797336" translate="yes" xml:space="preserve">
          <source>Put cleanup logic in &lt;code&gt;ngOnDestroy()&lt;/code&gt;, the logic that &lt;em&gt;must&lt;/em&gt; run before Angular destroys the directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ca636f56432ea4588cdf384932df664f341634" translate="yes" xml:space="preserve">
          <source>Put it all together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf20110d023249fe8bf093d40499c6a9de89f0c" translate="yes" xml:space="preserve">
          <source>Put presentation logic in the component class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb692eba951411fb5b87b156073a51072c4fa245" translate="yes" xml:space="preserve">
          <source>Put the copy in the &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436bf10648b085e2f03a5e5fa355472836a058a3" translate="yes" xml:space="preserve">
          <source>Putting code into a separate library is more complex than simply putting everything in one app. It requires more of an investment in time and thought for managing, maintaining, and updating the library. This complexity can pay off, however, when the library is being used in multiple apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02912d8e6dcddbd779e1544c6f3f00babfa879a" translate="yes" xml:space="preserve">
          <source>Qualify dependency lookup with parameter decorators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcad30e2e6ce03edaa562efea9e18b7ae5fc553" translate="yes" xml:space="preserve">
          <source>Queries the view that is removed and animates it to slide far to the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="a029560d8411f6bf73354ff2a95633b1dd3c69d4" translate="yes" xml:space="preserve">
          <source>Query for the &lt;em&gt;&amp;lt;h1&amp;gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70267b58fe69795cee30148c1b0ee6cb6009e2a1" translate="yes" xml:space="preserve">
          <source>Query parameters and fragments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae932d00e1b875d5358c78dd469269566befef04" translate="yes" xml:space="preserve">
          <source>Query parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa04d862ecdcb132994e603854d7875a2776e7f" translate="yes" xml:space="preserve">
          <source>Query the view for the form input element, and create a custom &quot;input&quot; event for the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de688cad77b3bd9109d93bd32268107b315f772" translate="yes" xml:space="preserve">
          <source>Query the view for the form input element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0147dca38477f3a5a9be1219b22328bb010f7dac" translate="yes" xml:space="preserve">
          <source>QueryList</source>
          <target state="translated">QueryList</target>
        </trans-unit>
        <trans-unit id="96ee8d3424170d88c85a6c53daec4b42daf0cd09" translate="yes" xml:space="preserve">
          <source>QueryParamsHandling</source>
          <target state="translated">QueryParamsHandling</target>
        </trans-unit>
        <trans-unit id="7bcad0f705586dc98a34fe539ac1afb898b0bc0d" translate="yes" xml:space="preserve">
          <source>Querying the build graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882bc2143837d14088fd99457a6e1e26efc0d00f" translate="yes" xml:space="preserve">
          <source>Querying the view containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946257a5e24d848457988f38e120cf9fa01c8afd" translate="yes" xml:space="preserve">
          <source>Question form components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694f84d59b7d66eb86a82e5f97c9c021ddd2cd24" translate="yes" xml:space="preserve">
          <source>Question model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0a1d833b62839e99a99af93ec9a7e7efeb2edb" translate="yes" xml:space="preserve">
          <source>Questionnaire data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7faea1a87db018fb2d7a4c86b27476d8ef729f4" translate="yes" xml:space="preserve">
          <source>Quick execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15385e5c37b34e622261935118dfc8bfe9961b8e" translate="yes" xml:space="preserve">
          <source>Quick info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a11f2e9058cd0fcbd7823fe881477a77b51a320" translate="yes" xml:space="preserve">
          <source>Quick info and navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece3e0ab30befddafad9fd9bbd3da9599a27c6f8" translate="yes" xml:space="preserve">
          <source>RESOURCE_CACHE_PROVIDER</source>
          <target state="translated">RESOURCE_CACHE_PROVIDER</target>
        </trans-unit>
        <trans-unit id="0fcae65af39014acc15fa243db9ff97c579e8854" translate="yes" xml:space="preserve">
          <source>ROUTER_CONFIGURATION</source>
          <target state="translated">ROUTER_CONFIGURATION</target>
        </trans-unit>
        <trans-unit id="fda6334ec46c7993b0298bdf16a0bca518c9ef7f" translate="yes" xml:space="preserve">
          <source>ROUTER_INITIALIZER</source>
          <target state="translated">ROUTER_INITIALIZER</target>
        </trans-unit>
        <trans-unit id="cc0ad686900ce387999ab3c4438af03da7b81568" translate="yes" xml:space="preserve">
          <source>ROUTES</source>
          <target state="translated">ROUTES</target>
        </trans-unit>
        <trans-unit id="ccfcde6b9b11aa68850125350c8fb34f36d4d469" translate="yes" xml:space="preserve">
          <source>Radio buttons: &lt;code&gt;&lt;a href=&quot;radiocontrolvalueaccessor&quot;&gt;RadioControlValueAccessor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7ef0603278b505cc6d2d71d35baa4aa1750211" translate="yes" xml:space="preserve">
          <source>RadioControlValueAccessor</source>
          <target state="translated">RadioControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="607b60904ab3566b835bab04aee31a66c903d40b" translate="yes" xml:space="preserve">
          <source>Range of week days that are considered the week-end for the given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dd49fa1c2918acfc0cc635f95bc4acfda156a1" translate="yes" xml:space="preserve">
          <source>RangeValueAccessor</source>
          <target state="translated">RangeValueAccessor</target>
        </trans-unit>
        <trans-unit id="cce370d2f9781af0f85d591ccdfad1fe365a619f" translate="yes" xml:space="preserve">
          <source>Rare</source>
          <target state="translated">Rare</target>
        </trans-unit>
        <trans-unit id="063b47d2f2ef26fe86f625d01121697f58c8f286" translate="yes" xml:space="preserve">
          <source>Rather than forward every &lt;code&gt;searchText&lt;/code&gt; value directly to the injected &lt;code&gt;PackageSearchService&lt;/code&gt;, the code in &lt;code&gt;ngOnInit()&lt;/code&gt;&lt;em&gt;pipes&lt;/em&gt; search values through three operators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e9f7a30260ef4ffa7fdd21d24c26259975cb6d" translate="yes" xml:space="preserve">
          <source>Rather than using this pattern, separate the two decorators into their own properties and add fallback logic as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07b230efe466a43119cf25f549da16039351ce0" translate="yes" xml:space="preserve">
          <source>Rather than wonder when the test fixture will or won't perform change detection, the samples in this guide &lt;em&gt;always call&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt;&lt;em&gt;explicitly&lt;/em&gt;. There is no harm in calling &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; more often than is strictly necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd97c538d031aa909359fb8f635a57f7cada53ff" translate="yes" xml:space="preserve">
          <source>Re-attaches the previously detached view to the change detection tree. Views are attached to the tree by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625bb98abae6906871d213e7c9b8c2b1fe2f099d" translate="yes" xml:space="preserve">
          <source>Re-export the Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; by adding it to the module &lt;code&gt;exports&lt;/code&gt; array. By re-exporting the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; here the components declared in &lt;code&gt;AppModule&lt;/code&gt; will have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c35abee2316ac8365352584a205ea47ed77e67" translate="yes" xml:space="preserve">
          <source>Re-exported by &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc11f344f43e2d39d1212e2b21c3d6581a73583" translate="yes" xml:space="preserve">
          <source>Re-open the &lt;code&gt;app.module.ts&lt;/code&gt; file, import and add &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;AppModule&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc59a8bbae2371ae1e0fd7beac79afcae776683" translate="yes" xml:space="preserve">
          <source>Reactive</source>
          <target state="translated">Reactive</target>
        </trans-unit>
        <trans-unit id="a1f4b6e98412e63a4fc1e6a6bd07371c114e7c61" translate="yes" xml:space="preserve">
          <source>Reactive Forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff98e0fc7f01b04bad4025de09759599afc991e" translate="yes" xml:space="preserve">
          <source>Reactive Forms Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb83ca557e89db92e40dccba428cac042f0bc1cd" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms both use a form model to track value changes between Angular forms and form input elements. The examples below show how the form model is defined and created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e224cbb414e5f3de3ba6c1592e1d8bba74c92" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms process and manage form data differently. Each offers different advantages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9adf5b89b23909fd127c82ffa7dd71bb5d8cc8c" translate="yes" xml:space="preserve">
          <source>Reactive form validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0a6db1d9885f2b4eb4070df239c7b7b0639bbe" translate="yes" xml:space="preserve">
          <source>Reactive forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c4037886566475f36761df0b6268abbbf65193" translate="yes" xml:space="preserve">
          <source>Reactive forms API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb563931aa0525b4c0723e0bc8434ba5ee3813f" translate="yes" xml:space="preserve">
          <source>Reactive forms also provide a straightforward path to testing because you are assured that your data is consistent and predictable when requested. Any consumers of the streams have access to manipulate that data safely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31ea3ae7bc965f3b475630c6889b8511cc61ea2" translate="yes" xml:space="preserve">
          <source>Reactive forms belongs to a different &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; called &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;, so in order to access any reactive forms directives, you have to import &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5d5b79a2203308e6c0a813577a4a37628cbc60" translate="yes" xml:space="preserve">
          <source>Reactive forms differ from template-driven forms in distinct ways. Reactive forms provide more predictability with synchronous access to the data model, immutability with observable operators, and change tracking through observable streams. If you prefer direct access to modify data in your template, template-driven forms are less explicit because they rely on directives embedded in the template, along with mutable data to track changes asynchronously. See the &lt;a href=&quot;forms-overview&quot;&gt;Forms Overview&lt;/a&gt; for detailed comparisons between the two paradigms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9ac24d872d63b17556cfae2327e381716155de" translate="yes" xml:space="preserve">
          <source>Reactive forms give you access to the form control state and value at a point in time. You can manipulate the current state and value through the component class or the component template. The following examples display the value of the form control instance and change it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0d0d2ab1d11c930b6b1582276de9d1cd2bddc2" translate="yes" xml:space="preserve">
          <source>Reactive forms have methods to change a control's value programmatically, which gives you the flexibility to update the value without user interaction. A form control instance provides a &lt;code&gt;setValue()&lt;/code&gt; method that updates the value of the form control and validates the structure of the value provided against the control's structure. For example, when retrieving form data from a backend API or service, use the &lt;code&gt;setValue()&lt;/code&gt; method to update the control to its new value, replacing the old value entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77ac95993e373741c843f4847040ca277f5c8cb" translate="yes" xml:space="preserve">
          <source>Reactive forms have properties that use observables to monitor form control values. The &lt;a href=&quot;../api/forms/formcontrol&quot;&gt;&lt;code&gt;FormControl&lt;/code&gt;&lt;/a&gt; properties &lt;code&gt;valueChanges&lt;/code&gt; and &lt;code&gt;statusChanges&lt;/code&gt; contain observables that raise change events. Subscribing to an observable form-control property is a way of triggering application logic within the component class. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb4ab92a56dcc4defcfb2ac4515b8029610a941" translate="yes" xml:space="preserve">
          <source>Reactive forms include a set of validator functions for common use cases. These functions receive a control to validate against and return an error object or a null value based on the validation check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fede3ea1d4a841ba50aac317631025ca1d8153a0" translate="yes" xml:space="preserve">
          <source>Reactive forms provide a relatively easy testing strategy because they provide synchronous access to the form and data models, and they can be tested without rendering the UI. In these tests, status and data are queried and manipulated through the control without interacting with the change detection cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9accf289c84c2991d9c58185296f8743b54f7e" translate="yes" xml:space="preserve">
          <source>Reactive forms provide access to information about a given control through properties and methods provided with each instance. These properties and methods of the underlying &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; class are used to control form state and determine when to display messages when handling validation. For more information, see &lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;Simple form validation&lt;/a&gt; later in this guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0e1d78caa8cd03d25c13b9d6d94bf11d48db6b" translate="yes" xml:space="preserve">
          <source>Reactive forms use an explicit and immutable approach to managing the state of a form at a given point in time. Each change to the form state returns a new state, which maintains the integrity of the model between changes. Reactive forms are built around observable streams, where form inputs and values are provided as streams of input values, which can be accessed synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4600df76443898c376860cc863f1bb7d7233755" translate="yes" xml:space="preserve">
          <source>Reactive programming is an asynchronous programming paradigm concerned with data streams and the propagation of change (&lt;a href=&quot;https://en.wikipedia.org/wiki/Reactive_programming&quot;&gt;Wikipedia&lt;/a&gt;). RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using observables that makes it easier to compose asynchronous or callback-based code. See (&lt;a href=&quot;https://rxjs.dev/guide/overview&quot;&gt;RxJS Docs&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d2e9adf36fc2ad7858e49d434aad124f5487f3" translate="yes" xml:space="preserve">
          <source>ReactiveFormsModule</source>
          <target state="translated">ReactiveFormsModule</target>
        </trans-unit>
        <trans-unit id="822053f8c36c65b4885e99e35ce51f29f03c2d13" translate="yes" xml:space="preserve">
          <source>Read about &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;&lt;em&gt;Template Syntax&lt;/em&gt;&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f527f4691c39fe3c9a3edc43f600c96b879d15df" translate="yes" xml:space="preserve">
          <source>Read about how to write template expressions in &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;Template expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8cc3177cd67e98185a060ad1af9e08c5b4e03a" translate="yes" xml:space="preserve">
          <source>Read about other &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; properties and methods in the &lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive forms API&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35acddd11ffad194504b88f2399ed4d509e65d62" translate="yes" xml:space="preserve">
          <source>Read about the following forms of binding in &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb13a238c7f23330639ed8115408080c8c11236b" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;template-syntax#interpolation&quot;&gt;interpolation&lt;/a&gt; in &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8afee31af40fd9cb2ab92093ed911e661096107" translate="yes" xml:space="preserve">
          <source>Read more about components, templates, and views in &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405d5fda034a8ddc75ce204c2693de8cabd5992c" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; format options in the &lt;a href=&quot;../api/common/datepipe&quot;&gt;Date Pipe&lt;/a&gt; API Reference page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1704320eeef607c6edb67f23a227c28dc7528ca7" translate="yes" xml:space="preserve">
          <source>Read more about these and many other built-in pipes in the &lt;a href=&quot;api?type=pipe&quot;&gt;pipes topics&lt;/a&gt; of the &lt;a href=&quot;api&quot;&gt;API Reference&lt;/a&gt;; filter for entries that include the word &quot;pipe&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cef1f00f0d5e805663667f46ac1f095d0abe151" translate="yes" xml:space="preserve">
          <source>Read more forms in the &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms in Angular&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b2dc999995d625d84643a8250e58178c4a0beb" translate="yes" xml:space="preserve">
          <source>Read-Only</source>
          <target state="translated">Read-Only</target>
        </trans-unit>
        <trans-unit id="b2701d2af58867b3c39e3f656bea5466c7230574" translate="yes" xml:space="preserve">
          <source>Read-OnlyDeclared in Constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16a19626f162e847eb9c8fe316bad0b1a858d1a" translate="yes" xml:space="preserve">
          <source>Reading the full response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ae57c2193b591354e3b83454a5735ee675dde6" translate="yes" xml:space="preserve">
          <source>Reattaching a detached component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7326d6682f0b14b11603710597d4126f529e2429" translate="yes" xml:space="preserve">
          <source>Rebuild on change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6313b86dbd9658ecc263ad6aa3a896e115fa9ab8" translate="yes" xml:space="preserve">
          <source>Recalculates the value and validation status of the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006e28e26a1884bfeadfaf9ac3e7eec58f19e0d6" translate="yes" xml:space="preserve">
          <source>Recall that Angular always adds a component instance to its own injector; that's why you could inject &lt;em&gt;Alex&lt;/em&gt; into &lt;em&gt;Cathy&lt;/em&gt;&lt;a href=&quot;dependency-injection-navtree#known-parent&quot;&gt;earlier&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f968f17cbf2bd77955438d01bbbf2a03b6e241e5" translate="yes" xml:space="preserve">
          <source>Recall that Angular calls both &lt;em&gt;AfterContent&lt;/em&gt; hooks before calling either of the &lt;em&gt;AfterView&lt;/em&gt; hooks. Angular completes composition of the projected content &lt;em&gt;before&lt;/em&gt; finishing the composition of this component's view. There is a small window between the &lt;code&gt;AfterContent...&lt;/code&gt; and &lt;code&gt;AfterView...&lt;/code&gt; hooks to modify the host view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149f9cee1708e5e5476d5efc22525ef63bfe8e64" translate="yes" xml:space="preserve">
          <source>Recall that the app hasn't been compiled. So when you call &lt;code&gt;createComponent()&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; compiles implicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137571674af298a9abc8ef79c09d94f5b73f761e" translate="yes" xml:space="preserve">
          <source>Recall that you specified a default child route for the crisis center so this simple &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; is fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e5653b3f2b5e9170fb4fe6fc116051b1509ba3" translate="yes" xml:space="preserve">
          <source>ReceivedMessage</source>
          <target state="translated">ReceivedMessage</target>
        </trans-unit>
        <trans-unit id="595ce83435a7d04760fe605d453dcec356f0677b" translate="yes" xml:space="preserve">
          <source>Receives the current &lt;code&gt;product&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2113a427348bd8709bf309d9827cd761a6cb7589" translate="yes" xml:space="preserve">
          <source>Record representing the item change information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="06be91a8ee231e7c4925242abd4496240ce810bd" translate="yes" xml:space="preserve">
          <source>Reduce the setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f89ff05c95fc96d934805c0903d936688529f19" translate="yes" xml:space="preserve">
          <source>Refactor the component's &lt;code&gt;hero&lt;/code&gt; property to be of type &lt;code&gt;Hero&lt;/code&gt;. Initialize it with an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; and the name &lt;code&gt;Windstorm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fd18399486a759e805869a3b5a5bb49c3d4a4c" translate="yes" xml:space="preserve">
          <source>Refactor the details area in the &lt;code&gt;HeroesComponent&lt;/code&gt; template so it looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce16abef8ba24a70146da7aa12dbdc7dec2b37e" translate="yes" xml:space="preserve">
          <source>Refactor the routing configuration into a &lt;code&gt;routing module&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398443e8de1f60bf6225f1777eac84dc7ec81f94" translate="yes" xml:space="preserve">
          <source>Refactoring parts of an app into a library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0736e496b7db32af8d26f9241fc2724968f6fc" translate="yes" xml:space="preserve">
          <source>Refactoring the original &lt;code&gt;HeroesComponent&lt;/code&gt; into two components yields benefits, both now and in the future:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e89c66f9afa5d101261659d08f8cb88dbf4467" translate="yes" xml:space="preserve">
          <source>Refer to that variable in a button many lines away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22c7cb05ff594d901a7a846f32fadcfb9c7cf61" translate="yes" xml:space="preserve">
          <source>Refer to the sample code snippet below for a syntax example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573cdca6dc9153301f2c4e2204f55b081a5f8dbd" translate="yes" xml:space="preserve">
          <source>Reference &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; within the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; host element as well as within its descendants to access the item's properties. The following example references &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; first in an interpolation and then passes in a binding to the &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; property of the &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e4a415dd0497a24def6db81733f3a61579b98e" translate="yes" xml:space="preserve">
          <source>Reference to a local (non-exported) symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075055d35ede87b75efb0de56af674b40e1a3927" translate="yes" xml:space="preserve">
          <source>Reference to a non-exported class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd81b4dfd9ab55a313b5eb7accb31f8ccf8d35d4" translate="yes" xml:space="preserve">
          <source>Reference to a non-exported function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed70328904d4fc92b906431035a17a3b6d7989b7" translate="yes" xml:space="preserve">
          <source>Reference to the current application is provided as a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7837f51bdaa3bad46c5634516a1b42c048946168" translate="yes" xml:space="preserve">
          <source>ReflectiveInjector</source>
          <target state="translated">ReflectiveInjector</target>
        </trans-unit>
        <trans-unit id="d1a1500261e47053460b5d62062e8b2fc644fa2b" translate="yes" xml:space="preserve">
          <source>ReflectiveKey</source>
          <target state="translated">ReflectiveKey</target>
        </trans-unit>
        <trans-unit id="32a0f3a28b7f9eb27dd0e894b6782f65fb64799c" translate="yes" xml:space="preserve">
          <source>Refresh the browser and add some heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473b759a23293b19f3b2c19432cea12958184fb7" translate="yes" xml:space="preserve">
          <source>Refresh the browser and start clicking. Users can navigate around the app, from the dashboard to hero details and back, from heroes list to the mini detail to the hero details and back to the heroes again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfa5e02c6fdba8f1ec0c45696170dbdfab0cfc6" translate="yes" xml:space="preserve">
          <source>Refresh the browser and try the new delete functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c112917d8495d7a7ddcf2a84127d956d8be4f4" translate="yes" xml:space="preserve">
          <source>Refresh the browser, and it stops at the breakpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176e1375358badf3872db54069f2b717475df2dd" translate="yes" xml:space="preserve">
          <source>Refresh the browser, change a hero name and save your change. The &lt;code&gt;save()&lt;/code&gt; method in &lt;code&gt;HeroDetailComponent&lt;/code&gt; navigates to the previous view. The hero now appears in the list with the changed name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cebb52277a82605b1d204a860c9d62f2439d93" translate="yes" xml:space="preserve">
          <source>Refresh the browser. The hero data should successfully load from the mock server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadbfb12ae3657d300a87b0fefe383766298bba2" translate="yes" xml:space="preserve">
          <source>Refresh the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0669a24b1d3d64f2ca8003a83f78ea04f51e5b45" translate="yes" xml:space="preserve">
          <source>Regardless of whether you choose &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;, the basic principles of upgrading, the mental model behind hybrid apps, and how you use the &lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; utilities remain the same. For more information, see the &lt;a href=&quot;upgrade#how-ngupgrade-works&quot;&gt;How &lt;code&gt;ngUpgrade&lt;/code&gt; Works&lt;/a&gt; section of &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e5f50ef64cbfa7b161d319c5cc5e6aa9d83b05" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; within a group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1021db51e8ea3da43eb931cc521ad3cb699029a" translate="yes" xml:space="preserve">
          <source>Register &lt;strong&gt;global&lt;/strong&gt; style files in the &lt;code&gt;styles&lt;/code&gt; section which, by default, is pre-configured with the global &lt;code&gt;styles.css&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e5fb5a19ff23a15bfa6a1bb4ec2933aca5ba75" translate="yes" xml:space="preserve">
          <source>Register Form Group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd52a8f3b4041c85e460e6e23090e3d3a157abb" translate="yes" xml:space="preserve">
          <source>Register Router and Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499b39c06dfc2e66fe91454fabfa4e09e021f942" translate="yes" xml:space="preserve">
          <source>Register a &lt;code&gt;/login&lt;/code&gt; route in the &lt;code&gt;auth/auth-routing.module.ts&lt;/code&gt;. In &lt;code&gt;app.module.ts&lt;/code&gt;, import and add the &lt;code&gt;AuthModule&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt; imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eeba7d8e16fcf05f45372b3016d653066e897db" translate="yes" xml:space="preserve">
          <source>Register a callback function which is notified upon successful hybrid AngularJS / Angular application has been bootstrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcf2e07710629a4c3d9c53e07ad77ebfa12f127" translate="yes" xml:space="preserve">
          <source>Register a callback to provide the value for a key when &lt;code&gt;toJson&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b321109b4df896dd3cf33339222ff234822a75" translate="yes" xml:space="preserve">
          <source>Register a listener for change events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5f193b5d08b9ef1d20f00035f6d27992e885a8" translate="yes" xml:space="preserve">
          <source>Register a listener for disabled events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b192b96bb88748fadfa4f7fd4ae3bc3ef37b629" translate="yes" xml:space="preserve">
          <source>Register a listener to be called when the platform is disposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f348892fd77f60dec269716eb0f91e62200f5ae" translate="yes" xml:space="preserve">
          <source>Register a nested &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d263f53532884277ae030db32685394d939772fa" translate="yes" xml:space="preserve">
          <source>Register a provider with a component when you &lt;em&gt;must&lt;/em&gt; limit the scope of a service instance to that component and its component tree. Apply the same reasoning to registering a provider with a directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d110fe90ef3eb9f9f1422c30fef0ef65e2643f6c" translate="yes" xml:space="preserve">
          <source>Register a provider with a component when you must limit a service instance to a component and its component tree, that is, its child components. For example, a user editing component, &lt;code&gt;UserEditorComponent&lt;/code&gt;, that needs a private copy of a caching &lt;code&gt;UserService&lt;/code&gt; should register the &lt;code&gt;UserService&lt;/code&gt; with the &lt;code&gt;UserEditorComponent&lt;/code&gt;. Then each new instance of the &lt;code&gt;UserEditorComponent&lt;/code&gt; gets its own cached service instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8465823a679e4e48ffba873912c7013c8e4cbd0b" translate="yes" xml:space="preserve">
          <source>Register a service in &lt;code&gt;AppComponent&lt;/code&gt; providers &lt;em&gt;only&lt;/em&gt; if the service must be hidden from components outside the &lt;code&gt;AppComponent&lt;/code&gt; tree. This is a rare use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da47a0925da134eac74aa2a82182bb68d6a93f71" translate="yes" xml:space="preserve">
          <source>Register global data to be used internally by Angular. See the &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt; to know how to import additional locale data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc1edf78a618f2c721fd4d8c71efbcec47e1ad6" translate="yes" xml:space="preserve">
          <source>Register global data to be used internally by Angular. See the &lt;a href=&quot;../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt; to know how to import additional locale data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d16dcfb19d1203e1a27aba769ee65828ac58db9" translate="yes" xml:space="preserve">
          <source>Register the dependency provider using the &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f01933bdc299c95cba737612efd3bafdc54e98" translate="yes" xml:space="preserve">
          <source>Register the given Angular Service Worker script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474c732f0215871e7f1f2e923bd067a6b129d90d" translate="yes" xml:space="preserve">
          <source>Registering a route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28a4475c3c1cc3055c98c04a6e7184a2593555c" translate="yes" xml:space="preserve">
          <source>Registering a single form control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8c904bd7d052116502d4142d609d72274b8ed7" translate="yes" xml:space="preserve">
          <source>Registering the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt; imports makes the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service available everywhere in the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c298327d98991688ac0360aa7243c779039c51" translate="yes" xml:space="preserve">
          <source>Registers a &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;DI provider&lt;/a&gt; for a set of routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f33e0ca2a6dd4f38bd5e9618439a64a8578b95f" translate="yes" xml:space="preserve">
          <source>Registers a &lt;a href=&quot;../guide/glossary#provider&quot;&gt;DI provider&lt;/a&gt; for a set of routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bef6dd7e65f36b218e6bc6ec1c691d3bc523b57" translate="yes" xml:space="preserve">
          <source>Registers a URL change listener. Use to catch updates performed by the Angular framework that are not detectible through &quot;popstate&quot; or &quot;hashchange&quot; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c581def56ab6ac9fb88c3ad15e1cbaca013d411" translate="yes" xml:space="preserve">
          <source>Registers a callback function is called by the forms API on initialization to update the form model on blur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33580665d68f23d19cc437c5fddf02f9b41dc27" translate="yes" xml:space="preserve">
          <source>Registers a callback function that is called when the control's value changes in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167499d55d61fb6931fd057684fda26fc02336a3" translate="yes" xml:space="preserve">
          <source>Registers a callback function to call when the validator inputs change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cccd3c9038849e370222a8f5454556408b880f3" translate="yes" xml:space="preserve">
          <source>Registers a control with the group's list of controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0058ace972503cd082944e3b514ee343130d6196" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control is touched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9b9cea3b85b99825f4339268f87d45e3ddce50" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control value changes and writes an array of the selected options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42402627981bd38f04d7134c6ef6e366e0f49b16" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fc74b3379ee6475d87386b853bd24c10dda94e" translate="yes" xml:space="preserve">
          <source>Registers a global handler for an event in a target view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b957ac7972a68c5c19698f6b2f46d15fbaa324" translate="yes" xml:space="preserve">
          <source>Registers a handler for a specific element and event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a72e375b3ac6e3d36f6d01323010121ac19cfe" translate="yes" xml:space="preserve">
          <source>Registers an application with a testability hook so that it can be tracked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303ef3aa05eb96d9035ebfaf0e6bb0a6eff8d9e0" translate="yes" xml:space="preserve">
          <source>Registers handlers for events emitted by this instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f8a4aa998ff705d940ac02f21808b84034f706" translate="yes" xml:space="preserve">
          <source>Registers listeners for URL changes. This API is used to catch updates performed by the AngularJS framework. These changes are a subset of the &lt;code&gt;$locationChangeStart&lt;/code&gt; and &lt;code&gt;$locationChangeSuccess&lt;/code&gt; events which fire when AngularJS updates its internally-referenced version of the browser URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bd756c2e6106aa040f50c2114a07bb4ea92816" translate="yes" xml:space="preserve">
          <source>Registers the adapter's AngularJS upgrade module for unit testing in AngularJS. Use this instead of &lt;code&gt;angular.mock.module()&lt;/code&gt; to load the upgrade module into the AngularJS testing injector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3af0571f22d311e46fa14763dd68335c62e484" translate="yes" xml:space="preserve">
          <source>Regular expressions for plurals and selections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c24b920e6e0806452f541dd508872c3a4b51bb" translate="yes" xml:space="preserve">
          <source>Relabel the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb32d7ae1139f3dea16af21922728a2ee4c17c" translate="yes" xml:space="preserve">
          <source>Related configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08acc559b3522efc7db5dba837c335ae47d5270" translate="yes" xml:space="preserve">
          <source>Related information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af37119e89ab5e671b28740aaa9741b7dd676656" translate="yes" xml:space="preserve">
          <source>Related resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970299e4e2176d0fb6a3ccd9806c0c1ad10e1cb4" translate="yes" xml:space="preserve">
          <source>Relative font size: &lt;code&gt;'3em'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273924f6b8bb09d40649f3a052e0708a616b4325" translate="yes" xml:space="preserve">
          <source>Relative navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7ddb7603d2a26315f2455b522c75c84a223953" translate="yes" xml:space="preserve">
          <source>Relative paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1e9859d878c64d5a702f7c04bd96cbb4ed5678" translate="yes" xml:space="preserve">
          <source>Release announcements (older): &lt;a href=&quot;https://blog.angularjs.org/search?q=available&amp;amp;by-date=true&quot;&gt;Angular blog - announcements about releases prior to August 2017&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3ff56d3178fb09ce35426dcffa4e7a93999e80" translate="yes" xml:space="preserve">
          <source>Release announcements: &lt;a href=&quot;https://blog.angular.io/tagged/release%20notes&quot;&gt;Angular blog - release announcements&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e9be040ffdccdde22aa875dc9106626987b907" translate="yes" xml:space="preserve">
          <source>Release details: &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;Angular change log&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375da07bd98ddf85ba6ae31bd08bf325cf089dfe" translate="yes" xml:space="preserve">
          <source>Release frequency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea33e8c31694912887d747c2ac0b47cd176d8edd" translate="yes" xml:space="preserve">
          <source>Release schedule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2014b76ac55691bf918cbe564e50b6a34f7662a" translate="yes" xml:space="preserve">
          <source>Release schedule: &lt;a href=&quot;releases#schedule&quot;&gt;Angular versioning and releases&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d9bc51591e20cba61b95e7bbe1f27d185b3c80" translate="yes" xml:space="preserve">
          <source>Released</source>
          <target state="translated">Released</target>
        </trans-unit>
        <trans-unit id="1f506dd995cb9abff9bec6254417f6424b5d409d" translate="yes" xml:space="preserve">
          <source>Rely on the router to call the resolver. Don't worry about all the ways that the user could navigate away. That's the router's job. Write this class and let the router take it from there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb2937301efc646b5a60fb1b92a22a48c083f94" translate="yes" xml:space="preserve">
          <source>Relying on direct DOM access creates tight coupling between your application and rendering layers which will make it impossible to separate the two and deploy your application into a web worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7206b206b31aa3633a033e2dc7a73ae006e2945f" translate="yes" xml:space="preserve">
          <source>Remember also that a directive's data-bound input properties are not set until &lt;em&gt;after construction&lt;/em&gt;. That's a problem if you need to initialize the directive based on those properties. They'll have been set when &lt;code&gt;ngOnInit()&lt;/code&gt; runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13651e994fa66c3288128cedcf7c0183fa01bfc1" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;app-heroes&lt;/code&gt; is the &lt;a href=&quot;toh-pt1#selector&quot;&gt;element selector&lt;/a&gt; for the &lt;code&gt;HeroesComponent&lt;/code&gt;. So add an &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; element to the &lt;code&gt;AppComponent&lt;/code&gt; template file, just below the title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3d011212e72a1e405fbfa32d0e8f9ce97b09af" translate="yes" xml:space="preserve">
          <source>Remember that impure pipes are called every few milliseconds. If you're not careful, this pipe will punish the server with requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b082e1ff346e7c39761ee9a112da674a5cb94e69" translate="yes" xml:space="preserve">
          <source>Remember that in this situation you'd call &lt;code&gt;setCurrentClasses()&lt;/code&gt;, both initially and when the dependent properties change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa44c5766b19ac0cd5b2eeacca3f333d904c4fc" translate="yes" xml:space="preserve">
          <source>Remember that the component &lt;em&gt;class&lt;/em&gt; does not subscribe to the &lt;code&gt;heroes$&lt;/code&gt;&lt;em&gt;observable&lt;/em&gt;. That's the job of the &lt;a href=&quot;toh-pt6#asyncpipe&quot;&gt;&lt;code&gt;AsyncPipe&lt;/code&gt;&lt;/a&gt; in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9866cde69e0f9bace65e73f610bd7b59dd1186" translate="yes" xml:space="preserve">
          <source>Remember the brackets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1f45af2f822f4853dababc20a2d2e721186681" translate="yes" xml:space="preserve">
          <source>Remember the declarations array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8cdd266af8fe9056293c06a0835486379a11e6" translate="yes" xml:space="preserve">
          <source>Remember to add the &lt;code&gt;InspectorComponent&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt;&lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c8c82fcfa1ebdb050af38bd24616cd31038d91" translate="yes" xml:space="preserve">
          <source>Remember to call &lt;code&gt;setCurrentStyles()&lt;/code&gt;, both initially and when the dependent properties change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17516af45dd099bbc1571d24b1c7bde6c0c05358" translate="yes" xml:space="preserve">
          <source>Remember to exclude these files from stackblitz by listing them in the &lt;code&gt;stackblitz.json&lt;/code&gt; as illustrated here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e4e58a5951e0a7c881f2f6e289757c9dd27f55" translate="yes" xml:space="preserve">
          <source>Remember to import &lt;code&gt;GreetingModule&lt;/code&gt; as a Javascript import at the top of the file and don't add it to more than one &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832180d8eb87ef1998ffb89e091308e4fe67fd37" translate="yes" xml:space="preserve">
          <source>Remember to import the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to make &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; available as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d39a4f7a173386221bc146c1862a6c09ae6cca" translate="yes" xml:space="preserve">
          <source>Remember to refer to this region by name in the &lt;code&gt;region&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;code-pane&amp;gt;&lt;/code&gt; as you did in an example above like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae2155556aba175b9d87c09bdfea7d3d3051ddd" translate="yes" xml:space="preserve">
          <source>Remember, components, directives, and pipes belong to one module only. You only need to declare them once in your app because you share them by importing the necessary modules. This saves you time and helps keep your app lean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8adb46d34eff3a8b15bcc3c40717d0ab0d11e49" translate="yes" xml:space="preserve">
          <source>Remember, whether a value is safe depends on context, so choose the right context for your intended use of the value. Imagine that the following template needs to bind a URL to a &lt;code&gt;javascript:alert(...)&lt;/code&gt; call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3a3049f887fbcb21bfbe766ecfe584918f00c4" translate="yes" xml:space="preserve">
          <source>Reminder: If you use these &lt;code&gt;Deprecated*&lt;/code&gt; pipes, you should migrate to the current APIs listed above as soon as possible. These deprecated APIs are candidates for removal in version 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762589a8acb662468c7b8292a03d308f440ae134" translate="yes" xml:space="preserve">
          <source>Reminder: In the file list, right-click the &lt;code&gt;app&lt;/code&gt; folder, choose &lt;code&gt;Angular Generator&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f94b095a44dde7d0d8af01b457729bec0e1a8d" translate="yes" xml:space="preserve">
          <source>Reminder: Open &lt;code&gt;app.module.ts&lt;/code&gt; and add a route for the component &lt;code&gt;CartComponent&lt;/code&gt;, with a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;cart&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2147e66b8bc2bd312faebc0682b87f9a6d5d01" translate="yes" xml:space="preserve">
          <source>Reminder: the styles in the style file apply &lt;em&gt;only to this component&lt;/em&gt;. They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c420308ba57631e51f4eea85e2dbbb8c5f167ff8" translate="yes" xml:space="preserve">
          <source>Reminder: these styles apply &lt;em&gt;only to this component&lt;/em&gt;. They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141c0d8ec3a9c9686ec3000640fa7c8d7b4d6f06" translate="yes" xml:space="preserve">
          <source>Remove a control from this form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e4826b1fe6a272f91ac4b1061500c0ffd1c5c8" translate="yes" xml:space="preserve">
          <source>Remove a control from this group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0140d145c4d2ab13c262d2fa061836da399313ed" translate="yes" xml:space="preserve">
          <source>Remove a group of controls to this form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a38c48e797a3f1d17578e956636a4c90bd7f29" translate="yes" xml:space="preserve">
          <source>Remove a key from the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d897e55ccff78c2ff5b4107c0eb0180e972a408" translate="yes" xml:space="preserve">
          <source>Remove all controls in the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0bd90c68fe76316f5f2ce32cfdc26eb59130e4" translate="yes" xml:space="preserve">
          <source>Remove all elements from a FormArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675a65343753f89282932f2d108d9401b5d4c082" translate="yes" xml:space="preserve">
          <source>Remove all mention of the &lt;code&gt;CrisisCenterModule&lt;/code&gt; from &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354bb4620eb8d89f95b9ce62fa9eb46bf6e0c8b6" translate="yes" xml:space="preserve">
          <source>Remove any &lt;code&gt;map(res =&amp;gt; res.json())&lt;/code&gt; calls. They are no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0355b45ef70dfcbfc27082bbbab1a27db9c45ede" translate="yes" xml:space="preserve">
          <source>Remove dead code (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f42d0a7e5c675bc4fc4073516f4e88f7f3f0df" translate="yes" xml:space="preserve">
          <source>Remove duplicate hero routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8a49a00d9c37a6610d70fea7180e05bfd548be" translate="yes" xml:space="preserve">
          <source>Remove heroes declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b749c5698be06d88d76f4c4c20af916d3cb9ea3a" translate="yes" xml:space="preserve">
          <source>Remove the &amp;lt;script&amp;gt; tag for the phone list component from &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e653fd3d1a09bf18e552cdb4c722cca2f49951" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;HeroListComponent&lt;/code&gt; from the &lt;code&gt;AppModule&lt;/code&gt;'s &lt;code&gt;declarations&lt;/code&gt; because it's now provided by the &lt;code&gt;HeroesModule&lt;/code&gt;. You can evolve the hero feature with more components and different routes. That's a key benefit of creating a separate module for each feature area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228fb5b1cfd86efcf92c5af71ef03cc392fc0758" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;HeroListComponent&lt;/code&gt; import and the &lt;code&gt;/heroes&lt;/code&gt; route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6dce3d69d19a74546a704c4cb5ccb85bad0cfe" translate="yes" xml:space="preserve">
          <source>Remove the control at the given &lt;code&gt;index&lt;/code&gt; in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acef8513aff8e50c9de63f43d894a476d7a1a4b4" translate="yes" xml:space="preserve">
          <source>Remove the initial crisis center route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt;. The feature routes are now provided by the &lt;code&gt;HeroesModule&lt;/code&gt; and the &lt;code&gt;CrisisCenter&lt;/code&gt; modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab54fe624f00c44dfb29ea434660cb21fa96c33" translate="yes" xml:space="preserve">
          <source>Removed APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675b61563e331e987ff42c65c9681e0849490c82" translate="yes" xml:space="preserve">
          <source>Removes a given value or all values from a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36388aed802da3334e538eaafea28bc9dc62465b" translate="yes" xml:space="preserve">
          <source>Removes a trailing slash from a URL string if needed. Looks for the first occurrence of either &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or the end of the line as &lt;code&gt;/&lt;/code&gt; characters and removes the trailing slash if one exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77dcf847494e18c2040e4c43e2df4c50e620a4b" translate="yes" xml:space="preserve">
          <source>Removes or recreates a portion of the DOM tree based on the &lt;code&gt;showSection&lt;/code&gt; expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4476d012096601913a81f6e9c72341413e9d5d" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; instance from the internal list of directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2357fbee7e433019e97dfebac16d58751c7f42" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; instance from the internal list of directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872946ce457e8ed2515586b6b9533517081ce7ea" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance from the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cdb6f2b6cb7abc01fe47bb82184cdf5686326e" translate="yes" xml:space="preserve">
          <source>Removes whitespace-only text nodes. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ecc17d3ab4f9a92555a0b5560eb0f9ba433b8c" translate="yes" xml:space="preserve">
          <source>Removing Bazel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcfcfb14e902bf6f8ca406c3fe92143c41a0ba9" translate="yes" xml:space="preserve">
          <source>Removing data access from components means you can change your mind about the implementation anytime, without touching any components. They don't know how the service works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a3c77f08cd8291fe544b9d209d82e28baa5950" translate="yes" xml:space="preserve">
          <source>Removing whitespace can greatly reduce AOT-generated code size and speed up view creation. As of Angular 6, the default for &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; is false (whitespace is removed). To change the default setting for all components in your application, set the &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; option of the AOT compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1455f12769a3d50f36112140e2904afcdbdff365" translate="yes" xml:space="preserve">
          <source>Rename the NgModule files to &lt;code&gt;crisis-center.module.ts&lt;/code&gt; and &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060139a45ee7fa74f8aea343ea509e8ea84869cc" translate="yes" xml:space="preserve">
          <source>Rename the component's &lt;code&gt;hero&lt;/code&gt; property to &lt;code&gt;selectedHero&lt;/code&gt; but don't assign it. There is no &lt;em&gt;selected hero&lt;/em&gt; when the application starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb48a8e76df217606c36986299abb4e3fa45f36" translate="yes" xml:space="preserve">
          <source>Rename the copy to &lt;code&gt;messages.fr.xlf&lt;/code&gt; for the French language translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d2d7d24ec7e7f24ea084470bc301ff5eef960f" translate="yes" xml:space="preserve">
          <source>RenderComponentType</source>
          <target state="translated">RenderComponentType</target>
        </trans-unit>
        <trans-unit id="e72008facbad3c15c8bae1dc5a6d48d55c2181ce" translate="yes" xml:space="preserve">
          <source>Renderer</source>
          <target state="translated">Renderer</target>
        </trans-unit>
        <trans-unit id="cc99feb324f6b6cb7870e79c770886db703053d9" translate="yes" xml:space="preserve">
          <source>Renderer2</source>
          <target state="translated">Renderer2</target>
        </trans-unit>
        <trans-unit id="f05efcc1457680c2f44d46edb4c6e631506df261" translate="yes" xml:space="preserve">
          <source>RendererFactory2</source>
          <target state="translated">RendererFactory2</target>
        </trans-unit>
        <trans-unit id="c2d63a3d0692201be642c3e5b12a761c6202822f" translate="yes" xml:space="preserve">
          <source>RendererStyleFlags2</source>
          <target state="translated">RendererStyleFlags2</target>
        </trans-unit>
        <trans-unit id="4b61abbb7d2ad8773879992ad5774433aa516b59" translate="yes" xml:space="preserve">
          <source>RendererType2</source>
          <target state="translated">RendererType2</target>
        </trans-unit>
        <trans-unit id="79f5346b3de7d933df3da0b45252bd8407010458" translate="yes" xml:space="preserve">
          <source>Rendering a feature module&amp;rsquo;s component template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47a9f47d5939524c6012ea0b6181f4406d6227e" translate="yes" xml:space="preserve">
          <source>Rendering critical pages on the server is a technique that can greatly improve perceived responsiveness when the app first loads. An app that would otherwise take ten or more seconds to start could be rendered on the server and delivered to the user's device in less than a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b27806e37094fca797ad3deab14837abf019cf" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; to string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e22790812ac0598ea57408ee918927b321f270" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; to string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3256d4a8135d6ea9724a5a9bef59f6a339cb2c" translate="yes" xml:space="preserve">
          <source>Renders a Module to string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831690a047ef566fcaf6f184d3c0cf5a6c23f194" translate="yes" xml:space="preserve">
          <source>Renders the current state of the platform to string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3631fed92fa9271412dda086e8601dba47a977f" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;HttpModule&lt;/code&gt; with &lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;&lt;code&gt;HttpClientModule&lt;/code&gt;&lt;/a&gt; (from &lt;a href=&quot;../api/common/http&quot;&gt;&lt;code&gt;@angular/common/http&lt;/code&gt;&lt;/a&gt;) in each of your modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775add567e4ba89b65ba005f6e4ef796f364f4f1" translate="yes" xml:space="preserve">
          <source>Replace an existing control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35183ee247577ad2ab951c8a4e018783564a0cb3" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9be4259d7dbb3cbb65bc98ac003799fbdd38cc" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. Recall that modules can import other modules. The &lt;code&gt;overrideModule&lt;/code&gt; method can reach deeply into the current testing module to modify one of these inner modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdfa3991734f11ff4020bf2d9aba4c1c8e5320c" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given component class, which could be nested deeply within an inner module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c173c6528752be2b7b80d6e21e410a7734627f" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given directive class, which could be nested deeply within an inner module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5576d7423a0ff218fb985ae2f5a3473178c7e9" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given pipe class, which could be nested deeply within an inner module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab0e2799274f4e39a105b05c25a0eaa68fd967d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy in the call to &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; with this &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d252566134d4acca8e80e102dbd30e6e5cc077a4" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;Http&lt;/code&gt; service with the &lt;a href=&quot;../api/common/http/httpclient&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986eace1b762f87dee1e0be0169892a127224ec7" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;getHeroes()&lt;/code&gt; method with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9de07b8b03587f99be9a6632efdcef141fa44d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;ng12Hybrid&lt;/code&gt; previously added with the following in &lt;code&gt;protractor-conf.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcc06b39a58790c763190d869e9a2be72fb51f7" translate="yes" xml:space="preserve">
          <source>Replace the CLI-generated &lt;code&gt;MessagesComponent&lt;/code&gt; template with the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9a3c91bae2642e4f7cf0f1a43c872b32c3f3ae" translate="yes" xml:space="preserve">
          <source>Replace the contents of each component with the sample HTML below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16c7b495286df22440c048e266a2251ed768c07" translate="yes" xml:space="preserve">
          <source>Replace the contents of its template with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d4bc67bb7cc924258c88151a77d9461ee0e02d" translate="yes" xml:space="preserve">
          <source>Replace the default contents of &lt;code&gt;in-memory-data.service.ts&lt;/code&gt; with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6805b011f5dfde0331dbfd2f3db8b3bdb663ffe8" translate="yes" xml:space="preserve">
          <source>Replace the default file content in these three files as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0721d72ec342a357f8227c96061adfbffcb359cf" translate="yes" xml:space="preserve">
          <source>Replace the definition of the &lt;code&gt;heroes&lt;/code&gt; property with a simple declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3110314b822b125cebd0ee19c84fb4e5a7b7a1d4" translate="yes" xml:space="preserve">
          <source>Replace the generated &lt;code&gt;HeroSearchComponent&lt;/code&gt; class and metadata as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6314133dca67c7d1d68822d4be112a01c4763dcb" translate="yes" xml:space="preserve">
          <source>Replace the generated &lt;code&gt;HeroSearchComponent&lt;/code&gt; template with an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and a list of matching search results, as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad17c3063ed9c09e8a85e21cdea4f8779fcc38c" translate="yes" xml:space="preserve">
          <source>Replace the list's &lt;code&gt;ng-repeat&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; as &lt;a href=&quot;template-syntax#directives&quot;&gt;described in the Template Syntax page&lt;/a&gt;. Replace the image tag's &lt;code&gt;ng-src&lt;/code&gt; with a binding to the native &lt;code&gt;src&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa68a4d3a899abae96fde2d07f46cef2bb12c2d9" translate="yes" xml:space="preserve">
          <source>Replaced automatically by the character used for the decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1616683f51123aa85b938797d7eccf50d989a7ca" translate="yes" xml:space="preserve">
          <source>Replaced by a currency symbol, such as $ or USD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130457de5556d78c45ffb27874aba0a2f4581a51" translate="yes" xml:space="preserve">
          <source>Replaced by a digit (or nothing if there aren't enough).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a24bd69dcffe43e79ed8d92f8bd8122a60cdfa7" translate="yes" xml:space="preserve">
          <source>Replaced by a digit (or zero if there aren't enough digits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb9f0197cc01234b225a71b39358c25fb1c1118" translate="yes" xml:space="preserve">
          <source>Replaced by the &quot;grouping&quot; (thousands) separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c385e347b2af0a4d67c9b1c9902c4b0b140d1abd" translate="yes" xml:space="preserve">
          <source>Replacement</source>
          <target state="translated">Replacement</target>
        </trans-unit>
        <trans-unit id="09cecdc0f55c3f8652b1bf40533ab20dc411dd8e" translate="yes" xml:space="preserve">
          <source>Replacement:</source>
          <target state="translated">Replacement:</target>
        </trans-unit>
        <trans-unit id="a762fc8ca497d0eaf0d4ff9f762e6237a7894894" translate="yes" xml:space="preserve">
          <source>Replaces a series of whitespace characters in text nodes with a single space. For example, &lt;code&gt;&amp;lt;span&amp;gt;\n some text\n&amp;lt;/span&amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;lt;span&amp;gt; some text &amp;lt;/span&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083f882936136e841b75bb75bf2ce35311f333fa" translate="yes" xml:space="preserve">
          <source>Replaces the value for a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7065eac5998dcd922bbd9b6cd303c2622dbeb721" translate="yes" xml:space="preserve">
          <source>Replacing a form control value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09101265ef25b728a1961e52a8992e174c2a4ab1" translate="yes" xml:space="preserve">
          <source>Replacing the array is an efficient way to signal Angular to update the display. When do you replace the array? When the data changes. That's an easy rule to follow in &lt;em&gt;this&lt;/em&gt; example where the only way to change the data is by adding a hero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d1aaf14f595b036a6b2526783a74a6a832f9f9" translate="yes" xml:space="preserve">
          <source>Report missing translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc37608c32958ce7ebb03befffc73e782976778" translate="yes" xml:space="preserve">
          <source>Reporting vulnerabilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad149400947fce310fd5dbf9c4bdcc324dd1b21" translate="yes" xml:space="preserve">
          <source>Reports all values regardless of disabled status. For enabled controls only, the &lt;code&gt;value&lt;/code&gt; property is the best way to get the value of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607a1c982ecada24a795ac53eaf7916931b2c8db" translate="yes" xml:space="preserve">
          <source>Reports error data for the control with the given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c326f5ecd3712d6c66ecd6be492d869d3265dbd1" translate="yes" xml:space="preserve">
          <source>Reports false for disabled controls. If you'd like to check for existence in the group only, use &lt;a href=&quot;abstractcontrol#get&quot;&gt;get&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130125151a1ab7068fbafef6087a7d527a3dce17" translate="yes" xml:space="preserve">
          <source>Reports how many views are currently attached to this container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3cbe5fd35eb520591314bcd9fed642496e6979" translate="yes" xml:space="preserve">
          <source>Reports the control's validation errors. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c853b18375da7f1b792782cf1a6164080078185" translate="yes" xml:space="preserve">
          <source>Reports the current position of the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390cebcbc2534047ffe6b9a161695ea0a039f265" translate="yes" xml:space="preserve">
          <source>Reports the current state of the location history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec5ad63919e194aeb01534cbdfbbd15566c337a" translate="yes" xml:space="preserve">
          <source>Reports the number of decimal digits for a given currency. The value depends upon the presence of cents in that particular currency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5183aae0c0e9784d82b6918057bbb0ad6d371363" translate="yes" xml:space="preserve">
          <source>Reports the update strategy of the &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; (meaning the event on which the control updates itself). Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; Default value: &lt;code&gt;'change'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b791b780c1b97bd2b3cb2b99a63e94cd5859bdd5" translate="yes" xml:space="preserve">
          <source>Reports the validation status of the control. Possible values include: 'VALID', 'INVALID', 'DISABLED', and 'PENDING'. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6a8dc9087dcdf544a49971917e5ec9ef85024d" translate="yes" xml:space="preserve">
          <source>Reports the value of the control if it is present, otherwise null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2063aaf2335423c6b6ba5c9e8bb12f84f3e2bb52" translate="yes" xml:space="preserve">
          <source>Reports whether a control is pending, meaning that that async validation is occurring and errors are not yet available for the input value. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc3b505ae0f4e63f15bcf3a9f65c74da9dc1054" translate="yes" xml:space="preserve">
          <source>Reports whether the animation has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301f10951c97f894da3905178db39b3dfb13d94e" translate="yes" xml:space="preserve">
          <source>Reports whether the body includes one or more values for a given parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e03113ec4e9c771759659e59b1714f7c589c5be" translate="yes" xml:space="preserve">
          <source>Reports whether the control is dirty, meaning that the user has changed the value in the UI. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b938ac7dbe724572747d7ae0219802d641f9e0d4" translate="yes" xml:space="preserve">
          <source>Reports whether the control is disabled, meaning that the control is disabled in the UI and is exempt from validation checks and excluded from aggregate values of ancestor controls. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c7322fff3965079eae8ceacb2cb54262945bb4" translate="yes" xml:space="preserve">
          <source>Reports whether the control is enabled, meaning that the control is included in ancestor calculations of validity or value. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53c7ed7c72d51420e991af97be6612aa5487b52" translate="yes" xml:space="preserve">
          <source>Reports whether the control is invalid, meaning that an error exists in the input value. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92296c7a28a248803c800197a6b8019063501540" translate="yes" xml:space="preserve">
          <source>Reports whether the control is pristine, meaning that the user has not yet changed the value in the UI. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0652e4ea51938f37feb12c9b89ed5c64f6d53d" translate="yes" xml:space="preserve">
          <source>Reports whether the control is touched, meaning that the user has triggered a &lt;code&gt;blur&lt;/code&gt; event on it. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c75120d9ce1eb5a7cceafd7c81bfd10004d10ab" translate="yes" xml:space="preserve">
          <source>Reports whether the control is untouched, meaning that the user has not yet triggered a &lt;code&gt;blur&lt;/code&gt; event on it. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a58091754881f0a0f78a56cf951f8a26f1373fe" translate="yes" xml:space="preserve">
          <source>Reports whether the control is valid. A control is considered valid if no validation errors exist with the current value. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78154373f7280227f1e52638c470c2c9f272e414" translate="yes" xml:space="preserve">
          <source>Reports whether the control with the given path has the error specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4fc64b3caa17d2a2af5f5285b67610e2efba08" translate="yes" xml:space="preserve">
          <source>Reports whether the form submission has been triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb2a49d5e909d63439e908826b702ff2681065b" translate="yes" xml:space="preserve">
          <source>Reports whether the map contains a given parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cf9f706b1d1a3f1f1977496bffd149294f43e5" translate="yes" xml:space="preserve">
          <source>Reports whether this view has been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa79f241bf8f91eba2582c7e4b6ea60cbba47ffc" translate="yes" xml:space="preserve">
          <source>Representation of the current platform state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdc9ac4a9bbc92d9a4961b34831cad04cfe6b4b" translate="yes" xml:space="preserve">
          <source>Represents a basic change from a previous to a new value for a single property on a directive instance. Passed as a value in a &lt;a href=&quot;core/simplechanges&quot;&gt;&lt;code&gt;SimpleChanges&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551f27c388f2931f9bb9dd245d7387369ea71bc0" translate="yes" xml:space="preserve">
          <source>Represents a basic change from a previous to a new value for a single property on a directive instance. Passed as a value in a &lt;a href=&quot;simplechanges&quot;&gt;&lt;code&gt;SimpleChanges&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486473b3ba617628c250574c1d165728d5233dc5" translate="yes" xml:space="preserve">
          <source>Represents a component created by a &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the component instance and related objects, and provides the means of destroying the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd278233448b84a7691e7c203ac2822054195ea0" translate="yes" xml:space="preserve">
          <source>Represents a component created by a &lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the component instance and related objects, and provides the means of destroying the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2cbf93c7a81a9b408ca92a9a607ffcce817ef4" translate="yes" xml:space="preserve">
          <source>Represents a container where one or more views can be attached to a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5f1086c4ad81fc008a9b95e610a870ff70b4b5" translate="yes" xml:space="preserve">
          <source>Represents a meta element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7d3f29e1eaf204f4c8cf8841ba5ae9040d2581" translate="yes" xml:space="preserve">
          <source>Represents a route configuration for the Router service. An array of &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; objects, used in &lt;code&gt;&lt;a href=&quot;router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; and for nested route configurations in &lt;code&gt;&lt;a href=&quot;route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c950b32102cc63cbc6edd2be67c146f7233176e3" translate="yes" xml:space="preserve">
          <source>Represents a route configuration for the Router service. An array of &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; objects, used in &lt;code&gt;&lt;a href=&quot;router/router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; and for nested route configurations in &lt;code&gt;&lt;a href=&quot;router/route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d4922d31f87648d26a6ba749cc244f7d215f8a" translate="yes" xml:space="preserve">
          <source>Represents a single URL segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fd182a7b798bdf2cc0f82eabc55aaa8cbb6b1f" translate="yes" xml:space="preserve">
          <source>Represents a time value with hours and minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2d7df8d52ed5731608badf33df32eb62092397" translate="yes" xml:space="preserve">
          <source>Represents a type that a Component or other object is instances of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8855d1f7965e1105fd0e2b5a82b018089c830664" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt; in a view container. An &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;embedded view&lt;/a&gt; can be referenced from a component other than the hosting component whose template defines it, or it can be defined independently by a &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1474620d16464c5b015b9887a5b11cbb356e2fb" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt;, specifically the &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; that is defined by a component. Also serves as the base class that adds destroy methods for &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;embedded views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1910de827c29f7f09f1bcbebe02f70c743a697" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt; in a view container. An &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;embedded view&lt;/a&gt; can be referenced from a component other than the hosting component whose template defines it, or it can be defined independently by a &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e33238d67a3c70cfb2776240f2a8e4d9bb3146" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt;, specifically the &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; that is defined by a component. Also serves as the base class that adds destroy methods for &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;embedded views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a343d9d6615393f8c795c8e22af6e371f3a4e6" translate="yes" xml:space="preserve">
          <source>Represents an abstract class &lt;code&gt;T&lt;/code&gt;, if applied to a concrete class it would stop being instantiatable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b56a345db5d7d9430c6431f732ef6804310f4e" translate="yes" xml:space="preserve">
          <source>Represents an embedded template that can be used to instantiate embedded views. To instantiate embedded views based on a template, use the &lt;code&gt;&lt;a href=&quot;core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; method &lt;code&gt;createEmbeddedView()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f097966af7488b335e4597b088c53b538a72dd0" translate="yes" xml:space="preserve">
          <source>Represents an embedded template that can be used to instantiate embedded views. To instantiate embedded views based on a template, use the &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; method &lt;code&gt;createEmbeddedView()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de76fa8b01fb284aff4f7c8ede2b8d16ccd296d" translate="yes" xml:space="preserve">
          <source>Represents an instance of an NgModule created via a &lt;a href=&quot;core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dc486058809e798bca1587b0959242fe8a34da" translate="yes" xml:space="preserve">
          <source>Represents an instance of an NgModule created via a &lt;a href=&quot;ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6cb74b78c65ce846c31c91186c5cc5f11e71db" translate="yes" xml:space="preserve">
          <source>Represents animation-step timing parameters for an animation step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f1412fbf75b8cbde3f7322cdadd1397a72fb42" translate="yes" xml:space="preserve">
          <source>Represents static data associated with a particular route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4060a1d56ff6f2b872cffc6cb977755e3940386" translate="yes" xml:space="preserve">
          <source>Represents the detached route tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f953e52d394859f218f7481077ee53e17599d7e8" translate="yes" xml:space="preserve">
          <source>Represents the header configuration options for an HTTP request. Instances are immutable. Modifying methods return a cloned instance with the change. The original object is never changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b16e69f19523c0999ac65f5caacb500d78a393" translate="yes" xml:space="preserve">
          <source>Represents the parsed URL segment group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e78a87630648b457077a03232afd13a392fc9b" translate="yes" xml:space="preserve">
          <source>Represents the parsed URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf1386fee21aa4e6b830340578838186ea317eb" translate="yes" xml:space="preserve">
          <source>Represents the resolved data associated with a particular route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6be6fb11064cb484baf60135b4f61a41ac4e54" translate="yes" xml:space="preserve">
          <source>Represents the result of matching URLs with a custom matching function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a0e0e70e1102979afb5ac921b4a2db49f650f6" translate="yes" xml:space="preserve">
          <source>Represents the state of the router as a tree of activated routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b093c5d5c8cd0d55164578740ffe4e5a1534b39f" translate="yes" xml:space="preserve">
          <source>Represents the state of the router at a moment in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7f377e593ecb8f06ed5b554c2d79625e02c767" translate="yes" xml:space="preserve">
          <source>Represents the version of Angular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c600f4f45cf929630e597d3f3425ddb5644f92e" translate="yes" xml:space="preserve">
          <source>RequestMatch</source>
          <target state="translated">RequestMatch</target>
        </trans-unit>
        <trans-unit id="a8af7e5fc31a5ed7be2900f5271a97a959432adb" translate="yes" xml:space="preserve">
          <source>Requesting a typed response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c9caf1362d86293a969759c1f36e96237241d4" translate="yes" xml:space="preserve">
          <source>Requesting data from server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5696ae92b7af50f389ead0bece55e4a42ee39659" translate="yes" xml:space="preserve">
          <source>Requesting non-JSON data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770c6b106c177111cd3a507306da91d52608f080" translate="yes" xml:space="preserve">
          <source>Requesting services from a different server (CORS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1461bb3a7497c29f1d65c70191b538b6187c52c4" translate="yes" xml:space="preserve">
          <source>Requests can be configured to get progress event updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b955ba673919dafbc9944e857a8b3742810687fb" translate="yes" xml:space="preserve">
          <source>Required and optional route parameters that go into the route URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d985565d02776ba52975271bd492290606bebb8b" translate="yes" xml:space="preserve">
          <source>Required. A handler for each delivered value. Called zero or more times after execution starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffd4efe847cacad9a3758c5b1bc2f76cd2f0477" translate="yes" xml:space="preserve">
          <source>RequiredValidator</source>
          <target state="translated">RequiredValidator</target>
        </trans-unit>
        <trans-unit id="95e1209fc4a417c34d8515bb7d33cfc953152ab1" translate="yes" xml:space="preserve">
          <source>Reserve the constructor for simple initialization such as wiring constructor parameters to properties. The constructor shouldn't &lt;em&gt;do anything&lt;/em&gt;. It certainly shouldn't call a function that makes HTTP requests to a remote server as a &lt;em&gt;real&lt;/em&gt; data service would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641dd33af252e55fbf2d02ff6e54875190315468" translate="yes" xml:space="preserve">
          <source>Reset the control back to an initial value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570dd83ba1366fc79dd3f72a855e695ac0d7c9bc" translate="yes" xml:space="preserve">
          <source>Reset the control back to an initial value and disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e960d4a01c3cabbf2a2290d9dab7e5e298e5f3" translate="yes" xml:space="preserve">
          <source>Reset the form group values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2279f7a41126be0482109e4521f42ace2bf59a" translate="yes" xml:space="preserve">
          <source>Reset the form group values and disabled status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5bdd91b679b1ec70f689c9f238300ef3430a86" translate="yes" xml:space="preserve">
          <source>Reset the initial test environment, including the default testing module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc15d474951107d59444895d2f067ab733c1062" translate="yes" xml:space="preserve">
          <source>Reset the providers for the test injector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455d58c0c5be486a7812c291057d5a560401d756" translate="yes" xml:space="preserve">
          <source>Reset the values in a form array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203a968d1175b2a352ad81ba3a27f9a7f22b1747" translate="yes" xml:space="preserve">
          <source>Reset the values in a form array and the disabled status for the first control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6714fe9d64156c4392146c9d917ba8f032a43a06" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; and all descendants are marked &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and the value of all descendants to null or null maps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7287fdfccef00199bf3e4fa1d61dd60eaec2b1" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, marks all descendants are marked &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and the value of all descendants to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e0f702aaedc7c6972e3f110daca7a5c9158ba4" translate="yes" xml:space="preserve">
          <source>Resets the AngularJS global.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24870e46baceb970fb4534665e32255537cb71ad" translate="yes" xml:space="preserve">
          <source>Resets the animation to its initial state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88538bfab67e9e0c356b616aae226ae3cd472d3" translate="yes" xml:space="preserve">
          <source>Resets the configuration used for navigation and generating links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e089372be38def35d12038d312cf7cff0d8d32" translate="yes" xml:space="preserve">
          <source>Resets the control with an initial value, or an object that defines the initial value and disabled state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc7a98a9e0f85b5443a219c186d8c82560d9d55" translate="yes" xml:space="preserve">
          <source>Resets the control with the provided value if the control is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88702bd4bf3be248ab185b7feda16df52da79cb4" translate="yes" xml:space="preserve">
          <source>Resets the control. Abstract method (implemented in sub-classes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d4885ef343770c40754fe962fcb8b1c56741ff" translate="yes" xml:space="preserve">
          <source>Resets the form control, marking it &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and setting the value to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b3b6784361c44d2330bc9200cfd2ef02593400" translate="yes" xml:space="preserve">
          <source>Resets the form to an initial value and resets its submitted status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafdd49549d0718ea3f265ce0ffd382b7fb22c19" translate="yes" xml:space="preserve">
          <source>Resolution modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dbb4b1816b9410c76c9b483c0fc6b476ef2cfe" translate="yes" xml:space="preserve">
          <source>Resolution modifiers fall into three categories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1630633b28570d9d271f0a3fa1bc084637a5dc40" translate="yes" xml:space="preserve">
          <source>Resolution rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22899a486866313817a37fb316724b0f36c6dd4c" translate="yes" xml:space="preserve">
          <source>Resolution works upward through the injector hierarchy, so the children of this class must configure their own providers or be prepared for a null result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="5428d801dbf9cd5af8724c4449af2204a7e74318" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning a body plus additional HTTP information (such as response headers) if provided. If the request specifies an expected body type, the body is converted into the requested type. Otherwise, the body is converted to &lt;code&gt;JSON&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9648af2c97466d258a342886ddfc8487fe626a" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning an &lt;code&gt;ErrorEvent&lt;/code&gt; (e.g. simulating a network failure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d892b45b3568820b7637e88a421da7e3b9cc005a" translate="yes" xml:space="preserve">
          <source>Resolve vendor packages sourcemaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d067fa7b0e7b927dc5fd2ddc95419173701aa0c" translate="yes" xml:space="preserve">
          <source>ResolveData</source>
          <target state="translated">ResolveData</target>
        </trans-unit>
        <trans-unit id="0c6389bb51f19b41d7378625dbb8022c3608c006" translate="yes" xml:space="preserve">
          <source>ResolveEnd</source>
          <target state="translated">ResolveEnd</target>
        </trans-unit>
        <trans-unit id="61ef5fa48b634f6d35231db0ce74b2fbff781bcd" translate="yes" xml:space="preserve">
          <source>ResolveStart</source>
          <target state="translated">ResolveStart</target>
        </trans-unit>
        <trans-unit id="5774b1f7e7d5d970b2d71e03c9494d4b8f646425" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveFactory</source>
          <target state="translated">ResolvedReflectiveFactory</target>
        </trans-unit>
        <trans-unit id="a33073e17765ddd6137810adff34b548ac033389" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveProvider</source>
          <target state="translated">ResolvedReflectiveProvider</target>
        </trans-unit>
        <trans-unit id="2cbbc4d20999a3f6dc525713838585739e52f19f" translate="yes" xml:space="preserve">
          <source>Resolves a provider and instantiates an object in the context of the injector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d65d65ebb9a014dd0b1ffdc2fc18917fd546aa6" translate="yes" xml:space="preserve">
          <source>Resolves an array of providers and creates a child injector from those providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133dc4fc3c58923b511ab9aab828422616aa2955" translate="yes" xml:space="preserve">
          <source>Resolves an array of providers and creates an injector from those providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea3553ce5bf8ff8ec93b1408a6326001dd61a7f" translate="yes" xml:space="preserve">
          <source>Resolving components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0219d329381baa83142136f635a82c4e071a9fc" translate="yes" xml:space="preserve">
          <source>Resource integrity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d832a936b20576702f35880811528f109e51f99a" translate="yes" xml:space="preserve">
          <source>Resource summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd57ec5d9ee117948f22ac564cc950b30780e89a" translate="yes" xml:space="preserve">
          <source>Respond after Angular checks the component's views and child views / the view that a directive is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce617e949ef71813ce0b5c86b7a2fb093fce20e" translate="yes" xml:space="preserve">
          <source>Respond after Angular checks the content projected into the directive/component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9307f131727a562a45c85e015889d049d009de3e" translate="yes" xml:space="preserve">
          <source>Respond after Angular initializes the component's views and child views / the view that a directive is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58086f3e148bc7d281f43f112937024655cefd84" translate="yes" xml:space="preserve">
          <source>Respond after Angular projects external content into the component's view / the view that a directive is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f782df51b16552bf179c97c446085eb344c5c9" translate="yes" xml:space="preserve">
          <source>Respond to user-initiated events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaecaeb805bcbd8415185dfcb6db0cb7b4d9b2e" translate="yes" xml:space="preserve">
          <source>Respond when Angular (re)sets data-bound input properties. The method receives a &lt;code&gt;&lt;a href=&quot;../api/core/simplechanges&quot;&gt;SimpleChanges&lt;/a&gt;&lt;/code&gt; object of current and previous property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b04ed2778b312513975eefa4d5ac492dbdc14a" translate="yes" xml:space="preserve">
          <source>Responding to events is the other side of Angular's &quot;unidirectional data flow&quot;. You're free to change anything, anywhere, during this turn of the event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadc8ba3f8c3565f8ae3845707ee78a887998339" translate="yes" xml:space="preserve">
          <source>Response status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bccfde2ef651a8a21201453065d89f83adc9118" translate="yes" xml:space="preserve">
          <source>Responsive programming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49a1201aa7733e36c9eb54f0c6d3a26062abc49" translate="yes" xml:space="preserve">
          <source>Restart Visual Studio for this change to take effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1243be2dc6f4eeadda410956468fc78ab8f71b" translate="yes" xml:space="preserve">
          <source>Restarts the paused animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9e9d257bad84fdf95e70e5b90b4d2375ce9383" translate="yes" xml:space="preserve">
          <source>Restore the original property name and specify the selector as the alias in the argument to &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0354ba02b6aac3ec3eef44ddd86df8189ebfae2" translate="yes" xml:space="preserve">
          <source>Restore the packages required for an Angular application as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d8b8b0213f8ae7b0b3ce6d0cac81aa0c7ad8a0" translate="yes" xml:space="preserve">
          <source>Retrieve a nested control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3034a9450e4fd9e1a0f26ee4be433e8c28f684" translate="yes" xml:space="preserve">
          <source>Retrieve a service from the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; injector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374a915c9c6e4a7c2f4f19b1ff8158ded7daf2c6" translate="yes" xml:space="preserve">
          <source>Retrieve shipping prices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e60d8309938e7eecec71ec75f3b1c3429843864" translate="yes" xml:space="preserve">
          <source>Retrieve the platform &lt;a href=&quot;injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt;, which is the parent injector for every Angular application on the page and provides singleton providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1551f884016735858002ed6043e29f6a760221a8" translate="yes" xml:space="preserve">
          <source>Retrieves Gregorian-calendar eras for the given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f10b66481bdad1b243d60d3e182472d7bfdbcfc" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;code&gt;Key&lt;/code&gt; for a token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34319cc099a07e678992d688ed020d30f60b4b2c" translate="yes" xml:space="preserve">
          <source>Retrieves a child control given the control's name or path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761d03e0e6c17d316500c60c4c6821e177d80ae3" translate="yes" xml:space="preserve">
          <source>Retrieves a list of values for a given header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbea70a1e06d051a6bb63cf8ca188f3fbc62e9a1" translate="yes" xml:space="preserve">
          <source>Retrieves a localized date-time formatting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31984cdceb74e639f64bf5d67e87310637ab11a" translate="yes" xml:space="preserve">
          <source>Retrieves a localized date-value formating string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c5b75774b1acfadcec9aeb4898b6ce9acc5d3e" translate="yes" xml:space="preserve">
          <source>Retrieves a localized number symbol that can be used to replace placeholders in number formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4afa2f09e73234f05d9a30ec69982d8fe3288cb" translate="yes" xml:space="preserve">
          <source>Retrieves a localized time-value formatting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3323dd7414749f8d77e0028f1994cb174626dd" translate="yes" xml:space="preserve">
          <source>Retrieves a map of the search parameters of the current URL, or changes a search part and returns a reference to its own instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bb4b0c77a6b2c564933dc19ee2061db1ed4c5b" translate="yes" xml:space="preserve">
          <source>Retrieves a number format for a given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59840f4c275f15ebc98c7c128700716d4fa13123" translate="yes" xml:space="preserve">
          <source>Retrieves a single value for a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc00103d827bd0718443dea2be46902911aabf8" translate="yes" xml:space="preserve">
          <source>Retrieves a view from this container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921c5cd6e13be403741607c9a6a8a8fc698b06f5" translate="yes" xml:space="preserve">
          <source>Retrieves all the parameters for this body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49aabbbb83ddb68c554e3bcedddbf800ba6ccf20" translate="yes" xml:space="preserve">
          <source>Retrieves all values for a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb5bc7d546426f69876d059ad9f1f6658fb76a0" translate="yes" xml:space="preserve">
          <source>Retrieves all values regardless of disabled status. The &lt;code&gt;value&lt;/code&gt; property is the best way to get the value of the group, because it excludes disabled controls in the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0233421cc8c238d0baef18d39a3b5c801b7e9359" translate="yes" xml:space="preserve">
          <source>Retrieves an instance from the injector based on the provided token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7648f3241ae9728aac920d98d4f628a56cdcfc2" translate="yes" xml:space="preserve">
          <source>Retrieves day period strings for the given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69701613c7a6f2b8fc0e33c2071a6d08c53987d" translate="yes" xml:space="preserve">
          <source>Retrieves days of the week for the given locale, using the Gregorian calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd2a990521280448109f6112aa17ead29a5e9a3" translate="yes" xml:space="preserve">
          <source>Retrieves locale-specific day periods, which indicate roughly how a day is broken up in different languages. For example, for &lt;code&gt;en-US&lt;/code&gt;, periods are morning, noon, afternoon, evening, and midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4341e9b84ebabd54adf9c40729d89ceb817f828" translate="yes" xml:space="preserve">
          <source>Retrieves locale-specific rules used to determine which day period to use when more than one period is defined for a locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139b8a80b6456695bfda926af85cce4de373a98f" translate="yes" xml:space="preserve">
          <source>Retrieves months of the year for the given locale, using the Gregorian calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b4fe984adca488d5bb367adae37368c938c8ea" translate="yes" xml:space="preserve">
          <source>Retrieves multiple values for a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11384cb47fa71db153744a21bb91feffc9eed5b8" translate="yes" xml:space="preserve">
          <source>Retrieves or sets Angular configuration values in the angular.json file for the workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fc1c3c5ab326d44ee862649cd530e5b0f034c5" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; for a provided &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14cefdec7112880169c738b257d0cdef4aa1c19" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance from the provided &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857bfe34f804b376c4100e7f79c3822348a10ef5" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance from the provided &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20189eb6ea92602b11183790e2daf2706956fd9" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for a provided &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directive instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9fe655bc1e0283a5974ff054d61675885eb489" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for a provided &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f7f3c9a2a4edae8c048198268325ad25c35d34" translate="yes" xml:space="preserve">
          <source>Retrieves the compilation zone in which event listeners are registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f2bd5d77b9db94cfb7f5319e8a3257e4c83af4" translate="yes" xml:space="preserve">
          <source>Retrieves the currency symbol for a given currency code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5806329413fd4f21a5cd984c534e19c8dd168fb7" translate="yes" xml:space="preserve">
          <source>Retrieves the current URL, or sets a new URL. When setting a URL, changes the path, search, and hash, and returns a reference to its own instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e020da059b0a040883a447b090b56f7e72bd5648" translate="yes" xml:space="preserve">
          <source>Retrieves the current XSRF token to use with the next outgoing request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bdd9a469d9c5b25c8393ef8b4bfb7f15681c60" translate="yes" xml:space="preserve">
          <source>Retrieves the current hash fragment, or changes the hash fragment and returns a reference to its own instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45657691c71f3a0ff9fdfdd4bcc5f1abf0c7d297" translate="yes" xml:space="preserve">
          <source>Retrieves the current scroll position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f49dc23897d127bbc17e6a168050e9f96ecb77" translate="yes" xml:space="preserve">
          <source>Retrieves the factory object that creates a component of the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebaebb21d9d18e9af0163dd793e7fe72d897edb" translate="yes" xml:space="preserve">
          <source>Retrieves the first day of the week for the given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae45081e622febad31f8ed85b968d270bf36ceb" translate="yes" xml:space="preserve">
          <source>Retrieves the first value for a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3592812e6856a080eca08bb6b67c878ea5bc14" translate="yes" xml:space="preserve">
          <source>Retrieves the first value of a given header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c43d930f970e2c6055e607634aacd3cec66756" translate="yes" xml:space="preserve">
          <source>Retrieves the full URL representation with all segments encoded according to rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a8be6ecdcdb56a19f63ba210a6d13b82c8880f" translate="yes" xml:space="preserve">
          <source>Retrieves the history state object when called without any parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dead837ae7fcd6ab527bd7eb247527b5ae9d074f" translate="yes" xml:space="preserve">
          <source>Retrieves the locale ID from the currently loaded locale. The loaded locale could be, for example, a global one rather than a regional one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1e76786847837b6af76cc2626ac659ff2920f3" translate="yes" xml:space="preserve">
          <source>Retrieves the name of the currency for the main country corresponding to a given locale. For example, 'US Dollar' for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748144714bf77f5c191a79ab06e7c45f9ad4c60d" translate="yes" xml:space="preserve">
          <source>Retrieves the names of the headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc9d99dd7eb470d81297030d81296a4a92ae22d" translate="yes" xml:space="preserve">
          <source>Retrieves the path of the current URL, or changes the path and returns a reference to its own instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31c3a2964b5c9c919c6f14f2afd1b0990ed7cca" translate="yes" xml:space="preserve">
          <source>Retrieves the plural function used by ICU expressions to determine the plural case to use for a given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91ea86c47a114bcf4885dfccd4fb65102725b63" translate="yes" xml:space="preserve">
          <source>Retrieves the port of the current URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c732a0916aa023a6d1c0ef2497bec847b0143674" translate="yes" xml:space="preserve">
          <source>Retrieves the previously stored route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442fa94d1a746daef063d744439a280d970906c5" translate="yes" xml:space="preserve">
          <source>Retrieves the protocol of the current URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b1bdb6527e17b45bea10a8051132a2bd7f9680" translate="yes" xml:space="preserve">
          <source>Retrieves the symbol used to represent the currency for the main country corresponding to a given locale. For example, '$' for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b68e8fb05412bf928ee5018a77ed0f3a06f950" translate="yes" xml:space="preserve">
          <source>Retrieves the top-level ancestor of this control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37608000b3ed339e5f16bc764f6dd90e645eb5ec" translate="yes" xml:space="preserve">
          <source>Retry failed observable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabe33d8df71778e413a5b2f3b1605aafd78a7ce" translate="yes" xml:space="preserve">
          <source>Retrying</source>
          <target state="translated">Retrying</target>
        </trans-unit>
        <trans-unit id="2b12e698acb1ba6c903d19be957084057546e7da" translate="yes" xml:space="preserve">
          <source>Return a multi-valued &lt;em&gt;Observable&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6401b54c472b21ebf87282fd3536bba146d90a" translate="yes" xml:space="preserve">
          <source>Return the proper type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f166f3a8097155522fa6cde793c082c126720e" translate="yes" xml:space="preserve">
          <source>Return to the &lt;code&gt;HeroesComponent&lt;/code&gt; class and import the &lt;code&gt;Hero&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b6eaab57754d7857b019549606807cc75c7efc" translate="yes" xml:space="preserve">
          <source>Return to the &lt;code&gt;HeroesRoutingModule&lt;/code&gt; and look at the route definitions again. The route to &lt;code&gt;HeroDetailComponent&lt;/code&gt; has a twist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d828ca0e9ea08d243356f92ea703a0ba729ddea9" translate="yes" xml:space="preserve">
          <source>Return whether the fixture is currently stable or has async tasks that have not been completed yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="31b6f2f8afa5084907c64e977c2d29807c5f1dba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the parameter name is in the map of parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fae1bc71a80df0916fab59d3d0bbce1c99c55e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;string array&lt;/code&gt; of all parameter names in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7520d0246b1dfaa57f4cc1d151a9755d344138b6" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;string array&lt;/code&gt; of the parameter name value if found, or an empty &lt;code&gt;array&lt;/code&gt; if the parameter name value is not in the map. Use &lt;code&gt;getAll&lt;/code&gt; when a single parameter could have multiple values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91ed815e83b0baac8a01854847d1a2378041552" translate="yes" xml:space="preserve">
          <source>Returns a copy of the internal results list as an Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94ca68c67198e9c4776c6a119c3aa618fe59259" translate="yes" xml:space="preserve">
          <source>Returns a map of the controls in this group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959930affcf789b6e0419b438b108c876ce24526" translate="yes" xml:space="preserve">
          <source>Returns a multicasting observable of value changes for the control that emits every time the value of the control changes in the UI or programmatically. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107e276d96d6a102543f8a62f23d1155e5db586a" translate="yes" xml:space="preserve">
          <source>Returns a multicasting observable that emits a validation status whenever it is calculated for the control. If the control is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5430f1be00035d6dee74ab2e3497caa992ed62" translate="yes" xml:space="preserve">
          <source>Returns a promise that resolves when the fixture is stable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4990550a08319f4434935356f6d9efd0e58668c9" translate="yes" xml:space="preserve">
          <source>Returns a promise that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e96dc5a87562d263feafd81826e132f1a6efb4" translate="yes" xml:space="preserve">
          <source>Returns a singleton of the applicable &lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a0c6c0b16f831f58261673f0839d1959956241" translate="yes" xml:space="preserve">
          <source>Returns a singleton of the applicable &lt;code&gt;&lt;a href=&quot;testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148785c2479c7d9bb554065d713c6abe6c6dbadf" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../core/eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; for the given channel To publish methods to that channel just call next on the returned emitter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da5a597db4bc0f6ec432a9d9308d95e9da35a38" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../core/eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; that emits every time a message is received on the given channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90379e6b0f9012973ae986c17060828570e063d4" translate="yes" xml:space="preserve">
          <source>Returns an Observable that indicates when the application is stable or unstable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f380f019818c117dba9d43f8f18d8684669847" translate="yes" xml:space="preserve">
          <source>Returns an array representing the path to this group. Because this directive always lives at the top level of a form, it always an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155d431da9d62a873f6e850ade436194b95b0387" translate="yes" xml:space="preserve">
          <source>Returns an array representing the path to this group. Because this directive always lives at the top level of a form, it is always an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d76c18c8d505994d64d4ac83ecb037c821a791" translate="yes" xml:space="preserve">
          <source>Returns an array that represents the path from the top-level form to this control. Each index is the string name of the control on that level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dc6abf14f7c3babccf1b5a4b5d11ce5140e839" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; bound to this directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5771aa76009ea706ab69759b85ab117539a0d369" translate="yes" xml:space="preserve">
          <source>Returns the NgModuleFactory with the given id, if it exists and has been loaded. Factories for modules that do not specify an &lt;code&gt;id&lt;/code&gt; cannot be retrieved. Throws if the module cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca0a50c3fca2082549a468a831472549928a58e" translate="yes" xml:space="preserve">
          <source>Returns the `returnValue for easy chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a0772abc4a4d0560ed052027a50bba8faf5e56" translate="yes" xml:space="preserve">
          <source>Returns the current AngularJS global.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76896ee5aa447a015d1e3f770970df9c761b3ade" translate="yes" xml:space="preserve">
          <source>Returns the current DOM state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753260ce89f96150978ce985c1ec5d9fc096332a" translate="yes" xml:space="preserve">
          <source>Returns the current platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1f1938d52f24273bce914cac464ee8c71448af" translate="yes" xml:space="preserve">
          <source>Returns the id for a given NgModule, if one is defined and known to the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10fb7efe60ef00eeec26c4d14d82b60e5a735d4" translate="yes" xml:space="preserve">
          <source>Returns the index of a view within the current container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685d7793c2fdea82bda03d49834ca1a2e0281e80" translate="yes" xml:space="preserve">
          <source>Returns the number of attached views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef218ddce71b26d809cb3b0e2d34d40cd637345" translate="yes" xml:space="preserve">
          <source>Returns the parameter name value (a &lt;code&gt;string&lt;/code&gt;) if present, or &lt;code&gt;null&lt;/code&gt; if the parameter name is not in the map. Returns the &lt;em&gt;first&lt;/em&gt; element if the parameter value is actually an array of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56169a9aadf5ff2fb7cce3834b9ce80696412608" translate="yes" xml:space="preserve">
          <source>Returns the plural case based on the locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380fa1bcd2c42d43ef67a91e7e808a5c6a02a351" translate="yes" xml:space="preserve">
          <source>Returns the underlying value of a wrapped value. Returns the given &lt;code&gt;value&lt;/code&gt; when it is not wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be33dbe40b70d725fc736336ed93bc44951949b4" translate="yes" xml:space="preserve">
          <source>Returns this directive's instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6999fc4f6198357cb6702a6d5d603be1e88a50c5" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;value&lt;/code&gt; is a wrapped value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008d0baad2c265e5ce875e3fb51b3563dfe0270b" translate="yes" xml:space="preserve">
          <source>Returns whether Angular is in development mode. After called once, the value is locked and won't change any more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7bd63a593c3d72343e636b6d30b6ff265ede31" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a browser platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3463ef7bb918e571033006cb5089f8007bed2a" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a server platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46426546a60f23d30856828ec8bb98be50c537f6" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a web worker UI platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ca9aee883ef6771887d8b2142f20e27df50d3" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a web worker app platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4592d84dc5f348a42136d673c6cf56e3cb917f21" translate="yes" xml:space="preserve">
          <source>Returns whether the form submission has been triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d8a61dbec9f4a394bb72cab30c218c8f502ff6" translate="yes" xml:space="preserve">
          <source>Returns whether the url is activated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d131e2f1096212e8297448fa2a3ed3b14b0c08c0" translate="yes" xml:space="preserve">
          <source>Reusable animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044ca545eb2790a6c6ef1fd11130e60d404007a5" translate="yes" xml:space="preserve">
          <source>Reusable code and schematics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcde9cd4b8296466e3bd34183c7111e2ff6a7e48" translate="yes" xml:space="preserve">
          <source>Reveal the Karma browser window (hidden earlier).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d055d38f5c0a3e0c9db1044bf7ba2ca31ae0847" translate="yes" xml:space="preserve">
          <source>Reverse the routing modules and see for yourself that a click of the heroes link results in &quot;Page not found&quot;. Learn about inspecting the runtime router configuration &lt;a href=&quot;router#inspect-config&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054c451fddff5ab1c73024637e3aa243ccc3e918" translate="yes" xml:space="preserve">
          <source>Revise &lt;code&gt;app.component.html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b9eaf6252456b99032585c41f9d8bb1199db0a" translate="yes" xml:space="preserve">
          <source>Revise &lt;code&gt;app.module.ts&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526efb66db2ed167a4361d6919a391c5e8861941" translate="yes" xml:space="preserve">
          <source>Revise the &lt;code&gt;AppComponent.color&lt;/code&gt; so that it has no initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90064e65aa99ac5cce9d9fb931b5f9de258a5143" translate="yes" xml:space="preserve">
          <source>Revise the &lt;code&gt;AuthGuard&lt;/code&gt; to call it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c2d280dfd9eceafc07a023851436a827c57010" translate="yes" xml:space="preserve">
          <source>Revise the directive's &lt;code&gt;onMouseEnter&lt;/code&gt; so that it first tries to highlight with the &lt;code&gt;highlightColor&lt;/code&gt;, then with the &lt;code&gt;defaultColor&lt;/code&gt;, and falls back to &quot;red&quot; if both properties are undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b9468f3ca81acd7916f78b3184fbdd2f9b032c" translate="yes" xml:space="preserve">
          <source>Rewrite the URL path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2b7e955e8e3ee77790a5f99ac615d0d89017c9" translate="yes" xml:space="preserve">
          <source>Right click on the &lt;code&gt;app&lt;/code&gt; folder and use the &lt;code&gt;Angular Generator&lt;/code&gt; to generate a new component named &lt;code&gt;product-alerts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ac4fa529eb471b4d529106c0ecc1e6492ceced" translate="yes" xml:space="preserve">
          <source>Right click on the &lt;code&gt;app&lt;/code&gt; folder, choose &lt;code&gt;Angular Generator&lt;/code&gt;, and choose &lt;code&gt;Service&lt;/code&gt;. Name the new service &lt;code&gt;cart&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b38eb08b4e9b126b47e4c9b2dac9d90a0a2170e" translate="yes" xml:space="preserve">
          <source>Right-click on each folder/file to be included in the project and select &lt;code&gt;Include in Project&lt;/code&gt;. Minimally, include the following folder/files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3d65a7fc6146f3237ed2ba0c1702cc3f2cfa8b" translate="yes" xml:space="preserve">
          <source>Right-click on the &lt;code&gt;package.json&lt;/code&gt; file in Solution Explorer and select &lt;code&gt;Restore Packages&lt;/code&gt;. This uses &lt;code&gt;npm&lt;/code&gt; to install all of the packages defined in the &lt;code&gt;package.json&lt;/code&gt; file. It may take some time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c4306cd3d91e61f92eb219481d69f51fd86eca" translate="yes" xml:space="preserve">
          <source>Rob Dodson A11ycasts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11801df8662ff6cb03d3ec956162a9ae45e07ec3" translate="yes" xml:space="preserve">
          <source>Romanian Moldova</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a593226d64bb0f629617ebbd9d9b558d1265feb" translate="yes" xml:space="preserve">
          <source>Root elements of views attached to this container become siblings of the anchor element in the rendered view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47076d8d44d0636716eca3a4ce2f4a2364642cd" translate="yes" xml:space="preserve">
          <source>RootRenderer</source>
          <target state="translated">RootRenderer</target>
        </trans-unit>
        <trans-unit id="0a21008d94a300dca90d49e6f81806911c386525" translate="yes" xml:space="preserve">
          <source>Routable &lt;code&gt;HeroDetailComponent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">Route</target>
        </trans-unit>
        <trans-unit id="1d098dadd2a113fca5483b7269eb8f8172a27581" translate="yes" xml:space="preserve">
          <source>Route Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d651a4081ec28bbb3827186b131c16ffdafd61" translate="yes" xml:space="preserve">
          <source>Route Parameters: Required or optional?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7703ca8a8a1b64003243cb67412a89d0756e3fd" translate="yes" xml:space="preserve">
          <source>Route configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499e5b634c4acbd565b49089a1753cf91ed6160e" translate="yes" xml:space="preserve">
          <source>Route definition with a parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c7957c2f6af29f6e000acdb1ecf10f28014310" translate="yes" xml:space="preserve">
          <source>Route parameter: Required or optional?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcf6e62e2c4a177e419066b138fdcaa35cda4e0" translate="yes" xml:space="preserve">
          <source>Route parameters are always strings. The JavaScript (+) operator converts the string to a number, which is what a hero &lt;code&gt;id&lt;/code&gt; should be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2479c58d67b8cd75d2188ae0aa2e09aca7c40eea" translate="yes" xml:space="preserve">
          <source>Route parameters in the &lt;code&gt;ActivatedRoute&lt;/code&gt; service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea847c00bd3793d8ac2f5beff4d6e6dfc6339b61" translate="yes" xml:space="preserve">
          <source>Route path used to produce the app shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c5554802bc7472e99bd212541606612e95f453" translate="yes" xml:space="preserve">
          <source>Route preloading strategies in Angular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd52984ae7cba778f43a4c8d28beaf1c717ad4d5" translate="yes" xml:space="preserve">
          <source>Route transition animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fff3e25be843063267f1e8f915631364d59683" translate="yes" xml:space="preserve">
          <source>Route-level code-splitting in Angular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f31fddbede90c80d136613062966d1cc17320e" translate="yes" xml:space="preserve">
          <source>RouteConfigLoadEnd</source>
          <target state="translated">RouteConfigLoadEnd</target>
        </trans-unit>
        <trans-unit id="4a3acc4aa66be0088e4aedf186f06a6e2a4a7fd5" translate="yes" xml:space="preserve">
          <source>RouteConfigLoadStart</source>
          <target state="translated">RouteConfigLoadStart</target>
        </trans-unit>
        <trans-unit id="651242926c2a26c9ff9c97b8deebf5c0afac4e67" translate="yes" xml:space="preserve">
          <source>RouteReuseStrategy</source>
          <target state="translated">RouteReuseStrategy</target>
        </trans-unit>
        <trans-unit id="63e278b608d3674f2e449e497ecf9dd31645873b" translate="yes" xml:space="preserve">
          <source>Routed</source>
          <target state="translated">Routed</target>
        </trans-unit>
        <trans-unit id="71069e45ec292c555a106707f1f656c0d2d0d637" translate="yes" xml:space="preserve">
          <source>Routed apps must fallback to &lt;code&gt;index.html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016472215ceed1c743e0daedc118bddb67baf72a" translate="yes" xml:space="preserve">
          <source>Routed components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3e918a9570b90eae58cfc534854c396cf8bc2d" translate="yes" xml:space="preserve">
          <source>Routed components are also &lt;em&gt;entry components&lt;/em&gt; because they need to be loaded dynamically. The router creates them and drops them into the DOM near a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cf95f70f44822205bdd673b9c8ccba20a8b833" translate="yes" xml:space="preserve">
          <source>Routed feature modules are domain feature modules whose top components are the targets of router navigation routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8c586773a94229d06c71a6421bc2882dc9bd64" translate="yes" xml:space="preserve">
          <source>Routed feature modules don&amp;rsquo;t export anything because their components never appear in the template of an external component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1528a93bc369086753839625569731cae3802abb" translate="yes" xml:space="preserve">
          <source>Routed feature modules rarely have providers for reasons explained in &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Feature Modules&lt;/a&gt;. When they do, the lifetime of the provided services should be the same as the lifetime of the module. Don't provide application-wide singleton services in a routed feature module or in a module that the routed module imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9968997d4112da7fb44dfb5f2b8a732c4648e672" translate="yes" xml:space="preserve">
          <source>Routed feature modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcf16e1c5d3e9fd2ae4a4d54c174448fe43e1b6" translate="yes" xml:space="preserve">
          <source>Router</source>
          <target state="translated">Router</target>
        </trans-unit>
        <trans-unit id="c9caa7dc0a815255ed3e9e6e4c26d73162fe1719" translate="yes" xml:space="preserve">
          <source>Router Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f73a17a1f2a2bbb638de3d832df5e594dea5d16" translate="yes" xml:space="preserve">
          <source>Router Part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e327a89af2b96123ec62cb19a044d66dbef61ea5" translate="yes" xml:space="preserve">
          <source>Router events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2ff01e8d822bdcc5b80e3844cb3328940e0bc1" translate="yes" xml:space="preserve">
          <source>Router events that allow you to track the lifecycle of the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6017508132ac5f836b7e891d8656cb8599343258" translate="yes" xml:space="preserve">
          <source>Router imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cba59fb6d500f4c6efd266eb03148e4f419021" translate="yes" xml:space="preserve">
          <source>Router links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efde38948f0e8b7ecdf1331fdf1efbaf203568f6" translate="yes" xml:space="preserve">
          <source>Router outlet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2a3315ff18f8570b687d4bb382c506cc531c4f" translate="yes" xml:space="preserve">
          <source>Router services (which these tests are stubbing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0d84f55e2c594e65051a4a6aed998f72e72531" translate="yes" xml:space="preserve">
          <source>Router setup factory function used for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ed7eec84cc6256be56b3e80ba06058f932282d" translate="yes" xml:space="preserve">
          <source>Router state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed498920d3d30c48ee73d35a767061f7470f0a1" translate="yes" xml:space="preserve">
          <source>RouterEvent</source>
          <target state="translated">RouterEvent</target>
        </trans-unit>
        <trans-unit id="de2af4888e9ea0db85af2b74ffcb4e933535817f" translate="yes" xml:space="preserve">
          <source>RouterLink</source>
          <target state="translated">RouterLink</target>
        </trans-unit>
        <trans-unit id="22f41d0285deb0c22c1f7b8bc0b124bbdf5a91af" translate="yes" xml:space="preserve">
          <source>RouterLink will use these to generate this link: &lt;code&gt;/user/bob#education?debug=true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f548535b52b73d8247bd413d36d6c374315f70ca" translate="yes" xml:space="preserve">
          <source>RouterLinkActive</source>
          <target state="translated">RouterLinkActive</target>
        </trans-unit>
        <trans-unit id="583ae049dc2a1f98b793a44f668ad4211c1c8243" translate="yes" xml:space="preserve">
          <source>RouterLinkWithHref</source>
          <target state="translated">RouterLinkWithHref</target>
        </trans-unit>
        <trans-unit id="5ee5a5dcbfcc25b7a813db81db77cd1ebb6b8f13" translate="yes" xml:space="preserve">
          <source>RouterModule</source>
          <target state="translated">RouterModule</target>
        </trans-unit>
        <trans-unit id="ec1b3ce9eaffb47220d9b1c9f74485c9408bfb28" translate="yes" xml:space="preserve">
          <source>RouterModule can be imported multiple times: once per lazily-loaded bundle. Since the router deals with a global shared resource--location, we cannot have more than one router service active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0592a75851949d90289ede09a175698e2722afc3" translate="yes" xml:space="preserve">
          <source>RouterOutlet</source>
          <target state="translated">RouterOutlet</target>
        </trans-unit>
        <trans-unit id="19d6508f53c453a3665e5ade65163da34fad0dc5" translate="yes" xml:space="preserve">
          <source>RouterPreloader</source>
          <target state="translated">RouterPreloader</target>
        </trans-unit>
        <trans-unit id="c97a89eca6604d8270d9752e65f96c8d8339fd21" translate="yes" xml:space="preserve">
          <source>RouterState</source>
          <target state="translated">RouterState</target>
        </trans-unit>
        <trans-unit id="ebb7712b3bab6ecbd40eec79304b637403efc465" translate="yes" xml:space="preserve">
          <source>RouterStateSnapshot</source>
          <target state="translated">RouterStateSnapshot</target>
        </trans-unit>
        <trans-unit id="b4aede4f66327196edebd30c01396287d034b92d" translate="yes" xml:space="preserve">
          <source>RouterTestingModule</source>
          <target state="translated">RouterTestingModule</target>
        </trans-unit>
        <trans-unit id="cce3fb79322fa3b3b21dd212219e00ad73809850" translate="yes" xml:space="preserve">
          <source>RouterUpgradeInitializer</source>
          <target state="translated">RouterUpgradeInitializer</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="a0789358a4f46e2ebe563bed4a6980b2fc661fa6" translate="yes" xml:space="preserve">
          <source>Routes provided by feature modules are combined together into their imported module's routes by the router. This allows you to continue defining the feature module routes without modifying the main route configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066004a8923150ca5d1c931074d51e29a6e5247a" translate="yes" xml:space="preserve">
          <source>RoutesRecognized</source>
          <target state="translated">RoutesRecognized</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="3d82d49f8f491e637994cdce0498148fd7c6ad99" translate="yes" xml:space="preserve">
          <source>Routing &amp;amp; Navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f2c27428e81339d66bbee40518d1704f5b98bd" translate="yes" xml:space="preserve">
          <source>Routing and focus management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ad2be3fe4f2c3262a7832eaafd772969077143" translate="yes" xml:space="preserve">
          <source>Routing and navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91939be2e26369bf8167a77a45f757571d014176" translate="yes" xml:space="preserve">
          <source>Routing component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2855daa195cb06e0cf06083900dbb98e02d3ba" translate="yes" xml:space="preserve">
          <source>Routing enables users to navigate between different routes in an application. When a user navigates from one route to another, the Angular router maps the URL path to a relevant component and displays its view. Animating this route transition can greatly enhance the user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc09fa9752467a5b8e84dc1d99f00641b999ff7" translate="yes" xml:space="preserve">
          <source>Routing is handled differently in Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be76514099a45153e077cc16d4fc1397a976264" translate="yes" xml:space="preserve">
          <source>Routing is pretty complicated. Testing the &lt;code&gt;DashboardComponent&lt;/code&gt; seemed daunting in part because it involves the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, which it injects together with the &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437a31b77c6561cb8b327ca8e6cc18ebab53ee9d" translate="yes" xml:space="preserve">
          <source>Routing makes more sense when there are multiple views. So far there's only the heroes view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283c74453c37be2f7673c78a56bf357906cde32" translate="yes" xml:space="preserve">
          <source>Routing modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989d13ef7b3bed68cad24dff15cf0484f141edd6" translate="yes" xml:space="preserve">
          <source>Routing to a named outlet has revealed a previously hidden router truth: you can target multiple outlets with multiple routes in the same &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35265d9ad61662d4c22afdbe7b3e60a1533d30cd" translate="yes" xml:space="preserve">
          <source>Rule of One</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772eb00dd2d7149616211e31f68e2e17f450fa35" translate="yes" xml:space="preserve">
          <source>Rules are used in &lt;code&gt;BUILD.bazel&lt;/code&gt; files, which are markers for the packages in your workspace. Each &lt;code&gt;BUILD.bazel&lt;/code&gt; file declares a separate package to Bazel, though you can have more coarse-grained distributions so that the packages you publish (for example, to &lt;code&gt;npm&lt;/code&gt;) can be made up of many Bazel packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71150ad576e31493950dd9c1983b975e6ab15dfe" translate="yes" xml:space="preserve">
          <source>Rules can collect option values from the caller and inject them into templates. The options available to your rules, with their allowed values and defaults, are defined in the schematic's JSON schema file, &lt;code&gt;&amp;lt;schematic&amp;gt;/schema.json&lt;/code&gt;. You can define variable or enumerated data types for the schema using TypeScript interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd4c81e8a8508bdb9ab46b2a8539038203683b1" translate="yes" xml:space="preserve">
          <source>Rules can make use of utilities provided with the &lt;code&gt;@schematics/angular&lt;/code&gt; package. Look for helper functions for working with modules, dependencies, TypeScript, AST, JSON, Angular CLI workspaces and projects, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdb076e5357d52f8b34a4a2605c9258f10ac2d8" translate="yes" xml:space="preserve">
          <source>Run build when files change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca51db9e9e1bd32babcf957fa7954b5b34775f8" translate="yes" xml:space="preserve">
          <source>Run change detection through the test fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068294f6f29824851c58dd179d6c0cef35231534" translate="yes" xml:space="preserve">
          <source>Run for 200ms, with no delay. Use a standard curve to start slow, accelerate in the middle, and then decelerate slowly at the end: &lt;code&gt;'0.2s ease-in-out'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060c6cb96d711efbd8f9f02251ab492610eefafb" translate="yes" xml:space="preserve">
          <source>Run or restart &lt;code&gt;ng serve&lt;/code&gt; to see Bootstrap 4 working in your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93ab635af3e75616e92de8c93680fabeb103110" translate="yes" xml:space="preserve">
          <source>Run the CLI command &lt;code&gt;ng new&lt;/code&gt; and provide the name &lt;code&gt;angular-tour-of-heroes&lt;/code&gt;, as shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cab9a40307d67c94e3b9c3212e8c81c9b2b965" translate="yes" xml:space="preserve">
          <source>Run the CLI command &lt;code&gt;ng new&lt;/code&gt; and provide the name &lt;code&gt;my-app&lt;/code&gt;, as shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6abee295cd8ce51ba0ce7cf4dadde76da56b77" translate="yes" xml:space="preserve">
          <source>Run the TypeScript type checker in a forked process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637cf7b01da961672ed3929c7fc2277c4154b503" translate="yes" xml:space="preserve">
          <source>Run the app again. In the &lt;em&gt;Dashboard&lt;/em&gt;, enter some text in the search box. If you enter characters that match any existing hero names, you'll see something like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de566c3ff5513c110b440043fe78a3e0bdf40a0" translate="yes" xml:space="preserve">
          <source>Run the app and confirm that the background color appears when the mouse hovers over the &lt;code&gt;p&lt;/code&gt; and disappears as it moves out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d716cb59d6cea855b3933093654ccc42fc8b8a40" translate="yes" xml:space="preserve">
          <source>Run the application again, click the &lt;em&gt;New Hero&lt;/em&gt; button, and the form clears. The &lt;em&gt;required&lt;/em&gt; bars to the left of the input box are red, indicating invalid &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;power&lt;/code&gt; properties. That's understandable as these are required fields. The error messages are hidden because the form is pristine; you haven't changed anything yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccff4707e86630517864110df9f9d8d84e3a7aea" translate="yes" xml:space="preserve">
          <source>Run the explorer to generate a graphical representation of one of the bundles. The following example displays the graph for the &lt;em&gt;main&lt;/em&gt; bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f519c31bd6a0275e49b9f9319667b681d0c23e" translate="yes" xml:space="preserve">
          <source>Run the live example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c363909a1a4ae97e6614091f5308fcf694b28bc0" translate="yes" xml:space="preserve">
          <source>Run the schematic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93221d2ef90f52a4ee749e7679f58a5ea7e54d50" translate="yes" xml:space="preserve">
          <source>RunGuardsAndResolvers</source>
          <target state="translated">RunGuardsAndResolvers</target>
        </trans-unit>
        <trans-unit id="b755fe8892c1c8fa77922a9a282da57394e1660d" translate="yes" xml:space="preserve">
          <source>Running Angular applications in platform-webworker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f4704cfe8a8379ae32d750db89124b2126ff33" translate="yes" xml:space="preserve">
          <source>Running Angular itself in a Web Worker via &lt;a href=&quot;../api/platform-webworker&quot;&gt;&lt;strong&gt;@angular/platform-webworker&lt;/strong&gt;&lt;/a&gt; is not yet supported in Angular CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d022659880a5b5d608d3ca2061805a65346cddd" translate="yes" xml:space="preserve">
          <source>Running Bazel directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74de0e486190406c0501daed0200699a38ec14f" translate="yes" xml:space="preserve">
          <source>Running a schematic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520572e2119d340adf652ad6df921c669212541c" translate="yes" xml:space="preserve">
          <source>Running functions via &lt;a href=&quot;ngzone#runOutsideAngular&quot;&gt;runOutsideAngular&lt;/a&gt; allows you to escape Angular's zone and do work that doesn't trigger Angular change-detection or is subject to Angular's error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44c7092a26c675e6572669144a2ed64977f62e2" translate="yes" xml:space="preserve">
          <source>Running functions via &lt;code&gt;run&lt;/code&gt; allows you to reenter Angular zone from a task that was executed outside of the Angular zone (typically started via &lt;a href=&quot;ngzone#runOutsideAngular&quot;&gt;runOutsideAngular&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7663696b0e0e61c405cea96e9445a285d3239c" translate="yes" xml:space="preserve">
          <source>Running the app right now would be disappointing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb3ce553429da57e5d6a8fa60b52b2af78a0159" translate="yes" xml:space="preserve">
          <source>Running the builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a1e236990fcff7d4ff82e8c01d2ce5546ab753" translate="yes" xml:space="preserve">
          <source>Running this command will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5536dbbbf1685d7f1ec11e3d89da93713a9a853b" translate="yes" xml:space="preserve">
          <source>Running your library schematic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d08db9cc6b0634cbd7b872dcdb0e43f2f5c493e" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;checkNoChanges&lt;/code&gt; afterwards to confirm that there are no circular updates unless called as &lt;code&gt;detectChanges(false)&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5805ebbe053a268555d93fb6afa8949ae1a2e76" translate="yes" xml:space="preserve">
          <source>Runs an Architect target with an optional custom builder configuration defined in your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ee928b58c238ec91de63dcbeda8f16eeca0f19" translate="yes" xml:space="preserve">
          <source>Runs in the &quot;resolve&quot; phase whether or not there is anything to resolve. In future, may change to only run when there are things to be resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3805133cfd2c50cabc772626bb4a1f9bfe50cb" translate="yes" xml:space="preserve">
          <source>Runs linting tools on Angular app code in a given project folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80216a55b72dd7626d8f6819dd8623ef7b521da" translate="yes" xml:space="preserve">
          <source>Runs the animation, invoking the &lt;code&gt;onStart()&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2f64f36a84fd02a516364d8873861a655c8763" translate="yes" xml:space="preserve">
          <source>Runs the body of a test (&lt;code&gt;it&lt;/code&gt;) or setup (&lt;code&gt;beforeEach&lt;/code&gt;) function within a special &lt;em&gt;async test zone&lt;/em&gt;. See &lt;a href=&quot;testing#async&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66426f5378dd8c3c56529bb9fa6742e2f707f261" translate="yes" xml:space="preserve">
          <source>Runs the body of a test (&lt;code&gt;it&lt;/code&gt;) within a special &lt;em&gt;fakeAsync test zone&lt;/em&gt;, enabling a linear control flow coding style. See &lt;a href=&quot;testing#fake-async&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f279977f6a600b2a77a14b7fa87a91d0bbcbc7af" translate="yes" xml:space="preserve">
          <source>Runs unit tests in a project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a6c428e8da60b4332f8fcc9b0d3aadfadb4b16" translate="yes" xml:space="preserve">
          <source>RxJS itself is out-of-scope for this guide. You will find many learning resources on the web. While you can get by with a minimum of RxJS knowledge, you'll want to grow your RxJS skills over time in order to use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; effectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63add1cf7412a34b1bd0a199c5c0a5d6be0fa591" translate="yes" xml:space="preserve">
          <source>RxJS marble testing is a rich subject, beyond the scope of this guide. Learn about it on the web, starting with the &lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/doc/writing-marble-tests.md&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c161d37db267e411afa5a63bd2755e5294c2239" translate="yes" xml:space="preserve">
          <source>RxJS offers a number of functions that can be used to create new observables. These functions can simplify the process of creating observables from things such as events, timers, promises, and so on. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfb95e11f5a9e52ecd66d149daed58beca52f9e" translate="yes" xml:space="preserve">
          <source>RxJS provides an implementation of the &lt;code&gt;Observable&lt;/code&gt; type, which is needed until the type becomes part of the language and until browsers support it. The library also provides utility functions for creating and working with observables. These utility functions can be used for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f1a0acb4630b109bc0abf73818fcc48717aa7d" translate="yes" xml:space="preserve">
          <source>RxJS provides many operators, but only a handful are used frequently. For a list of operators and usage samples, visit the &lt;a href=&quot;https://rxjs.dev/api&quot;&gt;RxJS API Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="df59735e1f2bd92c7fb70f7764a21bb0a207582b" translate="yes" xml:space="preserve">
          <source>SS</source>
          <target state="translated">SS</target>
        </trans-unit>
        <trans-unit id="b38be4f8d0467acb52033ff641fdc2b896e52703" translate="yes" xml:space="preserve">
          <source>SSL certificate to use for serving HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5588894fcf581ebe6497562988cd7feb2876c3" translate="yes" xml:space="preserve">
          <source>SSL key to use for serving HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dc67c95488406f9e5455fba66d7b49725070cd" translate="yes" xml:space="preserve">
          <source>SSS</source>
          <target state="translated">SSS</target>
        </trans-unit>
        <trans-unit id="1389bc012ad13d4e4fd809171cae7c776c03a884" translate="yes" xml:space="preserve">
          <source>SVG in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424dd4565e3b50faee0307759cb623a23456af2c" translate="yes" xml:space="preserve">
          <source>Safari</source>
          <target state="translated">Safari</target>
        </trans-unit>
        <trans-unit id="c3a689e5e4fdf8a84824cbf8db47dadf479f9ee7" translate="yes" xml:space="preserve">
          <source>SafeHtml</source>
          <target state="translated">SafeHtml</target>
        </trans-unit>
        <trans-unit id="3b9602cb12ba7d8d9172830e98703194c0f5f35c" translate="yes" xml:space="preserve">
          <source>SafeResourceUrl</source>
          <target state="translated">SafeResourceUrl</target>
        </trans-unit>
        <trans-unit id="32c9ddebe8802286b892932a1253a6883a5d27f1" translate="yes" xml:space="preserve">
          <source>SafeScript</source>
          <target state="translated">SafeScript</target>
        </trans-unit>
        <trans-unit id="66a9d796469043ce4e8c9f413fc74451f0edd8e2" translate="yes" xml:space="preserve">
          <source>SafeStyle</source>
          <target state="translated">SafeStyle</target>
        </trans-unit>
        <trans-unit id="a9a58f7350454fb97fee80777aeeecda3ac5a112" translate="yes" xml:space="preserve">
          <source>SafeUrl</source>
          <target state="translated">SafeUrl</target>
        </trans-unit>
        <trans-unit id="fe0e468f0d671df302c65e3991ddbc1287c461d6" translate="yes" xml:space="preserve">
          <source>SafeValue</source>
          <target state="translated">SafeValue</target>
        </trans-unit>
        <trans-unit id="43353e14dbcb8e80cd7de577088954ae2fe4183e" translate="yes" xml:space="preserve">
          <source>Safety Worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ea4a33eded731820f9ed2cab289cceb2ffa443" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;compiler#compileModuleAsync&quot;&gt;compileModuleAsync&lt;/a&gt; but also creates ComponentFactories for all components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab72c2293eda192b1469daf984ee9b4f3522711" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;compiler#compileModuleSync&quot;&gt;compileModuleSync&lt;/a&gt; but also creates ComponentFactories for all components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3076d49e8e296db46255699f246a79cbbfbfd49a" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;run&lt;/code&gt;, except that synchronous errors are caught and forwarded via &lt;code&gt;onError&lt;/code&gt; and not rethrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3f90a927f6f13042f9b8f668894b5569d73f34" translate="yes" xml:space="preserve">
          <source>Same options for &lt;a href=&quot;navigationextras#queryParamsHandling&quot;&gt;NavigationExtras#queryParamsHandling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090e9abe187cd6a83d810a486180ec8236c48b6f" translate="yes" xml:space="preserve">
          <source>Sample HTTP requests for the &lt;a href=&quot;../../../tutorial/toh-pt0&quot;&gt;Tour of Heroes&lt;/a&gt; application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fc85c2cdd85928f428444cb0fcdf4bcd3bf6ff" translate="yes" xml:space="preserve">
          <source>Sample app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9825f926c0692f1aeadfc7a1f61febb0934c7d" translate="yes" xml:space="preserve">
          <source>Sanitization and security contexts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c669cc888c3767ae8b08a6cdfee9dbb0e765d931" translate="yes" xml:space="preserve">
          <source>Sanitization example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1d5da09eb7e684d008c50bf4884555fe94eaf4" translate="yes" xml:space="preserve">
          <source>Sanitizer</source>
          <target state="translated">Sanitizer</target>
        </trans-unit>
        <trans-unit id="3663e4df2ef6c760a2646c87fe941424a764e038" translate="yes" xml:space="preserve">
          <source>Sanitizer is used by the views to sanitize potentially dangerous values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b5c1eec6e00aa9e3ba4aba106c4cc62d24b23e" translate="yes" xml:space="preserve">
          <source>Sanitizes a value for use in the given SecurityContext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01194c80a7142ec0533577f1e422c7201b178399" translate="yes" xml:space="preserve">
          <source>Saving form data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedb2a11d087c5cd07e9dc0db0227dd089e8d32c" translate="yes" xml:space="preserve">
          <source>Say Goodbye to AngularJS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5436b63227a77ff1285c2fce651209ecc06da9a" translate="yes" xml:space="preserve">
          <source>Say you have a simple Angular component that shows information about a hero:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfb7e53e1ff83964ea3a05d84b64626b4b2ea9e" translate="yes" xml:space="preserve">
          <source>Say you have an &lt;code&gt;ng-app&lt;/code&gt; driven bootstrap such as this one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b03c70b196c58604c0a7faf7218bf6901b8e0c" translate="yes" xml:space="preserve">
          <source>Scalability</source>
          <target state="translated">Scalability</target>
        </trans-unit>
        <trans-unit id="ad06d494c8e6be5f7e5ec99d9bb1edf29af41863" translate="yes" xml:space="preserve">
          <source>Scenario: multiple edit sessions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1222b28c663e7e6973c3ec9287cc49452331f85e" translate="yes" xml:space="preserve">
          <source>Scenario: service isolation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362fc37b86ad4d41b105bec3c934be8884bd0a32" translate="yes" xml:space="preserve">
          <source>Scenario: specialized providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e006e25ba99d01bb2c3c98a9cbbf511138b509c1" translate="yes" xml:space="preserve">
          <source>Schedule and run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604b75d1a0f16fd6b69aec0a759682d8e3f2847d" translate="yes" xml:space="preserve">
          <source>SchemaMetadata</source>
          <target state="translated">SchemaMetadata</target>
        </trans-unit>
        <trans-unit id="1f2ad639e825ea1bd5e221f4066dc8999024ca21" translate="yes" xml:space="preserve">
          <source>Schematic &lt;em&gt;prompts&lt;/em&gt; introduce user interaction into schematic execution. You can configure schematic options to display a customizable question to the user. The prompts are displayed before the execution of the schematic, which then uses the response as the value for the option. This allows users to direct the operation of the schematic without requiring in-depth knowledge of the full spectrum of available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60a8b4f0091f9f0d6ff8fb8281502b828c676e1" translate="yes" xml:space="preserve">
          <source>Schematic commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969c2a6039f399323cbb3f93adb2b47880e1daa8" translate="yes" xml:space="preserve">
          <source>Schematic prompts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39f8e0fc7d8b46ffd0595cbc7264b989c06246d" translate="yes" xml:space="preserve">
          <source>Schematic variable definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccbbf8908b1659d9bc0f1cb2357d8412c775fbb" translate="yes" xml:space="preserve">
          <source>Schematic variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9414319b44a81908bce4d6afcd2a5a854ada3be" translate="yes" xml:space="preserve">
          <source>Schematics</source>
          <target state="translated">Schematics</target>
        </trans-unit>
        <trans-unit id="ccc733e31ebdc2e1661ecdf1a2fc2c6e1e84f3db" translate="yes" xml:space="preserve">
          <source>Schematics CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f48d15a3291b7ff46ddcfb61d4430b8fb891e5" translate="yes" xml:space="preserve">
          <source>Schematics are part of the Angular ecosystem. The &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; uses schematics to apply transforms to a web-app project. You can modify these schematics, and define new ones to do things like update your code to fix breaking changes in a dependency, for example, or to add a new configuration option or framework to an existing project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b0823baeca8f1960291235e2953eec43adebb1" translate="yes" xml:space="preserve">
          <source>Schematics come with their own command-line tool. Using Node 6.9 or above, install the Schematics CLI globally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371fa93a3003b12a06158af7fcc1e40fd3929bfa" translate="yes" xml:space="preserve">
          <source>Schematics come with their own command-line tool. Using Node 6.9 or above, install the Schematics command line tool globally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da3222f078061dc3193a0ae60f714d5fb5a5ed3" translate="yes" xml:space="preserve">
          <source>Schematics concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5364a057dcc3a879255154b260244d602c2f8af" translate="yes" xml:space="preserve">
          <source>Schematics for Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650e45a519b32d0d1d4f0ffa5f694333bc0fcb26" translate="yes" xml:space="preserve">
          <source>Schematics for the Angular CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e835be18685450037ec8dc15bb803b1fecb6c1" translate="yes" xml:space="preserve">
          <source>Schematics that are included in the &lt;code&gt;@schematics/angular&lt;/code&gt; collection are run by default by the commands &lt;code&gt;ng generate&lt;/code&gt; and &lt;code&gt;ng add&lt;/code&gt;. The package contains named schematics that configure the options that are available to the CLI for &lt;code&gt;ng generate&lt;/code&gt; sub-commands, such as &lt;code&gt;ng generate component&lt;/code&gt; and &lt;code&gt;ng generate service&lt;/code&gt;. The subcommands for &lt;code&gt;ng generate&lt;/code&gt; are shorthand for the corresponding schematic. You can specify a particular schematic (or collection of schematics) to generate, using the long form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5094fad8f709419a1f61b790a07c4c6e1a94112" translate="yes" xml:space="preserve">
          <source>Scope of these guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d825c6e7ff747f7a43af04604d0038c6390663eb" translate="yes" xml:space="preserve">
          <source>Scopes must be strictly nested and are analogous to stack frames, but do not have to follow the stack frames. Instead it is recommended that they follow logical nesting. You may want to use &lt;a href=&quot;http://google.github.io/tracing-framework/instrumenting-code.html#custom-events&quot;&gt;Event Signatures&lt;/a&gt; as they are defined in WTF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090a3c807816bef76a7b19c9a37c7de92b0eaa5e" translate="yes" xml:space="preserve">
          <source>Scroll</source>
          <target state="translated">Scroll</target>
        </trans-unit>
        <trans-unit id="3821a575a41bcb0264cca8aaf7ea5bfed2300253" translate="yes" xml:space="preserve">
          <source>Scrolls to a specified position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb6d39647f259246def752bfa65b6f9f17a390a" translate="yes" xml:space="preserve">
          <source>Scrolls to an anchor element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28abc0313db18cdefc86ad4f714f70bdb310a3dd" translate="yes" xml:space="preserve">
          <source>Search by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08583e53fde056ce085f8f7ad7cbf37ed9157b4c" translate="yes" xml:space="preserve">
          <source>Search for requests that match the given parameter, without any expectations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802a9d493d035d23a9ab024d6a12f94682fd4026" translate="yes" xml:space="preserve">
          <source>Search the web for more details about Jasmine and Karma configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd0089e26e7521865fc4f8ba73e0e9c366de562" translate="yes" xml:space="preserve">
          <source>Search the web to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4bcae654f264daf22579fb462bf0bae302a057" translate="yes" xml:space="preserve">
          <source>Second</source>
          <target state="translated">Second</target>
        </trans-unit>
        <trans-unit id="05b3b867f3308524cfcca1ad20ea32361f33b5b0" translate="yes" xml:space="preserve">
          <source>Second string for comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025de599ea0a6262eeb4ea073413e273d0ea875b" translate="yes" xml:space="preserve">
          <source>Secondary</source>
          <target state="translated">Secondary</target>
        </trans-unit>
        <trans-unit id="0090b2e8c3b3dbd13cc4b1eff7399ac4982efc36" translate="yes" xml:space="preserve">
          <source>Secondary route navigation: merging routes during navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d121995492d64204de97419bd678ddd753a48602" translate="yes" xml:space="preserve">
          <source>Secondary routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde05d3f3a99675b9caef67745eff532e079ae0c" translate="yes" xml:space="preserve">
          <source>Secondary routes look like primary routes and you configure them the same way. They differ in a few key respects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1802250d264a47e2ed4089ebb6eaa12357b27d" translate="yes" xml:space="preserve">
          <source>Secondary section heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff5a6dafd806f6d95302657c480d07703b64604" translate="yes" xml:space="preserve">
          <source>Sections</source>
          <target state="translated">Sections</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="420f8a7e7fa60602bd00c1120fbeb8ee91756678" translate="yes" xml:space="preserve">
          <source>Security risk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bda12774e119cf736360ccdeb270bd009f2a98" translate="yes" xml:space="preserve">
          <source>Security: XSRF protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff92d47bbbf75d573d4b7f6ecd4609bd0e9052ff" translate="yes" xml:space="preserve">
          <source>SecurityContext</source>
          <target state="translated">SecurityContext</target>
        </trans-unit>
        <trans-unit id="e7810d7050870999862eb700f56286a61f57171c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../guide/bootstrapping&quot;&gt;&quot;Bootstrapping&quot;&lt;/a&gt; and &lt;a href=&quot;../../guide/entry-components&quot;&gt;&quot;Entry components&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda20d0026cc214d8aecdf193f720779b13bcbbb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; for more about CLI build options and what they do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce80250e18186fec1a10b29c5231259f0c74b4c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;component#encapsulation&quot;&gt;encapsulation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde687c61cc2f67abe8427525ccbb7e9c5b55f41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#http&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ab9cbda5653ec945d26c4134d08e822f587d82" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#i18n-pipes&quot;&gt;Pipes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a740448cbd65deba0b9f6b484912e52a30db1ad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#ngform&quot;&gt;ngForm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4a7efd970db9e737c1fc3a4527070de9c20c37" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871e386735b07dc956709f343dad1b667ef85183" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#webworker-apps&quot;&gt;platform-webworker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71c4f89e36020da5e93934f1435aa406a8d6a23" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#wtf&quot;&gt;Web Tracing Framework&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bd192a13e9c4793df648557f077670a7462630" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#angular-element&quot;&gt;Angular element&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdd5980f3db24eedbf589f721c18fb3347d2134" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#class-decorator&quot;&gt;class decorator&lt;/a&gt;, &lt;a href=&quot;glossary#class-field-decorator&quot;&gt;class field decorator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1341694f2963b73abc061b0e699b5eaef5f6c2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#cli-config&quot;&gt;workspace configuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef53b103c2504568a2522db0ec692844cf26d26" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#custom-element&quot;&gt;custom element&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373b7586829118f4444b7e73738c97f95b77fe0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#ecma&quot;&gt;ECMAScript&lt;/a&gt;, &lt;a href=&quot;glossary#typescript&quot;&gt;TypeScript&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68b10b9142888a09da7c925539ce570195d6804" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;guide/component-interaction&quot;&gt;Component Interaction&lt;/a&gt; for more information about listening for events from child components, reading child properties or invoking child methods, and using a service for bi-directional communication between components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7f22fad065c3e1f9b4f0fc47d11cadb5bff074" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;guide/component-interaction&quot;&gt;Component Interaction&lt;/a&gt; for more information about passing data from a parent to child component, intercepting and acting upon a value from the parent, and detecting and acting on changes to input property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e07cb2961cc6a28ac48cc8c06efe0cd8122658d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;http://cldr.unicode.org/index/cldr-spec/plural-rules&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ff708cfec4225c8805ca252cf51150ee5467b6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Array.filter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b639f087a824df95ea8389e9ad529fcadb7ddf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot;&gt;Array.find&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc03b9137b41fe34c8de5449f8c9d7c85281ca9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array.forEach&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcf856080efdaf7ecc49f5da7833c185aff1a03" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Array.map&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e084e8e8490a4b66a1c13060c8799b6f245811" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt;Array.reduce&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7cdd492f483451b7a638d7cd47eff1bd62c5a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.some&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dffe4fde2bb769f7a483a0f60b6656cf9de405" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.bazel.build/versions/master/query-how-to.html&quot;&gt;https://docs.bazel.build/versions/master/query-how-to.html&lt;/a&gt; for more details on &lt;code&gt;bazel &lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ef4b528c2d94313c75ada965b517dd89b49fe6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ngplural&quot;&gt;&lt;code&gt;NgPlural&lt;/code&gt;&lt;/a&gt; for more details and example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28085ff802c246b48f5171b0d47bf3463877e5ba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;router#createUrlTree&quot;&gt;createUrlTree&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2f0a6425e2a9d3501a8680ffed17e9f7ec951d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;setup-local&quot;&gt;Local Environment Setup&lt;/a&gt; for information about the required versions and installation of &lt;code&gt;Node.js&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3729608a50a57e0a30b44c88ac519321cf4c2aa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;updating&quot;&gt;Keeping Up-to-Date&lt;/a&gt; for more information about updating your Angular projects to the most recent version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e6c7b01d745d85ffb3acd5024b83653609ada8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1bec5ec8258940ff8ccf46c9bbe3dc1f64ff6c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;defaulturlserializer&quot;&gt;DefaultUrlSerializer&lt;/a&gt;&lt;/code&gt; for an example of a URL serializer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86061a06305cac0e282f79e07bb04c0e3358893c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;DefaultValueAccessor&lt;/a&gt;&lt;/code&gt; for how to implement one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138d389dd7a925fd91c820fa0f794714cb6a453c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator for an example of providing a binding name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47eb911785d48a60185a7ec31d4d8588cad6e6bd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4fea18069448d8237854e4e3c5a17cbee9b73e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20fef1640eb8dc2082434b20a559330568ea1a5" translate="yes" xml:space="preserve">
          <source>See DomSanitizer for more details on security in Angular applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10a33a9759f8a47cb90543774563be4f296671c" translate="yes" xml:space="preserve">
          <source>See a complete exampled of the schematic rule function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4439eca1fddc276ca91de31606982dcfa703e7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#custom-element&quot;&gt;custom element&lt;/a&gt;, which provides an easier path with the same result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f5b22dc31edf8387e734a0d82f6abd7d358014" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#dynamic-components&quot;&gt;dynamic component loading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a23c5bfb888ea92d238b5f0c0a5e5aebe25f25a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#schematic&quot;&gt;schematic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d53453313efe3618a28a4af66e763cbdda299c2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#schematics-cli&quot;&gt;Schematics CLI&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fe6f0ebf80f3f795ed53c96022ee2b4c03ba43" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#service&quot;&gt;service&lt;/a&gt;, &lt;a href=&quot;glossary#di&quot;&gt;dependency injection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9883e8f0d3adafce63d75307e699a63bfa599ebd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://www.youtube.com/watch?v=ez3R0Gi4z5A&amp;amp;t=368s&quot;&gt;Chuck Jazdzewski's presentation&lt;/a&gt; on the Angular Language Service from &lt;a href=&quot;https://www.ng-conf.org/&quot;&gt;ng-conf&lt;/a&gt; 2017.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc701bd0c67b5d759ab439b8de536ccc0be67e8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;service-worker-intro&quot;&gt;Service Worker and PWA&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b8fbcfe94a2300571efea327e03e3297312e7d" translate="yes" xml:space="preserve">
          <source>See also Dave Smith's easy-to-understand &lt;a href=&quot;https://www.youtube.com/watch?v=9inczw6qtpY&quot;&gt;talk on XSRF at AngularConnect 2016&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c626340520b8deb2d38bbb5164185ffdc66501" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../api/common/app_base_href&quot;&gt;&lt;em&gt;APP_BASE_HREF&lt;/em&gt;&lt;/a&gt; alternative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4051d78d3c362996fa25fceccc4530848ab2fd65" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;template-syntax#safe-navigation-operator&quot;&gt;safe navigation operator&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71e224a8e5c89a59c6fa5e674c9f17b8333d98a" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;upgrademodule#examples&quot;&gt;examples&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a85463a1744945edfa4b6048b29941a2635134" translate="yes" xml:space="preserve">
          <source>See how Angular calls the &lt;code&gt;ngOnChanges()&lt;/code&gt; hook with a &lt;code&gt;&lt;a href=&quot;../api/core/querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; object every time one of the component input properties changes. Shows how to interpret the &lt;code&gt;&lt;a href=&quot;../api/core/querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194d7b196403c87ea066bc5c7b4896735981af7e" translate="yes" xml:space="preserve">
          <source>See it run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a745bdc83646a70d932883de3c439b948ef90f4e" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;guide/workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3254ebd02f25e6c7906d918d3d3f5afade78214" translate="yes" xml:space="preserve">
          <source>See more about the &lt;a href=&quot;guide/file-structure&quot;&gt;Workspace file structure&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0a0464d33548528e141211b4a60cdaa51e2cb0" translate="yes" xml:space="preserve">
          <source>See more...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b2c00da89e3d19c34764e404c22026f7adb91" translate="yes" xml:space="preserve">
          <source>See our &lt;a href=&quot;static-query-migration&quot;&gt;dedicated migration guide for static queries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab88b514907ae61c46e873f6cd0ba9e91f0c742" translate="yes" xml:space="preserve">
          <source>See the  of the code in this cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e976d74d82e09e61d208b2551645e8f0c0ee8b8" translate="yes" xml:space="preserve">
          <source>See the .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703afc407e28537f8117d5af1ca5b74c585bebe7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guide/i18n#merge&quot;&gt;i18n guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfd83fc6c51f15909a805f30410b163ed8390ea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guide/i18n#missing-translation&quot;&gt;i18n guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eafec19a4437862205f97e51b0441285a1a5e0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guide/i18n#setting-up-locale&quot;&gt;i18n guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f838634255c8c690b694b3a242a06b3f0641fd0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;cli&quot;&gt;CLI command reference&lt;/a&gt; and &lt;a href=&quot;build&quot;&gt;Building and serving Angular apps&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be11d46da8eddd97ee7679e70b105f31f2aa40c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;deployment#configuration-table&quot;&gt;configuration table&lt;/a&gt; below for the configurations for enabling differential loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b3bcfdf95d7437073f983c13336b30c0879a23" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;docs-style-guide#anchors&quot;&gt;&quot;Anchors&quot;&lt;/a&gt; section for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523803ef999afba78e6262a840da0aa1af129a0b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;forms-overview#setup-the-form-model&quot;&gt;Form model setup&lt;/a&gt; section below for an introduction to how these control instances are created and managed with reactive and template-driven forms. Further details are provided in the &lt;a href=&quot;forms-overview#data-flow-in-forms&quot;&gt;data flow section&lt;/a&gt; of this guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3998ec04034a9afd602566cacf01686de60924c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/angular-workspace&quot;&gt;complete schema&lt;/a&gt; for &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b15b0ac2409a516f94ecb0ef72e07ae67a5814" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-global-styles&quot;&gt;CLI wiki&lt;/a&gt; to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6618fffb24e5628ae5e9c23ffe287e2276cb1a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;browserslist repo&lt;/a&gt; for more examples of how to target specific browsers and versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4536cc0769515848a890e86feb11c61edb0e25e2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;router&quot;&gt;Routing&lt;/a&gt; page for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d54ecac8ced81720a42266f2b9d870dbd98d7b4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;styleguide#decorate-input-and-output-properties&quot;&gt;Decorate input and output properties&lt;/a&gt; section of the &lt;a href=&quot;styleguide&quot;&gt;Style Guide&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa391d4eaa0994839fcde094ca0c1fd99b3fef3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;template-syntax#html-attribute-vs-dom-property&quot;&gt;Template Syntax&lt;/a&gt; guide for more background on the difference between attributes and properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c44f421b71db485fb82450b13af9502948005c" translate="yes" xml:space="preserve">
          <source>See the &lt;span name=&quot;i18n&quot;&gt;i18n Example&lt;/span&gt; for a simple example of an AOT-compiled app, translated into French.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6473f64e1d57a8fb3c2051580d3b7b07293f8f" translate="yes" xml:space="preserve">
          <source>See the workspace schema for additional customizations for schematic options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61cfd1be505a73b5096299f1c87b5be1558f319" translate="yes" xml:space="preserve">
          <source>See these two classes for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1559cb4f6928d64480787e467f96e49b44b941" translate="yes" xml:space="preserve">
          <source>See what polyfills you might need in the &lt;a href=&quot;../guide/browser-support&quot;&gt;browser support guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9866b44abce919f71b98fa4b35babe857b362349" translate="yes" xml:space="preserve">
          <source>Select &lt;code&gt;dist/my-project-name&lt;/code&gt; as the public directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afe008efb1b2d7a3cccda57e9fe1a00412e0b53" translate="yes" xml:space="preserve">
          <source>Select &lt;strong&gt;Tools&lt;/strong&gt; &amp;gt; &lt;strong&gt;Developer Tools&lt;/strong&gt; (from the Chrome menu located at the top right corner).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272bb72a4f337f9ff7776a5a0bc02264f5ae811e" translate="yes" xml:space="preserve">
          <source>Select a crisis and the application takes you to a crisis editing screen. The &lt;em&gt;Crisis Detail&lt;/em&gt; appears in a child component on the same page, beneath the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d40cec1f7b8f7a101609d2857c4810b242321a" translate="yes" xml:space="preserve">
          <source>Select among alternative text messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afee43201734724acd1ed8d813493db708a03a8" translate="yes" xml:space="preserve">
          <source>Select one hero and the app takes you to a hero editing screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995459faa031db1ac236b4da374b4330a6311773" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;ASP.NET Web Application&lt;/code&gt; template, give the project a name, and click OK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c81843b717b7614f0a47ae900485011ad57cff" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;Hosting&lt;/code&gt; option on the first prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75079fc1a45a87d174498425b3e96c2bca16a530" translate="yes" xml:space="preserve">
          <source>Select the desired ASP.NET 4.5.2 template and click OK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683878a567372e3758de6c2c02c467b8a09c8df0" translate="yes" xml:space="preserve">
          <source>Select the project you previously created on Firebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0306e76de68e6dea7e839b5961dd31842ec1d82d" translate="yes" xml:space="preserve">
          <source>SelectControlValueAccessor</source>
          <target state="translated">SelectControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="c780e4dd3573852b9db0b1910dfce072d6bf3220" translate="yes" xml:space="preserve">
          <source>SelectMultipleControlValueAccessor</source>
          <target state="translated">SelectMultipleControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="dbfb8bcc93418a71312c156f806f37a3e00a43a5" translate="yes" xml:space="preserve">
          <source>Selector for all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a7975cc5125897d86930adc5a2c3718963faa3" translate="yes" xml:space="preserve">
          <source>Selector references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df28d2cb8a74e0553a8b501f660f7fd482671ed" translate="yes" xml:space="preserve">
          <source>Selectors</source>
          <target state="translated">Selectors</target>
        </trans-unit>
        <trans-unit id="52a837d8797d4f84798dfca97cb2f902259bd2e2" translate="yes" xml:space="preserve">
          <source>Selectors are &lt;strong&gt;not required&lt;/strong&gt; for &lt;em&gt;routed components&lt;/em&gt; due to the components are dynamically inserted when the page is rendered, but are useful for identifying and targeting them in your HTML element tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f6abf2755c30468942061cf910c26315d31fa5" translate="yes" xml:space="preserve">
          <source>Selects a subset of items from the defined collection, based on the filter criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a9f3928fbced8e2080b3db3ee9dbc01ff2bd0e" translate="yes" xml:space="preserve">
          <source>Selects up to the first parameter (2) number of items from the collection starting (optionally) at the beginning index (0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27eb5d81cb75de714a2807a624ee3f9c38e362c" translate="yes" xml:space="preserve">
          <source>Selects: &lt;code&gt;&lt;a href=&quot;selectcontrolvalueaccessor&quot;&gt;SelectControlValueAccessor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e102517374a81d4e2f92c28774a0b02079ebacf4" translate="yes" xml:space="preserve">
          <source>Self</source>
          <target state="translated">Self</target>
        </trans-unit>
        <trans-unit id="a36acbed10afbb9e5a669f2b42c260fd386aa8a5" translate="yes" xml:space="preserve">
          <source>Send a message from &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119600cc9addb52c8411bb9fe964a8991edb44cb" translate="yes" xml:space="preserve">
          <source>Send the &lt;code&gt;id&lt;/code&gt; with an object that contains an &lt;em&gt;optional&lt;/em&gt;&lt;code&gt;id&lt;/code&gt; parameter. For demonstration purposes, there's an extra junk parameter (&lt;code&gt;foo&lt;/code&gt;) in the object that the &lt;code&gt;HeroListComponent&lt;/code&gt; should ignore. Here's the revised navigation statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072547be8c6747695adbb07bdf037ce01f8e52db" translate="yes" xml:space="preserve">
          <source>Sending a request for every keystroke could be expensive. It's better to wait until the user stops typing and then send a request. That's easy to implement with RxJS operators, as shown in this excerpt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fae25b4df92f4a2af6e1b5c517a289ac53291a" translate="yes" xml:space="preserve">
          <source>Sending data to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc4087dcaf07d22c764d5cc84471b63b54d30e0" translate="yes" xml:space="preserve">
          <source>Sends an &lt;code&gt;HTTPRequest&lt;/code&gt; and returns a stream of &lt;code&gt;HTTPEvents&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd289e370bd5cc575f48a16947d05c144ec474b" translate="yes" xml:space="preserve">
          <source>Sep</source>
          <target state="translated">Sep</target>
        </trans-unit>
        <trans-unit id="d3f2c137b1c31435de9ffb869cd5f14f5f8be665" translate="yes" xml:space="preserve">
          <source>Separate &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; bindings are an improvement over binding to the element's native properties, but you can streamline the binding with a single declaration using the &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b760724fe18bef99d65097e60d8040459cf0aa04" translate="yes" xml:space="preserve">
          <source>Separate file names with dots and dashes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863c49aa45c96f6cc56cd2270446ad6b1da56b02" translate="yes" xml:space="preserve">
          <source>Separate your services into their own module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c3a26290b8da44311bd86131f30ae5b141c561" translate="yes" xml:space="preserve">
          <source>Separates routing concerns from other application concerns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c542e79c9b4257e640ccf72974d61fd590a5c26" translate="yes" xml:space="preserve">
          <source>September</source>
          <target state="translated">September</target>
        </trans-unit>
        <trans-unit id="eef188ee59e5270d06bf25801bee04042af6b8f9" translate="yes" xml:space="preserve">
          <source>Sequential vs. parallel animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b821c1a25e558762f20edbc0fe2487778411c6a" translate="yes" xml:space="preserve">
          <source>Serbian Latin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0975425046a88f8aed9ad1020d304b9d262f95" translate="yes" xml:space="preserve">
          <source>Serialize the current state of the store to JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0097562a9b5d36057a43961cbfa13bd0e259e50" translate="yes" xml:space="preserve">
          <source>SerializerTypes</source>
          <target state="translated">SerializerTypes</target>
        </trans-unit>
        <trans-unit id="f2c63d0a0bc928d9f052b2c1898434640be02869" translate="yes" xml:space="preserve">
          <source>Serializes a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; into a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c2a827715d0f8388ccd11e1d655706167f3ff0" translate="yes" xml:space="preserve">
          <source>Serializes and deserializes a URL string into a URL tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc06ec834c7da5d34024e74977610caf3fda6cd5" translate="yes" xml:space="preserve">
          <source>Serializes and parses URL parameter keys and values to encode and decode them. If you pass URL query parameters without encoding, the query parameters can be misinterpreted at the receiving end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41cbec8815a9fb51b7c4241e53ac35a4c8b6414" translate="yes" xml:space="preserve">
          <source>Serializes the body to an encoded string, where key-value pairs (separated by &lt;code&gt;=&lt;/code&gt;) are separated by &lt;code&gt;&amp;amp;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45392ea5611ee85d2b55866e135d8f5f02337e65" translate="yes" xml:space="preserve">
          <source>Serve the application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d38d6df0105cea4e757adca112367e1bf9dfd55" translate="yes" xml:space="preserve">
          <source>Serve the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db53f196e443ef4900a6ccc944eb20e7cf35355" translate="yes" xml:space="preserve">
          <source>Serve using HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03336908d63670602a10d87bc0dad160c17a03c5" translate="yes" xml:space="preserve">
          <source>Server configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1b7b12e854e57e61933f9af3c1b264e928e8c3" translate="yes" xml:space="preserve">
          <source>Server-side Rendering (SSR): An intro to Angular Universal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b672463f37d2e7aaa9ad2979024241353e8fbd" translate="yes" xml:space="preserve">
          <source>Server-side XSS protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130354b2f12f682cce2462cea9237e2bebb5d52a" translate="yes" xml:space="preserve">
          <source>ServerModule</source>
          <target state="translated">ServerModule</target>
        </trans-unit>
        <trans-unit id="e5ece8a754403830b630fdabc7b1a6c765a0f3b7" translate="yes" xml:space="preserve">
          <source>ServerTestingModule</source>
          <target state="translated">ServerTestingModule</target>
        </trans-unit>
        <trans-unit id="7af36030afa6970f296c1d9f8d32147e521635b0" translate="yes" xml:space="preserve">
          <source>ServerTransferStateModule</source>
          <target state="translated">ServerTransferStateModule</target>
        </trans-unit>
        <trans-unit id="059140132898cd7cf2f8b4b198375177de7805f9" translate="yes" xml:space="preserve">
          <source>Serves as the base non-VE container for NgClass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddca72b8be0f68f5a85d55134bf184f4ceaa75d7" translate="yes" xml:space="preserve">
          <source>Serves as the base non-VE container for NgStyle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">Service</target>
        </trans-unit>
        <trans-unit id="2f7c1a556cb9dc184d3f119890e63b3d15bff0c5" translate="yes" xml:space="preserve">
          <source>Service Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff8d9d0a8cd813b37012657954cd47c344b89ce" translate="yes" xml:space="preserve">
          <source>Service Worker Communication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3c72c33eb3cdd4644a15bb18b9dccf91e3bd36" translate="yes" xml:space="preserve">
          <source>Service Worker Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca188360dd52bb36aa771a8bb3eb10987f312be" translate="yes" xml:space="preserve">
          <source>Service Worker Safety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e280573377e87f6266bc4ef9191689933cdace95" translate="yes" xml:space="preserve">
          <source>Service Worker in Production</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f27aaeadb9c93beb5c8a9639fd6f1acfc2516e3" translate="yes" xml:space="preserve">
          <source>Service classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51c82bbb85ff024a89d22ed23103f1a7e9f323f" translate="yes" xml:space="preserve">
          <source>Service classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd986fdd77fb1edb07840a69c86a7af558f6555a" translate="yes" xml:space="preserve">
          <source>Service examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3706f59ee7865182e26fc8a0a76067f8707b62ab" translate="yes" xml:space="preserve">
          <source>Service feature modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fde19c78186a28f22af3d019e5c7269e315a39" translate="yes" xml:space="preserve">
          <source>Service modules provide utility services such as data access and messaging. Ideally, they consist entirely of providers and have no declarations. Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; is a good example of a service module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e198ac9a6441be2e9cc7951fa8f3ed4907acfe" translate="yes" xml:space="preserve">
          <source>Service names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e017a1ef928ee7b12f386a906bd610ffe8ae04b" translate="yes" xml:space="preserve">
          <source>Service worker and caching of app resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d098b164425fcb1b7d22832466e0ba8e40520886" translate="yes" xml:space="preserve">
          <source>Service worker communication</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
