<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="influxdata">
    <body>
      <group id="influxdata">
        <trans-unit id="29a56c9b7e8921d96f19c0d64b1561671f2fbf70" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/ceph&quot;&gt;Ceph plugin&lt;/a&gt;, the &lt;code&gt;ceph_pgmap_state&lt;/code&gt; metric content has been modified to use a unique field &lt;code&gt;count&lt;/code&gt;, with each state expressed as a &lt;code&gt;state&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a066e51a54eb7b0cb502228c49ce97deba0332" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Kapacitor URL&lt;/code&gt;, enter the hostname or IP of the machine that Kapacitor is running on, and be sure to include Kapacitor&amp;rsquo;s default port: &lt;code&gt;9092&lt;/code&gt;. Next, name the connection string; this can be anything you want. There&amp;rsquo;s no need to enter any information for the &lt;code&gt;Username&lt;/code&gt; and &lt;code&gt;Password&lt;/code&gt; inputs as authorization is disabled in Kapacitor&amp;rsquo;s default configuration. Finally, click &lt;code&gt;Connect&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a24ee13174687581439990efc636a8103598d9" translate="yes" xml:space="preserve">
          <source>For the Nth Graphite configuration in the configuration file, the relevant environment variables would be of the form &lt;code&gt;INFLUXDB_GRAPHITE_(N-1)_BATCH_PENDING&lt;/code&gt;. For each section of the configuration file the numbering restarts at zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f426787fb1b6e8bbd3f2aa7d7f00a687d347e0" translate="yes" xml:space="preserve">
          <source>For the TICKscript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27ddd797912ddc33d44dcd36314bd150a7c1aa3" translate="yes" xml:space="preserve">
          <source>For the above example, without &lt;a href=&quot;index#aligngroup&quot;&gt;QueryNode.AlignGroup,&lt;/a&gt; every other query issued by Kapacitor (at :30 past the minute) will align to :00 seconds instead of the desired :30 seconds, which would create 6 group by intervals instead of 5, the first and last of which would only have 30 seconds of data instead of a full minute. If the group by time offset (i.e. time(t, offset)) is used in conjunction with &lt;a href=&quot;index#aligngroup&quot;&gt;QueryNode.AlignGroup,&lt;/a&gt; the alignment will occur first, and will be offset the specified amount after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1467a6b9b7fbb61b6f40a369f46029b37716d34" translate="yes" xml:space="preserve">
          <source>For the time series use case, we assume that if the same data is sent multiple times, it is the exact same data that a client just sent several times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fa32acd898971625cfb2a1cac8500152e1a4b7" translate="yes" xml:space="preserve">
          <source>For this guide we will follow the classic use case of triggering an alert for high cpu usage on a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1616afc65c68d651d0081e0b98c4c7b2a2988d" translate="yes" xml:space="preserve">
          <source>For users who don&amp;rsquo;t want to install any software and are ready to use InfluxDB, you may want to check out our &lt;a href=&quot;https://cloud.influxdata.com&quot;&gt;managed hosted InfluxDB offering&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa2e2aa1809c3ff613c7538d508c584cd7cbef2" translate="yes" xml:space="preserve">
          <source>For users who want to write sparse, historical data to InfluxDB, we recommend:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1c80dcf52677448b7eff93fbb78d910bf2b817" translate="yes" xml:space="preserve">
          <source>Forbid wildcards in binary expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6072fa79bfd45da950e7582232ea9aeae74df3" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;chronograf&lt;/code&gt; server to require that all requests to it are prefixed with the value set in &lt;code&gt;--basepath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1d0b68ddfbbd36782380e63245dc43deedb759" translate="yes" xml:space="preserve">
          <source>Forking sensors command to remove C package dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5fb89546fa56451bf07260d4420bcc62940bb0" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions (FAQ)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="a9466df45f04add95b096e3d49cd1c1ebb4b5028" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://developer.pagerduty.com/documentation/integration/events&quot;&gt;https://developer.pagerduty.com/documentation/integration/events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36198ca03eeced2f5e383b3893ff91158d706278" translate="yes" xml:space="preserve">
          <source>From Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c488b320178380dd5c423d1456187f75ba8091fd" translate="yes" xml:space="preserve">
          <source>From your terminal, download the text file that contains the data in &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt; format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2bacb073ad2af5123b135df4301500a389c262" translate="yes" xml:space="preserve">
          <source>FromNode</source>
          <target state="translated">FromNode</target>
        </trans-unit>
        <trans-unit id="a9f8c9557389d6e8ae742c762a7ea180be600f94" translate="yes" xml:space="preserve">
          <source>Full Compactions - Full compactions run when a shard has become cold for writes for long time, or when deletes have occurred on the shard. Full compactions produce an optimal set of TSM files and include all optimizations from Level and Index Optimization compactions. Once a shard is fully compacted, no other compactions will run on it unless new writes or deletes are stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc76cdc8bc3cdcc40e362882da9d7a8062b03b4" translate="yes" xml:space="preserve">
          <source>Full screen mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="d74d87a831425518037c021b5e3c96a854a0ba5a" translate="yes" xml:space="preserve">
          <source>Function calls in InfluxQL are implemented at two levels. Some calls can be wrapped at multiple layers to improve efficiency. For example, a &lt;code&gt;COUNT()&lt;/code&gt; can be performed at the shard level and then multiple &lt;code&gt;CountIterator&lt;/code&gt;s can be wrapped with another &lt;code&gt;CountIterator&lt;/code&gt; to compute the count of all shards. These iterators can be created using &lt;code&gt;NewCallIterator()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="46e5d5c005d767dc686d5fdb5278440482f67660" translate="yes" xml:space="preserve">
          <source>GRANT</source>
          <target state="translated">GRANT</target>
        </trans-unit>
        <trans-unit id="c4a2602ef7acce4511bf7c58c707887f692bd00b" translate="yes" xml:space="preserve">
          <source>GROUP BY tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4251bfdd1ebf1047c63f078818799332bc4d37e2" translate="yes" xml:space="preserve">
          <source>GROUP BY time intervals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d47e55a3aad00e2e85750b2da470ed05efa1bb" translate="yes" xml:space="preserve">
          <source>GROUP BY time intervals and fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3552a70e477a364f8e82a292dad18f46a2ad988b" translate="yes" xml:space="preserve">
          <source>Gamma returns the Gamma function of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c593abd61b932190b3777c83682535868faf5ac4" translate="yes" xml:space="preserve">
          <source>General Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d929ca3421d606d4533cf321c1a11e645ce82e83" translate="yes" xml:space="preserve">
          <source>General Recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903fc18f145b0ad79e5260cd86713403a92f7611" translate="yes" xml:space="preserve">
          <source>General Syntax for Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceeecfe4797cc764142c464951755e66458c1f42" translate="yes" xml:space="preserve">
          <source>General admin and non-admin user management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2110a29ede60a70f559a6e0fa5a769a8788d30cf" translate="yes" xml:space="preserve">
          <source>General hardware guidelines for a cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d00eaf7c79adefe00a02e6bb188fc3830bd995" translate="yes" xml:space="preserve">
          <source>General hardware guidelines for a single node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456ba972cf1ed3981598387dfb0651ba8cbe63d6" translate="yes" xml:space="preserve">
          <source>Generating Test Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd00d7e86ee215fcce2bfa9b9e04f43d8c98bab" translate="yes" xml:space="preserve">
          <source>Generating a Configuration File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a08e44097246e6484bf9ae96c7f83d947ad2a6" translate="yes" xml:space="preserve">
          <source>Generic &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/socket_listener&quot;&gt;Socket Listener&lt;/a&gt; and &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/socket_writer&quot;&gt;Socket Writer&lt;/a&gt; plugins have been implemented for receiving and sending UDP, TCP, unix, &amp;amp; unix-datagram data. These plugins will replace &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/udp_listener&quot;&gt;udp_listener&lt;/a&gt; and &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/tcp_listener&quot;&gt;tcp_listener&lt;/a&gt;, which are still available but will be deprecated eventually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e994697237038254ebfe3014f21e3d1c8172578" translate="yes" xml:space="preserve">
          <source>Generic Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fc89cae6feddabe372ff5090bb8a9cfd45bd8e" translate="yes" xml:space="preserve">
          <source>Get Task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053d1919a431baff2560e35c3143529193b138c2" translate="yes" xml:space="preserve">
          <source>Get Template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4a1f429f17b6705c629a2624cfac509f113fdf" translate="yes" xml:space="preserve">
          <source>Get a Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effffc4ce9b483cf02a3cb8f8a9b4aa009c05aa3" translate="yes" xml:space="preserve">
          <source>Get all tasks, but only the status, executing and error fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec98c513a821634f631668150a10d79547f26bbe" translate="yes" xml:space="preserve">
          <source>Get all tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fe525f6238587ff7be85d7133ad0c072198dbe" translate="yes" xml:space="preserve">
          <source>Get all templates, but only the script and error fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaefa480c9b58d1b465f03d3a20979aadca9c52" translate="yes" xml:space="preserve">
          <source>Get all templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07075a2c2ddca9c6188a166de394cc9b474268aa" translate="yes" xml:space="preserve">
          <source>Get all topics in a WARNING or CRITICAL state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8785381d05d3d00eaabaa1a84e970be5e85bc07" translate="yes" xml:space="preserve">
          <source>Get all topics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a2d7e936e5b955d0e802214fb1814bddac2ba3" translate="yes" xml:space="preserve">
          <source>Get information about a task using defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af042468d7e20c1e0e4a5c8130b74291ad6d7ea" translate="yes" xml:space="preserve">
          <source>Get information about a task using only labels in the DOT content and skip the format step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c1f4996480fcdfd79e62bab1b06b8ded9555c2" translate="yes" xml:space="preserve">
          <source>Get information about a template using defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2e72280efdcbb3910dac10d840f9462336b557" translate="yes" xml:space="preserve">
          <source>Get the handlers for the &lt;code&gt;system&lt;/code&gt; topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a5dc9af219add8c6559dabe18e36e9a02f9f75" translate="yes" xml:space="preserve">
          <source>Get the status of a replay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fe86a48cbf6f53ba4af5e11c743312fd5c261a" translate="yes" xml:space="preserve">
          <source>Getting Started with Telegraf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7ee100b3585cdfcfa89eea60a03c5925538e88" translate="yes" xml:space="preserve">
          <source>Getting data in the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="8968a98cce6994df4ba3211d7b5890e41c63e87c" translate="yes" xml:space="preserve">
          <source>GitHub Issue #2977</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f60a0dbfe55973d6771d66003c7b1a2c9b2b82" translate="yes" xml:space="preserve">
          <source>GitHub Issue #3939</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8581cd54023140b530a5c792de2717aaa695b917" translate="yes" xml:space="preserve">
          <source>GitHub Issue #7530</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53ced31f785a1888b348de05057011fedd3be48" translate="yes" xml:space="preserve">
          <source>Github</source>
          <target state="translated">Github</target>
        </trans-unit>
        <trans-unit id="4232e4b2d82059aeb388578906c1028f9b4dfb71" translate="yes" xml:space="preserve">
          <source>Github provides a &lt;code&gt;Client ID&lt;/code&gt; and &lt;code&gt;Client Secret&lt;/code&gt;. To register these values with Chronograf set the following environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479f3cb7f9705fd6daa0f01599b990f7b3a8e76c" translate="yes" xml:space="preserve">
          <source>Given that time series is mostly an append-only workload, you might think that it&amp;rsquo;s possible to get great performance on a B+Tree. Appends in the keyspace are efficient and you can achieve greater than 100,000 per second. However, we have those appends happening in individual time series. So the inserts end up looking more like random inserts than append only inserts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fa0a5d6f5cbf067a98b0bd198984e13706b234" translate="yes" xml:space="preserve">
          <source>Global Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a085e61cb1094ff218c76eb51003bd1b20d3837" translate="yes" xml:space="preserve">
          <source>Global Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5ccaa0c889e87551dee08ffbba2aa8b561995b" translate="yes" xml:space="preserve">
          <source>Global options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c624a224b876e035b1aa46a907c36a61ed79a743" translate="yes" xml:space="preserve">
          <source>Global tags can be specified in the &lt;code&gt;[global_tags]&lt;/code&gt; section of the config file in key=&amp;ldquo;value&amp;rdquo; format. All metrics being gathered on this host will be tagged with the tags specified here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="47ba3bd2a5c6aeb3e8cad3b83d7b5602dbe77429" translate="yes" xml:space="preserve">
          <source>Glossary of Terms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0b45f2a456e8db55f08d7b65e87593a3e9a140" translate="yes" xml:space="preserve">
          <source>Go</source>
          <target state="translated">Go</target>
        </trans-unit>
        <trans-unit id="a5b1978816d635bc93439e012e9881f5e82e4005" translate="yes" xml:space="preserve">
          <source>Go (golang) version update 1.7.4 -&amp;gt; 1.7.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f324af6fb37136f774261f9effdd106bec58535a" translate="yes" xml:space="preserve">
          <source>Go straight to the documentation on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d460978629714a1afcf384f2085bcc072903510" translate="yes" xml:space="preserve">
          <source>Go straight to the reference documentation on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837f6bf663cba0a66f82ed024741cb5135163e8c" translate="yes" xml:space="preserve">
          <source>Go to the URL https:/account.jianliao.com/signin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe00acebc106e4dba1611cdd1d7dc308a244991" translate="yes" xml:space="preserve">
          <source>Goal</source>
          <target state="translated">Goal</target>
        </trans-unit>
        <trans-unit id="48136dddf5fa2de69f33868667ee8e35c7a68815" translate="yes" xml:space="preserve">
          <source>Going further</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b681c0a24baff8899d7163cc7f805c75e1f44e4" translate="yes" xml:space="preserve">
          <source>Google</source>
          <target state="translated">Google</target>
        </trans-unit>
        <trans-unit id="49f16c97758732511f787affa22b08eb54d0d4ae" translate="yes" xml:space="preserve">
          <source>Grab the recording ID and replay the historical data against the task. Here we specify the &lt;code&gt;-rec-time&lt;/code&gt; flag to instruct Kapacitor to use the actual time stored in the recording when processing the data instead of adjusting to the present time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ba843975a2066ac7e76a1be38ae12ed1b4fb9d" translate="yes" xml:space="preserve">
          <source>Grafana Graphs and Dashboards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b31fb127a0f66c81b7274f30776d017706c0278" translate="yes" xml:space="preserve">
          <source>Grafana is a convenient dashboard tool for visualizing time series data. It was originally built for Graphite, modeled after Kibana, and since been updated to support InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="ba45998b650ff0f6ecbb678bf5be07ec38fc42df" translate="yes" xml:space="preserve">
          <source>Grant &lt;code&gt;ALL&lt;/code&gt; permission:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9346df32887faef93300928ccdb8586b70fd95c" translate="yes" xml:space="preserve">
          <source>Grant &lt;code&gt;READ&lt;/code&gt; permission:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b67c3b896701feaf67e31a731d01ef005db4ace" translate="yes" xml:space="preserve">
          <source>Grant &lt;code&gt;WRITE&lt;/code&gt; permission:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220c98deb1482e5b5361b123b929ee8e4ac1e18d" translate="yes" xml:space="preserve">
          <source>Graphite</source>
          <target state="translated">Graphite</target>
        </trans-unit>
        <trans-unit id="043e602a094c6869990ffe18a7848745772c9d01" translate="yes" xml:space="preserve">
          <source>Graphite Configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eec5b6cf3a4a656318014aaf837cdd967d5de9a" translate="yes" xml:space="preserve">
          <source>Graphite output mangling &amp;lsquo;%&amp;rsquo; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b6ac4424f328732b13bfc0c5c502b894828efb" translate="yes" xml:space="preserve">
          <source>Graphite parser: add ability to specify multiple tag keys, for consistency with influxdb parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c1aaf1bad233f2d370e7eee799f69501b4f41f" translate="yes" xml:space="preserve">
          <source>Graphite:</source>
          <target state="translated">Graphite:</target>
        </trans-unit>
        <trans-unit id="a34507c3015d98e9ace4af19f86aa4fc347daf93" translate="yes" xml:space="preserve">
          <source>Graylog output should set short_message field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea796e6d25165d45dd9bdb0eb9d9461c137de1d4" translate="yes" xml:space="preserve">
          <source>Great! The hard work is done. All that is left is to configure the game server to send score updates to Kapacitor and update the spectator dashboard to pull scores from Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4aebdc12cd874c09fb1fae4151c9f72951eea8f" translate="yes" xml:space="preserve">
          <source>Group &amp;ndash; Concatenation of all group-by tags of the form [key=value,]+. If no groupBy is performed equal to literal 'nil'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e467c1d7b99890abac8b7a6d779289f3dcdeb47" translate="yes" xml:space="preserve">
          <source>Group By Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e236a25a811b167c98358aebe99691c8e1113c8a" translate="yes" xml:space="preserve">
          <source>Group the data by a set of dimensions. Can specify one time dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03620b363516a891d15a35995c114bd902b6f5c7" translate="yes" xml:space="preserve">
          <source>Group the data by a set of tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63718ab0ad2dfd113729e407e5fdf344eb231fd5" translate="yes" xml:space="preserve">
          <source>GroupBy</source>
          <target state="translated">GroupBy</target>
        </trans-unit>
        <trans-unit id="110e5bfb1227bd8bee8a0b4e686fc66238b54049" translate="yes" xml:space="preserve">
          <source>GroupByMeasurement</source>
          <target state="translated">GroupByMeasurement</target>
        </trans-unit>
        <trans-unit id="07afdd3e8bcfa231464a42cade6cd6dc69770093" translate="yes" xml:space="preserve">
          <source>GroupByNode</source>
          <target state="translated">GroupByNode</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="3a5f210ee953b91bc1b95d1a5760411f300b65fe" translate="yes" xml:space="preserve">
          <source>HAProxy</source>
          <target state="translated">HAProxy</target>
        </trans-unit>
        <trans-unit id="27f9f9e48b58fb2cd817882f334c7d9e1722e78c" translate="yes" xml:space="preserve">
          <source>HAProxy plugin socket glob matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e36503a1a4bf8d29daaae10fc2bb34eff102b0f" translate="yes" xml:space="preserve">
          <source>HAProxy session limit metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b550750a49ca41557c1b0b4fb62132a424f836aa" translate="yes" xml:space="preserve">
          <source>HISTOGRAM()</source>
          <target state="translated">HISTOGRAM()</target>
        </trans-unit>
        <trans-unit id="b92590d945b248d29e8708a1ffc04d5218f09751" translate="yes" xml:space="preserve">
          <source>HOLT_WINTERS()</source>
          <target state="translated">HOLT_WINTERS()</target>
        </trans-unit>
        <trans-unit id="4c76df737782a8dc75169ed775fd7d6d4018f0bb" translate="yes" xml:space="preserve">
          <source>HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcc28c2fa145621e5d7a84c1516d5522aea8a52" translate="yes" xml:space="preserve">
          <source>HTTP API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ef52ffe26dcf0864e718f97c2fa60754e370e2" translate="yes" xml:space="preserve">
          <source>HTTP API Writes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645660b228d4d5a3506501cabde0abed1388c6ab" translate="yes" xml:space="preserve">
          <source>HTTP Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d2adefb86f4529090cf14b56ceb6214183a09" translate="yes" xml:space="preserve">
          <source>HTTP Output Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9c425d5803c44ed446afa4a2bb9d114dc0375a" translate="yes" xml:space="preserve">
          <source>HTTP POST JSON alert data to a specified URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3bf0dd3b2e37b7e01333d806d974084b93d37e" translate="yes" xml:space="preserve">
          <source>HTTP Post Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e435765a17b814c44244f5747a4e2aa919aa48" translate="yes" xml:space="preserve">
          <source>HTTP Response Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31b86dfebd506e755fd0821e0114d6cf7b14383" translate="yes" xml:space="preserve">
          <source>HTTP Status Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0a0c934fe57ed4ad87f705ed39acf679888e28" translate="yes" xml:space="preserve">
          <source>HTTP response summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7957a2beb4e93f192a5fd9d4eb0c9cc5b115ae42" translate="yes" xml:space="preserve">
          <source>HTTP service listener input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f229ba9fad0819dad34757f276e176e1f9815df" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95b810216e231ea2a33a7528e8449134eec247d" translate="yes" xml:space="preserve">
          <source>HTTP/Post</source>
          <target state="translated">HTTP/Post</target>
        </trans-unit>
        <trans-unit id="9cd687a77917b76e825d4ea097b9186a53580a9f" translate="yes" xml:space="preserve">
          <source>HTTPOutNode</source>
          <target state="translated">HTTPOutNode</target>
        </trans-unit>
        <trans-unit id="e8232bf42f50ff0fbf0a2c596f813e9ff5b9a4d6" translate="yes" xml:space="preserve">
          <source>HTTPPostNode</source>
          <target state="translated">HTTPPostNode</target>
        </trans-unit>
        <trans-unit id="ccef229e59f951a74088bb61ce59c876f222a525" translate="yes" xml:space="preserve">
          <source>HTTPS Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23d6df04f74031cb99436804101e5a10396e196" translate="yes" xml:space="preserve">
          <source>HTTPS is disabled by default. Enable HTTPS in InfluxDB&amp;rsquo;s the &lt;code&gt;[http]&lt;/code&gt; section of the configuration file (&lt;code&gt;/etc/influxdb/influxdb.conf&lt;/code&gt;) by setting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edd44159c8264eca5751496777d09d4a324b16b" translate="yes" xml:space="preserve">
          <source>Handle null startTime for stopped pods for the Kubernetes input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="68dacb6b93158816348d2133330e62f89e7644c4" translate="yes" xml:space="preserve">
          <source>Handlers are created within a topic. You can get a list of handlers configured for a topic by making a GET request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/&amp;lt;topic id&amp;gt;/handlers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1ecafa05295c8b08ce2f8ab93661149aee8366" translate="yes" xml:space="preserve">
          <source>Hardcode auto generated RP names to autogen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76ab65957a69ff57e8c72352794d437fd34c788" translate="yes" xml:space="preserve">
          <source>Hardware</source>
          <target state="translated">Hardware</target>
        </trans-unit>
        <trans-unit id="db53ad6e9fcbe80e04b28a86b8464ddbd41926b2" translate="yes" xml:space="preserve">
          <source>Hardware Sizing Guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c271c8f62efa33d3ac8edbe0fea6e52fc84150" translate="yes" xml:space="preserve">
          <source>Haskell</source>
          <target state="translated">Haskell</target>
        </trans-unit>
        <trans-unit id="312bec4b2881c1c0fcb768b336a6ee787415f93d" translate="yes" xml:space="preserve">
          <source>Have few if any functions and no regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb40c99ecf9024c168eb2845bebb60443586fd1" translate="yes" xml:space="preserve">
          <source>Have multiple aggregation or transformation functions or multiple regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86686b427ceb847adf9df582f35430ab9911f3df" translate="yes" xml:space="preserve">
          <source>Have multiple functions and one or two regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30640b521b843d0b49fcf1a2bdccb75525d33b25" translate="yes" xml:space="preserve">
          <source>Hddtemp always put the value in the field temperature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="translated">Header</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="0832f52ac863b8490ad44352e3e3af7a01ccde7b" translate="yes" xml:space="preserve">
          <source>Help Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69316db350eb3e1c1e7989bd1d69f6dbdd08089" translate="yes" xml:space="preserve">
          <source>Helper function for creating an alert on low throughput, a.k.a. deadman's switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a87cd165146434051856b65ef4fd74ad1017bd9" translate="yes" xml:space="preserve">
          <source>Here are the complete file contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd043f7305ac6d4b31bc34c487c084b84aa55d1c" translate="yes" xml:space="preserve">
          <source>Here is a CQ that computes the mean of the &lt;code&gt;cpu.usage_idle&lt;/code&gt; every 5 minutes and stores it in the new measurement &lt;code&gt;mean_cpu_idle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68861242568a10e5b8882370c783b2504e7a34b" translate="yes" xml:space="preserve">
          <source>Here is a basic configuration example of how to set up Telegraf&amp;rsquo;s statsd input plugin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cf6ee2a73d7805b8c9cbb36a2d0f14993514c1" translate="yes" xml:space="preserve">
          <source>Here is a quick example of how to configure Kapacitor to scrape discovered targets. First configure a discoverer, here we use the file-discovery discoverer. Next configure a scraper to use that discoverer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53782b12de487964a6f6ac14d0d36f2238b36f7" translate="yes" xml:space="preserve">
          <source>Here is a simple &lt;code&gt;accepter&lt;/code&gt; that creates a new &lt;code&gt;agent&lt;/code&gt; and &lt;code&gt;mirrorHandler&lt;/code&gt; for each new connection. Add this to the &lt;code&gt;main.go&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8482be6dfb74ee6f2cacdd3157cb0d43340fd5a5" translate="yes" xml:space="preserve">
          <source>Here is a simple bash script to generate random score data so we can test it without messing with the real game servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd7f5335ff30b7061a812422c2f0d7241178202" translate="yes" xml:space="preserve">
          <source>Here is an example TICKscript, which will need to be saved to a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45b5f350c77c6e073295bd61254a50a47e1fe04" translate="yes" xml:space="preserve">
          <source>Here is the Python handler interface for the agent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce083f2d1bb7fa1e01e16699dcc87790ed26e3a3" translate="yes" xml:space="preserve">
          <source>Here is the complete TICKscript for the batch task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c1330a6f89ce47166f1a80b4b454251a5196d6" translate="yes" xml:space="preserve">
          <source>Here is the complete task TICKscript if you don&amp;rsquo;t want to copy paste as much :)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17c00b51ea489e996c9121ec0d4bb4e37867605" translate="yes" xml:space="preserve">
          <source>Here, we choose the Step-Plot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5abf5521d3b6351eafbdd2e82e328dcd85bf9d" translate="yes" xml:space="preserve">
          <source>Here, we select the &lt;code&gt;Threshold&lt;/code&gt; alert type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19085f4d12761e7e0e844aacd91e739b5063fd2" translate="yes" xml:space="preserve">
          <source>Here, we use the builder to generate a query that shows the average idle CPU usage grouped by host (in this case, there are three hosts). By default, Chronograf applies the &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.2/query_language/functions/#mean&quot;&gt;&lt;code&gt;MEAN()&lt;/code&gt; function&lt;/a&gt; to the data, groups averages into auto-generated time intervals (&lt;code&gt;:interval:&lt;/code&gt;), and shows data for the past one hour (&lt;code&gt;:dashboardTime:&lt;/code&gt;). Those defaults are configurable via the builder or by manually editing the query. In addition, the time range (&lt;code&gt;:dashboardTime:&lt;/code&gt;) is &lt;a href=&quot;#step-6-configure-your-dashboard&quot;&gt;configurable on the dashboard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451780c156ac08adcb7c40da7237c6b90e6166d4" translate="yes" xml:space="preserve">
          <source>Heroku</source>
          <target state="translated">Heroku</target>
        </trans-unit>
        <trans-unit id="40d3f6ea52f3dd27db4f1fd269e81f0799116b6b" translate="yes" xml:space="preserve">
          <source>Hide username/password from elasticsearch error log messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcadc3bbf92f4882971ddc3bc8286e63dfa62c0" translate="yes" xml:space="preserve">
          <source>High Availability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a882bc47e9419510667ec22a43ad352a10a1b4" translate="yes" xml:space="preserve">
          <source>High load recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d694f4d62913ec40fb82e48ad36eebdac2f44a" translate="yes" xml:space="preserve">
          <source>High read throughput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0ff102ed7c75ebc140954d54234a7d1e646561" translate="yes" xml:space="preserve">
          <source>High write throughput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829fbcec3f2f8cc8b4f7605491ce51aae21bf1db" translate="yes" xml:space="preserve">
          <source>HipChat</source>
          <target state="translated">HipChat</target>
        </trans-unit>
        <trans-unit id="ad9588250db7a5b00d8829cc75480d16e23dff2f" translate="yes" xml:space="preserve">
          <source>HipChat &amp;ndash; Post alert message to HipChat room.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c17c69f13becd38ccd0b3e59628e8bfd8cd6a8" translate="yes" xml:space="preserve">
          <source>HipChat API Access Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d3eb7a6a4b5b327d93f526c7b6084a2418001d" translate="yes" xml:space="preserve">
          <source>HipChat Room</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb310e0c0f2c292cd889180b02da9c1b05fd4289" translate="yes" xml:space="preserve">
          <source>HipChat Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94b912d28a319db424e5dc9aed5913575e30bf9" translate="yes" xml:space="preserve">
          <source>HipChat Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cb9f5f8fd1bee4d41063d11b0bf19e1b025dd4" translate="yes" xml:space="preserve">
          <source>HipChat authentication token. If empty uses the token from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fab2813b652de2864b6f6515dd3ce413d74599" translate="yes" xml:space="preserve">
          <source>HipChat room in which to post messages. If empty uses the channel from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9b431d0f07f8a6217cc01601807bf284345baa" translate="yes" xml:space="preserve">
          <source>Hipchat</source>
          <target state="translated">Hipchat</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="7ef16a4a410344627a6a9aae66cb237b331c0f64" translate="yes" xml:space="preserve">
          <source>History file should redact passwords before saving to history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41eb553dfcec314438d4d13d7862671e75c289f" translate="yes" xml:space="preserve">
          <source>HoltWinters</source>
          <target state="translated">HoltWinters</target>
        </trans-unit>
        <trans-unit id="6f9f29b5fde5caab269dfd222f59ce1945dbe45a" translate="yes" xml:space="preserve">
          <source>HoltWintersWithFit</source>
          <target state="translated">HoltWintersWithFit</target>
        </trans-unit>
        <trans-unit id="9c8b3f3f5ecb467af128302139040b4f6c8db655" translate="yes" xml:space="preserve">
          <source>Hosting on AWS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91172a78a6b547511a82fb283a719367df6cb4de" translate="yes" xml:space="preserve">
          <source>How can I identify my version of InfluxDB?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34907ff133c70daa7af6b9c84791e41da275820d" translate="yes" xml:space="preserve">
          <source>How can I query for series cardinality?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a466ecc3f61720c55907af5c71dd08510a1f8ca" translate="yes" xml:space="preserve">
          <source>How can I remove series from the index?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ed0bcc27a58cf083a986b69aa96a032f0d46d9" translate="yes" xml:space="preserve">
          <source>How can I tell what type of data are stored in a field?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e84a4dd663561b7ded28f93167d0800b665dd6" translate="yes" xml:space="preserve">
          <source>How can a non-admin user &lt;code&gt;USE&lt;/code&gt; a database in InfluxDB&amp;rsquo;s CLI?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a696820f2b381a3e25d1ddb3f78e1fe543b6f057" translate="yes" xml:space="preserve">
          <source>How do I &lt;code&gt;SELECT&lt;/code&gt; data with a tag that has no value?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42509c82cb53aad0fae5e068c046ce6b82996286" translate="yes" xml:space="preserve">
          <source>How do I SELECT data with a tag that has no value?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c3fa05ada86081d2696e876f387900b4badc7d" translate="yes" xml:space="preserve">
          <source>How do I connect Chronograf to an InfluxEnterprise cluster?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898b91034f82bcd6fa2e35ef7cb4323f72970bdb" translate="yes" xml:space="preserve">
          <source>How do I include a single quote in a password?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba91c487304b427ac32fd2616a42169904da5d4d" translate="yes" xml:space="preserve">
          <source>How do I make InfluxDB&amp;rsquo;s CLI return human readable timestamps?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bb0d409f5e12e55a0d11b4ca404da06fc0a617" translate="yes" xml:space="preserve">
          <source>How do I perform mathematical operations within a function?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5bea6e511340125c4c88b1d0fbcadc4f58291a" translate="yes" xml:space="preserve">
          <source>How do I query data across measurements?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d2c55fbff4cc98468882744d6e6c63c097f1ef" translate="yes" xml:space="preserve">
          <source>How do I query data with an identical tag key and field key?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c64c30e2967cb8a45e3dab4f2dfc279ca7375b" translate="yes" xml:space="preserve">
          <source>How do I write integer field values?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b79e183f7fb09c8d43105a1c66650c8901e4867" translate="yes" xml:space="preserve">
          <source>How do I write to a non-&lt;code&gt;DEFAULT&lt;/code&gt; retention policy with InfluxDB&amp;rsquo;s CLI?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4906c5e5ad1a78e489e206ed80b5e2bf34d0aea9" translate="yes" xml:space="preserve">
          <source>How do I write to a non-DEFAULT retention policy with InfluxDB&amp;rsquo;s CLI?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa51bfdec6009b8b5daeec725e673b66b09f1a4a" translate="yes" xml:space="preserve">
          <source>How does InfluxDB handle duplicate points?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca303d0c13f3b918c8c2c90d13f2ec14cfb1c3c1" translate="yes" xml:space="preserve">
          <source>How does InfluxDB handle field type discrepancies across shards?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea5cb21caa5e596d04b89e943deae5fd26493a0" translate="yes" xml:space="preserve">
          <source>How far back in time to query from the current time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed44148e2e3decb0489db0ee23a2a2688fff2a74" translate="yes" xml:space="preserve">
          <source>How much storage do I need?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedead56418da09f8eb80cc04a5d730a40123cec" translate="yes" xml:space="preserve">
          <source>How often the current window is emitted into the pipeline. If equal to zero, then every new point will emit the current window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082ec11fc63a65b054ba8b774cbf5ebeb0ea7ef6" translate="yes" xml:space="preserve">
          <source>How often to aggregate events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dfee539a5c198191c7243effd5b1ea823ce717" translate="yes" xml:space="preserve">
          <source>How often to query InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bc851487160eee19352871f88e5e64eaf59751" translate="yes" xml:space="preserve">
          <source>How should I configure my hardware?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5fdf80253695baf533af7c9f07ddda63865f7b" translate="yes" xml:space="preserve">
          <source>How the data are organized in InfluxDB. The fundamentals of the InfluxDB schema are databases, retention policies, series, measurements, tag keys, tag values, and field keys. See &lt;a href=&quot;../schema_and_data_layout/index&quot;&gt;Schema Design&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae8022547bd895c9986893f9a7079cca93ea86a" translate="yes" xml:space="preserve">
          <source>How to contribute a new output to Kapacitor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a36542ea14ca912071ccf6e1888339a722e270" translate="yes" xml:space="preserve">
          <source>However nothing is going to happen until we enable the task. Before we enable the task, we should test it first so we do not spam ourselves with alerts. Record the current data stream for a bit so we can use it to test our task with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8f2a59839cf7f061f3a3f16d0f02783402e178" translate="yes" xml:space="preserve">
          <source>However, if your bitfield is 16 bits wide, then the integer 1 represents the bits &lt;code&gt;0000 0000 0000 0001&lt;/code&gt;. The bitwise-not of this should return the bits &lt;code&gt;1111 1111 1111 1110&lt;/code&gt;, i.e. the integer 65534.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c365af8975c6c654705a2125e30e629c8fd7f41" translate="yes" xml:space="preserve">
          <source>However, our experience building the first WAL implementation in front of Bolt gave us the confidence we needed that the write problem could be solved. The performance of the WAL itself was fantastic, the index simply could not keep up. At this point we started thinking again about how we could create something similar to an LSM Tree that could keep up with our write load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eb46d85b9d9c0745b2501aafc18a5f5e52b09f" translate="yes" xml:space="preserve">
          <source>However, there were other considerations that went into this decision outside of the pure write performance. At this point our most important goal was to get to something stable that could be run in production and backed up. BoltDB also had the advantage of being written in pure Go, which simplified our build chain immensely and made it easy to build for other OSes and platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504ea3c7672b4f764b056c47a86f0ecb43592c72" translate="yes" xml:space="preserve">
          <source>HttpOut</source>
          <target state="translated">HttpOut</target>
        </trans-unit>
        <trans-unit id="d934c9d7b227afd38dd1b8e83fc09bfda50c2cfc" translate="yes" xml:space="preserve">
          <source>HttpPost</source>
          <target state="translated">HttpPost</target>
        </trans-unit>
        <trans-unit id="3b927f74be23a219faa13b8ad79dc4628349fdf5" translate="yes" xml:space="preserve">
          <source>Human String functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf51f9aa7b1bea7fca13ea79047b7604252af0cc" translate="yes" xml:space="preserve">
          <source>HumanBytes</source>
          <target state="translated">HumanBytes</target>
        </trans-unit>
        <trans-unit id="5c4cbffa6231f3b3c2514644d0fee825e224c80d" translate="yes" xml:space="preserve">
          <source>Hypot returns Sqrt(p*p + q*q), taking care to avoid unnecessary overflow and underflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4fda5df1ea1a44f31fb205a19c6064c79599f5" translate="yes" xml:space="preserve">
          <source>ID &amp;ndash; The ID of the alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac0aae8cec6c67d6441c90089ff64156a3a372d" translate="yes" xml:space="preserve">
          <source>ID &amp;ndash; the ID of the alert, user defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d663f45b17016c4a331f08efea3627617d5e6e4b" translate="yes" xml:space="preserve">
          <source>ID - The unique ID of the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48345507fb3b631716f84089258c6a826244816" translate="yes" xml:space="preserve">
          <source>ID of a task, records the results of the queries defined in the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ea85605b81bef428fba97d87bf68db70bb8557" translate="yes" xml:space="preserve">
          <source>ID of a task, replays the results of the queries against the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113b16ab2a5f0a52c60f0a14aac44d577f66c9fd" translate="yes" xml:space="preserve">
          <source>ID of a task, replays the results of the queries defined in the task against the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc4799f1b1a84fc71dd268e3db2fd14b437910b" translate="yes" xml:space="preserve">
          <source>ID of a task, used to only record data for the DBRPs of the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777a9f46dd913b28c08e68f90ea404317713df2f" translate="yes" xml:space="preserve">
          <source>ID of recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb1440e5b65fb868bd199136abb565f02e8f743" translate="yes" xml:space="preserve">
          <source>ID of task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d998aabdf9024d2e746b7a873fcae492c8a30d77" translate="yes" xml:space="preserve">
          <source>ID: kapacitor/authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10907298517f7ff70a96e99babb8f8a00b592821" translate="yes" xml:space="preserve">
          <source>ID: kapacitor/authentication/auth001.example.com</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91a1275ea80276ba6d50d1c067f72ea4d51a17c" translate="yes" xml:space="preserve">
          <source>ID: kapacitor/cpu/cpu=cpu0,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99667b90d567662155aab00455bc8316096a2c82" translate="yes" xml:space="preserve">
          <source>IDs</source>
          <target state="translated">IDs</target>
        </trans-unit>
        <trans-unit id="81660c75b650330b9b5e71a36347fd81fed06dcf" translate="yes" xml:space="preserve">
          <source>IEEE-754 64-bit floating-point numbers. This is the default numerical type. Examples: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;1.e+78&lt;/code&gt;, &lt;code&gt;1.E+78&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8571cc2c4258545210a5b00473280039ad4b84d4" translate="yes" xml:space="preserve">
          <source>IIS</source>
          <target state="translated">IIS</target>
        </trans-unit>
        <trans-unit id="46ccf877d067144fca025ff56e01e754d3962b54" translate="yes" xml:space="preserve">
          <source>INTEGRAL()</source>
          <target state="translated">INTEGRAL()</target>
        </trans-unit>
        <trans-unit id="a7929d9dceddf221041008176f6db537b5dd5eeb" translate="yes" xml:space="preserve">
          <source>IOPS: 1000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43296ad4497a8a6727cdfb8bfdfc813794d9ffda" translate="yes" xml:space="preserve">
          <source>IOPS: 1000+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe67fa5d968989ba762261e1f2225c9a51123e8c" translate="yes" xml:space="preserve">
          <source>IOPS: 50</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5294cfdbe1c5c412d91184acbb2fd06f35feea71" translate="yes" xml:space="preserve">
          <source>IOPS: 500</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3e05de1874145185360f9480d4813367d24158" translate="yes" xml:space="preserve">
          <source>IOPS: 500-1000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea2e6bb23cfa23b2bcdd16b18e76f470ff4f609" translate="yes" xml:space="preserve">
          <source>IconEmoji is an emoji name surrounded in &amp;lsquo;:&amp;rsquo; characters. The emoji image will replace the normal user icon for the slack bot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a454c126b25c8d07aa1e8368ef18bfda30061f4a" translate="yes" xml:space="preserve">
          <source>IconEmoji is an emoji name surrounded in ':' characters. The emoji image will replace the normal user icon for the slack bot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474ae52625b87d7628ae7b20a499329a99e07119" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>
        </trans-unit>
        <trans-unit id="0f334681a62721c3c4cf447086a65156c368db1c" translate="yes" xml:space="preserve">
          <source>IdField</source>
          <target state="translated">IdField</target>
        </trans-unit>
        <trans-unit id="5b3fc1b88d516e3b90e203aadb5ce1b4712c5dc0" translate="yes" xml:space="preserve">
          <source>IdTag</source>
          <target state="translated">IdTag</target>
        </trans-unit>
        <trans-unit id="5ef6050e24ee4211dcc29ec98c1bf91db5d9062f" translate="yes" xml:space="preserve">
          <source>Identifier Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649d2864df18704de32e689e69e63f2483e8b76e" translate="yes" xml:space="preserve">
          <source>Identifiers</source>
          <target state="translated">Identifiers</target>
        </trans-unit>
        <trans-unit id="c991a1d452b702100210b9aff0a3a5922fa4fcfb" translate="yes" xml:space="preserve">
          <source>Identifiers are tokens which refer to &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; names, &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; names, &lt;a href=&quot;../../concepts/glossary/index#user&quot;&gt;user&lt;/a&gt; names, &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; names, &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;, and &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337e2ab1b58b92c0678006d891eb1542313766ee" translate="yes" xml:space="preserve">
          <source>Identify the numerical chat id in the browser. In the example below, the chat id is &lt;code&gt;123456789&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cd1654bfa49bfe1f37fb91a6e9bec6c9a3e7b5" translate="yes" xml:space="preserve">
          <source>Identify the seasonal pattern in the data using the information from the query in step 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="ea52f85b97269a0cea39ada90e839859230caf75" translate="yes" xml:space="preserve">
          <source>If InfluxDB is up and running, you should see an object that contains the &lt;code&gt;_internal&lt;/code&gt; database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4a5573600b6f312ad524cd389389d64b324203" translate="yes" xml:space="preserve">
          <source>If InfluxDB was installed using a pre-built package, and then launched as a service, &lt;code&gt;stderr&lt;/code&gt; is redirected to &lt;code&gt;/var/log/influxdb/influxd.log&lt;/code&gt;, and all log data will be written to that file. You can override this location by setting the variable &lt;code&gt;STDERR&lt;/code&gt; in the file &lt;code&gt;/etc/default/influxdb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935b1cd76a0e23cef2cff3ba22399b8c2a2b00e1" translate="yes" xml:space="preserve">
          <source>If Kapacitor is up and running, you should see an empty list of tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dc8d7fc7b4a110cbaf6dc3886e3f57c2058c30" translate="yes" xml:space="preserve">
          <source>If Telegraf is setup properly you should see a lot of JSON data; if the output is empty than something has gone wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf955f05d151b485a1a409f69579fc135c3f2bc6" translate="yes" xml:space="preserve">
          <source>If a cell&amp;rsquo;s query includes a &lt;a href=&quot;../../../../influxdb/v1.3/query_language/data_exploration/index#group-by-tags&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; tag&lt;/a&gt; clause, Chronograf sorts the different &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; lexicographically and shows the most recent &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt; associated with the first series. For example, if a query groups by the &lt;code&gt;name&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; and &lt;code&gt;name&lt;/code&gt; has two &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; (&lt;code&gt;chronelda&lt;/code&gt; and &lt;code&gt;chronz&lt;/code&gt;), Chronograf shows the most recent field value associated with the &lt;code&gt;chronelda&lt;/code&gt; series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1343f584e07b8cf30a93a2214c7582e57eb271f" translate="yes" xml:space="preserve">
          <source>If a cell&amp;rsquo;s query includes more than one &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; in the &lt;a href=&quot;../../../../influxdb/v1.3/query_language/data_exploration/index#select-clause&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt;, Chronograf returns the most recent field value associated with the first field key in the &lt;code&gt;SELECT&lt;/code&gt; clause. For example, if a query&amp;rsquo;s &lt;code&gt;SELECT&lt;/code&gt; clause is &lt;code&gt;SELECT &quot;chronogiraffe&quot;,&quot;chronelda&quot;&lt;/code&gt;, Chronograf shows the most recent field value associated with the &lt;code&gt;chronogiraffe&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a87eddcfd43ba2f19abbe91de8ba265d6a825f" translate="yes" xml:space="preserve">
          <source>If a configuration option specifies the &lt;code&gt;u&lt;/code&gt; or &lt;code&gt;&amp;micro;&lt;/code&gt; syntax, InfluxDB fails to start and reports the following error in the logs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c6e00901dd26e5c7b18fac18173d2b6981e660" translate="yes" xml:space="preserve">
          <source>If a node does not have any children, then its emitted count remains zero. Using a &lt;a href=&quot;index&quot;&gt;NoOpNode&lt;/a&gt; is a work around so that statistics are accurately reported for nodes with no real children. A &lt;a href=&quot;index&quot;&gt;NoOpNode&lt;/a&gt; is automatically appended to any node that is a source for a &lt;a href=&quot;../stats_node/index&quot;&gt;StatsNode&lt;/a&gt; and does not have any children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f60da32a587686be3fce8b31a50362ce97654f" translate="yes" xml:space="preserve">
          <source>If a point causes the number of series in a database to exceed &lt;code&gt;max-series-per-database&lt;/code&gt; InfluxDB will not write the point, and it returns a &lt;code&gt;500&lt;/code&gt; with the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f7867228de67f5805cf07179d6b2ecf50abb4b" translate="yes" xml:space="preserve">
          <source>If all ZigZag encoded values are less than (1 &amp;lt;&amp;lt; 60) - 1, they are compressed using simple8b encoding. If any values are larger than the maximum then all values are stored uncompressed in the block. If all values are identical, run-length encoding is used. This works very well for values that are frequently constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de722ccfaea4896257def4fb8ac8b8225e9ceff6" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;INTO&lt;/code&gt; query includes a &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; in the &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt;, the query converts &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt; in the current measurement to &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt; in the destination measurement. This can cause InfluxDB to overwrite &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; that were previously differentiated by a &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag value&lt;/a&gt;. Note that this behavior does not apply to queries that use the &lt;a href=&quot;../functions/index#top&quot;&gt;&lt;code&gt;TOP()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../functions/index#bottom&quot;&gt;&lt;code&gt;BOTTOM()&lt;/code&gt;&lt;/a&gt; functions. The &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-are-my-into-queries-missing-data&quot;&gt;Frequently Asked Questions&lt;/a&gt; document describes that behavior in detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e418eda09d3e6a4b5080b50c2624bdc57e0053e" translate="yes" xml:space="preserve">
          <source>If called the derivative will skip negative results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70762df4766e8f6fe96294659ab8fa7f9220abbd" translate="yes" xml:space="preserve">
          <source>If called the existing fields will be preserved in addition to the new fields being set. If not called then only new fields are preserved. (Tags are always preserved regardless how &lt;code&gt;keep&lt;/code&gt; is used.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e5b7e4ebe3568b15c6ee45df1b3fbc600c99a9" translate="yes" xml:space="preserve">
          <source>If empty then all data points are considered to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec76c71c76ba04dfb0c792cb38f46d628ef5cb16" translate="yes" xml:space="preserve">
          <source>If everything was started correctly, then it&amp;rsquo;s time to write our TICKscript to use the &lt;code&gt;tTest&lt;/code&gt; UDF method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680c7a3b074f9e74e11fb35bd863a5fad41a99e2" translate="yes" xml:space="preserve">
          <source>If flattening on multiple dimensions the order is preserved:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf12aad4e4dc967cc339f82f8091a7e07adf1c5" translate="yes" xml:space="preserve">
          <source>If set will include the measurement name in the group ID. Along with any other group by dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3405ef94df689e02110669634e087cdf7d669457" translate="yes" xml:space="preserve">
          <source>If somehow you have created a configuration that causes Kapacitor to crash or otherwise not function, you can disable applying overrides during startup with the &lt;code&gt;skip-config-overrides&lt;/code&gt; top level configuration option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849d0f38da9b07162e5c3777f328639c5c87bcff" translate="yes" xml:space="preserve">
          <source>If the &quot;value&quot; is greater than 10 for a total of 60s, then only two events will be sent. First, when the value crosses the threshold, and second, when it falls back into an OK state. Without stateChangesOnly, the alert would have triggered 7 times: 6 times for each 10s period where the condition was met and once more for the recovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27aa1d34edd299464aefe2a065a66181aa0cda6e" translate="yes" xml:space="preserve">
          <source>If the 'hipchat' section in the configuration has the option: global = true then all alerts are sent to HipChat without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52b586b48efcc88cd02137b66f015be0e42956d" translate="yes" xml:space="preserve">
          <source>If the 'opsgenie' section in the configuration has the option: global = true then all alerts are sent to OpsGenie without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afae2ae1fae3c7a3644aeab4223b39de3714bffa" translate="yes" xml:space="preserve">
          <source>If the 'pagerduty' section in the configuration has the option: global = true then all alerts are sent to PagerDuty without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379665becbb3e471ac682ba7ec16f8c456827dac" translate="yes" xml:space="preserve">
          <source>If the 'slack' section in the configuration has the option: global = true then all alerts are sent to Slack without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ca2cc8033c5f7d7741532b8125a4b10de8a26e" translate="yes" xml:space="preserve">
          <source>If the 'smtp' section in the configuration has the option: global = true then all alerts are sent via email without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33440ee69c516bb0889cab67aabe8612ac377c8e" translate="yes" xml:space="preserve">
          <source>If the 'telegram' section in the configuration has the option: global = true then all alerts are sent to Telegram without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175c4fd147031f5cc1b64d1ee034bd3aa7b86f31" translate="yes" xml:space="preserve">
          <source>If the 'victorops' section in the configuration has the option: global = true then all alerts are sent to VictorOps without the need to explicitly state it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbecbb6206afa183de7c2a4a707bd51a149a027f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;EVERY&lt;/code&gt; interval is greater than the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval, the CQ executes at the same interval as the &lt;code&gt;EVERY&lt;/code&gt; interval and runs a single query that covers the time range between &lt;code&gt;now()&lt;/code&gt; and &lt;code&gt;now()&lt;/code&gt; minus the &lt;code&gt;EVERY&lt;/code&gt; interval (not between &lt;code&gt;now()&lt;/code&gt; and &lt;code&gt;now()&lt;/code&gt; minus the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc32a9fa9acd08e4455a9e564e47507b0cb3e44" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;FOR&lt;/code&gt; interval is less than the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval or, if specified, the &lt;code&gt;EVERY&lt;/code&gt; interval, InfluxDB returns the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5761704519f567f4d778fc77c666512ab303a7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;align&lt;/code&gt; property is not used to modify the &lt;code&gt;window&lt;/code&gt; node, then the window alignment is assumed to start at the time of the first data point it receives. If &lt;code&gt;align&lt;/code&gt; property is set, the window time edges will be truncated to the &lt;code&gt;every&lt;/code&gt; property (For example, if a data point's time is 12:06 and the &lt;code&gt;every&lt;/code&gt; property is &lt;code&gt;5m&lt;/code&gt; then the data point's window will range from 12:05 to 12:10).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62de08a2f1806547234b39f319becd05c709d3e9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config-override&lt;/code&gt; service is disabled then the relevant API endpoints will return 403 forbidden errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dc4002882e688e98c54c3b5bde0c0f37ca818b" translate="yes" xml:space="preserve">
          <source>If the JSON data is an array, then each element of the array is parsed with the configured settings. Each resulting metric will be output with the same timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f537b20a7c37578b2ca583e6097ab08765f68e" translate="yes" xml:space="preserve">
          <source>If the RP&amp;rsquo;s new &lt;code&gt;DURATION&lt;/code&gt; is less than the old &lt;code&gt;SHARD DURATION&lt;/code&gt; and InfluxDB is currently writing data to one of the old, longer shard groups, the system is forced to keep all of the data in that shard group. This occurs even if some of the data in that shard group are outside of the new &lt;code&gt;DURATION&lt;/code&gt;. InfluxDB will drop that shard group once all of its data are outside the new &lt;code&gt;DURATION&lt;/code&gt;. The system will then begin writing data to shard groups that have the new, shorter &lt;code&gt;SHARD DURATION&lt;/code&gt; preventing any further unexpected data retention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ba7fcdd09a4102b287b8179718309538464f8b" translate="yes" xml:space="preserve">
          <source>If the To list is empty, the To addresses from the configuration are used. The email subject is the &lt;a href=&quot;index#message&quot;&gt;AlertNode.Message&lt;/a&gt; property. The email body is the &lt;a href=&quot;index#details&quot;&gt;AlertNode.Details&lt;/a&gt; property. The emails are sent as HTML emails and so the body can contain html markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb914977ada223523474836e7b9cadc3a37d53e" translate="yes" xml:space="preserve">
          <source>If the breaking change is forward compatible (i.e. adds a new required var), first update each task with the needed vars, then update the template once all tasks are ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039533329f8adb7a6a870856241c685769173945" translate="yes" xml:space="preserve">
          <source>If the data set is too large to keep in one recording you can define a specific range of time to record and then replay each range individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c3bcaf102433bd4581a44d531ae4a7e3bb85bc" translate="yes" xml:space="preserve">
          <source>If the database already exists nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c72c90c32fbd91158ca2dc8229594cb1c9474e2" translate="yes" xml:space="preserve">
          <source>If the desired number of replicas has changed, Kapacitor makes the appropriate API call to Kubernetes to update the replicas spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09493104488968fc5f36104c18f8a6b2d55dce05" translate="yes" xml:space="preserve">
          <source>If the query includes a &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt; the &lt;code&gt;GROUP BY&lt;/code&gt; clause must appear after the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aba030c9a4076a85a0b8ffd39d3b1fdd91903ec" translate="yes" xml:space="preserve">
          <source>If the task is stopped for any reason the socket connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3024264952406d3619fc746da5adeefedfde914d" translate="yes" xml:space="preserve">
          <source>If the timestamps on the float and string are not stored in the same shard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17ce15b562effdbd6e371104d54799e8e2a9803" translate="yes" xml:space="preserve">
          <source>If the timestamps on the float and string are stored in the same shard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ac9cbdb6f74a672632b3ab6b349600992f68ea" translate="yes" xml:space="preserve">
          <source>If the user is not a member, then the user will not be allowed access. To support multiple organizations use a comma-delimited list like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6537c2d4cbccae1ae37333f0c01de0cc72a994" translate="yes" xml:space="preserve">
          <source>If there was a problem you will see an error message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68e0dbfb14ad64c84d2f251bfdd2195aa1eb55b" translate="yes" xml:space="preserve">
          <source>If this looks like your configuration then we can run a quick test to ensure that the system stats are being written to InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad64b8314e7258cc8f4c907da1bd577d75063a9e" translate="yes" xml:space="preserve">
          <source>If true, use the times in the recording, otherwise adjust times relative to the current time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a98afeaed45cf316c5e2daf43cacd68fbc6508a" translate="yes" xml:space="preserve">
          <source>If you &lt;a href=&quot;https://influxdata.com/downloads/&quot;&gt;install&lt;/a&gt; InfluxDB via a package manager, the CLI is installed at &lt;code&gt;/usr/bin/influx&lt;/code&gt; (&lt;code&gt;/usr/local/bin/influx&lt;/code&gt; on OS X).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17e1b9fb619ec2aebbf1ee362c74fd7b2c12a20" translate="yes" xml:space="preserve">
          <source>If you are working with an InfluxEnterprise cluster, please see the &lt;a href=&quot;https://docs.influxdata.com/enterprise/v1.3/guides/backup-and-restore/&quot;&gt;Backup and Restore Guide&lt;/a&gt; in the InfluxEnterprise documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dde36b301b611348f6fe6af0cc49f321a467f8" translate="yes" xml:space="preserve">
          <source>If you authenticate with both Basic Authentication &lt;strong&gt;and&lt;/strong&gt; the URL query parameters, the user credentials specified in the query parameters take precedence. The queries in the following examples assume that the user is an &lt;a href=&quot;#admin-users&quot;&gt;admin user&lt;/a&gt;. See the section on &lt;a href=&quot;#authorization&quot;&gt;authorization&lt;/a&gt; for the different user types, their privileges, and more on user management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb1017dc67c0f492964e06b052b00ec1f326da4" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t find the API access token, create a new token with the steps below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd2aca008e3e57ad107de5b06250f3b921b424a" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t find the API access token, create a new token with the steps below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5ac4e0df246009c342b3c845aadfbfc7e6e2e0" translate="yes" xml:space="preserve">
          <source>If you choose to use the TAR packages, as opposed to the operating system package management tools (such as &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt;, etc.), there are a couple of things that you should be aware of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6806f754d6835d415c15c6049389490cdf0e512" translate="yes" xml:space="preserve">
          <source>If you do not specify a channel or DM, Chronograf sends alert messages to the channel or DM that you selected for the WebHook URL or to the channel or DM specified in the &lt;a href=&quot;../create-a-kapacitor-alert/index&quot;&gt;alert rule&lt;/a&gt;. The channel or DM specified in the alert rule takes precedence over both the &lt;code&gt;Slack Channel&lt;/code&gt; configuration option and the WebHook URL configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64604742fa9c1f934b620d0cd4076f7f2c76364" translate="yes" xml:space="preserve">
          <source>If you double quote a measurement in Line Protocol, any queries on that measurement require both double quotes and escaped (&lt;code&gt;\&lt;/code&gt;) double quotes in the &lt;code&gt;FROM&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be19ce9c450428ca309da08df02f83c574e28ff" translate="yes" xml:space="preserve">
          <source>If you exceed &lt;code&gt;max-concurrent-queries&lt;/code&gt;, InfluxDB does not execute the query and outputs the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29bb4ddeb9b469dd6dfe8f1aa12bc3cafb7dcdb" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t already check out &lt;a href=&quot;https://github.com/influxdb/kapacitor/blob/master/CONTRIBUTING.md&quot;&gt;this&lt;/a&gt; information to get started contributing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89132fe0c954e8784392f9b2eaec00016ffe8b1d" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t already, we recommend following the &lt;a href=&quot;../../introduction/getting_started/index&quot;&gt;getting started guide&lt;/a&gt; for Kapacitor prior to continuing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893c3263ae56a167d5c717be7735a271a00bde20" translate="yes" xml:space="preserve">
          <source>If you need to delete points in the future, you must specify that time period as &lt;code&gt;DELETE SERIES&lt;/code&gt; runs for &lt;code&gt;time &amp;lt; now()&lt;/code&gt; by default. &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/8007&quot;&gt;Syntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce479001cd2bba6bd49c9c148a7f7a56462bab9f" translate="yes" xml:space="preserve">
          <source>If you only wanted to see data for the planet &lt;code&gt;Saturn&lt;/code&gt;, you&amp;rsquo;d enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49521b4f755b09e49d05922e8bf86fb42497a3bf" translate="yes" xml:space="preserve">
          <source>If you own or have recently purchased a 3D printer, you may know that 3D printing requires the environment to be at certain temperatures in order to ensure quality prints. Prints can also take a long time (some can take more than 24 hours), so you can&amp;rsquo;t just watch the temperature graphs the whole time to make sure the print is going well. Also, if a print goes bad early, you want to make sure and stop it so that you can restart it, and not waste materials on continuing a bad print.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab760a9944b938f87a521b55315d727d4fe37a4" translate="yes" xml:space="preserve">
          <source>If you plan on sending requests to InfluxDB over a network, we &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.3/administration/security_best_practices/&quot;&gt;strongly recommend&lt;/a&gt; that you set up HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91213f956d943ae2b28590402103bd0317fc06e3" translate="yes" xml:space="preserve">
          <source>If you run InfluxDB directly, using &lt;code&gt;influxd&lt;/code&gt;, all logs will be written to &lt;code&gt;stderr&lt;/code&gt;. You may redirect this log output as you would any output to &lt;code&gt;stderr&lt;/code&gt; like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb508f634fe140faad8cb29b006184ed53c06b39" translate="yes" xml:space="preserve">
          <source>If you set the retention policy&amp;rsquo;s duration to one hour (&lt;code&gt;1h&lt;/code&gt;), InfluxDB automatically deletes any alerts that occurred before the past hour. Those alerts no longer appear in your InfluxDB instance or on Chronograf&amp;rsquo;s Alert History page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18579234c94b78c0502587f9f1526c6d12d57283" translate="yes" xml:space="preserve">
          <source>If you simply un-TAR the downloaded package and restart Chronograf, you will reinitalize the local datastore &amp;ndash; and it will appear as though all of your previous configurations and dashboards have disappeared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd1a2b229f2aaa9bd63fd80d79c85ae5de70af9" translate="yes" xml:space="preserve">
          <source>If you use an &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/influxql/README.md#keywords&quot;&gt;InfluxQL keyword&lt;/a&gt; as an identifier you will need to double quote that identifier in every query. This can lead to &lt;a href=&quot;../errors/index#error-parsing-query-found-expected-identifier-at-line-char&quot;&gt;non-intuitive errors&lt;/a&gt;. Identifiers are continuous query names, database names, field keys, measurement names, retention policy names, subscription names, tag keys, and user names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56efeba39f369ef625c908520fdb4d15f2ba874" translate="yes" xml:space="preserve">
          <source>If you use an InfluxQL keywords as an &lt;a href=&quot;../../concepts/glossary/index#identifier&quot;&gt;identifier&lt;/a&gt; you will need to double quote that identifier in every query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b370a025a632c168e06ac990a39836c69b2ed9" translate="yes" xml:space="preserve">
          <source>If you want Kapacitor to be able to output to you own endpoint see this &lt;a href=&quot;custom_output/index&quot;&gt;How To&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1360a60ca9e33af727330cb8d98ad150dd270e25" translate="yes" xml:space="preserve">
          <source>If you want the average &lt;code&gt;water_level&lt;/code&gt; for each individual series, include a &lt;a href=&quot;#group-by-tags&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; clause&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db9b8384ce1ba227fb5a339b590b17fa0616eb6" translate="yes" xml:space="preserve">
          <source>If you want the average &lt;code&gt;water_level&lt;/code&gt; for the first series only, specify the relevant tag in the &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a6adb8c83733e082a657bc6a3ac329258c3f12" translate="yes" xml:space="preserve">
          <source>If you want to learn more, here are a few places to start:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c26a78468f9c9473dcae0fd38e7da6273ee007" translate="yes" xml:space="preserve">
          <source>If you want to remove the measurement name from the group ID, then groupBy all existing dimensions but without specifying 'byMeasurement'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d2ca86e0c2fc4c1c514f5490c45e5f693838bb" translate="yes" xml:space="preserve">
          <source>If you wanted to see data for the planet &lt;code&gt;Saturn&lt;/code&gt; after 12:00:01 UTC on April 16, 2015, you&amp;rsquo;d enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf9c8ff06a7dc614dc3e16a055fcbece4c07c6c" translate="yes" xml:space="preserve">
          <source>If you would like to try out this example case there are scripts &lt;a href=&quot;https://github.com/influxdb/kapacitor/blob/master/examples/error_percent/&quot;&gt;here&lt;/a&gt; that create test data and backfill the data using Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0171136f834d29b198f75ad0452b3f9cb2941574" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking for &lt;code&gt;SHOW&lt;/code&gt; queries (for example, &lt;code&gt;SHOW DATABASES&lt;/code&gt; or &lt;code&gt;SHOW RETENTION POLICIES&lt;/code&gt;), see &lt;a href=&quot;../schema_exploration/index&quot;&gt;Schema Exploration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a80010a2c46e78fa8975d6bd6c7ed7d7a39dd18" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re only running InfluxDB, close all ports on the host except for port &lt;code&gt;8086&lt;/code&gt;. You can also use a proxy to port &lt;code&gt;8086&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd261f8360902d2e87edd01520f38fc9695347d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt; be sure to enter &lt;code&gt;USE NOAA_water_database&lt;/code&gt; before you run the query. The CLI queries the data in the &lt;code&gt;USE&lt;/code&gt;d database and the &lt;code&gt;DEFAULT&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;. If you&amp;rsquo;re using the &lt;a href=&quot;../../tools/api/index&quot;&gt;HTTP API&lt;/a&gt; be sure to set the &lt;code&gt;db&lt;/code&gt;&lt;a href=&quot;../../tools/api/index#query-string-parameters&quot;&gt;query string parameter&lt;/a&gt; to &lt;code&gt;NOAA_water_database&lt;/code&gt;. If you do not set the &lt;code&gt;rp&lt;/code&gt; query string parameter, the HTTP API automatically queries the database&amp;rsquo;s &lt;code&gt;DEFAULT&lt;/code&gt; retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210c0e912ca5d987267d0807c7b7aaebaec77cbf" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using version 1.2, please see &lt;a href=&quot;../differences/index&quot;&gt;Differences Between InfluxDB 1.3 and 1.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96e6cef8c196b1e891a8a14c6dd4039871573a2" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve already &lt;a href=&quot;../../introduction/getting-started/index#3-connect-to-chronograf&quot;&gt;connected your database to Chronograf&lt;/a&gt;, update the connection configuration in Chronograf with your new username and password. Edit existing database sources by navigating to the Chronograf&amp;rsquo;s configuration page and clicking on the name of the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc6652b701fdc8a7059bdaa6a7d8b9780e020e5" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve installed InfluxDB locally, the &lt;code&gt;influx&lt;/code&gt; command should be available via the command line. Executing &lt;code&gt;influx&lt;/code&gt; will start the CLI and automatically connect to the local InfluxDB instance (assuming you have already started the server with &lt;code&gt;service influxdb start&lt;/code&gt; or by running &lt;code&gt;influxd&lt;/code&gt; directly). The output should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfec98c7029b5aef10647d4bfc963381e77ddc5" translate="yes" xml:space="preserve">
          <source>If your RP&amp;rsquo;s duration is greater than six months, there&amp;rsquo;s no need to have a short shard group duration. In fact, increasing the shard group duration beyond the default seven day value can improve compression, improve write speed, and decrease the fixed iterator overhead per shard group. Shard group durations of 50 years and over, for example, are acceptable configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134a88fb81c2d8c490bdd14f15560a7bd5afc480" translate="yes" xml:space="preserve">
          <source>If your data file has more than 5,000 points, it may be necessary to split that file into several files in order to write your data in batches to InfluxDB. We recommend writing points in batches of 5,000 to 10,000 points. Smaller batches, and more HTTP requests, will result in sub-optimal performance. By default, the HTTP request times out after five seconds. InfluxDB will still attempt to write the points after that time out but there will be no confirmation that they were successfully written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cff056a0da77dca26f24e70404c36279e66d37" translate="yes" xml:space="preserve">
          <source>If your data have field value type discrepancies, use the syntax &lt;code&gt;&amp;lt;field_key&amp;gt;::&amp;lt;type&amp;gt;&lt;/code&gt; to query the different data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d4bf3ad8b59e2aaac83bcdd2eb3e2ad9b0fe2d" translate="yes" xml:space="preserve">
          <source>If your metastore data do not appear to be present, stop the service, reinstall InfluxDB 0.10 or 0.11, restore the copy you made of the entire 0.10 or 0.11 &lt;code&gt;meta&lt;/code&gt; directory to the &lt;code&gt;meta&lt;/code&gt; directory, and try working through these steps again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06ee437247cec0f03e21e56edf848e7aa12d18b" translate="yes" xml:space="preserve">
          <source>If your performance requirements fall into the &lt;a href=&quot;#general-hardware-guidelines-for-a-single-node&quot;&gt;Moderate&lt;/a&gt; or &lt;a href=&quot;#general-hardware-guidelines-for-a-single-node&quot;&gt;Low load&lt;/a&gt; ranges then you can likely use a single node instance of InfluxDB. If at least one of your performance requirements falls into the &lt;a href=&quot;#general-hardware-guidelines-for-a-single-node&quot;&gt;Probably infeasible category&lt;/a&gt;, then you will likely need to use a cluster to distribute the load among multiple servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7b76a1e80cb75a0f3e1ef20803f62dc7cfc7ae" translate="yes" xml:space="preserve">
          <source>If your query exceeds &lt;code&gt;max-select-buckets&lt;/code&gt;, InfluxDB does not execute the query and outputs the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e64a730b3f97076b075224e68f19efd86261d5" translate="yes" xml:space="preserve">
          <source>If your query exceeds &lt;code&gt;max-select-point&lt;/code&gt;, InfluxDB kills the query and outputs the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83c6d53cc5411a02f657477a74ba66e1f5dd8f3" translate="yes" xml:space="preserve">
          <source>If your query exceeds &lt;code&gt;max-select-series&lt;/code&gt;, InfluxDB does not execute the query and outputs the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903adbd980540293a6e1855164348838ffc12852" translate="yes" xml:space="preserve">
          <source>If your query exceeds the query timeout, InfluxDB kills the query and outputs the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9846563a2b6c4e27303e7b783870a1bef34e1aa5" translate="yes" xml:space="preserve">
          <source>Implement cumulative_sum() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac35db5a610e6456897b6e9774c9053d950d3d8" translate="yes" xml:space="preserve">
          <source>Implement support for fetching hddtemp data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645e687d8ac80e01b113de1ab3c0a7c98b4dd229" translate="yes" xml:space="preserve">
          <source>Implement text/csv content encoding for the response writer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b3abde2e135489ac0e1b41cfb77c06ae691d82" translate="yes" xml:space="preserve">
          <source>Implement time math for lazy time literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e87f17dbfa754e47cdd1086ff71cc2ab028153e" translate="yes" xml:space="preserve">
          <source>Implementing the HouseDB output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7085dbaf7d6b5d12b8660aa7daf2325832d2749" translate="yes" xml:space="preserve">
          <source>Implicitly cast null to false in binary expressions with a boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2daa892933af667a460c7bc5b51a988f3f8b556" translate="yes" xml:space="preserve">
          <source>Import data from a file with &lt;code&gt;-import&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168c3677f6476b34504884d4644c1b34b278d910" translate="yes" xml:space="preserve">
          <source>Imports work with &lt;code&gt;.gz&lt;/code&gt; files, just include &lt;code&gt;-compressed&lt;/code&gt; in the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67014599f3f13d7581db21a5c00e6cd1d1f5e907" translate="yes" xml:space="preserve">
          <source>Improve UX of applying functions to fields in the query builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a53426fde4011af9673e1180123dbf4e5347779" translate="yes" xml:space="preserve">
          <source>Improve compaction planning performance by caching tsm file stats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46b8e10a8afe4e7636f7116c7aa304219211e01" translate="yes" xml:space="preserve">
          <source>Improve copy on the Kapacitor configuration page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce713659f65f901bcf97c93e5f83939161fdb8e" translate="yes" xml:space="preserve">
          <source>Improve documentation for redis input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51241a3b58e6c1757008fc2d8e398bcbc69d8cb0" translate="yes" xml:space="preserve">
          <source>Improve how cell legends and options appear on dashboards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29448f56dec46ef0aa44213375eecd67a1b618b" translate="yes" xml:space="preserve">
          <source>Improve performance of diskio with many disks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3362a19ef34bbcd2516772703fb63b8c9c3191" translate="yes" xml:space="preserve">
          <source>Improve write performance significantly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a9789012539b49fa2ba10aa37164cc8da9cf3a" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../anomaly_detection/index&quot;&gt;another example&lt;/a&gt; we saw how to write a process based UDF for custom anomaly detection workloads. In this example we are going to learn how to write a simple socket based UDF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4791b8565c02fee0da5632f669fd28c52b8c7355" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../create-a-dashboard/index#step-2-enter-cell-editor-mode&quot;&gt;cell editor mode&lt;/a&gt;, create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query that uses the &lt;code&gt;:database:&lt;/code&gt; template variable. The query below selects all &lt;code&gt;purchases&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;values&lt;/a&gt; from the &lt;code&gt;customers&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;, the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, and the database specified by the &lt;code&gt;:database:&lt;/code&gt; template variable. The template variable requires surrounding colons (&lt;code&gt;:&lt;/code&gt;) in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122c39f261855100901bdeba940c2377705f3205" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../create-a-dashboard/index#step-2-enter-cell-editor-mode&quot;&gt;cell editor mode&lt;/a&gt;, create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query that uses the &lt;code&gt;:field-key:&lt;/code&gt; template variable. The query below selects the field key specified by the &lt;code&gt;:field-key:&lt;/code&gt; template variable in the &lt;code&gt;animals&lt;/code&gt; database, the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, and the &lt;code&gt;customers&lt;/code&gt; measurement. The template variable requires surrounding colons (&lt;code&gt;:&lt;/code&gt;) in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456c6db5296ec25b1e14f58ec7fc95d1e8996536" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../create-a-dashboard/index#step-2-enter-cell-editor-mode&quot;&gt;cell editor mode&lt;/a&gt;, create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query that uses the &lt;code&gt;:field-value:&lt;/code&gt; template variable. The query below selects all &lt;code&gt;purchases&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;values&lt;/a&gt; in the &lt;code&gt;animals&lt;/code&gt; database, the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, and the &lt;code&gt;customers&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;. It asks for data where the &lt;code&gt;petname&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; equals the value specified by the CSV &lt;code&gt;:field-value:&lt;/code&gt; template variable. The template variable requires surrounding colons (&lt;code&gt;:&lt;/code&gt;) in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a6b7cabff65cd14d624b81926225e9acab955a" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../create-a-dashboard/index#step-2-enter-cell-editor-mode&quot;&gt;cell editor mode&lt;/a&gt;, create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query that uses the &lt;code&gt;:measurement:&lt;/code&gt; template variable. The query below selects all &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt; in the &lt;code&gt;animals&lt;/code&gt; database, the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, and in the measurement specified by the &lt;code&gt;:measurement:&lt;/code&gt; template variable. The template variable requires surrounding colons (&lt;code&gt;:&lt;/code&gt;) in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683e17a5ddc31df39ba782658f9d0b5b2352c4f1" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../create-a-dashboard/index#step-2-enter-cell-editor-mode&quot;&gt;cell editor mode&lt;/a&gt;, create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query that uses the &lt;code&gt;:tag-key:&lt;/code&gt; template variable. The query below selects all &lt;code&gt;purchases&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;values&lt;/a&gt; in the &lt;code&gt;animals&lt;/code&gt; database, the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, and the &lt;code&gt;customers&lt;/code&gt; measurement. It &lt;a href=&quot;../../../../influxdb/v1.3/query_language/data_exploration/index#group-by-tags&quot;&gt;groups&lt;/a&gt; query results by the tag key specified by the &lt;code&gt;:tag-key:&lt;/code&gt; template variable. The template variable requires surrounding colons (&lt;code&gt;:&lt;/code&gt;) in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a404ffcf38abb3060e8ef58c71198547c0ef76b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../create-a-dashboard/index#step-2-enter-cell-editor-mode&quot;&gt;cell editor mode&lt;/a&gt;, create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query that uses the &lt;code&gt;:tag-value:&lt;/code&gt; template variable. The query below selects all &lt;code&gt;purchases&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;values&lt;/a&gt; in the &lt;code&gt;animals&lt;/code&gt; database, the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, and the &lt;code&gt;customers&lt;/code&gt; measurement. It asks for data where the &lt;code&gt;species&lt;/code&gt; tag key equals the value specified by the &lt;code&gt;:tag-value:&lt;/code&gt; template variable. The template variable requires surrounding colons (&lt;code&gt;:&lt;/code&gt;) in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56d139d84f9c83a90e6287b782dc4c5247016b6" translate="yes" xml:space="preserve">
          <source>In Chronograf all command line options also have a corresponding environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd5de03aaea1a5bf9655edfd06ca9383ca2af7b" translate="yes" xml:space="preserve">
          <source>In Chronograf, the &lt;code&gt;Admin&lt;/code&gt; page includes a complete interface for user management. The &lt;code&gt;Admin&lt;/code&gt; page supports both OSS InfluxDB users and InfluxEnterprise users; see the &lt;a href=&quot;../../administration/user-management/index&quot;&gt;User Management&lt;/a&gt; page for more information. The &lt;code&gt;Admin&lt;/code&gt; page allows users to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1beee8adb63e75b0eb5c7c90be9ab6cd0b243774" translate="yes" xml:space="preserve">
          <source>In Chronograf, the &lt;code&gt;Admin&lt;/code&gt; page includes a complete user interface for database and RP management. The &lt;code&gt;Admin&lt;/code&gt; page allows users to view, create, and delete databases and RPs without having to learn the relevant query syntax. The GIF below shows the process of creating a database, creating an RP, and deleting that database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d862cf74ac1539275e593e1c2b226b702a2bfcb7" translate="yes" xml:space="preserve">
          <source>In Chronograf, the same &lt;code&gt;Query Templates&lt;/code&gt; dropdown appears in the Data Explorer. To use query templates, select a query from the set of available queries and insert the relevant user-provided values. Note that unlike the web admin interface, Chronograf does not have a database dropdown; the query must specify the target database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960a67f82d87ff13c317899d5f48e87447353456" translate="yes" xml:space="preserve">
          <source>In Chronograf, you can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a5c2b6309578ce2ba1d01c139cbe8f0aec1752" translate="yes" xml:space="preserve">
          <source>In InfluxDB line protocol, these 4 parts are easily defined in textual form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c729be8e89b31e41fcb50fa0b3f2b21097deff6" translate="yes" xml:space="preserve">
          <source>In InfluxDB&amp;rsquo;s &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd849dec684dc169cef236f487bbe9bca3a0cc1a" translate="yes" xml:space="preserve">
          <source>In InfluxDB, a timestamp identifies a single point in any given data series. This is like an SQL database table where the primary key is pre-set by the system and is always time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66811c8b31f5b3538a7088bb2a107e001eb74f6" translate="yes" xml:space="preserve">
          <source>In InfluxDB, epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) is often used as a null timestamp equivalent. If you request a query that has no timestamp to return, such as an aggregation function with an unbounded time range, InfluxDB returns epoch 0 as the timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6868cdb61d8eb62785ba4f33f069a799c1eb140" translate="yes" xml:space="preserve">
          <source>In InfluxDB, queries merge &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74b9e6a1c74d451d47f851da38c9997c31a3e11" translate="yes" xml:space="preserve">
          <source>In Query 1, the field key &lt;code&gt;duration&lt;/code&gt; is an InfluxQL Keyword. Double quote &lt;code&gt;duration&lt;/code&gt; to avoid the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4971b2e14a2de13ad4088997664956b7c6a2d8" translate="yes" xml:space="preserve">
          <source>In Query 2, the retention policy name &lt;code&gt;limit&lt;/code&gt; is an InfluxQL Keyword. Double quote &lt;code&gt;limit&lt;/code&gt; to avoid the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7473dae5cfa152f41796d5fcbd6531e66c35edce" translate="yes" xml:space="preserve">
          <source>In TICKscript it is possible to expose a cache of recent data via the &lt;a href=&quot;https://docs.influxdata.com/kapacitor/latest/nodes/http_out_node/&quot;&gt;HTTPOut&lt;/a&gt; node. The data is available at the path &lt;code&gt;/kapacitor/v1/tasks/TASK_ID/ENDPOINT_NAME&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e3ff256fe1b33c278cd0f0533f37dbfdacf735" translate="yes" xml:space="preserve">
          <source>In Telegraf&amp;rsquo;s configuration file (&lt;code&gt;/etc/telegraf/telegraf.conf&lt;/code&gt;), edit the &lt;code&gt;urls&lt;/code&gt; setting to indicate &lt;code&gt;https&lt;/code&gt; instead of &lt;code&gt;http&lt;/code&gt; and change &lt;code&gt;localhost&lt;/code&gt; to the relevant domain name. If you&amp;rsquo;re using a self-signed certificate, uncomment the &lt;code&gt;insecure_skip_verify&lt;/code&gt; setting and set it to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1636e9ff13d11be8357fa5cbe33a493226323aa3" translate="yes" xml:space="preserve">
          <source>In a production environment you should not use self-signed certificates. However, for testing it is fast to create your own certs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a302d2257d1b2bdca9cc6a3673dc1982bf60ae0" translate="yes" xml:space="preserve">
          <source>In a production environment, Telegraf would be installed on your servers and would point the output to an InfluxDB instance on a separate machine. Ultimately, you will configure a Telegraf input plugin for each application that you want to monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7f107b0fdd26353cb31c35a3cfb880f00bce47" translate="yes" xml:space="preserve">
          <source>In addition to defining alert handler in TICKscript Kapacitor supports an alert system that follows a publish subscribe design pattern. Alerts are published to a &lt;code&gt;topic&lt;/code&gt; and &lt;code&gt;handlers&lt;/code&gt; subscribe to a topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6add54f06b257ffd6580b076262a823058baec" translate="yes" xml:space="preserve">
          <source>In addition to the data that triggered the alert metadata about the alert is available. This alert metadata is available via various functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06171362d160610899161c7e1fc297847d96392" translate="yes" xml:space="preserve">
          <source>In addition to the ports above, InfluxDB also offers multiple plugins that may require &lt;a href=&quot;../../administration/ports/index&quot;&gt;custom ports&lt;/a&gt;. All port mappings can be modified through the &lt;a href=&quot;../../administration/config/index&quot;&gt;configuration file&lt;/a&gt;, which is located at &lt;code&gt;/etc/influxdb/influxdb.conf&lt;/code&gt; for default installations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cca9981f816b173474da91f84dc38b2e7c95b9" translate="yes" xml:space="preserve">
          <source>In addition, UDFs can accept certain options so that they are individually configurable. The &lt;code&gt;info&lt;/code&gt; response can contain a list of options, their names, and expected arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e619753910d8bd102c8aa149cef4049e5d38888a" translate="yes" xml:space="preserve">
          <source>In all cases, a successful &lt;code&gt;GRANT&lt;/code&gt; query returns a blank result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1da8331161155822003ce3bf197cc87714d3c8" translate="yes" xml:space="preserve">
          <source>In both cases the protocol is the same the only difference is the transport mechanism. Also note that since multiple Kapacitor tasks can use the same UDF, for a process based UDF a new child process will be spawned for each use of the UDF. In contrast for a socket based UDF, a new connection will be made to the socket for each use of the UDF. If you have many uses of the same UDF it may be better to use a socket UDF to keep the number of running processes low.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b9e845cb935c7cf17979ee60263f744d72be0d" translate="yes" xml:space="preserve">
          <source>In common cases the blocks will not overlap across multiple TSM files and we can search the index entries linearly to find the start block from which to read. If there are overlapping blocks of time, the index entries are sorted to ensure newer writes will take precedence and that blocks can be processed in order during query execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a76844c709b853dd04f06ea62804330b9e55c35" translate="yes" xml:space="preserve">
          <source>In each case the constant you need can be calculated as &lt;code&gt;(2 ** width) - 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55800a3a1079d04afcc4e0ca9c6f9a6e399e8f5" translate="yes" xml:space="preserve">
          <source>In general&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947e3e6d27a0f61da6e40ddf7d65c133964342b0" translate="yes" xml:space="preserve">
          <source>In general, having more RAM helps queries return faster. There is no known downside to adding more RAM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0431950f3fb32eeaadcbe342537e1770d9fcdef" translate="yes" xml:space="preserve">
          <source>In general, shorter shard group durations allow the system to efficiently drop data. When InfluxDB enforces an RP it drops entire shard groups, not individual data points. For example, if your RP has a duration of one day, it makes sense to have a shard group duration of one hour; InfluxDB will drop an hour worth of data every hour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5842602a31031396ee45dec31a7623a1ff255689" translate="yes" xml:space="preserve">
          <source>In general, status codes of the form &lt;code&gt;2xx&lt;/code&gt; indicate success, &lt;code&gt;4xx&lt;/code&gt; indicate that InfluxDB could not understand the request, and &lt;code&gt;5xx&lt;/code&gt; indicate that the system is overloaded or significantly impaired. Errors are returned in JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b3d4de2dcaebc05a7cbd2c8e3abf0cd52b2d20" translate="yes" xml:space="preserve">
          <source>In general, taking this step will simplify your queries. InfluxDB queries merge data that fall within the same &lt;a href=&quot;../glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;; it&amp;rsquo;s better to differentiate data with &lt;a href=&quot;../glossary/index#tag&quot;&gt;tags&lt;/a&gt; than with detailed measurement names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc9d321060955d139d22602bfa0ce98a8ad2ae6" translate="yes" xml:space="preserve">
          <source>In general, your queries should guide what gets stored as a tag and what gets stored as a field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0aca417275621dab97451cce634005d219fb5d" translate="yes" xml:space="preserve">
          <source>In most cases, this issue is the result of missing single quotes around &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; or string &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;. Queries with unquoted or double quoted tag values or string field values will not return any data and, in most cases, will not return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9777f55d4fde805c8647519cec907c323e54b2" translate="yes" xml:space="preserve">
          <source>In no particular order, we recommend that you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495b0cb52b2bf9baccbf32dda32051242c54e0f6" translate="yes" xml:space="preserve">
          <source>In order for an instance of our node to be created we need to associate it with the node from the &lt;code&gt;pipeline&lt;/code&gt; package. This can be done via the switch statement in the &lt;code&gt;createNode&lt;/code&gt; method in the &lt;code&gt;task.go&lt;/code&gt; file. To continue our example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2beb6a9d505104dc9e863448c367516f40078b0" translate="yes" xml:space="preserve">
          <source>In order to determine when a recording has finished you must make a GET request to the returned link typically something like &lt;code&gt;/kapacitor/v1/recordings/RECORDING_ID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af544ce9011b1718709cdc252c9721b5b533e8a5" translate="yes" xml:space="preserve">
          <source>In order to explore the query language further, these instructions help you create a database, download and write data to that database within your InfluxDB installation. The sample data is then used and referenced in &lt;a href=&quot;../data_exploration/index&quot;&gt;Data Exploration&lt;/a&gt;, &lt;a href=&quot;../schema_exploration/index&quot;&gt;Schema Exploration&lt;/a&gt;, and &lt;a href=&quot;../functions/index&quot;&gt;Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869913a4c3bf1f964d67685ffc00c8e7786d9a47" translate="yes" xml:space="preserve">
          <source>In order to not post a message every alert interval use &lt;a href=&quot;index#statechangesonly&quot;&gt;AlertNode.StateChangesOnly&lt;/a&gt; so that only events where the alert changed state are posted to the channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a8cecabde4f6e46790e795f3ed4ccd70415db2" translate="yes" xml:space="preserve">
          <source>In order to not post a message every alert interval use &lt;a href=&quot;index#statechangesonly&quot;&gt;AlertNode.StateChangesOnly&lt;/a&gt; so that only events where the alert changed state are posted to the chat-id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd14af33ff8f04d425af1bb9dfbb4c1eef7307bf" translate="yes" xml:space="preserve">
          <source>In order to not post a message every alert interval use &lt;a href=&quot;index#statechangesonly&quot;&gt;AlertNode.StateChangesOnly&lt;/a&gt; so that only events where the alert changed state are sent to Alerta.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dedbebc6296d108173a73c42841b13f73cd3aed" translate="yes" xml:space="preserve">
          <source>In order to update TICKscript to support those new methods we need to write a Go type that implements the &lt;code&gt;pipeline.Node&lt;/code&gt; interface. The interface can be found &lt;a href=&quot;https://github.com/influxdb/kapacitor/blob/master/pipeline/node.go&quot;&gt;here&lt;/a&gt; as well as a complete implementation via the &lt;code&gt;pipeline.node&lt;/code&gt; type. Since the implementation of the &lt;code&gt;Node&lt;/code&gt; is done for us we just need to use it. First we need a name. &lt;code&gt;HouseDBOutNode&lt;/code&gt; follows the naming convention. Let&amp;rsquo;s define a Go &lt;code&gt;struct&lt;/code&gt; that will implement the interface via composition. Create a file in the &lt;code&gt;pipeline&lt;/code&gt; directory called &lt;code&gt;housedb_out.go&lt;/code&gt; with the following contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8983eba55ad58e3c05e59e0434e94632b1ac018" translate="yes" xml:space="preserve">
          <source>In our case we want to define a function called &lt;code&gt;newHouseDBOutNode&lt;/code&gt;. Add the following method to the &lt;code&gt;housedb_out.go&lt;/code&gt; file.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c069b5d9c534323eba12da16c36dbeba8e1a36" translate="yes" xml:space="preserve">
          <source>In our example the data processing step is outputting the data to HouseDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dac77888725dec1d8d020928b82acf0ae62755" translate="yes" xml:space="preserve">
          <source>In some cases the &lt;code&gt;expected identifier&lt;/code&gt; error occurs when one of the &lt;a href=&quot;../../concepts/glossary/index#identifier&quot;&gt;identifiers&lt;/a&gt; in the query is an &lt;a href=&quot;../../query_language/spec/index#keywords&quot;&gt;InfluxQL Keyword&lt;/a&gt;. To successfully query an identifier that&amp;rsquo;s also a keyword, enclose that identifier in double quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96df8a09496c2bd990fa2449df424c2c1504c9d5" translate="yes" xml:space="preserve">
          <source>In some cases, the &lt;code&gt;bad timestamp&lt;/code&gt; error occurs with more general syntax errors in the line protocol. Line protocol is whitespace sensitive; misplaced spaces can cause InfluxDB to assume that a field or tag is an invalid timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bf363fdf743b44f06f726e0072b5e3bf38515f" translate="yes" xml:space="preserve">
          <source>In some cases, users may receive fewer predicted points than requested by the &lt;code&gt;N&lt;/code&gt; parameter. That behavior occurs when the math becomes unstable and cannot forecast more points. It implies that either &lt;code&gt;HOLT_WINTERS()&lt;/code&gt; is not suited for the dataset or that the seasonal adjustment parameter is invalid and is confusing the algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427db2ef30843897231892115c51399a8af1aacd" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause, the first argument (&lt;code&gt;379m&lt;/code&gt;) matches the length of time that occurs between each peak and trough in the &lt;code&gt;water_level&lt;/code&gt; data. The second argument (&lt;code&gt;348m&lt;/code&gt;) is the &lt;a href=&quot;../data_exploration/index#advanced-group-by-time-syntax&quot;&gt;offset interval&lt;/a&gt;. The offset interval alters InfluxDB&amp;rsquo;s default &lt;code&gt;GROUP BY time()&lt;/code&gt; boundaries to match the time range of the raw data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e87197130a741e79937a5e0f4e619f2c9196e9" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;HOLT_WINTERS_WITH_FIT()&lt;/code&gt; function, the first argument (&lt;code&gt;10&lt;/code&gt;) requests 10 predicted field values. Each predicted point is &lt;code&gt;379m&lt;/code&gt; apart, the same interval as the first argument in the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause. The second argument in the &lt;code&gt;HOLT_WINTERS_WITH_FIT()&lt;/code&gt; function (&lt;code&gt;4&lt;/code&gt;) is the seasonal pattern that we determined in the previous step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d399cff9d25c4724ebac7af800613ad6b660b97" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;[hipchat]&lt;/code&gt; section of Kapacitor&amp;rsquo;s configuration file, set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c52f36c1202a4fa95ba5a4545ca995ea9177b3c" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;[http]&lt;/code&gt; section, uncomment the &lt;code&gt;auth-enabled&lt;/code&gt; option and set it to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e01016b0557a4f24a5808a8f67e73a75757408d" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;[telegram]&lt;/code&gt; section of Kapacitor&amp;rsquo;s configuration file set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3cea7aff671404f69cdd8594aa7a417e5125d9" translate="yes" xml:space="preserve">
          <source>In the CLI, fully qualify a measurement to query data in a database other than the &lt;code&gt;USE&lt;/code&gt;d database and in a retention policy other than the &lt;code&gt;DEFAULT&lt;/code&gt; retention policy. In the HTTP API, fully qualify a measurement in place of using the &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;rp&lt;/code&gt; query string parameters if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef39f2650a577e952091687c9d63135d4b523e0" translate="yes" xml:space="preserve">
          <source>In the CLI, specify the database to query data in a database other than the &lt;code&gt;USE&lt;/code&gt;d database. In the HTTP API, specify the database in place of using the &lt;code&gt;db&lt;/code&gt; query string parameter if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e73c792214304ea4f67ec89a067c484811286ad" translate="yes" xml:space="preserve">
          <source>In the above example InfluxDB is queried every 20 seconds; the window of time returned spans 1 minute and is grouped into 10 second buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cced131ffe67b7e2bc9f5fb5cfce6d1db11576" translate="yes" xml:space="preserve">
          <source>In the above example all combination pairs are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4313dcd8305079c4bb824abc604d3029cc60e7" translate="yes" xml:space="preserve">
          <source>In the above example all combinations triples are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dda0399832c8b98571d91f23aa9e7566148948" translate="yes" xml:space="preserve">
          <source>In the above example the &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;requests&lt;/code&gt; streams are joined and then transformed to calculate a combined field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e5b0803239171c31127042f314870ccfb443c6" translate="yes" xml:space="preserve">
          <source>In the above example the data points for the &lt;code&gt;login&lt;/code&gt; service are combined with the data points from all other services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691e934aff4894e5ed0b10798de8694376ab63f1" translate="yes" xml:space="preserve">
          <source>In the above example the original field &lt;code&gt;value&lt;/code&gt; is preserved. The new field &lt;code&gt;value2&lt;/code&gt; is calculated and used in evaluating &lt;code&gt;inv_value2&lt;/code&gt; but is discarded before the point is sent on to child nodes. The resulting point has only two fields: &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;inv_value2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a041d83e638cc934b198e47ce04f9ca2befa283" translate="yes" xml:space="preserve">
          <source>In the above template, we have four parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d54183363cb7514ce50fb67abbde3020cc78ee4" translate="yes" xml:space="preserve">
          <source>In the codeblock below, the first query attempts to use the &lt;code&gt;ELAPSED()&lt;/code&gt; function with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause to find the time elapsed (in minutes) between &lt;a href=&quot;#min&quot;&gt;minimum&lt;/a&gt;&lt;code&gt;water_level&lt;/code&gt;s. The query returns 12 minutes for both time intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce23fa0161d9e7807be5479297a424c7c93db869" translate="yes" xml:space="preserve">
          <source>In the configuration we called the function &lt;code&gt;tTest&lt;/code&gt;. That is also how we will reference it in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d493774a50f5f449aac29c9b9e957ee3835950" translate="yes" xml:space="preserve">
          <source>In the data above, the &lt;em&gt;tag set&lt;/em&gt; is the different combinations of all the tag key-value pairs. The four tag sets in the sample data are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4860a72143839c3498798cde2575c01beefcf28e" translate="yes" xml:space="preserve">
          <source>In the data above, the collection of field-key and field-value pairs make up a &lt;em&gt;field set&lt;/em&gt;. Here are all eight field sets in the sample data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efeb6fecf774e4e62cfe7081d11115fd87abcac5" translate="yes" xml:space="preserve">
          <source>In the example below, the tags &lt;code&gt;precision_supplied&lt;/code&gt; and &lt;code&gt;timestamp_supplied&lt;/code&gt; show the time precision and timestamp that the user provided at the write. Because InfluxDB silently drops trailing zeros on returned timestamps, the write precision is not recognizable in the returned timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61f6440860a64c213aa16eb90440eee9f1bde9f" translate="yes" xml:space="preserve">
          <source>In the example below, we create a configuration file called &lt;code&gt;telegraf.conf&lt;/code&gt; with two inputs: one that reads metrics about the system&amp;rsquo;s cpu usage (&lt;code&gt;cpu&lt;/code&gt;) and one that reads metrics about the system&amp;rsquo;s memory usage (&lt;code&gt;mem&lt;/code&gt;). We specify InfluxDB as the desired output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d72b74f2daa442c3887e0f401f6e37e51ff064" translate="yes" xml:space="preserve">
          <source>In the example, the field set consists of one field: &lt;code&gt;temperature=82&lt;/code&gt;. Adding another field (&lt;code&gt;bug_concentration=98&lt;/code&gt;) to the example looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada00c16332b98826988081c8f5bda188b85b9ef" translate="yes" xml:space="preserve">
          <source>In the example, the measurement name is &lt;code&gt;weather&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f27d1cc19efafaa9a4229ec22b62e73b540987" translate="yes" xml:space="preserve">
          <source>In the example, the tag set consists of one tag: &lt;code&gt;location=us-midwest&lt;/code&gt;. Adding another tag (&lt;code&gt;season=summer&lt;/code&gt;) to the example looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab0223efb95da47164e04591e0726d02df024b8" translate="yes" xml:space="preserve">
          <source>In the example, the timestamp is &lt;code&gt;1465839830100400200&lt;/code&gt; (that&amp;rsquo;s &lt;code&gt;2016-06-13T17:43:50.1004002Z&lt;/code&gt; in RFC3339 format). The Line Protocol below is the same data point but without the timestamp. When InfluxDB writes it to the database it uses your server&amp;rsquo;s local timestamp instead of &lt;code&gt;2016-06-13T17:43:50.1004002Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f847888f8409c48167799a77f775476249e2c71" translate="yes" xml:space="preserve">
          <source>In the first log message you should see &lt;code&gt;https&lt;/code&gt; rather than &lt;code&gt;http&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8056effd9aafe5825aa0a8f93095247c28837b3" translate="yes" xml:space="preserve">
          <source>In the following codeblock, the first query covers data with timestamps between &lt;code&gt;2015-09-18T21:30:00Z&lt;/code&gt; and &lt;code&gt;now()&lt;/code&gt;. The second query covers data with timestamps between &lt;code&gt;2015-09-18T21:30:00Z&lt;/code&gt; and 180 weeks from &lt;code&gt;now()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ba426bcd3e4f7ba3ca95d4adeaf1a8a884bcf5" translate="yes" xml:space="preserve">
          <source>In the following example, InfluxDB doesn&amp;rsquo;t fill the &lt;code&gt;2016-07-12T16:50:20Z&lt;/code&gt;-&lt;code&gt;2016-07-12T16:50:30Z&lt;/code&gt; time bucket with the results from the &lt;code&gt;2016-07-12T16:50:00Z&lt;/code&gt;-&lt;code&gt;2016-07-12T16:50:10Z&lt;/code&gt; time bucket because the query&amp;rsquo;s time range does not include the earlier time bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75fc9f0aaeb5e9e3cc775c5dd2da3b6a4adf707" translate="yes" xml:space="preserve">
          <source>In the last example, &lt;code&gt;what_is_time&lt;/code&gt; retains its original replication factor of 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cb42e783ca458a6a7174e8843b55f14ef302a7" translate="yes" xml:space="preserve">
          <source>In the sample data, everything in the &lt;code&gt;census&lt;/code&gt; measurement belongs to the &lt;code&gt;autogen&lt;/code&gt; retention policy. InfluxDB automatically creates that retention policy; it has an infinite duration and a replication factor set to one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3f74a513ee781363b57f5fb9e3ddf08d353ec7" translate="yes" xml:space="preserve">
          <source>In the sections below we name the relevant environment variable in the description for the configuration setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fa1e8863c5c29a5691b1495a4b6f2254dfd545" translate="yes" xml:space="preserve">
          <source>In the web admin interface, the &lt;code&gt;Query Template&lt;/code&gt; dropdown was the only way to manage databases and &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt; (RP):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693df0877fd28d7e336b27c0565000c870358473" translate="yes" xml:space="preserve">
          <source>In the web admin interface, the &lt;code&gt;Query Template&lt;/code&gt; dropdown was the only way to manage users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83e9da6490c49d2d396596ed90c1a196040bbba" translate="yes" xml:space="preserve">
          <source>In the web admin interface, users chose the target database in the top right corner and selected from a set of query templates in the &lt;code&gt;Query Templates&lt;/code&gt; dropdown. The templates included queries with no user-provided values (example: &lt;a href=&quot;../../../../influxdb/v1.3/query_language/schema_exploration/index#show-measurements&quot;&gt;&lt;code&gt;SHOW MEASUREMENTS&lt;/code&gt;&lt;/a&gt;) and queries with user-provided values (example: &lt;a href=&quot;../../../../influxdb/v1.3/query_language/schema_exploration/index#show-tag-keys&quot;&gt;&lt;code&gt;SHOW TAG KEYS FROM &quot;&amp;lt;measurement_name&amp;gt;&quot;&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac6c8a33e7336a25beefe4527e0882d0cd67be5" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;MEAN(value)&lt;/code&gt; is a &lt;code&gt;MeanIterator&lt;/code&gt; wrapping an iterator from the underlying shards. However, if we can add an additional iterator to determine the derivative of the mean:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a9a925373df295467576642bc6bb164f09deb9" translate="yes" xml:space="preserve">
          <source>In this example, the 6pm hour is a preset bucket and the 7pm hour is a preset bucket. The average for the 6pm time bucket does not include data prior to 6:15pm because of the &lt;code&gt;WHERE&lt;/code&gt; time clause, but any data included in the average for the 6pm time bucket must occur in the 6pm hour. The same goes for the 7pm time bucket; any data included in the average for the 7pm time bucket must occur in the 7pm hour. The dotted lines show the points that make up each average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07cfcb47f3b3fcd7ac6ab61bb0f7db1fc4f6517" translate="yes" xml:space="preserve">
          <source>In this example, the user-specified &lt;a href=&quot;../../query_language/data_exploration/index#advanced-group-by-time-syntax&quot;&gt;offset interval&lt;/a&gt; shifts InfluxDB&amp;rsquo;s preset time buckets forward by &lt;code&gt;15&lt;/code&gt; minutes. The average for the 6pm time bucket now includes data between 6:15pm and 7pm, and the average for the 7pm time bucket includes data between 7:15pm and 8pm. The dotted lines show the points that make up each average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9d1ad79bb461339e626ac25add53ab6a9c93e1" translate="yes" xml:space="preserve">
          <source>In this example, we select the &lt;code&gt;telegraf&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; and the &lt;code&gt;autogen&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, the &lt;code&gt;cpu&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;, the &lt;code&gt;usage_idle&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field&quot;&gt;field&lt;/a&gt;, and no &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt;. The result is the InfluxQL &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#query&quot;&gt;query&lt;/a&gt; in the image below. Notice that Chronograf automatically sets a time range in the &lt;a href=&quot;../../../../influxdb/v1.3/query_language/data_exploration/index#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;. Don&amp;rsquo;t worry about that for now; we&amp;rsquo;ll discuss that time range in step four.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6274b97a03c3e5ee92df091a1ad13fd51a253aa" translate="yes" xml:space="preserve">
          <source>In version 1.3, the web admin interface is no longer available in InfluxDB. The interface does not run on port &lt;code&gt;8083&lt;/code&gt; and InfluxDB ignores the &lt;code&gt;[admin]&lt;/code&gt; section in the configuration file if that section is present. &lt;a href=&quot;../../../../chronograf/v1.3/index&quot;&gt;Chronograf&lt;/a&gt; replaces the web admin interface with improved tooling for querying data, writing data, and database management. See &lt;a href=&quot;../../../../chronograf/v1.3/guides/transition-web-admin-interface/index&quot;&gt;Chronograf&amp;rsquo;s transition guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7f0993cb1f6596f23041ab440581a266cb7dc7" translate="yes" xml:space="preserve">
          <source>In version 1.3, the web admin interface is no longer available in InfluxDB. The interface does not run on port &lt;code&gt;8083&lt;/code&gt; and InfluxDB ignores the &lt;code&gt;[admin]&lt;/code&gt; section in the configuration file if that section is present. &lt;a href=&quot;../../../chronograf/v1.3/index&quot;&gt;Chronograf&lt;/a&gt; replaces the web admin interface with improved tooling for querying data, writing data, and database management. See &lt;a href=&quot;../../../chronograf/v1.3/guides/transition-web-admin-interface/index&quot;&gt;Chronograf&amp;rsquo;s transition guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92da1c26f9cf4f4b5b56598398402195733538d" translate="yes" xml:space="preserve">
          <source>In versions 1.3.0-1.3.1, Chronograf doesn&amp;rsquo;t preserve the order of the items in the &lt;a href=&quot;../../../../influxdb/v1.3/query_language/data_exploration/index#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; in query editor mode. Chronograf may change the order of the items in the &lt;code&gt;SELECT&lt;/code&gt; clause after it executes the query and populates the cell with the query results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514c23047a063d12ae3fd39e1af964edb32211bf" translate="yes" xml:space="preserve">
          <source>In versions 1.3.1+, installing a new version of Chronograf automatically clears the localStorage settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771e5b5b30bb019288b864f098e939679bc01011" translate="yes" xml:space="preserve">
          <source>In versions 1.3.2.0+, Chronograf&amp;rsquo;s Data Explorer offers the same write functionality. To write data to InfluxDB, click the &lt;code&gt;Write Data&lt;/code&gt; icon at the top of the Data Explorer page and select your target database. Next, enter your line protocol in the main text box and click the &lt;code&gt;Write&lt;/code&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89df71507fec282436885cfbe960b6d25c671d60" translate="yes" xml:space="preserve">
          <source>In versions prior to 0.12, InfluxDB stores &lt;a href=&quot;../../concepts/glossary/index#metastore&quot;&gt;metastore&lt;/a&gt; information in &lt;code&gt;raft.db&lt;/code&gt; via the raft services. In versions 0.12+, InfluxDB stores metastore information in &lt;code&gt;meta.db&lt;/code&gt;, a binary protobuf file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8054f5d899aee553d998edbdcbe10892cf910da8" translate="yes" xml:space="preserve">
          <source>In versions prior to v1.3, &lt;a href=&quot;../../query_language/authentication_and_authorization/index#user-types-and-privileges&quot;&gt;non-admin users&lt;/a&gt; could not execute a &lt;code&gt;USE &amp;lt;database_name&amp;gt;&lt;/code&gt; query in the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt; even if they had &lt;code&gt;READ&lt;/code&gt; and/or &lt;code&gt;WRITE&lt;/code&gt; permissions on that database. Starting with version 1.3, non-admin users can execute the &lt;code&gt;USE &amp;lt;database_name&amp;gt;&lt;/code&gt; query for databases on which they have &lt;code&gt;READ&lt;/code&gt; and/or &lt;code&gt;WRITE&lt;/code&gt; permissions. See the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-can-a-non-admin-user-use-a-database-in-influxdb-s-cli&quot;&gt;FAQ page&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95dc87f3bba596cca07c8d5c8805c257dcc4a1c6" translate="yes" xml:space="preserve">
          <source>In versions prior to v1.3, &lt;a href=&quot;../../query_language/authentication_and_authorization/index#user-types-and-privileges&quot;&gt;non-admin users&lt;/a&gt; could not execute a &lt;code&gt;USE &amp;lt;database_name&amp;gt;&lt;/code&gt; query in the CLI even if they had &lt;code&gt;READ&lt;/code&gt; and/or &lt;code&gt;WRITE&lt;/code&gt; permissions on that database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f08010d1a6ac0065d74219ed4bff2dc867df05" translate="yes" xml:space="preserve">
          <source>In your account, under the Services tab, click &quot;Add New Service&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95871a7bb256afc59886a0e448b762a437149dd" translate="yes" xml:space="preserve">
          <source>In your home directory, create a sub-directory called &lt;code&gt;.chronograf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d15556d3d40b47a6fc6845d299382fa3d00682" translate="yes" xml:space="preserve">
          <source>In-Memory Index - The in-memory index is a shared index across shards that provides the quick access to &lt;a href=&quot;../glossary/index#measurement&quot;&gt;measurements&lt;/a&gt;, &lt;a href=&quot;../glossary/index#tags&quot;&gt;tags&lt;/a&gt;, and &lt;a href=&quot;../glossary/index#series&quot;&gt;series&lt;/a&gt;. The index is used by the engine, but is not specific to the storage engine itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2376da23faff67bfff4cc3eff3c99ea500ae1c" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;GROUP BY *&lt;/code&gt; in the CQ to preserve tags in the destination measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71257b115b5551936288f460ed0c77a420b785c2" translate="yes" xml:space="preserve">
          <source>Include IsRawQuery in the rewritten statement for meta queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ba222a59f2ec206a79b1f87dc07703b3384590" translate="yes" xml:space="preserve">
          <source>Include sysvinit-tools as an rpm dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c87c73384dc1db38be464e2c232d2e7dbd89ed6" translate="yes" xml:space="preserve">
          <source>Include timestamps in the data file. InfluxDB will assign the same timestamp to points without a timestamp. This can lead to unintended &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-does-influxdb-handle-duplicate-points&quot;&gt;overwrite behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc52f0d2cf27f332bd7857d9d0a7966710ae654d" translate="yes" xml:space="preserve">
          <source>Increase the query builder&amp;rsquo;s default height in cell editor mode and in the data explorer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6095a7452357930441c21b85b1256ee6134038bb" translate="yes" xml:space="preserve">
          <source>IncreaseCooldown</source>
          <target state="translated">IncreaseCooldown</target>
        </trans-unit>
        <trans-unit id="abf04aa1414bc00eebdbb35c30d972f0cae22db3" translate="yes" xml:space="preserve">
          <source>Increment gather_errors for all errors emitted by inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f4a66198f6fc6dbc6d3a9d80e134840a54dd1e" translate="yes" xml:space="preserve">
          <source>Increment the timestamp by a nanosecond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="a85304f77784f6fd0e605b22e21f9296ffa57baa" translate="yes" xml:space="preserve">
          <source>Index Optimization - When many level 4 TSM files accumulate, the internal indexes become larger and more costly to access. An index optimization compaction splits the series and indices across a new set of TSM files, sorting all points for a given series into one TSM file. Before an index optimization, each TSM file contained points for most or all series, and thus each contains the same series index. After an index optimzation, each TSM file contains points from a minimum of series and there is little series overlap between files. Each TSM file thus has a smaller unique series index, instead of a duplicate of the full series list. In addition, all points from a particular series are contiguous in a TSM file rather than spread across multiple TSM files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5345c1a1404f6acf2cfb125339468b7143ba98" translate="yes" xml:space="preserve">
          <source>Indicates an alert should trigger only if all points in a batch match the criteria. Does not apply to stream alerts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d0d5b10dbfd07992363048bd30c9649f07e993" translate="yes" xml:space="preserve">
          <source>Indicates whether the alert level changed with this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e564d552891652a3c306b78513fbf36ba600d76d" translate="yes" xml:space="preserve">
          <source>Inequalities</source>
          <target state="translated">Inequalities</target>
        </trans-unit>
        <trans-unit id="8a5405c142ca75b5b3a845575d8344f64391e899" translate="yes" xml:space="preserve">
          <source>Influent</source>
          <target state="translated">Influent</target>
        </trans-unit>
        <trans-unit id="8ddd6662a624171e692019384fcb27c18c705da4" translate="yes" xml:space="preserve">
          <source>Influx Configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6851df5337ee88f086eecff2aceffff08eac1e1c" translate="yes" xml:space="preserve">
          <source>Influx Inspect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d008245303112766f099b576d75b4a3466dd9ab" translate="yes" xml:space="preserve">
          <source>Influx Inspect is a tool designed to view detailed information about on disk shards, as well as export data from a shard to &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt; that can be inserted back into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4ada593953775960e6a781812c67b0014d35c3" translate="yes" xml:space="preserve">
          <source>Influx Inspect is a tool designed to view detailed information about on disk shards, as well as export data from a shard to line protocol that can be inserted back into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca14758a47be547f79f71a1caeb458508fe78dc" translate="yes" xml:space="preserve">
          <source>Influx parser: parse line-protocol without newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1571417a318ec415ae577f367e31bacb8ca641d2" translate="yes" xml:space="preserve">
          <source>Influx:</source>
          <target state="translated">Influx:</target>
        </trans-unit>
        <trans-unit id="9f7c854197e661a6800daddc6a8b6911d9a29a38" translate="yes" xml:space="preserve">
          <source>InfluxDB</source>
          <target state="translated">InfluxDB</target>
        </trans-unit>
        <trans-unit id="a771c1cbf379dc790268c2bc4695f61b63cc3e27" translate="yes" xml:space="preserve">
          <source>InfluxDB + Telegraf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eef661a9b2a3568408cf53f7128703d66c5ab41" translate="yes" xml:space="preserve">
          <source>InfluxDB Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261e6aef0dca83c0fd0d7e52c154e480769cd665" translate="yes" xml:space="preserve">
          <source>InfluxDB Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6ccb03f8ffc9eef98019d29d5edd08d06dab46" translate="yes" xml:space="preserve">
          <source>InfluxDB Line Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab639279ec47761e668647088ea84220ea0120d" translate="yes" xml:space="preserve">
          <source>InfluxDB Output Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acbd9c3c8a49ddcec1535f1035b8294301a2be4" translate="yes" xml:space="preserve">
          <source>InfluxDB Python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e20a8a71c9b465c02f693318ef991c6a4330ad" translate="yes" xml:space="preserve">
          <source>InfluxDB Ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a36be44d3343adab59ce9a4477ca2e0e72123e3" translate="yes" xml:space="preserve">
          <source>InfluxDB Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa95661205d9b0763bfcc9facfdd614ee284220c" translate="yes" xml:space="preserve">
          <source>InfluxDB accepts writes over &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/udp/README.md&quot;&gt;UDP&lt;/a&gt; and provides an easy way to set up &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/graphite/README.md&quot;&gt;Graphite&lt;/a&gt;, &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/collectd/README.md&quot;&gt;CollectD&lt;/a&gt;, and &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/services/opentsdb/README.md&quot;&gt;OpenTSDB&lt;/a&gt; as input sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d3461169fd4ec9ebba6cca7c3b6b353efccbb1" translate="yes" xml:space="preserve">
          <source>InfluxDB also recognizes that your &lt;a href=&quot;../glossary/index#schema&quot;&gt;schema&lt;/a&gt; preferences may change over time. In InfluxDB you don&amp;rsquo;t have to define schemas up front. Data points can have one of the fields on a measurement, all of the fields on a measurement, or any number in-between. You can add new fields to a measurement simply by writing a point for that new field. If you need an explanation of the terms measurements, tags, and fields check out the next section for an SQL database to InfluxDB terminology crosswalk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c16ce6b37fb9d184626e204159131edbb117c8" translate="yes" xml:space="preserve">
          <source>InfluxDB also writes statistical and diagnostic information to database named &lt;code&gt;_internal&lt;/code&gt;, which records metrics on the internal runtime and service performance. The &lt;code&gt;_internal&lt;/code&gt; database can be queried and manipulated like any other InfluxDB database. Check out the &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/monitor/README.md&quot;&gt;monitor service README&lt;/a&gt; and the &lt;a href=&quot;https://influxdb.com/blog/2015/09/22/monitoring_internal_show_stats.html&quot;&gt;internal monitoring blog post&lt;/a&gt; for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a631c4eddda0f2776fc01997147ec90afa1aeca" translate="yes" xml:space="preserve">
          <source>InfluxDB assumes that all double quoted field values are strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a23ec2033fe215fdf3aa601972c5590a7168109" translate="yes" xml:space="preserve">
          <source>InfluxDB calculates the area under the curve for subsequent field values and converts those results into the summed area per &lt;code&gt;unit&lt;/code&gt;. The &lt;code&gt;unit&lt;/code&gt; argument is an integer followed by a &lt;a href=&quot;../spec/index#literals&quot;&gt;duration literal&lt;/a&gt; and it is optional. If the query does not specify the &lt;code&gt;unit&lt;/code&gt;, the unit defaults to one second (&lt;code&gt;1s&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f96995a7d8fc1dacf0ff41247430f89d39c2d5" translate="yes" xml:space="preserve">
          <source>InfluxDB calculates the difference between subsequent field values and converts those results into the rate of change per &lt;code&gt;unit&lt;/code&gt;. The &lt;code&gt;unit&lt;/code&gt; argument is an integer followed by a &lt;a href=&quot;../spec/index#literals&quot;&gt;duration literal&lt;/a&gt; and it is optional. If the query does not specify the &lt;code&gt;unit&lt;/code&gt; the unit defaults to one second (&lt;code&gt;1s&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6bf9f560587390798fe1ca525cc0c975dd8f51" translate="yes" xml:space="preserve">
          <source>InfluxDB calculates the difference between subsequent field values and converts those results into the rate of change per &lt;code&gt;unit&lt;/code&gt;. The &lt;code&gt;unit&lt;/code&gt; argument is an integer followed by a &lt;a href=&quot;../spec/index#literals&quot;&gt;duration literal&lt;/a&gt; and it is optional. If the query does not specify the &lt;code&gt;unit&lt;/code&gt;, the unit defaults to one second (&lt;code&gt;1s&lt;/code&gt;). &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; returns only positive rates of change or rates of change that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241e7b246b1cb76c25cebcf655140b78ff1351db" translate="yes" xml:space="preserve">
          <source>InfluxDB calculates the difference between subsequent timestamps. The &lt;code&gt;unit&lt;/code&gt; option is an integer followed by a &lt;a href=&quot;../spec/index#literals&quot;&gt;duration literal&lt;/a&gt; and it determines the unit of the returned difference. If the query does not specify the &lt;code&gt;unit&lt;/code&gt; option the query returns the difference between timestamps in nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c29c9c73268a5102cc56e6dfb9ca3b786652f8" translate="yes" xml:space="preserve">
          <source>InfluxDB can display statistical and diagnostic information about each node. This information can be very useful for troubleshooting and performance monitoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ff87f0b4feca098a22ab2899014e59aac378b8" translate="yes" xml:space="preserve">
          <source>InfluxDB can handle hundreds of thousands of data points per second. Working with that much data over a long period of time can create storage concerns. A natural solution is to downsample the data; keep the high precision raw data for only a limited time, and store the lower precision, summarized data for much longer or forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f68e5a4930f736439d2f81a7db5e9964eefe453" translate="yes" xml:space="preserve">
          <source>InfluxDB does not accept the following query with a &lt;code&gt;HAVING&lt;/code&gt; clause. The query calculates the average number of &lt;code&gt;bees&lt;/code&gt; at &lt;code&gt;30&lt;/code&gt; minute intervals and requests averages that are greater than &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e16b67cc26c7e0f8fd766eb89ff6c029177951" translate="yes" xml:space="preserve">
          <source>InfluxDB does not accept the following query with a nested function. The query calculates the number of non-null values of &lt;code&gt;bees&lt;/code&gt; at &lt;code&gt;30&lt;/code&gt; minute intervals and the average of those counts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35395f423e9629a856114c5c72b85b307530959" translate="yes" xml:space="preserve">
          <source>InfluxDB does not support combining mathematical operations with a wildcard (&lt;code&gt;*&lt;/code&gt;) or &lt;a href=&quot;../data_exploration/index#regular-expressions&quot;&gt;regular expression&lt;/a&gt; in the &lt;code&gt;SELECT&lt;/code&gt; clause. The following queries are invalid and the system returns an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13711791c236aeb757eb89f2adc1c0783fda699" translate="yes" xml:space="preserve">
          <source>InfluxDB fields (&lt;code&gt;#_foodships&lt;/code&gt;) are like unindexed columns in an SQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb92fbb11fd7f0f9a0fb46b31700eb919ff1330" translate="yes" xml:space="preserve">
          <source>InfluxDB first checks for the &lt;code&gt;-config&lt;/code&gt; option and then for the environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afb9a119e2c160ca8c2593160ea823f2fb62afb" translate="yes" xml:space="preserve">
          <source>InfluxDB first performs the subquery. The subquery calculates &lt;code&gt;MEAN()&lt;/code&gt; values of &lt;code&gt;water_level&lt;/code&gt; from &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; through &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt; and groups the results into 12-minute intervals. It also names the output column &lt;code&gt;all_the_means&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5629c0e1b16a56f276bf2553ccfc50387a631c50" translate="yes" xml:space="preserve">
          <source>InfluxDB first performs the subquery. The subquery calculates the derivative of average &lt;code&gt;water_level&lt;/code&gt; values taken at 12-minute intervals. It performs that calculation for each tag value of &lt;code&gt;location&lt;/code&gt; and names the output column &lt;code&gt;water_level_derivative&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3963d78005799e51e45f81767e1ea476a98952ec" translate="yes" xml:space="preserve">
          <source>InfluxDB first performs the subquery. The subquery calculates the difference between the values in the &lt;code&gt;cats&lt;/code&gt; field and the values in the &lt;code&gt;dogs&lt;/code&gt; field, and it names the output column &lt;code&gt;difference&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1446b2ca4c85f47d291b5d53c979e2c50e09fe" translate="yes" xml:space="preserve">
          <source>InfluxDB first performs the subquery; it calculates the maximum value of &lt;code&gt;water_level&lt;/code&gt; for each tag value of &lt;code&gt;location&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e6e0403c27c680121d3594e7815ea8856f9a6f" translate="yes" xml:space="preserve">
          <source>InfluxDB has the ability to snapshot an instance at a point-in-time and restore it. All backups are full backups. InfluxDB does not yet support incremental backups. There are two types of data to backup, the metastore and the metrics themselves. The &lt;a href=&quot;../../concepts/glossary/index#metastore&quot;&gt;metastore&lt;/a&gt; is backed up in its entirety. The metrics are backed up per-database in a separate operation from the metastore backup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7e281ce0e24e2d3e2ac706874edaabe3552ec6" translate="yes" xml:space="preserve">
          <source>InfluxDB is a database that has been optimized for time series data. This data commonly comes from sources like distributed sensor groups, click data from large websites, or lists of financial transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87edca686833f044f972e522805781686c191cae" translate="yes" xml:space="preserve">
          <source>InfluxDB is a schemaless database. You can add new measurements, tags, and fields at any time. Note that if you attempt to write data with a different type than previously used (for example, writing a string to a field that previously accepted integers), InfluxDB will reject those data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1207ad7d4bb4c4ec2910ad1ef79eb2c83f10d0" translate="yes" xml:space="preserve">
          <source>InfluxDB is a time series database so it makes sense to start with what is at the root of everything we do: time. In the data above there&amp;rsquo;s a column called &lt;code&gt;time&lt;/code&gt; - all data in InfluxDB have that column. &lt;code&gt;time&lt;/code&gt; stores timestamps, and the &lt;em&gt;timestamp&lt;/em&gt; shows the date and time, in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339&lt;/a&gt; UTC, associated with particular data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4022c44be1b4ca086ea929f46414a3d559eb93b0" translate="yes" xml:space="preserve">
          <source>InfluxDB is a time-series database. Optimizing for this use-case entails some tradeoffs, primarily to increase performance at the cost of functionality. Below is a list of some of those design insights that lead to tradeoffs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73df353d3c924ac48c266eecabcf14c1a0810a5a" translate="yes" xml:space="preserve">
          <source>InfluxDB is designed to run on SSDs. InfluxData does not test on HDDs or networked storage devices, and we do not recommend them for production. Performance is an order of magnitude lower on spinning disk drives and the system may break down under even moderate load. For best results InfluxDB servers must have at least 1000 IOPS on the storage system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99add3fd04b614e73fe3f11eb1011c4b3e3e30aa" translate="yes" xml:space="preserve">
          <source>InfluxDB is designed to work with time-series data. SQL databases can handle time-series but weren&amp;rsquo;t created strictly for that purpose. In short, InfluxDB is made to store a large volume of time-series data and perform real-time analysis on those data, quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17fbb3bfb28f7991435f1eb0d913e1914c0cc67" translate="yes" xml:space="preserve">
          <source>InfluxDB is part of the FreeBSD package system. It can be installed by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46826c0b878010bae49ff1a817f930682efcfc7" translate="yes" xml:space="preserve">
          <source>InfluxDB maintains an in-memory index of every &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; in the system. As the number of unique series grows, so does the RAM usage. High &lt;a href=&quot;../../concepts/glossary/index#series-cardinality&quot;&gt;series cardinality&lt;/a&gt; can lead to the operating system killing the InfluxDB process with an out of memory (OOM) exception. See &lt;a href=&quot;#querying-for-series-cardinality&quot;&gt;Querying for series cardinality&lt;/a&gt; to learn how to query for series cardinality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c73a3864528b8fed3d8535e73f0d756b2575b96" translate="yes" xml:space="preserve">
          <source>InfluxDB must be restarted to pick up any changes to &lt;code&gt;/etc/default/influxdb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9175bccd04e8e9d5f7d7763b5dc6f37505a3821" translate="yes" xml:space="preserve">
          <source>InfluxDB now supports the nanosecond (&lt;code&gt;ns&lt;/code&gt;) duration literal. The query below uses a &lt;a href=&quot;../../query_language/data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; to group &lt;a href=&quot;../../query_language/functions/index#mean&quot;&gt;averages&lt;/a&gt; into &lt;code&gt;1000000000&lt;/code&gt; nanosecond buckets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e870b9d06f9254e2615c321139e9d20802af2a" translate="yes" xml:space="preserve">
          <source>InfluxDB offers two features - Continuous Queries (CQ) and Retention Policies (RP) - that automate the process of downsampling data and expiring old data. This guide describes a practical use case for CQs and RPs and covers how to set up those features in InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d529265c2e05bc7b2e62c3628c22f4a4895540e" translate="yes" xml:space="preserve">
          <source>InfluxDB only keeps data in the &lt;code&gt;chronograf&lt;/code&gt; database that fall within that new duration; the system automatically deletes any data with timestamps that occur before the duration setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de856e4cabe0f523e3c9b1e45dae441f3179d9c4" translate="yes" xml:space="preserve">
          <source>InfluxDB output: fix field type conflict blocking output buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2ec9e0302d946ee11f00e52db14e2068082b12" translate="yes" xml:space="preserve">
          <source>InfluxDB performs the subquery first and the main query second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73e04b9a5ece9e50ebe5846a57e511a8a5ddd34" translate="yes" xml:space="preserve">
          <source>InfluxDB points (for example, &lt;code&gt;2015-04-16T12:00:00Z   5&lt;/code&gt;) are similar to SQL rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d0d35a2c92575358f85f627bcd22b9315423c4" translate="yes" xml:space="preserve">
          <source>InfluxDB returns &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;unit&lt;/code&gt; option is greater than the difference between the timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50466ac9a250c81ed6cc460071666be09b10acc" translate="yes" xml:space="preserve">
          <source>InfluxDB returns JSON. The results of your query appear in the &lt;code&gt;&quot;results&quot;&lt;/code&gt; array. If an error occurs, InfluxDB sets an &lt;code&gt;&quot;error&quot;&lt;/code&gt; key with an explanation of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d225c25f0907e6d63481695027dcdbc587aab65" translate="yes" xml:space="preserve">
          <source>InfluxDB returns no data if the query attempts to cast an integer or float to a string or boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3df51a26f640270feab9cc88efc5413d4b08c9" translate="yes" xml:space="preserve">
          <source>InfluxDB should be run on locally attached SSDs. Any other storage configuration will have lower performance characteristics and may not be able to recover from even small interruptions in normal processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb981dc0d43b9c81f330f710d3a1bcbd9da243e" translate="yes" xml:space="preserve">
          <source>InfluxDB should do a partial write on mismatched type errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df16b488f572d265d36ca410135025c5ca3c7d71" translate="yes" xml:space="preserve">
          <source>InfluxDB single node instances are fully open source. InfluxDB clustering requires our closed-source commercial product. Single node instances offer no redundancy. If the server is unavailable, writes and queries will fail immediately. Clustering offers high-availability and redundancy. Multiple copies of data are distributed across multiple servers, and the loss of any one server will not significantly impact the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10545cd75f8af05d40ee915fcf60a85f0709e67" translate="yes" xml:space="preserve">
          <source>InfluxDB stores all integers as signed int64 data types. The minimum and maximum valid values for int64 are &lt;code&gt;-9023372036854775808&lt;/code&gt; and &lt;code&gt;9023372036854775807&lt;/code&gt;. See &lt;a href=&quot;http://golang.org/pkg/builtin/#int64&quot;&gt;Go builtins&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf13de4fc04070684f14e817392bebc70ee756bc" translate="yes" xml:space="preserve">
          <source>InfluxDB stores all timestamps as nanosecond values regardless of the write precision supplied. It is important to note that when returning query results, the database silently drops trailing zeros from timestamps which obscures the initial write precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f738d7a08d63e74149eb3d1ea240a94824ff9a67" translate="yes" xml:space="preserve">
          <source>InfluxDB stores data in shard groups. A single shard group covers a specific time interval; InfluxDB determines that time interval by looking at the &lt;code&gt;DURATION&lt;/code&gt; of the relevant retention policy (RP). The table below outlines the default relationship between the &lt;code&gt;DURATION&lt;/code&gt; of an RP and the time interval of a shard group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea03a8bd5902828056bc6ba221d513080ccf900" translate="yes" xml:space="preserve">
          <source>InfluxDB stores data in shard groups. Shard groups are organized by &lt;a href=&quot;../glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; (RP) and store data with timestamps that fall within a specific time interval. The length of that time interval is called the &lt;a href=&quot;../glossary/index#shard-duration&quot;&gt;shard group duration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea820d669a4bbf9a25ecbec286708d40463d5a7" translate="yes" xml:space="preserve">
          <source>InfluxDB supports field values specified in scientific notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1234722eab0389d35803df31690e802479246693" translate="yes" xml:space="preserve">
          <source>InfluxDB tags ( &lt;code&gt;park_id&lt;/code&gt; and &lt;code&gt;planet&lt;/code&gt;) are like indexed columns in an SQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1121c903f501d57d16f4ff96dac4d6df3e0c529" translate="yes" xml:space="preserve">
          <source>InfluxDB users are either admin users or non-admin users. See InfluxDB&amp;rsquo;s &lt;a href=&quot;../../../../influxdb/v1.3/query_language/authentication_and_authorization/index#user-types-and-privileges&quot;&gt;authentication and authorization&lt;/a&gt; documentation for more information about those user types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781c14a45903243a1c3c8a639344607ebbbdb9f4" translate="yes" xml:space="preserve">
          <source>InfluxDB uses HTTP solely as a convenient and widely supported data transfer protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cdb0b2f1d330d86d60fe638106960bc2337924" translate="yes" xml:space="preserve">
          <source>InfluxDB uses a host&amp;rsquo;s local time in UTC to assign timestamps to data and for coordination purposes. Use the Network Time Protocol (NTP) to synchronize time between hosts; if hosts&amp;rsquo; clocks aren&amp;rsquo;t synchronized with NTP, the timestamps on the data written to InfluxDB can be inaccurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c2c78e4f7e60042f770d1b4cf2cbb6d764f9e9" translate="yes" xml:space="preserve">
          <source>InfluxDB uses port &lt;code&gt;8088&lt;/code&gt; for remote &lt;a href=&quot;../backup_and_restore/index&quot;&gt;backups and restores&lt;/a&gt;. We highly recommend closing that port and, if performing a remote backup, giving specific permission only to the remote machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35b2970ccfa62b3d7db77fb37d82afb28f58dd5" translate="yes" xml:space="preserve">
          <source>InfluxDB uses preset round-number time boundaries for &lt;code&gt;GROUP BY&lt;/code&gt; intervals that are independent of any time conditions in the &lt;code&gt;WHERE&lt;/code&gt; clause. When it calculates the results, all returned data must occur within the query&amp;rsquo;s explicit time range but the &lt;code&gt;GROUP BY&lt;/code&gt; intervals will be based on the preset time boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81a1ac80ffd0f58553e0f957d59e9a66ed3efa2" translate="yes" xml:space="preserve">
          <source>InfluxDB version 1.3 introduces two new functions and updates the behavior for the existing &lt;code&gt;TOP()&lt;/code&gt; and &lt;code&gt;BOTTOM()&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debebd8aab0035e5385851a4e8969f89d127ffde" translate="yes" xml:space="preserve">
          <source>InfluxDB will create a &lt;a href=&quot;../glossary/index#shard&quot;&gt;shard&lt;/a&gt; for each block of time. For example, if you have a &lt;a href=&quot;../glossary/index#retention-policy&quot;&gt;retention policy&lt;/a&gt; with an unlimited duration, shards will be created for each 7 day block of time. Each of these shards maps to an underlying storage engine database. Each of these databases has its own &lt;a href=&quot;../glossary/index#wal-write-ahead-log&quot;&gt;WAL&lt;/a&gt; and TSM files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a852f9dbe2a8f42eb8dc22dcce992fd8b9a149" translate="yes" xml:space="preserve">
          <source>InfluxDB will enforce authentication once there is an admin user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f128bed06a8ef241fe632b8821b3e7b770abca86" translate="yes" xml:space="preserve">
          <source>InfluxDB writes log output, by default, to &lt;code&gt;stderr&lt;/code&gt;. Depending on your use case, this log information can be written to another location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8e4398595be3687cb6afb53005cc205f623798" translate="yes" xml:space="preserve">
          <source>InfluxDB writes to the &lt;code&gt;DEFAULT&lt;/code&gt; RP if we do not supply an explicit RP when writing a point to the database. We make the &lt;code&gt;DEFAULT&lt;/code&gt; RP keep data for two hours, because we want InfluxDB to automatically write the incoming ten-second resolution data to that RP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5180659d5a0596b0e22fa497965ed0698e96878" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s Command Line Interface (&lt;code&gt;influx&lt;/code&gt;) is an interactive shell for the HTTP API that comes with every InfluxDB package. Use &lt;code&gt;influx&lt;/code&gt; to write data (manually or from a file), query data interactively, and view query output in different formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0346480aeeea8f034ac896ce8c71968e1c73fcf2" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s HTTP API and the &lt;a href=&quot;../../tools/shell/index&quot;&gt;command line interface&lt;/a&gt; (CLI), which connects to the database using the API, include simple, built-in authentication based on user credentials. When you enable authentication InfluxDB only executes HTTP requests that are sent with valid credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188226b99d8ab4abb9f4271b6d26579ee488daf0" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s Line Protocol is a text based format for writing points to InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b241424b269baab8be63a09bb363e3e8fe2031ba" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s Line Protocol is a text based format for writing points to the database. Points must be in Line Protocol format for InfluxDB to successfully parse and write points (unless you&amp;rsquo;re using a &lt;a href=&quot;../../tools/index#service-plugins&quot;&gt;service plugin&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddc297d9ec259df36660705e76e35604c248ba1" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s command line interface (&lt;code&gt;influx&lt;/code&gt;) is an interactive shell for the HTTP API. Use &lt;code&gt;influx&lt;/code&gt; to write data (manually or from a file), query data interactively, and view query output in different formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0924a9656cc7ad7b384ab40b91f43b1b97b2cb" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s line protocol relies on line feed (&lt;code&gt;\n&lt;/code&gt;, which is ASCII &lt;code&gt;0x0A&lt;/code&gt;) to indicate the end of a line and the beginning of a new line. Files or data that use a newline character other than &lt;code&gt;\n&lt;/code&gt; will result in the following errors: &lt;code&gt;bad timestamp&lt;/code&gt;, &lt;code&gt;unable to parse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34ddd4c8ba2c13603633f0df36fc61f3ad32194" translate="yes" xml:space="preserve">
          <source>InfluxDB&amp;rsquo;s metastore contains internal information about the status of the system, including user information, database/shard metadata, CQs, RPs, and subscriptions. While a node is running, you can create a backup of your instance&amp;rsquo;s metastore by running the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3327f4c78a877ead3194de771182cba532e2b276" translate="yes" xml:space="preserve">
          <source>InfluxDB/InfluxEnterprise cluster (required)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba07e6f318fdd54f210e8f60b3c5371401cd96f9" translate="yes" xml:space="preserve">
          <source>InfluxDB: About the Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314eaab95e555a8ac382ea12bc9bb227cb20ad11" translate="yes" xml:space="preserve">
          <source>InfluxDB: Administration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0009c020eebc3647556aecda3b8ba21c204fd711" translate="yes" xml:space="preserve">
          <source>InfluxDB: Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5aa48e27ab73bf0cab9d5bcaf38db8b8d222d61" translate="yes" xml:space="preserve">
          <source>InfluxDB: High Availability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffe404d94aaaedbf3623f85b598b2e3b9889c64" translate="yes" xml:space="preserve">
          <source>InfluxDB: Query Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fc864b55c1886cc61937d8645d7df9d71b4f6c" translate="yes" xml:space="preserve">
          <source>InfluxDB: Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39afee3a98526e9d6b8f09051a43e10821c738fe" translate="yes" xml:space="preserve">
          <source>InfluxDB: Troubleshooting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a006905f07fcd37263332769a16f7d980e715090" translate="yes" xml:space="preserve">
          <source>InfluxDB: Write Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc639531eb1c8af8a0fd0393823ae6480828740" translate="yes" xml:space="preserve">
          <source>InfluxDBOut</source>
          <target state="translated">InfluxDBOut</target>
        </trans-unit>
        <trans-unit id="769eac389ac94288e1060464394a752d1c022d0d" translate="yes" xml:space="preserve">
          <source>InfluxDBOutNode</source>
          <target state="translated">InfluxDBOutNode</target>
        </trans-unit>
        <trans-unit id="e4c7a33892f8a42983549fc592f142fd767323c8" translate="yes" xml:space="preserve">
          <source>InfluxData</source>
          <target state="translated">InfluxData</target>
        </trans-unit>
        <trans-unit id="14ad6da067d3154609f23bb597645fab4e3c2963" translate="yes" xml:space="preserve">
          <source>InfluxData Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f55ea585e1ea4bc0a2cfd428b9ff3baf235418" translate="yes" xml:space="preserve">
          <source>InfluxData, the company, relies on reported data from running nodes primarily to track the adoption rates of different InfluxDB versions. This data helps InfluxData support the continuing development of InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce3cff0dc6f18b05f1a61b0d4df9bcd91cb5b67" translate="yes" xml:space="preserve">
          <source>InfluxEnterprise Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d85aaa1ab1fc1ace47bfd1bbe18d883fe8d2517" translate="yes" xml:space="preserve">
          <source>InfluxEnterprise User Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c4ad8ce17bd32d3d763cb5a914a581c044a376" translate="yes" xml:space="preserve">
          <source>InfluxEnterprise offers high availability and a highly-scalable clustering solution for your time-series data needs. Learn how to use Chronograf to assess your cluster&amp;rsquo;s health and monitor the infrastructure behind your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cf5c197676a46bd1741dfdaeaa916ad7da0d05" translate="yes" xml:space="preserve">
          <source>InfluxQL</source>
          <target state="translated">InfluxQL</target>
        </trans-unit>
        <trans-unit id="4ae1b77e232c816aa5e71a94fa63435464fa825b" translate="yes" xml:space="preserve">
          <source>InfluxQL Keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f40764b0c4df0ba66a36e16b5f8049395c3980" translate="yes" xml:space="preserve">
          <source>InfluxQL Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622a41107b3a4b54c9c0666d7aec54374fa18979" translate="yes" xml:space="preserve">
          <source>InfluxQL Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b450c12eea5de2b6d7795818302beffdfa916a" translate="yes" xml:space="preserve">
          <source>InfluxQL Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da530f7cf31652487dec289588d3ab695faec236" translate="yes" xml:space="preserve">
          <source>InfluxQL Tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45dfb942470c217e99d9786087835084a8be96a" translate="yes" xml:space="preserve">
          <source>InfluxQL Updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5c6293d46827e6c5520b2ccfeb6043620d0505" translate="yes" xml:space="preserve">
          <source>InfluxQL aggregations, selectors, and transformations. See &lt;a href=&quot;../../query_language/functions/index&quot;&gt;InfluxQL Functions&lt;/a&gt; for a complete list of InfluxQL functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9915057a5f9d57923f82d7c6db5144bb9defc" translate="yes" xml:space="preserve">
          <source>InfluxQL also supports regular expressions, arithmetic in expressions, &lt;code&gt;SHOW&lt;/code&gt; statements, and &lt;code&gt;GROUP BY&lt;/code&gt; statements. See our &lt;a href=&quot;../../query_language/data_exploration/index&quot;&gt;data exploration&lt;/a&gt; page for an in-depth discussion of those topics. InfluxQL functions include &lt;code&gt;COUNT&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;MAX&lt;/code&gt;, &lt;code&gt;MEDIAN&lt;/code&gt;, &lt;code&gt;DERIVATIVE&lt;/code&gt; and more. For a full list check out the &lt;a href=&quot;../../query_language/functions/index&quot;&gt;functions&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8637c2ebb173bd391dc68c7a9d72571306c296" translate="yes" xml:space="preserve">
          <source>InfluxQL and SQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d111ba9a8f23d1b0b101492e92241d4d5ec5d3e" translate="yes" xml:space="preserve">
          <source>InfluxQL does not support &lt;a href=&quot;https://en.wikipedia.org/wiki/Having_(SQL)&quot;&gt;&lt;code&gt;HAVING&lt;/code&gt; clauses&lt;/a&gt;. Get the same functionality by creating a CQ to aggregate the data and querying the CQ results to apply the &lt;code&gt;HAVING&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a980e765916df1139a52fd93b3a9812e39391105" translate="yes" xml:space="preserve">
          <source>InfluxQL does not support multiple &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; statements&lt;/a&gt; per subquery:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef2c2cdf9653df01ca762f7120e0057eeff0322" translate="yes" xml:space="preserve">
          <source>InfluxQL does not support the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9b7c5df0f8a5f82b2bcd8ce0a8966308a9b8f0" translate="yes" xml:space="preserve">
          <source>InfluxQL has many &lt;a href=&quot;../../query_language/spec/index&quot;&gt;features and keywords&lt;/a&gt; that are not covered here, including support for Go-style regex. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ab7afe5f4a7e8085b3e14b4890e7c88545c547" translate="yes" xml:space="preserve">
          <source>InfluxQL is Unicode text encoded in &lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot;&gt;UTF-8&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2651b0a001d46c67f8ff1ca77300297719b260" translate="yes" xml:space="preserve">
          <source>InfluxQL is a SQL-like query language for interacting with InfluxDB. It has been lovingly crafted to feel familiar to those coming from other SQL or SQL-like environments while providing features specific to storing and analyzing time series data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3488c4e3e0020eeb418427db0fa43ecedebba44" translate="yes" xml:space="preserve">
          <source>InfluxQL is an SQL-like query language for interacting with InfluxDB. It has been lovingly crafted to feel familiar to those coming from other SQL or SQL-like environments while also providing features specific to storing and analyzing time series data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ec0801ca5c080f9bbec8b09600c9b899d9414" translate="yes" xml:space="preserve">
          <source>InfluxQL is an SQL-like query language for interacting with data in InfluxDB. The following sections cover useful query syntax for exploring your &lt;a href=&quot;../../concepts/glossary/index#schema&quot;&gt;schema&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0af540d481c90525ac687d1361294a5558260b0" translate="yes" xml:space="preserve">
          <source>InfluxQL is an SQL-like query language for interacting with data in InfluxDB. The following sections detail InfluxQL&amp;rsquo;s &lt;code&gt;SELECT&lt;/code&gt; statement and useful query syntax for exploring your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3414b225429e3cc9268db8f93e5574c839a93de7" translate="yes" xml:space="preserve">
          <source>InfluxQL offers a full suite of administrative commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463dd764da520f88cf6f8419282187e8269bd248" translate="yes" xml:space="preserve">
          <source>InfluxQL query string is tokenized and then parsed into an abstract syntax tree (AST). This is the code representation of the query itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31a606a5711151dd2425078360aa12592dbe553" translate="yes" xml:space="preserve">
          <source>InfluxQL reference date time: January 2nd, 2006 at 3:04:05 PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1e223f25cfe43e3ca61e9486e76d4b0dbccb44" translate="yes" xml:space="preserve">
          <source>InfluxQL supports &lt;a href=&quot;../data_exploration/index#subqueries&quot;&gt;subqueries&lt;/a&gt; which offer similar functionality to using mathematical operators inside a function call. See &lt;a href=&quot;../data_exploration/index#subqueries&quot;&gt;Data Exploration&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7958ddd938b8a874597c0e0d2efe1b1191ef429" translate="yes" xml:space="preserve">
          <source>InfluxQL supports decimal integer literals. Hexadecimal and octal literals are not currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eadfa56e445113237bc4f750c49aa08155bef38" translate="yes" xml:space="preserve">
          <source>InfluxQL supports floating-point literals. Exponents are not currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cf00952e25cfac8e669b5d9560f573fe5714e4" translate="yes" xml:space="preserve">
          <source>InfluxQL supports multiple nested subqueries per main query. Sample syntax for multiple subqueries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d9fa7924569dd4c84d3ab751df2cff4a04f760" translate="yes" xml:space="preserve">
          <source>InfluxQL supports multiple nested subqueries per main query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743e07392c21c7a58d273758babb6cf24f6297df" translate="yes" xml:space="preserve">
          <source>InfluxQL supports using regular expressions when specifying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d888e44ccc28a5352ccf9da64dd016006528cd" translate="yes" xml:space="preserve">
          <source>InfluxQL&amp;rsquo;s &lt;code&gt;SELECT&lt;/code&gt; statement follows the form of an SQL &lt;code&gt;SELECT&lt;/code&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6c73c47a68d42366313a16174bf64d0a0ba9b0" translate="yes" xml:space="preserve">
          <source>InfluxQL&amp;rsquo;s new time zone clause returns the UTC offset for the specified timezone. The query below returns the UTC offset for Chicago&amp;rsquo;s time zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e7a7e076c20628609ce9a4a534fec50a544ad2" translate="yes" xml:space="preserve">
          <source>InfluxQLNode</source>
          <target state="translated">InfluxQLNode</target>
        </trans-unit>
        <trans-unit id="4b631f69842530d659306c8f06dbad594a6b1807" translate="yes" xml:space="preserve">
          <source>Info</source>
          <target state="translated">Info</target>
        </trans-unit>
        <trans-unit id="2e8903f1b60315d3b1d9b86de34e1f4cd93bf373" translate="yes" xml:space="preserve">
          <source>InfoReset</source>
          <target state="translated">InfoReset</target>
        </trans-unit>
        <trans-unit id="e995cab3c18036ef8fc32f4b0bc9fdca14b0114b" translate="yes" xml:space="preserve">
          <source>Information about the config file &lt;code&gt;influx.conf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b98ae8e021b043349b2099b142d62e520c3e8d8" translate="yes" xml:space="preserve">
          <source>Information about upgrading from previous versions of InfluxDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716c8686972c617c66d090c7e64f967ac881e88a" translate="yes" xml:space="preserve">
          <source>Information on how to direct InfluxDB log output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459832b8e2cdc23fbd88fd21a55350c19ca9d97d" translate="yes" xml:space="preserve">
          <source>Inital release of InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7542358957d07a161431f63b12d3ab0813e4a8" translate="yes" xml:space="preserve">
          <source>Initial data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba75bb10d7add18cbc5c9a7ca3a76ea049a2e2f" translate="yes" xml:space="preserve">
          <source>Input Config: fieldpass and fielddrop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b086f52561fbcb24f10e0d4f37f9830cb2e82307" translate="yes" xml:space="preserve">
          <source>Input Config: namepass and namedrop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b7cfa3ca8d9998904e66d586c15309375d1f34" translate="yes" xml:space="preserve">
          <source>Input Config: taginclude and tagexclude</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3015ac2286cb9797910fefbc322dc7fae0e11228" translate="yes" xml:space="preserve">
          <source>Input Config: tagpass and tagdrop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5876280bd8b3186d8f9cbdd1d122eaec1214d611" translate="yes" xml:space="preserve">
          <source>Input Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67840966193a4839949deb78151e0914ab57076" translate="yes" xml:space="preserve">
          <source>Input Configuration Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9839d768303434b0ae4af912cf5e5a0d1b7e85a" translate="yes" xml:space="preserve">
          <source>Input Data Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0934845792a39b38994f03658de7fc41b5aa17c6" translate="yes" xml:space="preserve">
          <source>Input config: prefix, suffix, and override</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf631976ae88de75ea33d26c0e36bc380e48abc5" translate="yes" xml:space="preserve">
          <source>Input config: tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf957027899e290e020ab9d096072b90669bcb31" translate="yes" xml:space="preserve">
          <source>Input plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17710785020d98b2174c44d4b6fae3b8370ff927" translate="yes" xml:space="preserve">
          <source>Input plugins actively gather metrics and deliver them to the core agent, where aggregator, processor, and output plugins can operate on the metrics. In order to activate an input plugin, it needs to be enabled and configured in Telegraf&amp;rsquo;s configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b087a657ff727307246d5241ffd0d8e7501bfb5d" translate="yes" xml:space="preserve">
          <source>Inside InfluxDB, aggregate functions calculated on the fly may combine tens of thousands of distinct time series into a single view. Each one of those queries must read each aggregated data point, so for InfluxDB the read throughput is often many times higher than the write throughput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b3f53fb03b9925ecec9b717a74fd375623f6a5" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;../installation/index&quot;&gt;Kapacitor&lt;/a&gt;, &lt;a href=&quot;https://docs.influxdata.com/docs/v0.9/introduction/installation.html&quot;&gt;InfluxDB&lt;/a&gt; and &lt;a href=&quot;https://github.com/influxdb/telegraf#installation&quot;&gt;Telegraf&lt;/a&gt; on the same host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97eb05f29822e52fc3226868adac63fb7c8cdd16" translate="yes" xml:space="preserve">
          <source>Install Telegraf as a &lt;a href=&quot;https://github.com/influxdata/telegraf/blob/master/docs/WINDOWS_SERVICE.md&quot;&gt;Windows service&lt;/a&gt; (Windows support is still experimental):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0beab4d32b84032db9f83d20640a124bb3c4c5d" translate="yes" xml:space="preserve">
          <source>Install everything we need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588b6f3b54b6bc72f8c377bb136b4189ebe399c0" translate="yes" xml:space="preserve">
          <source>Install telegraf as a service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e2dce8774881e357d34e9e59e48b3a62fe4dc18e" translate="yes" xml:space="preserve">
          <source>Installation of the Chronograf package may require &lt;code&gt;root&lt;/code&gt; or administrator privileges to complete successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94623d84476bed3bb3631b7a693e72cac4ece624" translate="yes" xml:space="preserve">
          <source>Installation of the InfluxDB package may require &lt;code&gt;root&lt;/code&gt; or administrator privileges in order to complete successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6e424603cafc32f1c79d595a60d5e944f3ddfc" translate="yes" xml:space="preserve">
          <source>Installation of the Telegraf package may require &lt;code&gt;root&lt;/code&gt; or administrator privileges in order to complete successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaf9a0b72b7184044535e61fedbbef5d9df25cc" translate="yes" xml:space="preserve">
          <source>Instead of just processing the data in streams, you can also tell Kapacitor to periodically query InfluxDB and then process that data in batches. While triggering an alert based off cpu usage is more suited for the streaming case, you can get the basic idea of how &lt;code&gt;batch&lt;/code&gt; tasks work by following the same use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b411a597b9698864f8b3603e6075edccc578aa" translate="yes" xml:space="preserve">
          <source>Instead, use a subquery to get the same result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a322e0ff4260f9fc07feef9766824249d6ebe19a" translate="yes" xml:space="preserve">
          <source>Instrumental output has better reconnect behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="translated">Int</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="51ba3de2dc079402e1238eee87d7a180a3b194cd" translate="yes" xml:space="preserve">
          <source>Integer encoding uses two different strategies depending on the range of values in the uncompressed data. Encoded values are first encoded using &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/encoding?hl=en#signed-integers&quot;&gt;ZigZag encoding&lt;/a&gt;. This interleaves positive and negative integers across a range of positive integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="translated">Integers</target>
        </trans-unit>
        <trans-unit id="e0752289a1e931d23255b36ec4d4235763cc9bb3" translate="yes" xml:space="preserve">
          <source>Integers - append an &lt;code&gt;i&lt;/code&gt; to the field value to tell InfluxDB to store the number as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4af36e91db3f8e762487c15717ba16de6e6474c" translate="yes" xml:space="preserve">
          <source>Integrate Kapacitor into your monitoring system by sending &lt;a href=&quot;../../nodes/alert_node/index#message&quot;&gt;alert messages&lt;/a&gt; to supported event handlers. Currently, Kapacitor can send alert messages to specific log files and specific URLs, as well as to applications like &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; and &lt;a href=&quot;https://www.hipchat.com/&quot;&gt;HipChat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0773fa8464e04375c43fa1643138d15273cd58" translate="yes" xml:space="preserve">
          <source>Integrate your custom anomaly detection algorithm with Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029e8e30a8bc971d7955237f5703ff97eee3d142" translate="yes" xml:space="preserve">
          <source>Interface conversion: tsm1.Value is tsm1.IntegerValue, not tsm1.FloatValue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702c309bea169e0b1d412c0e94becdc6085f5efd" translate="yes" xml:space="preserve">
          <source>Internal Monitoring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c837ad4861e20df7b1bce31957c48c7548e36a" translate="yes" xml:space="preserve">
          <source>Interrupts</source>
          <target state="translated">Interrupts</target>
        </trans-unit>
        <trans-unit id="7e941764db0c7752609bfad8febf89df35427baf" translate="yes" xml:space="preserve">
          <source>Interval &amp;ndash; how often to check the throughput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb84fa052fab61504befedfeac3c83ec0f5f6c42" translate="yes" xml:space="preserve">
          <source>Introduce an arbitrary new tag to enforce uniqueness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f678f3bfc39cf4b9e00ebc833768f12c527daaf2" translate="yes" xml:space="preserve">
          <source>Introduce syntax for marking a partial response with chunking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="df6630ea79c5eba6c7bd0eb07f8bc46541286ea8" translate="yes" xml:space="preserve">
          <source>Introduction to Chronograf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e972f91a21b01a76ad4f4eadfbd81415aba7a644" translate="yes" xml:space="preserve">
          <source>Invalid credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6803a555cae55acc8565a977c5dd40e85d79955" translate="yes" xml:space="preserve">
          <source>Invalid request, refer to error for what it wrong with the request. Repeating the request will continue to return the same error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e165b4b0c6ef18d4c8e20a784459e1acf112748a" translate="yes" xml:space="preserve">
          <source>Iptables input: document better that rules without a comment are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6373f6b53acd772a3380de6706df4713913517" translate="yes" xml:space="preserve">
          <source>Issue 1: &lt;code&gt;BOTTOM()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d76302089d73a99060c94196c9ecc763254a0e5" translate="yes" xml:space="preserve">
          <source>Issue 1: &lt;code&gt;HOLT_WINTERS()&lt;/code&gt; and receiving fewer than &lt;code&gt;N&lt;/code&gt; points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fa3bce4b720d9c5f4733c0b9ddca9394ad013d" translate="yes" xml:space="preserve">
          <source>Issue 1: &lt;code&gt;SAMPLE()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900f8e085439127af5f54c66ddee6b8bb3c25dbc" translate="yes" xml:space="preserve">
          <source>Issue 1: &lt;code&gt;TOP()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8854cc13547f3ebcce8e2738df2aaedd95aba26a" translate="yes" xml:space="preserve">
          <source>Issue 1: &lt;code&gt;fill()&lt;/code&gt; when no data fall within the query&amp;rsquo;s time range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e3bb5c1a5c0ad6e4bb1b41f8748cb09c5d3f87" translate="yes" xml:space="preserve">
          <source>Issue 1: A &lt;code&gt;WHERE&lt;/code&gt; clause query unexpectedly returns no data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec68f9e776665dc979c9bc7fa047d628de512e3" translate="yes" xml:space="preserve">
          <source>Issue 1: COUNT() and fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a557079a0e4386e9d8fbb44dfdd184ecf523432" translate="yes" xml:space="preserve">
          <source>Issue 1: DISTINCT() and the INTO clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fd196cd8b01012f8a8900a6ca62cbda0d751da" translate="yes" xml:space="preserve">
          <source>Issue 1: ELAPSED() and units greater than the elapsed time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f019912159fc2b6c3f0ef983faa35c72a7cf56" translate="yes" xml:space="preserve">
          <source>Issue 1: Handling time intervals with no data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00951fc19d63ce84cc9b4f5673fe5d3fa0c7d1e7" translate="yes" xml:space="preserve">
          <source>Issue 1: If the &lt;code&gt;EVERY&lt;/code&gt; interval is greater than the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f0d22b02037c8daa06e658e14fb19e595af415" translate="yes" xml:space="preserve">
          <source>Issue 1: Mathematical operators with wildcards and regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d24802ce1b73fe67730c912425aad4b4a51b90" translate="yes" xml:space="preserve">
          <source>Issue 1: Missing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41323e5db3f7567501e07c83f877b0f0edd0615" translate="yes" xml:space="preserve">
          <source>Issue 1: Multiple SELECT statements in a subquery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d354e5cf784de898c85d17f8d84f8ff7a167043f" translate="yes" xml:space="preserve">
          <source>Issue 1: Nesting functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae63f3c889dc5465c53421be4b109f04dbe2af5" translate="yes" xml:space="preserve">
          <source>Issue 1: PERCENTILE() vs. other InfluxQL functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a1337a520a049f9b6b818aba1ca5957ea47343" translate="yes" xml:space="preserve">
          <source>Issue 1: SHOW FIELD KEYS and field type discrepancies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70669d7d9ec834fb43fc1dc17ba903c9462c2996" translate="yes" xml:space="preserve">
          <source>Issue 1: Selecting tag keys in the SELECT clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245da507bd40f1dcd9cff0096981cc902317c0d8" translate="yes" xml:space="preserve">
          <source>Issue 1: Understanding the returned timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fa04360b9511719b05a6bb4dd9eb00352406b3" translate="yes" xml:space="preserve">
          <source>Issue 1: Unexpected timestamps and values in query results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d75be82a352f1823caaf19c4ec595c953a20e16" translate="yes" xml:space="preserve">
          <source>Issue 1: Using &lt;code&gt;OR&lt;/code&gt; with absolute time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d4095fb1ba141bbcddf0e7d81d2f27d9da9c16" translate="yes" xml:space="preserve">
          <source>Issue 2: &lt;code&gt;fill(previous)&lt;/code&gt; when the previous result falls outside the query&amp;rsquo;s time range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183f1a3aec4bad03ac54f7e70354655e56aee2bd" translate="yes" xml:space="preserve">
          <source>Issue 2: Automating queries with the &lt;code&gt;INTO&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e7da669fca253810f41692e7f7822062a77ad2" translate="yes" xml:space="preserve">
          <source>Issue 2: BOTTOM() and a tag key with fewer than N tag values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c209b5808e75e516f6add8967e230c1715c6ad3" translate="yes" xml:space="preserve">
          <source>Issue 2: ELAPSED() with GROUP BY time() clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aad8d0f05db3dd1091d1588736d79230f0e1eda" translate="yes" xml:space="preserve">
          <source>Issue 2: If the &lt;code&gt;FOR&lt;/code&gt; interval is less than the execution interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f748fc5b8c83dbb8bb7155289a2229580affe17" translate="yes" xml:space="preserve">
          <source>Issue 2: Mathematical operators with functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afdc61111c974d4874aaf74907c73fee9b7881f" translate="yes" xml:space="preserve">
          <source>Issue 2: Mixing aggregation functions with non-aggregates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76b455612909e2f2c9bbf3a3d86813dda310ce4" translate="yes" xml:space="preserve">
          <source>Issue 2: Querying data that occur after &lt;code&gt;now()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73987212812b077cab70094b97d3608ecdb1d15c" translate="yes" xml:space="preserve">
          <source>Issue 2: Querying time ranges after now()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eca258919e296ecc5c480de3b4f9ef8dc148368" translate="yes" xml:space="preserve">
          <source>Issue 2: Resampling previous time intervals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33042e65da44d418a4a9c8c78ae9bc86680e211" translate="yes" xml:space="preserve">
          <source>Issue 2: TOP() and a tag key with fewer than N tag values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1951fbbb0541624f3a36d961aee1630bec5ed06" translate="yes" xml:space="preserve">
          <source>Issue 3: &lt;code&gt;fill(linear)&lt;/code&gt; when the previous or following result falls outside the query&amp;rsquo;s time range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445587944ffcc8669ed603304097d123bafe7a0b" translate="yes" xml:space="preserve">
          <source>Issue 3: BOTTOM(), tags, and the INTO clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db968f651ceb77e20ed135974645edd196d86e3" translate="yes" xml:space="preserve">
          <source>Issue 3: Backfilling results for older data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa6bd477bfc2244c68fa39464c81a9fc68c64d4" translate="yes" xml:space="preserve">
          <source>Issue 3: Configuring the returned timestamps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0afeb2cc0336a9d73ae5e8dc6325c1c8ce9b9b2" translate="yes" xml:space="preserve">
          <source>Issue 3: Getting slightly different results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e169a34e89689ae9d508ce3cc8d3c43764dde2c" translate="yes" xml:space="preserve">
          <source>Issue 3: TOP(), tags, and the INTO clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7241ef79c0958a65759330cac5c2aa4fb615df29" translate="yes" xml:space="preserve">
          <source>Issue 4: Missing tags in the CQ results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9b135b1753449bc73eac9bf01ba9f9edb1cedf" translate="yes" xml:space="preserve">
          <source>It is also possible to replay data directly without recording it first. This is done by issuing a request similar to either a &lt;code&gt;batch&lt;/code&gt; or &lt;code&gt;query&lt;/code&gt; recording but instead of storing the data it is immediately replayed against a task. Using a &lt;code&gt;stream&lt;/code&gt; recording for immediately replaying against a task is equivalent to enabling the task and so is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420b137b9430836a2c4e0e237ccfce1525093082" translate="yes" xml:space="preserve">
          <source>It is expected that you have a working Telegraf and Kapacitor install to walk through this example. If you do not please take a second to setup both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4536aa0ba409b2e5be4a3ccd3b4f18f84846e3ba" translate="yes" xml:space="preserve">
          <source>It is possible for field value types to differ across &lt;a href=&quot;../../concepts/glossary/index#shard-group&quot;&gt;shard groups&lt;/a&gt;. In these cases, it may be necessary to specify the field value type in the &lt;code&gt;SELECT&lt;/code&gt; clause. Please see the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-does-influxdb-handle-field-type-discrepancies-across-shards&quot;&gt;Frequently Asked Questions&lt;/a&gt; document for more information on how InfluxDB handles field value type discrepancies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d984b354f2bef2c801ca5c795b25719454e7f3bd" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;index#align&quot;&gt;QueryNode.Align&lt;/a&gt; and &lt;a href=&quot;index#offset&quot;&gt;QueryNode.Offset&lt;/a&gt; in conjunction with group by time dimensions so that the time bounds match up with the group by intervals. To automatically align the group by intervals to the start of the query time, use &lt;a href=&quot;index#aligngroup&quot;&gt;QueryNode.AlignGroup.&lt;/a&gt; This is useful in more complex situations, such as when the groupBy time period is longer than the query frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5327f5e10e40b776da341bc07c68f17caaf67c6" translate="yes" xml:space="preserve">
          <source>It is valid to configure multiple alert handlers, even with the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326c5c3204214019b0f97aca5ff69a2f9b33aeb9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to perform this same query without a regular expression. See the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-do-i-select-data-with-a-tag-that-has-no-value&quot;&gt;Frequently Asked Questions&lt;/a&gt; document for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bedc2a99b1db829d0693df09b94713d0fd690bc" translate="yes" xml:space="preserve">
          <source>Iterators are at the heart of the query engine. They provide a simple interface for looping over a set of points. For example, this is an iterator over Float points:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d4963f4f5fb7bb526ad5cb61ae4a5f24b2600a" translate="yes" xml:space="preserve">
          <source>Iterators are passed to the emitter which drains them and joins the resulting points. The emitter&amp;rsquo;s job is to convert simple time/value points into the more complex result objects that are returned to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b464fbbccfdc6734c1d09099c6a91f40c4b29d" translate="yes" xml:space="preserve">
          <source>Iterators aren&amp;rsquo;t just for reading raw data from storage though. Iterators can be composed so that they provided additional functionality around an input iterator. For example, a &lt;code&gt;DistinctIterator&lt;/code&gt; can compute the distinct values for each time window for an input iterator. Or a &lt;code&gt;FillIterator&lt;/code&gt; can generate additional points that are missing from an input iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1e23b725be8aad6b338015ecefbc3479bf797c" translate="yes" xml:space="preserve">
          <source>J0 returns the order-zero Bessel function of the first kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b402d642da0f20c362bc1bcf6bfd3cb9482a1ee" translate="yes" xml:space="preserve">
          <source>J1 returns the order-one Bessel function of the first kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="3a6bd4664cf70b7803383e6c8d3e571098110772" translate="yes" xml:space="preserve">
          <source>JSON Configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c64683c1678baa0abddae89a309ec4ab85e6462" translate="yes" xml:space="preserve">
          <source>JSON:</source>
          <target state="translated">JSON:</target>
        </trans-unit>
        <trans-unit id="a485b5e63e94e894f8f775819fd38df228f130a3" translate="yes" xml:space="preserve">
          <source>JWT Signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">Java</target>
        </trans-unit>
        <trans-unit id="dae96429d2727bbc95ed79356d20231f147442db" translate="yes" xml:space="preserve">
          <source>JavaScript/Node.js</source>
          <target state="translated">JavaScript/Node.js</target>
        </trans-unit>
        <trans-unit id="0a5f33ea0d4d273fa523aad519e0bd5003a1f2a2" translate="yes" xml:space="preserve">
          <source>Jn returns the order-n Bessel function of the first kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d73143de80d17e82de2e017ac156ca3b9c4e01" translate="yes" xml:space="preserve">
          <source>Join</source>
          <target state="translated">Join</target>
        </trans-unit>
        <trans-unit id="2a6e5e1725de2aef87b47df9ba58e80600e7d1f7" translate="yes" xml:space="preserve">
          <source>Join Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ff20c4c2032ae5f652ef38a47406f8db0db8d7" translate="yes" xml:space="preserve">
          <source>Join on a subset of the group by dimensions. This is a special case where you want a single point from one parent to join with multiple points from a different parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd2f028011e09c913c52ba4ef4d3b2250678e06" translate="yes" xml:space="preserve">
          <source>Join this node with other nodes. The data are joined on timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee85ad08dee1c8712017ed0369e74df46f43db7" translate="yes" xml:space="preserve">
          <source>JoinNode</source>
          <target state="translated">JoinNode</target>
        </trans-unit>
        <trans-unit id="6dd4598a323f8ecbb1b40525158c240dcdd9e553" translate="yes" xml:space="preserve">
          <source>Joining with batch data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c387935dd7e2e945123a4ce2dd231bd141b67444" translate="yes" xml:space="preserve">
          <source>Joins the data from any number of nodes. As each data point is received from a parent node it is paired with the next data points from the other parent nodes with a matching timestamp. Each parent node contributes at most one point to each joined point. A tolerance can be supplied to join points that do not have perfectly aligned timestamps. Any points that fall within the tolerance are joined on the timestamp. If multiple points fall within the same tolerance window than they are joined in the order they arrive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da6ca1290aa9557bfb7c84cb810000ad5d677a4" translate="yes" xml:space="preserve">
          <source>Just like that we have a type in Go that implements the needed interface. In order to allow for the &lt;code&gt;.url&lt;/code&gt; and &lt;code&gt;.database&lt;/code&gt; methods we need, simply define fields on the type with the same name. The first letter needs to capitalized so that it is exported. It&amp;rsquo;s important that the fields be exported since they will be consumed by the node in the &lt;code&gt;kapacitor&lt;/code&gt; package. The rest of the name should have the same capitaization as the method name. TICKscript will take care of matching the case at runtime. Update the &lt;code&gt;housedb_out.go&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e83d139054845931fedbf0e92e0a6b8fb60cd9" translate="yes" xml:space="preserve">
          <source>Just like that, we have a dynamic threshold, and, if cpu usage drops in the day or spikes at night, we will get an alert! Let&amp;rsquo;s try it out. Use &lt;code&gt;define&lt;/code&gt; to update the task TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f876d448e8a4d13527ee3aef96abda45e1ff84f" translate="yes" xml:space="preserve">
          <source>Just loop through the above script for each time window and reconstruct all the historical data you need. With that we now have the error_percent every minute backfilled for the historical data we had.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd344d8b8a0e46bb97220e74a76ae5fc61f206c3" translate="yes" xml:space="preserve">
          <source>K8s Autoscale Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28efe567058d658596223e1752d5f8778281b7ee" translate="yes" xml:space="preserve">
          <source>K8sAutoscale</source>
          <target state="translated">K8sAutoscale</target>
        </trans-unit>
        <trans-unit id="c93947475d14516b28ec3f3a5e00bd53f38f3124" translate="yes" xml:space="preserve">
          <source>K8sAutoscaleNode</source>
          <target state="translated">K8sAutoscaleNode</target>
        </trans-unit>
        <trans-unit id="6db599fb2fc1de8d1f827a662b4a49a3ae27b079" translate="yes" xml:space="preserve">
          <source>KILL QUERY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f676ba6dffef5c237c38bf98593cfe9a9e64d1" translate="yes" xml:space="preserve">
          <source>KILL QUERY should work during all phases of a query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427151a087ce1be34ebe5ed6f9e14d7f9cce02e2" translate="yes" xml:space="preserve">
          <source>Kapacitor</source>
          <target state="translated">Kapacitor</target>
        </trans-unit>
        <trans-unit id="19fd43b30452d4e2e128b82f74384bcadeeb2a09" translate="yes" xml:space="preserve">
          <source>Kapacitor (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43993ed07761313f6474c71915528faff26551f3" translate="yes" xml:space="preserve">
          <source>Kapacitor Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f542d7030f0a5678d369fca9de65cc8b3bbe2b42" translate="yes" xml:space="preserve">
          <source>Kapacitor Loopback Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be045dc37d09bfd0ade8ba0fafcf0f7b68d4395c" translate="yes" xml:space="preserve">
          <source>Kapacitor Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5d1156ff6414c8695108314652bd03a25d1e7d" translate="yes" xml:space="preserve">
          <source>Kapacitor also exposes several statistics and information about its runtime. These can be accessed at the &lt;code&gt;/kapacitor/v1/debug/vars&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642fcb6e9ade25069ffdf8db6cbd0c2d23d8bc4e" translate="yes" xml:space="preserve">
          <source>Kapacitor also the standard Go &lt;a href=&quot;https://golang.org/pkg/net/http/pprof/&quot;&gt;net/http/pprof&lt;/a&gt; endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1797fb7cb8a6b961f7120432f166f59fda41ccf" translate="yes" xml:space="preserve">
          <source>Kapacitor as a Continous Query engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6f9bcaa1a1b10954bffce51867cfa30e9e7f7a" translate="yes" xml:space="preserve">
          <source>Kapacitor can accept writes over HTTP using the line protocol. This endpoint is identical in nature to the InfluxDB write endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4631f82e0628573b2a7f8fed94dcfe61f60d65c7" translate="yes" xml:space="preserve">
          <source>Kapacitor can also provide an example config for you using this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0c3aeacc3f88e947164b51b3dce8f0970b21c9" translate="yes" xml:space="preserve">
          <source>Kapacitor can be used to do the same work as Continuous Queries in InfluxDB. Today we are going to explore reasons to use one over the other and the basics of using Kapacitor for CQ type workloads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07333d8cf91417dd439269d3707e169d85591d1" translate="yes" xml:space="preserve">
          <source>Kapacitor can generate and handle alerts. The API allows you to see the current state of any alert and to configure various handlers for the alerts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6abacf75a38bc0af0ae995ce1c53b2a76271bf" translate="yes" xml:space="preserve">
          <source>Kapacitor can save recordings of data and replay them against a specified task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd22d55ce8a0bc7db44acdb2c2d4c239c00f1f3" translate="yes" xml:space="preserve">
          <source>Kapacitor connects to the socket and queries basic information about the UDFs options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f49aafbbdc929bd95af705b059e1bfd0aa11243" translate="yes" xml:space="preserve">
          <source>Kapacitor exposes some operations that can be performed on the underlying storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d36acee6f4b39834cdd04c0eb517f8c0041a8b" translate="yes" xml:space="preserve">
          <source>Kapacitor has a template system that lets you define a template and reuse it for multiple tasks. Each task can define its own value for various vars within the template. Templates can be consumed via the CLI and &lt;a href=&quot;../../api/api/index&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f773bdd8edc33c89e98ce75169f5d0c85a75296a" translate="yes" xml:space="preserve">
          <source>Kapacitor has an HTTP API with which all communication happens. The binary &lt;code&gt;kapacitor&lt;/code&gt; exposes the API over the command line. Now use the CLI tool to define the &lt;code&gt;task&lt;/code&gt; and the databases and retention policies it can access:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8058fb7a5b63b9a6d16ed143f406977a24d74fdf" translate="yes" xml:space="preserve">
          <source>Kapacitor has two binaries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a0a0491a2a7066526c705879460eb15530947a" translate="yes" xml:space="preserve">
          <source>Kapacitor is a data processing engine. It can process both stream and batch data. This guide will walk you through both workflows and teach you the basics of using and running a Kapacitor daemon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9810663d73ea4a3026e61923dfe0814e8d86d668" translate="yes" xml:space="preserve">
          <source>Kapacitor is a powerful tool, if you need more power use it. If not keep using CQs until you do. For more information and help writing TICKscripts from InfluxQL queries take a looks at these &lt;a href=&quot;https://docs.influxdata.com/kapacitor/latest/nodes/influx_q_l_node/&quot;&gt;docs&lt;/a&gt; on the InfluxQL node in Kapacitor. Every function available in the InfluxDB query language is available in Kapacitor, so you can convert any query into a Kapacitor TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49f210907fb63f4447020985abe08f9e9959192" translate="yes" xml:space="preserve">
          <source>Kapacitor is open source and we welcome contributions from the community. For information on what you need to build, test etc. the code see &lt;a href=&quot;https://github.com/influxdb/kapacitor/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2013398ffc2063ad488fa1b80242bf97f1cf6a" translate="yes" xml:space="preserve">
          <source>Kapacitor listens on TCP port &lt;code&gt;9092&lt;/code&gt; for all API and write calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29073613e7ce572218414bf584086804703df6b0" translate="yes" xml:space="preserve">
          <source>Kapacitor makes use of various service integrations. The following API endpoints provide way for a user to run simple tests to ensure that a service is configured correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d77cc7b8598c00cd31065ede9433b72391477ba" translate="yes" xml:space="preserve">
          <source>Kapacitor may also bind to randomized UDP ports for handling of InfluxDB data via subscriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c53ba00a58ec80b390ef538683b8b8679b36b98" translate="yes" xml:space="preserve">
          <source>Kapacitor processes data via a pipeline. A pipeline is formally a directed acyclic graph (&lt;a href=&quot;https://en.wikipedia.org/wiki/Directed_acyclic_graph&quot;&gt;DAG&lt;/a&gt;). The basic idea is that each node in the graph represents some form of processing on the data and each edge passes the data between nodes. In order to add a new type of node there are two components that need to be written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc725faa4c5dd7bcedfe34fa6e52debce9d59bf" translate="yes" xml:space="preserve">
          <source>Kapacitor provides an HTTP API on port 9092 by default. With the API you can control which tasks are executing, query status of tasks and manage recordings etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ba00484408a823b85554a61890433e606242a2" translate="yes" xml:space="preserve">
          <source>Kapacitor supports alert reset expressions. This way when an alert enters a state, it can only be lowered in severity if its reset expression evaluates to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2a58e588ca80dbce36fb68b5d34748f6fe8f7f" translate="yes" xml:space="preserve">
          <source>Kapacitor supports the following service for discovery:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8feff0bd6a1a3b93ff9afabe2f077c5436394b9" translate="yes" xml:space="preserve">
          <source>Kapacitor uses TICKscripts to define data processing pipelines. A pipeline is set of nodes that process data and edges that connect the nodes. Pipelines in Kapacitor are directed acyclic graphs (&lt;a href=&quot;https://en.wikipedia.org/wiki/Directed_acyclic_graph&quot;&gt;DAGs&lt;/a&gt;) meaning each edge has a direction that data flows and there cannot be any cycles in the pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b70b86c89900ea24ca5a8542905b2e60771af6" translate="yes" xml:space="preserve">
          <source>Kapacitor uses a DSL called &lt;a href=&quot;../../tick/index&quot;&gt;TICKscript&lt;/a&gt; to define tasks. Each TICKscript defines a pipeline that tells Kapacitor which data to process and how.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8f61619366afeae079ece3d6abea3d844efd5d" translate="yes" xml:space="preserve">
          <source>Kapacitor uses a DSL named &lt;code&gt;TICKscript&lt;/code&gt;. The DSL is used to define the pipelines for processing data in Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3808919bec665880740738bd6d03b70bbe39081" translate="yes" xml:space="preserve">
          <source>Kapacitor&amp;rsquo;s alert system follows a publish subscribe design pattern. Alerts are published to a &lt;code&gt;topic&lt;/code&gt; and &lt;code&gt;handlers&lt;/code&gt; subscribe to a topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6135c439806609d865934db7610be80ff021c5a8" translate="yes" xml:space="preserve">
          <source>Kapacitor&amp;rsquo;s underlying storage system is organized into different stores. Various actions can be performed on each individual store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11c5e956561ccdf4850aee31ca28584c4b24f09" translate="yes" xml:space="preserve">
          <source>Kapacitor, InfluxData&amp;rsquo;s data processing engine, can do the same work as InfluxDB&amp;rsquo;s CQs. Check out the &lt;a href=&quot;../../../../kapacitor/v1.3/examples/continuous_queries/index&quot;&gt;Kapacitor documentation&lt;/a&gt; for when to use Kapacitor instead of InfluxDB and how to perform the same CQ functionality with a TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164fb225a6dce11f6fd8c8e802606764bbe38b94" translate="yes" xml:space="preserve">
          <source>Kapacitor: APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0aa9ecc7875132f5dc68ce98b05156f08dcb19" translate="yes" xml:space="preserve">
          <source>Kapacitor: About the project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288d016af2e68e79a5b8eced4d2117ad20143959" translate="yes" xml:space="preserve">
          <source>Kapacitor: Administration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e85c2ab0d8878adf4ccefe35692e0fedb3d9745" translate="yes" xml:space="preserve">
          <source>Kapacitor: Alerts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1429f6b8b440bdda722cfc1fbe53607ee16b2287" translate="yes" xml:space="preserve">
          <source>Kapacitor: Pull Metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0aaf072832c562b6c88123575d36ba8dbdcf53" translate="yes" xml:space="preserve">
          <source>Kapacitor: TICKscript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb0eee11664e6ed240b5a3f7bc37c8470379162" translate="yes" xml:space="preserve">
          <source>Kapacitor: TICKscript Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec1d7135d4110453aa7c6fe2a3803205d1425e0" translate="yes" xml:space="preserve">
          <source>KapacitorAPI</source>
          <target state="translated">KapacitorAPI</target>
        </trans-unit>
        <trans-unit id="322650d84f577e0d3802526624968bf85c098bb0" translate="yes" xml:space="preserve">
          <source>KapacitorConfigAPI</source>
          <target state="translated">KapacitorConfigAPI</target>
        </trans-unit>
        <trans-unit id="efa4642eb3f83412fb5049adcf4848b275bdac4e" translate="yes" xml:space="preserve">
          <source>KapacitorLoopback</source>
          <target state="translated">KapacitorLoopback</target>
        </trans-unit>
        <trans-unit id="4c5eb8160af1e094c9b363fab891c82f6034cd65" translate="yes" xml:space="preserve">
          <source>KapacitorLoopbackNode</source>
          <target state="translated">KapacitorLoopbackNode</target>
        </trans-unit>
        <trans-unit id="466fc492747ca98312d409e81f2b1df4f2931346" translate="yes" xml:space="preserve">
          <source>Keep</source>
          <target state="translated">Keep</target>
        </trans-unit>
        <trans-unit id="542bb9f8f72b8265ee5ed3d3f886e28438c05bbe" translate="yes" xml:space="preserve">
          <source>Keep -config-directory when running as Windows service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f47336473cda732b85b2d9c7271d5df20d6c308" translate="yes" xml:space="preserve">
          <source>Keep every third data point or batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6623f529b765d4e730454240135f6b384fd5ae" translate="yes" xml:space="preserve">
          <source>Keep only samples that land on the 10s boundary. See &lt;a href=&quot;../from_node/index#truncate&quot;&gt;FromNode.Truncate,&lt;/a&gt;&lt;a href=&quot;../query_node/index#groupby&quot;&gt;QueryNode.GroupBy&lt;/a&gt; time or &lt;a href=&quot;../window_node/index#align&quot;&gt;WindowNode.Align&lt;/a&gt; for ensuring data is aligned with a boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aefb83c9c820a195155a8db7dcfe303e34a18b4" translate="yes" xml:space="preserve">
          <source>Keep the quotes in mind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="a22c16410dc4eafc94fbc317a11af2903d7b50a3" translate="yes" xml:space="preserve">
          <source>Key Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f530db58b3e5088dc7412c6d2298ba3f8456bdeb" translate="yes" xml:space="preserve">
          <source>Keywords</source>
          <target state="translated">Keywords</target>
        </trans-unit>
        <trans-unit id="cee304d0d94b3420a86ccf7246cf96e96efe0779" translate="yes" xml:space="preserve">
          <source>Kill query not killing query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00ac23f2ac2ff73ad4f3c4b263d6c5bbfb80190" translate="yes" xml:space="preserve">
          <source>Kind</source>
          <target state="translated">Kind</target>
        </trans-unit>
        <trans-unit id="27f59ea724e9e64a0d124170f0936bf8dc376821" translate="yes" xml:space="preserve">
          <source>Kind - The kind of handler, in this case it will be a &lt;code&gt;slack&lt;/code&gt; handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6231e14f911f6dbbf7f8ae805af83e46f5fa79" translate="yes" xml:space="preserve">
          <source>Kind - The kind of handler, see &lt;a href=&quot;handlers/index&quot;&gt;handlers&lt;/a&gt; for a list of available kinds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da057376db2adba31c09b9d5772f0ee41bb652c9" translate="yes" xml:space="preserve">
          <source>Kind is the type of resources to autoscale. Currently only &quot;deployments&quot;, &quot;replicasets&quot; and &quot;replicationcontrollers&quot; are supported. Default: &quot;deployments&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c19162afb99319d82e4133ab814573d49dfc8e9" translate="yes" xml:space="preserve">
          <source>KindTag</source>
          <target state="translated">KindTag</target>
        </trans-unit>
        <trans-unit id="328a92d4959dbb97fccf841f83ffd7920fa3de40" translate="yes" xml:space="preserve">
          <source>KindTag is the name of a tag to use when tagging emitted points with the kind. If empty the point will not be tagged with the resource. Default: kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee0cb05f850f53dc7ec012e5b12bbe98948693b" translate="yes" xml:space="preserve">
          <source>Kubernetes</source>
          <target state="translated">Kubernetes</target>
        </trans-unit>
        <trans-unit id="01dde2e90768acf86ed2c2dbcc87e7183e226a68" translate="yes" xml:space="preserve">
          <source>LAST()</source>
          <target state="translated">LAST()</target>
        </trans-unit>
        <trans-unit id="47659bbe7bf9a0e726bbbe6d18ef85169fbf5387" translate="yes" xml:space="preserve">
          <source>LIMIT and SLIMIT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4adc5c38229baa178166292700de470bd07651" translate="yes" xml:space="preserve">
          <source>LSM Trees are based on a log that takes writes and two structures known as Mem Tables and SSTables. These tables represent the sorted keyspace. SSTables are read only files that are continuously replaced by other SSTables that merge inserts and updates into the keyspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6d942b0d775bd54e421837f661227031916cc3" translate="yes" xml:space="preserve">
          <source>Lambda Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce51ddb75ce0e9e02618fd766fd5567a209ca18a" translate="yes" xml:space="preserve">
          <source>Large deletes (data expiration)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c69a859a9638b242f2dabf8acf1c0b1450ce6b" translate="yes" xml:space="preserve">
          <source>Last</source>
          <target state="translated">Last</target>
        </trans-unit>
        <trans-unit id="4c2555fc0d0f49b7a9a6954c39a547a387cb1b0b" translate="yes" xml:space="preserve">
          <source>Latest date for which data will be recorded. If not specified uses the current time. RFC3339Nano formatted data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eb7a88768ad1d882a971fe897029b9581f0793" translate="yes" xml:space="preserve">
          <source>Latest date for which data will be replayed. If not specified uses the current time. RFC3339Nano formatted data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2934287a049a1ca6d51f0d3994fbbca1411913" translate="yes" xml:space="preserve">
          <source>Launch &lt;code&gt;influx&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe34549a278df4ad60938752cf1fb5317f412a" translate="yes" xml:space="preserve">
          <source>Launch InfluxDB&amp;rsquo;s &lt;a href=&quot;../../tools/shell/index&quot;&gt;Command Line Interface&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1112182ad164edcada9e8586d0e31e5f83f6970c" translate="yes" xml:space="preserve">
          <source>Launched as a service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7223d7c4281634be5d63893f59e0bc03f64dfa" translate="yes" xml:space="preserve">
          <source>Launching &lt;code&gt;influx&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3154aba5b150a655a5b420d462508db7ce787fdd" translate="yes" xml:space="preserve">
          <source>Learn how to join two series and calculate a combined results, plus how to perform that operation on historical data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2011a20fd973e72ad3a5c11ff4614705403ed12" translate="yes" xml:space="preserve">
          <source>Learn how to use Chronograf&amp;rsquo;s dashboard template variables to interact with your dashboards and gain insights into your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fabcf48b520f54c03d3b8bac7310dcfd084a50c" translate="yes" xml:space="preserve">
          <source>Learn how to write a simple socket based UDF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d86500872b7e524480935aaf08aa408d13d67a" translate="yes" xml:space="preserve">
          <source>Length limit 64KB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80bf5c999a99d80639c3f26704341809ddbc52a" translate="yes" xml:space="preserve">
          <source>Let it run for a couple seconds or minutes before terminating it. On most systems, kill the script by selecting the &lt;code&gt;Ctrl-c&lt;/code&gt; keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3910465f9c68d6eb45315569275f3e8d19bfa1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s confirm that the recording captured some data. Run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104712673449274e08c2c3279a697318948e4d46" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define our own type so we can start implementing the &lt;code&gt;Handler&lt;/code&gt; interface. Update the &lt;code&gt;main.go&lt;/code&gt; file as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4a768d86da77da67b333733b6e0c049be63993" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s dig into the details of the two types of storage engines we tried and how these properties had a significant impact on our performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9d9cbfa5ff7199282ec7a72b4bf9456f3f632a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s replay it again and verify the results. Any time you want to update a task change the TICKscript and then run the &lt;code&gt;define&lt;/code&gt; command again with just the &lt;code&gt;TASK_NAME&lt;/code&gt; and &lt;code&gt;-tick&lt;/code&gt; arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccedc8eb2bb4457e7c0843ea22c2729b11a99c83" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we have two measurements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ce0360f0c525d063f3d3bdcaed5415ac4a2210" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start the Kapacitor server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9d7651e68ef5775a8b1eb167fc26610615d68e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with the &lt;code&gt;info&lt;/code&gt; method. When Kapacitor starts up it will call &lt;code&gt;info&lt;/code&gt; and expect in return some information about how this UDF behaves. Specifically, Kapacitor expects the kind of edge the UDF wants and provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68e5e74a9c797be5f2acf2e11cf02f8f9e785ff" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try storing another type of data, with two fields in the same measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242f59c4b5c7d5a4ef0336d0dc6a36f9d7b866da" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s update the cases in the switch statements to loop through all data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee14050617b7b58e17aabccd61c241ccdafc6379" translate="yes" xml:space="preserve">
          <source>Letter</source>
          <target state="translated">Letter</target>
        </trans-unit>
        <trans-unit id="8478fe30056611129de10e1dcb67a3cb5751c687" translate="yes" xml:space="preserve">
          <source>Letters and digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc1dc5a10a2a095a61e23993d364302272fca5a" translate="yes" xml:space="preserve">
          <source>Letters are the set of ASCII characters plus the underscore character _ (U+005F) is considered a letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="74b8f809b7de3cf5d367f92d15ca8e03dba44115" translate="yes" xml:space="preserve">
          <source>Level &amp;ndash; Alert Level, one of: INFO, WARNING, CRITICAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994fc45198a61f789fd1fedad42a813b3ae7b060" translate="yes" xml:space="preserve">
          <source>Level &amp;ndash; one of OK, INFO, WARNING or CRITICAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b459117fa976f6c96e1a8373e3de616748ab50" translate="yes" xml:space="preserve">
          <source>Level Compactions - Level compactions (levels 1-4) occur as the TSM files grow. TSM files are compacted from snapshots to level 1 files. Multiple level 1 files are compacted to produce level 2 files. The process continues until files reach level 4 and the max size for a TSM file. They will not be compacted further unless deletes, index optimization compactions, or full compactions need to run. Lower level compactions use strategies that avoid CPU-intensive activities like decompressing and combining blocks. Higher level (and thus less frequent) compactions will re-combine blocks to fully compact them and increase the compression ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28761cde7fd71667491111c76d455a3170a9a9a0" translate="yes" xml:space="preserve">
          <source>LevelDB and Log Structured Merge Trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1891acbe622b3aeafad2ebfb87644d305e4de3" translate="yes" xml:space="preserve">
          <source>LevelDB is an implementation of a Log Structured Merge Tree (or LSM Tree) that was built as an open source project at Google. It exposes an API for a key/value store where the key space is sorted. This last part is important for time series data as it allowed us to quickly scan ranges of time as long as the timestamp was in the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3dc106f44c2ea1706c34386c67bc0338ddf21d" translate="yes" xml:space="preserve">
          <source>LevelField</source>
          <target state="translated">LevelField</target>
        </trans-unit>
        <trans-unit id="a2e6bc86f3c1fdbd6d678b8492015f094bffa37e" translate="yes" xml:space="preserve">
          <source>LevelTag</source>
          <target state="translated">LevelTag</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee92c8a4b63c9522cf632ce925233ca5e3ca1bca" translate="yes" xml:space="preserve">
          <source>Licenses</source>
          <target state="translated">Licenses</target>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="7541164ffb49cdc5bac729350cda6d662029b686" translate="yes" xml:space="preserve">
          <source>Like recordings you make a GET request to the &lt;code&gt;/kapacitor/v1/replays/REPLAY_ID&lt;/code&gt; endpoint to get the status of the replay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34866fec296a8d175f8bbc2d7c8c8bb8bce577ad" translate="yes" xml:space="preserve">
          <source>Like the other OAuth2 providers, access to Chronograf via Heroku can be restricted to members of specific Heroku organizations. This is controlled using the &lt;code&gt;HEROKU_ORGS&lt;/code&gt; environment variable or the &lt;a href=&quot;../configuration/index#heroku-organization&quot;&gt;&lt;code&gt;--heroku-organizations&lt;/code&gt;&lt;/a&gt; switch and is comma-separated. If we wanted to permit access from the &lt;code&gt;hill-valley-preservation-society&lt;/code&gt; organization and &lt;code&gt;the-pinheads&lt;/code&gt; organization, we would use the following environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee94f8f5fd98941ba011e4aff0446f7a1e559a46" translate="yes" xml:space="preserve">
          <source>Limit AWS GetMetricStatistics requests to 10 per second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ad3ead1c57672a7e4c33df00ed2524217b5023" translate="yes" xml:space="preserve">
          <source>Limit Iterator - This iterator limits the number of points per name/tag group. This is the implementation of the &lt;code&gt;LIMIT&lt;/code&gt; &amp;amp; &lt;code&gt;OFFSET&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502480d1dc83132b5df6802b13c310e5ead1659b" translate="yes" xml:space="preserve">
          <source>Limit Kapacitor configuration names to 33 characters to fix display bug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186366eb4b752261a9614a4d6c99dfb89f110b6f" translate="yes" xml:space="preserve">
          <source>Limit the number of connections for the http service. 0 is unlimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65548d6382cd975afdd561b42cc7eef599f92ad3" translate="yes" xml:space="preserve">
          <source>Limits the number of rows that the system can return in a &lt;a href=&quot;../../tools/api/index#query-string-parameters&quot;&gt;non-chunked&lt;/a&gt; query. The default setting (&lt;code&gt;0&lt;/code&gt;) allows for an unlimited number of rows. InfluxDB includes a &lt;code&gt;&quot;partial&quot;:true&lt;/code&gt; tag in the response body if query results exceed the &lt;code&gt;max-row-limit&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9676003762818513c636984faeaa0ae356839a" translate="yes" xml:space="preserve">
          <source>Line</source>
          <target state="translated">Line</target>
        </trans-unit>
        <trans-unit id="40d5f9f0887e43622d59af15a41383978f1d1bb3" translate="yes" xml:space="preserve">
          <source>Line Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f508a1de591d440b0645721676584fadb0098f" translate="yes" xml:space="preserve">
          <source>Line Protocol Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ed64b68991420aa910c6ce4d5fc9b03c222cfa" translate="yes" xml:space="preserve">
          <source>Line Protocol Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654070e9d9b82cbf026cef07174bd834ee5b9208" translate="yes" xml:space="preserve">
          <source>Line Protocol Tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b813bbf3d08e7ab0e98bd793e6b829de63949e" translate="yes" xml:space="preserve">
          <source>Line Protocol accepts &lt;a href=&quot;../../query_language/spec/index#keywords&quot;&gt;InfluxQL keywords&lt;/a&gt; as &lt;a href=&quot;../../concepts/glossary/index#identifier&quot;&gt;identifier&lt;/a&gt; names. In general, we recommend avoiding using InfluxQL keywords in your schema as it can cause &lt;a href=&quot;../../troubleshooting/errors/index#error-parsing-query-found-expected-identifier-at-line-char&quot;&gt;confusion&lt;/a&gt; when querying the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bd099a8001bda2624b033564c89ef7cf42fb57" translate="yes" xml:space="preserve">
          <source>Line Protocol does not require users to escape the backslash character &lt;code&gt;\&lt;/code&gt;. All other special characters also do not require escaping. For example, Line Protocol handles emojis with no problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd54d3f5a917ff99d90383170e7f0c262adefb1" translate="yes" xml:space="preserve">
          <source>Line Protocol does not require users to escape the backslash character &lt;code&gt;\&lt;/code&gt;. Users do not need to escape all other special characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f72066134b6b1e3bb4a757e3378bee4bbd36e14" translate="yes" xml:space="preserve">
          <source>Line Protocol in Practice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556aa9d0405a681d0f67fbfad8813a1e96aaf1a4" translate="yes" xml:space="preserve">
          <source>Line Protocol informs InfluxDB of the data&amp;rsquo;s measurement, tag set, field set, and timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f259b49256dfccafd0684e84c21b1d1bd24119fc" translate="yes" xml:space="preserve">
          <source>Line+Stat</source>
          <target state="translated">Line+Stat</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="3271410a5de80bdd90af4dd93040bfde6ce7de75" translate="yes" xml:space="preserve">
          <source>Linux (systemd installations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7442c50991f5505ef70daa28daa2fafc65015da" translate="yes" xml:space="preserve">
          <source>Linux (sysvinit and upstart installations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0f468b62d10e7fc7681b240f29fa1e928f03aa" translate="yes" xml:space="preserve">
          <source>Linux - SysV or Upstart Systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f931a79fb24e6fee44a033bbdde5dcb805549c1e" translate="yes" xml:space="preserve">
          <source>Linux - systemd Systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a695bb9a286baa32a26e6ccf258eee57cbe73968" translate="yes" xml:space="preserve">
          <source>Linux debian and RPM packages: &lt;code&gt;/etc/telegraf/telegraf.conf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0215fa7061ac64bb80fe74716c319c5e65b31ddd" translate="yes" xml:space="preserve">
          <source>Lisp</source>
          <target state="translated">Lisp</target>
        </trans-unit>
        <trans-unit id="2ae8356e3dedba0d8746bcd1a240178c02e8c3b9" translate="yes" xml:space="preserve">
          <source>List CQs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e22af2bbf1c070ad01ee8305c60a05ca09b65e" translate="yes" xml:space="preserve">
          <source>List Recordings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ce12af8cbe5cee87207c7b2e7e860ac127537b" translate="yes" xml:space="preserve">
          <source>List Replays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47de04b4598e7d0fd11553e2e20a4777382e229" translate="yes" xml:space="preserve">
          <source>List Tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0fdf4c459dd1ad2f20782eb6add720e3cccfce" translate="yes" xml:space="preserve">
          <source>List Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b271b5014b869184fe7d89e78b573cdb7de47f3f" translate="yes" xml:space="preserve">
          <source>List Topic Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3345f0f3ce28f0494b1cf0fe699ea8b74305cd4e" translate="yes" xml:space="preserve">
          <source>List Topic Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7fca63baa277903623607c5cacea4c7220015b" translate="yes" xml:space="preserve">
          <source>List Topics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56049dfa4b6dd859cd4fd4880007e48287e10d40" translate="yes" xml:space="preserve">
          <source>List all &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt; by measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7220a3388739e3b8624cd5034890c19d1a8d8673" translate="yes" xml:space="preserve">
          <source>List all &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurements&lt;/a&gt; in the &lt;code&gt;telegraf&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988d83528fa55b24116c8162109943bbf94834a4" translate="yes" xml:space="preserve">
          <source>List currently-running queries with &lt;code&gt;SHOW QUERIES&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e07aaf18cfa88188fa66ad4a93ef0fc6b65742" translate="yes" xml:space="preserve">
          <source>List every CQ on an InfluxDB instance with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87622de59db8e07af179a67f7665cf84a34dd5b" translate="yes" xml:space="preserve">
          <source>List of arguments to the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1564a4016a36aaa28910ffc711cb7b50d917e37a" translate="yes" xml:space="preserve">
          <source>List of database retention policy pairs the task is allowed to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573d1b9ff10e2e22e6166765f18a585e0572cec6" translate="yes" xml:space="preserve">
          <source>List of effected Services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8951ef39a2543fa39a352ca25fbfe345ba35b8b" translate="yes" xml:space="preserve">
          <source>List of effected services. If not specified defaults to the Name of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8325549d357ef1e6c4c53ee1d7d3f5aefb10ab2e" translate="yes" xml:space="preserve">
          <source>List of email addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b862457bfb7103d939f82eb9b7056c3025c951" translate="yes" xml:space="preserve">
          <source>List of fields to return. If empty returns all fields. Fields &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt; are always returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0138cc4105b6cbe72de06022006489c67a44e1" translate="yes" xml:space="preserve">
          <source>List of names for each expression. The expressions are evaluated in order. The result of an expression may be referenced by later expressions via the name provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a541dcdabccc4858de67b0d0fd471201a0f8384c" translate="yes" xml:space="preserve">
          <source>List of recipients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb2fe23003cabdb0280e078d2bb5c682f7fc2cf" translate="yes" xml:space="preserve">
          <source>List of teams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d60860ab75cb1d21be6de62e031ba79e7a82e1c" translate="yes" xml:space="preserve">
          <source>List of topic names to publish events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de295594b67a5269c305283763f715d4392c2971" translate="yes" xml:space="preserve">
          <source>Listing testable services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242286442a97265d75dfe66aeab6e1ce1effd028" translate="yes" xml:space="preserve">
          <source>Lists are comma-separated and only available when using environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="9832c836a59c02278e7d54f734507706f272dd38" translate="yes" xml:space="preserve">
          <source>Live Leaderboard of game scores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcb77ff769ea54ca622848f6bedd4004fa4f4fa" translate="yes" xml:space="preserve">
          <source>Load</source>
          <target state="translated">Load</target>
        </trans-unit>
        <trans-unit id="50a6eaaa7975471d5cd9d639b964577d3b36d1d0" translate="yes" xml:space="preserve">
          <source>Locate Event Handler Configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="e509a80e0602e68f6352652f572b08c526d247e6" translate="yes" xml:space="preserve">
          <source>Log (available in versions 1.3.1.0+)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79d397d6a1c0da3fa08d5b8ad64524ee487892b" translate="yes" xml:space="preserve">
          <source>Log JSON alert data to file. One event per line. Must specify the absolute path to the log file. It will be created if it does not exist. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807534e09d6227fc68b6180b61c5c0ffd851b36a" translate="yes" xml:space="preserve">
          <source>Log Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c5ba8dd041440938a55d7caad4ebaf73f7c68f" translate="yes" xml:space="preserve">
          <source>Log Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb89409bb6d98866276a251d7461276265d1509" translate="yes" xml:space="preserve">
          <source>Log alert events to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f16599f9d75cfaa04faf4fba4d851637f30dfe7" translate="yes" xml:space="preserve">
          <source>Log an error for every malformed point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad88d5c498edf7ea21028a5246446ba6a3bf9e4a" translate="yes" xml:space="preserve">
          <source>Log returns the natural logarithm of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72841e130205e4b34eafaff5e644b6820e7f471d" translate="yes" xml:space="preserve">
          <source>Log the CQ execution time when continuous query logging is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977a2b5c893e89719e9a7736a4e1f9cc525e8f11" translate="yes" xml:space="preserve">
          <source>Log10 returns the decimal logarithm of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b2fd4cb1a8e2bb305b5672e391aef89a37298c" translate="yes" xml:space="preserve">
          <source>Log1p returns the natural logarithm of 1 plus its argument x. It is more accurate than Log(1 + x) when x is near zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb7f40afd51fa2eedd5352b36de1ee1df66c7a9" translate="yes" xml:space="preserve">
          <source>Log2 returns the binary logarithm of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be04109d28e544b484946e25f9c4e0fbd1fe0883" translate="yes" xml:space="preserve">
          <source>LogNode</source>
          <target state="translated">LogNode</target>
        </trans-unit>
        <trans-unit id="5963a7c64c0149e44b174ff76b7f701d23bc3074" translate="yes" xml:space="preserve">
          <source>Logb returns the binary exponent of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5d12bd943fce81fa1b8cfbf426279bc7c191eb" translate="yes" xml:space="preserve">
          <source>Logging overhaul to centralize the logger &amp;amp; log levels, &amp;amp; provide a logfile config option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3296994d1a733d1c1a213ac1b7bfce7cecc78387" translate="yes" xml:space="preserve">
          <source>Logparser input plugin for parsing grok-style log patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126dd3b70a5ca7818e0e26ad1e008d23b0f14a53" translate="yes" xml:space="preserve">
          <source>Logs</source>
          <target state="translated">Logs</target>
        </trans-unit>
        <trans-unit id="3c4b6edbf20da6a20d6a3efeb5eeeae7b5cdb5ef" translate="yes" xml:space="preserve">
          <source>Looking at the image below and assuming that the current time is 19:00 on April 27, 2017, only the first three alerts would appear in your alert history; they occurred within the previous hour (18:00 through 19:00). The fourth alert, which occurred on the same day at 16:58:50, is outside the previous hour and would no longer appear in InfluxDB&amp;rsquo;s &lt;code&gt;chronograf&lt;/code&gt; database or on Chronograf&amp;rsquo;s Alert History page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91e564a2c953fc723f06ddd75de38dd62cd1a08" translate="yes" xml:space="preserve">
          <source>Low load recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03423e07e72d3d16a0703c4748b49c48890137ee" translate="yes" xml:space="preserve">
          <source>MAX()</source>
          <target state="translated">MAX()</target>
        </trans-unit>
        <trans-unit id="0ebea8f1a2ceabca828f84b82fd274032937f6fc" translate="yes" xml:space="preserve">
          <source>MEAN()</source>
          <target state="translated">MEAN()</target>
        </trans-unit>
        <trans-unit id="ef04ea46395fa54dc2c98a016a0775425e2e39c2" translate="yes" xml:space="preserve">
          <source>MEDIAN()</source>
          <target state="translated">MEDIAN()</target>
        </trans-unit>
        <trans-unit id="0414b62b7b8f13df16cba82fbc07fe9bcb3dc531" translate="yes" xml:space="preserve">
          <source>MIN()</source>
          <target state="translated">MIN()</target>
        </trans-unit>
        <trans-unit id="095b35c2d2347aadd8b6a3810e91194a80eb4025" translate="yes" xml:space="preserve">
          <source>MODE()</source>
          <target state="translated">MODE()</target>
        </trans-unit>
        <trans-unit id="f163fa37c63beca08b1cd006efdb61c7036f8308" translate="yes" xml:space="preserve">
          <source>MOVING_AVERAGE()</source>
          <target state="translated">MOVING_AVERAGE()</target>
        </trans-unit>
        <trans-unit id="ce269305ca45aeee325d0d545a1ffdcee6e65777" translate="yes" xml:space="preserve">
          <source>Maintain the tags of points selected by top() or bottom() when writing the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3011640c6357c2e0469ca26e16fe5845e2d2a5" translate="yes" xml:space="preserve">
          <source>Make DNS lookups for chrony configurable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297deebeb8bd538b5f05915a709769e3beddfcdd" translate="yes" xml:space="preserve">
          <source>Make httpd logger closer to Common (&amp;amp; combined) Log Format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e63f74f97cfdf3530fe148b3442b9298f0fbb1" translate="yes" xml:space="preserve">
          <source>Make input plugin services open/close idempotent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286aef682b7c7842e5036d5b61e457af5d366f36" translate="yes" xml:space="preserve">
          <source>Make overlays full-screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f3b4299fa208796014b4bd9f998558d40a9b64" translate="yes" xml:space="preserve">
          <source>Make regular expressions work on field and dimension keys in SELECT clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd64539cc45e66420243bd4aa3084bd56ee09f7" translate="yes" xml:space="preserve">
          <source>Make snmptranslate not required when using numeric OID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2bc26fb9e053a8535c7ce0124d0a8d0e478f40" translate="yes" xml:space="preserve">
          <source>Make sure admin exists before authenticating query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8496802da55f9d572752a851f7028df219f7ce" translate="yes" xml:space="preserve">
          <source>Make the &lt;a href=&quot;../../guides/dashboard-template-variables/index&quot;&gt;template variables&lt;/a&gt; manager more space efficient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c14bb91ac720503df35506bf6312a3854e4747d" translate="yes" xml:space="preserve">
          <source>Make the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/logparser&quot;&gt;Logparser input plugin&lt;/a&gt; check for newly-created files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f3b4c61f949d21675a80168de68bf802305a5b" translate="yes" xml:space="preserve">
          <source>Make the enter and escape keys perform as expected when renaming dashboards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac34f549020db667ba0745ef30fb3afa1867563" translate="yes" xml:space="preserve">
          <source>Make the logout button consistent with design</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33ce36a27a9e430c3447791591b249070fbff2e" translate="yes" xml:space="preserve">
          <source>Make the user able to specify full path for HAproxy stats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a567d33e0a46e18210d859b4043f1eca926e9f71" translate="yes" xml:space="preserve">
          <source>Making a GET request to &lt;code&gt;/kapacitor/v1/storage/backup&lt;/code&gt; will return a dump of the Kapacitor database. To restore from a backup replace the &lt;code&gt;kapacitor.db&lt;/code&gt; file with the contents of the backup request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227e712b589de4685e25514522eb6419bdd3493c" translate="yes" xml:space="preserve">
          <source>Manage Users and their Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af8d69f909ff0f6bb01ce56d16e4b83f8db8008" translate="yes" xml:space="preserve">
          <source>ManageContinuousQuery</source>
          <target state="translated">ManageContinuousQuery</target>
        </trans-unit>
        <trans-unit id="c743431e9df6d7c04209337fe7a0b567098eca35" translate="yes" xml:space="preserve">
          <source>ManageQuery</source>
          <target state="translated">ManageQuery</target>
        </trans-unit>
        <trans-unit id="f34db9093ebc3f9808256be5bc8478d7d9146304" translate="yes" xml:space="preserve">
          <source>ManageShard</source>
          <target state="translated">ManageShard</target>
        </trans-unit>
        <trans-unit id="4e12c03d789e8492b5acf4ec64f063ccaa55d7e7" translate="yes" xml:space="preserve">
          <source>ManageSubscription</source>
          <target state="translated">ManageSubscription</target>
        </trans-unit>
        <trans-unit id="b40264fc507d77447457735614d01e469d67f986" translate="yes" xml:space="preserve">
          <source>Mandrill webhook plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5aed42c82f520390c45aa549a4c524cf24b36f" translate="yes" xml:space="preserve">
          <source>Many time &lt;a href=&quot;../glossary/index#series&quot;&gt;series&lt;/a&gt; are ephemeral. There are often time series that appear only for a few hours and then go away, e.g. a new host that gets started and reports for a while and then gets shut down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503a2c4aff65d615cb68c14dc4257f6e70dfc508" translate="yes" xml:space="preserve">
          <source>Map of statistics about a task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97a9cc57afa249eb581051664abefb229e144b2" translate="yes" xml:space="preserve">
          <source>Map syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837e460f5add5278454edb3843811fe1e224011d" translate="yes" xml:space="preserve">
          <source>Map types correctly when selecting a field with multiple measurements where one of the measurements is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8d18cfd178776e8180a56dbdeaabe067b57c4c" translate="yes" xml:space="preserve">
          <source>Map types correctly when using a regex and one of the measurements is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d973cca2a7ae80c2b37dd9180a4cb2b3002d6bc" translate="yes" xml:space="preserve">
          <source>Massage metric names in Instrumental output plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a331d7649214a0727f0b5b29732bdd882ee7bf4" translate="yes" xml:space="preserve">
          <source>Match - A lambda expression to filter matching alerts. By default all alerts match, see &lt;a href=&quot;match/index&quot;&gt;matching&lt;/a&gt; for details on the match expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18355520507f85bfcbb543e6f543395cf309bc64" translate="yes" xml:space="preserve">
          <source>Match - A lambda expression to filter matching alerts. By default all alerts match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1768d5ff24296390998a5cf314c66c5bf50ee87" translate="yes" xml:space="preserve">
          <source>Match Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadc89d1f71b8a888f213d71994a707e68edfccb" translate="yes" xml:space="preserve">
          <source>Match conditions can be applied to handlers. Only alerts matching the conditions will be handled by that handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9dd812c8cee8075d4f0c9bb1d1cddfdb5b2d22" translate="yes" xml:space="preserve">
          <source>Math functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a46c733f98e0b91d3ba8029a4593062b6eca0a2" translate="yes" xml:space="preserve">
          <source>Mathematical Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290906a3e7b2f92f61d6469ae251dfa3d00cc326" translate="yes" xml:space="preserve">
          <source>Mathematical operators follow the &lt;a href=&quot;https://golang.org/ref/spec#Operator_precedence&quot;&gt;standard order of operations&lt;/a&gt;. That is, parentheses take precedence to division and multiplication, which takes precedence to addition and subtraction. For example &lt;code&gt;5 / 2 + 3 * 2 =  (5 / 2) + (3 * 2)&lt;/code&gt; and &lt;code&gt;5 + 2 * 3 - 2 = 5 + (2 * 3) - 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95e85aed56318093b024674e217cae0bd30241d" translate="yes" xml:space="preserve">
          <source>Max</source>
          <target state="translated">Max</target>
        </trans-unit>
        <trans-unit id="2732d165b3c118d6355ad7992c364cc91b6899cd" translate="yes" xml:space="preserve">
          <source>Max index entries exceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64028b7ef9651f5e0c9bf08d57c40c964fb143d" translate="yes" xml:space="preserve">
          <source>Max returns the larger of x or y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a00e17d9759e0bf553d176dafc630bea7f9d376" translate="yes" xml:space="preserve">
          <source>Maximum Row Limit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145b60ce642abb98339f05de917d074d5b0fe48a" translate="yes" xml:space="preserve">
          <source>Maximum number of possible combinations. Since the number of possible combinations can grow very rapidly you can set a maximum number of combinations allowed. If the max is crossed, an error is logged and the combinations are not calculated. Default: 10,000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99d63f8e5f48836669c47b2c37bcce4dc7cd065" translate="yes" xml:space="preserve">
          <source>Maximum number of tasks to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc8f93eda0f1dc8f262a4c62e1740e77e64007f" translate="yes" xml:space="preserve">
          <source>Maximum number of templates to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b434a88382b228fda1e5156b740d66ce9ebdf15" translate="yes" xml:space="preserve">
          <source>May also have complex &lt;code&gt;GROUP BY&lt;/code&gt; clauses or sample a time range of multiple weeks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507eba4457c49f4db8191f792107e95b9a984de0" translate="yes" xml:space="preserve">
          <source>May sample a very large time range of months or years</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cda54aed2354d8cc3581b2c3d5e5a2e67b669a" translate="yes" xml:space="preserve">
          <source>Mean</source>
          <target state="translated">Mean</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="de10edfac7e76d9ec68df69f5a5a36c3464c6350" translate="yes" xml:space="preserve">
          <source>Measurement</source>
          <target state="translated">Measurement</target>
        </trans-unit>
        <trans-unit id="8769ba9b58601a5f40470a183b4eac53ff987afe" translate="yes" xml:space="preserve">
          <source>Measurement &amp;amp; Tag Templates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09472e47d26229dcf29c6d63ec175940fd17dbc9" translate="yes" xml:space="preserve">
          <source>Measurement Filtering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf83ebb299b27deb461bbd7348b110025cfc00d" translate="yes" xml:space="preserve">
          <source>Measurement Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1accb5bb1dd3b09a8e3798dcc89ffe064a462ac2" translate="yes" xml:space="preserve">
          <source>Measurement names, tag keys, tag values, field keys, and field values are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737bc96abf36489f03ef5e1bcb8676758cce6b97" translate="yes" xml:space="preserve">
          <source>Measurements</source>
          <target state="translated">Measurements</target>
        </trans-unit>
        <trans-unit id="d1b9f05b51cb23fa277623b43a3bca99914c6944" translate="yes" xml:space="preserve">
          <source>Measurements, tag keys, tag values, and field keys are always strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1055d300be3851926ef12dcabe30c058068aa6" translate="yes" xml:space="preserve">
          <source>Measurements, tag keys, tag values, field keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5523c00d89b779dbe00d596bdbe4ebf5204efb26" translate="yes" xml:space="preserve">
          <source>Measurements, tag keys, tag values, field keys, field values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b887ba2a5f48de4306096a0c833b73ac7ee01050" translate="yes" xml:space="preserve">
          <source>Median</source>
          <target state="translated">Median</target>
        </trans-unit>
        <trans-unit id="edc301f7283a9e45e85a8a8deab4551d236d86a4" translate="yes" xml:space="preserve">
          <source>Memcached</source>
          <target state="translated">Memcached</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="83cf30bbaddd943c58c7e578c5e7ca69e96f3256" translate="yes" xml:space="preserve">
          <source>Merge Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcffd569ce7d09b09bf3bb33fbd2eb201cda73e" translate="yes" xml:space="preserve">
          <source>Merge Iterator - This iterator combines one or more iterators into a single new iterator of the same type. This iterator guarantees that all points within a window will be output before starting the next window but does not provide ordering guarantees within the window. This allows for fast access for aggregate queries which do not need stronger sorting guarantees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d4373f89b0706e49c44187ba82c16b8cf46ae4" translate="yes" xml:space="preserve">
          <source>Mesos</source>
          <target state="translated">Mesos</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="0e1b66c842be13a7a4d7e1abcda391b637ffc9ec" translate="yes" xml:space="preserve">
          <source>Message &amp;ndash; the alert message, user defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab9d43bb8ea6afe4cf514859f9565d051914be8" translate="yes" xml:space="preserve">
          <source>Message: authentication/auth001.example.com is CRITICAL value:42</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb985cddd3066d4f02cdd56045969bd030186927" translate="yes" xml:space="preserve">
          <source>MessageField</source>
          <target state="translated">MessageField</target>
        </trans-unit>
        <trans-unit id="c0f64bc1a0c6300c73ef3d7e9985bc75f599c5bb" translate="yes" xml:space="preserve">
          <source>Meta Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593d2297d4b8888523294f71984ae026611bc0d2" translate="yes" xml:space="preserve">
          <source>Meta logging toggles the logging of messages from the meta service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12083f10e647ed1507bac4f18e81ce0b9a926d12" translate="yes" xml:space="preserve">
          <source>Meta nodes do not need very much computing power. Regardless of the cluster load, we recommend the following for the meta nodes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="87a40bfac46a1d154a587fca48a23d2e3ef8a0d4" translate="yes" xml:space="preserve">
          <source>Migrate any customizations in the 1.2 configuration file to the &lt;a href=&quot;../config/index&quot;&gt;1.3 configuration file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb0cee888ab55b559592d38eec027e9118d7d35" translate="yes" xml:space="preserve">
          <source>Min</source>
          <target state="translated">Min</target>
        </trans-unit>
        <trans-unit id="d4a6fe67a8f15c1c894bf05225db6c07db7dc926" translate="yes" xml:space="preserve">
          <source>Min returns the smaller of x or y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dee0ed87aabc51fcd2dbef66bf5bab4acdf5f6c" translate="yes" xml:space="preserve">
          <source>Minor bug fixes were identified via Community and InfluxCloud.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace586c7a78295c1be62d5d9cfcc891e79db7bd9" translate="yes" xml:space="preserve">
          <source>Minor improvements to init script. Removes sysvinit-utils as package dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="2a0e546c9609e6adc617b9cf538a78a85953e199" translate="yes" xml:space="preserve">
          <source>Missing error handling in the MySQL plugin leads to segmentation violation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373154d6ec87032b198bd3426fdb98b629297d1b" translate="yes" xml:space="preserve">
          <source>Mod returns the floating-point remainder of x/y. The magnitude of the result is less than y and its sign agrees with that of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="92d7289c39fe4514d81072bd31127c4b098198ab" translate="yes" xml:space="preserve">
          <source>Moderate load recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318b67e480b05390ec0b23c7afa71d5e86ccc49c" translate="yes" xml:space="preserve">
          <source>Moderate queries per second</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a1968aa5549bb3b50ce066d26e2799a11924b4" translate="yes" xml:space="preserve">
          <source>Moderate queries per second per node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71413b9462ee883cc62b624027f6fe6e31db2d3e" translate="yes" xml:space="preserve">
          <source>Moderate queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da366865fb221b4370281596cba7a685215da98b" translate="yes" xml:space="preserve">
          <source>Modern web APIs have settled on REST because it addresses a common need. As the number of endpoints grows the need for an organizing system becomes pressing. REST is the industry agreed style for organizing large numbers of endpoints. This consistency is good for those developing and consuming the API: everyone involved knows what to expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867e27f6b94a1136109b3f136d145562e11ad17f" translate="yes" xml:space="preserve">
          <source>Modify &lt;code&gt;what_is_time&lt;/code&gt; to have a three week &lt;code&gt;DURATION&lt;/code&gt;, a 30 minute shard group duration, and make it the &lt;code&gt;DEFAULT&lt;/code&gt; retention policy for &lt;code&gt;NOAA_water_database&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b3de908f49aceac3c56f5fb68a31a6ffc38d05" translate="yes" xml:space="preserve">
          <source>Modify an existing InfluxDB cluster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f49f4864d2cec32657da4670786dcf49a89f8a" translate="yes" xml:space="preserve">
          <source>Modify only the dbrps of the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a134cab309b4edf43c38a0a6dacb4e693f46e3b" translate="yes" xml:space="preserve">
          <source>Modify only the script of the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2fc1efa82f5bb9956bd0f63cffe2764f26e4b5" translate="yes" xml:space="preserve">
          <source>Modify retention policies with ALTER RETENTION POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c6e32834076c573abceafa54b9ecb16d0d2983" translate="yes" xml:space="preserve">
          <source>Modify the RP in Chronograf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0898e130decb883165ecd2521fb0d05ab5ca824b" translate="yes" xml:space="preserve">
          <source>Modify the default retention policy name and make it configurable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f94b1f482903000a1e22a62565043ce07a9a63" translate="yes" xml:space="preserve">
          <source>Modify the max nanosecond time to be one nanosecond less.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c247a088c2af28c4174f3891054a206288f94946" translate="yes" xml:space="preserve">
          <source>Modify the mirror UDF, to function like the &lt;a href=&quot;../../nodes/default_node/index&quot;&gt;DefaultNode&lt;/a&gt;. Instead of always overwriting a field, only set it if the field is not absent. Also add support for setting tags as well as fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a40520b4026078c79efca77f06437b79124739" translate="yes" xml:space="preserve">
          <source>Modulo</source>
          <target state="translated">Modulo</target>
        </trans-unit>
        <trans-unit id="81e2398e079b38877ff82b58d2a042633f02e398" translate="yes" xml:space="preserve">
          <source>Modulo (&lt;code&gt;%&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c6acff24bc7941d7797f41a861782190b4b85f" translate="yes" xml:space="preserve">
          <source>MongoDB</source>
          <target state="translated">MongoDB</target>
        </trans-unit>
        <trans-unit id="095112565ebc657b2d6621e89e1186392a469eda" translate="yes" xml:space="preserve">
          <source>MongoDB input plugin: Improve state data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51396991c8886e42509d38377d1e130f417b75cc" translate="yes" xml:space="preserve">
          <source>MongoDB input plugin: adding per DB stats from db.stats()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db53b7149ca498e29d05e0fbd0b7a9722fcb08ca" translate="yes" xml:space="preserve">
          <source>MongoDB plugin always shows 0 replication lag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="8104bcdd36b24e787494af5555a69d5b0ab80645" translate="yes" xml:space="preserve">
          <source>Monitor an InfluxEnterprise Cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82100f68803805ea72bbf3883e1ac943d45f2a5d" translate="yes" xml:space="preserve">
          <source>More man pages for the other tools we package and compress man pages fully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c8e5f54c0b2358779e0fb8a43911a0bcececcd" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;SELECT&lt;/code&gt; statements have a default time range between &lt;a href=&quot;#what-are-the-minimum-and-maximum-timestamps-that-influxdb-can-store&quot;&gt;&lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; and &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt; UTC&lt;/a&gt;. For &lt;code&gt;SELECT&lt;/code&gt; statements with a &lt;a href=&quot;../../query_language/data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt;, the default time range is between &lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; UTC and &lt;a href=&quot;../../concepts/glossary/index#now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b33422161aa87a597547fa30a37dd198a4a06c" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;SELECT&lt;/code&gt; statements have a default time range between &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-are-the-minimum-and-maximum-timestamps-that-influxdb-can-store&quot;&gt;&lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; and &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt; UTC&lt;/a&gt;. For &lt;code&gt;SELECT&lt;/code&gt; statements with a &lt;a href=&quot;#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt;, the default time range is between &lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; UTC and &lt;a href=&quot;../../concepts/glossary/index#now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ccb5cfbefd6d950151887d291e5a609584c9ab" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;SELECT&lt;/code&gt; statements have a default time range between &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-are-the-minimum-and-maximum-timestamps-that-influxdb-can-store&quot;&gt;&lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; and &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt; UTC&lt;/a&gt;. For &lt;code&gt;SELECT&lt;/code&gt; statements with an InfluxQL function and a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt;, the default time range is between &lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; UTC and &lt;a href=&quot;../../concepts/glossary/index#now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b123dd97194f459ac563f6eca3b1e3f72760c545" translate="yes" xml:space="preserve">
          <source>Most InfluxQL functions report &lt;code&gt;null&lt;/code&gt; values for time intervals with no data, and &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;&lt;code&gt;fill(&amp;lt;fill_option&amp;gt;)&lt;/code&gt;&lt;/a&gt; replaces that &lt;code&gt;null&lt;/code&gt; value with the &lt;code&gt;fill_option&lt;/code&gt;. &lt;code&gt;COUNT()&lt;/code&gt; reports &lt;code&gt;0&lt;/code&gt; for time intervals with no data, and &lt;code&gt;fill(&amp;lt;fill_option&amp;gt;)&lt;/code&gt; replaces any &lt;code&gt;0&lt;/code&gt; values with the &lt;code&gt;fill_option&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c3d015d61e7ff04e7a0eabeffae83d4a725a51" translate="yes" xml:space="preserve">
          <source>Most of the settings in the local configuration file (&lt;code&gt;/etc/influxdb/influxdb.conf&lt;/code&gt;) are commented out; all commented-out settings will be determined by the internal defaults. Any uncommented settings in the local configuration file override the internal defaults. Note that the local configuration file does not need to include every configuration setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b376620e1abea490c0476b0d277586f8a7845a" translate="yes" xml:space="preserve">
          <source>Mostly an insert/append workload, very few updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad93586faf01558efc786d2f5eb36e36917391b" translate="yes" xml:space="preserve">
          <source>Move alerta api token to header and add option to skip TLS verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73e42f87fe1cdacce70a4961123cadb645003bf" translate="yes" xml:space="preserve">
          <source>Move the CQ interval by the group by offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24e33550887922d8436da87821255f9ff30832c" translate="yes" xml:space="preserve">
          <source>Moving across each element in the diagram:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbf9980249310ba14ce5e34711edca84f3ed9f9" translate="yes" xml:space="preserve">
          <source>Moving across the inputs from right to left:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb4587a7d4b4d7af7b9f1acf69a909166cd64d1" translate="yes" xml:space="preserve">
          <source>MovingAverage</source>
          <target state="translated">MovingAverage</target>
        </trans-unit>
        <trans-unit id="e35ac0203a1fef2dcb5b1881363e036ecd70d1e9" translate="yes" xml:space="preserve">
          <source>Multiple Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c110439ec890c6c1e32a09dcd795434005e6249" translate="yes" xml:space="preserve">
          <source>Multiple calls to the Where method will &lt;code&gt;AND&lt;/code&gt; together each expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d8e88a43609e236b3e7b3bb82835bfc56219da" translate="yes" xml:space="preserve">
          <source>Multiple inputs of the same type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed522fae538b81b304ab23c4dff397693b62413e" translate="yes" xml:space="preserve">
          <source>Multiple queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18792d3a6df24878c89435113a67a6da0694109e" translate="yes" xml:space="preserve">
          <source>Multiple templates can also be specified, but these should be differentiated using &lt;em&gt;filters&lt;/em&gt; (see below for more details)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="a80087f13bb3518bf1c65ce8336c24887ec2926c" translate="yes" xml:space="preserve">
          <source>Multiplication distributes across other operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
