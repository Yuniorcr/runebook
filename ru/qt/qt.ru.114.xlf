<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="7060f25872d68855189a2ccc4b12fc808c253b53" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2DMultisample.xhtml&quot;&gt;glTexStorage2DMultisample()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3047fd33fbf54d8cb1004c1adf23f4f8235121b" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage3D.xhtml&quot;&gt;glTexStorage3D()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326a8d24b040afd0e1b3916e870d6c071b3e07e4" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexSubImage3D.xhtml&quot;&gt;glTexSubImage3D()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b672fc4540ff283e51f1f9942156934c1ba750d7" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTransformFeedbackVaryings.xhtml&quot;&gt;glTransformFeedbackVaryings()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc25a78a22956d9b4eb13950f23d94d59b4ae853" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform1ui()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586996228299fafadd5042783483bb088576e11c" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform1uiv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4555b16523148ba25f0ede38710d9c9796daecba" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform2ui()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daf88711c6f0fb7c66817ef495c9296a948dca5" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform2uiv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf354134c9cb079faefefcb7fdb8954557094c6a" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform3ui()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc3fc6b760d57d7fbf07c010a07c3bc62c98e33" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform3uiv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f58d3d1236e07ce61caf660908d5f70f9c4249" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform4ui()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd6d4c359aebdf997f72d8b9c2d2cda0d21e115" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform4uiv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db992cba7c5a4d51e72f321cf3329533a836f545" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix2x3fv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81f31c18dc9a8b602394a36ecaeeda14fa08bf6" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix2x4fv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1351e4c0a5f6f8af86fd40c427fc881e094680e9" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix3x2fv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44555b1762949a66de1d62f95b4332469aa91cdb" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix3x4fv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9790c75ef0c7ed9b4587d4c55231a209ac972c8b" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix4x2fv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec24a2924c5c725cf5e5d7cb01008723927d7dc" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix4x3fv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199bbe61fc6e80e4a8e1ed7efc9c3530cc92831f" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniformBlockBinding.xhtml&quot;&gt;glUniformBlockBinding()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9179a5b158a9e4c6a7eea34d4d14cf01475240" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUnmapBuffer.xhtml&quot;&gt;glUnmapBuffer()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca782a479c90f98160e7bfcf41c80985d87e1f6" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUseProgramStages.xhtml&quot;&gt;glUseProgramStages()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7b0907a4d238bf68527a92eb5e68e9805dd46" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glValidateProgramPipeline.xhtml&quot;&gt;glValidateProgramPipeline()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae50090d7ff1797d79a48c42faa9b7ba10a3e5f" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4i()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15ad46a2837691555443c31c5d25ac43d1a3b81" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4iv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c2a784cf0890ffd6c283af27b608d171a5c00e" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4ui()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194df5dbb78e8c67d22c0da8f5126200adb05087" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4uiv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a740d8ff35362b65aa970cb6389c798412a8d77" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribBinding.xhtml&quot;&gt;glVertexAttribBinding()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f6d99518299718e6b666e3f1825309758f9d2c" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribDivisor.xhtml&quot;&gt;glVertexAttribDivisor()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d9458a34b12404e47119b6fb1eb8d40ed56bcf" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribFormat.xhtml&quot;&gt;glVertexAttribFormat()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc742647e9b370895d48fed489229b38629691c1" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribIFormat.xhtml&quot;&gt;glVertexAttribIFormat()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dc3f41b6a70a607b596ebc08b6e62b14232f17" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexBindingDivisor.xhtml&quot;&gt;glVertexBindingDivisor()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0fc243e8c66cb615777adddfd6e10154a7953c" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glWaitSync.xhtml&quot;&gt;glWaitSync()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8d22968291eda6f7071aa894a784add50d14cb" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGet.xhtml&quot;&gt;glGetBooleani_v()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38987d9f26d6d24fbecad26748cab928e5d9871" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttribPointer.xhtml&quot;&gt;glVertexAttribIPointer()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09197ca2d7f7af626a18d78c61053c525f7a12e9" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation of the &lt;a href=&quot;#if-command&quot;&gt;\if&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512984b646987d8467a4cd61aa6fc8122fa51a9b" translate="yes" xml:space="preserve">
          <source>For more information, take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-flatstyle-example.html#&quot;&gt;Flat Style example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94bc43d2b2667f20dcc920fa6a917440c1de0e7" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-network-connectivity.html#&quot;&gt;Networking and Connectivity&lt;/a&gt; and &lt;a href=&quot;mobiledevelopment#&quot;&gt;Mobile APIs&lt;/a&gt; pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5e97702696ec620b0d8a9b07a1e7c26fbe3570" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#changing-model-data&quot;&gt;Using C++ Models with Qt Quick Views&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5945be5f9f6fc75acf72925bb2805ddde7314405" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;supported-platforms#&quot;&gt;supported platforms&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5ad52f90c3516f2ab5bbcad1cda5e26822843a" translate="yes" xml:space="preserve">
          <source>For more precise control, use &lt;a href=&quot;qsslsocket#addCaCertificate&quot;&gt;addCaCertificate&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b47275863816a1192f0ad4f748edf18e7fb92fa" translate="yes" xml:space="preserve">
          <source>For more sophisticated applications, reimplementing &lt;a href=&quot;qwidget#dragMoveEvent&quot;&gt;dragMoveEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dragLeaveEvent&quot;&gt;dragLeaveEvent()&lt;/a&gt; will let you make certain parts of your widgets sensitive to drop events, and give you more control over drag and drop in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d7a0174b6885535b11e7322d1a8710a79d4791" translate="yes" xml:space="preserve">
          <source>For most applications, the default growing algorithm provided by Qt does the trick. If you need more control, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;, &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; provide a trio of functions that allow you to check and specify how much memory to use to store the items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265c78d5e9261d22f9f588493f1019bb903c99ca" translate="yes" xml:space="preserve">
          <source>For most purposes, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the right class to use. Its index-based API is more convenient than &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;'s iterator-based API, and it is usually faster than &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; because of the way it stores its items in memory (see &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for details). It also expands to less code in your executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc58383a628be2e820aea06d596bf5ded5157ef" translate="yes" xml:space="preserve">
          <source>For most use cases, this is both expected and necessary, as it minimizes the possibility of text in the user interface being undisplayable. In some cases, however, more direct control over the process might be useful. It is for these use cases the &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; class exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a076e301a74a4a811208dfe5d85f6dc8a034462" translate="yes" xml:space="preserve">
          <source>For most users, there are no semantic benefits to using &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; instead of &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; since &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; requires attention to be paid to memory management issues, potentially making code more complex to write and maintain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93b0b8fd311223cc5ad4cd54a75a3da2b7f46cc" translate="yes" xml:space="preserve">
          <source>For most uses &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; and &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; should be used, you can easily access the key by calling &lt;a href=&quot;qhash-iterator#key&quot;&gt;QHash::iterator::key&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd4353393dcadff9c2a393314a05edf98620c9f" translate="yes" xml:space="preserve">
          <source>For most uses &lt;a href=&quot;qmap-iterator&quot;&gt;QMap::iterator&lt;/a&gt; and &lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap::const_iterator&lt;/a&gt; should be used, you can easily access the key by calling &lt;a href=&quot;qmap-iterator#key&quot;&gt;QMap::iterator::key&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cd2da267f7bc40465c067aa8343582c490f3b4" translate="yes" xml:space="preserve">
          <source>For mouse-over effects, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; dispatches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6712e488a5558a0e86871bc47c484ef8ae70e6ac" translate="yes" xml:space="preserve">
          <source>For multi-tap gestures (double-tap, triple-tap etc.), the distance moved must not exceed &lt;a href=&quot;qplatformtheme#ThemeHint-enum&quot;&gt;QPlatformTheme::MouseDoubleClickDistance&lt;/a&gt; with mouse and &lt;a href=&quot;qplatformtheme#ThemeHint-enum&quot;&gt;QPlatformTheme::TouchDoubleTapDistance&lt;/a&gt; with touch, and the time between taps must not exceed &lt;a href=&quot;qstylehints#mouseDoubleClickInterval-prop&quot;&gt;QStyleHints::mouseDoubleClickInterval()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de9adf6236c2777e474b38499658efaff11c058" translate="yes" xml:space="preserve">
          <source>For multiple items, &lt;a href=&quot;qlistwidget#insertItems&quot;&gt;insertItems&lt;/a&gt;() can be used instead. The number of items in the list is found with the &lt;a href=&quot;qlistwidget#count-prop&quot;&gt;count&lt;/a&gt;() function. To remove items from the list, use &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f305049186b00cafff8f1009c909839ea3a0e39" translate="yes" xml:space="preserve">
          <source>For multisample framebuffer objects a color render buffer is created, otherwise a texture with the specified texture target is created. The color render buffer or texture will have the specified internal format, and will be bound to the &lt;code&gt;GL_COLOR_ATTACHMENT0&lt;/code&gt; attachment in the framebuffer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db50479932cb5893812e37641cf2ec81c9dd9b44" translate="yes" xml:space="preserve">
          <source>For multisampled framebuffer objects the samples are resolved using the &lt;code&gt;GL_EXT_framebuffer_blit&lt;/code&gt; extension. If the extension is not available, the contents of the returned image is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141f1675eefbc65c06c849237bad54f5cf200c85" translate="yes" xml:space="preserve">
          <source>For multisampling to take effect, the render target must have been allocated with multisampling enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cca51db75ffdadb6e8ed2ae1f87d2f405fa805" translate="yes" xml:space="preserve">
          <source>For no border, use a width of 0 or a transparent color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55e337d7f34be7899e14d6cbddd78ef4ef19f9c" translate="yes" xml:space="preserve">
          <source>For no line, use a width of 0 or a transparent color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8e93c6e13120c6fd88b2052ae12f08888c0f41" translate="yes" xml:space="preserve">
          <source>For nodes created by &lt;a href=&quot;qdomdocument#setContent&quot;&gt;QDomDocument::setContent&lt;/a&gt;(), this function returns the column number in the XML document where the node was parsed. Otherwise, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c1e7f5e8add5140e0ac97cbbcc98ccb9dd69c1" translate="yes" xml:space="preserve">
          <source>For nodes created by &lt;a href=&quot;qdomdocument#setContent&quot;&gt;QDomDocument::setContent&lt;/a&gt;(), this function returns the line number in the XML document where the node was parsed. Otherwise, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a3912322c85c1be8249f74090c0c00681061c2" translate="yes" xml:space="preserve">
          <source>For non-const iterator types, the return value of the unary &lt;code&gt;*&lt;/code&gt; operator can be used on the left side of the assignment operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c027589afd6d7529017a8824fc85cccb96e60e21" translate="yes" xml:space="preserve">
          <source>For non-cubemap type targets this will return 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdf12168779a2d1a8b1eb93068e8f5b49e8a043" translate="yes" xml:space="preserve">
          <source>For non-directed, connectable advertising. Advertising is not directed to one specific device and a device seeing the advertisement can connect to the advertising device or send scan requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523abff3a435074c2d20e1f3b39194578a836fd6" translate="yes" xml:space="preserve">
          <source>For non-directed, non-connectable advertising. Advertising is not directed to one specific device. A device seeing the advertisement cannot connect to the advertising device, nor can it send a scan request. This mode thus implies pure broadcasting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a768e926f40467846c0c87cffa9c6404966d36" translate="yes" xml:space="preserve">
          <source>For non-directed, scannable advertising. Advertising is not directed to one specific device and a device seeing the advertisement can send a scan request to the advertising device, but cannot connect to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f021d10334640e4f5ba8479f7a1309d1e1b94e" translate="yes" xml:space="preserve">
          <source>For non-hierarchical schemes, the path will be everything following the scheme declaration, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21036d9b7e6d6b244bbdc6badb808baa34dbf315" translate="yes" xml:space="preserve">
          <source>For non-text items, a default baseline offset of 0 is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1994d09ad72c084f8d67483000f34244d4c0fabc" translate="yes" xml:space="preserve">
          <source>For notes about the performance on &lt;a href=&quot;qml-qtlocation-maproute&quot;&gt;MapRoute&lt;/a&gt;, refer to the documentation for &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4bfd796cfb0c68134f3a61374c801f0311361c" translate="yes" xml:space="preserve">
          <source>For objects that are created via the &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; function of &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;, the &lt;a href=&quot;qml-qttest-testcase#createTemporaryObject-method&quot;&gt;createTemporaryObject()&lt;/a&gt; function can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0328188dc426c3bbb29619a269103f526bd379d" translate="yes" xml:space="preserve">
          <source>For objects that are created via the &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; function of &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;, the &lt;a href=&quot;qml-testcase#createTemporaryObject-method&quot;&gt;createTemporaryObject()&lt;/a&gt; function can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e760d1912e0032f90a1d7f0f62c2e52ba5713f3b" translate="yes" xml:space="preserve">
          <source>For objects that are used to manipulate a value, for example slider or scroll bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6021527882a6b30c8317d796076157450377ad93" translate="yes" xml:space="preserve">
          <source>For open random-access devices, this function returns the size of the device. For open sequential devices, &lt;a href=&quot;qiodevice#bytesAvailable&quot;&gt;bytesAvailable&lt;/a&gt;() is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723bd7d9f5c8e1f91c5e3bef3a1dac92a1a717af" translate="yes" xml:space="preserve">
          <source>For opening the source view in the current tab, URLs with &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source#&quot;&gt;view-source URI scheme&lt;/a&gt; are also supported. For example, you can type the following URL to the URL bar to view the HTML source of the qt.io web page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ad97c2f81a91bbda6e4cd7fb7e78253db37e73" translate="yes" xml:space="preserve">
          <source>For optimization purposes, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4ce81e399d592597df4a9f120ff0b98c2b97a0" translate="yes" xml:space="preserve">
          <source>For options found by the parser, the last value found for that option is returned. If the option wasn't specified on the command line, the default value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4439b8b695c93fe6c22907d4a90d02a18ef85efb" translate="yes" xml:space="preserve">
          <source>For options found by the parser, the list will contain an entry for each time the option was encountered by the parser. If the option wasn't specified on the command line, the default values are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e8bfa43b9f0095da070aa02a606dd8654bc67b" translate="yes" xml:space="preserve">
          <source>For orientable sensors, the &lt;a href=&quot;qsensor#axesOrientationMode-prop&quot;&gt;axesOrientationMode&lt;/a&gt; property controls how the orientation affects the reading values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae623bf7948f4faa438692582e35f8045cf7b705" translate="yes" xml:space="preserve">
          <source>For other Unix-type systems, this function usually returns &quot;unknown&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3528409d11abd774ea7a7cdafe2ccc0ea9e210" translate="yes" xml:space="preserve">
          <source>For other platforms, it is recommended to display help texts and error messages using a &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;. To preserve the formatting of the help text, rich text with &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; elements should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ffd7e4297e5bef7699347a59c7b3c75b07e485" translate="yes" xml:space="preserve">
          <source>For out-of-process executable servers you can implement a main() function to instantiate a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object and enter the event loop just like any normal Qt application. By default the application will start as a standard Qt application, but if you pass &lt;code&gt;-activex&lt;/code&gt; on the command line it will start as an ActiveX server. Use &lt;a href=&quot;qaxfactory#isServer&quot;&gt;QAxFactory::isServer&lt;/a&gt;() to create and run a standard application interface, or to prevent a stand-alone execution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8271df4d7263fdf87d8c19eb933745ee8702da" translate="yes" xml:space="preserve">
          <source>For out-of-process servers this is the same as &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;QCoreApplication::applicationDirPath&lt;/a&gt;(). For in-process servers that function returns the directory that contains the hosting application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9381a6dca2f0087d475a821cffb011b0e300c4e" translate="yes" xml:space="preserve">
          <source>For out-of-process servers this is the same as &lt;a href=&quot;qcoreapplication#applicationFilePath&quot;&gt;QCoreApplication::applicationFilePath&lt;/a&gt;(). For in-process servers that function returns the file path of the hosting application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd56a1edd7e4a11307624394d37ec2b46e0c01e" translate="yes" xml:space="preserve">
          <source>For outgoing datagrams, this function can be used to set the address the datagram should be sent to. It can be the unicast address used to communicate with the peer or a broadcast or multicast address to send to a group of devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a496415abc767cd9bd43f48dac5ecd5e220168de" translate="yes" xml:space="preserve">
          <source>For outgoing datagrams, this function can be used to set the address the datagram should carry. The address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f302317ec28bcbcfec70b6be6bbc67ba9b3a576d" translate="yes" xml:space="preserve">
          <source>For parallel state groups, the &lt;a href=&quot;qml-qtqml-statemachine-state#finished-signal&quot;&gt;State::finished&lt;/a&gt; signal is emitted when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a1c2c864fdc1d52ee0e053bca3f4047a97e665" translate="yes" xml:space="preserve">
          <source>For parallel state groups, the &lt;a href=&quot;qstate#finished&quot;&gt;QState::finished&lt;/a&gt;() signal is emitted when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01e72ddddff74feceedcfe6a6e3ea0bc7d3f6d0" translate="yes" xml:space="preserve">
          <source>For percentage spacing a value of 100 indicates default spacing; a value of 200 doubles the amount of space a letter takes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96db63bc5dd274e5dba02a019fffc3c2549f9499" translate="yes" xml:space="preserve">
          <source>For performance reasons, the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a60c141c5a5c5aaa28c105ef825cb982631910" translate="yes" xml:space="preserve">
          <source>For performance reasons, the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72b07d10a543a6fb8c64f31ca82f2716470620a" translate="yes" xml:space="preserve">
          <source>For performance reasons, the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1db67ff409715ceaf331daf5ebd1faa4da36b83" translate="yes" xml:space="preserve">
          <source>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd18d8e88ad2ee2ee79dff50cacb0504ce2964dd" translate="yes" xml:space="preserve">
          <source>For performance reasons, you can only anchor an item to its siblings and direct parent. For example, the following anchor is invalid and would produce a warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b00d979180e8475ba750f8507ec74dcadf00ec" translate="yes" xml:space="preserve">
          <source>For platforms where this id might be useful, the value returned will uniquely represent the window inside the corresponding screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03792ab9759ae90e4841cc775ade2ec23fe58de1" translate="yes" xml:space="preserve">
          <source>For platforms without high-resolution trackpad support, pixelDelta will always be (0,0), and &lt;a href=&quot;qml-qtquick-wheelevent#angleDelta-prop&quot;&gt;angleDelta&lt;/a&gt; should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23dfa23b2cd3cd525a864641204d0ec9ab0b336" translate="yes" xml:space="preserve">
          <source>For polar charts,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edd2e4a4373b88ca25a25dd39a81dc38d55de7c" translate="yes" xml:space="preserve">
          <source>For possible replacements of the word, see &lt;a href=&quot;qwebenginecontextmenudata#spellCheckerSuggestions&quot;&gt;spellCheckerSuggestions&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dda4ae339f3cc379bd458b42c0226b797167be4" translate="yes" xml:space="preserve">
          <source>For presses on the &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; itself, use its &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;pressed&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fb6825e8a11fdd30dd53bd3564ce2541963a45" translate="yes" xml:space="preserve">
          <source>For processing instructions, the string value is the data section(excluding any whitespace appearing between the name and the data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a6af365da6bd211c823f49424a179e32f4144d" translate="yes" xml:space="preserve">
          <source>For production applications, the class can be used to display messages which the user only needs to see once. To use &lt;a href=&quot;qerrormessage&quot;&gt;QErrorMessage&lt;/a&gt; like this, you create the dialog in the usual way, and show it by calling the &lt;a href=&quot;qerrormessage#showMessage&quot;&gt;showMessage&lt;/a&gt;() slot or connecting signals to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088c0ad46ec526744912cd1a843bdb9deb76aa90" translate="yes" xml:space="preserve">
          <source>For projects where the build target is a &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, iOS, tvOS, or watchOS framework, this variable is used to specify the version number that will be applied to the framework that is built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc81f40bb9915ee61c55aaff5bae4b6469d4bf6d" translate="yes" xml:space="preserve">
          <source>For properties of type string, the &lt;code&gt;&amp;lt;stringpropertyspecification&amp;gt;&lt;/code&gt; tag can be used. This tag has the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcde94c7e1707c980c0d80ab76dc04421c8dfe0" translate="yes" xml:space="preserve">
          <source>For properties that have overloaded signals, QDoc groups the overloaded notifiers together. To refer to a specific version of a notifier or signal, simply refer to the property and mention that there are different versions of the notifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bf5171d1369eb6d977ffad25fba7684775775e" translate="yes" xml:space="preserve">
          <source>For random-access devices, skip() can be used to seek forward from the current position. Negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f489f939d154612911f038cfe6ae91ed5b07d2af" translate="yes" xml:space="preserve">
          <source>For random-access devices, this function returns the position that data is written to or read from. For sequential devices or closed devices, where there is no concept of a &quot;current position&quot;, 0 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39124c92a4f485cfaa28770c86e9fe46164b95d" translate="yes" xml:space="preserve">
          <source>For random-access devices, this function sets the current position to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2c57728e58c9cbc653cd9f08c029c0c4e8267c" translate="yes" xml:space="preserve">
          <source>For read requests as well as combined read/write requests send via &lt;a href=&quot;qmodbusclient#sendReadWriteRequest&quot;&gt;QModbusClient::sendReadWriteRequest&lt;/a&gt;() it contains the values read from the server instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1d7bb4508aebd214f1f0cc49b01ba175c8e177" translate="yes" xml:space="preserve">
          <source>For read-only access, an alternative syntax is to use &lt;a href=&quot;qbytearray#at&quot;&gt;at&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef8571d471d94c07abab6acd7629ad39008c386" translate="yes" xml:space="preserve">
          <source>For read-only access, an alternative syntax is to use &lt;a href=&quot;qvector#at&quot;&gt;at&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ed82f6e56204c24e59a8131ef14870a9650553" translate="yes" xml:space="preserve">
          <source>For read-only access, an alternative syntax is to use the &lt;a href=&quot;qstring#at&quot;&gt;at&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efd209cb70adcd896be48ab7e0dbe31d0a7d457" translate="yes" xml:space="preserve">
          <source>For read-only access, you can use const_iterator, &lt;a href=&quot;qlist#constBegin&quot;&gt;constBegin()&lt;/a&gt;, and &lt;a href=&quot;qlist#constEnd&quot;&gt;constEnd()&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701f88892ff1d092651aca1c9cfbada00991939b" translate="yes" xml:space="preserve">
          <source>For reading small pieces of data, use &lt;a href=&quot;qhttppart#setBody&quot;&gt;setBody&lt;/a&gt;(); for larger data blocks like e.g. images, use &lt;a href=&quot;qhttppart#setBodyDevice&quot;&gt;setBodyDevice&lt;/a&gt;(). The latter method saves memory by not copying the data internally, but reading directly from the device. This means that the device must be opened and readable at the moment when the multipart message containing the body part is sent on the network via &lt;a href=&quot;qnetworkaccessmanager#post&quot;&gt;QNetworkAccessManager::post&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5bf06d5432ed8a00b49bd152619c24c856aeb0" translate="yes" xml:space="preserve">
          <source>For regular empty files on Unix (e.g. those in &lt;code&gt;/proc&lt;/code&gt;), this function returns 0; the contents of such a file are generated on demand in response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195362308191e4b1cebdc8495fbb1764ae71e45e" translate="yes" xml:space="preserve">
          <source>For regular empty files on Unix (e.g. those in &lt;code&gt;/proc&lt;/code&gt;), this function returns &lt;code&gt;true&lt;/code&gt;, since the file system reports that the size of such a file is 0. Therefore, you should not depend on atEnd() when reading data from such a file, but rather call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() until no more data can be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ff32a69e021444d5a7b532c8626cebe14007e6" translate="yes" xml:space="preserve">
          <source>For regular expressions containing &lt;a href=&quot;qregexp#capturing-parentheses&quot;&gt;capturing parentheses&lt;/a&gt;, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e5d831ff4eb121f0d7ab885a93faa118cf56a6" translate="yes" xml:space="preserve">
          <source>For regular expressions containing capturing groups, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bfaebfc6ff391c57c539030b3bff61ae4a7853" translate="yes" xml:space="preserve">
          <source>For regular expressions that contain &lt;a href=&quot;qregexp#capturing-parentheses&quot;&gt;capturing parentheses&lt;/a&gt;, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae910bac251c1b5efc1e5c62cad38003e38b57ad" translate="yes" xml:space="preserve">
          <source>For regular expressions that contain capturing groups, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b2230eeef2bb606b615d9e602c96b52a47c7b2" translate="yes" xml:space="preserve">
          <source>For relational columns,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c719323a18796330a9934cce2156d2165f0ae0e8" translate="yes" xml:space="preserve">
          <source>For rendernodes covering the entire area of a corresponding &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; the return value will be (0, 0, item-&amp;gt;width(), item-&amp;gt;height()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2638a22780fc979dc6335c34a9978a6245ec569a" translate="yes" xml:space="preserve">
          <source>For reporting critical errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d8ec7161be0a14aacbf9661b8cfe109c1acd49" translate="yes" xml:space="preserve">
          <source>For reporting information about normal operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596bff57ecf455ec4c315a3d7b508ae39f7ff5ce" translate="yes" xml:space="preserve">
          <source>For reporting non-critical errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69423da71998a0245561d718de2b9cb3b007b4a3" translate="yes" xml:space="preserve">
          <source>For representing an image as a shape to affectors and emitters. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0251583871d7ef3a6deacfd22f576e0f9bff16a2" translate="yes" xml:space="preserve">
          <source>For right-to-left languages such as Arabic and Hebrew, the layout of horizontal splitters is reversed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a19414f32e6ceedb3e4240cdf73efdfce7e166a" translate="yes" xml:space="preserve">
          <source>For right-to-left languages such as Arabic and Hebrew, the layout of horizontal splitters is reversed. Positions are then measured from the right edge of the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df664faa31cc66c3b6a4927f6ac445117b3514e5" translate="yes" xml:space="preserve">
          <source>For right-to-left languages such as Arabic and Hebrew, the layout of horizontal splitters is reversed. The handle will be to the right of the widget at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fed7e0df2ee8622f3438bbc1be9aa5ca3768492" translate="yes" xml:space="preserve">
          <source>For running Qt applications on your Mac or in the simulator that comes with Xcode, this is all you need. However, for running applications on a mobile device and/or publishing your applications in the App Store, you must join the &lt;a href=&quot;https://developer.apple.com/programs/#&quot;&gt;Apple Developer Program&lt;/a&gt;, and set up developer certificates and provisioning profiles. The easiest solution is to use a profile that takes any App ID (a &lt;code&gt;*&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ef69aa3ecb8d456ac99887ade0b821cbf48c57" translate="yes" xml:space="preserve">
          <source>For sequential devices, all data recorded in the internal buffer during the transaction will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbe1449399236abac03fb5739ec25826b0bdaf8" translate="yes" xml:space="preserve">
          <source>For server sockets, calling this function is the only way to initiate the SSL handshake. Most servers will call this function immediately upon receiving a connection, or as a result of having received a protocol-specific command to enter SSL mode (e.g, the server may respond to receiving the string &quot;STARTTLS\r\n&quot; by calling this function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d63a69087231586818e6cd7055552aa58ea78c4" translate="yes" xml:space="preserve">
          <source>For setting attributes on a logical particle group. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0101be221f839230ec62ae217b235a7e6f0539" translate="yes" xml:space="preserve">
          <source>For setting headers, use &lt;a href=&quot;qhttppart#setHeader&quot;&gt;setHeader&lt;/a&gt;() and &lt;a href=&quot;qhttppart#setRawHeader&quot;&gt;setRawHeader&lt;/a&gt;(), which behave exactly like &lt;a href=&quot;qnetworkrequest#setHeader&quot;&gt;QNetworkRequest::setHeader&lt;/a&gt;() and &lt;a href=&quot;qnetworkrequest#setRawHeader&quot;&gt;QNetworkRequest::setRawHeader&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18109e78adaa9bab094626b557692f2111f91a56" translate="yes" xml:space="preserve">
          <source>For shared libraries, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/sharedlibrary.html&quot;&gt;Creating Shared Libraries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb5470027817aee205fe2a4c6a6987f311c8a02" translate="yes" xml:space="preserve">
          <source>For signals with default parameters, this function will always return the index with all parameters, regardless of which was used with &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;(). For example, the signal &lt;code&gt;destroyed(QObject *obj = 0)&lt;/code&gt; will have two different indexes (with and without the parameter), but this function will always return the index with a parameter. This does not apply when overloading signals with different parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e0e18060378651ab109e8a6c29a0c1053d7827" translate="yes" xml:space="preserve">
          <source>For simple animations that simply animate an item's movement to its final destination, this interruption is unlikely to require additional consideration. However, if a transition changes other properties, this interruption may cause unwanted side effects. Consider the first example on this page, repeated below for convenience:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab43fd672f2feeee99c382fe3b699c3f9c01c57" translate="yes" xml:space="preserve">
          <source>For simple control of event processing use &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication::processEvents&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027eedd67c0c0321d92a67f3ad9d8a441069c8e2" translate="yes" xml:space="preserve">
          <source>For simplicity, we are only interested in the items in the first column of the model. We examine each row in turn, obtaining a model index for the first item in each row, and read the data stored for that item in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdb35a963cb39f115d762c7ec6cd5cd46ae865f" translate="yes" xml:space="preserve">
          <source>For singlesampled framebuffers the contents is retrieved via &lt;code&gt;glReadPixels&lt;/code&gt;. This is a potentially expensive and inefficient operation. Therefore it is recommended that this function is used as seldom as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f3fda9876f433f742a09dc70aa40fc95a100b4" translate="yes" xml:space="preserve">
          <source>For sliders, scrollbars and other numerical value selectors &lt;a href=&quot;qaccessiblevalueinterface&quot;&gt;QAccessibleValueInterface&lt;/a&gt; should be implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49bf622b5a947267f7a7a3cc26abb0671bf162c" translate="yes" xml:space="preserve">
          <source>For slots or notifiers, the condition when they are executed or triggered by a signal should be documented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb2c9ca73f347ea65d5db2085efc40d14cf0c4" translate="yes" xml:space="preserve">
          <source>For smooth scaling between mip maps, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Linear&lt;/a&gt;. For normal scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Nearest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7931324760c85e312d99f48d54a74e26783075e" translate="yes" xml:space="preserve">
          <source>For smooth scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Linear&lt;/a&gt;. For normal scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Nearest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ef95122ae5d789554235d4c4e6c579e5ab8e94" translate="yes" xml:space="preserve">
          <source>For smooth scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Linear&lt;/a&gt;; for normal scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Nearest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb11561ae96a7fbe72cce759b4b208214d48e01" translate="yes" xml:space="preserve">
          <source>For some custom QML object types, it may be beneficial to delay the initialization of particular data until the object has been created and all of its properties have been set. For example, this may be the case if the initialization is costly, or if the initialization should not be performed until all property values have been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a3bb2b2c531637ada6a5f5b7ac95ddaf2570f5" translate="yes" xml:space="preserve">
          <source>For some databases, if an active query that is a &lt;code&gt;SELECT&lt;/code&gt; statement exists when you call &lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit()&lt;/a&gt; or &lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback()&lt;/a&gt;, the commit or rollback will fail. See &lt;a href=&quot;qsqlquery#isActive&quot;&gt;isActive&lt;/a&gt;() for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5cbc7c56a624ef4f888624d791184ee2ccafc3" translate="yes" xml:space="preserve">
          <source>For some devices, atEnd() can return true even though there is more data to read. This special case only applies to devices that generate data in direct response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() (e.g., &lt;code&gt;/dev&lt;/code&gt; or &lt;code&gt;/proc&lt;/code&gt; files on Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, or console input / &lt;code&gt;stdin&lt;/code&gt; on all platforms).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601191c363f472648c84e80f6355902f097c0817" translate="yes" xml:space="preserve">
          <source>For some resistive, single-touch touch screens it may be necessary to fall back to using &lt;code&gt;tslib&lt;/code&gt; instead of relying on the Linux multi-touch protocol and the event devices. For modern touch screens this is not necessary. &lt;code&gt;tslib&lt;/code&gt; support can be enabled by setting the environment variable &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; or &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; to 1. To change the device, set the environment variable &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; or pass the device name on the command-line. Note that the &lt;code&gt;tslib&lt;/code&gt; input handler generates mouse events and supports single touch only, as opposed to &lt;code&gt;evdevtouch&lt;/code&gt; which generates true multi-touch &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; events too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111cc4d8f8c8cda09306b27896193ad2f17ed812" translate="yes" xml:space="preserve">
          <source>For some specialized forms of tables it is useful to be able to convert between row and column indexes and widget coordinates. The &lt;a href=&quot;qtableview#rowAt&quot;&gt;rowAt&lt;/a&gt;() function provides the y-coordinate within the view of the specified row; the row index can be used to obtain a corresponding y-coordinate with &lt;a href=&quot;qtableview#rowViewportPosition&quot;&gt;rowViewportPosition&lt;/a&gt;(). The &lt;a href=&quot;qtableview#columnAt&quot;&gt;columnAt&lt;/a&gt;() and &lt;a href=&quot;qtableview#columnViewportPosition&quot;&gt;columnViewportPosition&lt;/a&gt;() functions provide the equivalent conversion operations between x-coordinates and column indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb98b98b577ab32a03d3ff4bc79946a2f352c103" translate="yes" xml:space="preserve">
          <source>For sophisticated session managers provided on Unix/X11, &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; offers further possibilities to fine-tune an application's session management behavior: &lt;a href=&quot;qsessionmanager#setRestartCommand&quot;&gt;setRestartCommand&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#setDiscardCommand&quot;&gt;setDiscardCommand&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#setRestartHint&quot;&gt;setRestartHint&lt;/a&gt;(), &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#requestPhase2&quot;&gt;requestPhase2&lt;/a&gt;(). See the respective function descriptions for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f207811dc727b33f664d0d35871def5ed8cff827" translate="yes" xml:space="preserve">
          <source>For specialized widgets that do not share a common API with standard Qt widgets, it is worth considering adapting a custom widget for use in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aefc8f0f84287ff884434af8bb0194a3e1bdc84" translate="yes" xml:space="preserve">
          <source>For specific QDoc information, consult the &lt;a href=&quot;qdoc-index#&quot;&gt;QDoc Manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee91a2994015f2f1a2ee4ea602d4f265186c1ee" translate="yes" xml:space="preserve">
          <source>For specifying a delegate to paint particles. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcada01be27e609ff9bf3e409bc439d0b1f5b4b9" translate="yes" xml:space="preserve">
          <source>For specifying a direction made of other directions. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18a0776ae31dc09b84fd43c43a6e5fed320147a" translate="yes" xml:space="preserve">
          <source>For specifying a direction that varies in angle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5adc638747b67f4dc9a2edfb57eff3eda461e4" translate="yes" xml:space="preserve">
          <source>For specifying a direction that varies in x and y components. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f0893bb9b2199c25c349ef3365976574b9054a" translate="yes" xml:space="preserve">
          <source>For specifying a direction towards the target point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20d7fa85332a10f8b592615c3acf4e3e195aa5a" translate="yes" xml:space="preserve">
          <source>For specifying a grid view of items provided by a model. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639b1d93991fd4d92c9b4f13c5a6ea99e47f7409" translate="yes" xml:space="preserve">
          <source>For specifying a list of media to be played</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6754581fc17518bcc9ad331bc582b5c1206be5c" translate="yes" xml:space="preserve">
          <source>For specifying a list of media to be played.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90de790b7ef368514778a26402ba874ca2f37b2" translate="yes" xml:space="preserve">
          <source>For specifying a list of media to be played. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d968b1ab172370c64051d7a0725ef7956d01d17a" translate="yes" xml:space="preserve">
          <source>For specifying a read-only model using XPath expressions. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db66047828d04d4cfe427f5ab2a0b8a8e7af35cb" translate="yes" xml:space="preserve">
          <source>For specifying a role to an &lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel&quot;&gt;XmlListModel&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811df84d29274d076ea101c86efb8caf61664d5a" translate="yes" xml:space="preserve">
          <source>For specifying a vector space. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa5c842caf9a468c1f1b91cd617c68d78c4a993" translate="yes" xml:space="preserve">
          <source>For specifying advanced transformations on Items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3203e79d799e7bb4a55ee8114ed2e17138581e1c" translate="yes" xml:space="preserve">
          <source>For specifying an area for affectors and emitter. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693a693a67d5c037ef5c94bb5e105a42faab04fe" translate="yes" xml:space="preserve">
          <source>For specifying drag and drop events for moved Items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc71b060f2b09572327b36fc6180d52a2fb4da15" translate="yes" xml:space="preserve">
          <source>For specifying drag and drop handling in an area. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fe70129ad03fbc6e64e4c45ec4d0113f1a0edc" translate="yes" xml:space="preserve">
          <source>For specifying how to paint particles. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3173759b14fb0be0076c624de788a52541ae35e" translate="yes" xml:space="preserve">
          <source>For specifying information about a pinch event. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de91f8639fc686cc4f1afe20f10abfadc3cd06c" translate="yes" xml:space="preserve">
          <source>For specifying shaders to paint particles. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0f3700bca277b39dea4765ca1c9613e487bbcd" translate="yes" xml:space="preserve">
          <source>For split items themselves, use the attached &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9766712c5369af313d444892fd856babd5bf0771" translate="yes" xml:space="preserve">
          <source>For stand-alone test applications, the convenience macro &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt;() can be used to declare a main() function that parses the command line arguments and executes the tests, avoiding the need to call this function explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7f2a8e50128fb80292887dc05133a51bf2691c" translate="yes" xml:space="preserve">
          <source>For stand-alone test applications, this function should not be called more than once, as command-line options for logging test output to files and executing individual test functions will not behave correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26e2aadc6170ebe6336ec1dbf22cc59e496324d" translate="yes" xml:space="preserve">
          <source>For standard shortcuts, a &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;standard key&lt;/a&gt; can be used to request the platform-specific key sequence associated with each shortcut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1055bc27f49982abd08e6cabc719435ad6f872f4" translate="yes" xml:space="preserve">
          <source>For styling complex widgets, it is necessary to access subcontrols of the widget, such as the drop-down button of a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or the up and down arrows of a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;. Selectors may contain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a79ee830b4807ee7c1db3530c4f6b8b907241c5" translate="yes" xml:space="preserve">
          <source>For subclasses of &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;, this is the central function where a large portion of the work to lay out and position document contents is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483f1058e2fa562a22bba3ce8ad817d0f64b84d3" translate="yes" xml:space="preserve">
          <source>For subclasses, you might also need the &lt;a href=&quot;qtabbar#tabRect&quot;&gt;tabRect&lt;/a&gt;() functions which returns the visual geometry of a single tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4891950ea85f07f0c45fceba88757d42dbb2b76a" translate="yes" xml:space="preserve">
          <source>For sublayouts the default margins are 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881787c602921f1bc1c82b0ecca5cc7ebb1cc0a6" translate="yes" xml:space="preserve">
          <source>For such an object, the &lt;a href=&quot;qsqlrelation#tableName&quot;&gt;tableName&lt;/a&gt;(), &lt;a href=&quot;qsqlrelation#indexColumn&quot;&gt;indexColumn&lt;/a&gt;(), and &lt;a href=&quot;qsqlrelation#displayColumn&quot;&gt;displayColumn&lt;/a&gt;() functions return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c994057bdc339a5c192648a73271c1b8aa138e" translate="yes" xml:space="preserve">
          <source>For systems integrators and distributors, information related to making Qt Location available for a new platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e259cd200c4fc56beaa6bccf2d9dfdf240d333f" translate="yes" xml:space="preserve">
          <source>For targets that do not support array layers this function has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ee98fb0954f53377c2a920ca389830f6a6a6f6" translate="yes" xml:space="preserve">
          <source>For targets that do not support multisampling this function has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427739f63110d77067f1484310a31d6fe2dc755" translate="yes" xml:space="preserve">
          <source>For technical details about this approach, check out &lt;a href=&quot;https://wiki.qt.io/Qt_for_Embedded_Linux/XDC2014RitgerEGLNonMesa&quot;&gt;this presentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69324059ef5a45459baaa9b092751edc28d20c24" translate="yes" xml:space="preserve">
          <source>For technical reasons, it is more efficient to use &lt;a href=&quot;qbitarray#testBit&quot;&gt;testBit&lt;/a&gt;() and &lt;a href=&quot;qbitarray#setBit&quot;&gt;setBit&lt;/a&gt;() to access bits in the array than operator[](). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8666334db8afda73aa4d8f50e50e0799a3e2ab" translate="yes" xml:space="preserve">
          <source>For technical reasons, the model count must be equal to or greater than &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#visibleItemCount-prop&quot;&gt;visibleItemCount&lt;/a&gt; plus one. The &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#visibleItemCount-prop&quot;&gt;visibleItemCount&lt;/a&gt; must also be an odd number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0d7d267d166e1f904a0cbf7f1a96478f142e38" translate="yes" xml:space="preserve">
          <source>For testcase projects, qmake will insert a &lt;code&gt;check&lt;/code&gt; target into the generated Makefile. This target will run the application. The test is considered to pass if it terminates with an exit code equal to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181fd81f9e8b403e20ebb4adf77b2b99f8f50310" translate="yes" xml:space="preserve">
          <source>For text nodes, the string value equals the text node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc9787c8ad3e0ea235d720d0b9153dc3e73cd0f" translate="yes" xml:space="preserve">
          <source>For text that supports selections or is more than one line. Simple labels do not need to implement this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa28b914fa8bd5202f8e41b6a547620267d21d9" translate="yes" xml:space="preserve">
          <source>For texture targets that do not support array layers this will return 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8895aae90d4db28b675a9898fe9546566974fd91" translate="yes" xml:space="preserve">
          <source>For texture targets that do not support multisampling this will return 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb96c245a99332fa62f57a6279c2b687ce41248f" translate="yes" xml:space="preserve">
          <source>For texture targets that do not support multisampling this will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416a1c3d5849e58f9c13b9787717dbe6568601a9" translate="yes" xml:space="preserve">
          <source>For texture targets that support mipmaps, this function sets the requested number of mipmap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53327dae67000c0296cd8c8ee066e91a0e2aa7c2" translate="yes" xml:space="preserve">
          <source>For that reason, &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; never encodes the space character to &quot;+&quot; and will never decode &quot;+&quot; to a space character. Instead, space characters will be rendered &quot;%20&quot; in encoded form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30671d116d9598e756d84aa41c1076299fbc02a7" translate="yes" xml:space="preserve">
          <source>For that reason, it is not adviseable to create a copy of &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;(). If one needs an exclusive deterministic generator, consider instead using &lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;securelySeeded&lt;/a&gt;() to obtain a new object that shares no relationship with the &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74def40d1dc2678e86a0f55bcf46396c0c6f0c5" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; specific post-processing steps to work the server has to meet some requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fa00e214be8aa042631e943e15492dff76e0fb" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; on the left, we set its &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;. For the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; on right, we also set each delegate's &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt; to illustrate the effects of clipping on batching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ab28dcda5e63174529141067f813ecb0fdcc47" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-column&quot;&gt;Column&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flow&quot;&gt;Flow&lt;/a&gt; positioner types, which operate with collections of child items rather than data models, the following properties are used instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749270035a793a12a68f004b0620715b52e68b51" translate="yes" xml:space="preserve">
          <source>For the Oracle 9 ODBC driver (Windows), it is necessary to check &quot;SQL_WCHAR support&quot; in the ODBC driver manager otherwise Oracle will convert all Unicode strings to local 8-bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41448f0a514ee7b73df69bf2ffa1a2b2578349a8" translate="yes" xml:space="preserve">
          <source>For the QML engine to know that the &lt;code&gt;Bar&lt;/code&gt; type has a &lt;code&gt;baz&lt;/code&gt; property, we have to make &lt;code&gt;Bar&lt;/code&gt; known:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15410c02d2ebc476338dd155f0376cf90f4f149" translate="yes" xml:space="preserve">
          <source>For the QOCI (Oracle) driver, the database name is the TNS Service Name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993b2e19719afc5651d9c290925932afc3db9b99" translate="yes" xml:space="preserve">
          <source>For the QODBC driver, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4b0c7e0ffda439720a305bb2db477e2781251c" translate="yes" xml:space="preserve">
          <source>For the above snippet, QDoc renders the word</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56baff0163742f40b76734d4a9a4f05f418fdb3c" translate="yes" xml:space="preserve">
          <source>For the basic classes in Qt, a class's module is determined by its location, namely its directory. However, for extensions like &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and Qt Designer, a class must be related to a module explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f65a2fce853648944e44c4a2a1c960bdc65a896" translate="yes" xml:space="preserve">
          <source>For the buttons, &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; is used (see &lt;a href=&quot;#tool-buttons&quot;&gt;Tool Buttons&lt;/a&gt; for content description). The dock widget resize handle has a plain &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06eff76d7fecf9ab9a1d11c3a00d8fe63eac6395" translate="yes" xml:space="preserve">
          <source>For the color that is set when the dialog is accepted, use the &lt;a href=&quot;qml-qtquick-dialogs-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c86062998c04c2a2d73cfe18d2e006dec45406" translate="yes" xml:space="preserve">
          <source>For the common case of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; property change, &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; handles this for you automatically by sending a &lt;a href=&quot;qt3dcore-qpropertyupdatedchange&quot;&gt;QPropertyUpdatedChange&lt;/a&gt; event to the backend nodes. You only need to call this function if you wish to send a specific type of change in place of the automatic handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81682ad318eaa4e85928c2c8043fc248d41f8456" translate="yes" xml:space="preserve">
          <source>For the common case, the default index method &lt;a href=&quot;qgraphicsscene#ItemIndexMethod-enum&quot;&gt;BspTreeIndex&lt;/a&gt; works fine. If your scene uses many animations and you are experiencing slowness, you can disable indexing by calling &lt;code&gt;setItemIndexMethod(NoIndex)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6d83c4ead6af8967b20e6957072d299f55061e" translate="yes" xml:space="preserve">
          <source>For the complete example, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;WebEngine Quick Nano Browser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a79b9a01770180f74ce06ba40e327ace8e106b" translate="yes" xml:space="preserve">
          <source>For the complete list, see &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue::Type&lt;/a&gt;. The type of a &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; can be queried using &lt;a href=&quot;qcborvalue#type&quot;&gt;type&lt;/a&gt;() or one of the &quot;isXxxx&quot; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29e8102d76f9b48d46c04c9554c3f4e030b4651" translate="yes" xml:space="preserve">
          <source>For the convenience of generating encoded URL strings or query strings, there are two static functions called &lt;a href=&quot;qurl#fromPercentEncoding&quot;&gt;fromPercentEncoding&lt;/a&gt;() and &lt;a href=&quot;qurl#toPercentEncoding&quot;&gt;toPercentEncoding&lt;/a&gt;() which deal with percent encoding and decoding of &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1708cceb115f8159917283c387e61d9683168b6" translate="yes" xml:space="preserve">
          <source>For the desktop, VAOs are supported as a core feature in OpenGL 3.0 or newer and by the GL_ARB_vertex_array_object for older versions. On OpenGL ES 2, VAOs are provided by the optional GL_OES_vertex_array_object extension. You can check the version of OpenGL with QOpenGLContext::surfaceFormat() and check for the presence of extensions with &lt;a href=&quot;qopenglcontext#hasExtension&quot;&gt;QOpenGLContext::hasExtension&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f283afdba0d5a7e0d134e99ba28af49661a68612" translate="yes" xml:space="preserve">
          <source>For the element named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408c9dee0725bf2ef66c78bcb8fce1d3e2fa836c" translate="yes" xml:space="preserve">
          <source>For the following example, we assume a model &lt;code&gt;myModel&lt;/code&gt; that has two columns: the first one contains the names of people in a group, and the second column contains their ages. The first column is mapped to the &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;&lt;code&gt;nameLineEdit&lt;/code&gt;, and the second is mapped to the &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;&lt;code&gt;ageSpinBox&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4774760b16d36ddfbe863881ffec472ea6b774" translate="yes" xml:space="preserve">
          <source>For the full list of available font properties, see the &lt;a href=&quot;qml-font&quot;&gt;font QML Basic Type&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8597151829f7be49db485647601159a8f577287e" translate="yes" xml:space="preserve">
          <source>For the full list of available palette colors, see the &lt;a href=&quot;qml-palette#qtquickcontrols2-palette&quot;&gt;palette QML Basic Type&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea8ba3e283e0019b9f8c31449ac2fa0f5fd45ad" translate="yes" xml:space="preserve">
          <source>For the full list of devations, please refer to the file &lt;code&gt;unsupported_features.txt&lt;/code&gt; in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab86b24212bc819606f600d070cbc235a1ba50a" translate="yes" xml:space="preserve">
          <source>For the icons to be used, the filenames also have to be listed in the Info.plist. The best way is to list all icon files using the &lt;code&gt;CFBundleIconFiles&lt;/code&gt; key. The iPad specific version can be given using the &lt;code&gt;CFBundleIcons~ipad&lt;/code&gt; key, by adding something like the following code snippet to Info.plist:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6086f5397432247ed6769bb9869425951eb9bac8" translate="yes" xml:space="preserve">
          <source>For the minor tickmarks, we'll only show those which are not higher than &lt;code&gt;80&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cafb1d86bdb7dc154718a4275a7a6164e4a6b0c" translate="yes" xml:space="preserve">
          <source>For the moment, &lt;code&gt;moc&lt;/code&gt; will extract and record all tags, but it will not handle any of them specially. You can use the tags to annotate your methods differently, and treat them according to the specific needs of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15768e18613297f3d8aa03cf36b114d70399832a" translate="yes" xml:space="preserve">
          <source>For the most common MIME types, &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; provides convenience functions to access the data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79453a62b44595a79bd950002acd1f5acd866fa4" translate="yes" xml:space="preserve">
          <source>For the most common types of data, you can call the higher-level functions &lt;a href=&quot;qmimedata#hasText&quot;&gt;hasText&lt;/a&gt;(), &lt;a href=&quot;qmimedata#hasHtml&quot;&gt;hasHtml&lt;/a&gt;(), &lt;a href=&quot;qmimedata#hasUrls&quot;&gt;hasUrls&lt;/a&gt;(), &lt;a href=&quot;qmimedata#hasImage&quot;&gt;hasImage&lt;/a&gt;(), and &lt;a href=&quot;qmimedata#hasColor&quot;&gt;hasColor&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20926f202b31fd3bae17bb359b79166a20a7ce1f" translate="yes" xml:space="preserve">
          <source>For the most common types of data, you can call the higher-level functions &lt;a href=&quot;qmimedata#setText&quot;&gt;setText&lt;/a&gt;(), &lt;a href=&quot;qmimedata#setHtml&quot;&gt;setHtml&lt;/a&gt;(), &lt;a href=&quot;qmimedata#setUrls&quot;&gt;setUrls&lt;/a&gt;(), &lt;a href=&quot;qmimedata#setImageData&quot;&gt;setImageData&lt;/a&gt;(), and &lt;a href=&quot;qmimedata#setColorData&quot;&gt;setColorData&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9baf6a70a0479ba102aa42f4af8be93378ebed" translate="yes" xml:space="preserve">
          <source>For the most part, Qt applications will work without problems. For example, in qmake, the Qt mkspecs set &lt;a href=&quot;qmake-variable-reference#qmake-ios-deployment-target&quot;&gt;QMAKE_IOS_DEPLOYMENT_TARGET&lt;/a&gt;, &lt;a href=&quot;qmake-variable-reference#qmake-macosx-deployment-target&quot;&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/a&gt;, &lt;a href=&quot;qmake-variable-reference#qmake-tvos-deployment-target&quot;&gt;QMAKE_TVOS_DEPLOYMENT_TARGET&lt;/a&gt;, or &lt;a href=&quot;qmake-variable-reference#qmake-watchos-deployment-target&quot;&gt;QMAKE_WATCHOS_DEPLOYMENT_TARGET&lt;/a&gt; to the minimum version that Qt itself supports. Similarly, in Qbs, the Qt modules set &lt;code&gt;cpp.minimumIosVersion&lt;/code&gt;, &lt;code&gt;cpp.minimumMacosVersion&lt;/code&gt;, &lt;code&gt;cpp.minimumTvosVersion&lt;/code&gt;, or &lt;code&gt;cpp.minimumWatchosVersion&lt;/code&gt; to the minimum version that Qt itself supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759b7e8ab6d16459bce27c240279d6a67d6931e7" translate="yes" xml:space="preserve">
          <source>For the object-based types (including Date and RegExp), use the newT() functions in &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; (e.g. &lt;a href=&quot;qjsengine#newObject&quot;&gt;QJSEngine::newObject&lt;/a&gt;()) to create a &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; of the desired type. For the primitive types, use one of the &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; constructor overloads. For other types, e.g. registered gadget types such as &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, you can use &lt;a href=&quot;qjsengine#toScriptValue&quot;&gt;QJSEngine::toScriptValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d338e8c3d07bf54c48e4d79f174c32cc8fe637a5" translate="yes" xml:space="preserve">
          <source>For the one-parameter version, the braces can often be omitted. The \l command supports several ways of linking:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71ece461ad0489c3f629baf53c9cca8ee1d8ba3" translate="yes" xml:space="preserve">
          <source>For the outermost transaction, discards the restoration point and any internally duplicated data of the stream. Will not affect the current read position of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b77e454be4f5f064dfc981709cf4a9aa0c3ce5" translate="yes" xml:space="preserve">
          <source>For the outermost transaction, restores the stream data to the point of the &lt;a href=&quot;qdatastream#startTransaction&quot;&gt;startTransaction&lt;/a&gt;() call. If the data stream has read corrupt data or any of the inner transactions was aborted, this function aborts the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138b607cb9527a1946d1035a624f5e10d9d7f608" translate="yes" xml:space="preserve">
          <source>For the progress dialog to work as expected, you should initially set this property to &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;QProgressDialog::minimum&lt;/a&gt;() and finally set it to &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;QProgressDialog::maximum&lt;/a&gt;(); you can call setValue() any number of times in-between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676b0a06436f301145eb64a0270e476948f63eb1" translate="yes" xml:space="preserve">
          <source>For the purposes of this property, the scene as a whole is assumed to act like a focus scope. On a practical level, that means the following QML will give active focus to &lt;code&gt;input&lt;/code&gt; on startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41e1058245b934e5574b1c4d666e93496f225db" translate="yes" xml:space="preserve">
          <source>For the reduce function, function objects are not directly supported. Function objects can, however, be used when the type of the reduction result is explicitly specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e792da14f21688d00e0320d8193daf97235430" translate="yes" xml:space="preserve">
          <source>For the sake of consistency, subclasses should describe the specific details of the associated areas in terms of &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; instances and distances in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79911bc5d3a3e06a7756155561e294752a12875a" translate="yes" xml:space="preserve">
          <source>For the sake of efficiency, there are no functions to access a field by name (unless you use prepared queries with names, as explained below). To convert a field name into an index, use &lt;a href=&quot;qsqlquery#record&quot;&gt;record&lt;/a&gt;().&lt;a href=&quot;qsqlrecord#indexOf&quot;&gt;indexOf()&lt;/a&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0815407580e63d80f921e19c2e6ae41b2b62ebeb" translate="yes" xml:space="preserve">
          <source>For the same reason, new types introduced in later versions should use the minor version argument of &lt;a href=&quot;qqmlengine#qmlRegisterType&quot;&gt;qmlRegisterType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55720944c6ab196cf0c5957ee512fed2c2924aee" translate="yes" xml:space="preserve">
          <source>For the size in surface coordinates, use &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface#destinationSize-prop&quot;&gt;destinationSize&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541658563e26e3ce9e494869deb7d1b561c8a78d" translate="yes" xml:space="preserve">
          <source>For the size in surface coordinates, use &lt;a href=&quot;qwaylandsurface#destinationSize-prop&quot;&gt;destinationSize&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79578008e7be6e989ac935beaca34ba78a0ecbe9" translate="yes" xml:space="preserve">
          <source>For the standard Qt source build, the .qhp file is generated and placed in the same directory as the HTML pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ae8b2f532777816279fc67d339c30f730e52ed" translate="yes" xml:space="preserve">
          <source>For the use case of protecting a resource over a long time, you should therefore call &lt;a href=&quot;qlockfile#setStaleLockTime&quot;&gt;setStaleLockTime&lt;/a&gt;(0), and when &lt;a href=&quot;qlockfile#tryLock&quot;&gt;tryLock&lt;/a&gt;() returns &lt;a href=&quot;qlockfile#LockError-enum&quot;&gt;LockFailedError&lt;/a&gt;, inform the user that the document is locked, possibly using &lt;a href=&quot;qlockfile#getLockInfo&quot;&gt;getLockInfo&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b5d2418c725737443601f81fee82ff8e80eb38" translate="yes" xml:space="preserve">
          <source>For the web engine view to be rendered, the web engine must be initialized by using &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine::initialize&lt;/a&gt; in the application main source file, as illustrated by the following code snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bfa34e9f694693e02de98335bc2e163199e6c9" translate="yes" xml:space="preserve">
          <source>For these reasons, Qt Objects should be treated as identities, not as values. Identities are cloned, not copied or assigned, and cloning an identity is a more complex operation than copying or assigning a value. Therefore, &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and all subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (direct or indirect) have their &lt;a href=&quot;qobject#no-copy-constructor&quot;&gt;copy constructor and assignment operator&lt;/a&gt; disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3661a61f7f928bb3745e7d73d8a12211dd037daa" translate="yes" xml:space="preserve">
          <source>For this approach, we'll copy the background code from the default style's &lt;code&gt;Button.qml&lt;/code&gt;. This file can be found in the following path in your Qt installation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca63e70354eb863dd5712fb7d4712a907ac02824" translate="yes" xml:space="preserve">
          <source>For this function, the only ambiguous delimiter is the hash (&quot;#&quot;), as in URLs it is used to separate the query string from the fragment that may follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7449477c7713f96fe9e3d6f85913f130780746" translate="yes" xml:space="preserve">
          <source>For this kind of completion to work, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; needs to be able to split the path into a list of strings that are matched at each level. For &lt;code&gt;C:\Windows\Sy&lt;/code&gt;, it needs to be split as &quot;C:&quot;, &quot;Windows&quot; and &quot;Sy&quot;. The default implementation of &lt;a href=&quot;qcompleter#splitPath&quot;&gt;splitPath&lt;/a&gt;(), splits the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completionPrefix&lt;/a&gt; using &lt;a href=&quot;qdir#separator&quot;&gt;QDir::separator&lt;/a&gt;() if the model is a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dfb89f0894587d21d6cb8f4671f3265046f2d2" translate="yes" xml:space="preserve">
          <source>For this kind of customization, style sheets are much more powerful than &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;. For example, it might be tempting to set the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Button&lt;/a&gt; role to red for a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; to obtain a red push button. However, this wasn't guaranteed to work for all styles, because style authors are restricted by the different platforms' guidelines and (on Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;) by the native theme engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd809502816773e16d9c61f79cd03774eb5103a" translate="yes" xml:space="preserve">
          <source>For this mechanism to work, the application must run in an event loop. You start an event loop with &lt;a href=&quot;qapplication#exec&quot;&gt;QApplication::exec&lt;/a&gt;(). When a timer fires, the application sends a &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;, and the flow of control leaves the event loop until the timer event is processed. This implies that a timer cannot fire while your application is busy doing something else. In other words: the accuracy of timers depends on the granularity of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9380fb205d2751cb77f5179016fc5235371bfa8d" translate="yes" xml:space="preserve">
          <source>For this reason, it is better to use a relative URL (that is, no scheme) for relative file paths:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e10fe81d3c173e5e2f2a353faa6a6003d01059" translate="yes" xml:space="preserve">
          <source>For those new to QML and Qt Quick, please see &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; for an introduction to writing QML applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe80d63df73552e68b6cbd1983fecee9dc7be09" translate="yes" xml:space="preserve">
          <source>For traversing the items stored in a container, you can use one of two types of iterators: &lt;a href=&quot;#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are easier to use and provide high-level functionality, whereas the STL-style iterators are slightly more efficient and can be used together with Qt's and STL's &lt;a href=&quot;qtalgorithms&quot;&gt;generic algorithms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc995549335c329d24efefe93721e662050bc546" translate="yes" xml:space="preserve">
          <source>For troubleshooting it might be useful to enable debug logs from the KMS/DRM backend. To do this, enable the categorized logging rule, &lt;code&gt;qt.qpa.eglfs.kms&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d82518d05bcee29aece112c1b9f2f5032958ef1" translate="yes" xml:space="preserve">
          <source>For troubleshooting, enable the logging category &lt;code&gt;qt.vulkan&lt;/code&gt;. Critical errors are printed via &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;() automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a63aa74cbab99f3f7f5adf3658c26c820645fb" translate="yes" xml:space="preserve">
          <source>For unassigned, private-use, noncharacter, and surrogate code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187b972906388d04582cbbcd84caf64e9a486790" translate="yes" xml:space="preserve">
          <source>For unparsed entities this function returns the name of the notation for the entity. For parsed entities this function returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae7d98e6bd042a4e8f8abafac62505b1a354c56" translate="yes" xml:space="preserve">
          <source>For unscaled output the size of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3830355bb62aa9cd14891515dc3b7022f71446ac" translate="yes" xml:space="preserve">
          <source>For use-cases which do not need to transition between animations, consider the &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; type. This type displays sprite animations with the same input format, but only one at a time. It also provides more fine-grained manual control, as there is no sprite engine managing the timing and transitions behind the scenes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b00088fd394f335029aa6a5c81e6f89c79c18ff" translate="yes" xml:space="preserve">
          <source>For user interfaces with multiple visual states, independent of the application's logical state, consider using QML States and Transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdafaa805a7c08b5e146a92031a176c0ec1ab78" translate="yes" xml:space="preserve">
          <source>For user options, it is up to the developer to decide which types to use and ensure that components use the correct types when accessing and setting values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f3fa6724996d91330d96838edda57aaa8274d4" translate="yes" xml:space="preserve">
          <source>For user roles, it is up to the developer to decide which types to use and ensure that components use the correct types when accessing and setting data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8884c2659dcc2722908f806c34e191b70a13d1" translate="yes" xml:space="preserve">
          <source>For users of &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; subclasses or of &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; there is seldom any need to use the basic functions provided by &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;, such as &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;setSizeConstraint&lt;/a&gt;() or &lt;a href=&quot;qlayout#setMenuBar&quot;&gt;setMenuBar&lt;/a&gt;(). See &lt;a href=&quot;layout#&quot;&gt;Layout Management&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be012c8c6c98a77121e764d19af1b08e29196e15" translate="yes" xml:space="preserve">
          <source>For users who just want to apply custom shading to a QML Item type, it is possible to do this directly in QML using the &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb90a83ba843fe7ae3c7ad7539f0fe2a9f8949be" translate="yes" xml:space="preserve">
          <source>For versions prior to &lt;a href=&quot;qdatastream#Version-enum&quot;&gt;Qt_4_6&lt;/a&gt;, the precision of floating point numbers in the data stream depends on the stream operator called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e1ab622b1290abf3ca7e4f9f41b66ea6da2ed3" translate="yes" xml:space="preserve">
          <source>For very simple cases simply setting the &lt;code&gt;focus&lt;/code&gt; property is sometimes sufficient. If we run the following example with &lt;a href=&quot;qtquick-qmlscene&quot;&gt;qmlscene&lt;/a&gt;, we see that the &lt;code&gt;keyHandler&lt;/code&gt; type has active focus and pressing the &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;C&lt;/code&gt; keys modifies the text appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eb9f7ae096b4c610f44b5cc2251b519a540617" translate="yes" xml:space="preserve">
          <source>For visible widgets, this is an approximation of the area not covered by other widgets; otherwise, this is an empty region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f529ac2ed90a80a4234cbccd663c1836400c1ee" translate="yes" xml:space="preserve">
          <source>For visual explanations of the various modes, see the &lt;a href=&quot;qml-qtquick-controls2-slider#snapMode-prop&quot;&gt;snapMode&lt;/a&gt; documentation of &lt;a href=&quot;qml-qtquick-controls2-slider&quot;&gt;Slider&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677f8f54149a2359b2c4f5833237c5564c57954f" translate="yes" xml:space="preserve">
          <source>For visualizing logical particles using an image. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669540cb2dc76248f45e5b12cf9ecbd0102f6d18" translate="yes" xml:space="preserve">
          <source>For widgets that need to distinguish between mouse clicks and drags, it is useful to reimplement the widget's &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent()&lt;/a&gt; function to record to start position of the drag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782e6ba861b4e717104be77eecbd10173bd85ce7" translate="yes" xml:space="preserve">
          <source>For widgets that use contents propagation, a scroll will cause an update of the entire scroll area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccf7e874aeaf8bfe3b7a3425b9f57e05f408fb2" translate="yes" xml:space="preserve">
          <source>For windows, the screen size is also taken into account. If the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() is less than (200, 100) and the size policy is &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;expanding&lt;/a&gt;, the window will be at least (200, 100). The maximum size of a window is 2/3 of the screen's width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484ea6912a83621d10b52267c9e8fd1cde55f937" translate="yes" xml:space="preserve">
          <source>For writing plugins to support additional codecs refer to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e429eb7146adbdc8e47383e488a68d350e06fe" translate="yes" xml:space="preserve">
          <source>For your own classes, you can use &lt;a href=&quot;qtest#toString&quot;&gt;QTest::toString&lt;/a&gt;() to format values for outputting into the test log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1625c5119694a5915b084ee40b338f321d148e" translate="yes" xml:space="preserve">
          <source>For zero-length matches, pos() always returns -1. (For example, if cap(4) would return an empty string, pos(4) returns -1.) This is a feature of the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531a5efb8750001a60baf13a7537c7c4ca81e477" translate="yes" xml:space="preserve">
          <source>Force 32bit integer values. In case of floating point numbers, the fractional part is silently discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664572cc6dc219ca026f31f7f68560c0ac7f092a" translate="yes" xml:space="preserve">
          <source>Force 64bit integer values. In case of floating point numbers, the fractional part is silently discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc909fdfbf8f630991cec162c3758105898fc179" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;double&lt;/code&gt; values. This is the default policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e01adc12411ca85c6601765940d32ff475fd35e" translate="yes" xml:space="preserve">
          <source>Force any in-progress incubation to finish synchronously. Once this call returns, the incubator will not be in the Loading state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a60be20e3a739c3cae5ad13e9319ea9f23641c" translate="yes" xml:space="preserve">
          <source>Force the generation of an &lt;code&gt;#include&lt;/code&gt; statement in the output. This is the default for header files whose extension starts with &lt;code&gt;H&lt;/code&gt; or &lt;code&gt;h&lt;/code&gt;. This option is useful if you have header files that do not follow the standard naming conventions. The &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; part is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3c5eef0d649ff913b76f756b9e2225bac254d1" translate="yes" xml:space="preserve">
          <source>Force the view to discard its current buffer, to allow it to be reused on the client side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3240e83f417fc978a43c1f2ec196d9580ffe256" translate="yes" xml:space="preserve">
          <source>ForceMono</source>
          <target state="translated">ForceMono</target>
        </trans-unit>
        <trans-unit id="ff3ef0cf13e260a7f578b437d437854b1dea7ffd" translate="yes" xml:space="preserve">
          <source>ForceStereo</source>
          <target state="translated">ForceStereo</target>
        </trans-unit>
        <trans-unit id="d27728ec37d8bdea8c349cb73033073d34dbf640" translate="yes" xml:space="preserve">
          <source>Forces Qt to generate paint events when the mouse enters or leaves the widget. This feature is typically used when implementing custom styles; see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html&quot;&gt;Styles&lt;/a&gt; example for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b8c573dcfba1a916b217c299420787f4c78c8a" translate="yes" xml:space="preserve">
          <source>Forces active focus on the item with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1f18bb73051bb9a002cb7de0adb3cda2d72b30" translate="yes" xml:space="preserve">
          <source>Forces active focus on the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cc1b2d58c964342919d9610e9f66260abd4b8d" translate="yes" xml:space="preserve">
          <source>Forces active focus on the popup with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb2cc9b27d6bdf42861abebb3c3500f9489e66c" translate="yes" xml:space="preserve">
          <source>Forces the current thread to sleep for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cd7ce94bf952bd74cf39a6fc20c39a5c7e8df5" translate="yes" xml:space="preserve">
          <source>Forces the radio to play the station in mono, converting the sound signal if necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0786c6667b1a23b4f2d8573a047fda53acface4" translate="yes" xml:space="preserve">
          <source>Forces the radio to play the station in stereo, converting the sound signal if necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bf3c4d9eecce7ae9386707c99d14e76b066468" translate="yes" xml:space="preserve">
          <source>Forces the search engine to reindex all documentation files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fa323281c7fbb8f749ea2f7447cbe05f445780" translate="yes" xml:space="preserve">
          <source>Forces the usage of OpenGL ES 2.0 or higher on platforms that use dynamic loading of the OpenGL implementation. This attribute must be set before &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; is constructed. This value was added in Qt 5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fd1b92ff91ff5492ce645333a2271e1cb832fb" translate="yes" xml:space="preserve">
          <source>Forces the usage of a software based OpenGL implementation on platforms that use dynamic loading of the OpenGL implementation. This will typically be a patched build of &lt;a href=&quot;http://www.mesa3d.org/llvmpipe.html&quot;&gt;Mesa llvmpipe&lt;/a&gt;, providing OpenGL 2.1. The value may have no effect if no such OpenGL implementation is available. The default name of this library is &lt;code&gt;opengl32sw.dll&lt;/code&gt; and can be overridden by setting the environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c750cedbad922cae5010ca2f2e39d7b3115955af" translate="yes" xml:space="preserve">
          <source>Forces the usage of desktop OpenGL (for example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e8f17b7b8b3fcc4570795402a5e6aa6d828e74" translate="yes" xml:space="preserve">
          <source>ForeachInfo Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ec9bf5735a0d6847053ba742124dd3e47e781d" translate="yes" xml:space="preserve">
          <source>ForeachInfo::array</source>
          <target state="translated">ForeachInfo::array</target>
        </trans-unit>
        <trans-unit id="53a91346e6c67b9b5e1fe51857144709625595ad" translate="yes" xml:space="preserve">
          <source>ForeachInfo::context</source>
          <target state="translated">ForeachInfo::context</target>
        </trans-unit>
        <trans-unit id="b0d140fe90e89cc497dc9343e91f87318dabff44" translate="yes" xml:space="preserve">
          <source>ForeachInfo::index</source>
          <target state="translated">ForeachInfo::index</target>
        </trans-unit>
        <trans-unit id="992b6e7d38dc471281f4a0cef053737b61d384dc" translate="yes" xml:space="preserve">
          <source>ForeachInfo::item</source>
          <target state="translated">ForeachInfo::item</target>
        </trans-unit>
        <trans-unit id="3224a3de48b4863e9ef6281cada77e9b85a71045" translate="yes" xml:space="preserve">
          <source>ForeachLoopBody Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ebbe3c699755f91bdf3823a7abf50e9abb05e8" translate="yes" xml:space="preserve">
          <source>ForeachLoopBody::ForeachLoopBody()</source>
          <target state="translated">ForeachLoopBody::ForeachLoopBody()</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="bda935261b73660abd7e733b6130b8b99bd81e1e" translate="yes" xml:space="preserve">
          <source>Form editing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68eb2daaba320955356c28255cb253733cf0368" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14f5eea95739a2c4299a76747c8ee981dd2895f" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3feadc2ecd20d9c6fbc4469d03ddef208abaab90" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.accepted</source>
          <target state="translated">FormValidationMessageRequest.accepted</target>
        </trans-unit>
        <trans-unit id="40039cbf484f2ebf8a4a7e2055d786ef5b7c0369" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.anchor</source>
          <target state="translated">FormValidationMessageRequest.anchor</target>
        </trans-unit>
        <trans-unit id="5f8c6eff47db98d9578f7c7e410f6cd077391b39" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.subText</source>
          <target state="translated">FormValidationMessageRequest.subText</target>
        </trans-unit>
        <trans-unit id="51cdf6eacfb03e6f1f906fe52e0ba66a92bfec13" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.text</source>
          <target state="translated">FormValidationMessageRequest.text</target>
        </trans-unit>
        <trans-unit id="fde8ba1d4b79fddcf6dcd4f7c3e7cd101d53e8b3" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.type</source>
          <target state="translated">FormValidationMessageRequest.type</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="9c334d4efee52a1bce465305caea2d205f8493db" translate="yes" xml:space="preserve">
          <source>Format and Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda60dda49e4ee3b3cc1742779be44927352d7cd" translate="yes" xml:space="preserve">
          <source>Format error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92072a59ec922347ae5a8c0a0533b4ff215006cd" translate="yes" xml:space="preserve">
          <source>Format independent interface for reading images from files or other devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81135fe211b1cfe4c6d1d6997928c61d559fb191" translate="yes" xml:space="preserve">
          <source>Format independent interface for writing images to files or other devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a25e9fe886b5689318e78f3511568a83379b7d" translate="yes" xml:space="preserve">
          <source>Format names are always given in lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6377a283504aeac5d72e02235635a2c5bfe6fb" translate="yes" xml:space="preserve">
          <source>Format not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22444a1a505e515bd96e70b6ef29ed384e2133c9" translate="yes" xml:space="preserve">
          <source>Format related</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b353a29adc598852e35d4fdedcd83d83de8b659" translate="yes" xml:space="preserve">
          <source>Format-independent interface for writing a QTextDocument to files or other devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e3619de64199c5bc469ed60aa229dfeb9b4bca" translate="yes" xml:space="preserve">
          <source>Format-specific Configuration Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598ebe6ebe678a88375bfa2bfc217b36c3d341d2" translate="yes" xml:space="preserve">
          <source>FormatError</source>
          <target state="translated">FormatError</target>
        </trans-unit>
        <trans-unit id="5db5e55f45fe5bd44f616de0e0468f5b6eb6ba5f" translate="yes" xml:space="preserve">
          <source>FormatNotSupportedError</source>
          <target state="translated">FormatNotSupportedError</target>
        </trans-unit>
        <trans-unit id="ab91b4a9fd52e475e534a297b48262d3a8c537c7" translate="yes" xml:space="preserve">
          <source>FormatRange Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbeee63877099cff7b5203536dbd3915c5637d3" translate="yes" xml:space="preserve">
          <source>FormatRange::format</source>
          <target state="translated">FormatRange::format</target>
        </trans-unit>
        <trans-unit id="8bbc692edfc42a1127c4c99ddd07c0b1fdc55633" translate="yes" xml:space="preserve">
          <source>FormatRange::length</source>
          <target state="translated">FormatRange::length</target>
        </trans-unit>
        <trans-unit id="ebe6d8f9306e490ba90f6f5d0f208a2d8c2c1a0a" translate="yes" xml:space="preserve">
          <source>FormatRange::operator!=()</source>
          <target state="translated">FormatRange::operator!=()</target>
        </trans-unit>
        <trans-unit id="cd1a3e0f66e9831a62ac9e464da9a01bfd86272c" translate="yes" xml:space="preserve">
          <source>FormatRange::operator==()</source>
          <target state="translated">FormatRange::operator==()</target>
        </trans-unit>
        <trans-unit id="7c34e3eec584cb4e2ba5aeeed62cd522ceddcb69" translate="yes" xml:space="preserve">
          <source>FormatRange::start</source>
          <target state="translated">FormatRange::start</target>
        </trans-unit>
        <trans-unit id="6ea58f9d64cc125f567e756ef286721c2711db1d" translate="yes" xml:space="preserve">
          <source>Format_ARGB32</source>
          <target state="translated">Format_ARGB32</target>
        </trans-unit>
        <trans-unit id="099c0d61d865e646c7b7b954dd93d831103af9ad" translate="yes" xml:space="preserve">
          <source>Format_ARGB32_Premultiplied</source>
          <target state="translated">Format_ARGB32_Premultiplied</target>
        </trans-unit>
        <trans-unit id="a2f7bcb69ae31da6ae5500bc54d4c7c296fd8aaa" translate="yes" xml:space="preserve">
          <source>Format_RGB32</source>
          <target state="translated">Format_RGB32</target>
        </trans-unit>
        <trans-unit id="aa666e5a3ce820cce5d8a2a1c4611145cbdb2d26" translate="yes" xml:space="preserve">
          <source>Format_RGBA8888</source>
          <target state="translated">Format_RGBA8888</target>
        </trans-unit>
        <trans-unit id="ed866940093b6d3726e2f1a8e608392128dcd8df" translate="yes" xml:space="preserve">
          <source>Format_RGBA8888_Premultiplied</source>
          <target state="translated">Format_RGBA8888_Premultiplied</target>
        </trans-unit>
        <trans-unit id="cfad45b6d0542de9510c6536b86eb02b05324052" translate="yes" xml:space="preserve">
          <source>Format_RGBX8888</source>
          <target state="translated">Format_RGBX8888</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="821762722e9dc72f602c0dc56804362bfb8698d4" translate="yes" xml:space="preserve">
          <source>Formats without separators (e.g. &quot;ddMM&quot;) are supported but must be used with care, as the resulting strings aren't always reliably readable (e.g. if &quot;dM&quot; produces &quot;212&quot; it could mean either the 2nd of December or the 21st of February).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2dc2e6b3923022b30cc0fea274ab9780880fb1" translate="yes" xml:space="preserve">
          <source>Formatting Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9e0e6c1a39be6ced70e4a9f004135e8de30746" translate="yes" xml:space="preserve">
          <source>Formatting and drawing a paragraph of plain text is straightforward. The example below will lay out a paragraph of text, using a single font, around the right hand edge of a circle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8131bd8ed599627cca0a5839bdeedafade33470" translate="yes" xml:space="preserve">
          <source>Formatting can be applied to the current text document using the &lt;a href=&quot;qtextcursor#setCharFormat&quot;&gt;setCharFormat&lt;/a&gt;(), &lt;a href=&quot;qtextcursor#mergeCharFormat&quot;&gt;mergeCharFormat&lt;/a&gt;(), &lt;a href=&quot;qtextcursor#setBlockFormat&quot;&gt;setBlockFormat&lt;/a&gt;() and &lt;a href=&quot;qtextcursor#mergeBlockFormat&quot;&gt;mergeBlockFormat&lt;/a&gt;() functions. The 'set' functions will replace the cursor's current character or block format, while the 'merge' functions add the given format properties to the cursor's current format. If the cursor has a selection, the given format is applied to the current selection. Note that when only a part of a block is selected, the block format is applied to the entire block. The text at the current character position can be turned into a list using &lt;a href=&quot;qtextcursor#createList&quot;&gt;createList&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db97aee41875cf3afed92439a4bcfb157de4a6cf" translate="yes" xml:space="preserve">
          <source>Formatting information for a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fdb0cd1caf828137f137aaf3898a2cff0ec2c0" translate="yes" xml:space="preserve">
          <source>Formatting information for blocks of text in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94448f21cb42b1ac80bf77c4193accaf9a409b5" translate="yes" xml:space="preserve">
          <source>Formatting information for characters in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68603335c66269158ab31301543032856a36d7b9" translate="yes" xml:space="preserve">
          <source>Formatting information for frames in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c1db904fc439d1049bc7f091e95983fc6426f7" translate="yes" xml:space="preserve">
          <source>Formatting information for images in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fe63945ca7355ff7f33cac4d0313706dc2fcf9" translate="yes" xml:space="preserve">
          <source>Formatting information for lists in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d855d2c6ecf517cd742e596c2bea7337de4645ea" translate="yes" xml:space="preserve">
          <source>Formatting information for table cells in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68946bcfe1cc6d46d30cb29da53bbc19cc53444" translate="yes" xml:space="preserve">
          <source>Formatting information for tables in a QTextDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a8233b9fbdd9464b6647de800b809378ed40b" translate="yes" xml:space="preserve">
          <source>Formatting of very large or very small &lt;code&gt;xs:double&lt;/code&gt;, &lt;code&gt;xs:float&lt;/code&gt;, and &lt;code&gt;xs:decimal&lt;/code&gt; values may be incorrect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d06bf16be8c67030d75fcf3cd633b31f19b871" translate="yes" xml:space="preserve">
          <source>Forms created in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8b1f162d66a6b0e75108ce8a73568738ea97e4" translate="yes" xml:space="preserve">
          <source>Forms created with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3699314d03ccd362e988509e6c96d0ce06503d" translate="yes" xml:space="preserve">
          <source>Fortunately .NET provides a generic wrapper for COM objects, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4e72261283258434788542ba397135c10f39d8" translate="yes" xml:space="preserve">
          <source>Forward</source>
          <target state="translated">Forward</target>
        </trans-unit>
        <trans-unit id="6d7cae7a5193709f3968d9862d4fbeb511b47730" translate="yes" xml:space="preserve">
          <source>Forward Declared Pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebaa9dee10515b24881ac9bb750c83a9f0dbf99" translate="yes" xml:space="preserve">
          <source>Forward Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773e59b851cae890ae571219d5418b70b1ec7f4f" translate="yes" xml:space="preserve">
          <source>Forward Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ee647947e28a67259a4d7a76af75e3d3486e2a" translate="yes" xml:space="preserve">
          <source>Forward Remote Objects from another network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e9a3d2994b0a901c011754ffad0522f5c23d5a" translate="yes" xml:space="preserve">
          <source>Forward Remote Objects to another network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47754b8e3e971532dbafc6385368ca4a55e2129a" translate="yes" xml:space="preserve">
          <source>Forward diagonal lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e877334ae9532bac1dfdae68841164386607e433" translate="yes" xml:space="preserve">
          <source>Forward direction (Default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6aa9cb79d8e02976f813385d72d25820fd966a7" translate="yes" xml:space="preserve">
          <source>Forward only mode can be (depending on the driver) more memory efficient since results do not need to be cached. It will also improve performance on some databases. For this to be true, you must call &lt;code&gt;setForwardOnly()&lt;/code&gt; before the query is prepared or executed. Note that the constructor that takes a query and a database may execute the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e41728f3783b0a48fcd1b6dac7d9490a3ea8844" translate="yes" xml:space="preserve">
          <source>Forward only mode is off by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163876d0bf2ea263db045f1e983877a39d791bbc" translate="yes" xml:space="preserve">
          <source>Forward rendering is what OpenGL traditionally uses. It renders directly to the backbuffer one object at a time shading each one as it goes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f9332935c35e73d9fec678e37754c900e3c551" translate="yes" xml:space="preserve">
          <source>Forward rendering is when you use OpenGL in its traditional manner and render directly to the backbuffer one object at a time shading each one as we go. This is opposed to &lt;a href=&quot;#deferred-renderer&quot;&gt;deferred rendering&lt;/a&gt; where we render to an intermediate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55834bc470e38e1b4edacd9030b408d83cf1d79f" translate="yes" xml:space="preserve">
          <source>Forward-declares a Core Foundation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ae785d325f955f26898226dfc4c18d8042d2e7" translate="yes" xml:space="preserve">
          <source>Forward-declares a mutable Core Foundation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b890982b5a27ab7c7e93335a4ca737c201e32" translate="yes" xml:space="preserve">
          <source>Forward-declares an Objective-C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20ad82aae2db29c22a21b949116979b4c894590" translate="yes" xml:space="preserve">
          <source>ForwardRenderer</source>
          <target state="translated">ForwardRenderer</target>
        </trans-unit>
        <trans-unit id="cfa5b49905b925941c7a23d207e5a59d8b619642" translate="yes" xml:space="preserve">
          <source>ForwardRenderer (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e478a9414850144d1dced15f292c1958823b6460" translate="yes" xml:space="preserve">
          <source>ForwardRenderer QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798ab501f5ae17fd2f32e8f3f50cf650da7e831d" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.camera</source>
          <target state="translated">ForwardRenderer.camera</target>
        </trans-unit>
        <trans-unit id="203bc03c1dd7f441c7955e265528efa0b7a68271" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.clearColor</source>
          <target state="translated">ForwardRenderer.clearColor</target>
        </trans-unit>
        <trans-unit id="c923afc0ea2989c2b2ece9befa1e9aa33edd03a5" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.externalRenderTargetSize</source>
          <target state="translated">ForwardRenderer.externalRenderTargetSize</target>
        </trans-unit>
        <trans-unit id="7ceda23efa3d88cafd50d56b1a1009f4f38e7a01" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.frustumCulling</source>
          <target state="translated">ForwardRenderer.frustumCulling</target>
        </trans-unit>
        <trans-unit id="08196b316901ec5b218832870870b00be19625cb" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.gamma</source>
          <target state="translated">ForwardRenderer.gamma</target>
        </trans-unit>
        <trans-unit id="d295c947a780c49067e34dee119372e7e12433a3" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.surface</source>
          <target state="translated">ForwardRenderer.surface</target>
        </trans-unit>
        <trans-unit id="294875901290ca1a0394d835ac910bbf1e4b3e5e" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.viewportRect</source>
          <target state="translated">ForwardRenderer.viewportRect</target>
        </trans-unit>
        <trans-unit id="a90b14b0ed1454f035978f03a7977f3258c95435" translate="yes" xml:space="preserve">
          <source>Four axes that each contain one node only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda3d18308ae2a45e02e48a97ccb30a1b1569050" translate="yes" xml:space="preserve">
          <source>Four-sided pyramid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00491e8d57e1b077d4395dcfb17d7930d0b7df35" translate="yes" xml:space="preserve">
          <source>Fragment shader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73519ee38be259d76b937382c01b0824b9f0421a" translate="yes" xml:space="preserve">
          <source>Fragment shader written in the OpenGL Shading Language (GLSL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353998cb48f0357f4bf63a595cacc6f66fdef464" translate="yes" xml:space="preserve">
          <source>Fragmentation</source>
          <target state="translated">Fragmentation</target>
        </trans-unit>
        <trans-unit id="3500b3b478ec5ea8149e766a5b856fb9a9cce262" translate="yes" xml:space="preserve">
          <source>Fragmentation can be avoided by utilizing pool allocators (and other contiguous memory allocators), by reducing the amount of memory which is allocated at any one time by carefully managing object lifetimes, by periodically cleansing and rebuilding caches, or by utilizing a memory-managed runtime with garbage collection (such as JavaScript).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61d1ea834bc197584ceb0ac6f15ef3a911866f8" translate="yes" xml:space="preserve">
          <source>Fragmentation is a C++ development issue. If the application developer is not defining any C++ types or plugins, they may safely ignore this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b0658329efa06d4da89c23a162b41dfcee5202" translate="yes" xml:space="preserve">
          <source>Frame</source>
          <target state="translated">Frame</target>
        </trans-unit>
        <trans-unit id="4d9f51860029c639dd7f317237ee2cc77a0979be" translate="yes" xml:space="preserve">
          <source>Frame (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de36d1f43c6c92b18d9d0fe6d2311846d9fbd93" translate="yes" xml:space="preserve">
          <source>Frame Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1f0c6745e627c3f582905d143cdcf8496e30da" translate="yes" xml:space="preserve">
          <source>Frame QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524d16420964f93cf56b71b5952b388373886281" translate="yes" xml:space="preserve">
          <source>Frame around a MDI window or a docking window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c59b41abd4fb077c85f2e8565e881ec0aa93dc" translate="yes" xml:space="preserve">
          <source>Frame consists of one visual item: &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebbd3e839146e7f424b79fd4a38b03b2e12a39e" translate="yes" xml:space="preserve">
          <source>Frame for an item of a status bar; see also &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddf18e402dc9a1be687e265baf22466f3b6cfee" translate="yes" xml:space="preserve">
          <source>Frame for popup windows/menus; see also &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93da82e1b9a259fc24b2cd8ff73d314b6e53d5c" translate="yes" xml:space="preserve">
          <source>Frame for tab widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a809fad440bfa5ccce048fc44ac6f7e908f0e2c" translate="yes" xml:space="preserve">
          <source>Frame graph node for render capture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ce20108d4b1057e00594d5f001cb376aef6e55" translate="yes" xml:space="preserve">
          <source>Frame graph node for render capture. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dc5fccb0946eff73240cf45adad450cfe9268e" translate="yes" xml:space="preserve">
          <source>Frame graph node for render capture. &lt;a href=&quot;qt3drender-qrendercapture#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91084ccc66d375bb53d24dd8c5c0317e78034d69" translate="yes" xml:space="preserve">
          <source>Frame is used to layout a logical group of controls together within a visual frame. Frame does not provide a layout of its own, but requires you to position its contents, for instance by creating a &lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt; or a &lt;a href=&quot;qml-qtquick-layouts-columnlayout&quot;&gt;ColumnLayout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09919a4601aa3a6d45ccb2587fdcd2593381baf" translate="yes" xml:space="preserve">
          <source>Frame number of the end of the animation. The value is available after the animation has been loaded and ready to play.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8c17ef99f431c0b70d63683cb404bcb41ae6fd" translate="yes" xml:space="preserve">
          <source>Frame number of the start of the animation. The value is available after the animation has been loaded and ready to play.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447a4c4f3878bd7da036a234a2e748cf6be32792" translate="yes" xml:space="preserve">
          <source>Frame or iframe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784c4fc606f5f56c9546b766403519676b6ee5be" translate="yes" xml:space="preserve">
          <source>Frame width of a combo box, defaults to PM_DefaultFrameWidth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734de2b6ae41fa53e5542425b14041632670fb8e" translate="yes" xml:space="preserve">
          <source>Frame width of a dock window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e561a4323295f4044d60e9c8e68f65061f480d22" translate="yes" xml:space="preserve">
          <source>Frame width of a menu bar, defaults to PM_DefaultFrameWidth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9250416784be03fc1dc8fd4cb6602a8fae1e9408" translate="yes" xml:space="preserve">
          <source>Frame width of a spin box, defaults to PM_DefaultFrameWidth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd608ddffceaad86e861a1553a2925ad3fbe7558" translate="yes" xml:space="preserve">
          <source>Frame width of an MDI window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecaa913f10e5c0188e7ee32dff66b77d80e1d19" translate="yes" xml:space="preserve">
          <source>FrameAction</source>
          <target state="translated">FrameAction</target>
        </trans-unit>
        <trans-unit id="d8ccaab221fab8e763609419aa9d18ede877a287" translate="yes" xml:space="preserve">
          <source>FrameAction (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a256ea0cc706ff974aba17a7f656d30fc6058b" translate="yes" xml:space="preserve">
          <source>FrameAction QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f121e7fc3024c365d8fb9d7eb0962eab58243cc" translate="yes" xml:space="preserve">
          <source>FrameAction.triggered()</source>
          <target state="translated">FrameAction.triggered()</target>
        </trans-unit>
        <trans-unit id="17e843ae2d31b06c1349b190efbe97f5e520ae0b" translate="yes" xml:space="preserve">
          <source>FrameGraph Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4861a5f5b7ae18389187b878db7dfbd02dae31" translate="yes" xml:space="preserve">
          <source>FrameGraph node offers a way of specifying a set of QRenderState objects to be applied during the execution of a framegraph branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702ccf7e12ee5d34d3098084b3636fe656e9326d" translate="yes" xml:space="preserve">
          <source>FrameGraph node to issue work for the compute shader on GPU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba025b39de3924970add3204e853390e736557eb" translate="yes" xml:space="preserve">
          <source>FrameGraph node to issue work for the compute shader on GPU. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dfed317270f9f94cc61e5773c26e006b4f02ec" translate="yes" xml:space="preserve">
          <source>FrameGraph node to issue work for the compute shader on GPU. &lt;a href=&quot;qt3drender-qdispatchcompute#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278cb5ddeb8c418a3bb71c7aadc0bdf1c036b4b6" translate="yes" xml:space="preserve">
          <source>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1f51cc21b362c33728c7880044e4b895ab097a" translate="yes" xml:space="preserve">
          <source>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4858f8929d5be6995a58691040660610b9e57353" translate="yes" xml:space="preserve">
          <source>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another. &lt;a href=&quot;qt3drender-qblitframebuffer#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a086ee366d7e38c7dad1f5458d5c045148ea18" translate="yes" xml:space="preserve">
          <source>FrameGraphNode</source>
          <target state="translated">FrameGraphNode</target>
        </trans-unit>
        <trans-unit id="a3b5b88fd640e59c6885cb45ad70dc7f4cded58e" translate="yes" xml:space="preserve">
          <source>FrameGraphNode (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7d14e940bcc0818c877dd4cbb1c9f7e67c7165" translate="yes" xml:space="preserve">
          <source>FrameGraphNode QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc81b3c15fa58bb38350d37c67ab8da5aa55ed1" translate="yes" xml:space="preserve">
          <source>FrameRateRange Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dfc47df54605c64da42ae53a0990acb799cbeb" translate="yes" xml:space="preserve">
          <source>FrameRateRange::FrameRateRange()</source>
          <target state="translated">FrameRateRange::FrameRateRange()</target>
        </trans-unit>
        <trans-unit id="775d7a55010628ce21b78bb77ef89cd3f2e17f89" translate="yes" xml:space="preserve">
          <source>FrameRateRange::FrameRateRange(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">FrameRateRange::FrameRateRange(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f852cfebe794bd2e49dab23a80630cebbf299e2" translate="yes" xml:space="preserve">
          <source>FrameRateRange::maximumFrameRate</source>
          <target state="translated">FrameRateRange::maximumFrameRate</target>
        </trans-unit>
        <trans-unit id="470a9cefee0732491e7876c9c10aee5dd1a85fb8" translate="yes" xml:space="preserve">
          <source>FrameRateRange::minimumFrameRate</source>
          <target state="translated">FrameRateRange::minimumFrameRate</target>
        </trans-unit>
        <trans-unit id="250b85de7d619f7caa71749debacd80002c4dc76" translate="yes" xml:space="preserve">
          <source>Framebuffer device (FBDEV)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543d94b44c4341d0cc585bbebc8a302aa5cfaa4a" translate="yes" xml:space="preserve">
          <source>Framegraph Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e7a3833d19706ebf33b2c3baf8e05deeed7bca" translate="yes" xml:space="preserve">
          <source>Frames</source>
          <target state="translated">Frames</target>
        </trans-unit>
        <trans-unit id="ecd018439bef821ff1c6bca7bc39c3fc7740c85b" translate="yes" xml:space="preserve">
          <source>Frames are inserted by calling &lt;a href=&quot;qtextcursor#insertFrame&quot;&gt;insertFrame&lt;/a&gt;() with a specified format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9df42e6d001783d5903f5dbea580a04d703deb" translate="yes" xml:space="preserve">
          <source>Frames are inserted into a document using the cursor, and will be placed within the cursor's current frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11c307e1baefb85d5a82f56ba10a16c39727671" translate="yes" xml:space="preserve">
          <source>Frames are provided by the &lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ecf5535ba16eeb3d47a17fe983cb7f1c17bdb4" translate="yes" xml:space="preserve">
          <source>Frames are used to enclose and group widgets, as well as to provide decoration. They are used as the foundation for more complex containers, but they can also be used as placeholders in forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da73ff18f59e681520afad570793e7fece80ca0" translate="yes" xml:space="preserve">
          <source>Frames can be used to create hierarchical structures in rich text documents. Each document has a root frame (&lt;a href=&quot;qtextdocument#rootFrame&quot;&gt;QTextDocument::rootFrame&lt;/a&gt;()), and each frame beneath the root frame has a parent frame and a (possibly empty) list of child frames. The parent frame can be found with &lt;a href=&quot;qtextframe#parentFrame&quot;&gt;parentFrame&lt;/a&gt;(), and the &lt;a href=&quot;qtextframe#childFrames&quot;&gt;childFrames&lt;/a&gt;() function provides a list of child frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4546d60658949b027c103b2de57eabca8a81e32f" translate="yes" xml:space="preserve">
          <source>Frames of type &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;RemoteRequestFrame&lt;/a&gt; (RTR) do not have a payload. However they have to provide an indication of the responses expected payload length. To set the length expection it is necessary to set a fake payload whose length matches the expected payload length of the response. One way of doing this might be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0b09dfb5d45add0e2f90ec8b193d96ace76d0c" translate="yes" xml:space="preserve">
          <source>Frames per second</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ff89116c5de5207f2560e79891888ebfe9a03d" translate="yes" xml:space="preserve">
          <source>Frames per second to show in the animation. Values below 0 are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1585752e07f4fe0ecd3630751daf4c235e41810f" translate="yes" xml:space="preserve">
          <source>Frames per second to show in the animation. Values less than or equal to &lt;code&gt;0&lt;/code&gt; are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bd90a3dc64046506a2ff82526dc6bac346dda8" translate="yes" xml:space="preserve">
          <source>Frames within one animation must be the same size. However, multiple animations within the same file do not. Sprites without a &lt;a href=&quot;qml-qtquick-sprite#frameCount-prop&quot;&gt;frameCount&lt;/a&gt; specified assume that they take the entire file, and you must specify the frame size. Sprites without a frame size assume that they are square and take the entire file without wrapping, and you must specify a frame count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="8ed8a84bef8f0b8c2a61ac128bf5a29f8425eeae" translate="yes" xml:space="preserve">
          <source>Frameworks &amp;amp; Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1390541ea2476ad42f7c95b564ce2ae1481613a" translate="yes" xml:space="preserve">
          <source>Framing error detected by the hardware while reading data. This value is obsolete. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db17eb0663b4a693380fef920a6a1f3c8c7a0a3d" translate="yes" xml:space="preserve">
          <source>Free form text string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b845fdaff1bf49c014dff506cfa6bdc63dadd835" translate="yes" xml:space="preserve">
          <source>FreeBSD</source>
          <target state="translated">FreeBSD</target>
        </trans-unit>
        <trans-unit id="23d5e9ab7baab508cd6e0dca44cb0ee0e8a5705e" translate="yes" xml:space="preserve">
          <source>FreeBSD strtoll and strtoull, version 18b29f3fb8abee5d57ed8f4a44f806bec7e0eeff</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f233d2fb77313fb209443ed073263be71183888f" translate="yes" xml:space="preserve">
          <source>FreeTDS, a free implementation of the TDS protocol (&lt;a href=&quot;http://www.freetds.org&quot;&gt;http://www.freetds.org&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40293b3e02253eb68cf357321931bc1ef5ef5c88" translate="yes" xml:space="preserve">
          <source>FreeType</source>
          <target state="translated">FreeType</target>
        </trans-unit>
        <trans-unit id="d4697569ac5c9a357d77df4d84de55f40412e7b1" translate="yes" xml:space="preserve">
          <source>FreeType Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158a0a94695f95d79be086075980190d3b9b44c2" translate="yes" xml:space="preserve">
          <source>Frees all graphics resources held by the blitter. Assumes that the OpenGL context, or another context sharing resources with it, that was current on the thread when invoking &lt;a href=&quot;qopengltextureblitter#create&quot;&gt;create&lt;/a&gt;() is current.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d29fe2129a3c0d639654e59a44e81058c501d49" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9149f82c1434d2bd77764907401c697767ee62" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworkconfigurationmanager&quot;&gt;QNetworkConfigurationManager&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262cae5161e6ce3cc1d0d881bc15cc702fb34c7d" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3845ddea269e752cd27f9d62f22806f170964a99" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc906ed1175d5e9ca8e7691b02782c837b1932a" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with this &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eb78c6ad34c700cc9b9a743c8dd28b93d5bc43" translate="yes" xml:space="preserve">
          <source>Frees up window system resources. Destroys the widget window if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3738c332d9da04326b1e0b9da46bfc92147f1120" translate="yes" xml:space="preserve">
          <source>Freetype 2 - Bitmap Distribution Format (BDF) support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6426a7a04321c88791b7e77a167da4e3b3ceee" translate="yes" xml:space="preserve">
          <source>Freetype 2 - Portable Compiled Format (PCF) support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e02d5b091bf554fb59d16890c5f7f18dfafe31" translate="yes" xml:space="preserve">
          <source>Freetype 2 - zlib</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e94539577ff3095e9960a175638619ca46fbca5" translate="yes" xml:space="preserve">
          <source>Freetype 2, version 2.9.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ebb824e53d350ea08dae57472d2dcff22bd311" translate="yes" xml:space="preserve">
          <source>Freetype Project License or GNU General Public License v2.0 only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44389f6a466eaabf5c1db729e369511134e2b03b" translate="yes" xml:space="preserve">
          <source>French</source>
          <target state="translated">French</target>
        </trans-unit>
        <trans-unit id="0957918c68ec3c521ba0aa562518af4aaf908a63" translate="yes" xml:space="preserve">
          <source>French (Canadian)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328e4159124c80607e8d39c8d50f000f0e0c5a52" translate="yes" xml:space="preserve">
          <source>French - Canada</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07fdbe0234dc2c5e98ee0de9742f52626859bfb" translate="yes" xml:space="preserve">
          <source>French - France</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58f9f02549d8211217801bb6eaf28369041b873" translate="yes" xml:space="preserve">
          <source>French Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f432ff0e57d9727180a6844e91f700588229032" translate="yes" xml:space="preserve">
          <source>French Layout (Canadian)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d28f8747f13ff9c728ab948edddf68934615ee9" translate="yes" xml:space="preserve">
          <source>Friction (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb16a0be94b9bd18852ab961970dceb5450e277" translate="yes" xml:space="preserve">
          <source>Friction QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf9d4ee07344cb6635d0dcabe881a7e2843daf4" translate="yes" xml:space="preserve">
          <source>Friction.factor</source>
          <target state="translated">Friction.factor</target>
        </trans-unit>
        <trans-unit id="020502da16f716bcf833c55ab668c32f129211e5" translate="yes" xml:space="preserve">
          <source>Friction.threshold</source>
          <target state="translated">Friction.threshold</target>
        </trans-unit>
        <trans-unit id="3e17065c4af7c83c4041e2e80fee29d8ec4e251d" translate="yes" xml:space="preserve">
          <source>Fridge Magnets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee7e5ad1cd52d79197e8394451bc9e1d4f0d331" translate="yes" xml:space="preserve">
          <source>From 20 to 4084, it advances by doubling the size each time. More precisely, it advances to the next power of two, minus 12. (Some memory allocators perform worst when requested exact powers of two, because they use a few bytes per block for book-keeping.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f76b425009c509fb2310082939b8f1a1411458" translate="yes" xml:space="preserve">
          <source>From 4.3 and above, any designable &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; can be set using the qproperty-&amp;lt;property name&amp;gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ac9e109dbccbd8597eb6a53471bc43833adacc" translate="yes" xml:space="preserve">
          <source>From 4084 on, it advances by blocks of 2048 characters (4096 bytes). This makes sense because modern operating systems don't copy the entire data when reallocating a buffer; the physical memory pages are simply reordered, and only the data on the first and last pages actually needs to be copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45aa15556263138f050033ad36b6035c03d9d993" translate="yes" xml:space="preserve">
          <source>From Qt 4.2, dynamic properties can be added to and removed from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; instances at run-time. Dynamic properties do not need to be declared at compile-time, yet they provide the same advantages as static properties and are manipulated using the same API - using &lt;a href=&quot;qobject#property&quot;&gt;property&lt;/a&gt;() to read them and &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt;() to write them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26d1090533e72948b8660180754d70dc915d22f" translate="yes" xml:space="preserve">
          <source>From Qt 4.3, dynamic properties are supported by &lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;Qt Designer&lt;/a&gt;, and both standard Qt widgets and user-created forms can be given dynamic properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3620ca815a704916debb4ff3f77fd1e7d1dc19be" translate="yes" xml:space="preserve">
          <source>From Qt 4.5, you can include the function name plus '()' as a parameter to the &lt;b&gt;\overload&lt;/b&gt; command, which will include a standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83638ab283c9af8a6f0bd33dede89b5d158dce1" translate="yes" xml:space="preserve">
          <source>From Qt 4.8 onwards, it is possible to deallocate objects that live in a thread that has just ended, by connecting the &lt;a href=&quot;qthread#finished&quot;&gt;finished&lt;/a&gt;() signal to &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject::deleteLater&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af4fca5f7c37bda5e0732871216dc577de8dee0" translate="yes" xml:space="preserve">
          <source>From Qt 5.0 onwards, Qt offers two different ways to write &lt;a href=&quot;https://doc.qt.io/qt-5.13/exceptionsafety.html#signals-and-slots&quot;&gt;signal-slot connections&lt;/a&gt; in C++: The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aed2f6706160309849829fed2d5af24d7d2def0" translate="yes" xml:space="preserve">
          <source>From Qt 5.10 and onwards, the only allowed values are 0 and -1. Passing the value -1 will reinitialize the global &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; seed to a random value, while the value of 0 is used to request a stable algorithm for C++ primitive types types (like &lt;code&gt;int&lt;/code&gt;) and string types (&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980d2c8bb9db3aae13fd34375f01a085f89bfb55" translate="yes" xml:space="preserve">
          <source>From Qt 5.9 onwards, the Green Hills Software &lt;a href=&quot;http://www.ghs.com/products/rtos/integrity.html&quot;&gt;INTEGRITY&lt;/a&gt; Real-Time Operating System (RTOS) is a supported platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80dc7f5859093336f82b9bdc179919a6c204f19" translate="yes" xml:space="preserve">
          <source>From Qt version 5.6 onwards, the officially supported version for OpenSSL is 1.0.0 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e15f8991b5e19bf100d46f86616ad50a72e64c5" translate="yes" xml:space="preserve">
          <source>From a system perspective though, selecting which sensor should be the default gets tricky. The sensors library uses the first registered identifier as the default. This means that the order in which the sensor backends are registered, is important so the system will allow a config file to determine the default instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea7fc03c90f91a8c33d233fbb6664452b6244a7" translate="yes" xml:space="preserve">
          <source>From the QDoc comment above, QDoc generates the HTML &lt;a href=&quot;qobject&quot;&gt;QObject class reference&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018b88c217dbd2618514c96375da8433ff61d47a" translate="yes" xml:space="preserve">
          <source>From the beginning of the string, match one digit, followed immediately by 0 or 1 more digit, followed immediately by end of string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ef94ba6454947d57c3c14f45e90ee5c3830688" translate="yes" xml:space="preserve">
          <source>From the earlier Qt version, run &lt;code&gt;qmake &amp;amp;&amp;amp; make (&amp;amp;&amp;amp; make install)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fb30e417ad311170e9e14a16686396d8c16325" translate="yes" xml:space="preserve">
          <source>From the perspective of an application development platform, Qt runs on top of &lt;a href=&quot;http://www.qnx.com/products/neutrino-rtos/neutrino-rtos.html&quot;&gt;QNX Neutrino RTOS&lt;/a&gt;. System integrators and application developers use a QNX SDP (Software Development Platform) which includes QNX Neutrino RTOS components for various targets and a full set of development tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbd51499ac7294984ce266069e3d9ba27ff0880" translate="yes" xml:space="preserve">
          <source>From the start of the string, match a digit, followed immediately by 0 or 1 digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de902783b55249f7ccacd1e72b23c84fbbeff43f" translate="yes" xml:space="preserve">
          <source>From then on, &lt;code&gt;processOneThing()&lt;/code&gt; will be called repeatedly. It should be written in such a way that it always returns quickly (typically after processing one data item) so that Qt can deliver events to the user interface and stop the timer as soon as it has done all its work. This is the traditional way of implementing heavy work in GUI applications, but as multithreading is nowadays becoming available on more and more platforms, we expect that zero-millisecond &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; objects will gradually be replaced by &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c140ea552fe762ff14cb7385ee3b817119bb48fa" translate="yes" xml:space="preserve">
          <source>From then on, the &lt;code&gt;update()&lt;/code&gt; slot is called every second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399aa187720270080fc7b3457475287875bd3e37" translate="yes" xml:space="preserve">
          <source>From this result, it is possible to allocate the state of the desired signal by applying a mask &quot;AND&quot;, where the mask is the desired enumeration value from &lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort::PinoutSignals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13eab1f63ede7a63f6c0bffcf9d69b37319517ed" translate="yes" xml:space="preserve">
          <source>Front End, Back End</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07417e7d42b31e3c7a591920e3ba9e09f7d22026" translate="yes" xml:space="preserve">
          <source>FrontFace</source>
          <target state="translated">FrontFace</target>
        </trans-unit>
        <trans-unit id="b3eba241fbc680fc6ad3a5186b86e6641a334cfe" translate="yes" xml:space="preserve">
          <source>FrontFace (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fa1a6e7615cbcee751b5992301dce35011d738" translate="yes" xml:space="preserve">
          <source>FrontFace QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbce55b7d2475ec2e1735416f4aa8bf111f9719" translate="yes" xml:space="preserve">
          <source>FrontFace.direction</source>
          <target state="translated">FrontFace.direction</target>
        </trans-unit>
        <trans-unit id="a67c69e42cf679c21e21cf6bb0d01364105bdcfc" translate="yes" xml:space="preserve">
          <source>Frustum projection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9602e5fba9b59283e1d77dad9bb95c046ad444d5" translate="yes" xml:space="preserve">
          <source>FrustumCulling</source>
          <target state="translated">FrustumCulling</target>
        </trans-unit>
        <trans-unit id="1a083ba7469e7dfd9eb11103b84c556a1e91c6d2" translate="yes" xml:space="preserve">
          <source>FrustumCulling (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0c9034e0628ac6b5303de6b87a0b260eb69681" translate="yes" xml:space="preserve">
          <source>FrustumCulling QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674b47688434f3c115265593a37b1016ca639a9e" translate="yes" xml:space="preserve">
          <source>Full decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f6d6c9d37016f61064a4951ebafb4ffe1f2a69" translate="yes" xml:space="preserve">
          <source>Full hinting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d0ecb09cabb070eaef496b84f6216948e7a599" translate="yes" xml:space="preserve">
          <source>Full list of C++ classes and methods of the Qt Location APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0385dc26ee754b9c7dc668aec860c04daddf35" translate="yes" xml:space="preserve">
          <source>Full list of C++ classes and methods of the Qt Location APIs sorted by domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc844d254993dae306af0a8f8b5c96f78ba13cca" translate="yes" xml:space="preserve">
          <source>Full list of QML components in the Qt Location API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a38645119d7414bd8a40d244b7b0a57fba91213" translate="yes" xml:space="preserve">
          <source>Full modality support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0923d93cfeab3344e42edf611efa89ef1384f13" translate="yes" xml:space="preserve">
          <source>Full support for non-power-of-two textures including texture repeat modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05ca9ec8708270dab9045523c76e4b8690ff0d2" translate="yes" xml:space="preserve">
          <source>Full-screen mode works fine under Windows, but has certain problems under X. These problems are due to limitations of the ICCCM protocol that specifies the communication between X11 clients and the window manager. ICCCM simply does not understand the concept of non-decorated full-screen windows. Therefore, the best we can do is to request a borderless window and place and resize it to fill the entire screen. Depending on the window manager, this may or may not work. The borderless window is requested using MOTIF hints, which are at least partially supported by virtually all modern window managers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bb2d9463c70cf7742a086b24d5abdc100f7be5" translate="yes" xml:space="preserve">
          <source>FullScreen</source>
          <target state="translated">FullScreen</target>
        </trans-unit>
        <trans-unit id="25e6c479b85b4295f2e41d64348681a565c9451b" translate="yes" xml:space="preserve">
          <source>FullScreenRequest (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fe49a085a3e1881ed0b2f30fe5ac560a4a4cc8" translate="yes" xml:space="preserve">
          <source>FullScreenRequest QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9de1efcb33eae94c677aa3d8c7216578556791" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.accept()</source>
          <target state="translated">FullScreenRequest.accept()</target>
        </trans-unit>
        <trans-unit id="aa467f047122b9f9fab0e1efb24a98cff8ae9db8" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.origin</source>
          <target state="translated">FullScreenRequest.origin</target>
        </trans-unit>
        <trans-unit id="45cd40c9b983e223ccb83abfd677a163ef7a1657" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.reject()</source>
          <target state="translated">FullScreenRequest.reject()</target>
        </trans-unit>
        <trans-unit id="a3d235b0560747c896537a32dd44cbf2e23e0b68" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.toggleOn</source>
          <target state="translated">FullScreenRequest.toggleOn</target>
        </trans-unit>
        <trans-unit id="bb08d10b00a6114f53ac03b662cd5c0fa2fadf2c" translate="yes" xml:space="preserve">
          <source>Fullscreen</source>
          <target state="translated">Fullscreen</target>
        </trans-unit>
        <trans-unit id="55d050edae26d24cc822c7a7b3d9b4f00cc44f8f" translate="yes" xml:space="preserve">
          <source>Fullscreen Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3f07d90f94929675b99123ffedcb2017f95f34" translate="yes" xml:space="preserve">
          <source>Fullscreen OpenGL Based Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc7618ed69663e034810d47e895117ee010662c" translate="yes" xml:space="preserve">
          <source>Fullscreen viewport defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7badbc64d18f3877071c5eb6370f9fba811a5488" translate="yes" xml:space="preserve">
          <source>Fullwidth latin input mode for East Asian languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="11b754fb6b07cdde423bd66ce10b3da0d997f5e7" translate="yes" xml:space="preserve">
          <source>Function Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca544d7457648c14cce40272868cda27ebf4451" translate="yes" xml:space="preserve">
          <source>Function Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d39bcc9482008930e53ba2a4772bbd6790e2a17" translate="yes" xml:space="preserve">
          <source>Function Pointers Cannot Be Signal or Slot Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4fd94ee92f5229558da011c1abd9efb25d2955" translate="yes" xml:space="preserve">
          <source>Function Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d914a0074cfd21a9ba76cd9ca1326d52a742b7b" translate="yes" xml:space="preserve">
          <source>Function Prototype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf3cb50f1c0e4f30015bda7ee2f61c25a4f78b1" translate="yes" xml:space="preserve">
          <source>Function Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6b2899a039d230b750dde3d63c1d9001bd5503" translate="yes" xml:space="preserve">
          <source>Function Signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b05ae237ff32289fdd1685dd9a19f39932a2e32" translate="yes" xml:space="preserve">
          <source>Function code is not supported by device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3ba48f028a7deaafdb5d00a7a619eee4db3192" translate="yes" xml:space="preserve">
          <source>Function objects (objects for which &lt;a href=&quot;qjsvalue#isCallable&quot;&gt;isCallable&lt;/a&gt;()) returns true) can be invoked by calling &lt;a href=&quot;qjsvalue#call&quot;&gt;call&lt;/a&gt;(). Constructor functions can be used to construct new objects by calling &lt;a href=&quot;qjsvalue#callAsConstructor&quot;&gt;callAsConstructor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e1b141ba2d9c64de3ff0225ba3ab569d937d78" translate="yes" xml:space="preserve">
          <source>Function that can be used to sync Qt state with the Window Systems state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d92f092cd9c1210713d119ddacbbc2e057e240" translate="yes" xml:space="preserve">
          <source>Function type for &lt;a href=&quot;qeglfsfunctions#loadKeymap&quot;&gt;loadKeymap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71df6dcd23a9dffaa5b74f7426a08708a39eab5" translate="yes" xml:space="preserve">
          <source>Function type for &lt;a href=&quot;qlinuxfbfunctions#loadKeymap&quot;&gt;loadKeymap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="855676de798942cc9e6b35b96824583ea9151017" translate="yes" xml:space="preserve">
          <source>Functionality deprecated in &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; version 3.0 is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1639a5fec4a6e74fb71bf5f75b24cdf5233a1fa0" translate="yes" xml:space="preserve">
          <source>Functionality from earlier &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; versions is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="d59262a2a9be9f98118b914e36eb5ef0fa2b7310" translate="yes" xml:space="preserve">
          <source>Functions and Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693ea51cfb51e5dd0a6c8712f3c8c1911353e8e1" translate="yes" xml:space="preserve">
          <source>Functions defined in a JavaScript file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c566c41dbaec6e02a33922021d0fbc3d8b33bb" translate="yes" xml:space="preserve">
          <source>Functions for creating and managing OpenGL buffer objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643320166973fa24c8a47af5b6e167f42670d6e2" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qcbormap-constiterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qcbormap-constiterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddd8035719d86cde6c83912ea4495663117fa7e" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qcbormap-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qcbormap-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75de0c20af22d25a71058f7b0202b4da295cc17" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qhash-const-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qhash-const-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2ba76c4c8d1186805594dacd2b3ae6b1937a72" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qhash-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qhash-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362152447b6d229295b33fa3df17fd7f0fea153a" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qjsonobject-const-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qjsonobject-const-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb9ed0e03af111a12df99e3bc2a1b2833b7d0e3" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qjsonobject-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qjsonobject-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bb6f93f56da0a7b05f1ee1333140761fd0a53b" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qmap-const-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qmap-const-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9092442c6fd71e50865852ae6247e0e93e5bf6b4" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qmap-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qmap-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e4f1ec1ef5a49e2e87bc43866213d007970f30" translate="yes" xml:space="preserve">
          <source>Functions like operator*() and operator++() should not be called on an uninitialized iterartor. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f958d8dacb17411e1acb207f3d42f73f27a8b4" translate="yes" xml:space="preserve">
          <source>Functions like operator*() and operator++() should not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c200f4df88c1cfa3165b6fc9657a333c599785b7" translate="yes" xml:space="preserve">
          <source>Functions provided by script engines that don't support introspection are not available and must be called directly using &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;() on the respective &lt;a href=&quot;qaxscriptmanager#script&quot;&gt;script&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7723e5252beb3b6b39b1b1c3d11f52f6e1c3e1a9" translate="yes" xml:space="preserve">
          <source>Functions that accept a locale format may be either an enumeration value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f496275ba841dd78f91057fc9efada99934cd1" translate="yes" xml:space="preserve">
          <source>Functions that perform conversions between numeric data types and strings are performed in the C locale, irrespective of the user's locale settings. Use &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to perform locale-aware conversions between numbers and strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947091bcddd7eec91e595b14f7b9248576e913c9" translate="yes" xml:space="preserve">
          <source>Functions that use Filter enum values to filter lists of files and directories will include symbolic links to files and directories unless you set the NoSymLinks value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1432be0a78a278222a513bc7432eb7c560f91e0" translate="yes" xml:space="preserve">
          <source>Functions to manipulate and describe database indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9720a9b61f7c44e27f1097ce58983addb97d3643" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;benchmark_&quot; will be run multiple times with the Qt benchmark framework, with an average timing value reported for the runs. This is equivalent to using the &lt;code&gt;QBENCHMARK&lt;/code&gt; macro in the C++ version of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtest-overview.html&quot;&gt;QTestLib&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5013cf5953587f0a1a5a7828d26ec67f7410be91" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;benchmark_&quot; will be run multiple times with the Qt benchmark framework, with an average timing value reported for the runs. This is equivalent to using the &lt;code&gt;QBENCHMARK&lt;/code&gt; macro in the C++ version of QTestLib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b055f63512e6a3288bdaadb81f8594a5c67bbd4e" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;test_&quot; are treated as test cases to be executed. The &lt;a href=&quot;qml-qttest-testcase#name-prop&quot;&gt;name&lt;/a&gt; property is used to prefix the functions in the output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2565ce780e3351877af4e2a0085e7e901bcecbc0" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;test_&quot; are treated as test cases to be executed. The &lt;a href=&quot;qml-testcase#name-prop&quot;&gt;name&lt;/a&gt; property is used to prefix the functions in the output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6fca4fb2a66abace869e8d6bb6417d06c8d9cc" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &lt;code&gt;test_&lt;/code&gt; are treated as test cases to be executed. See the documentation for the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; and &lt;a href=&quot;qml-qttest-signalspy&quot;&gt;SignalSpy&lt;/a&gt; types for more information on writing test cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5a0c8672a8cfdd38dd0c49de54779584af909e" translate="yes" xml:space="preserve">
          <source>Functor</source>
          <target state="translated">Functor</target>
        </trans-unit>
        <trans-unit id="773e9674841b13995664cdb1517eae8aba73e461" translate="yes" xml:space="preserve">
          <source>Functor-based</source>
          <target state="translated">Functor-based</target>
        </trans-unit>
        <trans-unit id="608dda75ed3383a552fdb306573a5c8fa05175e3" translate="yes" xml:space="preserve">
          <source>Functor-based connections do not support this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669174087b9bbb07e556f8eda6679016d67b42c9" translate="yes" xml:space="preserve">
          <source>Further Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4040f22a3cf8f82bcaacb214bd595e587090e918" translate="yes" xml:space="preserve">
          <source>Further Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0044da9400cc68bac5eabfa2da0ad36ec25c14a" translate="yes" xml:space="preserve">
          <source>Further information about the types of extensions certificates can contain can be found in RFC 5280.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9643b071eaa404ffba2b07120a030c0749e8a44" translate="yes" xml:space="preserve">
          <source>Further information for writing QML applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e44c8b638baa470dbb5f127964c092cc77ea465" translate="yes" xml:space="preserve">
          <source>Further reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccdfd4d16fa7dfb91718f31bc07dec9a141b9a6" translate="yes" xml:space="preserve">
          <source>Further selectors will be added from the &lt;code&gt;QT_FILE_SELECTORS&lt;/code&gt; environment variable, which when set should be a set of comma separated selectors. Note that this variable will only be read once; selectors may not update if the variable changes while the application is running. The initial set of selectors are evaluated only once, on first use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befeb2aeca2262ee9a02adb33ff699fcd699d3f9" translate="yes" xml:space="preserve">
          <source>Further structure categories into common areas by using dots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bbe7c13644f3b9e5bbd7aaf34bd4a52e7b51f4" translate="yes" xml:space="preserve">
          <source>Further write operations are possible after calling this method, but none of it will have any effect, the written file will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52023b20f8acc0e7bdd48b522829a542e9eeb593" translate="yes" xml:space="preserve">
          <source>Further, development packages for &lt;code&gt;khr&lt;/code&gt; and &lt;code&gt;libcap&lt;/code&gt; need to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ebb2af6c6b324b1e763fec8cf6b4480142662a" translate="yes" xml:space="preserve">
          <source>Further, the shader code must use multisampling sampler types and texelFetch() instead of texture().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c47e45c4e0c45ea1688aceb48e7f6c5bac3ca3e" translate="yes" xml:space="preserve">
          <source>Further, the state may change by assigning the &lt;code&gt;state&lt;/code&gt; property with the appropriate signal state. A state switch could be in a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; type, assigning a different state whenever the signal receives a mouse click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a65948043e94e810c2f3d58a481c9b7dfffbd7" translate="yes" xml:space="preserve">
          <source>Furthermore Qt 3D contains third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e089b3b31f6f071f14e9466e9e97a81062aefd4" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Image Formats potentially contains third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886ce1821ab42a5e2e872a21ae665a28311bb07d" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Location potentially contains third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0437bdb244f6887e5797d290b0941b22a473d8" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Purchasing on Android contains third party modules under the following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b437eb8dacec773e1215300c50b8642238042973" translate="yes" xml:space="preserve">
          <source>Furthermore Qt QML in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80da8fc9a43010b945f4919ffe7e202ec273d0f5" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Quick Controls 2 potentially contains third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39d40bfc6b6485b55287375bb6acade410efee7" translate="yes" xml:space="preserve">
          <source>Furthermore Qt SVG contains third party code under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8324a72315d9ed51aae3bef6ef1663ad584b5a0" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Virtual Keyboard potentially contains third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785579248360e4ee49442a43da2fbb5f29176326" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;a href=&quot;qt3drender-qlayer&quot;&gt;Qt3DRender::QLayer&lt;/a&gt; components can be used to control how entities, or entity sub-graphs, react to ray casting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eed2e5dcd65fdaaffa8624f48111cb5d7e6df00" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt Core in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a8ccbe055477c1cf6df634dcd7bbaea32870d9" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt D-Bus in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d75e13b620059ed412e537a5f6821170b9a3dc0" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt GUI in Qt 5.13.0 may contain third-party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510e3bc5e73c162bbb9e3b6f576016bbdf9c70e2" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt SQL in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e263d9cb38c1410b7f8149c91d9ae359ca8ecdc1" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt Test in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb9b4cc10e98ea54c14967b01936672734221c" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt XML Patterns in Qt 5.13.0 contain third party modules under following permissive licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1b6aff9bf83634e0c2d66a0bd3a84134b7350a" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt3D.Render::Layer components can be used to control how entities, or entity sub-graphs, react to ray casting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0aba3a9ede288d919074e4be9d82ca28f968a57" translate="yes" xml:space="preserve">
          <source>Furthermore, a toolkit cannot simply place windows on the screen. All Qt can do is to send certain hints to the window manager. The window manager, a separate process, may either obey, ignore or misunderstand them. Due to the partially unclear Inter-Client Communication Conventions Manual (ICCCM), window placement is handled quite differently in existing window managers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0804b49a474a54b34729afdeed0fe2b7af757dc" translate="yes" xml:space="preserve">
          <source>Furthermore, currentTime() only increases within each day; it shall drop by 24 hours each time midnight passes; and, beside this, changes in it may not correspond to elapsed time, if a daylight-saving transition intervenes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d68f7d121323cc13a14a10dffcfcb681bc3a6d5" translate="yes" xml:space="preserve">
          <source>Furthermore, the selected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd740463f8b4294b83ac7f5d326402c5d2500a91" translate="yes" xml:space="preserve">
          <source>Furthermore, there will be one JavaScript heap allocated for use in the main thread, and optionally one other JavaScript heap allocated for use in the &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; thread. If an application does not use a &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; element, that overhead will not be incurred. The JavaScript heap can be several megabytes in size, and so applications written for memory-constrained devices may be best served by avoiding the &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; element despite its usefulness in populating list models asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c7cf01329bb24948462d16941a784ad9d1b3cd" translate="yes" xml:space="preserve">
          <source>Furthermore, this class features a &lt;a href=&quot;qaccelerometer#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357029dd522472f1d38afc9dcf16c9bb5f839c08" translate="yes" xml:space="preserve">
          <source>Fusion Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="99e9700ad6dc50cc8a61a5319722ea83a5f97647" translate="yes" xml:space="preserve">
          <source>G-buffer</source>
          <target state="translated">G-buffer</target>
        </trans-unit>
        <trans-unit id="18c76ea9fef1b6abd436cfd21dc149ec600edfd3" translate="yes" xml:space="preserve">
          <source>GB18030</source>
          <target state="translated">GB18030</target>
        </trans-unit>
        <trans-unit id="7786d722df13736e8b48c83a5df7ec1e7e798e18" translate="yes" xml:space="preserve">
          <source>GBK Text Codec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cc46668d9b27613276769721ca00e091d2adfa" translate="yes" xml:space="preserve">
          <source>GBK has been superseded by the new Chinese national standard GB 18030-2000, which added a 4-byte encoding while remaining compatible with GB2312 and GBK. The new GB 18030-2000 may be described as a special encoding of Unicode 3.x and ISO-10646-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92984f9d2e2edaacaf26605ab0b5d45570e86ff1" translate="yes" xml:space="preserve">
          <source>GBK, formally the Chinese Internal Code Specification, is a commonly used extension of GB 2312-80. Microsoft Windows uses it under the name codepage 936.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e2652a2ef22aae032040056ffa758b404a651b" translate="yes" xml:space="preserve">
          <source>GCC 3.4 and above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905a421e0db5bfdece09131d0643ecb32705e816" translate="yes" xml:space="preserve">
          <source>GCC 4.8, GCC 4.9, GCC 5, GCC 6, GCC 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681a6d05ae424f6f135ee309a62622e5d3a446d2" translate="yes" xml:space="preserve">
          <source>GCC 4.9.2 fails to build Qt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf2e4e86f0be2103e7f1e2853e628f84723ae4b" translate="yes" xml:space="preserve">
          <source>GCC 5.2.1: Nested structs do not get their constructors called under some circumstances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d146a3361501cfbc06688b8248e8a070e088e78" translate="yes" xml:space="preserve">
          <source>GCC as provided by Canonical, &lt;b&gt;GCC 7.3.0&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03fe2f2b15b645c8cf5459b516ef4523b045a40" translate="yes" xml:space="preserve">
          <source>GCC as provided by Canonical, GCC 5.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b04a5a87dc20f5bf65dcfec475aeaf0d3f192d" translate="yes" xml:space="preserve">
          <source>GET method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758f6c9347b91091c38ad698a8eba6aeac47b9c4" translate="yes" xml:space="preserve">
          <source>GIF</source>
          <target state="translated">GIF</target>
        </trans-unit>
        <trans-unit id="d8e1eacd285ad413150ce5490270dcf3402c667b" translate="yes" xml:space="preserve">
          <source>GLSL declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25c49fb83ef5c66088e1edd665e7db194d124b5" translate="yes" xml:space="preserve">
          <source>GLSL or GLSL ES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e50ba82159f88952f0e8c21830467a813d923bd" translate="yes" xml:space="preserve">
          <source>GLSL shaders are able to reorder the components of the vec4 returned by texture functions. It is also desirable to be able to control this reordering from CPU side code. This is made possible by swizzle masks since OpenGL 3.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699f429c081b1ca517aca5ede69f604d3bd872b3" translate="yes" xml:space="preserve">
          <source>GL_ALPHA</source>
          <target state="translated">GL_ALPHA</target>
        </trans-unit>
        <trans-unit id="6a2f23129e97d2eadc2674bbdc4f287f591eb024" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_R11_EAC</source>
          <target state="translated">GL_COMPRESSED_R11_EAC</target>
        </trans-unit>
        <trans-unit id="7ff93b2a8830781ec9016810d2cab778f85ed574" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RED_RGTC1</source>
          <target state="translated">GL_COMPRESSED_RED_RGTC1</target>
        </trans-unit>
        <trans-unit id="5c298be1718b37c10f78e7809ccd4bd6883188f3" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RG11_EAC</source>
          <target state="translated">GL_COMPRESSED_RG11_EAC</target>
        </trans-unit>
        <trans-unit id="4b6ab3efc00f3dee0a65283761916d90d3acb73b" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB8_ETC2</source>
          <target state="translated">GL_COMPRESSED_RGB8_ETC2</target>
        </trans-unit>
        <trans-unit id="c997a685752d301f76886f69d70f711c7bb75f8d" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</source>
          <target state="translated">GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</target>
        </trans-unit>
        <trans-unit id="b160814572821ea0905d34442a56339fb5077982" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA8_ETC2_EAC</source>
          <target state="translated">GL_COMPRESSED_RGBA8_ETC2_EAC</target>
        </trans-unit>
        <trans-unit id="c742676de44a162cfee6bb02198e78cb8de6f9c1" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_BPTC_UNORM_ARB</source>
          <target state="translated">GL_COMPRESSED_RGBA_BPTC_UNORM_ARB</target>
        </trans-unit>
        <trans-unit id="43c0717ab66acb571aa3b1878faa8d02d5a1aa3e" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="93dbfa8fe19f1e83f1c11e016cb5db7d057dd6f5" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_S3TC_DXT3_EXT</source>
          <target state="translated">GL_COMPRESSED_RGBA_S3TC_DXT3_EXT</target>
        </trans-unit>
        <trans-unit id="a88ccec9a9e05501c9e4cb40a191d5d67b22cfe6" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_S3TC_DXT5_EXT</source>
          <target state="translated">GL_COMPRESSED_RGBA_S3TC_DXT5_EXT</target>
        </trans-unit>
        <trans-unit id="dfc599759cc2d9735836ad35199b31f2d33da0b3" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB</source>
          <target state="translated">GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB</target>
        </trans-unit>
        <trans-unit id="317e54baa4b8ae2894f9906ca170871d529bd8d2" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB</source>
          <target state="translated">GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB</target>
        </trans-unit>
        <trans-unit id="05f4d41824ba34e049d9d28f1b4ad41c793fe1b2" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_RGB_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="05bd69cfb73b118a4e00ce1c2698fe00cba289d3" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RG_RGTC2</source>
          <target state="translated">GL_COMPRESSED_RG_RGTC2</target>
        </trans-unit>
        <trans-unit id="2edeb2956f39e2c78b9f3cc5d94c0e5a7bf1efcc" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_R11_EAC</source>
          <target state="translated">GL_COMPRESSED_SIGNED_R11_EAC</target>
        </trans-unit>
        <trans-unit id="c3f7f2f7a353cf74ec9be61efac4bb2e709e9268" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_RED_RGTC1</source>
          <target state="translated">GL_COMPRESSED_SIGNED_RED_RGTC1</target>
        </trans-unit>
        <trans-unit id="cf0f1bd5bced3e1bd0793eed2a0542ec9e828e0d" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_RG11_EAC</source>
          <target state="translated">GL_COMPRESSED_SIGNED_RG11_EAC</target>
        </trans-unit>
        <trans-unit id="ab2206b6d6bd0fcd805deac0741a5dde1c12201a" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_RG_RGTC2</source>
          <target state="translated">GL_COMPRESSED_SIGNED_RG_RGTC2</target>
        </trans-unit>
        <trans-unit id="fbdafc371a2bfb973daaf6d41b62fa8c7da4102a" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</source>
          <target state="translated">GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</target>
        </trans-unit>
        <trans-unit id="c37bcbb38243151937073687e97d4515c6a6f865" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB8_ETC2</source>
          <target state="translated">GL_COMPRESSED_SRGB8_ETC2</target>
        </trans-unit>
        <trans-unit id="3371554790fa00d6f55938aecdd377d81d38e075" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</source>
          <target state="translated">GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</target>
        </trans-unit>
        <trans-unit id="e304cb75d2e57bd188286bcc1e27e2096cd28600" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB</target>
        </trans-unit>
        <trans-unit id="a20a9d598a9d89ebb265c37218cc79fd0c07935d" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="d7d35b5477a08fa4e1ef6db9b79f12767d17b90a" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</target>
        </trans-unit>
        <trans-unit id="fd5d135530f7de237f1f431661859a1b5c0fb270" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</target>
        </trans-unit>
        <trans-unit id="e4ff37347b212338e010d560ee1df9c806e1c5ad" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="a6b3c3235f45bb2f9fe2ce3b601e3e87e161679f" translate="yes" xml:space="preserve">
          <source>GL_CONSTANT_ALPHA</source>
          <target state="translated">GL_CONSTANT_ALPHA</target>
        </trans-unit>
        <trans-unit id="929c26f36ca3ca264fb569de50d9b2a87ba4464b" translate="yes" xml:space="preserve">
          <source>GL_DEPTH24_STENCIL8</source>
          <target state="translated">GL_DEPTH24_STENCIL8</target>
        </trans-unit>
        <trans-unit id="3370225565350e68674358663988a705e103eeb4" translate="yes" xml:space="preserve">
          <source>GL_DEPTH32F_STENCIL8</source>
          <target state="translated">GL_DEPTH32F_STENCIL8</target>
        </trans-unit>
        <trans-unit id="6f8c953d6c168e7b73cd64ae7d8eeb0e9c09892f" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT</source>
          <target state="translated">GL_DEPTH_COMPONENT</target>
        </trans-unit>
        <trans-unit id="1e877eaf15aeb8f62245a2fd79a910e81201b106" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT16</source>
          <target state="translated">GL_DEPTH_COMPONENT16</target>
        </trans-unit>
        <trans-unit id="5f74746d9de958f66b93c60fded77eb82119b5fc" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT24</source>
          <target state="translated">GL_DEPTH_COMPONENT24</target>
        </trans-unit>
        <trans-unit id="1d0f0cce4d5abed8cb2f8771b60435c37ca4c9df" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT32</source>
          <target state="translated">GL_DEPTH_COMPONENT32</target>
        </trans-unit>
        <trans-unit id="a06773ab7a0262799d47d53f335414a52a926328" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT32F</source>
          <target state="translated">GL_DEPTH_COMPONENT32F</target>
        </trans-unit>
        <trans-unit id="094b988dd5ffd5728baa01675bd8d10669c8c4f7" translate="yes" xml:space="preserve">
          <source>GL_DST_ALPHA</source>
          <target state="translated">GL_DST_ALPHA</target>
        </trans-unit>
        <trans-unit id="2a5cb92d98dc3cf674ebaa846eb1c094e8cc539a" translate="yes" xml:space="preserve">
          <source>GL_DST_COLOR</source>
          <target state="translated">GL_DST_COLOR</target>
        </trans-unit>
        <trans-unit id="0d98d8e7c368dcbb44863f1971372d5cd0064a8d" translate="yes" xml:space="preserve">
          <source>GL_DYNAMIC_COPY</source>
          <target state="translated">GL_DYNAMIC_COPY</target>
        </trans-unit>
        <trans-unit id="13d529c7113f047b7c685332a6809dc7f896d5f8" translate="yes" xml:space="preserve">
          <source>GL_DYNAMIC_DRAW</source>
          <target state="translated">GL_DYNAMIC_DRAW</target>
        </trans-unit>
        <trans-unit id="dba6ac72b166edd7535921b709fad7af83498c22" translate="yes" xml:space="preserve">
          <source>GL_DYNAMIC_READ</source>
          <target state="translated">GL_DYNAMIC_READ</target>
        </trans-unit>
        <trans-unit id="d5c0f980333286e2d9e3e06c8db07c1f72906e9f" translate="yes" xml:space="preserve">
          <source>GL_ETC1_RGB8_OES</source>
          <target state="translated">GL_ETC1_RGB8_OES</target>
        </trans-unit>
        <trans-unit id="5a09879fde832b3edc9d02b5475eee1c46e37265" translate="yes" xml:space="preserve">
          <source>GL_FUNC_ADD</source>
          <target state="translated">GL_FUNC_ADD</target>
        </trans-unit>
        <trans-unit id="d17a4384baf4f06db398b7024c936a8c485708f7" translate="yes" xml:space="preserve">
          <source>GL_FUNC_REVERSE_SUBTRACT</source>
          <target state="translated">GL_FUNC_REVERSE_SUBTRACT</target>
        </trans-unit>
        <trans-unit id="4840be8232118648e6859e74da3a681b238730ce" translate="yes" xml:space="preserve">
          <source>GL_FUNC_SUBTRACT</source>
          <target state="translated">GL_FUNC_SUBTRACT</target>
        </trans-unit>
        <trans-unit id="f0a339a82bc28c7bf32a5467ec9a6b86a02b747e" translate="yes" xml:space="preserve">
          <source>GL_LINEAR</source>
          <target state="translated">GL_LINEAR</target>
        </trans-unit>
        <trans-unit id="d9366de68e4f0faba9fed7ad39df5fb657b620d4" translate="yes" xml:space="preserve">
          <source>GL_LINEAR_MIPMAP_LINEAR</source>
          <target state="translated">GL_LINEAR_MIPMAP_LINEAR</target>
        </trans-unit>
        <trans-unit id="9c5e93409f7326f86e1084228d151efc044581a2" translate="yes" xml:space="preserve">
          <source>GL_LINEAR_MIPMAP_NEAREST</source>
          <target state="translated">GL_LINEAR_MIPMAP_NEAREST</target>
        </trans-unit>
        <trans-unit id="051cc28b3a44241ace9d510ba5476ff238f2d5c4" translate="yes" xml:space="preserve">
          <source>GL_LUMINANCE</source>
          <target state="translated">GL_LUMINANCE</target>
        </trans-unit>
        <trans-unit id="f2af61640cc587dbf3f5556117079fc19c84d4e2" translate="yes" xml:space="preserve">
          <source>GL_MAX</source>
          <target state="translated">GL_MAX</target>
        </trans-unit>
        <trans-unit id="b09ac64fc9f924b3e9d972798eef253f28a992a0" translate="yes" xml:space="preserve">
          <source>GL_MIN</source>
          <target state="translated">GL_MIN</target>
        </trans-unit>
        <trans-unit id="46210c2f564cbc54d04a82cb20bf3d9fb3cafe38" translate="yes" xml:space="preserve">
          <source>GL_NEAREST</source>
          <target state="translated">GL_NEAREST</target>
        </trans-unit>
        <trans-unit id="deca253cac56d684e9ed9a2513e83a9b42608993" translate="yes" xml:space="preserve">
          <source>GL_NEAREST_MIPMAP_LINEAR</source>
          <target state="translated">GL_NEAREST_MIPMAP_LINEAR</target>
        </trans-unit>
        <trans-unit id="af4ac704e1c42139608e3be8b0c7731f00167917" translate="yes" xml:space="preserve">
          <source>GL_NEAREST_MIPMAP_NEAREST</source>
          <target state="translated">GL_NEAREST_MIPMAP_NEAREST</target>
        </trans-unit>
        <trans-unit id="ea7b9ef969c2a70704cdad2c8d62b624921f3450" translate="yes" xml:space="preserve">
          <source>GL_NONE</source>
          <target state="translated">GL_NONE</target>
        </trans-unit>
        <trans-unit id="76593b2cae4b788603bdb14d8a29d1b4c7713fff" translate="yes" xml:space="preserve">
          <source>GL_ONE</source>
          <target state="translated">GL_ONE</target>
        </trans-unit>
        <trans-unit id="2bc0aeff3290b0b8cd4bcc8a4a5948100457d403" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_CONSTANT_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_CONSTANT_ALPHA</target>
        </trans-unit>
        <trans-unit id="34b10b015aa26cb9f2977169a871521d104174dc" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_CONSTANT_COLOR</source>
          <target state="translated">GL_ONE_MINUS_CONSTANT_COLOR</target>
        </trans-unit>
        <trans-unit id="c63f4f66e7713124395e9d9301d77e8874db1cb8" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_DST_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_DST_ALPHA</target>
        </trans-unit>
        <trans-unit id="e778ea86fb02819677df69d729c3248c68680c98" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_DST_COLOR</source>
          <target state="translated">GL_ONE_MINUS_DST_COLOR</target>
        </trans-unit>
        <trans-unit id="3ac84a8a2ea7e1bdedb2005d9772b173cd956887" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC1_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_SRC1_ALPHA</target>
        </trans-unit>
        <trans-unit id="0aedf04b8256dca9021b07cbf2d3c0ae376fd57e" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC1_COLOR</source>
          <target state="translated">GL_ONE_MINUS_SRC1_COLOR</target>
        </trans-unit>
        <trans-unit id="2a4be77208ccc18ee38542be998a0446a3d09254" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC1_COLOR (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e764c871721bfacfcc1e7b1604f1a808fe64a67" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_SRC_ALPHA</target>
        </trans-unit>
        <trans-unit id="e07d0dc9efc7907d53f125daf1ad0b8b54e8de03" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC_COLOR</source>
          <target state="translated">GL_ONE_MINUS_SRC_COLOR</target>
        </trans-unit>
        <trans-unit id="23c5e662b50bf8526fc6d27238160d36ea573d11" translate="yes" xml:space="preserve">
          <source>GL_R11F_G11F_B10F</source>
          <target state="translated">GL_R11F_G11F_B10F</target>
        </trans-unit>
        <trans-unit id="afe5ee77c3a41b4f73354a2c57cb918491b80cce" translate="yes" xml:space="preserve">
          <source>GL_R16</source>
          <target state="translated">GL_R16</target>
        </trans-unit>
        <trans-unit id="c8cba7c55be4bb743868eaa6a9ac14f114c93c91" translate="yes" xml:space="preserve">
          <source>GL_R16F</source>
          <target state="translated">GL_R16F</target>
        </trans-unit>
        <trans-unit id="47f3f698dd9305323b2a100d2acdfd1495db8b4b" translate="yes" xml:space="preserve">
          <source>GL_R16I</source>
          <target state="translated">GL_R16I</target>
        </trans-unit>
        <trans-unit id="c081750490d8e4e9abe69e21222c991b070c1665" translate="yes" xml:space="preserve">
          <source>GL_R16UI</source>
          <target state="translated">GL_R16UI</target>
        </trans-unit>
        <trans-unit id="c52b8671e8c09cf7a53e4129f6349ebddfa56042" translate="yes" xml:space="preserve">
          <source>GL_R16_SNORM</source>
          <target state="translated">GL_R16_SNORM</target>
        </trans-unit>
        <trans-unit id="0fa157de6ee34d19f727a89d22b39a125ac87b18" translate="yes" xml:space="preserve">
          <source>GL_R32F</source>
          <target state="translated">GL_R32F</target>
        </trans-unit>
        <trans-unit id="c89fe50b062eaf0d7e3a917afb029716578726f6" translate="yes" xml:space="preserve">
          <source>GL_R32I</source>
          <target state="translated">GL_R32I</target>
        </trans-unit>
        <trans-unit id="2edade79a59425bc1df9fdfbc329d182464ad90b" translate="yes" xml:space="preserve">
          <source>GL_R32UI</source>
          <target state="translated">GL_R32UI</target>
        </trans-unit>
        <trans-unit id="8ecb2586cc3417b8748cfd751a4c562c107c938a" translate="yes" xml:space="preserve">
          <source>GL_R3_G3_B2</source>
          <target state="translated">GL_R3_G3_B2</target>
        </trans-unit>
        <trans-unit id="3d69ab84cabbb9b3123d4e10affbd47ca561b049" translate="yes" xml:space="preserve">
          <source>GL_R8</source>
          <target state="translated">GL_R8</target>
        </trans-unit>
        <trans-unit id="dc0e918b50efc690c8784a9707846ab392944a25" translate="yes" xml:space="preserve">
          <source>GL_R8I</source>
          <target state="translated">GL_R8I</target>
        </trans-unit>
        <trans-unit id="98734db8dfa5e46393e7c582179194671ccedf7b" translate="yes" xml:space="preserve">
          <source>GL_R8UI</source>
          <target state="translated">GL_R8UI</target>
        </trans-unit>
        <trans-unit id="69ec80258902389ab79821ec03ee72653080fb0f" translate="yes" xml:space="preserve">
          <source>GL_R8_SNORM</source>
          <target state="translated">GL_R8_SNORM</target>
        </trans-unit>
        <trans-unit id="f074b81d61024ebca0b6401962f62f994d0c5f33" translate="yes" xml:space="preserve">
          <source>GL_RG16</source>
          <target state="translated">GL_RG16</target>
        </trans-unit>
        <trans-unit id="39e472739144bf1f5a4454594298cb8f9746b464" translate="yes" xml:space="preserve">
          <source>GL_RG16F</source>
          <target state="translated">GL_RG16F</target>
        </trans-unit>
        <trans-unit id="82cdd5aa3adbfff907b8c8ac0ec94635abd2f41e" translate="yes" xml:space="preserve">
          <source>GL_RG16I</source>
          <target state="translated">GL_RG16I</target>
        </trans-unit>
        <trans-unit id="4ae677f5587faeac3768a69338857bba0b03cefd" translate="yes" xml:space="preserve">
          <source>GL_RG16UI</source>
          <target state="translated">GL_RG16UI</target>
        </trans-unit>
        <trans-unit id="8281c1030dd40b034b087436c3430860cbbfce36" translate="yes" xml:space="preserve">
          <source>GL_RG16_SNORM</source>
          <target state="translated">GL_RG16_SNORM</target>
        </trans-unit>
        <trans-unit id="562e3b89093e419463929c6e458ce817284ba890" translate="yes" xml:space="preserve">
          <source>GL_RG32F</source>
          <target state="translated">GL_RG32F</target>
        </trans-unit>
        <trans-unit id="fcd76d39ab50506ac93a84f6c2b8d44ec073bf40" translate="yes" xml:space="preserve">
          <source>GL_RG32I</source>
          <target state="translated">GL_RG32I</target>
        </trans-unit>
        <trans-unit id="b6376f3fec6158d1153bf4a93857e3cab649f9f1" translate="yes" xml:space="preserve">
          <source>GL_RG32UI</source>
          <target state="translated">GL_RG32UI</target>
        </trans-unit>
        <trans-unit id="0df57f8713f2d0f42ef761d6d4532edebb04114f" translate="yes" xml:space="preserve">
          <source>GL_RG8</source>
          <target state="translated">GL_RG8</target>
        </trans-unit>
        <trans-unit id="7d1a2fa4beb8ae876c017fef36d31a55b29bb39b" translate="yes" xml:space="preserve">
          <source>GL_RG8I</source>
          <target state="translated">GL_RG8I</target>
        </trans-unit>
        <trans-unit id="0221497975ce7689f560caf4d1820f09c2ea84f8" translate="yes" xml:space="preserve">
          <source>GL_RG8UI</source>
          <target state="translated">GL_RG8UI</target>
        </trans-unit>
        <trans-unit id="a49173ed42d7a179e50204eab8fa40c844c0b45f" translate="yes" xml:space="preserve">
          <source>GL_RG8_SNORM</source>
          <target state="translated">GL_RG8_SNORM</target>
        </trans-unit>
        <trans-unit id="0e01ec88bca206008f16013de612773fa3c16e05" translate="yes" xml:space="preserve">
          <source>GL_RGB</source>
          <target state="translated">GL_RGB</target>
        </trans-unit>
        <trans-unit id="238bba0cc44af315b925c90aa7b9d7f36fcc29cd" translate="yes" xml:space="preserve">
          <source>GL_RGB10_A2UI</source>
          <target state="translated">GL_RGB10_A2UI</target>
        </trans-unit>
        <trans-unit id="93b0e582f7b6d6e81fc221920a810f3e36ee5bce" translate="yes" xml:space="preserve">
          <source>GL_RGB16</source>
          <target state="translated">GL_RGB16</target>
        </trans-unit>
        <trans-unit id="bf37f1bf6caf5b4dbd6a87846ee91ee2e92ae060" translate="yes" xml:space="preserve">
          <source>GL_RGB16F</source>
          <target state="translated">GL_RGB16F</target>
        </trans-unit>
        <trans-unit id="73ff372ce5c212c145f7cae0d1d9607ab6c5366f" translate="yes" xml:space="preserve">
          <source>GL_RGB16I</source>
          <target state="translated">GL_RGB16I</target>
        </trans-unit>
        <trans-unit id="4772b4aefaaaedd8c3b0353c430e639689acb5fd" translate="yes" xml:space="preserve">
          <source>GL_RGB16UI</source>
          <target state="translated">GL_RGB16UI</target>
        </trans-unit>
        <trans-unit id="07138e680e539db086f5f556c04835f9d7d45989" translate="yes" xml:space="preserve">
          <source>GL_RGB16_SNORM</source>
          <target state="translated">GL_RGB16_SNORM</target>
        </trans-unit>
        <trans-unit id="8e6282f3d7b5690bce86d5e397bbfcd7f23419bc" translate="yes" xml:space="preserve">
          <source>GL_RGB32F</source>
          <target state="translated">GL_RGB32F</target>
        </trans-unit>
        <trans-unit id="21d67f158cdfa6d24a05c63ea77f500217f239ec" translate="yes" xml:space="preserve">
          <source>GL_RGB32I</source>
          <target state="translated">GL_RGB32I</target>
        </trans-unit>
        <trans-unit id="d5f0a2442764b5464bbbe462d5b05a4be661bd36" translate="yes" xml:space="preserve">
          <source>GL_RGB32UI</source>
          <target state="translated">GL_RGB32UI</target>
        </trans-unit>
        <trans-unit id="8e99bd59ed9fac6f4b84bda0a2371615355d8dd8" translate="yes" xml:space="preserve">
          <source>GL_RGB565</source>
          <target state="translated">GL_RGB565</target>
        </trans-unit>
        <trans-unit id="345c129c7bfe52a95d4c8b5a3e7143ae7a46e1e6" translate="yes" xml:space="preserve">
          <source>GL_RGB5_A1</source>
          <target state="translated">GL_RGB5_A1</target>
        </trans-unit>
        <trans-unit id="7e9c1b9aa62b53a477a1d0b6b2b298c3cc40939f" translate="yes" xml:space="preserve">
          <source>GL_RGB8</source>
          <target state="translated">GL_RGB8</target>
        </trans-unit>
        <trans-unit id="2e6f9299898b35d6e9a8626207de1a3d265a9425" translate="yes" xml:space="preserve">
          <source>GL_RGB8I</source>
          <target state="translated">GL_RGB8I</target>
        </trans-unit>
        <trans-unit id="62d21d7be7e563b7c41cc565ffe3ed4a1b65729b" translate="yes" xml:space="preserve">
          <source>GL_RGB8UI</source>
          <target state="translated">GL_RGB8UI</target>
        </trans-unit>
        <trans-unit id="4676a59dd78fb15e29f695be86b5e122b0b0a396" translate="yes" xml:space="preserve">
          <source>GL_RGB8_SNORM</source>
          <target state="translated">GL_RGB8_SNORM</target>
        </trans-unit>
        <trans-unit id="2359ede59294c17f36d45750daa1fb041b1533d5" translate="yes" xml:space="preserve">
          <source>GL_RGB9_E5</source>
          <target state="translated">GL_RGB9_E5</target>
        </trans-unit>
        <trans-unit id="d2f7d65e3804862022b4a976a7d27091fc288ebb" translate="yes" xml:space="preserve">
          <source>GL_RGBA</source>
          <target state="translated">GL_RGBA</target>
        </trans-unit>
        <trans-unit id="76aeebdc261f6722a20b50443be5bdc86bcd1af4" translate="yes" xml:space="preserve">
          <source>GL_RGBA16</source>
          <target state="translated">GL_RGBA16</target>
        </trans-unit>
        <trans-unit id="54eebe4486dbefa8f60dd33526f92176ca86725e" translate="yes" xml:space="preserve">
          <source>GL_RGBA16F</source>
          <target state="translated">GL_RGBA16F</target>
        </trans-unit>
        <trans-unit id="e729a40eeed3a0316a8db348c478ec4f4af391ea" translate="yes" xml:space="preserve">
          <source>GL_RGBA16I</source>
          <target state="translated">GL_RGBA16I</target>
        </trans-unit>
        <trans-unit id="6ab1c945f1875820ba25ed0589167844f7cf3686" translate="yes" xml:space="preserve">
          <source>GL_RGBA16UI</source>
          <target state="translated">GL_RGBA16UI</target>
        </trans-unit>
        <trans-unit id="4a978a0ac951ef9cfdc1a124ca4117c5bd2b72b5" translate="yes" xml:space="preserve">
          <source>GL_RGBA16_SNORM</source>
          <target state="translated">GL_RGBA16_SNORM</target>
        </trans-unit>
        <trans-unit id="1bad5d09b31fc0cd7c4385de56b550600aad7e06" translate="yes" xml:space="preserve">
          <source>GL_RGBA32F</source>
          <target state="translated">GL_RGBA32F</target>
        </trans-unit>
        <trans-unit id="db1350c3506818eaf096325c941b60b5b9422a11" translate="yes" xml:space="preserve">
          <source>GL_RGBA32I</source>
          <target state="translated">GL_RGBA32I</target>
        </trans-unit>
        <trans-unit id="9faada4200248d6e1b0f9cc056c9067b6176f809" translate="yes" xml:space="preserve">
          <source>GL_RGBA32UI</source>
          <target state="translated">GL_RGBA32UI</target>
        </trans-unit>
        <trans-unit id="fc6293330a5dad96e9b68c2a5cab49722bff71f5" translate="yes" xml:space="preserve">
          <source>GL_RGBA4</source>
          <target state="translated">GL_RGBA4</target>
        </trans-unit>
        <trans-unit id="42cda0a22551d00fcad1c79001ad43cbfa299b73" translate="yes" xml:space="preserve">
          <source>GL_RGBA8</source>
          <target state="translated">GL_RGBA8</target>
        </trans-unit>
        <trans-unit id="e3436356e216b545e1eb6ba6f442c2777bcb8bb4" translate="yes" xml:space="preserve">
          <source>GL_RGBA8I</source>
          <target state="translated">GL_RGBA8I</target>
        </trans-unit>
        <trans-unit id="175188a6fae39451efd94142a7263f3a8e4bb909" translate="yes" xml:space="preserve">
          <source>GL_RGBA8UI</source>
          <target state="translated">GL_RGBA8UI</target>
        </trans-unit>
        <trans-unit id="eb5ba0b7f8300443322c05f5e438de374dfe9241" translate="yes" xml:space="preserve">
          <source>GL_RGBA8_SNORM</source>
          <target state="translated">GL_RGBA8_SNORM</target>
        </trans-unit>
        <trans-unit id="8d7da015e09d6e1177c30d7f477c1c0cf5c0b275" translate="yes" xml:space="preserve">
          <source>GL_SRC1_ALPHA</source>
          <target state="translated">GL_SRC1_ALPHA</target>
        </trans-unit>
        <trans-unit id="119e01e771a015e166cb185d6e137915d86478a6" translate="yes" xml:space="preserve">
          <source>GL_SRC1_COLOR</source>
          <target state="translated">GL_SRC1_COLOR</target>
        </trans-unit>
        <trans-unit id="aee7cf52498635a6080adac59062524288fcee28" translate="yes" xml:space="preserve">
          <source>GL_SRC_ALPHA</source>
          <target state="translated">GL_SRC_ALPHA</target>
        </trans-unit>
        <trans-unit id="4e8f36e06d4029fc0194a6bbba3fd1cd064430e6" translate="yes" xml:space="preserve">
          <source>GL_SRC_ALPHA_SATURATE</source>
          <target state="translated">GL_SRC_ALPHA_SATURATE</target>
        </trans-unit>
        <trans-unit id="e129b4237037f613444b13107693c015d259e5a7" translate="yes" xml:space="preserve">
          <source>GL_SRC_COLOR</source>
          <target state="translated">GL_SRC_COLOR</target>
        </trans-unit>
        <trans-unit id="da6f3b2e024b74a7f8cf5015a837ec895219b084" translate="yes" xml:space="preserve">
          <source>GL_SRGB8</source>
          <target state="translated">GL_SRGB8</target>
        </trans-unit>
        <trans-unit id="cf115d61d5b3d2bb9183770093cffbd168891e1c" translate="yes" xml:space="preserve">
          <source>GL_SRGB8_ALPHA8</source>
          <target state="translated">GL_SRGB8_ALPHA8</target>
        </trans-unit>
        <trans-unit id="4d7a18534bcefd30918884fa31f6931390f32517" translate="yes" xml:space="preserve">
          <source>GL_STATIC_COPY</source>
          <target state="translated">GL_STATIC_COPY</target>
        </trans-unit>
        <trans-unit id="1bc5ee3ced56b2ff7dd3d723a41d793a0d399ace" translate="yes" xml:space="preserve">
          <source>GL_STATIC_DRAW</source>
          <target state="translated">GL_STATIC_DRAW</target>
        </trans-unit>
        <trans-unit id="6a4a3c7a3cd965beff8c30ddfb194ed3ac3ee4dc" translate="yes" xml:space="preserve">
          <source>GL_STATIC_READ</source>
          <target state="translated">GL_STATIC_READ</target>
        </trans-unit>
        <trans-unit id="1b89c596957ed035e440bcfad0c961368a6f8839" translate="yes" xml:space="preserve">
          <source>GL_STREAM_COPY</source>
          <target state="translated">GL_STREAM_COPY</target>
        </trans-unit>
        <trans-unit id="8cc0dc0ac50c11f27ff7c6385a404b47f1ae0cc3" translate="yes" xml:space="preserve">
          <source>GL_STREAM_DRAW</source>
          <target state="translated">GL_STREAM_DRAW</target>
        </trans-unit>
        <trans-unit id="6816b72f540a12b2541408b43b35578423f81718" translate="yes" xml:space="preserve">
          <source>GL_STREAM_READ</source>
          <target state="translated">GL_STREAM_READ</target>
        </trans-unit>
        <trans-unit id="d34e589582f809f48fd8a5fcd98b3f97acaaeb35" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_1D</source>
          <target state="translated">GL_TEXTURE_1D</target>
        </trans-unit>
        <trans-unit id="86c49a7c0f384b768d2c1d0d896b65c95a635560" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_1D_ARRAY</source>
          <target state="translated">GL_TEXTURE_1D_ARRAY</target>
        </trans-unit>
        <trans-unit id="0833c3932827341e0a442383b0531ff60ea1578d" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D</source>
          <target state="translated">GL_TEXTURE_2D</target>
        </trans-unit>
        <trans-unit id="c0c679c4b2ec16373a060caa7c1e12c929df5e4d" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D_ARRAY</source>
          <target state="translated">GL_TEXTURE_2D_ARRAY</target>
        </trans-unit>
        <trans-unit id="9754a2359994f90ddbd2f8d7904982ddf343d45e" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D_MULTISAMPLE</source>
          <target state="translated">GL_TEXTURE_2D_MULTISAMPLE</target>
        </trans-unit>
        <trans-unit id="3741e005f4d7bf84df4d9617f85b974f8729f66e" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D_MULTISAMPLE_ARRAY</source>
          <target state="translated">GL_TEXTURE_2D_MULTISAMPLE_ARRAY</target>
        </trans-unit>
        <trans-unit id="e6f94970a89edc86e2954920418c61d21d2d8ac5" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_3D</source>
          <target state="translated">GL_TEXTURE_3D</target>
        </trans-unit>
        <trans-unit id="a2e711990ca91877e2c44730fd776fbddebacd1a" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_BUFFER</source>
          <target state="translated">GL_TEXTURE_BUFFER</target>
        </trans-unit>
        <trans-unit id="466a1b38387857745c3af042889d3dbd91791b78" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_CUBE_MAP</source>
          <target state="translated">GL_TEXTURE_CUBE_MAP</target>
        </trans-unit>
        <trans-unit id="ce6426dbdf720778295e9c5513db2dc0d60c93d6" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_CUBE_MAP_ARRAY</source>
          <target state="translated">GL_TEXTURE_CUBE_MAP_ARRAY</target>
        </trans-unit>
        <trans-unit id="bfbfdb448d1521fad6ebd0bf44598bf5f6863f5c" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_RECTANGLE</source>
          <target state="translated">GL_TEXTURE_RECTANGLE</target>
        </trans-unit>
        <trans-unit id="e11c0fd3f964b50d10da13cedf0e414cec7602c4" translate="yes" xml:space="preserve">
          <source>GL_ZERO</source>
          <target state="translated">GL_ZERO</target>
        </trans-unit>
        <trans-unit id="19978c583123db471d322f8538c01889cdab90a2" translate="yes" xml:space="preserve">
          <source>GLboolean</source>
          <target state="translated">GLboolean</target>
        </trans-unit>
        <trans-unit id="7ea9ed0a38a7714b4b8ec3e15b3495fc69a6fe98" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsEnabledi(GLenum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394056db4940199281485391ee482563b7fb6e9f" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsProgramPipeline(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d993b6642eb06723e1983f2c6fecd9b14e38526a" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsQuery(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04db84c65e500b13ff1ca08da8e7e0244a3523f" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsSampler(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11365614aa66dbbbf1318fbeb5ada8951a500d6d" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsSync(GLsync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a544f9025b3f7d1412508316432ca548b909a41" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsTransformFeedback(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5618bacb8b0578188fa9f66612bbb33433bca35c" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsVertexArray(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cfd121be8068d01b60229d5522e4260932c890" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glUnmapBuffer(GLenum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c41fcced75e15922ac01f1124958ba05a7678b" translate="yes" xml:space="preserve">
          <source>GLenum</source>
          <target state="translated">GLenum</target>
        </trans-unit>
        <trans-unit id="928b8d5f70200fca57411a2764db4cbbc3033415" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLExtraFunctions::glClientWaitSync(GLsync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941b1f79accada491f96de9e9d3b46d6f1f7e3a1" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLExtraFunctions::glGetGraphicsResetStatus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0a8008520e2a299867d10e5c3634012d4ae5b6" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLFramebufferObjectFormat::internalTextureFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e982bae3cb0c1942cbe4ce8a0ded62df440486" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLFramebufferObjectFormat::textureTarget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187fdc5989b191fe9d766632ffc50bb806c3a1fd" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLWidget::textureFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57699860deeef923f76c962c1a3de9167dbbce6" translate="yes" xml:space="preserve">
          <source>GLint</source>
          <target state="translated">GLint</target>
        </trans-unit>
        <trans-unit id="4c5af786623058bd1988f61fb47900fd219bdd88" translate="yes" xml:space="preserve">
          <source>GLint QOpenGLExtraFunctions::glGetFragDataLocation(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a002f516285a71c345270a18518561c93531ee" translate="yes" xml:space="preserve">
          <source>GLint QOpenGLExtraFunctions::glGetProgramResourceLocation(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db96c527aa70df0d41a7a6357c7ec84875b78785" translate="yes" xml:space="preserve">
          <source>GLsync</source>
          <target state="translated">GLsync</target>
        </trans-unit>
        <trans-unit id="24783898985db79a09c04fc14fe3add6a0f6661e" translate="yes" xml:space="preserve">
          <source>GLsync QOpenGLExtraFunctions::glFenceSync(GLenum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344bbe66f8b1950786e16971fca203271ca3d141" translate="yes" xml:space="preserve">
          <source>GLuint</source>
          <target state="translated">GLuint</target>
        </trans-unit>
        <trans-unit id="d7fd0b15c09e7946f67f46a9e396d2874975f7c2" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLBuffer::bufferId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97880d18bfd2fde3a45aa29d3872f2c484608a02" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLContext::defaultFramebufferObject() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8972ec2ad00839a1fee72882545d48c3a9cf1e" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLDebugMessage::id() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa406c5c3166b3e5d43aa44092387e56dda9542b" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glCreateShaderProgramv(GLenum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eaf3355855b7614b9ccb6328a59c5c1f246da4d" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glGetDebugMessageLog(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f0f2b68d78285ffd43c8697ebaffc3c1cadda0" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glGetProgramResourceIndex(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c86790de8cbce9753926d076bb4f7aed469099" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glGetUniformBlockIndex(GLuint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c5168e765a282ac561038d5916160f096ec594" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::handle() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b36c1d0933ef95e2cf6d1641c1aa24d4663709" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::takeTexture()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add5e2a0aa049bca07488506e96bb4e761c499e3" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::takeTexture(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2f6e239ac4a8846a09f1702c18639ac99cfd99" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::texture() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ce3355ed08094fb2610bca18b3ccd0984e22a2" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLShader::shaderId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182cab7c253e013c0cbf2abdcd25920b73d46ac6" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLShaderProgram::programId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6502af2b22d5db635efe6b61c409164c953b13" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLTexture::textureId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd2d04839830dc553cb590ed16e03781ae78c12" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLTimerQuery::objectId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf5ed74af81326812fd96b50ef01ac737df1a4d" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLVertexArrayObject::objectId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f509abaf975e7612b93e715741bc00c3495b01" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLWidget::defaultFramebufferObject() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c29b6914623d0fd08c73473ac02c1211a4f4b0" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLWindow::defaultFramebufferObject() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e46d050caefbeecab92be481cce5a9eb51a8efc" translate="yes" xml:space="preserve">
          <source>GLuint64</source>
          <target state="translated">GLuint64</target>
        </trans-unit>
        <trans-unit id="9691079a091a9f4e5fdd532e5fc1a989f66e7b71" translate="yes" xml:space="preserve">
          <source>GLuint64 QOpenGLTimerQuery::waitForResult() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb26b00d15e44088a1288077de825204be49378" translate="yes" xml:space="preserve">
          <source>GLuint64 QOpenGLTimerQuery::waitForTimestamp() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84abb4e7909f64bc187f2734fe98576848f7dffd" translate="yes" xml:space="preserve">
          <source>GNOME</source>
          <target state="translated">GNOME</target>
        </trans-unit>
        <trans-unit id="c15892d53e4fc0ff6c64ab3743b3d59f4e3c0557" translate="yes" xml:space="preserve">
          <source>GNU Emacs Style Key Sequences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db478898bffc0d34f134f2787ba79413a59e7191" translate="yes" xml:space="preserve">
          <source>GNU General Public License v2.0 only (This does not force user code to be GPL'ed. For more info see details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3242a7226af93c26b7fe93b57a63548b68b400f1" translate="yes" xml:space="preserve">
          <source>GNU General Public License v2.0 only with Linux Syscall Note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354f808cdcbda6e0dd2921339dfc4376e341ba78" translate="yes" xml:space="preserve">
          <source>GPS satellites used for measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d953b44521e040ff09c6b66fef76cee07cebfae5" translate="yes" xml:space="preserve">
          <source>GPSAltitude</source>
          <target state="translated">GPSAltitude</target>
        </trans-unit>
        <trans-unit id="ef7deaf2b718ecd8ffcb5e7f5b5a8829f1898fc3" translate="yes" xml:space="preserve">
          <source>GPSAreaInformation</source>
          <target state="translated">GPSAreaInformation</target>
        </trans-unit>
        <trans-unit id="89a6387e7f067a41edc2967ae77c2e5e17a8ec12" translate="yes" xml:space="preserve">
          <source>GPSDOP</source>
          <target state="translated">GPSDOP</target>
        </trans-unit>
        <trans-unit id="1898fd57c81ac6b73e9d51d88b8840be4061f24b" translate="yes" xml:space="preserve">
          <source>GPSImgDirection</source>
          <target state="translated">GPSImgDirection</target>
        </trans-unit>
        <trans-unit id="0d7bc7c072fa23929e4a8e39767cad23a06896ca" translate="yes" xml:space="preserve">
          <source>GPSImgDirectionRef</source>
          <target state="translated">GPSImgDirectionRef</target>
        </trans-unit>
        <trans-unit id="c8f8455ed1bc0800869da1b07461ddce548cb429" translate="yes" xml:space="preserve">
          <source>GPSLatitude</source>
          <target state="translated">GPSLatitude</target>
        </trans-unit>
        <trans-unit id="7e09838344d2e8f7df18e8634dc91ae3b7e6e460" translate="yes" xml:space="preserve">
          <source>GPSLongitude</source>
          <target state="translated">GPSLongitude</target>
        </trans-unit>
        <trans-unit id="3800a6580ab5a77883b3caa51b59cb085b691063" translate="yes" xml:space="preserve">
          <source>GPSMapDatum</source>
          <target state="translated">GPSMapDatum</target>
        </trans-unit>
        <trans-unit id="04e2aa3bab68cf3d7c8062bd82a99d5f2502e035" translate="yes" xml:space="preserve">
          <source>GPSProcessingMethod</source>
          <target state="translated">GPSProcessingMethod</target>
        </trans-unit>
        <trans-unit id="f4707499ab91a2d9b69d77ac318d4dd666ec5e5a" translate="yes" xml:space="preserve">
          <source>GPSSatellites</source>
          <target state="translated">GPSSatellites</target>
        </trans-unit>
        <trans-unit id="81176a39553e55cdd45dffc04d0c8fc128d61e41" translate="yes" xml:space="preserve">
          <source>GPSSpeed</source>
          <target state="translated">GPSSpeed</target>
        </trans-unit>
        <trans-unit id="7f5a5f43d1703b9968da0e411b12008a90b54006" translate="yes" xml:space="preserve">
          <source>GPSStatus</source>
          <target state="translated">GPSStatus</target>
        </trans-unit>
        <trans-unit id="a3ee07e7db383210d74af269e1c44f6c7d60dd89" translate="yes" xml:space="preserve">
          <source>GPSTimeStamp</source>
          <target state="translated">GPSTimeStamp</target>
        </trans-unit>
        <trans-unit id="7736750e2feca4fd9593974a08ab2046a86e89fc" translate="yes" xml:space="preserve">
          <source>GPSTrack</source>
          <target state="translated">GPSTrack</target>
        </trans-unit>
        <trans-unit id="f61db0ab4175b62cc2e9f513144a38c16a123ca5" translate="yes" xml:space="preserve">
          <source>GPSTrackRef</source>
          <target state="translated">GPSTrackRef</target>
        </trans-unit>
        <trans-unit id="28133574be5746c613fba1b5d89492933938787a" translate="yes" xml:space="preserve">
          <source>GPU device (GPUDEV) for OpenGL ES 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e050e5b7e577301a6feffffbca1d8609fb7237c" translate="yes" xml:space="preserve">
          <source>GPerf</source>
          <target state="translated">GPerf</target>
        </trans-unit>
        <trans-unit id="733859930e78f5cf4e314d0a595463dfa0cd6681" translate="yes" xml:space="preserve">
          <source>GUI Styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b45d3259cc7293b9fe02eb6a37fc700fd5e9e15" translate="yes" xml:space="preserve">
          <source>GUI thread block is released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e005c028cb430c56d42a457648d6d340f2a3e656" translate="yes" xml:space="preserve">
          <source>GUI thread is blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9f525586a8c79a6a2933f59562c3fbc1c69be2" translate="yes" xml:space="preserve">
          <source>GUID</source>
          <target state="translated">GUID</target>
        </trans-unit>
        <trans-unit id="6cee6c0867328cfc46a743add46d83dc870c8f22" translate="yes" xml:space="preserve">
          <source>GUID QUuid::operator GUID() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a881e6cef63c4fa04af04a9268b70962399b87d3" translate="yes" xml:space="preserve">
          <source>GUIs are Dynamic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b4ec0c76e31296f3c300ba6c6031630af37291" translate="yes" xml:space="preserve">
          <source>GainControl</source>
          <target state="translated">GainControl</target>
        </trans-unit>
        <trans-unit id="ccece2966ff8b4cb279897a70ef4ca32da17c0cd" translate="yes" xml:space="preserve">
          <source>Galician</source>
          <target state="translated">Galician</target>
        </trans-unit>
        <trans-unit id="9c30a3485a5887f1ba5abd2a291d304a01863e55" translate="yes" xml:space="preserve">
          <source>Gallery</source>
          <target state="translated">Gallery</target>
        </trans-unit>
        <trans-unit id="7f22c5786da0be1aa76d3fa50039a4be8f8c4528" translate="yes" xml:space="preserve">
          <source>Gallery example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a73027b0dc1dd24f16ee13f59b5ea49d21ca1b" translate="yes" xml:space="preserve">
          <source>Game audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbecea7ce47f7b6915bbc9161e4d15a1419c2ffa" translate="yes" xml:space="preserve">
          <source>GameRole - game audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dde0030c49fb9ffa37907dd561f64fbc98981e0" translate="yes" xml:space="preserve">
          <source>Gamepad</source>
          <target state="translated">Gamepad</target>
        </trans-unit>
        <trans-unit id="4a3cccdf341e031fe998aa3633ef00066a7825de" translate="yes" xml:space="preserve">
          <source>Gamepad (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a2bf7126617f5721f1343665cd5c605bc89dbe" translate="yes" xml:space="preserve">
          <source>Gamepad QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564710e8a9bf7bf54ee2802735d1828a98e16edf" translate="yes" xml:space="preserve">
          <source>Gamepad QML type is used to access the current state of gamepad hardware connected to a system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2337ecce1afb423fdc9c603a766a125d53a7b08b" translate="yes" xml:space="preserve">
          <source>Gamepad.axisLeftX</source>
          <target state="translated">Gamepad.axisLeftX</target>
        </trans-unit>
        <trans-unit id="72973ab041fbd6b8f0a8aaa6e72a94c5724e71cf" translate="yes" xml:space="preserve">
          <source>Gamepad.axisLeftY</source>
          <target state="translated">Gamepad.axisLeftY</target>
        </trans-unit>
        <trans-unit id="76746fb1d5f8d030567e1da6029093c48870a8ba" translate="yes" xml:space="preserve">
          <source>Gamepad.axisRightX</source>
          <target state="translated">Gamepad.axisRightX</target>
        </trans-unit>
        <trans-unit id="316627c024cbfe739c88fad9171c976c65e42f8e" translate="yes" xml:space="preserve">
          <source>Gamepad.axisRightY</source>
          <target state="translated">Gamepad.axisRightY</target>
        </trans-unit>
        <trans-unit id="df307023565e50cedd76b440c373f281df479b5a" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonA</source>
          <target state="translated">Gamepad.buttonA</target>
        </trans-unit>
        <trans-unit id="26fc46d66f59c5d2c7975026b5184a6609719148" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonB</source>
          <target state="translated">Gamepad.buttonB</target>
        </trans-unit>
        <trans-unit id="aff2f6266c1bc4e7ba88dd82979bffbfbb23fc1e" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonDown</source>
          <target state="translated">Gamepad.buttonDown</target>
        </trans-unit>
        <trans-unit id="4a8ec7ed3134ff946c990ebb44cf4680afec74dd" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonL1</source>
          <target state="translated">Gamepad.buttonL1</target>
        </trans-unit>
        <trans-unit id="eefee5801b2f94accfba8df6984475deac7b22d7" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonL2</source>
          <target state="translated">Gamepad.buttonL2</target>
        </trans-unit>
        <trans-unit id="2f71a63510d94a4551cd20ffb9678e548184888f" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonL3</source>
          <target state="translated">Gamepad.buttonL3</target>
        </trans-unit>
        <trans-unit id="26dc4b18bc75193b3bb8a27cd21b2d7a17f6bbe4" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonLeft</source>
          <target state="translated">Gamepad.buttonLeft</target>
        </trans-unit>
        <trans-unit id="be17393169643dfa64e807f539936b8ab17c2007" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonR1</source>
          <target state="translated">Gamepad.buttonR1</target>
        </trans-unit>
        <trans-unit id="26f974de61fc87a582ad1508c896ea57698a6549" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonR2</source>
          <target state="translated">Gamepad.buttonR2</target>
        </trans-unit>
        <trans-unit id="76b322949845bd11ce50a9491b3359988086236e" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonR3</source>
          <target state="translated">Gamepad.buttonR3</target>
        </trans-unit>
        <trans-unit id="f7c98cfefe2f335410437c0a92fc41f2eb0b5477" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonRight</source>
          <target state="translated">Gamepad.buttonRight</target>
        </trans-unit>
        <trans-unit id="463599e8dd33ecd53638421f8c09917fc5c48b94" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonSelect</source>
          <target state="translated">Gamepad.buttonSelect</target>
        </trans-unit>
        <trans-unit id="d1d7d625cd00f89115887ad3fba0fe04a938e23c" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonStart</source>
          <target state="translated">Gamepad.buttonStart</target>
        </trans-unit>
        <trans-unit id="e09867a55c140f2693c23453555f1f75b64336a9" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonUp</source>
          <target state="translated">Gamepad.buttonUp</target>
        </trans-unit>
        <trans-unit id="6105a35380d4b3a4b917e1e63ca8100bb721a722" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonX</source>
          <target state="translated">Gamepad.buttonX</target>
        </trans-unit>
        <trans-unit id="ca127f131bcd2ce6056b87d1c5d4e6e3459fadea" translate="yes" xml:space="preserve">
          <source>Gamepad.buttonY</source>
          <target state="translated">Gamepad.buttonY</target>
        </trans-unit>
        <trans-unit id="cb37cbb26b204d34f63a130d3696634a4a7e0de2" translate="yes" xml:space="preserve">
          <source>Gamepad.connected</source>
          <target state="translated">Gamepad.connected</target>
        </trans-unit>
        <trans-unit id="443a3a14fe6a4e09fc2971c307df5933c816ca8a" translate="yes" xml:space="preserve">
          <source>Gamepad.deviceId</source>
          <target state="translated">Gamepad.deviceId</target>
        </trans-unit>
        <trans-unit id="b0976d40b8d93432685f8a9dc5d21de74541295a" translate="yes" xml:space="preserve">
          <source>Gamepad.name</source>
          <target state="translated">Gamepad.name</target>
        </trans-unit>
        <trans-unit id="e263bd3c86fa7416cf179d237a7ed75bc8191e78" translate="yes" xml:space="preserve">
          <source>GamepadManager</source>
          <target state="translated">GamepadManager</target>
        </trans-unit>
        <trans-unit id="2ab198341825cffab61c7013827c49b5374ff986" translate="yes" xml:space="preserve">
          <source>GamepadManager (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c6efd93f2dda9e6284a3232832a4f15d1b5872" translate="yes" xml:space="preserve">
          <source>GamepadManager QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce54a9cb2fe412262cf904145855b16eb0077431" translate="yes" xml:space="preserve">
          <source>GamepadManager.connectedGamepads</source>
          <target state="translated">GamepadManager.connectedGamepads</target>
        </trans-unit>
        <trans-unit id="cba508b12182b68f501d6af46c4f03f8fc5d2473" translate="yes" xml:space="preserve">
          <source>Gamma</source>
          <target state="translated">Gamma</target>
        </trans-unit>
        <trans-unit id="466f09c810c102db0cdcc6b0201002900bcebd7c" translate="yes" xml:space="preserve">
          <source>GammaAdjust</source>
          <target state="translated">GammaAdjust</target>
        </trans-unit>
        <trans-unit id="681ca6226e296b6bdf019149263305730b47169f" translate="yes" xml:space="preserve">
          <source>GammaAdjust (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2c0a139169f3bb7f30fcc2cd91b416ba6508e6" translate="yes" xml:space="preserve">
          <source>GammaAdjust QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1935c95e102fe18ca03f3916cb3eca3c528afc89" translate="yes" xml:space="preserve">
          <source>GammaAdjust.cached</source>
          <target state="translated">GammaAdjust.cached</target>
        </trans-unit>
        <trans-unit id="d973a08aad351ae5d5fb7d9615ea16b2cae18145" translate="yes" xml:space="preserve">
          <source>GammaAdjust.gamma</source>
          <target state="translated">GammaAdjust.gamma</target>
        </trans-unit>
        <trans-unit id="f8278f664b2855e7bc896d762ae0d46c3525e8d9" translate="yes" xml:space="preserve">
          <source>GammaAdjust.source</source>
          <target state="translated">GammaAdjust.source</target>
        </trans-unit>
        <trans-unit id="951f5c059f16e1814be8a5893e3db324e03778c7" translate="yes" xml:space="preserve">
          <source>GammaRay</source>
          <target state="translated">GammaRay</target>
        </trans-unit>
        <trans-unit id="5b32b8542e4c8854b05455c0b114c2bdced713ad" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ae97817c729d6970524473167f4e835a9f62b7" translate="yes" xml:space="preserve">
          <source>Garbage collection has advantages and disadvantages. It means that manually managing object lifetime is less important. However, it also means that a potentially long-lasting operation may be initiated by the JavaScript engine at a time which is out of the application developer's control. Unless JavaScript heap usage is considered carefully by the application developer, the frequency and duration of garbage collection may have a negative impact upon the application experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708f62a6ed475fad307f9cdddf885e08d137b183" translate="yes" xml:space="preserve">
          <source>Garbage is not collected from the persistent JS heap during &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; destruction. If you need all memory freed, call &lt;a href=&quot;qjsengine#collectGarbage&quot;&gt;collectGarbage&lt;/a&gt; manually right before destroying the &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b5af097b76945e5188a9517fa98db5ee45483c" translate="yes" xml:space="preserve">
          <source>Gauge</source>
          <target state="translated">Gauge</target>
        </trans-unit>
        <trans-unit id="539f99fdcf22680d61bff4babbc2af3ff828d2de" translate="yes" xml:space="preserve">
          <source>Gauge (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c5c423277c2dc9ac9fd91910775d849f6ba88b" translate="yes" xml:space="preserve">
          <source>Gauge QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01064c58adfea4c1efa3423569eb9595d8cdeb13" translate="yes" xml:space="preserve">
          <source>Gauge.font</source>
          <target state="translated">Gauge.font</target>
        </trans-unit>
        <trans-unit id="15dba915224d496fb504490f7a18b2f1033c28d9" translate="yes" xml:space="preserve">
          <source>Gauge.formatValue</source>
          <target state="translated">Gauge.formatValue</target>
        </trans-unit>
        <trans-unit id="2a088a688a9aa473c132bfc74e3fbc808ff2e5cf" translate="yes" xml:space="preserve">
          <source>Gauge.maximumValue</source>
          <target state="translated">Gauge.maximumValue</target>
        </trans-unit>
        <trans-unit id="6f662f1c43ddda3feab6521f8d4d19487df7b2cf" translate="yes" xml:space="preserve">
          <source>Gauge.minimumValue</source>
          <target state="translated">Gauge.minimumValue</target>
        </trans-unit>
        <trans-unit id="8e66880e4f79bd36bec28cd0182b29294aab9924" translate="yes" xml:space="preserve">
          <source>Gauge.minorTickmarkCount</source>
          <target state="translated">Gauge.minorTickmarkCount</target>
        </trans-unit>
        <trans-unit id="ad80d50f159ac110719b35db3e08f1dbe1c296e7" translate="yes" xml:space="preserve">
          <source>Gauge.orientation</source>
          <target state="translated">Gauge.orientation</target>
        </trans-unit>
        <trans-unit id="66e526f98730b805760459ef9a6dbd258eccf9fc" translate="yes" xml:space="preserve">
          <source>Gauge.tickmarkAlignment</source>
          <target state="translated">Gauge.tickmarkAlignment</target>
        </trans-unit>
        <trans-unit id="86025c966a060af395ab86f64f9fa7f50f8840e9" translate="yes" xml:space="preserve">
          <source>Gauge.tickmarkStepSize</source>
          <target state="translated">Gauge.tickmarkStepSize</target>
        </trans-unit>
        <trans-unit id="a32cca747727c2ca5a1e03c5c6da9e85a9140216" translate="yes" xml:space="preserve">
          <source>Gauge.value</source>
          <target state="translated">Gauge.value</target>
        </trans-unit>
        <trans-unit id="70eb8fdc0c6f90b3326bd5e8ad9270f769c41992" translate="yes" xml:space="preserve">
          <source>GaugeStyle</source>
          <target state="translated">GaugeStyle</target>
        </trans-unit>
        <trans-unit id="d87e7427edea6858dc4b9c53153d2dbcbc5bcaae" translate="yes" xml:space="preserve">
          <source>GaugeStyle (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945fbfad3d7ca6ca4f6909784515e29de944df40" translate="yes" xml:space="preserve">
          <source>GaugeStyle QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e4d230c5e5c70d86f6c9bec0d97a7b95850aa7" translate="yes" xml:space="preserve">
          <source>GaugeStyle.background</source>
          <target state="translated">GaugeStyle.background</target>
        </trans-unit>
        <trans-unit id="87b572d1a2e0957cd5f481d88ba94615b95de0d0" translate="yes" xml:space="preserve">
          <source>GaugeStyle.control</source>
          <target state="translated">GaugeStyle.control</target>
        </trans-unit>
        <trans-unit id="736444ef1268e4fb165063e302dc66c84b9679da" translate="yes" xml:space="preserve">
          <source>GaugeStyle.foreground</source>
          <target state="translated">GaugeStyle.foreground</target>
        </trans-unit>
        <trans-unit id="ba2b493863433df9a026778d19d9f215ab991e6c" translate="yes" xml:space="preserve">
          <source>GaugeStyle.minorTickmark</source>
          <target state="translated">GaugeStyle.minorTickmark</target>
        </trans-unit>
        <trans-unit id="feaeff61a29eee6a7abd0974936b34f2e61c1e61" translate="yes" xml:space="preserve">
          <source>GaugeStyle.tickmark</source>
          <target state="translated">GaugeStyle.tickmark</target>
        </trans-unit>
        <trans-unit id="556b6e81cc44e2d0e521752771002e8124a56132" translate="yes" xml:space="preserve">
          <source>GaugeStyle.tickmarkLabel</source>
          <target state="translated">GaugeStyle.tickmarkLabel</target>
        </trans-unit>
        <trans-unit id="4d49bf50c15bc18c4347dafcb69a3d79d3a98912" translate="yes" xml:space="preserve">
          <source>GaugeStyle.valueBar</source>
          <target state="translated">GaugeStyle.valueBar</target>
        </trans-unit>
        <trans-unit id="0798f915ff70894fc1b269bf493ef3845ad42f62" translate="yes" xml:space="preserve">
          <source>GaugeStyle.valuePosition</source>
          <target state="translated">GaugeStyle.valuePosition</target>
        </trans-unit>
        <trans-unit id="4edbfdf0cb65f2e81c84e55a06c4abd9c38eb241" translate="yes" xml:space="preserve">
          <source>GaussianBlur</source>
          <target state="translated">GaussianBlur</target>
        </trans-unit>
        <trans-unit id="9adb338e32c07b449dd188f4a5715c661514dcca" translate="yes" xml:space="preserve">
          <source>GaussianBlur (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bb1ab63d9edf9a1eacaa884fd3a18e39d4abc5" translate="yes" xml:space="preserve">
          <source>GaussianBlur QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc71765bbffb981d86002269d046a38495eb0fb" translate="yes" xml:space="preserve">
          <source>GaussianBlur.cached</source>
          <target state="translated">GaussianBlur.cached</target>
        </trans-unit>
        <trans-unit id="ef8e5ec83f5072d92488f19571c2844d23d83501" translate="yes" xml:space="preserve">
          <source>GaussianBlur.deviation</source>
          <target state="translated">GaussianBlur.deviation</target>
        </trans-unit>
        <trans-unit id="71343462492f4839b96ab4f093a178e71209c2b2" translate="yes" xml:space="preserve">
          <source>GaussianBlur.radius</source>
          <target state="translated">GaussianBlur.radius</target>
        </trans-unit>
        <trans-unit id="12e9ed8ef1352fa85b3c700380de5be469a6b443" translate="yes" xml:space="preserve">
          <source>GaussianBlur.samples</source>
          <target state="translated">GaussianBlur.samples</target>
        </trans-unit>
        <trans-unit id="c7eef0309643f69a469309da7ab2752091211c9d" translate="yes" xml:space="preserve">
          <source>GaussianBlur.source</source>
          <target state="translated">GaussianBlur.source</target>
        </trans-unit>
        <trans-unit id="f417db04fb7c06cd6a599348f38bbd90208d5d57" translate="yes" xml:space="preserve">
          <source>GaussianBlur.transparentBorder</source>
          <target state="translated">GaussianBlur.transparentBorder</target>
        </trans-unit>
        <trans-unit id="0e9a5be55d12e3a696fd24cbeb621f9e065853ad" translate="yes" xml:space="preserve">
          <source>General Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad92f9a617997df11fbc0385729abe830553357" translate="yes" xml:space="preserve">
          <source>General Description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d71fae4ec6099143752ab7790547041849bbec" translate="yes" xml:space="preserve">
          <source>General Installation Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31ccf60b8132570db25d70128671cfa09e6973d" translate="yes" xml:space="preserve">
          <source>General Legal Disclaimer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b01c727a71003b8392c50d5e2ddffdc179cdf34" translate="yes" xml:space="preserve">
          <source>General Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5b2231ebb51b96ad83f42c8232a3a30504b098" translate="yes" xml:space="preserve">
          <source>General Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233983047e4321efc546cf226983f4f4d37ab5b4" translate="yes" xml:space="preserve">
          <source>General counting semaphore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb3f9db411308b97dcc11ac4b20d74904cdc429" translate="yes" xml:space="preserve">
          <source>General file operation failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbeb67a03fe94bf7f642266a63b7fdfd0ac67c6" translate="yes" xml:space="preserve">
          <source>General information about fonts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc90cfd3136a01a3580332c4d0ce27d30295e4e" translate="yes" xml:space="preserve">
          <source>General network failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc009d63c70477332d3b26a216df733ea65feb8d" translate="yes" xml:space="preserve">
          <source>General notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6126c9f6ff4489ce02bdb7b9293684a9147f57da" translate="yes" xml:space="preserve">
          <source>General project configuration options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd6040dc4559218cb02487f52020bfe58f05226" translate="yes" xml:space="preserve">
          <source>General server failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe6e99d98828b2200136964a1819059d7d3bd76" translate="yes" xml:space="preserve">
          <source>General-purpose state for QStateMachine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889fc4b9035f7e64079b9440e6b1344ae2205d17" translate="yes" xml:space="preserve">
          <source>Generally an application doesn't need to set an object's ownership explicitly. QML uses a heuristic to set the default ownership. By default, an object that is created by QML has JavaScriptOwnership. The exception to this are the root objects created by calling &lt;a href=&quot;qqmlcomponent#create&quot;&gt;QQmlComponent::create&lt;/a&gt;() or &lt;a href=&quot;qqmlcomponent#beginCreate&quot;&gt;QQmlComponent::beginCreate&lt;/a&gt;(), which have CppOwnership by default. The ownership of these root-level objects is considered to have been transferred to the C++ caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253ffc9beb5bb5e9fbf16e4be768b90f24dd1fad" translate="yes" xml:space="preserve">
          <source>Generally however it is recommended that cross referencing be implemented via alternative identifiers as mentioned above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b57830c42bb04d54226a1252440ce2deaab15ce" translate="yes" xml:space="preserve">
          <source>Generally speaking, no user interaction can take place before calling exec(). As a special case, modal widgets like &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; can be used before calling exec(), because modal widgets use their own local event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6974ea54c69240d8254ee4431c2c6be09f72c35" translate="yes" xml:space="preserve">
          <source>Generally this constructor should not be used in production code, as a writable &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; violates QML's memory management rules. However, this constructor can be very useful while prototyping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420f2e6a344d67772c0f14f20830d0526caa71de" translate="yes" xml:space="preserve">
          <source>Generally this method is used in conjunction with a thread or a UNIX signal that sets the bool pointed to by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7cd3be807f4bcf5bf291d47635b05372ec2f51" translate="yes" xml:space="preserve">
          <source>Generally you will use the &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; class in application code - this class is mostly used when implementing a new &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; or if there is access to specific low level functionality not otherwise present in &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9d7ddc01f2128fd23931fe0529df5acbe4384f" translate="yes" xml:space="preserve">
          <source>Generally, groups should only be defined in a &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup&lt;/a&gt; if they require stochastic state transitions. Otherwise, it is sufficient to have the groups be defined simply by the strings used in the particle/particles properties of the types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8194a2a51fc4e632fcebb2502899227ae9621142" translate="yes" xml:space="preserve">
          <source>Generally, if the handler acts on the mouse event, then it should be accepted so that items lower in the stacking order do not also respond to the same event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce556a12c79f6678f2dd7dd3956a6ec6a555bdf6" translate="yes" xml:space="preserve">
          <source>Generally, if the item acts on the key event then it should be accepted so that ancestor items do not also respond to the same event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3e9f3f59054ca2714d98c7396f185bd6b18424" translate="yes" xml:space="preserve">
          <source>Generally, if the item acts on the mouse event then it should be accepted so that items lower in the stacking order do not also respond to the same event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c11810b3e1e442efce98bcaead91b1573cc00f" translate="yes" xml:space="preserve">
          <source>Generally, if the item acts on the wheel event then it should be accepted so that items lower in the stacking order do not also respond to the same event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd64cd1b0693c0c22770b8532e4774c815a558f" translate="yes" xml:space="preserve">
          <source>Generally, in a &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;, if we want to process the information entered by the user before accepting it, we need to connect the clicked() signal from the &lt;b&gt;OK&lt;/b&gt; button to a custom slot in our dialog. We will first show an example of the dialog in which the slot is connected by hand then compare it with a dialog that uses automatic connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca30fa284a90fa2a7cb721e2809f3b7ff48a4290" translate="yes" xml:space="preserve">
          <source>Generally, no user interaction can take place before calling exec().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03834ceb58174c31c1d1f21dda445e2b4a18b339" translate="yes" xml:space="preserve">
          <source>Generally, no user interaction can take place before calling exec(). As a special case, modal widgets like &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; can be used before calling exec(), because modal widgets call exec() to start a local event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58901e0b6b3ec938584856b4ee870fa7e481825a" translate="yes" xml:space="preserve">
          <source>Generally, subclasses of this class provide functions to allow data to be stored and retrieved, and instances are attached to blocks of text using &lt;a href=&quot;qtextblock#setUserData&quot;&gt;QTextBlock::setUserData&lt;/a&gt;(). This makes it possible to store additional data per text block in a way that can be retrieved safely by the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53386bcff3689731c1b34bba2a46745bd6ae8b0b" translate="yes" xml:space="preserve">
          <source>Generally, the capabilities provided by the default position source as returned by &lt;a href=&quot;qgeopositioninfosource#createDefaultSource&quot;&gt;QGeoPositionInfoSource::createDefaultSource&lt;/a&gt;(), along with the &lt;a href=&quot;qnmeapositioninfosource&quot;&gt;QNmeaPositionInfoSource&lt;/a&gt; class, are sufficient for retrieving location data. However, in some cases developers may wish to write their own custom location data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab88d34fe80d394bddfb88648db17421e3d84f0" translate="yes" xml:space="preserve">
          <source>Generally, the integrated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d21eea509d7dc43072d2b114ac2b8ed250a4c87" translate="yes" xml:space="preserve">
          <source>Generally, the model/view classes can be separated into the three groups described above: models, views, and delegates. Each of these components is defined by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7e0521ddcb1ddf01416d77818b0e4c891d15a7" translate="yes" xml:space="preserve">
          <source>Generally, the origin consists of a scheme, hostname, and port. For example, &lt;code&gt;&quot;http://localhost:8080&quot;&lt;/code&gt; would be a valid origin. The port is omitted if it is the scheme's default port (80 for &lt;code&gt;http&lt;/code&gt;, 443 for &lt;code&gt;https&lt;/code&gt;). The hostname is omitted for non-network schemes such as &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;qrc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68a7043cba19da9470a75e01be4b4707a82fdff" translate="yes" xml:space="preserve">
          <source>Generally, the type of processing used in a proxy model involves mapping each item of data from its original location in the source model to either a different location in the proxy model. In some models, some items may have no corresponding location in the proxy model; these models are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54724bcd27a36817e6da94142cd6b3db3e639dfe" translate="yes" xml:space="preserve">
          <source>Generally, these functions should return true if the operation was successful. However, there may be cases where the operation only partly succeeded; for example, if less than the specified number of rows could be inserted. In such cases, the model should return false to indicate failure to enable any attached components to handle the situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cb04f8d378069b3fb0ec1a1f9ab48cee2d44c4" translate="yes" xml:space="preserve">
          <source>Generally, this class is used to specify table widths. These can be specified either as a fixed amount of pixels, as a percentage of the containing frame's width, or by a variable width that allows it to take up just the space it requires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bdacc68ec171cc7826e8bdbae26aa710c39a7d" translate="yes" xml:space="preserve">
          <source>Generally, unless you are subclassing a model or view, you don't need to manipulate the contents of selections directly. However, the interface to the selection model can be accessed, if required, and this is explored in &lt;a href=&quot;#handling-selections-in-item-views&quot;&gt;Handling Selections in Item Views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc37e9920768c6b83cdb41e852c867f4432c30fc" translate="yes" xml:space="preserve">
          <source>Generally, use of processing instructions should be avoided, because they are not namespace aware and in many contexts are stripped out anyway. Processing instructions can often be replaced with elements from a custom namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3110696a9543de29b67ff19bbcf3952d6cc46f1c" translate="yes" xml:space="preserve">
          <source>Generate a C++ namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c993b1d8ed74b368010c9b0e63e108a484ed8de6" translate="yes" xml:space="preserve">
          <source>Generate a Keccak-224 hash sum. Introduced in Qt 5.9.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85c9d57431425b94e84a4cf1bc87e45ca4190fb" translate="yes" xml:space="preserve">
          <source>Generate a Keccak-256 hash sum. Introduced in Qt 5.9.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abee732ea64764ae6c9c6ee5663e96f03cc69826" translate="yes" xml:space="preserve">
          <source>Generate a Keccak-384 hash sum. Introduced in Qt 5.9.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaed44a274417c9e98a01c8882ca69b6a0ac5cc" translate="yes" xml:space="preserve">
          <source>Generate a Keccak-512 hash sum. Introduced in Qt 5.9.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e21705b613e373bfdab0e9921af84dc8785a98" translate="yes" xml:space="preserve">
          <source>Generate an MD4 hash sum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cee699402b1638a22fc8d7167b43acd047d632" translate="yes" xml:space="preserve">
          <source>Generate an MD5 hash sum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5379316988ab46e370794327b811cddd8854891" translate="yes" xml:space="preserve">
          <source>Generate an SHA-1 hash sum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f4e2427e6cece02b08395f6a251bb55bd5242c" translate="yes" xml:space="preserve">
          <source>Generate an SHA-224 hash sum (SHA-2). Introduced in Qt 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552879e78b9225e438aa2a860bdfc8bd109e5fca" translate="yes" xml:space="preserve">
          <source>Generate an SHA-256 hash sum (SHA-2). Introduced in Qt 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3c96a4080f4551ded39dc4fe76230c3fa2b644" translate="yes" xml:space="preserve">
          <source>Generate an SHA-384 hash sum (SHA-2). Introduced in Qt 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1982097a92b758511e797a7542dba32cf3f5205" translate="yes" xml:space="preserve">
          <source>Generate an SHA-512 hash sum (SHA-2). Introduced in Qt 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d3e6c2cbf93315d5c71e573579127802871566" translate="yes" xml:space="preserve">
          <source>Generate an SHA3-224 hash sum. Introduced in Qt 5.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f5187d613100cdbac02d6d97e8769f81847722" translate="yes" xml:space="preserve">
          <source>Generate an SHA3-256 hash sum. Introduced in Qt 5.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2e1f616e6a2bb6a37b1a3353fc49f0fa3e815e" translate="yes" xml:space="preserve">
          <source>Generate an SHA3-384 hash sum. Introduced in Qt 5.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751f80bf392c5bc926371c633e6d43ba098796b5" translate="yes" xml:space="preserve">
          <source>Generate an SHA3-512 hash sum. Introduced in Qt 5.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c79da7c3e376301dad3d97063c546b8d0386b96" translate="yes" xml:space="preserve">
          <source>Generate directions in Arabic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cbdc779e00a6994c12fce181cf8a2980940521" translate="yes" xml:space="preserve">
          <source>Generate directions in Brazilian Portuguese</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7cc062033fab4f3063bfe0b01b0f6d85a2b7df" translate="yes" xml:space="preserve">
          <source>Generate directions in Czech</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8dad53c1476a78d620aead2baed40292388ee6" translate="yes" xml:space="preserve">
          <source>Generate directions in Dutch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a742fa2c9606b088fbacf99b2df42d623c76dbed" translate="yes" xml:space="preserve">
          <source>Generate directions in Estonian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7b8760214074d0e0e500e7dbbda504ac64203d" translate="yes" xml:space="preserve">
          <source>Generate directions in French</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f56bbde696f6602a1622c3d7aced01c8603c479" translate="yes" xml:space="preserve">
          <source>Generate directions in German</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aba2c390b3aef08b01da198d9db4dfb7f7ee834" translate="yes" xml:space="preserve">
          <source>Generate directions in Greek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3ba5c703ec6743b70223aa4737ab481e5546ad" translate="yes" xml:space="preserve">
          <source>Generate directions in Hebrew</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386bbc7bc5d76ec0fae1b679294166829fcbaffd" translate="yes" xml:space="preserve">
          <source>Generate directions in Italian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8e47424f76ed4006318b22bdd2958a192a1f1a" translate="yes" xml:space="preserve">
          <source>Generate directions in Japanese</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9640c5bb13d89690c77e379e1b3fca27111b962d" translate="yes" xml:space="preserve">
          <source>Generate directions in Korean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f090c85588eb07fa7d0b16f7b610f028415b00" translate="yes" xml:space="preserve">
          <source>Generate directions in Latvian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdfb8c46e3ec10ed93afb7e04b7908c6511685e" translate="yes" xml:space="preserve">
          <source>Generate directions in Lithuanian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98faee349e106afb667e445553b6840d89a1282" translate="yes" xml:space="preserve">
          <source>Generate directions in Polish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ffa01393c263d2a9cf9407763a78fd1cd87515" translate="yes" xml:space="preserve">
          <source>Generate directions in Portuguese (Portugal)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee945c47b6845ca0045d3e26117e6cb1784e07e" translate="yes" xml:space="preserve">
          <source>Generate directions in Russian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6894f53f6c29ad0d43a3c10cb3d606fe62cd7c99" translate="yes" xml:space="preserve">
          <source>Generate directions in Spanish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d61f63bdd1e4a3ba91cae78cd687cfd98755dcb" translate="yes" xml:space="preserve">
          <source>Generate directions in Swedish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f180cfbd020b885256cffc05a4dea92afe2643b" translate="yes" xml:space="preserve">
          <source>Generate directions in Turkish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da6a03f69d04570f174092d5cc752356f949ea7" translate="yes" xml:space="preserve">
          <source>Generate documentation for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d83cd48abae52cff0602c3137e0768a47da381" translate="yes" xml:space="preserve">
          <source>Generate extra accessor and signal methods for states. This way you can connect to state changes with plain &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() and directly call a method to find out if a state is currently active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9686796284c2bfef90aa7140cff762351ac976f8" translate="yes" xml:space="preserve">
          <source>Generate namespace with dynamicCall-compatible API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2a6403a27f36b6d84934d9e9baa0743586d854" translate="yes" xml:space="preserve">
          <source>Generate the xml interface file from the given header. If the optional argument interfacename is omitted, the name of the interface file is constructed from the basename of the header with the suffix .xml appended. Options may be given to qdbuscpp2xml, such as those found when executing &quot;qdbuscpp2xml --help&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1cb262b785fe33912ba290cd9f09ade69de6a2" translate="yes" xml:space="preserve">
          <source>Generated Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c0efd2cf114bef65617c10e2bfa8d1df76570d" translate="yes" xml:space="preserve">
          <source>Generated-code classes also derive from &lt;a href=&quot;qdbusabstractinterface&quot;&gt;QDBusAbstractInterface&lt;/a&gt;, all methods described here are also valid for generated-code classes. In addition to those described here, generated-code classes provide member functions for the remote methods, which allow for compile-time checking of the correct parameters and return values, as well as property type-matching and signal parameter-matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fc43dc3dce502b8d3a439f3daa647aaa660090" translate="yes" xml:space="preserve">
          <source>Generates</source>
          <target state="translated">Generates</target>
        </trans-unit>
        <trans-unit id="fb35bcfa2b49824bd7a52dbf62b08f4799da1a45" translate="yes" xml:space="preserve">
          <source>Generates 32-bit quantities and stores them in the range between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a017e63c0d8bda175975ba5dfce402f904a9a8bc" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;N&lt;/code&gt; 32- or 64-bit quantities (depending on the type &lt;code&gt;UInt&lt;/code&gt;) and stores them in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c146abff144d3b3ecb8ce4aa343c38d7eab7872" translate="yes" xml:space="preserve">
          <source>Generates C++ sources implementing D-Bus interfaces defined in &lt;code&gt;dbus_spec1&lt;/code&gt;, &lt;code&gt;dbus_spec2&lt;/code&gt;, where each argument needs to be the path to a valid D-Bus interface description file. The paths of the generated files are added to &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcfdbb407cf564d25f1546d70dee1472f004a2a" translate="yes" xml:space="preserve">
          <source>Generates C++ sources implementing an interface for a D-Bus interface description file defined in &lt;code&gt;dbus_spec&lt;/code&gt;. The generated files are named after &lt;code&gt;basename&lt;/code&gt;: &lt;code&gt;basename.h&lt;/code&gt;, &lt;code&gt;basename.cpp&lt;/code&gt;, &lt;code&gt;basename.moc&lt;/code&gt;. The paths of the files are added to &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fa3b8bcf24d8012ff9d5ef5661cf08e98c557f" translate="yes" xml:space="preserve">
          <source>Generates a 32-bit random quantity and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1b456c6f95b37e23dd90e1c29d15a22947ba6b" translate="yes" xml:space="preserve">
          <source>Generates a 64-bit random quantity and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4cae7161f745e152b6cfc789c76a4405b2f08c" translate="yes" xml:space="preserve">
          <source>Generates a C++ header file implementing an adaptor for a D-Bus interface description file defined in &lt;code&gt;dbus_spec&lt;/code&gt;. The path of the generated file is added to &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt;. The generated adaptor class takes a pointer to &lt;code&gt;parent_class&lt;/code&gt; as &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; parent. &lt;code&gt;parent_class&lt;/code&gt; should be declared in &lt;code&gt;header&lt;/code&gt;, which is included in the generated code as &lt;code&gt;#include &quot;header&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d75c43dfc8e76235d750412e7a6c8ea9dbc4b9" translate="yes" xml:space="preserve">
          <source>Generates a PLAINTEXT signature from the client secret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7947b51a71cb12f785d7d299d0e4fbddecaa2d" translate="yes" xml:space="preserve">
          <source>Generates a Shader Program content from loaded graphs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1c3309d71eede5c30f7ce99b79922e157d6362" translate="yes" xml:space="preserve">
          <source>Generates a Shader Program content from loaded graphs. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f80a8b1f2f2ead3d75015ca236ce27957076ca" translate="yes" xml:space="preserve">
          <source>Generates a Shader Program content from loaded graphs. &lt;a href=&quot;qt3drender-qshaderprogrambuilder#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06a95f1343945d4f86f2d2c851bd0f882f6c111" translate="yes" xml:space="preserve">
          <source>Generates a blurred and colorized rectangle, which gives the impression that the source is glowing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44887a479b7e2d250c16dd585c438fcfa1b7d52" translate="yes" xml:space="preserve">
          <source>Generates a blurred and colorized rectangle, which gives the impression that the source is glowing. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809df35f8a69e08aae32ddd83a09ac41122b6c1c" translate="yes" xml:space="preserve">
          <source>Generates a colorized and blurred shadow inside the source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a831e9a99de5cb1388bcb1bd3f77f64f3eea3466" translate="yes" xml:space="preserve">
          <source>Generates a colorized and blurred shadow inside the source. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848851e1f465cde48ca9a547a5cb3d5020f591cd" translate="yes" xml:space="preserve">
          <source>Generates a formatted string out of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dbdb37acdd486c612f3c4688ef573914564206" translate="yes" xml:space="preserve">
          <source>Generates a halo like glow around the source item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0fa0b446c67d6349673cafdbfc041f934cde16" translate="yes" xml:space="preserve">
          <source>Generates a halo like glow around the source item. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9865cd7a9397197b35cc9a3734236cb114ef6e" translate="yes" xml:space="preserve">
          <source>Generates a new path that is a fillable area representing the outline of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7879c0db30e92a3b33492c758b9432f62b7e595a" translate="yes" xml:space="preserve">
          <source>Generates a nonce.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
