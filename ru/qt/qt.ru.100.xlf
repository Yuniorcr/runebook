<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="8f9be24e050960d01bf72dca7b04e695ff1206f6" translate="yes" xml:space="preserve">
          <source>Asks the &lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; to take over control of item positioning temporarily. It will follow the movement of a logical particle when one is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e27f0cb4e68409aaf923cd0204e0cd2a5d7cf0" translate="yes" xml:space="preserve">
          <source>Asks the session manager for permission to interact with the user. Returns true if interaction is permitted; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6b0bbf61b969fc3b48d7387b5201f68104d2a4" translate="yes" xml:space="preserve">
          <source>Asks the window manager to not give focus to this top level window. This attribute has no effect on non-X11 platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e97d821a923211f1a7fd1122dd8c979af132a13" translate="yes" xml:space="preserve">
          <source>AspectRatio  (surface width / surface height)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92200ee3f6b98bd4979778912a47cd3c07445782" translate="yes" xml:space="preserve">
          <source>AspectType</source>
          <target state="translated">AspectType</target>
        </trans-unit>
        <trans-unit id="5ff162a7839a73dff64f80c8862ffe44d4437e92" translate="yes" xml:space="preserve">
          <source>Aspects of the parsing behavior can be adapted using &lt;a href=&quot;qxmlsimplereader#setFeature&quot;&gt;setFeature&lt;/a&gt;() and &lt;a href=&quot;qxmlsimplereader#setProperty&quot;&gt;setProperty&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="0a0e8459185a7da2d3178427da1b3513e2713c82" translate="yes" xml:space="preserve">
          <source>Assertions make some statement about the text at the point where they occur in the regexp but they do not match any characters. In the following list &lt;b&gt;&lt;i&gt;E&lt;/i&gt;&lt;/b&gt; stands for any expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4426afd90a77a35fb37ebd7110b9989cf7bed224" translate="yes" xml:space="preserve">
          <source>Asset</source>
          <target state="translated">Asset</target>
        </trans-unit>
        <trans-unit id="b93ea6bc7e684b128703f5ddb35f473f9ccc826b" translate="yes" xml:space="preserve">
          <source>Asset Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c448cf7fe03487b8fc745327e1e39ca87845735b" translate="yes" xml:space="preserve">
          <source>Assets File System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2444928438f54ef4414cddff39193096c12629aa" translate="yes" xml:space="preserve">
          <source>Assign</source>
          <target state="translated">Assign</target>
        </trans-unit>
        <trans-unit id="986e599c10041bc8283187d0fc115ad5e6b627d9" translate="yes" xml:space="preserve">
          <source>Assign a &lt;a href=&quot;qml-qtquick-controls-menu&quot;&gt;Menu&lt;/a&gt; to this property to get a pull-down menu button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657b3ebab2cb4a05a9ab4551475f9772cf932de0" translate="yes" xml:space="preserve">
          <source>Assign a topic to a QDoc comment - A comment could be a page, a property documentation, a class documentation, or any of the available &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;topic commands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1441632d366ed3ca636d23b1416a14537fec58fe" translate="yes" xml:space="preserve">
          <source>Assigning Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9105a23e3c1c0024455d955363ad4a3d5812f2" translate="yes" xml:space="preserve">
          <source>Assigning Values to Property Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8fa75efce008484085eae902f298db122ee253" translate="yes" xml:space="preserve">
          <source>Assignment operator, assign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b7284b53bea6e095fae1d654500ee410048752" translate="yes" xml:space="preserve">
          <source>Assignment operator, assigns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60d0d4e8b3c326541217252d2e7f2cf31625cda" translate="yes" xml:space="preserve">
          <source>Assignment operator. Assigns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c910a013b8c5906b1cd9ba41947a56e3a154e6" translate="yes" xml:space="preserve">
          <source>Assignment operator. This guarded pointer will now point to the same object that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07964378a8d1220311421c67d166f9a93a054a08" translate="yes" xml:space="preserve">
          <source>Assignment. Makes a copy of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0376e8f00ecf6d9a805c3ee4d46f35c9cc4bbbdb" translate="yes" xml:space="preserve">
          <source>AssignmentInfo Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3648d2f302803cec9a6936b971744757ba50945" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::context</source>
          <target state="translated">AssignmentInfo::context</target>
        </trans-unit>
        <trans-unit id="589ed4a8be86536dbd1aeddad0b32db87ad648e8" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::dest</source>
          <target state="translated">AssignmentInfo::dest</target>
        </trans-unit>
        <trans-unit id="f817060420efee2ff9d1a76c4643994044b01a37" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::expr</source>
          <target state="translated">AssignmentInfo::expr</target>
        </trans-unit>
        <trans-unit id="9f2a0cc5f167ef3113974a9fe34af5506e805041" translate="yes" xml:space="preserve">
          <source>Assigns</source>
          <target state="translated">Assigns</target>
        </trans-unit>
        <trans-unit id="f92e5b99ea2de76eb2c44df249cb0bef49dabc28" translate="yes" xml:space="preserve">
          <source>Assigns a Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45bdd4bad97015089eba0cf4ce24245724db744" translate="yes" xml:space="preserve">
          <source>Assigns a copy of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214f273d64bf82622948c8930cf9f71cf5a1dba2" translate="yes" xml:space="preserve">
          <source>Assigns a shallow copy of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd31892264d57d78eaa612788450f11e1d014de2" translate="yes" xml:space="preserve">
          <source>Assigns a shallow copy of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c0762b3589ba836834cf365ef423f9c0d675c3" translate="yes" xml:space="preserve">
          <source>Assigns an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e617352338e9202319f3b82bca196a8c8fc151" translate="yes" xml:space="preserve">
          <source>Assigns another host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa69103ae8cb16e772a9ff85090bbdb5ed3666a" translate="yes" xml:space="preserve">
          <source>Assigns character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47bdc31d76b5266afbc0c2a14419aab86ba6b9f" translate="yes" xml:space="preserve">
          <source>Assigns picture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6feee028389ad98aad9d6da8ed93c2722b81c26" translate="yes" xml:space="preserve">
          <source>Assigns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cf90175289fab0fa061f23cecdbbbc413dd29f" translate="yes" xml:space="preserve">
          <source>Assigns the &lt;a href=&quot;qsslpresharedkeyauthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801a35ae06553e61d456afde92c73023c075b5dc" translate="yes" xml:space="preserve">
          <source>Assigns the Latin-1 string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd05365443bf8bb053b9389faf63030fc3336bb" translate="yes" xml:space="preserve">
          <source>Assigns the content (text and format) of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb89c254fd932c2786b45f91de6af5c5be0c03a8" translate="yes" xml:space="preserve">
          <source>Assigns the contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d8f0b8c6f445b2fcbb7b3df078810009344b91" translate="yes" xml:space="preserve">
          <source>Assigns the data of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873c8b9f541f0b268a383c6780595ff1af2d75f7" translate="yes" xml:space="preserve">
          <source>Assigns the data of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34d479f5d050bccc28029787d65108a47741756" translate="yes" xml:space="preserve">
          <source>Assigns the font info in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05921b1ee7b5acef8bad7c36beb484e359bee74" translate="yes" xml:space="preserve">
          <source>Assigns the font metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2e1388da966c4ba36a294a2b5d6bed24b56ef8" translate="yes" xml:space="preserve">
          <source>Assigns the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8210ba4c95c21960d58255001b0d0413154275" translate="yes" xml:space="preserve">
          <source>Assigns the host address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeb06a0e9c4be45c78e41a37b5477ce3da973c6" translate="yes" xml:space="preserve">
          <source>Assigns the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275941fc7784806d44b9d804a7c339cd785c4ea2" translate="yes" xml:space="preserve">
          <source>Assigns the match result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46071a015167b49375a721f0c938c2362334270a" translate="yes" xml:space="preserve">
          <source>Assigns the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9a8b84d8009bad8e3bf16c836adc4fd08f1220" translate="yes" xml:space="preserve">
          <source>Assigns the object,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b815d741916882b0098831bd58278b18a74427" translate="yes" xml:space="preserve">
          <source>Assigns the previous value to the managed variable. This is the value at construction time, or at the last call to &lt;a href=&quot;qscopedvaluerollback#commit&quot;&gt;commit&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5355328eb248f9644497135f1a55f68091ffcff0" translate="yes" xml:space="preserve">
          <source>Assigns the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efa8f59037690c88f785f377faf17baaed1be9a" translate="yes" xml:space="preserve">
          <source>Assigns the special address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e58888169c81cf4e97039e4d8f36831d937914b" translate="yes" xml:space="preserve">
          <source>Assigns the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ec6bef35a847b998e9a2da7a21369f71c7f350" translate="yes" xml:space="preserve">
          <source>Assigns the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77da1cd9a8cbaa3264bfe32aae6f6044b12da48" translate="yes" xml:space="preserve">
          <source>Assigns the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a33a76b3af75c9e791ff73e77cd3cf43fae27e7" translate="yes" xml:space="preserve">
          <source>Assigns the value of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e076e5f7162ea14899f4ad786f6629ab5297f04" translate="yes" xml:space="preserve">
          <source>Assigns the value of the given Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8de2d3f3964cb86c85419b37fdfa623d80a68b5" translate="yes" xml:space="preserve">
          <source>Assigns the value of the network proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af7cc5287cd40cf758ee7c3298d4248d5c63741" translate="yes" xml:space="preserve">
          <source>Assigns the value of the variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f618d95957c5fd7d77847a9ebd87c45f7418de" translate="yes" xml:space="preserve">
          <source>Assigns the value stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ba477098456f34d9a243599bf4849341324961" translate="yes" xml:space="preserve">
          <source>Assigns the values from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de97a6659207c6ba2a1461b47d5df8e6d514fb7" translate="yes" xml:space="preserve">
          <source>Assigns the values of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6ddc5f0c27beba11482455b71b8ff4072f6d2b" translate="yes" xml:space="preserve">
          <source>Assigns the version and profile of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2ed2bbffb380de90fe8da01c8a3976377908bf" translate="yes" xml:space="preserve">
          <source>Assigns the weight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d9b32906c7d1516b9836bdd3a8e3ae699fe3c4" translate="yes" xml:space="preserve">
          <source>Assigns this &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; instance to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422196ccf47e7f549778766e36852518c23c436e" translate="yes" xml:space="preserve">
          <source>Assigns this NDEF record to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c5bb632378d9c2fcefdedcba306f845e8efe44" translate="yes" xml:space="preserve">
          <source>Associated Qt3D Parameter name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c50dde1a468384df54a6cda924049d4d67b444" translate="yes" xml:space="preserve">
          <source>Associates the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9c8d18acae9577e029d79bdb190db244e987ff" translate="yes" xml:space="preserve">
          <source>Associates the popup menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3f4788cf3d3e7c514a41891b9b613c5b1e8115" translate="yes" xml:space="preserve">
          <source>Associates this window with the specified Vulkan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2a119710b8aac523a3a56655ddf1934612958a" translate="yes" xml:space="preserve">
          <source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let's say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to be able to represent and freely move between all possible combinations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afa1db70d14b16989ef6ff8bb02424bc2d3db32" translate="yes" xml:space="preserve">
          <source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let's say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to represent the states and freely move between all possible combinations as shown in the following state chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90ff00b401683da81cdb675dce198cdea833664" translate="yes" xml:space="preserve">
          <source>Assume the existence (and prior registration into the &quot;Qt.example 1.0&quot; namespace) of the following C++ type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9904dd4cef57f901996862e1f031d1d41fac12" translate="yes" xml:space="preserve">
          <source>Assume the screen has a resolution of 96 DPI rather than using the OS-provided resolution. This will cause font rendering to be consistent in pixels-per-point across devices rather than defining 1 point as 1/72 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd4906cbc89602fa42eafbae11f6af6a69ccf24" translate="yes" xml:space="preserve">
          <source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851c2f1306ef9513fb28142d28a415cadad31fae" translate="yes" xml:space="preserve">
          <source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button's &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked()&lt;/a&gt; signal. We could add a transition from each of &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;; however, this seems redundant, and one would also have to remember to add such a transition from every new state that is added in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7916f28ff08f4e480a5afca8d1bd7571dfa918ce" translate="yes" xml:space="preserve">
          <source>Assumes the command is to be to sent back in reply to itself to the backend node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff2031d476ca68024442f42c24527548b5dc499" translate="yes" xml:space="preserve">
          <source>Assuming a Qt3DCore::Node needs to override the PropertyTrackingMode on two properties (enabled and displacement), the value should be set as shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b610154aa909ee49cffb67df60a04f72dbae7fa" translate="yes" xml:space="preserve">
          <source>Assuming a test has the following data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff43a68f140b51cad42d7e0c95e2d0bab6c68162" translate="yes" xml:space="preserve">
          <source>Assuming that red channel value 1.0 is fully red (0.0 having no red at all), this effect considers pixel component value 0.5 to cause no displacement at all. Values above 0.5 shift pixels to the left, values below 0.5 do the shift to the right. In a similar way, green channel values above 0.5 displace the pixels upwards, and values below 0.5 shift the pixels downwards. The actual amount of displacement in pixels depends on the &lt;a href=&quot;qml-qtgraphicaleffects-displace#displacement-prop&quot;&gt;displacement&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bf7fc148321e0e237a7bfa56cd2b15579f2f5b" translate="yes" xml:space="preserve">
          <source>Assuming that the &lt;code&gt;a&lt;/code&gt; variable does not exist in the scope chain, the following code is illegal in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2def80cafe7c0980ddfcdfba4b78ad5447b0122d" translate="yes" xml:space="preserve">
          <source>Assuming the z values of both items are the same, this will cause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f329190d0fd15344dac730aabc63c032720e1284" translate="yes" xml:space="preserve">
          <source>Asterisk</source>
          <target state="translated">Asterisk</target>
        </trans-unit>
        <trans-unit id="3d7fac7964f752248f02c5aa61c85fd417dcfbcf" translate="yes" xml:space="preserve">
          <source>Asynchronous</source>
          <target state="translated">Asynchronous</target>
        </trans-unit>
        <trans-unit id="e75be76667be17954eee5355523c5fda27d028e3" translate="yes" xml:space="preserve">
          <source>Asynchronous (default) The creation occurs asynchronously, assuming a QQmlIncubatorController is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dd52824822a5030bc87301e39aee35067fc4b2" translate="yes" xml:space="preserve">
          <source>Asynchronous Image Loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762cc12f68657e49265d45e6f2f7caab006a5bc3" translate="yes" xml:space="preserve">
          <source>Asynchronous Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a319250e7a62a6449653025f2ab2f88895ac77d" translate="yes" xml:space="preserve">
          <source>Asynchronous Loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc275ca923ec281351bd9fe315bfe5269d968893" translate="yes" xml:space="preserve">
          <source>Asynchronous Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac38cf1bc068ff6173e6dd303016d2512deaa69" translate="yes" xml:space="preserve">
          <source>Asynchronous image loading for providers of type other than &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt; are executed on a single thread per engine basis. That means that a slow image provider will block the loading of any other request. To avoid that we suggest using &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt; and implement threading on the provider side via a &lt;code&gt;QThreadPool&lt;/code&gt; or similar. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-imageresponseprovider-example.html#&quot;&gt;Image Response Provider Example&lt;/a&gt; for a complete implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95084984f1824fd6686f2858d97d77b54112d4d" translate="yes" xml:space="preserve">
          <source>Asynchronous incubators are controlled by a &lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; that is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, which lets the engine know when the application is idle and incubating objects should be processed. If an incubation controller is not set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; creates objects synchronously regardless of the specified &lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e47f6482fe4592a09b00832e19487c245576e5" translate="yes" xml:space="preserve">
          <source>Asynchronous loading for image providers that provide &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is only supported in platforms that have the ThreadedPixmaps feature, in platforms where pixmaps can only be created in the main thread (i.e. ThreadedPixmaps is not supported) if &lt;a href=&quot;qml-qtquick-image#asynchronous-prop&quot;&gt;asynchronous&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, the value is ignored and the image is loaded synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815a86ce7e19dae036dc727fc0eb17010cfec26" translate="yes" xml:space="preserve">
          <source>Asynchronous method to retrieve the page's content as HTML, enclosed in HTML and BODY tags. Upon successful completion,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed3108d6db768b79d5656a5db689618d8813893" translate="yes" xml:space="preserve">
          <source>Asynchronous method to retrieve the page's content converted to plain text, completely stripped of all HTML formatting. Upon successful completion,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfb9e9f12588a472c278960afe69aa2f3e59056" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are marked by the keyword &lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt; in the method signature, before the &lt;code&gt;void&lt;/code&gt; return type and the slot name. The &lt;code&gt;quit()&lt;/code&gt; slot in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdbus-complexpingpong-example.html#&quot;&gt;D-Bus Complex Ping Pong Example&lt;/a&gt; is an example of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1320a3c8bebbef00d6eebcda7cf893e0add4b9" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are those that do not normally return any reply to the caller. For that reason, they cannot take any output parameters. In most cases, by the time the first line of the slot is run, the caller function has already resumed working.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf15448916e4418ca84783919398ce5d3bdf56e4" translate="yes" xml:space="preserve">
          <source>Asynchronously requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f0075e5c85468a56b797c1d1e50667af529bf8" translate="yes" xml:space="preserve">
          <source>At a high level, you have a choice of using a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type directly as a source or defining the desired API in a .rep template for use with the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42809e8d1678586fe4c28a5bfba7143493cf53de" translate="yes" xml:space="preserve">
          <source>At any given time, the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will be in one of four states: active, suspended, stopped, or idle. These states are described by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. State changes are reported through the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal. You can use this signal to, for instance, update the GUI of the application; the mundane example here being changing the state of a &lt;code&gt;play/pause&lt;/code&gt; button. You request a state change directly with &lt;a href=&quot;qaudiooutput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#reset&quot;&gt;reset&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66f5a534a2f4e46e7b9aa796d01cd6db3d5263b" translate="yes" xml:space="preserve">
          <source>At any point an animation is in one of three states: &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt;, &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt;, or &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt;--as defined by the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt; enum. The current state can be changed by calling &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt;(), or &lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt;(). An animation will always reset its &lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;current time&lt;/a&gt; when it is started. If paused, it will continue with the same current time when resumed. When an animation is stopped, it cannot be resumed, but will keep its current time (until started again). &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; will emit &lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() whenever its state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fa7c27e90979774b3a888ca02475f0f53acae3" translate="yes" xml:space="preserve">
          <source>At any point in time, &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; will be in one of four states: active, suspended, stopped, or idle. These states are specified by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. You can request a state change directly through &lt;a href=&quot;qaudioinput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#resume&quot;&gt;resume&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#reset&quot;&gt;reset&lt;/a&gt;(), and &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(). The current state is reported by &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;(). &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will also signal you when the state changes (&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3ff16dcc213816d038cd51ace782a20de40270" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d80312364e27da53be514c37db7c915d4f7418" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qbluetoothsocket#error&quot;&gt;error&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6ee628887c98ac2211a407c644d6029a495ab7" translate="yes" xml:space="preserve">
          <source>At any point, you can save your form by selecting the &lt;b&gt;Save From As...&lt;/b&gt; option from the &lt;b&gt;File&lt;/b&gt; menu. The UI files saved by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc778a76703643c7e9afe57573b40700efc7e170" translate="yes" xml:space="preserve">
          <source>At any time, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; has a state (returned by &lt;a href=&quot;qabstractsocket#state&quot;&gt;state&lt;/a&gt;()). The initial state is &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;. After calling &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;(), the socket first enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;. If the host is found, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt; and emits the &lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;() signal. When the connection has been established, it enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; and emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;(). If an error occurs at any stage, &lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;() is emitted. Whenever the state changes, &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() is emitted. For convenience, &lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the socket is ready for reading and writing, but note that the socket's state must be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; before reading and writing can occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b9a523686980c5115e2cd28208348628ab266c" translate="yes" xml:space="preserve">
          <source>At any time, you can create a &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt; object and call &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() on it to start a local event loop. From within the event loop, calling &lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt;() will force &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa6a58000f8024bb9abb849cd1c6bc5b90cf05f" translate="yes" xml:space="preserve">
          <source>At compile time, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac0e6dbd5badab8e273f9eada1e5d1b55cf621d" translate="yes" xml:space="preserve">
          <source>At each moment there is at most one animation that is active in the group; it is returned by &lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt;(). An empty group has no current animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48b7d2b99551d3cffcfb32f1f31b3d96a3a8ff2" translate="yes" xml:space="preserve">
          <source>At first application startup, the window gets default dimensions specified as 800x600. Notice that no default position is specified - we let the window manager handle that. Later when the window geometry changes, new values will be automatically stored to the persistent settings. The second application run will get initial values from the persistent settings, bringing the window back to the previous position and size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87807290c5074347670303aa4be4a27ce5a5a1d0" translate="yes" xml:space="preserve">
          <source>At item's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9e79d115e6810206d506e1fc484f86bd561f77" translate="yes" xml:space="preserve">
          <source>At its heart, the framegraph is a data-driven method for configuring the Qt 3D renderer. Due to its data-driven nature, we can change configuration at runtime, allow non-C++ developers or designers to change the structure of a frame, and try out new rendering approaches without having to write thousands of lines of boiler plate code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc401b782cbfc97a28d7a783971e774fd968e343" translate="yes" xml:space="preserve">
          <source>At its simplest, a view transition may just animate an item to its new position following a view operation, just as the &lt;code&gt;displaced&lt;/code&gt; transition does above, or animate some item properties, as in the &lt;code&gt;add&lt;/code&gt; transition above. Additionally, a view transition may make use of the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; attached property to customize animation behavior for different items. Following are some examples of how this can be achieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19c22dff9d4cde9bd2628e6c3d56d2072a7deaf" translate="yes" xml:space="preserve">
          <source>At least one QML file whose name matches a control (for example, &lt;code&gt;Button.qml&lt;/code&gt;) must exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796169bf85aac57a7e0921080487ae6d4a8e086f" translate="yes" xml:space="preserve">
          <source>At minimum the layout directory must contain the files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9d2902edfc287dd7802b4148dde59e40d35ee7" translate="yes" xml:space="preserve">
          <source>At present the &lt;a href=&quot;qplacecontent&quot;&gt;QPlaceContent&lt;/a&gt; class is not extensible by 3rd parties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037e15c7a413b9bf23ac5206f5480d34b46afe7b" translate="yes" xml:space="preserve">
          <source>At present, the Qt 3D Animation module provides the following blend tree node types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab91ac60011e39d43815f16993dec5b68f1f3bc8" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt; can overload this base render state by specifying its own &lt;a href=&quot;qml-renderstate&quot;&gt;RenderState&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4332a429b68b0ac4a41c160e240519e6859b47ee" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt; can overload this base render state by specifying its own &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a81c3421b400f49f9c78d8711420f357d5fc98" translate="yes" xml:space="preserve">
          <source>At runtime, a Qt application recognizes many environment variables, some of which can be helpful for debugging:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab9d4507e7863cf2519c0cf5e644680a577be4f" translate="yes" xml:space="preserve">
          <source>At some point later on, the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;transactionReady&lt;/a&gt;() signal will be emitted for the purchase. Check &lt;a href=&quot;qinapptransaction#status-prop&quot;&gt;QInAppTransaction::status&lt;/a&gt;() to see if the purchase was completed successfully. If it was, then you must save the information about the purchase in a safe way, so that the application can restore it later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52512e5061a593208dea53cfb23d89cd05ed9e4" translate="yes" xml:space="preserve">
          <source>At some point, the user will activate a user interface component (perhaps using a particular key) where they can choose from a number of strings matching the text they have typed so far. The user can either confirm their choice cancel the input; in either case the input context will be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ba8cc9ccc86603a2ddc31bcd57b68d34d2c1f5" translate="yes" xml:space="preserve">
          <source>At that point &lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply::locations&lt;/a&gt;() can be used to retrieve the results, which will consist of a list of &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; objects. These objects represent a combination of coordinate and address data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ccae4b2a43fca0f3cdca72e9f94bb174cad42f" translate="yes" xml:space="preserve">
          <source>At the C++ implementation level, using a Qt module makes its headers available for inclusion and causes it to be linked to the binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d90be54974f6606a3a303e548ddcfeb04f3394e" translate="yes" xml:space="preserve">
          <source>At the beginining of the header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed66d562fe594c7221f115eb44a11475ad2f6ea" translate="yes" xml:space="preserve">
          <source>At the end of a frame we can retrieve the results by calling &lt;a href=&quot;qopengltimerquery#waitForResult&quot;&gt;waitForResult&lt;/a&gt;(). As this function's name implies, it blocks CPU execution until OpenGL notifies that the timer query result is available. To avoid blocking, you can check if the query result is available by calling &lt;a href=&quot;qopengltimerquery#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;(). Note that modern GPUs are deeply pipelined and query results may not become available for between 1-5 frames after they were issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3080d39bec8e79e78fb1923604be5fe6c466e9ba" translate="yes" xml:space="preserve">
          <source>At the end of the header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e8c90ac99703039b88fbc5e0a1beabaa46fbf6" translate="yes" xml:space="preserve">
          <source>At the same time, attention must be paid to the number of Shape elements in the scene, in particular when using this special accelerated approach for &lt;code&gt;GL_NV_path_rendering&lt;/code&gt;. The way such a Shape item is represented in the scene graph is different from an ordinary geometry-based item, and incurs a certain cost when it comes to OpenGL state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c10f42bbe4080eec805fef67f19baa1dacce0f8" translate="yes" xml:space="preserve">
          <source>At the simplest level, text documents are made up of a string of characters, marked up in some way to represent the block structure of the text within the document. &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; provides a cursor-based interface that allows the contents of a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; to be manipulated at the character level. Since the elements (blocks, frames, tables, etc.) are also encoded in the character stream, the document structure can itself be changed by the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcec02d3d4c2b8f2a55dfb0ebaad329e7acdf90" translate="yes" xml:space="preserve">
          <source>At the time of release (the mouse button is released or the finger is lifted), if the event point is outside the bounds of the &lt;code&gt;parent&lt;/code&gt; Item, a tap gesture is not recognized. This corresponds to typical behavior for button widgets: you can cancel a click by dragging outside the button, and you can also change your mind by dragging back inside the button before release. Note that it's necessary for &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; take the exclusive grab on press and retain it until release in order to detect this gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8140bc4ff5189ac6bc25fdb8ce759b5bdba0ac67" translate="yes" xml:space="preserve">
          <source>At the time this table was generated, there were six links from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; to &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;. The first column of each table entry contains a link to some link in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;. The link text as it appears in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; is shown. The second and third columns contain the source file name and line number for where qdoc saw the link in a qdoc comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73bf5286ff35474a74c26035c042d81945e9ffc" translate="yes" xml:space="preserve">
          <source>At this point there are two GeoServices plugins packaged with Qt. They are accessible using their provider names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff72b9f558b4e97e80f24407ec25f32bf5ed9e7" translate="yes" xml:space="preserve">
          <source>At this point, if we examined the &lt;code&gt;displaced&lt;/code&gt; transition that was run for the bottom displaced item (&quot;Item 0&quot;), the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; property values provided to this transition would be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850acecc5742a41db5fb216f29a36550106d1ff8" translate="yes" xml:space="preserve">
          <source>At this point, neither sorting nor filtering is enabled; the original data is displayed in the view. Any changes made through the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; are applied to the original model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb194f1c0f8ecd9fb1f220a29550b7e23cebb5d" translate="yes" xml:space="preserve">
          <source>At this time, drag-and-drop is not yet supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3233cbdf60e91444617d3f6d1b887957b7eaf196" translate="yes" xml:space="preserve">
          <source>Atlas based textures are created by passing &lt;a href=&quot;qquickwindow#CreateTextureOption-enum&quot;&gt;QQuickWindow::TextureCanUseAtlas&lt;/a&gt; to the &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow::createTextureFromImage&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2894d7d5816986441ce1688077b4b58aca9579" translate="yes" xml:space="preserve">
          <source>Atomic API is useful when you application needs to blend content into overlays keeping all the updates within the same vsync. Still not all devices support this API and it could be unavailable on some older devices. KMS backend will by default use the legacy API, but you can enable the DRM atomic API with &lt;code&gt;QT_QPA_EGLFS_KMS_ATOMIC&lt;/code&gt; environment variable set to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a967c27abdae3c54a1ba2eb46dfef28e4669c220" translate="yes" xml:space="preserve">
          <source>Atomic add-and-fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aca8c389398c9bb150cb22baffa337508a5b375" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4b593a63bdacca7e88ddaa3d460f979d52a59e" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-and.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc61104378ed6ca8bef017107abe35e79e1d3418" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-or.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7830879c704a38b11e5ddd086e77ccef500b74f" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a0ea35af869894686b5620753669846139975f" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-sub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677000d5ba7c628139cf77380e75ab8c46f01e22" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-xor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a71a9c1dd30ce797dff76bda85d82b65e9c8a2" translate="yes" xml:space="preserve">
          <source>Atomic or-and-fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c154d6a6458aeda8686536a6877b2d6b01a013" translate="yes" xml:space="preserve">
          <source>Atomic sub-and-fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99da09e996e10b97b93284055241904724848e3b" translate="yes" xml:space="preserve">
          <source>Atomic test-and-set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da13c4e269f632fb37b75640d8734403073f8480" translate="yes" xml:space="preserve">
          <source>Atomic xor-and-fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa451b096cba27c2fae11f428437f2c14de039c" translate="yes" xml:space="preserve">
          <source>Atomically decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the new value is non-zero, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dedf8ab3c76603bbc27d23afca2d137d8064ca9" translate="yes" xml:space="preserve">
          <source>Atomically increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the new value is non-zero, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dd8dbf7bb7ee2579be58bf9d204dafabeb1439" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using a sequentially consistent memory ordering if possible; or &quot;Acquire&quot; ordering if not. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69653e3e82a9d9b720b3e7e9b153a85f9a1e4c06" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using relaxed memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0d1fd4d5c9735d46867c2448de36a6bc511cb0" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using the &quot;Acquire&quot; memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7081ad41a53c8af225230c522a5266c56092e5e" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; using relaxed memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130b6d95050e9b7c2405561c3e5d460bb604614b" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; using the &quot;Acquire&quot; memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb94368cb5719416863f8c2367679c67c6ea331" translate="yes" xml:space="preserve">
          <source>Atomically post-decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the old value of this atomic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793812097d2bfb8c79328c7076cfcdc46657e936" translate="yes" xml:space="preserve">
          <source>Atomically post-increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the old value of this atomic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69ff82cc5d52f41982a8e0e67bfcb57d12a14c4" translate="yes" xml:space="preserve">
          <source>Atomically pre-decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the new value of this atomic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3954772cbeafee10706db508a27dcf1f5609cfe8" translate="yes" xml:space="preserve">
          <source>Atomically pre-increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the new value of this atomic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64206ad6e584ead7f08fdbf0296423b524ea37a4" translate="yes" xml:space="preserve">
          <source>Atomically stores the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28e1e1cc0c7d44ae7312f7a38a54f527c3baed2" translate="yes" xml:space="preserve">
          <source>Atomically stores the other value into this atomic type using a sequentially consistent memory ordering if possible; or &quot;Release&quot; ordering if not. This function returns a reference to this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd0cbd81dee9dcd227285a4fb456261af24ea4" translate="yes" xml:space="preserve">
          <source>Atomics</source>
          <target state="translated">Atomics</target>
        </trans-unit>
        <trans-unit id="5207af8927557bdcee58799743343132b7a7e7d5" translate="yes" xml:space="preserve">
          <source>Attach a &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92e2f9fb2a11868b1807469619b32fb101a2841" translate="yes" xml:space="preserve">
          <source>Attach a &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d028067fa5f7a29797abf3e4197287917862fb4d" translate="yes" xml:space="preserve">
          <source>Attach the resulting type library as a binary resource to the server binary (again using the &lt;a href=&quot;activeqt-idc&quot;&gt;idc&lt;/a&gt; tool)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c298cc70af343c92bf071f6572d614dfd62dfa08" translate="yes" xml:space="preserve">
          <source>Attached ApplicationWindow Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4fd54e1f2cc2bae6fec6c2a9e32fae40754136" translate="yes" xml:space="preserve">
          <source>Attached Method Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150bd1743209960f075ac0a1c57b68376f08c65c" translate="yes" xml:space="preserve">
          <source>Attached Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faba1cfe32a7f1b852cba99a63d5fe50092912f" translate="yes" xml:space="preserve">
          <source>Attached Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c902d12435291598f929f48b279385ca0a3b0d" translate="yes" xml:space="preserve">
          <source>Attached Properties and Attached Signal Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcbfa74913c6275568001ba926cb2704e3623dd" translate="yes" xml:space="preserve">
          <source>Attached Property Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8b9dfdee571ec3e9f3e3ba64654906472d2254" translate="yes" xml:space="preserve">
          <source>Attached Signal Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902d56ee4a25e198b3af081354e87bcf103345dd" translate="yes" xml:space="preserve">
          <source>Attached Signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf29ce1d3e96304b4cb38421631b2162f2216d9" translate="yes" xml:space="preserve">
          <source>Attached Tool Tips</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388c36c1ff81f7e8e3b22aeb32eba62b658c2e70" translate="yes" xml:space="preserve">
          <source>Attached properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37afe77cd72cd5e6db95e24e548bb2b97dbc77ed" translate="yes" xml:space="preserve">
          <source>Attached signal handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9992fec490f826b162fce6589018884313693832" translate="yes" xml:space="preserve">
          <source>Attached signal handlers allow objects to be notified of particular signals that are significant to each individual object. If there was no &lt;code&gt;Component.onCompleted&lt;/code&gt; attached signal handler, for example, an object could not receive this notification without registering for some special signal from some special object. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303a08095e165219a3a523d9c8272527e650f836" translate="yes" xml:space="preserve">
          <source>Attaches the axis specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6147383a9edc19ffbb89414d19965ec36061611" translate="yes" xml:space="preserve">
          <source>Attaches the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca7c853d5101c3e585dc0c3c844b74cc739c298" translate="yes" xml:space="preserve">
          <source>Attaches the legend to a chart. The chart may adjust the layout of the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f743a992bb1f15351f352fa10936d767f1629c6" translate="yes" xml:space="preserve">
          <source>Attaches the toolbar to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9d9b178174db92c91a2b908169bad8da80b5b7" translate="yes" xml:space="preserve">
          <source>Attaches to the media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19df2ced91da2b546054955930b5d1c8b0dfa81d" translate="yes" xml:space="preserve">
          <source>Attaching ScrollBar to a Flickable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6a70298d0609d1a540e191745cea169e5e464d" translate="yes" xml:space="preserve">
          <source>Attaching ScrollIndicator to a Flickable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dead67aed25f8fd7485d49ecb1f92385f2f1b68" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; is attached to a media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; to the &lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab6ec34b5c35567c9a11420e8c2fe1d4d8f4d71" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; is attached to media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; in its constructor, and detached by destroying the &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44226621a09bb5065e011430e6963bfb12de805f" translate="yes" xml:space="preserve">
          <source>Attaching the type library corrupted the server binary. This is a bug in Windows and happens only with release builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a56249e5cff48f561d2d725143f1fc2eb3228c" translate="yes" xml:space="preserve">
          <source>Attachment</source>
          <target state="translated">Attachment</target>
        </trans-unit>
        <trans-unit id="c03f026fdabc6f9b4fe12426c35aa115f291994c" translate="yes" xml:space="preserve">
          <source>Attempt to decode as much as possible. For individual components of the URL, this decodes every percent encoding sequence, including control characters (U+0000 to U+001F) and UTF-8 sequences found in percent-encoded form. Use of this mode may cause data loss, see below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbd30766494fc0c81dd3665e03daf07ea2f5b9a" translate="yes" xml:space="preserve">
          <source>Attempt to read or write from socket returned an error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca8deb77959d3489a3621ae5b4c85fb80a51a31" translate="yes" xml:space="preserve">
          <source>Attempting to change the current value to one outside the minimum-maximum range has no effect on the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc50e04abe6136b0423ada277c77dfdbbdae74f" translate="yes" xml:space="preserve">
          <source>Attempting to declare two methods or signals with the same name in the same type block is an error. However, a new method may reuse the name of an existing method on the type. (This should be done with caution, as the existing method may be hidden and become inaccessible.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d751bf4cf79d2324b7c47ae29a36cee6fba89adb" translate="yes" xml:space="preserve">
          <source>Attempting to declare two signals or methods with the same name in the same type block is an error. However, a new signal may reuse the name of an existing signal on the type. (This should be done with caution, as the existing signal may be hidden and become inaccessible.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c494aed263b98d8bd4e561a02eef380289d346c8" translate="yes" xml:space="preserve">
          <source>Attempting to set the alignment to an illegal flag combination does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e83912432691a95cd6de5d400fbd6735883fb9" translate="yes" xml:space="preserve">
          <source>Attempting to unlock a lock that is not locked is an error, and will result in program termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cb55c77af0f0fee8442a7bfdc705c6c9fa98ef" translate="yes" xml:space="preserve">
          <source>Attempts to add a new title record with title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49a83143477bbe2aaa9b15d293b1789f54894b6" translate="yes" xml:space="preserve">
          <source>Attempts to add a title record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b78f9bfc8e0845fc6d273185083fbc75433f18" translate="yes" xml:space="preserve">
          <source>Attempts to allocate memory for at least</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41717baad4c663f1fc92137bc64da06ff1152682" translate="yes" xml:space="preserve">
          <source>Attempts to attach the process to the shared memory segment identified by the key that was passed to the constructor or to a call to &lt;a href=&quot;qsharedmemory#setKey&quot;&gt;setKey&lt;/a&gt;() or &lt;a href=&quot;qsharedmemory#setNativeKey&quot;&gt;setNativeKey&lt;/a&gt;(). The access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64511e88279ff80ccaed16800d807495ab3d55ba" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will enter &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the &lt;a href=&quot;qbluetoothsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14c101853294961a9915ce2a73be7191c42b775" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will enter &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd1c41157c1d345e418d08f0ddd434ac79fa257" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written, &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; will enter &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the disconnectedFromServer() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9916f61f2e95462623791d2de738f69eec08995b" translate="yes" xml:space="preserve">
          <source>Attempts to connect to the service described by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bd2a20888118107b44b77e054ae21e0dc25925" translate="yes" xml:space="preserve">
          <source>Attempts to create a texture view onto this texture. A texture view is somewhat analogous to a view in SQL in that it presents a restricted or reinterpreted view of the original data. Texture views do not allocate any more server-side storage, insted relying on the storage buffer of the source texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5135f0e103c8d9400561f2d503910a4bc82cff5" translate="yes" xml:space="preserve">
          <source>Attempts to create the OpenGL context with the current configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79e8ad7521f57df617cbd803646947bba56a32b" translate="yes" xml:space="preserve">
          <source>Attempts to create the lock file. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another process (or another thread) has created the lock file already, this function will wait for at most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1007b5514cb8c7a3d4bf7da1cf7389f0861c2fc5" translate="yes" xml:space="preserve">
          <source>Attempts to delete this object's property of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decebf66e3192ac44c25be7fc03e4031b12d88d2" translate="yes" xml:space="preserve">
          <source>Attempts to demarshall the contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e933c7654c609a16b70a849f0259c88d1f226b37" translate="yes" xml:space="preserve">
          <source>Attempts to evaluate the query and returns the results in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93aafd2c488fbd4f7028d8928d462f6f573c83f" translate="yes" xml:space="preserve">
          <source>Attempts to find a match backwards in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccea7bbd5134887c359bf2454e1a7bdaf25db03e" translate="yes" xml:space="preserve">
          <source>Attempts to find a match in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d399c1dfc647f9aec0390f27281e7ea7daa7a29" translate="yes" xml:space="preserve">
          <source>Attempts to forcefully remove an existing lock file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce1b4b5c465ce608a87c1b2bd26a5811a578030" translate="yes" xml:space="preserve">
          <source>Attempts to get the current position and emit &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated&lt;/a&gt;() with this information. If the current position cannot be found within the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d134c0b9da77afde32ce31bce2c2918299f81a4" translate="yes" xml:space="preserve">
          <source>Attempts to get the current satellite information and emit &lt;a href=&quot;qgeosatelliteinfosource#satellitesInViewUpdated&quot;&gt;satellitesInViewUpdated&lt;/a&gt;() and &lt;a href=&quot;qgeosatelliteinfosource#satellitesInUseUpdated&quot;&gt;satellitesInUseUpdated&lt;/a&gt;() with this information. If the current satellite information cannot be found within the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c661d770bd92fabd6239ee47e0bdabc00a179fe5" translate="yes" xml:space="preserve">
          <source>Attempts to lock for reading. If the lock was obtained, this function returns &lt;code&gt;true&lt;/code&gt;, otherwise it returns &lt;code&gt;false&lt;/code&gt; instead of waiting for the lock to become available, i.e. it does not block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a88fb80382d1217416d7e840e918cf20b354b6e" translate="yes" xml:space="preserve">
          <source>Attempts to lock for reading. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked for writing, this function will wait for at most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2470f484acf6d1012c9c2ef2b5aa8b479942c2" translate="yes" xml:space="preserve">
          <source>Attempts to lock for writing. If the lock was obtained, this function returns &lt;code&gt;true&lt;/code&gt;; otherwise, it returns &lt;code&gt;false&lt;/code&gt; immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d129c86a278c6f36b5ce06526519d0734d9305e" translate="yes" xml:space="preserve">
          <source>Attempts to lock for writing. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked for reading or writing, this function will wait for at most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9851042db5ee3d962c0e65a9574ee566e3b802f8" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54242a9aaaa9390b8315d197dfc5e23adc00c96" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait at least until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103992881af09741dd2a74bdd8c2881ef04d0de6" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait for at least</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0e3bf6432ce7cc59a4892d1e1402cde84f85c9" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait for at most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cb921a9773a0e3cb28330bf381ade1b5f5db2d" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e61f7fb0798c2e70b54a7fb64150be665b1a4d" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to &lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt;(). &lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt;() must be called before you open the connection. Alternatively you can use connectToServer(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;name, &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1467e681088cb474f58c2843b2c55e1b6c057e5" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to the service identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a29c67e1524a0c689e5acb8ba6c9a244b1553ed" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9e3f8d7f41891e3dd9b073506b0acef887099f" translate="yes" xml:space="preserve">
          <source>Attempts to match the regular expression against the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199c89b542aa478a5fa190747ea0f479710986f8" translate="yes" xml:space="preserve">
          <source>Attempts to merge this command with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8cb926a2a676e8deb6f8891853236af8c54288" translate="yes" xml:space="preserve">
          <source>Attempts to open the specified &lt;code&gt;target&lt;/code&gt; url in an external application, based on the user's desktop preferences. Returns true if it succeeds, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b71a6b8e24475e656383f1eb601022febdb5466" translate="yes" xml:space="preserve">
          <source>Attempts to perform a global match of the regular expression against the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e19969ea4102dfc32af2b95d7cfe00304c63846" translate="yes" xml:space="preserve">
          <source>Attempts to read a buffer from the decoder, without blocking. Returns invalid buffer if there are no decoded buffers available, or on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670d36fb9755e6a0b702b6f1e33679b28e4e6152" translate="yes" xml:space="preserve">
          <source>Attempts to register the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddf114bca27d7c29aa865e757e1a437c1e25fe6" translate="yes" xml:space="preserve">
          <source>Attempts to register the requested service, but do not try to replace it if another application already has it registered. Instead, simply put this application in queue, until it is given up. The &lt;a href=&quot;qdbusconnectioninterface#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt;() signal will be emitted when that happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b74e4114e69652b3992fc01f39f461b14f78e5" translate="yes" xml:space="preserve">
          <source>Attempts to remove a title record with locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cbc15d0be68a7a78605443ef53d19a8213c78a" translate="yes" xml:space="preserve">
          <source>Attempts to remove the icon record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb9a4d74dba9e00fa899b614fac66cc8f2f9bfe" translate="yes" xml:space="preserve">
          <source>Attempts to remove the icon record with type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb0d400d4a26ed57afecebd971943ed09efeb83" translate="yes" xml:space="preserve">
          <source>Attempts to remove the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12126a205886d0344e790e10215c18688e51e51f" translate="yes" xml:space="preserve">
          <source>Attempts to remove the title record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c33a64cf188b3a0d62ad7fc2529abc93b373402" translate="yes" xml:space="preserve">
          <source>Attempts to reserve a thread to run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f145a00700926a58301a1d1bfc05bfa6c811f9" translate="yes" xml:space="preserve">
          <source>Attempts to terminate the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df234e38b53a6b85ab548b0f180e7f029345963" translate="yes" xml:space="preserve">
          <source>Attenuation factor is calculated as below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ad0179f653d81ba82ebd5e6c304d2ba9661515" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce89ccd0582bca1e1fc517efde91f8aeb75cf3e7" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d22061e6bb72bae9090fae777f3aea070b6641" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.end</source>
          <target state="translated">AttenuationModelInverse.end</target>
        </trans-unit>
        <trans-unit id="266a29a9f12223908aaa4bbd5935ee21a3f41418" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.name</source>
          <target state="translated">AttenuationModelInverse.name</target>
        </trans-unit>
        <trans-unit id="d86aea538c0ada6639b238773dead9a47b8fe335" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.rolloff</source>
          <target state="translated">AttenuationModelInverse.rolloff</target>
        </trans-unit>
        <trans-unit id="6bb671e72bb2861d1af041541e0b48c8935c54b8" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.start</source>
          <target state="translated">AttenuationModelInverse.start</target>
        </trans-unit>
        <trans-unit id="b05e207d203b95883d220de8646e6c56a3d90057" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f353471e9c991e94cc0fae75ecd0e90354af2e" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b657d75de2579616f22d7ba172386048e8c8bd" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.end</source>
          <target state="translated">AttenuationModelLinear.end</target>
        </trans-unit>
        <trans-unit id="42f4c1e185f05e010f031ba39647493e2323fa4f" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.name</source>
          <target state="translated">AttenuationModelLinear.name</target>
        </trans-unit>
        <trans-unit id="1806984104313153d03add27475b3c0f86426d25" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.start</source>
          <target state="translated">AttenuationModelLinear.start</target>
        </trans-unit>
        <trans-unit id="30f3de5d0f4d3d3444d01af4ba6d6b47140da0b9" translate="yes" xml:space="preserve">
          <source>Attibute changes when any other service attribute is added, deleted or modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296f046445dbe582b91f5aa136868365544ef00c" translate="yes" xml:space="preserve">
          <source>Attractor (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6424677894dc22d22b25d8d17084b49e81b998ac" translate="yes" xml:space="preserve">
          <source>Attractor QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e91bdd60c4c6d50a3df710ed09f06a581d07c9" translate="yes" xml:space="preserve">
          <source>Attractor.Acceleration</source>
          <target state="translated">Attractor.Acceleration</target>
        </trans-unit>
        <trans-unit id="3450f62291cb4940a34a0eb2583dda39ee0a8006" translate="yes" xml:space="preserve">
          <source>Attractor.Constant</source>
          <target state="translated">Attractor.Constant</target>
        </trans-unit>
        <trans-unit id="523c31ea9a46e9394e0c97eca30413df375af83b" translate="yes" xml:space="preserve">
          <source>Attractor.InverseLinear</source>
          <target state="translated">Attractor.InverseLinear</target>
        </trans-unit>
        <trans-unit id="550f4308046218c9d3997b7a1095de56a6bef398" translate="yes" xml:space="preserve">
          <source>Attractor.InverseQuadratic</source>
          <target state="translated">Attractor.InverseQuadratic</target>
        </trans-unit>
        <trans-unit id="eef61e37501774843c8a62fd051143c6aaee899b" translate="yes" xml:space="preserve">
          <source>Attractor.Linear</source>
          <target state="translated">Attractor.Linear</target>
        </trans-unit>
        <trans-unit id="b769d90573cbe30f194df15d878d14f75f263699" translate="yes" xml:space="preserve">
          <source>Attractor.Position</source>
          <target state="translated">Attractor.Position</target>
        </trans-unit>
        <trans-unit id="299bf07566b49ce0997d38501136b507e8c16f6e" translate="yes" xml:space="preserve">
          <source>Attractor.Quadratic</source>
          <target state="translated">Attractor.Quadratic</target>
        </trans-unit>
        <trans-unit id="427cc833289066553dd79e0e28d4749ca5bc4070" translate="yes" xml:space="preserve">
          <source>Attractor.Velocity</source>
          <target state="translated">Attractor.Velocity</target>
        </trans-unit>
        <trans-unit id="4c87b9b41fb26d8f52a9706ac5181e6eb8b6b77f" translate="yes" xml:space="preserve">
          <source>Attractor.affectedParameter</source>
          <target state="translated">Attractor.affectedParameter</target>
        </trans-unit>
        <trans-unit id="7a1b7d6854a28d0edaa4635ca87a1f0dade8f683" translate="yes" xml:space="preserve">
          <source>Attractor.proportionalToDistance</source>
          <target state="translated">Attractor.proportionalToDistance</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="ccc5cf4a1d9e54a958908f4ae2479773cc555b20" translate="yes" xml:space="preserve">
          <source>Attribute (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe462099fbeb57d289ce57cd51b118b84d30152b" translate="yes" xml:space="preserve">
          <source>Attribute Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ea40b4d4d812c5a6cc40ab6740ed2f0ffffecf" translate="yes" xml:space="preserve">
          <source>Attribute Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1ec77d2af9d172537986d4c44c207dd6b101fe" translate="yes" xml:space="preserve">
          <source>Attribute Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b5ca640bea37921e1d4fcc6cfcf47b830e2c76" translate="yes" xml:space="preserve">
          <source>Attribute QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75fbc526e507c536f15818a635fabc424d8bb9f" translate="yes" xml:space="preserve">
          <source>Attribute Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c934b9aa0ce3e9181f546dd3f2f1c3c3122aef7f" translate="yes" xml:space="preserve">
          <source>Attribute codes for &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; and &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0acd5562d8332a5210e9cd9fd1780c7a7e346ef" translate="yes" xml:space="preserve">
          <source>Attribute codes for the &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; and &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f836508c2fb47e8d7e608a9c9a617b59d23ac7a6" translate="yes" xml:space="preserve">
          <source>Attribute protocol UUID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdefcbfbf5c315c26fce867e5c029439ea81fd1" translate="yes" xml:space="preserve">
          <source>Attribute::Attribute(&lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;AttributeType&lt;/a&gt;</source>
          <target state="translated">Attribute::Attribute(&lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;AttributeType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbf89753a05176fba5ab45059f847ee3b49ce26" translate="yes" xml:space="preserve">
          <source>Attribute::create()</source>
          <target state="translated">Attribute::create()</target>
        </trans-unit>
        <trans-unit id="4ec68433220a996a291d7abae73f2f65290d791a" translate="yes" xml:space="preserve">
          <source>Attribute::createWithAttributeType()</source>
          <target state="translated">Attribute::createWithAttributeType()</target>
        </trans-unit>
        <trans-unit id="b75a077312c8345d35851cf8e5f1bd3719959ae8" translate="yes" xml:space="preserve">
          <source>AttributeSet Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a918eacf77c88cdbb1cc9b8fa49436644e5a6fc" translate="yes" xml:space="preserve">
          <source>Attributes are extra meta-data that are used to control the behavior of the request and to pass further information from the reply back to the application. Attributes are also extensible, allowing custom implementations to pass custom values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c81d1b952a40253bd4ee2fbac757715587dc33f" translate="yes" xml:space="preserve">
          <source>Attributes are returned by a &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; in &lt;a href=&quot;qxmlstreamreader#attributes&quot;&gt;attributes()&lt;/a&gt; when the reader reports a &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;start element&lt;/a&gt;. The class can also be used with a &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; as an argument to &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8f36e82eac647fe22f284d2df1a924c673bc26" translate="yes" xml:space="preserve">
          <source>Attributes for which &lt;a href=&quot;qdomattr#specified&quot;&gt;QDomAttr::specified&lt;/a&gt;() is true are also imported, other attributes are not imported. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c35b055942db90e595b2a9f7832e56c4fefa4a1" translate="yes" xml:space="preserve">
          <source>Attributes in Object Declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ae1ca911f09da25705c803e802dc66807bb214" translate="yes" xml:space="preserve">
          <source>Attributes of the &lt;code&gt;&amp;lt;ui&amp;gt;&lt;/code&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0e697c5f98e73026bf71edfa6226e1708d59ff" translate="yes" xml:space="preserve">
          <source>Attributes that declare namespaces (i.e. the attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0038b89e1b24bd41bd084d172a1fb895246dfe89" translate="yes" xml:space="preserve">
          <source>Attributes which are not specifically set will not affect the font selection algorithm, and default values will be preferred instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d81396d4ea19197dfceaa774ef776332674285" translate="yes" xml:space="preserve">
          <source>Attribution</source>
          <target state="translated">Attribution</target>
        </trans-unit>
        <trans-unit id="7b647fe7f6d07531f44e887242ee0bcb549d7597" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the editorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88df49eb25d5fb6c67ccecf800b4a9109a91bfb0" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d2e726f6a53b1a760afeb7573e4972ac54b136" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the review.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdac205f5e24cb75113c4b281a2c13f08b75159" translate="yes" xml:space="preserve">
          <source>Audio</source>
          <target state="translated">Audio</target>
        </trans-unit>
        <trans-unit id="a7dc566772d0eb2736f817b9153166b4af101dc8" translate="yes" xml:space="preserve">
          <source>Audio (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7016e7c193553ab435a13fc9be640f5aeb430f7" translate="yes" xml:space="preserve">
          <source>Audio Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fef1324817460a4d153dfcd0886fabb6a0e2171" translate="yes" xml:space="preserve">
          <source>Audio QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c937bc7a554ea29bd7b4e0c8bf6151575f0600c" translate="yes" xml:space="preserve">
          <source>Audio and Video Codecs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e35f426c0bee9fdae0ab9c5ae45d32d607f51c" translate="yes" xml:space="preserve">
          <source>Audio attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6b31f833ca0369e9443bb43e9565fd9219c228" translate="yes" xml:space="preserve">
          <source>Audio capture devices, such as microphones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5c23de36b942469e47171328a4a32d1528d728" translate="yes" xml:space="preserve">
          <source>Audio data is being processed, this state is set after start() is called and while audio data is available to be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209f6075d5e8e049519ea62f2fe16d087c632489" translate="yes" xml:space="preserve">
          <source>Audio data is not being fed to the audio device at a fast enough rate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a711e89f9d57b5922003c3e2fc908c1e1dc29" translate="yes" xml:space="preserve">
          <source>Audio feedback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1426e62896abd1290f70cb3c22e0e6c78f967490" translate="yes" xml:space="preserve">
          <source>Audio output volume: from 0.0 (silent) to 1.0 (maximum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea96cac1f52cce651db3af56aec8c7df8d5888f0" translate="yes" xml:space="preserve">
          <source>Audio stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ae2bc082d57b7bce69bb7383fb22924348c87a" translate="yes" xml:space="preserve">
          <source>Audio.audioRole</source>
          <target state="translated">Audio.audioRole</target>
        </trans-unit>
        <trans-unit id="fe495e1b3a94a274d2f600645542d4ae12896ba5" translate="yes" xml:space="preserve">
          <source>Audio.autoLoad</source>
          <target state="translated">Audio.autoLoad</target>
        </trans-unit>
        <trans-unit id="3f2f5c670f017fd4f2ed0e4b7c73b32da8f82682" translate="yes" xml:space="preserve">
          <source>Audio.autoPlay</source>
          <target state="translated">Audio.autoPlay</target>
        </trans-unit>
        <trans-unit id="cef050f730d6d1ede632fdecad6d6b6c627e5ae6" translate="yes" xml:space="preserve">
          <source>Audio.availability</source>
          <target state="translated">Audio.availability</target>
        </trans-unit>
        <trans-unit id="9e1ae1731b54dbc698a38ae19e7bec41bf3105d6" translate="yes" xml:space="preserve">
          <source>Audio.bufferProgress</source>
          <target state="translated">Audio.bufferProgress</target>
        </trans-unit>
        <trans-unit id="60ff0d2426c87c4717a71a2a6fa331a300006206" translate="yes" xml:space="preserve">
          <source>Audio.customAudioRole</source>
          <target state="translated">Audio.customAudioRole</target>
        </trans-unit>
        <trans-unit id="497123a6ebc816ed877d00ecdf06af2057e8b50b" translate="yes" xml:space="preserve">
          <source>Audio.duration</source>
          <target state="translated">Audio.duration</target>
        </trans-unit>
        <trans-unit id="76d693f55f22c3a69402e1b172872fa2226e7378" translate="yes" xml:space="preserve">
          <source>Audio.error</source>
          <target state="translated">Audio.error</target>
        </trans-unit>
        <trans-unit id="bc259981484e31706e7b5b8022cb1c1b433bb42b" translate="yes" xml:space="preserve">
          <source>Audio.error()</source>
          <target state="translated">Audio.error()</target>
        </trans-unit>
        <trans-unit id="e3cd1d110a5e944233bd361cc299667d0428095b" translate="yes" xml:space="preserve">
          <source>Audio.errorString</source>
          <target state="translated">Audio.errorString</target>
        </trans-unit>
        <trans-unit id="6b7c7838c26f7db5bcae41a4467e0d29b2d24b45" translate="yes" xml:space="preserve">
          <source>Audio.groupmetaData.title</source>
          <target state="translated">Audio.groupmetaData.title</target>
        </trans-unit>
        <trans-unit id="a095be85d0fbec28b81dd99a7be67bca54ae5272" translate="yes" xml:space="preserve">
          <source>Audio.hasAudio</source>
          <target state="translated">Audio.hasAudio</target>
        </trans-unit>
        <trans-unit id="8cfdd4d28ac430708cfb7af93ebf904ec893e562" translate="yes" xml:space="preserve">
          <source>Audio.hasVideo</source>
          <target state="translated">Audio.hasVideo</target>
        </trans-unit>
        <trans-unit id="a9323ba5af8964166a47e5044cd402fbcf082efe" translate="yes" xml:space="preserve">
          <source>Audio.loops</source>
          <target state="translated">Audio.loops</target>
        </trans-unit>
        <trans-unit id="d8309dab28cef9b379ac0d35caf8cf310709bfde" translate="yes" xml:space="preserve">
          <source>Audio.mediaObject</source>
          <target state="translated">Audio.mediaObject</target>
        </trans-unit>
        <trans-unit id="6c3c72eee168065edaf864e46370dcb11936a4aa" translate="yes" xml:space="preserve">
          <source>Audio.muted</source>
          <target state="translated">Audio.muted</target>
        </trans-unit>
        <trans-unit id="403fcb13f7256e638d63e3715f34eccdfbb8a1fc" translate="yes" xml:space="preserve">
          <source>Audio.notifyInterval</source>
          <target state="translated">Audio.notifyInterval</target>
        </trans-unit>
        <trans-unit id="6d733b889602e22bcf797e5fe2e62acc9feb294f" translate="yes" xml:space="preserve">
          <source>Audio.pause()</source>
          <target state="translated">Audio.pause()</target>
        </trans-unit>
        <trans-unit id="91012afdd13ffc49383aba56847cd400a01a5460" translate="yes" xml:space="preserve">
          <source>Audio.paused()</source>
          <target state="translated">Audio.paused()</target>
        </trans-unit>
        <trans-unit id="663d9b04672f8f13b360ed542e814ab48c1a4a8b" translate="yes" xml:space="preserve">
          <source>Audio.play()</source>
          <target state="translated">Audio.play()</target>
        </trans-unit>
        <trans-unit id="62eb1265d0c18b526c2ffc28c5654f74bc4e1c2e" translate="yes" xml:space="preserve">
          <source>Audio.playbackRate</source>
          <target state="translated">Audio.playbackRate</target>
        </trans-unit>
        <trans-unit id="c6367e644e0d158e8217b287787b424fef5e0859" translate="yes" xml:space="preserve">
          <source>Audio.playbackState</source>
          <target state="translated">Audio.playbackState</target>
        </trans-unit>
        <trans-unit id="933fda413ba480969e06092392531ecec79ca63e" translate="yes" xml:space="preserve">
          <source>Audio.playbackStateChanged()</source>
          <target state="translated">Audio.playbackStateChanged()</target>
        </trans-unit>
        <trans-unit id="e468eecfbee118d6ddb238a67cdc81c48ccf43d9" translate="yes" xml:space="preserve">
          <source>Audio.playing()</source>
          <target state="translated">Audio.playing()</target>
        </trans-unit>
        <trans-unit id="332e525e4e361867a2b8e9ec7cfc3af8feac3419" translate="yes" xml:space="preserve">
          <source>Audio.playlist</source>
          <target state="translated">Audio.playlist</target>
        </trans-unit>
        <trans-unit id="9400c6af650d1dc9c95fcb3e6b57ebb6e3a56d6d" translate="yes" xml:space="preserve">
          <source>Audio.position</source>
          <target state="translated">Audio.position</target>
        </trans-unit>
        <trans-unit id="f66e6ee132fc5015582532632195fd3024f0399a" translate="yes" xml:space="preserve">
          <source>Audio.seek()</source>
          <target state="translated">Audio.seek()</target>
        </trans-unit>
        <trans-unit id="8b58755de12aed29183019d66f70741e14becd26" translate="yes" xml:space="preserve">
          <source>Audio.seekable</source>
          <target state="translated">Audio.seekable</target>
        </trans-unit>
        <trans-unit id="ca14124357a8b3426cba1d9db09bc952f22423ef" translate="yes" xml:space="preserve">
          <source>Audio.source</source>
          <target state="translated">Audio.source</target>
        </trans-unit>
        <trans-unit id="87c7adf361330f5648c3d9c262f2a66ba704665a" translate="yes" xml:space="preserve">
          <source>Audio.status</source>
          <target state="translated">Audio.status</target>
        </trans-unit>
        <trans-unit id="4b8f1b593a1ab764714704ba9ec2fc02d41ab53b" translate="yes" xml:space="preserve">
          <source>Audio.stop()</source>
          <target state="translated">Audio.stop()</target>
        </trans-unit>
        <trans-unit id="afc00b0e6ee90a6c57546caebd257bf586bca56e" translate="yes" xml:space="preserve">
          <source>Audio.stopped()</source>
          <target state="translated">Audio.stopped()</target>
        </trans-unit>
        <trans-unit id="3406df839d5c55d297ef73c7a109cd1c89111ccb" translate="yes" xml:space="preserve">
          <source>Audio.supportedAudioRoles()</source>
          <target state="translated">Audio.supportedAudioRoles()</target>
        </trans-unit>
        <trans-unit id="8f72de47027e6e994034d29fa1b976deb5f08795" translate="yes" xml:space="preserve">
          <source>Audio.volume</source>
          <target state="translated">Audio.volume</target>
        </trans-unit>
        <trans-unit id="5decd06bf8e616e1879544fe44bf97af3fa1e134" translate="yes" xml:space="preserve">
          <source>Audio/Video Control Transport Protocol UUID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c372d9c594ee32457e409f2794853dcbb973339e" translate="yes" xml:space="preserve">
          <source>Audio/Video Distribution Transport Protocol UUID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0b001b39efb0867dcc0e264a782b0249a2b04d" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile (AVRCP) UUID (service &amp;amp; profile)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d1e040e6627e4e6ac4cb12a81a24bee1497d4d" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile (AVRCP) UUID (service)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1beb28de9f28bc0356cc58a5545e34f4e529e6" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile UUID (service)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f161ae61c892d2ea0241e169d612b03d8caeae97" translate="yes" xml:space="preserve">
          <source>AudioBitRate</source>
          <target state="translated">AudioBitRate</target>
        </trans-unit>
        <trans-unit id="7543bfd2e6a4581eaefe18f4555e78df03b4909d" translate="yes" xml:space="preserve">
          <source>AudioCategory (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82123f9c1c5dcac17b93eb442519acb520a6eda" translate="yes" xml:space="preserve">
          <source>AudioCategory QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75f7c37be399131fc95476f6c3840f3be22beef" translate="yes" xml:space="preserve">
          <source>AudioCategory.name</source>
          <target state="translated">AudioCategory.name</target>
        </trans-unit>
        <trans-unit id="edf389023a74b61a6a8c0653c41377765b2b1f3f" translate="yes" xml:space="preserve">
          <source>AudioCategory.pause()</source>
          <target state="translated">AudioCategory.pause()</target>
        </trans-unit>
        <trans-unit id="58d0406145cad48cf9621f31805e3dd1c985670d" translate="yes" xml:space="preserve">
          <source>AudioCategory.stop()</source>
          <target state="translated">AudioCategory.stop()</target>
        </trans-unit>
        <trans-unit id="a7ad9f381c72e09926174fc7c3536f212c18e3da" translate="yes" xml:space="preserve">
          <source>AudioCategory.volume</source>
          <target state="translated">AudioCategory.volume</target>
        </trans-unit>
        <trans-unit id="61272d0a3123930b8bb89226efea6caebd1af833" translate="yes" xml:space="preserve">
          <source>AudioCodec</source>
          <target state="translated">AudioCodec</target>
        </trans-unit>
        <trans-unit id="0eff2798ed4add3fdd44dd8dee04ae036c6ce927" translate="yes" xml:space="preserve">
          <source>AudioEngine (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd68fc35ce487de94c1e48720e8a7543a05501c" translate="yes" xml:space="preserve">
          <source>AudioEngine QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc3dd7e6cf5ffe0c5e848c0962f82a9bf2c05bb" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAttenuationModel()</source>
          <target state="translated">AudioEngine.addAttenuationModel()</target>
        </trans-unit>
        <trans-unit id="ecda478c8cbbf8acda4ef76c3541c2515967f1c6" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAudioCategory()</source>
          <target state="translated">AudioEngine.addAudioCategory()</target>
        </trans-unit>
        <trans-unit id="b3ed0854576d78bab7cd09ee7377cca3011b9953" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAudioSample()</source>
          <target state="translated">AudioEngine.addAudioSample()</target>
        </trans-unit>
        <trans-unit id="086a2aa1326321e50fee5e7235632c6ec3ad0259" translate="yes" xml:space="preserve">
          <source>AudioEngine.addSound()</source>
          <target state="translated">AudioEngine.addSound()</target>
        </trans-unit>
        <trans-unit id="6809e8476cc16282d512e31445be24933dd4e3af" translate="yes" xml:space="preserve">
          <source>AudioEngine.categories</source>
          <target state="translated">AudioEngine.categories</target>
        </trans-unit>
        <trans-unit id="144c87694d48f04dddbc7e3dc799b96b687f655a" translate="yes" xml:space="preserve">
          <source>AudioEngine.dopplerFactor</source>
          <target state="translated">AudioEngine.dopplerFactor</target>
        </trans-unit>
        <trans-unit id="94c9ac9a2b28948bf88cebb25e4229d6fd47fbde" translate="yes" xml:space="preserve">
          <source>AudioEngine.finishedLoading()</source>
          <target state="translated">AudioEngine.finishedLoading()</target>
        </trans-unit>
        <trans-unit id="64e535a598e2a57ff979161c577e8f5d088efdfb" translate="yes" xml:space="preserve">
          <source>AudioEngine.isLoadingChanged()</source>
          <target state="translated">AudioEngine.isLoadingChanged()</target>
        </trans-unit>
        <trans-unit id="9ca764394a8f2a8a81bd9bb905bf61f61fe0eb68" translate="yes" xml:space="preserve">
          <source>AudioEngine.listener</source>
          <target state="translated">AudioEngine.listener</target>
        </trans-unit>
        <trans-unit id="0db9cde1d7ceb8df8432df7e5f90ef51e961167e" translate="yes" xml:space="preserve">
          <source>AudioEngine.liveInstanceCountChanged()</source>
          <target state="translated">AudioEngine.liveInstanceCountChanged()</target>
        </trans-unit>
        <trans-unit id="a3c780c8685f4ae94cbc366c23da62c5bb21cd0e" translate="yes" xml:space="preserve">
          <source>AudioEngine.liveInstances</source>
          <target state="translated">AudioEngine.liveInstances</target>
        </trans-unit>
        <trans-unit id="88f82e43cbd231a76e4e5e286b7af3fdd2cdc3f8" translate="yes" xml:space="preserve">
          <source>AudioEngine.loading</source>
          <target state="translated">AudioEngine.loading</target>
        </trans-unit>
        <trans-unit id="3eafc6185deae73e78947e584fb199ded6111e2e" translate="yes" xml:space="preserve">
          <source>AudioEngine.ready()</source>
          <target state="translated">AudioEngine.ready()</target>
        </trans-unit>
        <trans-unit id="d18f598be844ac08e14c23bc228f025b11d3784f" translate="yes" xml:space="preserve">
          <source>AudioEngine.samples</source>
          <target state="translated">AudioEngine.samples</target>
        </trans-unit>
        <trans-unit id="e74d8427b95136f8fdea57244e12eca46350d834" translate="yes" xml:space="preserve">
          <source>AudioEngine.sounds</source>
          <target state="translated">AudioEngine.sounds</target>
        </trans-unit>
        <trans-unit id="6b2018c1f51763fb309bd535727e578e9ee03f2e" translate="yes" xml:space="preserve">
          <source>AudioEngine.speedOfSound</source>
          <target state="translated">AudioEngine.speedOfSound</target>
        </trans-unit>
        <trans-unit id="4b682bed9f7b034f73f1a2096eb1f36aff816bc7" translate="yes" xml:space="preserve">
          <source>AudioListener (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dc0356ed096e404aafff20c5b87f483ada9c16" translate="yes" xml:space="preserve">
          <source>AudioListener QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515771c3c41723e245d7d934e9859700951bbfb3" translate="yes" xml:space="preserve">
          <source>AudioListener.direction</source>
          <target state="translated">AudioListener.direction</target>
        </trans-unit>
        <trans-unit id="1000f5b8a2dbc1e11a18ce120efccdd5e340f415" translate="yes" xml:space="preserve">
          <source>AudioListener.engine</source>
          <target state="translated">AudioListener.engine</target>
        </trans-unit>
        <trans-unit id="2770bc287fd302ad98542ee08c00537f67b6616d" translate="yes" xml:space="preserve">
          <source>AudioListener.gain</source>
          <target state="translated">AudioListener.gain</target>
        </trans-unit>
        <trans-unit id="5160714d0b8e93accfc09dccb33c97631b753992" translate="yes" xml:space="preserve">
          <source>AudioListener.position</source>
          <target state="translated">AudioListener.position</target>
        </trans-unit>
        <trans-unit id="fe48b2a64a143dce5a9d0e40f9bdda534b6552f3" translate="yes" xml:space="preserve">
          <source>AudioListener.up</source>
          <target state="translated">AudioListener.up</target>
        </trans-unit>
        <trans-unit id="57796a4b5e5ee9fd4ab4553faaf1bc3736071b27" translate="yes" xml:space="preserve">
          <source>AudioListener.velocity</source>
          <target state="translated">AudioListener.velocity</target>
        </trans-unit>
        <trans-unit id="32458668a2f05309e8729a3f02fb5e76812427a3" translate="yes" xml:space="preserve">
          <source>AudioSample (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edbd5fa319b7a4229c9bff88f7111faf89fcc1a" translate="yes" xml:space="preserve">
          <source>AudioSample QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfce10d346107b7e2456f97dc30bd15320b8bbe" translate="yes" xml:space="preserve">
          <source>AudioSample.load()</source>
          <target state="translated">AudioSample.load()</target>
        </trans-unit>
        <trans-unit id="7de1401602ec630ddba05e035e3c05e1a956f893" translate="yes" xml:space="preserve">
          <source>AudioSample.loaded</source>
          <target state="translated">AudioSample.loaded</target>
        </trans-unit>
        <trans-unit id="0050d1df722f31ae5a5a96c8f59ece60d3a166ca" translate="yes" xml:space="preserve">
          <source>AudioSample.loadedChanged()</source>
          <target state="translated">AudioSample.loadedChanged()</target>
        </trans-unit>
        <trans-unit id="603a2b34848e804c9cd847916169ce2d7c5949a9" translate="yes" xml:space="preserve">
          <source>AudioSample.name</source>
          <target state="translated">AudioSample.name</target>
        </trans-unit>
        <trans-unit id="aa74e77095549b2d4d1f1f90bbe143bf3f2f6466" translate="yes" xml:space="preserve">
          <source>AudioSample.preloaded</source>
          <target state="translated">AudioSample.preloaded</target>
        </trans-unit>
        <trans-unit id="3a70b21332f28afcb7ed41a7560047a9284be222" translate="yes" xml:space="preserve">
          <source>AudioSample.source</source>
          <target state="translated">AudioSample.source</target>
        </trans-unit>
        <trans-unit id="06214410aa495b30a65a8c0466cc2b1a67e75659" translate="yes" xml:space="preserve">
          <source>August (7)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43833b0ea01c6c5d5bae05c4a3af7717056f2b0f" translate="yes" xml:space="preserve">
          <source>Authentication data for pre shared keys (PSK) ciphersuites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e63fb08fd99ec22d7e865e2889168232a8b8858" translate="yes" xml:space="preserve">
          <source>Authentication details provided to QNetworkAccessManager::authenticationRequired() must be provided immediately, so this signal cannot be connected as a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt::QueuedConnection&lt;/a&gt; (or as the default &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt::AutoConnection&lt;/a&gt; from another thread).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b52210e5e437015dcea177d45621ef6f42e51d" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd362f081c9d484cf38a7d7427a60daacdf46e0d" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb137a48fe744b55a6c2e34197e71c9183bea5e7" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.accepted</source>
          <target state="translated">AuthenticationDialogRequest.accepted</target>
        </trans-unit>
        <trans-unit id="414f809330c35b841039beed59458e6481dcc3d6" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.dialogAccept()</source>
          <target state="translated">AuthenticationDialogRequest.dialogAccept()</target>
        </trans-unit>
        <trans-unit id="cbcc327266c5795c4cefde5b61be5ee574ff2677" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.dialogReject()</source>
          <target state="translated">AuthenticationDialogRequest.dialogReject()</target>
        </trans-unit>
        <trans-unit id="2f8b523e2405cfdaeda9591f89ddd33b5f283637" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.proxyHost</source>
          <target state="translated">AuthenticationDialogRequest.proxyHost</target>
        </trans-unit>
        <trans-unit id="d00ee7f6d99ba97884e0d801ff37dd8f6e4e2eb2" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.realm</source>
          <target state="translated">AuthenticationDialogRequest.realm</target>
        </trans-unit>
        <trans-unit id="207a688472a8924b905f175de4566f715e2ebe54" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.type</source>
          <target state="translated">AuthenticationDialogRequest.type</target>
        </trans-unit>
        <trans-unit id="db56b27ba5b48a1725df767f37dc66d353d1696d" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.url</source>
          <target state="translated">AuthenticationDialogRequest.url</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Author</target>
        </trans-unit>
        <trans-unit id="54f4165a5563bb8ace4876f41367e6620edc5f00" translate="yes" xml:space="preserve">
          <source>Authorization Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210c2a477516d97a77920658ddd25595b7ce4d5b" translate="yes" xml:space="preserve">
          <source>Authorizes the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c614ba7c453cdcd4d21b20e8286c6266c891e0c6" translate="yes" xml:space="preserve">
          <source>Auto</source>
          <target state="translated">Auto</target>
        </trans-unit>
        <trans-unit id="b9473d62b0cf047552f281305949cb419b07f11a" translate="yes" xml:space="preserve">
          <source>Auto white balance mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2212e9c51ee569c538028db48e03ff0176bd6b94" translate="yes" xml:space="preserve">
          <source>Auto-Connection</source>
          <target state="translated">Auto-Connection</target>
        </trans-unit>
        <trans-unit id="2ea3b13dcb5ecf75d6febc8df9eba601328f7187" translate="yes" xml:space="preserve">
          <source>Auto-completion of incomplete URLs with &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source#&quot;&gt;view-source URI scheme&lt;/a&gt; makes the usage of this feature more comfortable. For example, the following incomplete URL also loads the source view of the qt.io web page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a7249dc999583af21182315f8e31b6d87b0493" translate="yes" xml:space="preserve">
          <source>Auto-remove is on by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06976bf50d386316359206a19dc4a1d53fcc3c2" translate="yes" xml:space="preserve">
          <source>Auto-repeat interval for spinbox key presses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5122dd1083528e05034f04e22571bb18aa6981" translate="yes" xml:space="preserve">
          <source>Auto-repeat interval for spinbox mouse clicks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fa189582dfc401e62ab0e0133416e4f3856ab4" translate="yes" xml:space="preserve">
          <source>Auto-repeat or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47797cc87062a821944593a2f1b079d411d9bec" translate="yes" xml:space="preserve">
          <source>Auto-repeat threshold for spinbox mouse clicks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3462e7ba4f3549f14a0eb0b4da5b86a0b1853779" translate="yes" xml:space="preserve">
          <source>AutoCloseSessionTimeout</source>
          <target state="translated">AutoCloseSessionTimeout</target>
        </trans-unit>
        <trans-unit id="5acc8f895a92298ade69dc724b9e3762325c6c67" translate="yes" xml:space="preserve">
          <source>Autodesk FBX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872fb4f5a75e8d811d8f59fa79530fa005f0725b" translate="yes" xml:space="preserve">
          <source>Automatic Clipping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e813eea5386fdaa0523579c33919a33b23d26dd8" translate="yes" xml:space="preserve">
          <source>Automatic Connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b947b2d5d02bca2382a545fb478a84922836443" translate="yes" xml:space="preserve">
          <source>Automatic Detection of File Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d12a00bf7a292934c2f1002bbda1b30db2009c" translate="yes" xml:space="preserve">
          <source>Automatic Replies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f1d9a359797848c122857ef2907a4d624d7ed3" translate="yes" xml:space="preserve">
          <source>Automatic aspect ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e600b567344ea6c1b9f8d1fe4abcb966f197489" translate="yes" xml:space="preserve">
          <source>Automatic capitalization and space insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4b03898162fc0bdf5e44384a568b0a0d3109e3" translate="yes" xml:space="preserve">
          <source>Automatic connection of signals and slots provides both a standard naming convention and an explicit interface for widget designers to work to. By providing source code that implements a given interface, user interface designers can check that their designs actually work without having to write code themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce6e3e26548f657e3e1d9fa04d6cb9b43c0af03" translate="yes" xml:space="preserve">
          <source>Automatic flash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb96fed2890659e3549bb2fc82195af5568ddece" translate="yes" xml:space="preserve">
          <source>Automatic layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4336f3a86d9b8102fd7f79a07cc25449dd5290" translate="yes" xml:space="preserve">
          <source>Automatic mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5507e011a644e559471a2d9662d56cbffdde5197" translate="yes" xml:space="preserve">
          <source>Automatic signal relaying consists of signal-to-signal connection of the signals on the parent that have the exact same method signatue in both classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4cfc57f67fc04d8741f11f6a5c38ee28c6a916" translate="yes" xml:space="preserve">
          <source>Automatic updates when contents change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3098c35578b88787a01b55a75968edf98ca0f139" translate="yes" xml:space="preserve">
          <source>Automatically Cast To</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85f278aae9996cb04083ce0d3216ecf201d8711" translate="yes" xml:space="preserve">
          <source>Automatically construct a &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; object from the asynchronous pending call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2589c241d444d6c120745e7e8ed4429da615d1" translate="yes" xml:space="preserve">
          <source>Automatically construct a &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; object from the reply message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f8daca9a271cd83a8721c456f9ceae58dd3461" translate="yes" xml:space="preserve">
          <source>Automatically create bullet lists (e.g. when the user enters an asterisk ('*') in the left most column, or presses Enter in an existing list item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14ce495b8a6fa6dda9e2a3e82bb316ffbc9a576" translate="yes" xml:space="preserve">
          <source>Automatically creates the service as long as the binding exist. See &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE&quot;&gt;BIND_AUTO_CREATE&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b2afda7ff7daaa7c310e69b42ef71048f0db81" translate="yes" xml:space="preserve">
          <source>Automatically detect if the called function has a reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929982e056bef519acc62a04d6213ba5e7264355" translate="yes" xml:space="preserve">
          <source>Automatically dowloads images for web pages. When this setting is disabled, images are loaded from the cache. Enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69ca0556c6f94c9f1d5f0d8405b9ea74cb8d152" translate="yes" xml:space="preserve">
          <source>Automatically downloads icons for web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed435f257708ab4669d8af16932f8b182cba0b65" translate="yes" xml:space="preserve">
          <source>Automatically downloads icons for web pages. Enabled by default. (Added in Qt 5.7)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7136cf1e88ce89cb45dfe6b40fff1ea3ac9886e7" translate="yes" xml:space="preserve">
          <source>Automatically generates a &lt;code&gt;.cpp&lt;/code&gt; file that includes the precompiled header file specified in the .pro file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2ab71bd7e1ae1ebba6e8ad0f3d0508ed438f39" translate="yes" xml:space="preserve">
          <source>Automatically launching NDEF message handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06582cd157fb293ec6bc9bba92643521897e13d8" translate="yes" xml:space="preserve">
          <source>Automatically launching NDEF message handlers is supported on &lt;a href=&quot;nfc-android#&quot;&gt;Android&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f1a5ba80e7d0fd6fbe27ae5a470920cf2bb86d" translate="yes" xml:space="preserve">
          <source>Automatically launching NDEF message handlers on Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c8d5d05967c6a84f53bec5fbc4c84c480f2b99" translate="yes" xml:space="preserve">
          <source>Automatically loads images on web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df3ac6ae38e58b64cf1d761173dcff0086ebfa8" translate="yes" xml:space="preserve">
          <source>Automatically loads translation files from an i18n directory adjacent to the main QML file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb543e25ec5d6c4a3fe4c5854401f6a80b964a7f" translate="yes" xml:space="preserve">
          <source>Automatically select one or multiple focus points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c0ae5b9ff3641c8337062893575858af0ec4c9" translate="yes" xml:space="preserve">
          <source>Automatically sets a &lt;code&gt;QQmlFileSelector&lt;/code&gt; as the url interceptor, applying file selectors to all QML files and assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ef53e5f4081db41588b67d1ae6febdd0d9ab1f" translate="yes" xml:space="preserve">
          <source>Automatically sets an incubation controller if the scene contains a &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6292fd2af5fe47d9aaeee3bbf1f21816aa1034d4" translate="yes" xml:space="preserve">
          <source>Automotive Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a6fb365c8319bc9cd99469baa7aec2545b0233" translate="yes" xml:space="preserve">
          <source>Autotests</source>
          <target state="translated">Autotests</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="67a0064590b2f746e7dd10cc243b80495677aca5" translate="yes" xml:space="preserve">
          <source>Availability of Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c62a1424469b1c1cf402f254409a96a0e6770cf" translate="yes" xml:space="preserve">
          <source>Available</source>
          <target state="translated">Available</target>
        </trans-unit>
        <trans-unit id="e8fb788cf6307a8cd78a358b3227f7e4460f4896" translate="yes" xml:space="preserve">
          <source>Available Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88501a1294ea7669dea3183bda0837bdebffa47" translate="yes" xml:space="preserve">
          <source>Available Styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057b4b33c8569c09b413019743ff85bf2e11c330" translate="yes" xml:space="preserve">
          <source>Available options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3470b95b1702e3c3676f46202a33bba8b0a5c6b3" translate="yes" xml:space="preserve">
          <source>Available or not (grayed out, disabled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed008570190eb2cf427fb7ee118aa9da9363cd" translate="yes" xml:space="preserve">
          <source>Available pre-defined colors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f492455c1faf531411d34599ac5ee635eb1828d9" translate="yes" xml:space="preserve">
          <source>Available properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53eca4e38cd259d4270cf1d0f458c06af122b85" translate="yes" xml:space="preserve">
          <source>Available reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8491843e4d1cafc722bcf64a60b712373636a30e" translate="yes" xml:space="preserve">
          <source>Available states:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6012c96194ba07b17126bcdfe11c6a6f332cf037" translate="yes" xml:space="preserve">
          <source>Available subtypes for the &lt;code&gt;doc&lt;/code&gt; selector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ae10eb73a5b8cfdd1e5a91b01684ae211b451a" translate="yes" xml:space="preserve">
          <source>Available themes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bda36e41849163c96616b71afeaaab69fe2a77" translate="yes" xml:space="preserve">
          <source>Available types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd6aef71d5c19d6c101516b635e37a3c538d16a" translate="yes" xml:space="preserve">
          <source>Available values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299533c5a9b1c169bb484c8ebd5c3e27d9a932c4" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08266057ab5e613d1d79be149fdc05efaa13154a" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument::mode</source>
          <target state="translated">AvailableSizesArgument::mode</target>
        </trans-unit>
        <trans-unit id="a448d60845cb58a7cac8f603319b0e51305c86ef" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument::sizes</source>
          <target state="translated">AvailableSizesArgument::sizes</target>
        </trans-unit>
        <trans-unit id="ab6d749fee3b22ab4f18aaad8ee7e3e2bef1784a" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument::state</source>
          <target state="translated">AvailableSizesArgument::state</target>
        </trans-unit>
        <trans-unit id="15f86c051ecf0b64e5f8cdc8c689552f42595942" translate="yes" xml:space="preserve">
          <source>Average</source>
          <target state="translated">Average</target>
        </trans-unit>
        <trans-unit id="625743f99c4f8aaffcc8cbce549d56f8307d9539" translate="yes" xml:space="preserve">
          <source>AverageBitRateEncoding</source>
          <target state="translated">AverageBitRateEncoding</target>
        </trans-unit>
        <trans-unit id="632b5cf66af66b57582fae15b4932ebe8379d3fe" translate="yes" xml:space="preserve">
          <source>AverageLevel</source>
          <target state="translated">AverageLevel</target>
        </trans-unit>
        <trans-unit id="0736420d35582261a294c926eeca1741a6bae474" translate="yes" xml:space="preserve">
          <source>Avoid Run-time Composition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80daa97850118e1f972a913ff08d53d3862fe74f" translate="yes" xml:space="preserve">
          <source>Avoid Smoothing Images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bfe5bcb6b6b70c101e3bef1f0d770284211002" translate="yes" xml:space="preserve">
          <source>Avoid calling this function from a different thread than the one the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; instance lives in. If you wish to use &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; from a different thread you should first make sure it's not current in the current thread, by calling &lt;a href=&quot;qopenglcontext#doneCurrent&quot;&gt;doneCurrent&lt;/a&gt;() if necessary. Then call &lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt;(otherThread) before using it in the other thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35c4f532cfccc7f2158097213828cfda765db3d" translate="yes" xml:space="preserve">
          <source>Avoid complex bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ed8c40ff6db5e1d16f317ed8a429fb5aa5a489" translate="yes" xml:space="preserve">
          <source>Avoid defining multiple identical implicit types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea2a3ed28f6f4c5ae7e66e4a1b2c0c440a2e741" translate="yes" xml:space="preserve">
          <source>Avoid key names that are identical except for the case. For example, if you have a key called &quot;&lt;a href=&quot;designer-to-know#mainwindow&quot;&gt;MainWindow&lt;/a&gt;&quot;, don't try to save another key as &quot;mainwindow&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a2ccfd1d334328cb577f14bb6d0e8ffb2899dd" translate="yes" xml:space="preserve">
          <source>Avoid painting the same area several times. Use Item as root element rather than Rectangle to avoid painting the background several times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bc5e27c89d07f57fe21d7c294ca774b0f2cab5" translate="yes" xml:space="preserve">
          <source>Avoid running JavaScript during animation. For example, running a complex JavaScript expression for each frame of an x property animation should be avoided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20856517ee93c8038c4ce6e74f389f38c4863b5" translate="yes" xml:space="preserve">
          <source>Avoid the category names &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, and &lt;code&gt;critical&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50902c0755d35c4de938692fad8c0619ad2adc42" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; elements within delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e728eebe835930a978a00d993ec2600851b8a6e4" translate="yes" xml:space="preserve">
          <source>Avoid using eval() if at all possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e661817f2180b68ec2c40dd9cecff4057c7c25b" translate="yes" xml:space="preserve">
          <source>Avoid using this function if you need to wait for a given condition to change. Instead, connect a slot to the signal that indicates the change or use an event handler (see &lt;a href=&quot;qobject#event&quot;&gt;QObject::event&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160bbfbc4dd8c077926d6ec6a7184e57212d85a3" translate="yes" xml:space="preserve">
          <source>Axis</source>
          <target state="translated">Axis</target>
        </trans-unit>
        <trans-unit id="861c8b6cc15a4315f397724a2c5cb22c4cc0c7c5" translate="yes" xml:space="preserve">
          <source>Axis (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c933ded1f70bcfaf135654110b779d1a16a185" translate="yes" xml:space="preserve">
          <source>Axis &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-chartview#axisX-method&quot;&gt;axisX&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da691af2c939c7d17eb395ecf08ae447746f9eb7" translate="yes" xml:space="preserve">
          <source>Axis &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-chartview#axisY-method&quot;&gt;axisY&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac7cf990697214d5979ec03465ecb79d0e934c7" translate="yes" xml:space="preserve">
          <source>Axis QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb67434dc2053ba5942479c5b3d4df377270e72a" translate="yes" xml:space="preserve">
          <source>Axis Specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf19e8be082df7b9fa45b3e0639222a8ce31404" translate="yes" xml:space="preserve">
          <source>Axis Specifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d1fed0701c80ec694f207aa266547273c0643d" translate="yes" xml:space="preserve">
          <source>Axis Steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36e8a84a7006e5070159e551bccc80cc771a9df" translate="yes" xml:space="preserve">
          <source>Axis for the analog input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee7c34621ab2a9670c5c26997b06908c7d6b56a" translate="yes" xml:space="preserve">
          <source>Axis.buttons</source>
          <target state="translated">Axis.buttons</target>
        </trans-unit>
        <trans-unit id="42a575705f1ce56cddea0911599fee5d51eaa0c7" translate="yes" xml:space="preserve">
          <source>Axis.inputs</source>
          <target state="translated">Axis.inputs</target>
        </trans-unit>
        <trans-unit id="5fb376bdd42565812744c9ba6e3736137f1b5a7b" translate="yes" xml:space="preserve">
          <source>Axis.scale</source>
          <target state="translated">Axis.scale</target>
        </trans-unit>
        <trans-unit id="0c8b4529862b54ffc04fcee6d3dee9dd3317b370" translate="yes" xml:space="preserve">
          <source>Axis.value</source>
          <target state="translated">Axis.value</target>
        </trans-unit>
        <trans-unit id="a1a5a5223f38517c40bdfc940d11199f1c755b96" translate="yes" xml:space="preserve">
          <source>Axis.velocity</source>
          <target state="translated">Axis.velocity</target>
        </trans-unit>
        <trans-unit id="2af4369549fd66cf6a4cd74b2874d424779ff1d1" translate="yes" xml:space="preserve">
          <source>AxisAccumulator</source>
          <target state="translated">AxisAccumulator</target>
        </trans-unit>
        <trans-unit id="35d3e645763342a78f79371a42ea8158c903c0a7" translate="yes" xml:space="preserve">
          <source>AxisAccumulator (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1707b563ecc39938e22e67b33a9dd7e0393d7d" translate="yes" xml:space="preserve">
          <source>AxisAccumulator QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d40a5a7868c93758cc5d57b44345486f1fb49d" translate="yes" xml:space="preserve">
          <source>AxisAccumulator.sourceAxis</source>
          <target state="translated">AxisAccumulator.sourceAxis</target>
        </trans-unit>
        <trans-unit id="6232ff3c36f602ebee098fe3e0a697c01aaacd2f" translate="yes" xml:space="preserve">
          <source>AxisAccumulator.sourceAxisType</source>
          <target state="translated">AxisAccumulator.sourceAxisType</target>
        </trans-unit>
        <trans-unit id="4b85781b20761a5aac8ba50a5fb6a01bb092fa95" translate="yes" xml:space="preserve">
          <source>AxisAccumulator.value</source>
          <target state="translated">AxisAccumulator.value</target>
        </trans-unit>
        <trans-unit id="7bfddb4f3ed4614039d64f294e478a97f55249f8" translate="yes" xml:space="preserve">
          <source>AxisSetting</source>
          <target state="translated">AxisSetting</target>
        </trans-unit>
        <trans-unit id="a1525c2fe43f50803c0560499f09f9a4bc25aa2d" translate="yes" xml:space="preserve">
          <source>AxisSetting (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677671bd8c00457ce55b030a02b01639f837bc4d" translate="yes" xml:space="preserve">
          <source>AxisSetting QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5c8b8c73ff620cf04996adc4577126e4cb0d42" translate="yes" xml:space="preserve">
          <source>AxisSetting.axes</source>
          <target state="translated">AxisSetting.axes</target>
        </trans-unit>
        <trans-unit id="59c30f2f8010e0666e5f250d253e2f699023943a" translate="yes" xml:space="preserve">
          <source>AxisSetting.axis</source>
          <target state="translated">AxisSetting.axis</target>
        </trans-unit>
        <trans-unit id="2b25592736b56c3f12f1545392c345626ffcfbdb" translate="yes" xml:space="preserve">
          <source>AxisSetting.axisChanged()</source>
          <target state="translated">AxisSetting.axisChanged()</target>
        </trans-unit>
        <trans-unit id="face40d3aca221c19a163e1326ca546c654aa5ab" translate="yes" xml:space="preserve">
          <source>AxisSetting.deadZoneRadius</source>
          <target state="translated">AxisSetting.deadZoneRadius</target>
        </trans-unit>
        <trans-unit id="9d023e9ae9b29a31d3ccf6a9dbdd76137b3e69ee" translate="yes" xml:space="preserve">
          <source>AxisSetting.deadZoneRadiusChanged()</source>
          <target state="translated">AxisSetting.deadZoneRadiusChanged()</target>
        </trans-unit>
        <trans-unit id="2318e897b645e9a18a88fd68bbefc4dee9d11df1" translate="yes" xml:space="preserve">
          <source>AxisSetting.smooth</source>
          <target state="translated">AxisSetting.smooth</target>
        </trans-unit>
        <trans-unit id="f300b5f8b6749706fa546a9f0aeca08de13dddba" translate="yes" xml:space="preserve">
          <source>AxisSetting.smoothChanged()</source>
          <target state="translated">AxisSetting.smoothChanged()</target>
        </trans-unit>
        <trans-unit id="eda23b717347d5455441d9f2cb771cce28968db4" translate="yes" xml:space="preserve">
          <source>AxisaxisX(</source>
          <target state="translated">AxisaxisX(</target>
        </trans-unit>
        <trans-unit id="b39afdc752359186a208c2fb172232fc0aa55a77" translate="yes" xml:space="preserve">
          <source>AxisaxisY(</source>
          <target state="translated">AxisaxisY(</target>
        </trans-unit>
        <trans-unit id="b5ef4cad99d89e246a3f16718f4caf49804cb5f6" translate="yes" xml:space="preserve">
          <source>Azeri, Azerbaijani</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3923f4a2517d3dc539da7d25692003b4ea82b738" translate="yes" xml:space="preserve">
          <source>Azimuth in this context is equivalent to a compass bearing based on true north.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="ed394f9ee514bad47fe1a5a7b440d45e4220f918" translate="yes" xml:space="preserve">
          <source>B::MouseMove</source>
          <target state="translated">B::MouseMove</target>
        </trans-unit>
        <trans-unit id="f6d9e9205688f5dde409269f0091f83d341d541b" translate="yes" xml:space="preserve">
          <source>B=0 and M=0 gives transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81043b63eb8992194fddecb7761faf8399fdc20" translate="yes" xml:space="preserve">
          <source>B=0 and M=1 gives white.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358e336d0ed79fff98f002d9ee67d7854d7dec7e" translate="yes" xml:space="preserve">
          <source>B=1 and M=0 gives an XOR'd result under Windows, undefined results on all other platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e05fe432edff8283fa87236ea68c45cc90513d2" translate="yes" xml:space="preserve">
          <source>B=1 and M=1 gives black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0fe684054a53889de74128877e23cf3189b322" translate="yes" xml:space="preserve">
          <source>BIGINT</source>
          <target state="translated">BIGINT</target>
        </trans-unit>
        <trans-unit id="66f6387f31af8c02708fb3fe12629629f893d52c" translate="yes" xml:space="preserve">
          <source>BIGINT LONG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05fb01e0b399387c3a28586f5fd296e2670d6a3" translate="yes" xml:space="preserve">
          <source>BINARY</source>
          <target state="translated">BINARY</target>
        </trans-unit>
        <trans-unit id="261b6d70eaf74bf465f2e78c1923e0b93e95e1c8" translate="yes" xml:space="preserve">
          <source>BIT</source>
          <target state="translated">BIT</target>
        </trans-unit>
        <trans-unit id="1ce04f29dadb9973458555f164627f66e504686e" translate="yes" xml:space="preserve">
          <source>BLOB</source>
          <target state="translated">BLOB</target>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="292c7af4fff95bcd09dba6dcdd4b5f6d636b95c8" translate="yes" xml:space="preserve">
          <source>BOOL</source>
          <target state="translated">BOOL</target>
        </trans-unit>
        <trans-unit id="ab68d8e893a82cff70979ba20bec0023dbfe4be3" translate="yes" xml:space="preserve">
          <source>BOOLEAN</source>
          <target state="translated">BOOLEAN</target>
        </trans-unit>
        <trans-unit id="8207678833a3d8dd294bf08266531fcc44f68f6c" translate="yes" xml:space="preserve">
          <source>BSD 2-clause &quot;Simplified&quot; License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b20698ef27c27f136b417fc1674147ef423664e" translate="yes" xml:space="preserve">
          <source>BSD 2-clause &quot;Simplified&quot; License and Imlib2 License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0661c841852ce4be7790b811c0d826b8afbb05e5" translate="yes" xml:space="preserve">
          <source>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af919c74cb6464a6772ccfa32fe23eec83f40a5" translate="yes" xml:space="preserve">
          <source>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; Licensee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4095bc927536ca017d173559a0dbf28565fd47eb" translate="yes" xml:space="preserve">
          <source>BSD 4-clause &quot;Original&quot; or &quot;Old&quot; License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a997653368c55f3a8ca1251515704c9183172df5" translate="yes" xml:space="preserve">
          <source>BSTR</source>
          <target state="translated">BSTR</target>
        </trans-unit>
        <trans-unit id="1d7caa593761d5e9b3a933c7c28bf276e5fe0725" translate="yes" xml:space="preserve">
          <source>BYTE</source>
          <target state="translated">BYTE</target>
        </trans-unit>
        <trans-unit id="b52b36b7269fbfc58ec24bb724691951a3decbe8" translate="yes" xml:space="preserve">
          <source>Back</source>
          <target state="translated">Back</target>
        </trans-unit>
        <trans-unit id="a1fd701c45cd8c16d7f7564b4c08f3a15645ff4a" translate="yes" xml:space="preserve">
          <source>Back when X11 was very popular, developers wrote their own custom solutions to circumvent X11 issues. Older Qt versions had the Qt Windowing System (QWS), which is now discontinued. Today, most of these use cases are covered by Wayland, and custom solutions are becoming less and less common.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="8b2e4c4c74e2c49a63d1e532547c41d496b45fb9" translate="yes" xml:space="preserve">
          <source>Backends have to implement &lt;a href=&quot;qsensorbackend#isFeatureSupported&quot;&gt;QSensorBackend::isFeatureSupported&lt;/a&gt;() to make this work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="a28732ef9a594fa12c9038a43b09ee48ffbd920b" translate="yes" xml:space="preserve">
          <source>Background color for elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f20a07a5b649d352f00ecc7fad532efbda02a3" translate="yes" xml:space="preserve">
          <source>Background image for elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7a3848fa22c3edaf90f27113193beb52525ee5" translate="yes" xml:space="preserve">
          <source>Background mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f5dc85c2e667e3aeae3ea25d2ef135686f62d4" translate="yes" xml:space="preserve">
          <source>Background network traffic (not user initiated) should be avoided for example to save battery or data charges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc917f9c1769b34e7778f4ab4b6fb7bc2c24a7bc" translate="yes" xml:space="preserve">
          <source>Background shorthand property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b518b3117459f4d43e65c411af6cad1dc3ffc20" translate="yes" xml:space="preserve">
          <source>Backlight exposure mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d130a66de8e5db01660642d9f23e1f0eef97dd" translate="yes" xml:space="preserve">
          <source>Backspace</source>
          <target state="translated">Backspace</target>
        </trans-unit>
        <trans-unit id="b53ac9e0a4abf3e84523ef09f70ec0a5b9416ec2" translate="yes" xml:space="preserve">
          <source>Backspace key for keyboard layouts. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d58053768afa85fba75056335f2e0e956f464e" translate="yes" xml:space="preserve">
          <source>BackspaceKey</source>
          <target state="translated">BackspaceKey</target>
        </trans-unit>
        <trans-unit id="ff543573dcd8923c1fb6f036b25d90d4ffe021d0" translate="yes" xml:space="preserve">
          <source>BackspaceKey (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208a30f26f2f186c856cff6bde33b6b5539b7c8f" translate="yes" xml:space="preserve">
          <source>BackspaceKey QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3840230617314017318d792465069fdff45cce1" translate="yes" xml:space="preserve">
          <source>Backward diagonal lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc717b250e68f3012afdeae94ac54d77c43ebae" translate="yes" xml:space="preserve">
          <source>Backwards Compatibility feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda29f9e5debd276a111c6934daab21102f47904" translate="yes" xml:space="preserve">
          <source>Bar and surface graphs support slice selection modes, where the selected row or column is drawn in a separate viewport as a pseudo-2D graph. This makes it easier to see the actual values of a single row or column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ebe3ec043db31d7b499270f28a0d3ae41f759d" translate="yes" xml:space="preserve">
          <source>Bar graph additionally supports simply highlighting the whole row and/or column of the selected bar without opening the slice view. Bar graph also supports selecting/slicing a whole row and/or column by clicking the axis label, based on selection mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6652efa5506006019ebf16ba5c76b0d7279fc576" translate="yes" xml:space="preserve">
          <source>Bar spacing in X and Z dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b619e075bcfb281c4a07a54dfd1c6db4ad1d8ac" translate="yes" xml:space="preserve">
          <source>Bar spacing in the X and Z dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2d150af64ef23d83f0ff7f6c477ebb9ab01158" translate="yes" xml:space="preserve">
          <source>Bar3DSeries</source>
          <target state="translated">Bar3DSeries</target>
        </trans-unit>
        <trans-unit id="1a54953dff77a5055a46dd68735afe5fc7562e6a" translate="yes" xml:space="preserve">
          <source>Bar3DSeries (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bc0fd572463b59ad9a70a8f1cd5f04e0a53c01" translate="yes" xml:space="preserve">
          <source>Bar3DSeries QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a48ea534185470647fc7c91c65f3de1976a4a17" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.dataProxy</source>
          <target state="translated">Bar3DSeries.dataProxy</target>
        </trans-unit>
        <trans-unit id="d529e80b89cf5f91d27c81ee5385f75852b221b2" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.invalidSelectionPosition</source>
          <target state="translated">Bar3DSeries.invalidSelectionPosition</target>
        </trans-unit>
        <trans-unit id="15801e0a1fd9261f95217c8f21ac6aef236d6333" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.meshAngle</source>
          <target state="translated">Bar3DSeries.meshAngle</target>
        </trans-unit>
        <trans-unit id="7e7b608d7967cf3ed2ba925c314cee8fe0dbf1f3" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.selectedBar</source>
          <target state="translated">Bar3DSeries.selectedBar</target>
        </trans-unit>
        <trans-unit id="531c74bb67dd7bed3fdec728081fc691cf601763" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis</source>
          <target state="translated">BarCategoryAxis</target>
        </trans-unit>
        <trans-unit id="71fea7a5bcfa3661b4cb22820193097819dc47db" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f019e193cbb469ae74365a0b69039933f57478e" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caced2b02c77ca54492c38b66f354e014cb35dae" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.categories</source>
          <target state="translated">BarCategoryAxis.categories</target>
        </trans-unit>
        <trans-unit id="501ad2efb114b7b5b9d30054b63ec12dfa786432" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.clear()</source>
          <target state="translated">BarCategoryAxis.clear()</target>
        </trans-unit>
        <trans-unit id="319080c889703231cae59bc46b10405f83787f38" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.count</source>
          <target state="translated">BarCategoryAxis.count</target>
        </trans-unit>
        <trans-unit id="619817de8b4c27f4cdca56e273b252e1a5163358" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.max</source>
          <target state="translated">BarCategoryAxis.max</target>
        </trans-unit>
        <trans-unit id="7040d026bcd745f11aa141c31d7629f769b144b6" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.min</source>
          <target state="translated">BarCategoryAxis.min</target>
        </trans-unit>
        <trans-unit id="067149a96ce6984e617d2c62dffd5584dc4b1f73" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.rangeChanged()</source>
          <target state="translated">BarCategoryAxis.rangeChanged()</target>
        </trans-unit>
        <trans-unit id="ce4261920f9b489fde3df959a39b1452d84f560d" translate="yes" xml:space="preserve">
          <source>BarDataProxy</source>
          <target state="translated">BarDataProxy</target>
        </trans-unit>
        <trans-unit id="2baa2214a836294c3fbe5e9b42ead0e141cf5ed6" translate="yes" xml:space="preserve">
          <source>BarDataProxy (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc241bfdd2e24a272ab6b5ee91abe6d95fbe7f1" translate="yes" xml:space="preserve">
          <source>BarDataProxy QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283b4e569a3733f6427bdb91914ae02461a016a4" translate="yes" xml:space="preserve">
          <source>BarDataProxy.columnLabels</source>
          <target state="translated">BarDataProxy.columnLabels</target>
        </trans-unit>
        <trans-unit id="f09083cc1ccdeb6d52a48dbe986be59d9a65667c" translate="yes" xml:space="preserve">
          <source>BarDataProxy.rowCount</source>
          <target state="translated">BarDataProxy.rowCount</target>
        </trans-unit>
        <trans-unit id="326c83d46f34ba8ef347e8608a2a239f5de9aa00" translate="yes" xml:space="preserve">
          <source>BarDataProxy.rowLabels</source>
          <target state="translated">BarDataProxy.rowLabels</target>
        </trans-unit>
        <trans-unit id="bc6a517940d82fd1c7cd477fac345e2bb3f08bf9" translate="yes" xml:space="preserve">
          <source>BarDataProxy.series</source>
          <target state="translated">BarDataProxy.series</target>
        </trans-unit>
        <trans-unit id="603fca3a2492aceed1ed280b4418c7f576850aec" translate="yes" xml:space="preserve">
          <source>BarSeries</source>
          <target state="translated">BarSeries</target>
        </trans-unit>
        <trans-unit id="5e2642aec5a3369d7c627b65f1dd9a7e45bb4393" translate="yes" xml:space="preserve">
          <source>BarSeries (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c67dff896f33e53e257f210c57a19d8302d4bce" translate="yes" xml:space="preserve">
          <source>BarSeries QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf8fcc4b2b1e3a176ea16f3a6a935263adcd44d" translate="yes" xml:space="preserve">
          <source>BarSet</source>
          <target state="translated">BarSet</target>
        </trans-unit>
        <trans-unit id="293db4eb85aa150993f82733bc958e50592bacbc" translate="yes" xml:space="preserve">
          <source>BarSet (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ba2da667f51ae9e85cac5488b2714d845ee37b" translate="yes" xml:space="preserve">
          <source>BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#append-method&quot;&gt;append&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00d8d3acb0bfc3272e5054a9492722d354ca968" translate="yes" xml:space="preserve">
          <source>BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#at-method&quot;&gt;at&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1856a0e2115b035719faa98ac0933947f9d8d11" translate="yes" xml:space="preserve">
          <source>BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#insert-method&quot;&gt;insert&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2bc4685f9b80914db04368a16710511b4dcb40" translate="yes" xml:space="preserve">
          <source>BarSet QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d5310b45ae5e8d3772925d5ef1e71283d4f058" translate="yes" xml:space="preserve">
          <source>BarSet.append()</source>
          <target state="translated">BarSet.append()</target>
        </trans-unit>
        <trans-unit id="357e4e069155d4ea365acb4b96713c2a6646aca2" translate="yes" xml:space="preserve">
          <source>BarSet.at()</source>
          <target state="translated">BarSet.at()</target>
        </trans-unit>
        <trans-unit id="5b47cc20327bdd9db714f7882591b82a1067ccc4" translate="yes" xml:space="preserve">
          <source>BarSet.borderColor</source>
          <target state="translated">BarSet.borderColor</target>
        </trans-unit>
        <trans-unit id="6d1c98b56dfbe01fb927f141398adc11b30b1ab5" translate="yes" xml:space="preserve">
          <source>BarSet.borderWidth</source>
          <target state="translated">BarSet.borderWidth</target>
        </trans-unit>
        <trans-unit id="6736ddb655f696799981ce58035604b869118cec" translate="yes" xml:space="preserve">
          <source>BarSet.brushFilename</source>
          <target state="translated">BarSet.brushFilename</target>
        </trans-unit>
        <trans-unit id="7575d2f7e239fde46370e3efd8ba11b9f8cd6cf1" translate="yes" xml:space="preserve">
          <source>BarSet.clicked()</source>
          <target state="translated">BarSet.clicked()</target>
        </trans-unit>
        <trans-unit id="eb6c3440f11ee189e4cffa4f5a14a73138f53f01" translate="yes" xml:space="preserve">
          <source>BarSet.color</source>
          <target state="translated">BarSet.color</target>
        </trans-unit>
        <trans-unit id="0dcd98c36e713a3a55c8bc9f1cb10f4a77585c37" translate="yes" xml:space="preserve">
          <source>BarSet.count</source>
          <target state="translated">BarSet.count</target>
        </trans-unit>
        <trans-unit id="0a81e5feb71d4e5268429d35e52e8f95ecd7469e" translate="yes" xml:space="preserve">
          <source>BarSet.doubleClicked()</source>
          <target state="translated">BarSet.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="6df08fb4f2fc594620f84788cec5a72b74e5c742" translate="yes" xml:space="preserve">
          <source>BarSet.label</source>
          <target state="translated">BarSet.label</target>
        </trans-unit>
        <trans-unit id="1c31d0ee39fd6255b92e3b95b57c21ef0efa0662" translate="yes" xml:space="preserve">
          <source>BarSet.labelColor</source>
          <target state="translated">BarSet.labelColor</target>
        </trans-unit>
        <trans-unit id="27e6a47646a561e7db3c3a9d1247a46ad0afa089" translate="yes" xml:space="preserve">
          <source>BarSet.labelFont</source>
          <target state="translated">BarSet.labelFont</target>
        </trans-unit>
        <trans-unit id="1b2c1ea883d55aec2928c48e2e6b14dc749af969" translate="yes" xml:space="preserve">
          <source>BarSet.pressed()</source>
          <target state="translated">BarSet.pressed()</target>
        </trans-unit>
        <trans-unit id="e76226d5578d6effb1c11b41abfd2a5966e25b77" translate="yes" xml:space="preserve">
          <source>BarSet.released()</source>
          <target state="translated">BarSet.released()</target>
        </trans-unit>
        <trans-unit id="452ecdaad30ca1400d2044bf7f4c519b1fbbdc64" translate="yes" xml:space="preserve">
          <source>BarSet.remove()</source>
          <target state="translated">BarSet.remove()</target>
        </trans-unit>
        <trans-unit id="8fb8ca9431030e0be0c2b659991c4c9922273aac" translate="yes" xml:space="preserve">
          <source>BarSet.replace()</source>
          <target state="translated">BarSet.replace()</target>
        </trans-unit>
        <trans-unit id="4dcae701a902cc1bd07598f56fb58aa760581d40" translate="yes" xml:space="preserve">
          <source>BarSet.valueChanged()</source>
          <target state="translated">BarSet.valueChanged()</target>
        </trans-unit>
        <trans-unit id="1d93ddc08b5c93d85042fae9cd15bf22689970fb" translate="yes" xml:space="preserve">
          <source>BarSet.values</source>
          <target state="translated">BarSet.values</target>
        </trans-unit>
        <trans-unit id="eeb7eb839de6cf0c817b87b4810134509890dfd0" translate="yes" xml:space="preserve">
          <source>BarSet.valuesAdded()</source>
          <target state="translated">BarSet.valuesAdded()</target>
        </trans-unit>
        <trans-unit id="ef6d8772494f078cba8253979df5a785347aae97" translate="yes" xml:space="preserve">
          <source>BarSet.valuesRemoved()</source>
          <target state="translated">BarSet.valuesRemoved()</target>
        </trans-unit>
        <trans-unit id="ce6f381092718e5e191d0f56a63293935cad7e5c" translate="yes" xml:space="preserve">
          <source>Barcode exposure mode. Since 5.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242c0f499cf57f05bc93c33b559556824c286726" translate="yes" xml:space="preserve">
          <source>Barcode mode. Since 5.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00c26d51aa389fcde86273b8620851c112a3f07" translate="yes" xml:space="preserve">
          <source>Bars renderer is optimized to access only data that is within the data window and thus should not suffer noticeable slowdown even if more data is continually added to the proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfd660349da1475aa715615daf956e7ae825d28" translate="yes" xml:space="preserve">
          <source>Bars3D (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7381a96b0b22b74463757c52a5f4222e27e8c80" translate="yes" xml:space="preserve">
          <source>Bars3D QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb00904c85a53c4581f685893aedb09909174c57" translate="yes" xml:space="preserve">
          <source>Bars3D.addSeries()</source>
          <target state="translated">Bars3D.addSeries()</target>
        </trans-unit>
        <trans-unit id="5e64bea15907594dc7825ccb8a0e4c11c9b0649f" translate="yes" xml:space="preserve">
          <source>Bars3D.barSpacing</source>
          <target state="translated">Bars3D.barSpacing</target>
        </trans-unit>
        <trans-unit id="5729d18fd3f321ff78a3fe8b7e69d969c65833ad" translate="yes" xml:space="preserve">
          <source>Bars3D.barSpacingRelative</source>
          <target state="translated">Bars3D.barSpacingRelative</target>
        </trans-unit>
        <trans-unit id="54be656eb84cf5318ec98c100cf65f5e76bbb617" translate="yes" xml:space="preserve">
          <source>Bars3D.barThickness</source>
          <target state="translated">Bars3D.barThickness</target>
        </trans-unit>
        <trans-unit id="be8b821faed7324a751896b88929a4fcc4351984" translate="yes" xml:space="preserve">
          <source>Bars3D.columnAxis</source>
          <target state="translated">Bars3D.columnAxis</target>
        </trans-unit>
        <trans-unit id="9a07bb5779993995c1a53d201188643e8c220ed1" translate="yes" xml:space="preserve">
          <source>Bars3D.floorLevel</source>
          <target state="translated">Bars3D.floorLevel</target>
        </trans-unit>
        <trans-unit id="99457b34424f86d06117d141a9b59ee21eb1476d" translate="yes" xml:space="preserve">
          <source>Bars3D.insertSeries()</source>
          <target state="translated">Bars3D.insertSeries()</target>
        </trans-unit>
        <trans-unit id="b5794ea7b23aefc7c6f66fa7ff80dca522f13e92" translate="yes" xml:space="preserve">
          <source>Bars3D.multiSeriesUniform</source>
          <target state="translated">Bars3D.multiSeriesUniform</target>
        </trans-unit>
        <trans-unit id="fb611a4e0c49407875c7fa8a15e197c70ae06442" translate="yes" xml:space="preserve">
          <source>Bars3D.primarySeries</source>
          <target state="translated">Bars3D.primarySeries</target>
        </trans-unit>
        <trans-unit id="9021870b8cc66b5e642fc5b35db901d08a9c6890" translate="yes" xml:space="preserve">
          <source>Bars3D.removeSeries()</source>
          <target state="translated">Bars3D.removeSeries()</target>
        </trans-unit>
        <trans-unit id="3ea655879762f373bae2108db037de3b9839fa44" translate="yes" xml:space="preserve">
          <source>Bars3D.rowAxis</source>
          <target state="translated">Bars3D.rowAxis</target>
        </trans-unit>
        <trans-unit id="6ae3b6d04497904aad69548df806525e991cae99" translate="yes" xml:space="preserve">
          <source>Bars3D.selectedSeries</source>
          <target state="translated">Bars3D.selectedSeries</target>
        </trans-unit>
        <trans-unit id="4d038ce8bf89b4e1bfcfd1d419c612b7d461578f" translate="yes" xml:space="preserve">
          <source>Bars3D.seriesList</source>
          <target state="translated">Bars3D.seriesList</target>
        </trans-unit>
        <trans-unit id="170f86bb7f67ef11969bc8fd06f0b66f5bf42a58" translate="yes" xml:space="preserve">
          <source>Bars3D.valueAxis</source>
          <target state="translated">Bars3D.valueAxis</target>
        </trans-unit>
        <trans-unit id="077fe9c54ed5ed26fa547f4ded3ef9a9bb066d65" translate="yes" xml:space="preserve">
          <source>Base</source>
          <target state="translated">Base</target>
        </trans-unit>
        <trans-unit id="6250b2d5ba185037a32428d0470aa41b51714997" translate="yes" xml:space="preserve">
          <source>Base Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3af25fccb40a9ab70bc14afa4b2e03b499824c" translate="yes" xml:space="preserve">
          <source>Base Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbd61f556fe3f920e0c1bc1a21ce34dd73099d6" translate="yes" xml:space="preserve">
          <source>Base URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9057866c348690402382cbc7195dad7d4d35179d" translate="yes" xml:space="preserve">
          <source>Base class for all Qt3D backend nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12acfc3a33211ae5a4dd048e9fbcac19d77e7428" translate="yes" xml:space="preserve">
          <source>Base class for all graphics items that require signals, slots and properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c3ef4c5e42e49987650c60b7a2d9781a16419a" translate="yes" xml:space="preserve">
          <source>Base class for all graphics view related events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44826afcd3d415a0e1fc906a120f62843e3cede9" translate="yes" xml:space="preserve">
          <source>Base class for animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a9ffd5376df7443bb6bc3bd42b692e4e35153a" translate="yes" xml:space="preserve">
          <source>Base class for changes in QClipBlendNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d9c81e85de361f514b766cef252b4e3ebb6b36" translate="yes" xml:space="preserve">
          <source>Base class for changes in QClipBlendNode. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc512138235d854ac09ba20e7fec48def1b3670b" translate="yes" xml:space="preserve">
          <source>Base class for changes in QClipBlendNode. &lt;a href=&quot;qt3danimation-qclipblendnodecreatedchangebase#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f98f19a06ae99ba8d774260e30996f8b804394" translate="yes" xml:space="preserve">
          <source>Base class for changes that can be sent and received by Qt3D's change notification system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de05264c0e262f81143c483c9ee04a230486c0c0" translate="yes" xml:space="preserve">
          <source>Base class for different kinds of objects that can group parts of a QTextDocument together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4e8e0ce820c1efb78b9b94f3b591c991f0a449" translate="yes" xml:space="preserve">
          <source>Base class for effects in a Qt 3D scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64ebc1df21eedfe7c99cd33b8c3916ce6b3f4d2" translate="yes" xml:space="preserve">
          <source>Base class for handling creation changes for QAbstractSkeleton sub-classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7056ea705e09dbce673839a045820ecbe0051937" translate="yes" xml:space="preserve">
          <source>Base class for handling creation changes for QAbstractSkeleton sub-classes. &lt;a href=&quot;qt3danimation-qchannelmappingcreatedchangebase#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c86bd47ff778a8b0ed9c21c7f931aa4af5e4c7" translate="yes" xml:space="preserve">
          <source>Base class for jobs executed in an aspect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c77d8c33c5583f9391b9fd5999762ad6ba7b16" translate="yes" xml:space="preserve">
          <source>Base class for proxy item models that can do sorting, filtering or other data processing tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f71b6ec763abaff4f12085eacf106749ed6690" translate="yes" xml:space="preserve">
          <source>Base class for video presentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba57ce7d1fa1140ea5b92758585e77299db01ea5" translate="yes" xml:space="preserve">
          <source>Base class of all FrameGraph configuration nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22ead21450528b03872b44e1e12fa3d4e7b2053" translate="yes" xml:space="preserve">
          <source>Base class of all FrameGraph configuration nodes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2385641df41ef98dd349eae4d302e02b8b5ec103" translate="yes" xml:space="preserve">
          <source>Base class of all FrameGraph configuration nodes. &lt;a href=&quot;qt3drender-qframegraphnode#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af3495256628d6ba5fc9e860c0e636de983d76a" translate="yes" xml:space="preserve">
          <source>Base class of native dialogs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179702af03c3f24916bc27640db715e1ea17e10c" translate="yes" xml:space="preserve">
          <source>Base class of scene nodes that can be aggregated by Qt3DCore::QEntity instances as a component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98cfdf1009e59be0cd381c89f133138bf2f16aa" translate="yes" xml:space="preserve">
          <source>Base implementation for print dialogs used to configure printers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53436b3dcabf3beb5e95fbbc740907da7cdc4349" translate="yes" xml:space="preserve">
          <source>Base index for primary language text descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f071701216ec8373f7399119d15dda872ca11a" translate="yes" xml:space="preserve">
          <source>Base map tile service URL used by mapping manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd844ee9921fec3a45124428e80f55fe89288843" translate="yes" xml:space="preserve">
          <source>Base proxy class for &lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f194341abb2bab48c15317158920951235bc9cea" translate="yes" xml:space="preserve">
          <source>Base proxy type for &lt;a href=&quot;qml-qtdatavisualization-surface3d&quot;&gt;Surface3D&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201ec345f4b4d8f48415a3b14f4a2f1f0bb8fc1f" translate="yes" xml:space="preserve">
          <source>Base string used for makefile targets related to this subproject. Available only on platforms that use makefiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7417f9710cdc013cd9059531e9e0fa20ba2e1947" translate="yes" xml:space="preserve">
          <source>Base type for 3D visualizations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d02e15c0b24b2cbee3efebd529a8f562763a041" translate="yes" xml:space="preserve">
          <source>Base type for all &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; data proxies. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b98d8865a7432e71ea8c080366c7cb632395e3c" translate="yes" xml:space="preserve">
          <source>Base type for all &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; input handlers. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b012b9f647bca62aca579a8e636d2b536493288" translate="yes" xml:space="preserve">
          <source>Base type for all Qt Chart series types. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2b985ce24783a4907a9f79b0ca82ac0bb3590c" translate="yes" xml:space="preserve">
          <source>Base type for creating input method in QML. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583076a4034c4c0d5baaeae3cecab3bec4ed0964" translate="yes" xml:space="preserve">
          <source>Base type of Shape fill gradients. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8eac1feecb1157a0db89305674bf048ec6094b" translate="yes" xml:space="preserve">
          <source>Base type of popup-like user interface controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04419069153bde19bb8ed5131fd70b27b0e9acdb" translate="yes" xml:space="preserve">
          <source>Base type of popup-like user interface controls. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7569870f254b71e1f5506d656275efd72f451e" translate="yes" xml:space="preserve">
          <source>Base value for custom complex controls. Custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae72e7cee14c564c16f27cac3718c6a2ac7ba24" translate="yes" xml:space="preserve">
          <source>Base value for custom contents types. Custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521698b294ccca42e2d07ec05c31fd506aa1bc01" translate="yes" xml:space="preserve">
          <source>Base value for custom control elements; custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ac940cfd66d66cf37788bf2932152ebaa38bbf" translate="yes" xml:space="preserve">
          <source>Base value for custom pixel metrics. Custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cc13dedc18e9e761399aeca3a134d1bcda503c" translate="yes" xml:space="preserve">
          <source>Base value for custom primitive elements. All values above this are reserved for custom use. Custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9c8df1ea54d2155cf52edf65300f314d95b70a" translate="yes" xml:space="preserve">
          <source>Base value for custom standard pixmaps; custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c55051a85e8515021bf126ccd5b83f0d7a29dd" translate="yes" xml:space="preserve">
          <source>Base value for custom style hints. Custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe027bfc37db05b2142077cea9793b88c36a977" translate="yes" xml:space="preserve">
          <source>Base value for custom sub-elements. Custom values must be greater than this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb68f6f326f5b0b590a671adcba8047ff75e6c4b" translate="yes" xml:space="preserve">
          <source>Base value for user types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a6753c7ab942206abda39cab2e8f7ec0380346" translate="yes" xml:space="preserve">
          <source>Base value for vendor defined white balance modes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e4494adfae0bb7f8ea1330117837b46dc3f62" translate="yes" xml:space="preserve">
          <source>Base64 Decoder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a8013ccf1d86814ec4e4aaaf3a3c13a0ca3c6f" translate="yes" xml:space="preserve">
          <source>BaseKey</source>
          <target state="translated">BaseKey</target>
        </trans-unit>
        <trans-unit id="ef0264f460553847598d505785b4d8c848c52155" translate="yes" xml:space="preserve">
          <source>BaseKey (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574618d5b03ff486fdf382595beb24d6efea84de" translate="yes" xml:space="preserve">
          <source>BaseKey QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bcec480d0f7a7616cd43394ab8770677b80d26" translate="yes" xml:space="preserve">
          <source>BaseKey.active</source>
          <target state="translated">BaseKey.active</target>
        </trans-unit>
        <trans-unit id="841056f5e7e26232ea9aba4c2170235b6fa382a8" translate="yes" xml:space="preserve">
          <source>BaseKey.alternativeKeys</source>
          <target state="translated">BaseKey.alternativeKeys</target>
        </trans-unit>
        <trans-unit id="c3780bff43d8093f03775295841152213069fb36" translate="yes" xml:space="preserve">
          <source>BaseKey.clicked()</source>
          <target state="translated">BaseKey.clicked()</target>
        </trans-unit>
        <trans-unit id="1d88b6625b4d34cb42ce0210d960354dbabcfbde" translate="yes" xml:space="preserve">
          <source>BaseKey.displayText</source>
          <target state="translated">BaseKey.displayText</target>
        </trans-unit>
        <trans-unit id="d2b735ae4c7117089760714811a2b253b9a10641" translate="yes" xml:space="preserve">
          <source>BaseKey.effectiveAlternativeKeys</source>
          <target state="translated">BaseKey.effectiveAlternativeKeys</target>
        </trans-unit>
        <trans-unit id="1682e6c396d0e83811d5ef0ec8dcc3b8e24c37da" translate="yes" xml:space="preserve">
          <source>BaseKey.effectiveAlternativeKeysHighlightIndex</source>
          <target state="translated">BaseKey.effectiveAlternativeKeysHighlightIndex</target>
        </trans-unit>
        <trans-unit id="95dc31c79a4f7fd869a9aad889256c3d78916145" translate="yes" xml:space="preserve">
          <source>BaseKey.functionKey</source>
          <target state="translated">BaseKey.functionKey</target>
        </trans-unit>
        <trans-unit id="157de13c127f999f1ea9e8acec90f14400b77ca3" translate="yes" xml:space="preserve">
          <source>BaseKey.highlighted</source>
          <target state="translated">BaseKey.highlighted</target>
        </trans-unit>
        <trans-unit id="0c5cb7864ef42d1dbb950cbd3af29302fa000dca" translate="yes" xml:space="preserve">
          <source>BaseKey.key</source>
          <target state="translated">BaseKey.key</target>
        </trans-unit>
        <trans-unit id="c1cb738f9ffc54ecb6626f7ecc345eb96215919b" translate="yes" xml:space="preserve">
          <source>BaseKey.keyPanelDelegate</source>
          <target state="translated">BaseKey.keyPanelDelegate</target>
        </trans-unit>
        <trans-unit id="ba2459f9870c1e15f7f269df561536a19f62c2d1" translate="yes" xml:space="preserve">
          <source>BaseKey.noKeyEvent</source>
          <target state="translated">BaseKey.noKeyEvent</target>
        </trans-unit>
        <trans-unit id="f137ff48bb082dc4ac8aa52f7c7b0b1256b4990b" translate="yes" xml:space="preserve">
          <source>BaseKey.noModifier</source>
          <target state="translated">BaseKey.noModifier</target>
        </trans-unit>
        <trans-unit id="482a30aa3f35c296341b7bc7866cd3dbbac9b369" translate="yes" xml:space="preserve">
          <source>BaseKey.pressed</source>
          <target state="translated">BaseKey.pressed</target>
        </trans-unit>
        <trans-unit id="40f05e49d98a27377a0b527e6a8d35897f473357" translate="yes" xml:space="preserve">
          <source>BaseKey.repeat</source>
          <target state="translated">BaseKey.repeat</target>
        </trans-unit>
        <trans-unit id="b12fae1d4711bece5eba3474e4e7d0c47ec286a2" translate="yes" xml:space="preserve">
          <source>BaseKey.showPreview</source>
          <target state="translated">BaseKey.showPreview</target>
        </trans-unit>
        <trans-unit id="8ca6114f29bc00fb3bf19a16f16d0dbc9cf5d167" translate="yes" xml:space="preserve">
          <source>BaseKey.smallText</source>
          <target state="translated">BaseKey.smallText</target>
        </trans-unit>
        <trans-unit id="b1902caf09bf7e22417eaaaffd978d49dc393004" translate="yes" xml:space="preserve">
          <source>BaseKey.smallTextVisible</source>
          <target state="translated">BaseKey.smallTextVisible</target>
        </trans-unit>
        <trans-unit id="1869032dfa29a581bb00a778d44cc85fc89e0441" translate="yes" xml:space="preserve">
          <source>BaseKey.soundEffect</source>
          <target state="translated">BaseKey.soundEffect</target>
        </trans-unit>
        <trans-unit id="979060339f30cfafc4dc7db8cdf66281dbc35f79" translate="yes" xml:space="preserve">
          <source>BaseKey.text</source>
          <target state="translated">BaseKey.text</target>
        </trans-unit>
        <trans-unit id="3bf8c5bb706156c9a9a3de32d1816ac0bc0eade7" translate="yes" xml:space="preserve">
          <source>BaseKey.uppercased</source>
          <target state="translated">BaseKey.uppercased</target>
        </trans-unit>
        <trans-unit id="a3656dd7d9c2c986ae6000276c831ae732ee99cf" translate="yes" xml:space="preserve">
          <source>BaseKey.weight</source>
          <target state="translated">BaseKey.weight</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="5eab8fc3ffa32aa796174a77104a420884806a36" translate="yes" xml:space="preserve">
          <source>Basic Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b557a9705d44b880bcdb9b3953a7984727b39294" translate="yes" xml:space="preserve">
          <source>Basic Device Identification. All objects of this category are mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28df83b8a3b27ef40e81f8c43d55de5eca7b9823" translate="yes" xml:space="preserve">
          <source>Basic GUI widgets such as buttons, comboboxes and scrollbars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a2f6a4322301a00f375726c426cdfd290519f4" translate="yes" xml:space="preserve">
          <source>Basic Imaging Profile (BIP) UUID (profile)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c94c46dee798cc15bf55287c8c5f1787233894" translate="yes" xml:space="preserve">
          <source>Basic Imaging Profile (BIP) UUID (service)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500966e34a76d7ceb72e1cf225f05511c3580bdc" translate="yes" xml:space="preserve">
          <source>Basic Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d7ce77b715d9c522f024d3bbbcfb07dcf99c1b" translate="yes" xml:space="preserve">
          <source>Basic Matrix Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f88e0bef309c242090fd26f3eb1b60f772c3156" translate="yes" xml:space="preserve">
          <source>Basic Navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea1d4d4917a0b33db95ec3d6c1de388e1a5db62" translate="yes" xml:space="preserve">
          <source>Basic Printing Profile (BPP) UUID (profile)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b56c7394cccd917d359ab7d973750ac16ae4c5" translate="yes" xml:space="preserve">
          <source>Basic Printing Profile (BPP) UUID (service)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e062cf89e99a9504070bb30bbeceafa5ca2e5a" translate="yes" xml:space="preserve">
          <source>Basic Qt Data Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9c53fff0a17bd6177f7d24f682153a9f45b7b9" translate="yes" xml:space="preserve">
          <source>Basic Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0683d71248dcbb6ef209d3946391b3451983e5b6" translate="yes" xml:space="preserve">
          <source>Basic Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f730cb85febb00ead656627a65edae12ad9f8309" translate="yes" xml:space="preserve">
          <source>Basic Types Provided By QML Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56200d3f39ea7fd9bd5e2832e5f242f1380735ad" translate="yes" xml:space="preserve">
          <source>Basic Types Provided By The QML Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8932006bc9fb215b4928a3cadf6c2845e613b82" translate="yes" xml:space="preserve">
          <source>Basic Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efdb76c776f036b2efd71761839af50a9c5d788" translate="yes" xml:space="preserve">
          <source>Basic Widget Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cdc9f64fd1c085bb10854b62f123e70ce40ba7" translate="yes" xml:space="preserve">
          <source>Basic Widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86087cd5de9786d844a650d0fa7c7b72e59f04b" translate="yes" xml:space="preserve">
          <source>Basic XSLT 2.0 processor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171c052038dca80c273e5c6799af1d505214771c" translate="yes" xml:space="preserve">
          <source>Basic camera state management, error reporting, and simple zoom properties are available in the Camera itself. For integration with C++ code, the &lt;a href=&quot;qml-qtmultimedia-camera#mediaObject-prop&quot;&gt;mediaObject&lt;/a&gt; property allows you to access the standard Qt Multimedia camera controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e7ae591b0abd861a75d3fa39a7cab907d2a5c8" translate="yes" xml:space="preserve">
          <source>Basic concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e2bc7432b8f51ffd373db7ad9d015dbf59d63d" translate="yes" xml:space="preserve">
          <source>Basic cone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3091076d3344007ddc4f5ddaf78ec0db9b24fcae" translate="yes" xml:space="preserve">
          <source>Basic cube.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4c731cdb1d0028354bc7461be19a982c26d086" translate="yes" xml:space="preserve">
          <source>Basic cylinder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775e39391d93547ff1c949911bdc2e621cbb8a49" translate="yes" xml:space="preserve">
          <source>Basic functionality for camera controllers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b019a6eeaa562b8ce99c3dc5a5d08dd7d15f44e" translate="yes" xml:space="preserve">
          <source>Basic identification (stream access and individual access).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9d8b25367a1d6bb45b26b478fa19756beccd60" translate="yes" xml:space="preserve">
          <source>Basic identification (stream access).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d60eac8e36db885ea50e13c9df7afb621eeff5" translate="yes" xml:space="preserve">
          <source>Basic item delegate that can be used in various views and controls. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72df2a8ce97b3ac1dad03857037b9a70800f64e1" translate="yes" xml:space="preserve">
          <source>Basic maneuvers will be included with the route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd24022297f2dd2af12a885be6d13266550648a" translate="yes" xml:space="preserve">
          <source>Basic manevuers will be included with the route. This will include &lt;a href=&quot;qgeomaneuver#instructionText&quot;&gt;QGeoManeuver::instructionText&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5b02686bdbf8f5cbc1e68ab9c0ab12550264b9" translate="yes" xml:space="preserve">
          <source>Basic rectangular bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8292d8844411efb722bf2e801d752ff33cd7bcc6" translate="yes" xml:space="preserve">
          <source>Basic replace functions are implemented as built-in functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde1aa04dc1d179e84e42a8509b1836f067c5ced" translate="yes" xml:space="preserve">
          <source>Basic segment data will be included with the route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9029061b9cc8673ead55d447041700c043a62c7" translate="yes" xml:space="preserve">
          <source>Basic segment data will be included with the route. This will include &lt;a href=&quot;qgeoroutesegment#path&quot;&gt;QGeoRouteSegment::path&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d80c5f9a1836abf854651f52613104dbbb7d9e8" translate="yes" xml:space="preserve">
          <source>Basic support for non-power-of-two textures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ec361548d9a22ca4fe1a48cda42336e89206f5" translate="yes" xml:space="preserve">
          <source>Basic test functions are implemented as built-in functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2436b5074f110ed538e7d7a6b9a86eb80563f6c" translate="yes" xml:space="preserve">
          <source>Basic touch display based input handler. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c88e18c52d04d3269ca4df8ddbceeae638f8ae" translate="yes" xml:space="preserve">
          <source>Basic types are built into the QML language, whereas object types cannot be used unless the appropriate &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-modules-topic.html&quot;&gt;module&lt;/a&gt; is imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dafef83d784dfdd483ea7c667740fb5669ebf26" translate="yes" xml:space="preserve">
          <source>Basic types can be used to refer to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6de600a98a08322eef3caedf0e8b6135f104ac1" translate="yes" xml:space="preserve">
          <source>Basic types: integers, floating point (double), boolean, null, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348bf4c94e965c470891ef3d4553fc7d86c9f629" translate="yes" xml:space="preserve">
          <source>Basic wheel mouse based input handler. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abc05526ef59f32f62e7b068010cd7a80b20ef9" translate="yes" xml:space="preserve">
          <source>Basis for extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87df04a6212fd94333fb48d7e78e47251cb9af4" translate="yes" xml:space="preserve">
          <source>Basque</source>
          <target state="translated">Basque</target>
        </trans-unit>
        <trans-unit id="86bb289ec5f29c5574382279efff87b9a0253eaf" translate="yes" xml:space="preserve">
          <source>Batch Roots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23882b326ae5f26b2e0ffcf3a4f63f44f2373cc5" translate="yes" xml:space="preserve">
          <source>Batch up backend operations so that (potentially slow) I/O and IPC is minimized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e659e1da84e2de06714263ed14e4f3dda132219" translate="yes" xml:space="preserve">
          <source>Batching</source>
          <target state="translated">Batching</target>
        </trans-unit>
        <trans-unit id="60e612c896519aa59c5cce9ce702a6c64464f791" translate="yes" xml:space="preserve">
          <source>Batching of alpha blended primitives requires a bit more effort in the renderer as elements that are overlapping need to be rendered in the correct order for alpha blending to look correct. Relying on the Z-buffer alone is not enough. The renderer does a pass over all alpha blended primitives and will look at their bounding rect in addition to their material state to figure out which elements can be batched and which can not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5239ca9ef42e95ae49a2a771ae70c44eae95d097" translate="yes" xml:space="preserve">
          <source>Batching only works for 16-bit indices. All built-in items use 16-bit indices, but a custom geometry is free to also use 32-bit indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d66b60e59ce447f53d66264f045b98f9208f08" translate="yes" xml:space="preserve">
          <source>Battery UUID (service). The Battery Service exposes the state of a battery within a device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94195bcd1edeb7025a97c2ef511352c687e3283f" translate="yes" xml:space="preserve">
          <source>Be as asynchronous as possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a222f52699ffaae1546a051defc9fb8816dcdf49" translate="yes" xml:space="preserve">
          <source>Be aware of that overlapping compound items, like in the illustration above, cannot be batched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ea5892efef4623b68d60587d7a618a8ca92603" translate="yes" xml:space="preserve">
          <source>Be aware of using the correct match of &lt;code&gt;qmake&lt;/code&gt; and Visual Studio. As the Visual Studio format is generic, it does not return an immediate error if for instance you open a Windows Phone project inside Visual Studio for Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a742379a9fac611b5d496bd019d71281dd0508df" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; does not take ownership of the device when set, so it is the developer's responsibility to destroy it when it is not needed anymore. A good idea might be to set the multipart message as parent object for the device, as documented at the documentation for &lt;a href=&quot;qhttpmultipart&quot;&gt;QHttpMultiPart&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebacc993d54874faa420033aaf8b8f0375b9333e" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt;'s cache limit may need to be changed to obtain optimal performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659339ee81ed276e9b31bd7da87c6f6a2b1710fd" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt; methods are only called when a class is instantiated by a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;. If you create the same class directly from C++, these methods will not be called automatically. To avoid this problem, it is recommended that you start deferring operations from &lt;a href=&quot;qqmlparserstatus#classBegin&quot;&gt;classBegin&lt;/a&gt; instead of from the initial creation of your class. This will still prevent multiple revaluations during initial binding assignment in QML, but will not defer operations invoked from C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa5abfdcf391d8a1dc4cfec35b393820121ad65" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; delays performing some operations. For this reason, you might want to call &lt;a href=&quot;qsettings#sync&quot;&gt;sync&lt;/a&gt;() to ensure that the data stored in &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is written to disk before calling status().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500008985525893d510fe65de9357f9fb3e1f262" translate="yes" xml:space="preserve">
          <source>Be aware that if one of the fallback locations contains a setting with the same key, that setting will be visible after calling remove().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9ea7d0ae499d4054ec5b13f4151d93ef51b8f9" translate="yes" xml:space="preserve">
          <source>Be aware that if the widget is hidden, it will not accept focus until it is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab89c341bf544206e9f9142e80e5647826449a0" translate="yes" xml:space="preserve">
          <source>Be aware that not all computations can be paused. For example, the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be paused; but the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f937df4ee59848f0e9c96c2e941f638be10b1c" translate="yes" xml:space="preserve">
          <source>Be aware that not all computations can be paused. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be paused; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fae350ed428a0c038bd928e15e864b3313d08fa" translate="yes" xml:space="preserve">
          <source>Be aware that not all computations provide a textual representation of the progress, and as such, this function may return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca68f49d2a33ddb97195f12976edcc403d81c948" translate="yes" xml:space="preserve">
          <source>Be aware that not all running asynchronous computations can be canceled or paused. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff3d67315c784902909334a017c8eb22c126483" translate="yes" xml:space="preserve">
          <source>Be aware that not all running asynchronous computations can be canceled. For example, the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae5aa40944fe9c4a4c916db141f446fb3ecf1fc" translate="yes" xml:space="preserve">
          <source>Be aware that not all running asynchronous computations can be canceled. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba77c894f6b897db96839fb71fe2b6f908ac4b5" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuture#cancel&quot;&gt;cancel&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2709388415dd5428f7d5bdff446aef5ed5eb3c" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab766c398fda0ba763973e105111a7067d69c5d2" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;cancel&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4490da15ea4d56e4626fda089404a584996b5a44" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2da46bd3f0c56b1e0afd0dcff464655311fb3d" translate="yes" xml:space="preserve">
          <source>Be aware, however, that a property change signal for a basic type is emitted whenever</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c25b2e319aefd9d5ec8a4c89cccb76802e17157" translate="yes" xml:space="preserve">
          <source>Be sure to disable frustum culling in the FrameGraph through which the skybox rendering happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b39d6437b0a43efb3dc751200bf6e474de18509" translate="yes" xml:space="preserve">
          <source>Beach exposure mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad14508d83e450892b6fce4c8021412199a3085" translate="yes" xml:space="preserve">
          <source>Bear in mind that a &lt;code&gt;cacheBuffer&lt;/code&gt; keeps additional delegates in-memory. Therefore, the value derived from utilizing the &lt;code&gt;cacheBuffer&lt;/code&gt; must be balanced against additional memory usage. Developers should use benchmarking to find the best value for their use-case, since the increased memory pressure caused by utilizing a &lt;code&gt;cacheBuffer&lt;/code&gt; can, in some rare cases, cause reduced frame rate when scrolling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0372aa31fd05bc2811b3f4b8beb8ee2a14a9e6d4" translate="yes" xml:space="preserve">
          <source>Bearer Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229abb6b1d0ae66f2b4d88fb4e169ca0aaa916a1" translate="yes" xml:space="preserve">
          <source>Bearer Management Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7437d2c153097896218f74fca2cca80f145500d5" translate="yes" xml:space="preserve">
          <source>Bearer Management controls the connectivity state of the device such that the application can start or stop network interfaces and roam transparently between access points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7d186b5c44cb5408c660eaa5b78432323639b2" translate="yes" xml:space="preserve">
          <source>Bearer Management controls the connectivity state of the system so that the user can start or stop interfaces or roam transparently between access points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d6c43e3a60ddc92321c343bf1bee3541fec591" translate="yes" xml:space="preserve">
          <source>Bearer2G</source>
          <target state="translated">Bearer2G</target>
        </trans-unit>
        <trans-unit id="8671cc39df8cc35b804efbc4fe27c3ba20901555" translate="yes" xml:space="preserve">
          <source>Bearer3G</source>
          <target state="translated">Bearer3G</target>
        </trans-unit>
        <trans-unit id="ddb0de1a8048b5733df457b765dfef4d4b4b0e52" translate="yes" xml:space="preserve">
          <source>Bearer4G</source>
          <target state="translated">Bearer4G</target>
        </trans-unit>
        <trans-unit id="d23590554eaa8401f281cbd4334d93f51ae9ae2b" translate="yes" xml:space="preserve">
          <source>BearerBluetooth</source>
          <target state="translated">BearerBluetooth</target>
        </trans-unit>
        <trans-unit id="892df197aef27388991946736bec897d178be99a" translate="yes" xml:space="preserve">
          <source>BearerCDMA2000</source>
          <target state="translated">BearerCDMA2000</target>
        </trans-unit>
        <trans-unit id="b95df0a446ca670283de6847781f91e408fd261a" translate="yes" xml:space="preserve">
          <source>BearerEVDO</source>
          <target state="translated">BearerEVDO</target>
        </trans-unit>
        <trans-unit id="c2973637ff427811b87382387570b9962e9da5bf" translate="yes" xml:space="preserve">
          <source>BearerEthernet</source>
          <target state="translated">BearerEthernet</target>
        </trans-unit>
        <trans-unit id="184830575b74ea5589f07aaefbb72367f61181ae" translate="yes" xml:space="preserve">
          <source>BearerHSPA</source>
          <target state="translated">BearerHSPA</target>
        </trans-unit>
        <trans-unit id="d481c210a699b66bbff42bdad051e753d6e53a56" translate="yes" xml:space="preserve">
          <source>BearerLTE</source>
          <target state="translated">BearerLTE</target>
        </trans-unit>
        <trans-unit id="3ea2a05ff6917e17991ebf8bed9acf635aa132f3" translate="yes" xml:space="preserve">
          <source>BearerType</source>
          <target state="translated">BearerType</target>
        </trans-unit>
        <trans-unit id="aa71af68ec6e36f4d4d749fbd1465774296c841e" translate="yes" xml:space="preserve">
          <source>BearerUnknown</source>
          <target state="translated">BearerUnknown</target>
        </trans-unit>
        <trans-unit id="8bf638f0ee2e7e4a0b0edb0133f3fa7790b2de6c" translate="yes" xml:space="preserve">
          <source>BearerWCDMA</source>
          <target state="translated">BearerWCDMA</target>
        </trans-unit>
        <trans-unit id="768e97cd5209d46f5713a188f9a3dd138172b8be" translate="yes" xml:space="preserve">
          <source>BearerWLAN</source>
          <target state="translated">BearerWLAN</target>
        </trans-unit>
        <trans-unit id="386c719679c662866aafa9acc3050bf3b19c59a7" translate="yes" xml:space="preserve">
          <source>BearerWiMAX</source>
          <target state="translated">BearerWiMAX</target>
        </trans-unit>
        <trans-unit id="eaebe47425c9f545a41d705608612a34bef824ca" translate="yes" xml:space="preserve">
          <source>Because</source>
          <target state="translated">Because</target>
        </trans-unit>
        <trans-unit id="1c0bf7d4cab5a1703f8116d192cbfaf60a3e489f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt; is user-defined, you must include the &lt;code&gt;&amp;lt;QDate&amp;gt;&lt;/code&gt; header file with the property declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84fc940972cf8ada135dd55d01c0a93e6d7c7b3" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; does not do the automatic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59005c50e98336720c7912ca95fc555fbaf736e5" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; inherits &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; indirectly, it already provides the same drag and drop functionality that &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; provides. In addition, as a convenience, the Graphics View framework provides drag and drop support for the scene, and for each and every item. As the view receives a drag, it translates the drag and drop events into a &lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;, which is then forwarded to the scene. The scene takes over scheduling of this event, and sends it to the first item under the mouse cursor that accepts drops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547138dbf2e97255c2b553c9fd7e7338925d4352" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is a &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; subclass, &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can be used to draw directly onto images. When using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, the painting can be performed in another thread than the current GUI thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379753f1b0f6cf1e51d4961f5d68526f4b06e7c9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is implemented as an array of pointers for types that are larger than a pointer or are not movable, this operation requires (&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;constant time&lt;/a&gt;). For read-only access, an alternative syntax is to use &lt;a href=&quot;qlist#at&quot;&gt;at&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14806886331e8dbcadcebc8cc337eec5a436c997" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; inherits &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, all of &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;. For example, you can use &lt;a href=&quot;qhash#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the hash is empty, and you can traverse a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; using &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt;). But in addition, it provides an &lt;a href=&quot;qmultihash#insert&quot;&gt;insert&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash::insertMulti&lt;/a&gt;(), and a &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qhash#insert&quot;&gt;QHash::insert&lt;/a&gt;(). It also provides convenient operator+() and operator+=().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6c6567649d706c699e494724fc454aa63f81d9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; inherits &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, all of &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;. For example, you can use &lt;a href=&quot;qmap#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the map is empty, and you can traverse a &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; using &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;). But in addition, it provides an &lt;a href=&quot;qmultimap#insert&quot;&gt;insert&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;(), and a &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qmap#insert&quot;&gt;QMap::insert&lt;/a&gt;(). It also provides convenient operator+() and operator+=().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ade270c978b27ac2933c11820c2cd1452ec0902" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qoperatingsystemversion&quot;&gt;QOperatingSystemVersion&lt;/a&gt; stores both a version number and an OS type, the OS type can be taken into account when performing comparisons. For example, on a &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; system running &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Sierra (v10.12), the following expression will return &lt;code&gt;false&lt;/code&gt; even though the major version number component of the object on the left hand side of the expression (10) is greater than that of the object on the right (9):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238daeb7a050278b5007c305ee57e8f6b4e8cda1" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; is string oriented, there are no \A, \Z, or \z assertions. The \G assertion is not supported but can be emulated in a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a85983caeb3ba33ab4f645a061649c748fa1cc8" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; is buffered, this function may have to seek the device to reconstruct a valid device position. This operation can be expensive, so you may want to avoid calling this function in a tight loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6812bd54fa11245a1a273e71811b6feb6b417aa0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; measures time within a day and there are 86400 seconds in a day, the result is always between -86400 and 86400.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589e938b20cb3d73232ab1f3d34804b54ff84c2a" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; measures time within a day and there are 86400 seconds in a day, the result is always between -86400000 and 86400000 ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3684e73ce8b2c2702a20f2cdc786eb23722eac6f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is part of the Qt Core module, it cannot provide conversion functions to data types defined in Qt GUI, such as &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. In other words, there is no &lt;code&gt;toColor()&lt;/code&gt; function. Instead, you can use the &lt;a href=&quot;qvariant#value&quot;&gt;QVariant::value&lt;/a&gt;() or the &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;() template function. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338e2425d4d6e9cde01f3437244c5a22e6b29685" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is part of the Qt Core module, it cannot provide conversion functions to data types such as &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, which are part of Qt GUI. In other words, there is no &lt;code&gt;toColor()&lt;/code&gt;, &lt;code&gt;toImage()&lt;/code&gt;, or &lt;code&gt;toPixmap()&lt;/code&gt; functions in &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d93be5a8510878f37fdab404ff164074179c5c1" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; is intentionally a simple class, it doesn't have member functions for accessing the properties of nodes. For example, it doesn't have functions for getting a node's name or its list of attributes or child nodes. If you find that you need to retrieve this kind of information from your query results, there are two ways to proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfdb6712ce7e4045efaf6e504336e484dc5dd74" translate="yes" xml:space="preserve">
          <source>Because C++ forbids unions from including types that have non-default constructors or destructors, most interesting Qt classes cannot be used in unions. Without &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;, this would be a problem for &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() and for database work, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd3e647b0b26e2b6c22143cc0cf60e5e819cb64" translate="yes" xml:space="preserve">
          <source>Because CSV files are not XML, a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; is used to present the CSV data to the XQuery engine as if it were XML. What are not shown are the subclasses of &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; that would then send the selected elements into the DocumentRepresentation node model, and the subclasses of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; that would ultimately write the output files in each format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be09feaaa98371d4a55c5e68e26736e91811e47" translate="yes" xml:space="preserve">
          <source>Because QML loads qmldir files for locating types, there are two URLs involved in loading a QML type. The URL of the (possibly implicit) qmldir used for locating the type and the URL of the file which defines the type. Intercepting both leads to either complex URL replacement or double URL replacements for the same file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1209770145a0f1d4376e5a5d10b4d0500c7f028e" translate="yes" xml:space="preserve">
          <source>Because a Windows ID can cover several IANA IDs in several different countries, this function returns the most frequently used IANA ID with no regard for the country and should thus be used with care. It is usually best to request the default for a specific country.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da00cdb39fc879857174ec7cbe21d66ac8b3214" translate="yes" xml:space="preserve">
          <source>Because a Windows ID can cover several IANA IDs within a given country, the most frequently used IANA ID in that country is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a160fec1379073b7384a9de5deaec770bfb12f" translate="yes" xml:space="preserve">
          <source>Because all resources are placed to one directory, you can register the directory using an XML file (AppxManifest.xml) and Windows Powershell. The reference for these manifest files can be found &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/br211473.aspx&quot;&gt;here&lt;/a&gt;. The target processor architecture must be specified (as opposed to the default, 'neutral'). As soon as these requirements are met, change into your</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592b8ac460b226a21fc0cb1f0b1927efd6373925" translate="yes" xml:space="preserve">
          <source>Because extra selectors are checked before platform the &lt;code&gt;+admin/background.png&lt;/code&gt; will be chosen on Windows when the admin selector is set, and &lt;code&gt;+windows/background.png&lt;/code&gt; will be chosen on Windows when the admin selector is not set. On Linux, the &lt;code&gt;+admin/+linux/background.png&lt;/code&gt; will be chosen when admin is set, and the &lt;code&gt;+linux/background.png&lt;/code&gt; when it is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3c06c57dc7f58580ee553a92f4628ffe902015" translate="yes" xml:space="preserve">
          <source>Because files can be changed by other users or programs, or even by other parts of the same program, there is a function that refreshes the file information: &lt;a href=&quot;qfileinfo#refresh&quot;&gt;refresh&lt;/a&gt;(). If you want to switch off a &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;'s caching and force it to access the file system every time you request information from it call &lt;a href=&quot;qfileinfo#setCaching&quot;&gt;setCaching&lt;/a&gt;(false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35991efc086b56e2cd3c6f295fffc2922fde0046" translate="yes" xml:space="preserve">
          <source>Because it does no sorting or filtering, this class is most suitable to proxy models which transform the &lt;a href=&quot;qabstractproxymodel#data&quot;&gt;data&lt;/a&gt;() of the source model. For example, a proxy model could be created to define the font used, or the background colour, or the tooltip etc. This removes the need to implement all data handling in the same class that creates the structure of the model, and can also be used to create re-usable components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ace808fbc3f30a89ab739c332f519c9006d104" translate="yes" xml:space="preserve">
          <source>Because items' position and transformation are relative to the parent, child items' coordinates are unaffected by the parent's transformation, although the parent's transformation implicitly transforms the child. In the above example, even if the parent is rotated and scaled, the child's (0, 10) point will still correspond to the parent's (10, 10) point. Relative to the scene, however, the child will follow the parent's transformation and position. If the parent is scaled (2x, 2x), the child's position will be at scene coordinate (20, 0), and its (10, 0) point will correspond to the point (40, 0) on the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cede7a76cd98beec7b2ad5fb88b11db9f6b2c1c" translate="yes" xml:space="preserve">
          <source>Because node constructors are expressions, they can be used in XQueries wherever expressions are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7db94ec27f49293594809069702cfe8efe73cb" translate="yes" xml:space="preserve">
          <source>Because of a bug in some OpenGL drivers, the mechanism used by Qt to cache text glyphs does not work as expected on all Android devices, causing text to appear scrambled. To remedy this, a workaround is in place, which increases memory consumption and can also affect text rendering performance. Before Qt 5.3.2, the workaround was enabled only for a particular set of devices. It is now used by default on all devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9483e0880e7e398a902370035d7649ee83c630ca" translate="yes" xml:space="preserve">
          <source>Because of a limitation in the Windows compositor, applications that show a fullscreen web engine view will not properly display popups or other top-level windows. The reason and workaround for the issue can be found at &lt;a href=&quot;windows-issues#fullscreen-opengl-based-windows&quot;&gt;Fullscreen OpenGL Based Windows&lt;/a&gt; and &lt;a href=&quot;qwindowswindowfunctions#setHasBorderInFullScreen&quot;&gt;QWindowsWindowFunctions::setHasBorderInFullScreen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b9897a9ab06107cd22be90a4e48fbc54552504" translate="yes" xml:space="preserve">
          <source>Because of binary compatibility constraints, the &lt;a href=&quot;qnetworkaccessmanager#supportedSchemes&quot;&gt;supportedSchemes&lt;/a&gt;() method (introduced in Qt 5.2) is not virtual. Instead, &lt;a href=&quot;qnetworkaccessmanager#supportedSchemes&quot;&gt;supportedSchemes&lt;/a&gt;() will dynamically detect and call this slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb1b0395a53256fd0baa1fbe383340ea23d371b" translate="yes" xml:space="preserve">
          <source>Because of that, from Qt 5.9 onwards, Qt WebEngine accessibility support is disabled by default on Linux. It can be re-enabled by setting the &lt;code&gt;QTWEBENGINE_ENABLE_LINUX_ACCESSIBILITY&lt;/code&gt; environment variable to a non-empty value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7def7f90ac3755514fcc248c46c752dfdf07641" translate="yes" xml:space="preserve">
          <source>Because of the modularization of Qt beginning with Qt 5.0, The possibility that qdoc will have to deal with ambiguous links has increased. An ambiguous link is one that has a matching target in more than one Qt module, e.g. the same section title can appear in more than one Qt module, or the name of a C++ class in one module can also be the name of a QML type in another module. A real example in Qt5 is the name Qt itself. Qt is the name of both a C++ namespace in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and a QML type in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-qmlmodule.html&quot;&gt;QtQml&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5481edab98c52cda95683dc96278cc985d2c257" translate="yes" xml:space="preserve">
          <source>Because of the way JavaScript properties work, the order in which the test functions are found is unpredictable. To assist with predictability, the test framework will sort the functions on ascending order of name. This can help when there are two tests that must be run in order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7040d86eb6d859efd68b3a8f0675b7d392eeb2c7" translate="yes" xml:space="preserve">
          <source>Because release is considered the active setting (for feature parsing) it will be the CONFIG used to generate the build file. In the common case a second parameter is not needed, but for specific mutual exclusive tests it is invaluable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d62897545f3b252432fcd7eff1f1730076bc127" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;XPath Data Model interface&lt;/a&gt; presented by &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; allows &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to operate on non-XML data as if it were XML, implementing subclasses of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; can involve a significant amount of work. The &lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt; class is provided to simplify the implementation for many common use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270786e7fd0d9b809e90a13f45159e3a7b7b057d" translate="yes" xml:space="preserve">
          <source>Because the algorithm recurses through the visual item hierarchy, any children of the green rectangle will also be drawn beneath the blue rectangle and beneath any of the blue rectangle's children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e16540415ae002aeab7c61c09332bbdf499f94" translate="yes" xml:space="preserve">
          <source>Because the evaluation order of bindings is not defined, it is not recommended to change anchors via conditional bindings, as this can lead to the ordering issue described above. In the following example the Rectangle will eventually grow to the full width of its parent, because both left and right anchors will be simultaneously set during binding update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceb48859fde8c99b22dd4383cffa1995d35f78a" translate="yes" xml:space="preserve">
          <source>Because the instance of &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; used in QVariant::Time does not include a zone offset, an instance of QVariant::Time should not be bound to an XQuery variable of type &lt;code&gt;xs:time&lt;/code&gt;, unless the &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; is UTC. When binding a non-UTC &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; to an XQuery variable, it should first be passed as a string, or converted to a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; with an arbitrary date, and then bound to an XQuery variable of type &lt;code&gt;xs:dateTime&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea780c830068f8d8f11f5fa47488c304c83de68" translate="yes" xml:space="preserve">
          <source>Because the node model can be accessed concurrently by threads in the Qt XML Patterns module, subclasses of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; must be written to be &lt;a href=&quot;qxmlquery#reentrancy-and-thread-safety&quot;&gt;thread-safe&lt;/a&gt;. Classes that simplify implementing thread-safety include &lt;a href=&quot;qreadlocker&quot;&gt;QReadLocker&lt;/a&gt; and &lt;a href=&quot;qwritelocker&quot;&gt;QWriteLocker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c93cfa989b03256dce20750d1f4f8ba6cab04e2" translate="yes" xml:space="preserve">
          <source>Because the peer certificate is set during the handshake phase, it is safe to access the peer certificate from a slot connected to the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket::sslErrors&lt;/a&gt;() signal, &lt;a href=&quot;qnetworkreply#sslErrors&quot;&gt;QNetworkReply::sslErrors&lt;/a&gt;() signal, or the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;QSslSocket::encrypted&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dded309e24f67569d9603bd418ddeaded50d3d7" translate="yes" xml:space="preserve">
          <source>Because the peer certificate is set during the handshake phase, it is safe to access the peer certificate from a slot connected to the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;sslErrors&lt;/a&gt;() signal or the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f028f2627729673db99c2c9933f6e7389862d4" translate="yes" xml:space="preserve">
          <source>Because the replica is dynamically acquired, no &lt;code&gt;.rep&lt;/code&gt; file is required unlike in &lt;a href=&quot;#qtro-example1&quot;&gt;Example 1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648ca7cb74c7995cdd2aaa287b296a7214b29bc7" translate="yes" xml:space="preserve">
          <source>Because the source can be in a different process or even on a different device, there are concerns in QtRO that you won&amp;rsquo;t run into when developing without Inter-Process Communication (IPC). Specifically, what happens if the process or device isn&amp;rsquo;t there? This is where the additions to the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; API come in. There is an &lt;a href=&quot;qremoteobjectreplica#initialized&quot;&gt;initialized()&lt;/a&gt; signal that is emitted once the replica has received the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;source&lt;/a&gt; state from the QtRO network. There is also an &lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid&lt;/a&gt; property and a &lt;a href=&quot;qremoteobjectreplica#stateChanged&quot;&gt;stateChanged()&lt;/a&gt; signal to alert you if the connection is lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dfd10188d68dd06502a04b9385fb6d3ec03a9d" translate="yes" xml:space="preserve">
          <source>Because there is a zero weight transition to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b58dae93debb15507b623fa400567a0fdca3fef" translate="yes" xml:space="preserve">
          <source>Because this example involves using a direct connection between nodes, step 2 for &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; creation is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de66a8bf053af4007e7df360ff7a87e62790f8ce" translate="yes" xml:space="preserve">
          <source>Because this type is for convenience in QML, it does not support enumerations directly, so enumerations from &lt;code&gt;VideoOutput&lt;/code&gt; are used to access the available fill modes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e743c1a87d750f030d766dda9a4823179d51a3b" translate="yes" xml:space="preserve">
          <source>Because we had the &lt;code&gt;moc&lt;/code&gt; for signals and slots, we could add other useful things to it that could not be done with templates. Among these are scoped translations via a generated &lt;code&gt;tr()&lt;/code&gt; function, and an advanced property system with introspection and extended runtime type information. The property system alone is a great advantage: a powerful and generic user interface design tool like Qt Designer would be a lot harder to write - if not impossible - without a powerful and introspective property system. But it does not end here. We also provide a dynamic &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;T&amp;gt;() mechanism that does not rely on the system's RTTI and thus does not share its limitations. We use it to safely query interfaces from dynamically loaded components. Another application domain are dynamic meta objects. We can e.g. take ActiveX components and at runtime create a meta object around it. Or we can export Qt components as ActiveX components by exporting its meta object. You cannot do either of these things with templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a8c758cfa2308ff358dfa9f48e0da044444c7a" translate="yes" xml:space="preserve">
          <source>Before Qt 5.5 the default behavior of &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; was to preserve the rendered contents between &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() calls. Since Qt 5.5 the default behavior is non-preserved because this provides better performance and the majority of applications have no need for the previous content. This also resembles the semantics of an OpenGL-based &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; and matches the default behavior of &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; in that the color and ancillary buffers are invalidated for each frame. To restore the preserved behavior, call &lt;a href=&quot;qopenglwidget#setUpdateBehavior&quot;&gt;setUpdateBehavior&lt;/a&gt;() with &lt;code&gt;PartialUpdate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e859665857791046f597652e0fbbd9c2f6d054c" translate="yes" xml:space="preserve">
          <source>Before a form can be used, the objects on the form need to be placed into layouts. This ensures that the objects will be displayed properly when the form is previewed or used in an application. Placing objects in a layout also ensures that they will be resized correctly when the form is resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6c2e51a0e9f5ccf88373be4d2c59183e72b5e3" translate="yes" xml:space="preserve">
          <source>Before a row is deleted from the database, the &lt;a href=&quot;qsqltablemodel#beforeDelete&quot;&gt;beforeDelete&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbb1fe5ee0ee3b72d10e425aba820811a908afe" translate="yes" xml:space="preserve">
          <source>Before accessing the device, &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;() must be called to set the correct &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; (such as &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadOnly&lt;/a&gt; or &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadWrite&lt;/a&gt;). You can then write to the device with &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and read by calling either &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(). Call &lt;a href=&quot;qiodevice#close&quot;&gt;close&lt;/a&gt;() when you are done with the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989f3b7dada54cbb3e30752b2d783b9c684c05ee" translate="yes" xml:space="preserve">
          <source>Before any Qt application can be started, the &lt;a href=&quot;http://www.qnx.com/developers/docs/7.0.0/#com.qnx.doc.screen/topic/manual/cscreen_about.html&quot;&gt;QNX Screen Graphics Subsystem&lt;/a&gt; (also called just &quot;Screen&quot;) must be running. The Screen consists not only of a driver, but also includes several utilities and other services which are used by Qt. This includes processing of mouse and keyboard events as well. You can ensure that the Screen is configured and running correctly by verifying that a graphics application, like &lt;code&gt;gles2-gears&lt;/code&gt;, can be started and runs without problems. Most of the recent sample OS build scripts in the SDP include sections with all components and start commands for the Screen. Use them as a reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2409f984abcaa5cf9769ab44bf5a840d43f2fc78" translate="yes" xml:space="preserve">
          <source>Before building any Qt applications, you should test that Xcode is set up correctly, for example, by running one of the standard Xcode application templates on your device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd241819b08336f60056ee37cd1f6b28848db13" translate="yes" xml:space="preserve">
          <source>Before building your application, add the following statement to your &lt;code&gt;.pro&lt;/code&gt; file to link against the Qt Purchasing library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537c8c757a80eedf3e34f0d1b676b9aea9278a80" translate="yes" xml:space="preserve">
          <source>Before calling any of the exposed OpenGL functions you must ensure that the object has resolved the function pointers to the OpenGL functions. This only needs to be done once per instance with initializeOpenGLFunctions(). Once initialized, the object can be used to call any OpenGL function for the corresponding version and profile. Note that initializeOpenGLFunctions() can fail in some circumstances so check the return value. Situations in which initialization can fail are if you have a functions object for a version or profile that contains functions that are not part of the context being used to resolve the function pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1e5682ba0e7be485a6736bcbfc2eaee7b87907" translate="yes" xml:space="preserve">
          <source>Before changing any state attributes, you should save the current state for future reference. The context maintains a stack of drawing states. Each state consists of the current transformation matrix, clipping region, and values of the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242de76890f489f5d8570299fd96ecf7b9adee2a" translate="yes" xml:space="preserve">
          <source>Before establishing a network connection, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; and &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; perform a name lookup, translating the host name you're connecting to into an IP address. This operation is usually performed using the DNS (Domain Name Service) protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739d1c32e3057278848648cd15194048bb65c2ed" translate="yes" xml:space="preserve">
          <source>Before examining how selections are handled, you may find it useful to examine the concepts used in the model/view framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d91ccb471d722633d633f925a75d85fc445d9b" translate="yes" xml:space="preserve">
          <source>Before installing Qt, you first need to install Xcode. You will find it in the Mac App Store &lt;a href=&quot;http://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;amp;mt=12#&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e1f339a92f43164d55a22d95b989389bf87011" translate="yes" xml:space="preserve">
          <source>Before invoking this function, the context and the framebuffer are bound, and the viewport is set up by a call to glViewport(). No other state is set and no clearing or drawing is performed by the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772393a48d62c36b41c56d87e7323dfd17c6c2ac" translate="yes" xml:space="preserve">
          <source>Before invoking this function, the context and the framebuffer, if there is one, are bound, and the viewport is set up by a call to glViewport(). No other state is set and no clearing or drawing is performed by the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441de427d2c29b02aebbfca6014d837563355a05" translate="yes" xml:space="preserve">
          <source>Before it can be used you need to set the proper format and call &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a08706a08d35ac6502cd4ff9413581f6f641a32" translate="yes" xml:space="preserve">
          <source>Before items can be added to the tree widget, the number of columns must be set with &lt;a href=&quot;qtreewidget#columnCount-prop&quot;&gt;setColumnCount&lt;/a&gt;(). This allows each item to have one or more labels or other decorations. The number of columns in use can be found with the &lt;a href=&quot;qtreewidget#columnCount-prop&quot;&gt;columnCount&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819e7517a8fb185ff43bd9542779312eb943cfe6" translate="yes" xml:space="preserve">
          <source>Before items can be added to the tree widget, the number of columns must be set. For example, we could define two columns, and create a header to provide labels at the top of each column:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244a9650f1ed41aa81653c37204eab5fdd8adff8" translate="yes" xml:space="preserve">
          <source>Before performing the comparison, the two datetimes are converted to &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt; to ensure that the result is correct if daylight-saving (DST) applies to one of the two datetimes and but not the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add274d548d5a6979038c3a400976ef492182ec1" translate="yes" xml:space="preserve">
          <source>Before performing the comparison, the two datetimes are converted to &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt; to ensure that the result is correct if daylight-saving (DST) applies to one of the two datetimes but not the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e361251921cfa61245b8519573a768a5aac5a0" translate="yes" xml:space="preserve">
          <source>Before reading an picture you must set an IO device or a file name. If both an IO device and a file name have been set, the IO device will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04113b55309caf2d9b4508811b3ddc14afbb7d8" translate="yes" xml:space="preserve">
          <source>Before rendering the graph, the renderer will do an update pass over the subtree to propagate the opacity to its children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ea9454d3d5c2f6b60b5cbdc4d85dde6f699ccd" translate="yes" xml:space="preserve">
          <source>Before rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4901595e911184ed6aa08f43e449818e698c1d" translate="yes" xml:space="preserve">
          <source>Before returning the reference: if this &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; was an array but the key is out of range, the array is first converted to a map (so that &lt;code&gt;map[i]&lt;/code&gt; is &lt;code&gt;array[i]&lt;/code&gt; for each index, &lt;code&gt;i&lt;/code&gt;, with valid &lt;code&gt;array[i]&lt;/code&gt;); otherwise, if it was not a map it will be over-written with an empty map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adb6d28d7636e2e7fb03e45bae8dbad7037d32d" translate="yes" xml:space="preserve">
          <source>Before returning the reference: if this &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; was an array, it is first converted to a map (so that &lt;code&gt;map[i]&lt;/code&gt; is &lt;code&gt;array[i]&lt;/code&gt; for each index, &lt;code&gt;i&lt;/code&gt;, with valid &lt;code&gt;array[i]&lt;/code&gt;); otherwise, if it was not a map it will be over-written with an empty map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e32a6a56d0460670de1f5767114c22893e77a3b" translate="yes" xml:space="preserve">
          <source>Before running QDoc, you must create a QDoc configuration file to tell QDoc where to find the source files that contain the QDoc comments. The pathname to your configuration file is passed to QDoc on the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080c37389cfc734e21a73b8c449b8db23c4084f2" translate="yes" xml:space="preserve">
          <source>Before running configure and building Qt 5 it is required to open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6778c5965235d30f929eb46c09bd934a18c5915e" translate="yes" xml:space="preserve">
          <source>Before synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3a70e757cce8528d377956901f17662da8b0ba" translate="yes" xml:space="preserve">
          <source>Before the first record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7ba6072dddf0e88dd72363532b937e673ab719" translate="yes" xml:space="preserve">
          <source>Before the help engine can be used, it must be initialized by calling &lt;a href=&quot;qhelpenginecore#setupData&quot;&gt;setupData&lt;/a&gt;(). At the beginning of the setup process the signal &lt;a href=&quot;qhelpenginecore#setupStarted&quot;&gt;setupStarted&lt;/a&gt;() is emitted. From this point on until the signal &lt;a href=&quot;qhelpenginecore#setupFinished&quot;&gt;setupFinished&lt;/a&gt;() is emitted, is the help data in an undefined meaning unusable state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc3ee12bae17f0586d8474c0f0f9c8c93f58062" translate="yes" xml:space="preserve">
          <source>Before the list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb26f3bddd8b2126e161104e2cbdb5e83d6b901" translate="yes" xml:space="preserve">
          <source>Before the machine can be started, the &lt;a href=&quot;qml-qtqml-statemachine-state#initialState-prop&quot;&gt;initialState&lt;/a&gt; must be set. The initial state is the state that the machine enters when started. You can then set running property to true or &lt;a href=&quot;qml-qtqml-statemachine-statemachine#start-method&quot;&gt;start()&lt;/a&gt; the state machine. The started signal is emitted when the initial state is entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d8bd0f3e893d8557c3dacb3bd162d2e9c9aba1" translate="yes" xml:space="preserve">
          <source>Before the machine can be started, the &lt;a href=&quot;qstate#initialState&quot;&gt;initial state&lt;/a&gt; must be set. The initial state is the state that the machine enters when started. You can then &lt;a href=&quot;qstatemachine#start&quot;&gt;start&lt;/a&gt;() the state machine. The &lt;a href=&quot;qstatemachine#started&quot;&gt;started&lt;/a&gt;() signal is emitted when the initial state is entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7144a71f332458dc6d5d2c7db5112bb3f48cf2c" translate="yes" xml:space="preserve">
          <source>Before the rectangle is returned it must be mapped to screen coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f101dbfba687c8d499d9a5eccbd977ebdd66bd53" translate="yes" xml:space="preserve">
          <source>Before the regular expression test, all the 0 bytes in the file header are converted to 1 bytes. This is done because when Qt was ASCII-based, &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; could not handle 0 bytes in strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c378636ec4474c8ac5e926ac729083fd3adab488" translate="yes" xml:space="preserve">
          <source>Before the search engine can be used, one has to instantiate at least a &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; object that needs to be passed to the search engines constructor. This is required as the search engine needs to be connected to the help engines setupFinished() signal to know when it can start to index documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8ea79c909a6c8158a422d2f96e38f89407ef9c" translate="yes" xml:space="preserve">
          <source>Before this signal has been emitted for the first time, the reading object will have uninitialized data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4cece665d2e4879925a23a6bd8ce34238c0605" translate="yes" xml:space="preserve">
          <source>Before using the connection, it must be initialized. e.g., call some or all of &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;(), and &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;(), and, finally, &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d6c40eb7bf5afdeda21111a251216dd4ebbe66" translate="yes" xml:space="preserve">
          <source>Before we begin, we need to ensure that the custom type we are creating meets all the requirements imposed by &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;. In other words, it must provide:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a70db6020e850a49473e4cfb3f7ef70c5998a6" translate="yes" xml:space="preserve">
          <source>Before we can apply a namespace to element or attribute names we must declare it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb7c55ee9146b18141570dc55c0b10d90e6cf3e" translate="yes" xml:space="preserve">
          <source>Before we can start implementing the wrapper class we need a way to convert Qt's datatypes (and potentionally your own) into .NET datatypes, e.g. &lt;code&gt;QString&lt;/code&gt; objects need to be converted into objects of type &lt;code&gt;String*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4fe428ee78a0a17672317ee1b98057775f4a8f" translate="yes" xml:space="preserve">
          <source>Before writing an picture you must set an IO device or a file name. If both an IO device and a file name have been set, the IO device will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d512980b3951b2a8d14a039310cf1ea1e1426a0c" translate="yes" xml:space="preserve">
          <source>Before you can operate on the products in your code, they must be registered in the QML graph. You start by making a &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; item, and then create each product as a child of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73768622789dfc2dd75da4ad7483343832dd3e73" translate="yes" xml:space="preserve">
          <source>Before you can register new products available to the in-app purchasing service, you need to register your application in iTunes Connect. iTunes Connect is the place where you register an app when you want to submit it to the Apple iOS App Store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baa0b40586fcd76d53c402b517e8a5f263e622d" translate="yes" xml:space="preserve">
          <source>Before you can upload your application to Google Play, you must prepare it for submission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a21392c18ac8a8cc3d91e3706dffa7a5d4b8fa7" translate="yes" xml:space="preserve">
          <source>Before you get started, ensure that your development environment fulfills the &lt;a href=&quot;windows-requirements#&quot;&gt;requirements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5af69cae7a85cf7abb226b1bebe337621474c1" translate="yes" xml:space="preserve">
          <source>Before you start using the APIs provided by this module, ensure that the gamepad is detected by your development environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67fb86a12b7170121404125e185a3a671f0ce67" translate="yes" xml:space="preserve">
          <source>Begin painting operations on paint device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe9132f44bf9a7a5c1a4fd85368d557533f3cb0" translate="yes" xml:space="preserve">
          <source>Begin painting operations on the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bb22ac53c3dfbc3e24cad89028487f8e146fff" translate="yes" xml:space="preserve">
          <source>BeginNativeGesture ZoomNativeGesture ZoomNativeGesture ZoomNativeGesture EndNativeGesture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3472a767717d24610fcbea88ab3eb1234a01fac9" translate="yes" xml:space="preserve">
          <source>Beginning of a sequence of touch-screen or track-pad events (&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60267254f321648699eb2a727f04e236ef3936f" translate="yes" xml:space="preserve">
          <source>Beginning with Qt 5.11 &lt;a href=&quot;qml-qtqml-models-listelement&quot;&gt;ListElement&lt;/a&gt; also allows assigning a function declaration to a role. This allows the definition of ListElements with callable actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148795fa7f40f87e4516761dcb332ca34dd9d3a9" translate="yes" xml:space="preserve">
          <source>Beginning with Qt 5.5, a new way to run QDoc is available that reduces the time it takes to generate the Qt5 documentation by as much as 90%. The new way to run QDoc is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1091c5f6e77da8975ee6fe8da16f9349336338fb" translate="yes" xml:space="preserve">
          <source>Begins a column insertion operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb78e47478b151aa74429b63777cd0e1db659ec" translate="yes" xml:space="preserve">
          <source>Begins a column move operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a081494346196bac987d08c4b12a2b265c59bc" translate="yes" xml:space="preserve">
          <source>Begins a column removal operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168b894d2b71ac4035764d3ad7f6c7821c160010" translate="yes" xml:space="preserve">
          <source>Begins a model reset operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691ac7b3acfa8cee21271cf20d76a680b9c8ded5" translate="yes" xml:space="preserve">
          <source>Begins a row insertion operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16409747c3cc3bed253e02ef0c9e5bba7112cc2a" translate="yes" xml:space="preserve">
          <source>Begins a row move operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad4aaebbbb140b6ea265f55375c90ccc55d3dde" translate="yes" xml:space="preserve">
          <source>Begins a row removal operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ab0fea0b73b73148235b0845837e541ba860f8" translate="yes" xml:space="preserve">
          <source>Begins a sequence of touch events through a simulated &lt;a href=&quot;qtouchdevice#DeviceType-enum&quot;&gt;QTouchDevice::TouchScreen&lt;/a&gt;. Events are delivered to the window containing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df07d72d848789d2c788f0645d0e3c0cb4d899" translate="yes" xml:space="preserve">
          <source>Begins a transaction on the database if the driver supports transactions. Returns &lt;code&gt;true&lt;/code&gt; if the operation succeeded. Otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2146acdbb413ce8e85bbb1271da9940a7ac133c9" translate="yes" xml:space="preserve">
          <source>Begins composition of a macro command with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650d0734930669d8b1e5a50921ee340d19def621" translate="yes" xml:space="preserve">
          <source>Begins execution of the thread by calling &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;(). The operating system will schedule the thread according to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4da2a3ff164340bb06277827c5e93f84936937d" translate="yes" xml:space="preserve">
          <source>Begins geocoding for a location matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f554c02bbbc62adff852dc1c000f476ee7bb68" translate="yes" xml:space="preserve">
          <source>Begins painting on the backing store surface in the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62740efafd9830eee34b95937db476afb09779f0" translate="yes" xml:space="preserve">
          <source>Begins painting the paint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fead3f218f73813e5f1b559c7cbaaa1b5d4760ea" translate="yes" xml:space="preserve">
          <source>Begins the calculation of the route specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cf2b9797a7deae3e777d5fdcb4cfc7790fe932" translate="yes" xml:space="preserve">
          <source>Begins the geocoding of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705e10501e3ba90db2479699bfa401e93b7bb4cc" translate="yes" xml:space="preserve">
          <source>Begins the layout process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80819ec27b05544c228942ab94221de0163e8c3" translate="yes" xml:space="preserve">
          <source>Begins the process of updating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f333202c53aa2d6d65d517fe8d573cc92858c8" translate="yes" xml:space="preserve">
          <source>Begins the reverse geocoding of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13346cee30788afd37e487299a7fd00e4cd1589c" translate="yes" xml:space="preserve">
          <source>Behaves identically to &lt;a href=&quot;qtest#qExec&quot;&gt;qExec&lt;/a&gt;(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *, int, char**) but takes a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab5ca40920f29ec2174727123203a1960a26911" translate="yes" xml:space="preserve">
          <source>Behaves like &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt;(), but doesn't instantiate a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object. Use this macro for really simple stand-alone non-GUI tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023253aa5665de4a4490d595e399cde701a6472c" translate="yes" xml:space="preserve">
          <source>Behaves like &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt;(), but instantiates a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instead of the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object. Use this macro if your test case doesn't need functionality offered by &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, but the event loop is still necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="f591ac6ff828455fc522b863620fe9796929e9f9" translate="yes" xml:space="preserve">
          <source>Behavior (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21db15e7a8ba9a3d088d9dbc5089adafb88e3b4" translate="yes" xml:space="preserve">
          <source>Behavior Animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7162a5ff7f865e814bdb874f4da57010f8284e2d" translate="yes" xml:space="preserve">
          <source>Behavior QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb9b35d7853f32038fbc327dc6e016bacb668cd" translate="yes" xml:space="preserve">
          <source>Behavior types for &lt;a href=&quot;qitemmodelbardataproxy#multiMatchBehavior-prop&quot;&gt;QItemModelBarDataProxy::multiMatchBehavior&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a0cb9edb71139ef5f883ec49216015467da954" translate="yes" xml:space="preserve">
          <source>Behavior types for &lt;a href=&quot;qitemmodelsurfacedataproxy#multiMatchBehavior-prop&quot;&gt;QItemModelSurfaceDataProxy::multiMatchBehavior&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498ed0cd6756fbf6cf728d92c148f341771d2ecd" translate="yes" xml:space="preserve">
          <source>Behavior.animation</source>
          <target state="translated">Behavior.animation</target>
        </trans-unit>
        <trans-unit id="5a57ea5832adcb5e44633f1cbcbc5874e9656055" translate="yes" xml:space="preserve">
          <source>Behavior.enabled</source>
          <target state="translated">Behavior.enabled</target>
        </trans-unit>
        <trans-unit id="510a5416def320bd66e12eaff72e300504b7209b" translate="yes" xml:space="preserve">
          <source>Behavior.targetValue</source>
          <target state="translated">Behavior.targetValue</target>
        </trans-unit>
        <trans-unit id="c250fad45c604fd7f85316e2df871b83e169baa7" translate="yes" xml:space="preserve">
          <source>Behind the scene, the view calls the &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() virtual function on the model to reorder the data in the model. To make your data sortable, you can either implement &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() in your model, or use a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; to wrap your model -- &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; provides a generic &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() reimplementation that operates on the &lt;a href=&quot;qsortfilterproxymodel#sortRole-prop&quot;&gt;sortRole&lt;/a&gt;() (&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt; by default) of the items and that understands several data types, including &lt;code&gt;int&lt;/code&gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;. For hierarchical models, sorting is applied recursively to all child items. String comparisons are case sensitive by default; this can be changed by setting the &lt;a href=&quot;qsortfilterproxymodel#sortCaseSensitivity-prop&quot;&gt;sortCaseSensitivity&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0ccbe3018e8d326bf7728e43e6a6879b5985ab" translate="yes" xml:space="preserve">
          <source>Behind the scenes, &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; automatically increments the reference count whenever an &lt;code&gt;Employee&lt;/code&gt; object is copied, assigned, or passed as a parameter. It decrements the reference count whenever an &lt;code&gt;Employee&lt;/code&gt; object is deleted or goes out of scope. The shared &lt;code&gt;EmployeeData&lt;/code&gt; object is deleted automatically if and when the reference count reaches 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb6c1fbb291449ab6a499954ba3937d2907c091" translate="yes" xml:space="preserve">
          <source>Behind the scenes, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; uses &lt;a href=&quot;implicit-sharing#&quot;&gt;implicit sharing&lt;/a&gt; (copy-on-write) to reduce memory usage and to avoid the needless copying of data. This also helps reduce the inherent overhead of storing 16-bit characters instead of 8-bit characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c1e7f76bc3499b63c6505cf9b0d73a9b223ab6" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Qt Remote Objects batches data() lookups and prefetches data when possible to make the model interaction as responsive as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5219ac3afb5ef47e5fb40e6ea263d10293a9b9" translate="yes" xml:space="preserve">
          <source>Behind the scenes, the QML engine monitors the property's dependencies (that is, the variables in the binding expression). When a change is detected, the QML engine re-evaluates the binding expression and applies the new result to the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7141d151711ec9f5c1a412229f6213dfa16e0c25" translate="yes" xml:space="preserve">
          <source>Beijing</source>
          <target state="translated">Beijing</target>
        </trans-unit>
        <trans-unit id="f54521da7b41f3f963cef18c98c6e637e7b084e3" translate="yes" xml:space="preserve">
          <source>Being a declarative language, a piece of QML code provides minimal details about the entities defined. In such a scenario, the QML debugger is a very useful utility that enables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8378494a20643eff240d4e015779c61f20e6a1" translate="yes" xml:space="preserve">
          <source>Being a strongly typed language, C++ is best suited for an application's logic. Typically, such code performs tasks such as complex calculations or data processing, which are faster in C++ than QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8baa4748f88acf655b22529fbe7f0b02321f76a" translate="yes" xml:space="preserve">
          <source>Being message-oriented, SCTP transports a sequence of messages, rather than transporting an unbroken stream of bytes as does TCP. Like in UDP, in SCTP a sender sends a message in one operation, and that exact message is passed to the receiving application process in one operation. But unlike UDP, the delivery is guaranteed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a010041fc63195c5e85039d8cbf775d15a34a5" translate="yes" xml:space="preserve">
          <source>Being so central, the button widget has grown to accommodate a great many variations in the past decade. The Microsoft style guide now shows about ten different states of Windows push buttons and the text implies that there are dozens more when all the combinations of features are taken into consideration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbf25057b953c66b82b370cbfc8860281619cea" translate="yes" xml:space="preserve">
          <source>Belarusian (Cyrillic)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466d088bfb8331e98c02fa04090595bc45ea27d8" translate="yes" xml:space="preserve">
          <source>Below are examples of the 9-patch image being resized to one and a half times its original size in various dimensions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97546b5d68ca8f6a77cd56f90e88a92171956a08" translate="yes" xml:space="preserve">
          <source>Below are more examples of the 9-patch image being resized, but this time demonstrating how the padding 9-patch lines work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a548a4973fb8ac49cac9cd0cb75d41cf4810202" translate="yes" xml:space="preserve">
          <source>Below are two &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; objects that are specified using this syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36ff47e1480154b221cc2cbd6f81c9132a058b8" translate="yes" xml:space="preserve">
          <source>Below is a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; with a &lt;code&gt;calculateHeight()&lt;/code&gt; method that is called when assigning the &lt;code&gt;height&lt;/code&gt; value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70b28a17b9f296a713f3851c763d8c4fb7281bd" translate="yes" xml:space="preserve">
          <source>Below is a &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; object and a &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object. The &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; object's &lt;code&gt;id&lt;/code&gt; value is set to &quot;myTextInput&quot;. The &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object sets its &lt;code&gt;text&lt;/code&gt; property to have the same value as the &lt;code&gt;text&lt;/code&gt; property of the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, by referring to &lt;code&gt;myTextInput.text&lt;/code&gt;. Now, both items will display the same text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8efaca94961abc67a21b064135070e5500eaa23" translate="yes" xml:space="preserve">
          <source>Below is a Column that contains three rectangles of various sizes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35470bc9bde307efbeeb75d99be849b8b3014f92" translate="yes" xml:space="preserve">
          <source>Below is a Flow that contains various &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a3f01706464abd7a875b17b4a76231886d30cd" translate="yes" xml:space="preserve">
          <source>Below is a Row that contains three rectangles of various sizes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e36a8f636410cb1e7ea23d7dc2d83e39930ef35" translate="yes" xml:space="preserve">
          <source>Below is a code snippet that shows how a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; object can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c8780a3e072d747fcb4047d778858c83eea8f5" translate="yes" xml:space="preserve">
          <source>Below is a complete list of all feature macros for &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1d865a90dfc9188088c65cbe4d0475d5740d53" translate="yes" xml:space="preserve">
          <source>Below is a complete list of all feature macros for &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866e4eaaf83bd84e7b8f06930a8141894af38ef6" translate="yes" xml:space="preserve">
          <source>Below is a complete list of material classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96db667f84d45cae888435d740b505f996a2128" translate="yes" xml:space="preserve">
          <source>Below is a modification of the &lt;code&gt;displaced&lt;/code&gt; transition from the previous example. It adds a &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; with nested &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; objects that reference &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item to access each item's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values at the start of their transitions. This allows each item to animate to an intermediate position relative to its starting point for the transition, before animating to its final position in the view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690899f57953fe1742aa0ed50ca16d854bc3d0a4" translate="yes" xml:space="preserve">
          <source>Below is a more complex example involving more objects and types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc79f9e268dc011bdddda13ace62dc414589e8c2" translate="yes" xml:space="preserve">
          <source>Below is a snippet illustrating how a geometry composed of position and color vertices can be built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e7122391443a7a1755825a099174bf81faf3f1" translate="yes" xml:space="preserve">
          <source>Below is a tree of the widget's style structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb84eaa9c5693ec15313c32a0daac4e0bea37a8" translate="yes" xml:space="preserve">
          <source>Below is an example configuration for the BD-SL-i.MX6. For most VxWorks boards the configure command will look very similar. By default, Qt 5 is configured to use shared libraries. To build Qt 5 statically, add &lt;code&gt;-static&lt;/code&gt; option for configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6de030bc79c0e6768d221104cec4c83f852d44b" translate="yes" xml:space="preserve">
          <source>Below is an example of a simple radial gradient. Here the colors are interpolated between the specified point and the end points on a circle specified by the radius:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf4c842e7bfff486fc4e62deb921184134c2fb2" translate="yes" xml:space="preserve">
          <source>Below is an example that changes the needle to a basic orange &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d741d7112a714204d1c0d1e0699941f00f30fcb" translate="yes" xml:space="preserve">
          <source>Below is an example that demonstrates a custom language dialog implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21749a8982e2656c1c04120108704942c4feeb0f" translate="yes" xml:space="preserve">
          <source>Below is the complete declaration and definition of the requestor class (&lt;code&gt;DynamicClient&lt;/code&gt; in this example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac5e4226ebd08ca82dc1ce6f712c29b69c4893c" translate="yes" xml:space="preserve">
          <source>Below the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f43e01cc11619a5000997c179e2a8e03aa4d7f6" translate="yes" xml:space="preserve">
          <source>Below we present some examples of validators. In practice they would normally be associated with a widget as in the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e889955012c40dc4299c83d25b55bc6d50a09516" translate="yes" xml:space="preserve">
          <source>Below we present the same example using each of the four different binding approaches, as well as one example of binding values to a stored procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac5e2aeac9ded3f6d9a19285dcd372e55ab6835" translate="yes" xml:space="preserve">
          <source>Below you can find an example of a &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; object with a &lt;a href=&quot;qml-qtquick-regexpvalidator&quot;&gt;RegExpValidator&lt;/a&gt; specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b44af4108710ebe1fd5bfe24ab7492d18b54c1" translate="yes" xml:space="preserve">
          <source>Below you can find an example taken from the index.qdoc file used to generate index.html for Qt 4.7:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54a363a1592cf99273cfdb47216f3cd1db21aee" translate="yes" xml:space="preserve">
          <source>Below you will find practical guidelines on how and when to use the controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4a2f91ac6d4752a586182a454ec762d3fb518e" translate="yes" xml:space="preserve">
          <source>Below you will find the full contents of &lt;code&gt;qtgui.qdocconf&lt;/code&gt;. The subsequent section will discuss every statement in the qdocconf file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f12d80e39982748f82122e7553e67d8405fb5a4" translate="yes" xml:space="preserve">
          <source>Below you will find the full contents of qtgui.qdocconf. The subsequent section will discuss every statement in the qdocconf file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8cb18cee190170c83d62c99ad3aa8cd0705c4a" translate="yes" xml:space="preserve">
          <source>Below, the &lt;code&gt;QtQuick&lt;/code&gt; module is imported into the namespace &quot;CoreItems&quot;. Now, any references to types from the &lt;code&gt;QtQuick&lt;/code&gt; module must be prefixed with the &lt;code&gt;CoreItems&lt;/code&gt; name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e6b6da0aa99cfad45805c59c75ba5e1ae593a1" translate="yes" xml:space="preserve">
          <source>Below, the &lt;code&gt;messageReceived&lt;/code&gt; signal is connected to three methods using the &lt;code&gt;connect()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf9da3ccf4290ae081509b7acfe511ab4bc4d3f" translate="yes" xml:space="preserve">
          <source>Below, you will find more information about building Qt from source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f065f69811884899b590a9d9e799d1b1b4162b4" translate="yes" xml:space="preserve">
          <source>Below, you'll find an example of how to create a temperature gauge that changes color as its value increases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f46ac72b3634f96c6860b1ed26d9d4cd71d21aa" translate="yes" xml:space="preserve">
          <source>Benchmarks</source>
          <target state="translated">Benchmarks</target>
        </trans-unit>
        <trans-unit id="198e9c0851a2cebe3440bd1cafd71b98e2d83392" translate="yes" xml:space="preserve">
          <source>Bengali</source>
          <target state="translated">Bengali</target>
        </trans-unit>
        <trans-unit id="062b06ba8e755765c6b049809b7430fd54fe5b21" translate="yes" xml:space="preserve">
          <source>Berlin</source>
          <target state="translated">Berlin</target>
        </trans-unit>
        <trans-unit id="2180a7f60706ff8db31552e0aa81fa61dc3de8ea" translate="yes" xml:space="preserve">
          <source>Besides being created or deleted, services may change owners without a unregister/register operation happening. So the &lt;a href=&quot;qdbusservicewatcher#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt;() and &lt;a href=&quot;qdbusservicewatcher#serviceUnregistered&quot;&gt;serviceUnregistered&lt;/a&gt;() signals may not be emitted if that happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645a4adbe73bea08a1c73846b1454b7b517fc04b" translate="yes" xml:space="preserve">
          <source>Besides game controllers, it also supports the tvOS remote (microGamepad). The mapping for this is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77360814878c33ffaa7711e053dbb31a5f032cec" translate="yes" xml:space="preserve">
          <source>Besides performance, one advantage of placeholders is that you can easily specify arbitrary values without having to worry about escaping special characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f44649c62b5cd305889d59a153b91f1c669848" translate="yes" xml:space="preserve">
          <source>Besides returning &lt;code&gt;false&lt;/code&gt; from &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;() or &lt;code&gt;0&lt;/code&gt; from &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(), critical errors will also get printed to the debug output via &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;(). Additional logging can be requested by enabling debug output for the logging category &lt;code&gt;qt.vulkan&lt;/code&gt;. The actual Vulkan error code from instance creation can be retrieved by calling &lt;a href=&quot;qvulkaninstance#errorCode&quot;&gt;errorCode&lt;/a&gt;() after a failing &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba81879d037e3c24612829943a2da91d8e87206b" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;roleNames()&lt;/code&gt; and &lt;code&gt;data()&lt;/code&gt;, editable models must reimplement the &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt; method to save changes to existing model data. The following version of the method checks if the given model index is valid and the &lt;code&gt;role&lt;/code&gt; is equal to &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097bc2eb803b4911747ae3b802b4722fa2dcdff3" translate="yes" xml:space="preserve">
          <source>Besides the main conceptual difference of being backed by a framebuffer object, there are a number of smaller, internal differences between &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; and the older QGLWidget:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519b499658db9e7786867dff9767549a35875a25" translate="yes" xml:space="preserve">
          <source>Besides these basic UI controls offered by Qt Quick itself, a rich set of UI controls are also available with Qt Quick Controls 2. They cater to the most common use cases without any change, and offer a lot more possibilities with their customization options. In particular, Qt Quick Controls 2 provides styling options that align with the latest UI design trends. If these UI controls do not satisfy your application's needs, only then it is recommended to create a custom control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9497fd63409680545d14a9935e5947e4042e3285" translate="yes" xml:space="preserve">
          <source>Besides this, a QML profiler enables you to get necessary diagnostic information, allowing you to analyze the application code for performance issues. For example, too much JavaScript in each frame, long-running C++ functions, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632f2a74d5af476c5c3c9ed3816f168b157ffd45" translate="yes" xml:space="preserve">
          <source>Besides using &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;'s constructors, you can also set the device or string &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; operates on by calling &lt;a href=&quot;qtextstream#setDevice&quot;&gt;setDevice&lt;/a&gt;() or &lt;a href=&quot;qtextstream#setString&quot;&gt;setString&lt;/a&gt;(). You can seek to a position by calling &lt;a href=&quot;qtextstream#seek&quot;&gt;seek&lt;/a&gt;(), and &lt;a href=&quot;qtextstream#atEnd&quot;&gt;atEnd&lt;/a&gt;() will return true when there is no data left to be read. If you call &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt;(), &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; will empty all data from its write buffer into the device and call &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt;() on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcdb9ce10d9123ca46d421b63fddd8f24135bfc" translate="yes" xml:space="preserve">
          <source>Best Practices for QML and Qt Quick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4893c15c78ad1033d9ab14f6e5145330da8717" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;Button&lt;/code&gt; and &lt;code&gt;Dark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1484a2831aaa5c7b12191215fc940394696ea206" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;Button&lt;/code&gt; and &lt;code&gt;Light&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477c1d53aa819ca80842bf925082e4f9213b244d" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;palette.button&lt;/code&gt; and &lt;code&gt;palette.dark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca01f5c73d5e53a95a0d8022181399b8c0b0b001" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;palette.button&lt;/code&gt; and &lt;code&gt;palette.light&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdc389e53b49fd9db94be307d638c975203faac" translate="yes" xml:space="preserve">
          <source>Between the items, the layout distributes some space. The actual amount of space depends on the managed widget's current style, but the common spacing is 4. You can also set your own spacing by calling &lt;a href=&quot;qgraphicslinearlayout#setSpacing&quot;&gt;setSpacing&lt;/a&gt;(), and get the current spacing value by calling &lt;a href=&quot;qgraphicslinearlayout#spacing&quot;&gt;spacing&lt;/a&gt;(). If you want to configure individual spacing for your items, you can call &lt;a href=&quot;qgraphicslinearlayout#setItemSpacing&quot;&gt;setItemSpacing&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd2da8c65866c878329b1312113d3c0f5e0125a" translate="yes" xml:space="preserve">
          <source>Beware that changing the sourceSize will cause the image to be reloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d26dd8a2778e51aea0698aec586437ef3612470" translate="yes" xml:space="preserve">
          <source>Bidirectional Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7341947224c1f44045f4176bc176db150de2f5" translate="yes" xml:space="preserve">
          <source>Bidirectional Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ffc0c8693fd6bff3d62d39d73ebc4e7989eac2" translate="yes" xml:space="preserve">
          <source>Big-endian byte order (also called Network byte order)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1698114af4355c5ccd60424049fded636df6a2" translate="yes" xml:space="preserve">
          <source>Big5</source>
          <target state="translated">Big5</target>
        </trans-unit>
        <trans-unit id="f669791103ab2e426d0fa347a9661db7861ac075" translate="yes" xml:space="preserve">
          <source>Big5 Text Codec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c002db58b45bf4e8ab53744068f3ffd5d129ce" translate="yes" xml:space="preserve">
          <source>Big5-HKSCS</source>
          <target state="translated">Big5-HKSCS</target>
        </trans-unit>
        <trans-unit id="513539c1e18c1a4d9a92833082336be12a292fdf" translate="yes" xml:space="preserve">
          <source>Big5-HKSCS Text Codec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c794f007343b969bc570c5dd057212ece700be" translate="yes" xml:space="preserve">
          <source>Binaries</source>
          <target state="translated">Binaries</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="d8cc5569862385c811d2602253b6889248a64e53" translate="yes" xml:space="preserve">
          <source>Binary Large Objects (BLOBs) can be read and written, but be aware that this process may require a lot of memory. You should use a forward only query to select LOB fields (see &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery::setForwardOnly&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b26882e2cc4ff42fc3ad4f8bd32d18561eef6f7" translate="yes" xml:space="preserve">
          <source>Binary Large Objects are supported through the &lt;code&gt;BYTEA&lt;/code&gt; field type in PostgreSQL server versions &amp;gt;= 7.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93b0c259e545d3cde201a9e3389fd883b26c263" translate="yes" xml:space="preserve">
          <source>Binary Shaders and Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac21b270fbb744327773c389bea23c1600338d77" translate="yes" xml:space="preserve">
          <source>Binary character permitted but not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a4ab6632992fcba0ed945ded62694c9087eb10" translate="yes" xml:space="preserve">
          <source>Binary character required. 0-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e02b0aecb818afe97ad310e29c96ffa1dc2b3e" translate="yes" xml:space="preserve">
          <source>Binary data set with &lt;a href=&quot;qjsondocument#fromRawData&quot;&gt;fromRawData&lt;/a&gt; is not freed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99c1ee01902f4cd715979a83c0ff532eb964854" translate="yes" xml:space="preserve">
          <source>Binary programs may be specified using &lt;code&gt;glProgramBinaryOES()&lt;/code&gt; on the return value from &lt;a href=&quot;qopenglshaderprogram#programId&quot;&gt;programId&lt;/a&gt;(). Then the application should call &lt;a href=&quot;qopenglshaderprogram#link&quot;&gt;link&lt;/a&gt;(), which will notice that the program has already been specified and linked, allowing other operations to be performed on the shader program. The shader program's id can be explicitly created using the &lt;a href=&quot;qopenglshaderprogram#create&quot;&gt;create&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01b95be44557b471813e5b254c4acdf67420c63" translate="yes" xml:space="preserve">
          <source>Binary shaders may be specified using &lt;code&gt;glShaderBinary()&lt;/code&gt; on the return value from &lt;a href=&quot;qopenglshader#shaderId&quot;&gt;QOpenGLShader::shaderId&lt;/a&gt;(). The &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; instance containing the binary can then be added to the shader program with &lt;a href=&quot;qopenglshaderprogram#addShader&quot;&gt;addShader&lt;/a&gt;() and linked in the usual fashion with &lt;a href=&quot;qopenglshaderprogram#link&quot;&gt;link&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633e6c413d693121a97e754c0595994029869e95" translate="yes" xml:space="preserve">
          <source>Binary to ASCII - this function returns a base64 encoding of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
