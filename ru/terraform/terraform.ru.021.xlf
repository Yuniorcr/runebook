<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="terraform">
    <body>
      <group id="terraform">
        <trans-unit id="9aa0d4b37df2b9e134df79269b38e2bfab1917fe" translate="yes" xml:space="preserve">
          <source>Example Usage (Java 1.8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea6e7129fbbebda0f0d02d0cdd6c857ec61d8c0" translate="yes" xml:space="preserve">
          <source>Example Usage (Kubernetes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1276e3affdc2481df3038087d20069ee7cb1e146" translate="yes" xml:space="preserve">
          <source>Example Usage (Linux)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9ac45d841bf3140cc2d82ba495d3ac43f8107e" translate="yes" xml:space="preserve">
          <source>Example Usage (Premium with Backup)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df172cee5be171f7142641053c1cd0e804d2620" translate="yes" xml:space="preserve">
          <source>Example Usage (Premium with Clustering)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0923f3954f3cb04a77e8b52986b19cba2c3c676a" translate="yes" xml:space="preserve">
          <source>Example Usage (Resource Group Level Lock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5903e1605f22e6a6245a93555418d7a393edb26" translate="yes" xml:space="preserve">
          <source>Example Usage (Resource Level Lock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b377b545677c5e7aed22e80e86ebe604225d86" translate="yes" xml:space="preserve">
          <source>Example Usage (Retrieve the Dynamic Public IP of a new VM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bd1a08d30b97f2c35dc71fc81aafed92ccc2a3" translate="yes" xml:space="preserve">
          <source>Example Usage (SQL Filter)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f323004d89547ebefa6a5f8825a0d27d90bfde" translate="yes" xml:space="preserve">
          <source>Example Usage (Shared / Consumption Plan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abefe3d663c878b233aa20f87c5a6afded076ddd" translate="yes" xml:space="preserve">
          <source>Example Usage (Single IP Address)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a4ac5357e2ff68a42cd6a16b7fa41b1608418b" translate="yes" xml:space="preserve">
          <source>Example Usage (Standard)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673db38e343d390d6db3571bc35dfb5be3225c94" translate="yes" xml:space="preserve">
          <source>Example Usage (Storage usage of a SQL Database)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6548a6aebd516d0eadf27acaba9be3805080a719" translate="yes" xml:space="preserve">
          <source>Example Usage (Subscription Level Lock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bdf86fd4971ca03d1decaeb1015704bf8a196d" translate="yes" xml:space="preserve">
          <source>Example Usage (Swarm)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd2076a34614bc75c9a1fbadd29939549b4fe7c" translate="yes" xml:space="preserve">
          <source>Example Usage (TCP)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6e299fcb62935dc2c3b71c71f3c4a3b1757028" translate="yes" xml:space="preserve">
          <source>Example Usage (World)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe67eaaf69ebde6a57d99eadc8712de181699b82" translate="yes" xml:space="preserve">
          <source>Example Usage (in a Consumption Plan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5660af682f53d311c24579c0164e4d161a77032f" translate="yes" xml:space="preserve">
          <source>Example Usage (reference an existing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3872acfd007c9fdedb88b8c5e3ea7221285031b8" translate="yes" xml:space="preserve">
          <source>Example Usage (using a built-in Role)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd2a99ad6dab14c7f89a4c8d4251e1fe3b42592" translate="yes" xml:space="preserve">
          <source>Example Usage (with App Service Plan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831bbc3a886ba5a0f46607c39b1376d37a713bbf" translate="yes" xml:space="preserve">
          <source>Example Usage Creating from VHD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728faaa4f7b6f36bb99360a34eff4dc72b6cf1ec" translate="yes" xml:space="preserve">
          <source>Example Usage Creating from Virtual Machine (VM must be generalized beforehand)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a876fe6d9c15c1d3a4819a2ec878a9432ac95f5d" translate="yes" xml:space="preserve">
          <source>Example Usage with Create Copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340d832da1b49cd58442af6ee979ba26bf8bfd3c" translate="yes" xml:space="preserve">
          <source>Example Usage with Create Empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a724a941fd521b3ab3e2429c1c60ed5f770a26" translate="yes" xml:space="preserve">
          <source>Example Usage with IP Networking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a3640659b3e52117e62add9c9c5b0d639553f7" translate="yes" xml:space="preserve">
          <source>Example Usage with Managed Disks (Recommended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f0f6d02fd3a3084306e6f2dc151ddd3b90c327" translate="yes" xml:space="preserve">
          <source>Example Usage with Managed Disks and Azure Platform Images (Recommended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d5ca62802724e0863c96e523adfd461a7e14a1" translate="yes" xml:space="preserve">
          <source>Example Usage with Managed Disks and Custom Images (Recommended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bcc5695132415e4046ec482ec54be6e34dbe8d" translate="yes" xml:space="preserve">
          <source>Example Usage with Multiple Instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e583fbd19cd22033ff5d455e954cb6c435f685" translate="yes" xml:space="preserve">
          <source>Example Usage with Network Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e706de06c539fd2af97c163afcb4a1e12033980" translate="yes" xml:space="preserve">
          <source>Example Usage with Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6035058057c2c1fa6048fc16d55e6ea370de7c" translate="yes" xml:space="preserve">
          <source>Example Usage with Unmanaged Disks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2fbb1d04c0ab722c994759b6831af56f471d6e" translate="yes" xml:space="preserve">
          <source>Example Usage with an Authentication Plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e6eec380bebf0b57d799733c150dec7d5a156a" translate="yes" xml:space="preserve">
          <source>Example Usage with multiple Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d4813f1fca9f95a5b803167f30814a667cfc5a" translate="yes" xml:space="preserve">
          <source>Example Usage with top level instance template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c52f95f0fca201d8b42b7be09892142d66c304" translate="yes" xml:space="preserve">
          <source>Example Usage, creating a new Key Pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c228f83362cd279e6ee22a7b460b68c3ec6b384f" translate="yes" xml:space="preserve">
          <source>Example Usage, creating a new domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db1c1b34f639b6726612eecf8144d62a7cf03a7" translate="yes" xml:space="preserve">
          <source>Example Usage, save key in Kubernetes secret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="6eb58417e9421fd050e13deca5f8a619dd6bee3d" translate="yes" xml:space="preserve">
          <source>Example Usage: Configure Kubernetes provider with OAuth2 access token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08abbbd4271994c467a17302cc49b8f92c980e27" translate="yes" xml:space="preserve">
          <source>Example Usage: Creating a MySQL RDS instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603970d6c0038a2f7ad68c81ba4faa6e1817e949" translate="yes" xml:space="preserve">
          <source>Example Usage: Creating a PostgreSQL RDS instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f798cb87857d630fe1d4ffaad323ad09d775190" translate="yes" xml:space="preserve">
          <source>Example Usage: Creating a SQLServer RDS instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b121630e2353f67a99acc3496f405f60cef4fcaf" translate="yes" xml:space="preserve">
          <source>Example Usages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba37c9ed25207696c18e4cbfeb30d93ff1c13e0" translate="yes" xml:space="preserve">
          <source>Example With JSON Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5b97fd04867a5f2d1f1763f290730dc8f56a94" translate="yes" xml:space="preserve">
          <source>Example With Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281076a8c3f0401d191350e1143ccd33922493a1" translate="yes" xml:space="preserve">
          <source>Example bootable config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b120274dd4e85e35b55222327d37edda2aec7b" translate="yes" xml:space="preserve">
          <source>Example config to deny all Egress traffic, allowing Ingress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daca15edcc80e04edcc6e6ff22f3a819b09f4e9" translate="yes" xml:space="preserve">
          <source>Example config to deny all traffic to any Subnet in the Default Network ACL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51db75488fd6af3a37f97fb0ecd431012ca817eb" translate="yes" xml:space="preserve">
          <source>Example creating a RuntimeConfig resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02195ff638a6c1aa29285e0a7a3e7a027bac539b" translate="yes" xml:space="preserve">
          <source>Example creating a RuntimeConfig variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e9d91f9d92bd0b5b9273cb2763c76a9aff34e0" translate="yes" xml:space="preserve">
          <source>Example creating a SQL Database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2622fa6ca534c87efc84864685a55a9a61798d" translate="yes" xml:space="preserve">
          <source>Example creating a SQL User.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910577158ab2054ec41ec8d17780101ccf223a6a" translate="yes" xml:space="preserve">
          <source>Example creating a Spanner database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa876b81faba17856c325deca6834429d46c75c3" translate="yes" xml:space="preserve">
          <source>Example creating a Spanner instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9518e8a6f2066b8400050b5a5683b2ab7cf6faa5" translate="yes" xml:space="preserve">
          <source>Example creating a default object ACL on a bucket with one owner, and one reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044d3115cd64d5e3331f46ddd665ea2e32e51c08" translate="yes" xml:space="preserve">
          <source>Example creating a private bucket in standard storage, in the EU region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfb36a28c87b05538f17d1e5d38f15abfd13a3c" translate="yes" xml:space="preserve">
          <source>Example creating a public object in an existing &lt;code&gt;image-store&lt;/code&gt; bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9299ceba474965a5f4f8415a7f36f48158df5d5f" translate="yes" xml:space="preserve">
          <source>Example creating an ACL on a bucket with one owner, and one reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f335c9ad6ceae99eef331e941c7502b8097e83c2" translate="yes" xml:space="preserve">
          <source>Example in Conjunction with Scaling Policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1fc8460984e8b8b2996db1d0092c9c55410d76" translate="yes" xml:space="preserve">
          <source>Example nsx.tf file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966fe49c07b8d67b4c2e5c5aa75efab6cc05a9dd" translate="yes" xml:space="preserve">
          <source>Example of Configuration with Credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1931a92627c576a125ab443b9bcbc5671bacbfe" translate="yes" xml:space="preserve">
          <source>Example of Setting Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9386572c35cb7056eeee958dfb025c1049915469" translate="yes" xml:space="preserve">
          <source>Example of Using Data Source for Assume Role Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc12ce6d8da7a5fc808316cff04969b15315bb0f" translate="yes" xml:space="preserve">
          <source>Example of multiple provisioners:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a4bd17f26f4d77bedec7507958f8c27d5ef952" translate="yes" xml:space="preserve">
          <source>Example of storage_profile_image_reference with id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae6a35b12dde1197f5e454dd728d30190371184" translate="yes" xml:space="preserve">
          <source>Example of using the &lt;code&gt;value&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc17663d267c1ddd0a2bb7b2379860be8039cbb8" translate="yes" xml:space="preserve">
          <source>Example overwriting the &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; timeouts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcc71dc393c17012960474e3130d740e19721ac" translate="yes" xml:space="preserve">
          <source>Example terraform.tfvars File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">Пример использования</target>
        </trans-unit>
        <trans-unit id="34933f8a376628bcce05438d057c54d853843a00" translate="yes" xml:space="preserve">
          <source>Example usage with tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="c720ed15e540f292858bbd9ad16be0fc024f2e54" translate="yes" xml:space="preserve">
          <source>Example using a Client Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8730635b11b0525c25bf04573ce84d67064288e7" translate="yes" xml:space="preserve">
          <source>Example variables.tf File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31093e952807cd1c6357a1d019e99f879245369c" translate="yes" xml:space="preserve">
          <source>Example with Certificate Authority Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48e851fe4e15ec7b8aaab0577f741b0b012589a" translate="yes" xml:space="preserve">
          <source>Example with Delivery Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545276638ffa458be2752fea2bedfb6f7aeef831" translate="yes" xml:space="preserve">
          <source>Example with Multiple Principals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919541981d96caa4af4dfd04bc13cc7ca9198427" translate="yes" xml:space="preserve">
          <source>Example with Source and Override</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3043ab8d21b461ae72b94c0b189e9289a390155" translate="yes" xml:space="preserve">
          <source>Example with content from file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16c730f7d80712d80d3e82b358aa72d32745b21" translate="yes" xml:space="preserve">
          <source>Example with no prefix: &lt;code&gt;
$ terraform import random_id.server p-9hUg
&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf1aa2494a9989232493a3baaf0700745e90335" translate="yes" xml:space="preserve">
          <source>Example with prefix (prefix is separated by a &lt;code&gt;,&lt;/code&gt;): &lt;code&gt;
$ terraform import random_id.server my-prefix-,p-9hUg
&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4557ea484a547bf024c73110059f51774021ca" translate="yes" xml:space="preserve">
          <source>Example with simple content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2214fb078ecc5ea550b47f0b8b02f9a2ed38f18" translate="yes" xml:space="preserve">
          <source>Example with subfolders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="36142f54412d9c436c483e9565e9aa3e919cfdcc" translate="yes" xml:space="preserve">
          <source>Example: AWS Instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a65f83100d0da4247ab3b5a76aa25a01296802" translate="yes" xml:space="preserve">
          <source>Example: All Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749333b17a80b454e776ee4e0b23e0bf67fb0358" translate="yes" xml:space="preserve">
          <source>Example: Create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc4ecbc3ae995b3e52745b825603062dfe038e7" translate="yes" xml:space="preserve">
          <source>Example: Create from State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc769fafa796e19048eecdaff80969553af8ec80" translate="yes" xml:space="preserve">
          <source>Example: Filtering by ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9890f167b9b61f57043b0e534180860c493b25f3" translate="yes" xml:space="preserve">
          <source>Example: Filtering by Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59c2677e1c2f7f80f471d0d5ecf9d6b7db0d7ce" translate="yes" xml:space="preserve">
          <source>Example: Filtering by Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a58459b06c1b597b9ffe45e4f7b06cd5f8637b9" translate="yes" xml:space="preserve">
          <source>Example: Import to Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8f0577e60e78e3a559c4c8141250b05bc9238f" translate="yes" xml:space="preserve">
          <source>Example: Move a Module Into a Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acee6c21cf69ca0f0ed5217f949b759b7e30d83b" translate="yes" xml:space="preserve">
          <source>Example: Move a Module to Another State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31187d384cd8b1584efa3d3846e51f01a626c05" translate="yes" xml:space="preserve">
          <source>Example: Move a Resource Into a Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdeab69b9e26eb46edf65a18ce444495c714c946" translate="yes" xml:space="preserve">
          <source>Example: Remove a Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fd25257ce766775f6ae581d5054df9abca0320" translate="yes" xml:space="preserve">
          <source>Example: Remove a Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f937b36af0d125a15ceecb61c34b28df95df1c01" translate="yes" xml:space="preserve">
          <source>Example: Rename a Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68de64e0658499cef383e3b4ae37e14db36388fe" translate="yes" xml:space="preserve">
          <source>Example: Show a Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c351415bfd6eac2db991972a7c514438782cca05" translate="yes" xml:space="preserve">
          <source>Example: Tainting a Resource within a Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3def90c28cae0103e2cbb7be80cdadb227c2ef9c" translate="yes" xml:space="preserve">
          <source>Example: Tainting a Single Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8545599b7db734eb2171de99b2b423b95fcbc8" translate="yes" xml:space="preserve">
          <source>Example: You want to create a datastore with a iSCSI LUN that is visible on 3 hosts in a single vSphere cluster (&lt;code&gt;esxi1&lt;/code&gt;, &lt;code&gt;esxi2&lt;/code&gt; and &lt;code&gt;esxi3&lt;/code&gt;). When you create the datastore on &lt;code&gt;esxi1&lt;/code&gt;, the datastore will be automatically mounted on &lt;code&gt;esxi2&lt;/code&gt; and &lt;code&gt;esxi3&lt;/code&gt;, without the need to configure the resource on either of those two hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="4167c431bc3a2dffb15b8835c248500b2ef49b69" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, the resources that read secrets from Vault are designed such that they require only the &lt;em&gt;read&lt;/em&gt; capability on the relevant resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5013197a7e99d7402000630d149647bd3138b0" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, the resources that write secrets into Vault are designed such that they require only the &lt;em&gt;create&lt;/em&gt; and &lt;em&gt;update&lt;/em&gt; capabilities on the relevant resources, so that distinct tokens can be used for reading vs. writing and thus limit the exposure of a compromised token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745d9bb4bcbf06b5474cc6d93b15597bfff335a1" translate="yes" xml:space="preserve">
          <source>Exchanges can be imported using the &lt;code&gt;id&lt;/code&gt; which is composed of &lt;code&gt;name@vhost&lt;/code&gt;. E.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c0d6d1285c9cbb4a5e2aa61e0c7ec60f5d1f02" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;terraform plan&lt;/code&gt; to verify the validation is passing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5023c2d9801490561154299acb47b193dce8f27" translate="yes" xml:space="preserve">
          <source>Executing commands or scripts on the designated Resource after creation, or on destruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420a99b51edd20fa28e097500b49e0ecd745692f" translate="yes" xml:space="preserve">
          <source>Existence of any resource instance belonging to a particular provider in the current &lt;em&gt;state&lt;/em&gt;. For example, if a particular resource is removed from configuration, it continues to create a dependency on its provider until its instances have been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e3b60bc71fe85fd3220e8298ea74af1eac074a" translate="yes" xml:space="preserve">
          <source>Existing app releases can be imported using the combination of the application name, a colon, and the formation's type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffae623b086a1042242c4e968557d13a1116fe1" translate="yes" xml:space="preserve">
          <source>Existing formations can be imported using the combination of the application name, a colon, and the formation's type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1603067d7ecc0cf42d2408bdcdbdafad997100" translate="yes" xml:space="preserve">
          <source>Explicit Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafbeba529606262c9da73b7bf95d31638f9e4d5" translate="yes" xml:space="preserve">
          <source>Explicit dependencies from the &lt;code&gt;depends_on&lt;/code&gt; meta-parameter are used to create edges between resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0d553d1c551aa6b2d93cd9525f4721b67b082d" translate="yes" xml:space="preserve">
          <source>Explicit use of a &lt;code&gt;provider&lt;/code&gt; block in configuration, optionally including a version constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4312ef8b9b8173c675475d591a416bbfe58d0505" translate="yes" xml:space="preserve">
          <source>Explicitly define the public and private networks in your instances as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7461872eab6c5842e309aa4e9edca3574154151" translate="yes" xml:space="preserve">
          <source>Explicitly set the network to attach to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d874d7cfb4cf39db4508e7f4b583989427443b" translate="yes" xml:space="preserve">
          <source>Expose tcp 80 port to the EndPoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f82f7b4b43c45def09941bcb7ec66ad54615e08" translate="yes" xml:space="preserve">
          <source>ExpressRoute Circuit Authorizations can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa73405347b035fb90ad3c273bce1388ad62b2a5" translate="yes" xml:space="preserve">
          <source>ExpressRoute Circuit Peerings can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c5a9a7406fbb9a7b625b7b9ca236aa928e8cb3" translate="yes" xml:space="preserve">
          <source>ExpressRoute circuits can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281dd83602a2719ee60a63350e4c59f5a5ec31ba" translate="yes" xml:space="preserve">
          <source>Extend</source>
          <target state="translated">Extend</target>
        </trans-unit>
        <trans-unit id="4c02ef15c298def50510eb63b0f2b3a650ec1431" translate="yes" xml:space="preserve">
          <source>Extended S3 Destination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2118981460c69a2ecab146cb7390b771730e8690" translate="yes" xml:space="preserve">
          <source>Extending Terraform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134dea41bb0380fb00fa169e0bb15861e43b008d" translate="yes" xml:space="preserve">
          <source>Extensions can be imported using the id.e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7ebc37b30e86d1cadbdba07491643d7bd18224" translate="yes" xml:space="preserve">
          <source>Extensions of an existing provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d10c693b773b327ecf17fbda7591feccda0c54d" translate="yes" xml:space="preserve">
          <source>External</source>
          <target state="translated">External</target>
        </trans-unit>
        <trans-unit id="d75c321a6b87e59d8b9367db07f58f5c2c2a7ece" translate="yes" xml:space="preserve">
          <source>External Data Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b57d2bdeeb4207ef3560374bca8055c8c25305" translate="yes" xml:space="preserve">
          <source>External Program Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b52b5be40f841e8b63fb25091fd02983e87ff" translate="yes" xml:space="preserve">
          <source>External Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c389fd49769e379d7863a5be85b76102092028be" translate="yes" xml:space="preserve">
          <source>Extra Hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3573613d5afd037673f4c04dc4ab550359db6c28" translate="yes" xml:space="preserve">
          <source>FIFO queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b056ba271902e322b01f49637d650490f637bc6" translate="yes" xml:space="preserve">
          <source>Failover routing policies support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de9b526862fadf93f65321c473a023e8d36d5ab" translate="yes" xml:space="preserve">
          <source>Failure Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006b49268e4238c065aa7642ccc4e50365274823" translate="yes" xml:space="preserve">
          <source>Fastly</source>
          <target state="translated">Fastly</target>
        </trans-unit>
        <trans-unit id="c4e0c2183d0d0b1d066c82fa35b4158297d13177" translate="yes" xml:space="preserve">
          <source>Fastly Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b95122d0a6d61055d19a1ea9ca2438f39bd1fd" translate="yes" xml:space="preserve">
          <source>Fault Tolerance (FT) Traffic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7877d2193b145f81e55a16d60f004fd0118c2629" translate="yes" xml:space="preserve">
          <source>Feature Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fde94258fbf7cce92bb07f81e36686848be5080" translate="yes" xml:space="preserve">
          <source>Feature Requests, Bug Reports, and Contributing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">Feedback</target>
        </trans-unit>
        <trans-unit id="62958bc3b66e154713433bca76d9870959a94ce8" translate="yes" xml:space="preserve">
          <source>Fetches a predefined instance type for 1&amp;amp;1 servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89b98a277c9c195cf80c80976153321c54725b3" translate="yes" xml:space="preserve">
          <source>Field &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; are editable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742bf874d80c8df78a6a05cf59513352be3692ac" translate="yes" xml:space="preserve">
          <source>Field &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;tags&lt;/code&gt;, &lt;code&gt;dynamic_ip_required&lt;/code&gt;, &lt;code&gt;security_group&lt;/code&gt; are editable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe54e65b298d609418efb6a402e2d53425573b3" translate="yes" xml:space="preserve">
          <source>FieldToMatch(field_to_match) support following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdda001f6a826028d1ee27086113eeca135b1ee1" translate="yes" xml:space="preserve">
          <source>Fields &lt;code&gt;action&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;, &lt;code&gt;ip_range&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; are editable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0350534ce85ff3fabf41e009bbbdf699cf2b5891" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;foo.config.json.tpl&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62e46d4a88535b7565b6d0bcf94d74e048c63c7" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;main.tf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68809c3909e4a497d618d3680501d8bbcbb5278a" translate="yes" xml:space="preserve">
          <source>File Provisioner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64385fdbef558a6bb3f6b1778c38b908ca93c38a" translate="yes" xml:space="preserve">
          <source>File Upload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3985a818d90dff7bb4990a6c3982a3bddf35cf" translate="yes" xml:space="preserve">
          <source>File config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c653c1c00d746c3c2d8d062bccd439b5efa8957b" translate="yes" xml:space="preserve">
          <source>File with inline content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753e79daee7c438ce9bdda75a2388cead30b9468" translate="yes" xml:space="preserve">
          <source>File with remote content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e0c840d068acf112f31a7eb32fab26e98d3a9b" translate="yes" xml:space="preserve">
          <source>Filters (&lt;code&gt;filters&lt;/code&gt;) support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c380d5d79b5b933dc0dca7db18fdb7140e963358" translate="yes" xml:space="preserve">
          <source>Finally, Terraform can download modules directly from various storage providers and version control systems. These sources do not support versioning and other registry benefits, but can be convenient for getting started when already available within an organization. The full list of available sources are documented in &lt;a href=&quot;sources&quot;&gt;the module sources documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ebca73fdf21b01a51ee6c0cb4150ee49033a0f" translate="yes" xml:space="preserve">
          <source>Finally, it's possible to test these values work as expected by first logging in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29be3b06eddbbb629c5e52b32390e08a6e82f570" translate="yes" xml:space="preserve">
          <source>Finally, reference the encrypted ciphertext in your resource definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0748eb82ad698138567fb12f21221b34119525d" translate="yes" xml:space="preserve">
          <source>Finally, the CLI manages backups for you automatically. If you make a mistake modifying your state, the state CLI will always have a backup available for you that you can restore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33f490d9106ed6ad2290ea5b0feec818acb44d8" translate="yes" xml:space="preserve">
          <source>Finally, we can create the &lt;code&gt;client_secret&lt;/code&gt; by selecting &lt;strong&gt;Keys&lt;/strong&gt; and then generating a new key by entering a description, selecting how long the &lt;code&gt;client_secret&lt;/code&gt; should be valid for - and finally pressing &lt;strong&gt;Save&lt;/strong&gt;. This value will only be visible whilst on the page, so be sure to copy it now (otherwise you'll need to regenerate a new key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5e393c4c0f6fcfc50b93db9535638a69eda6da" translate="yes" xml:space="preserve">
          <source>Finally, we create an AutoScaling Group that actually launches EC2 instances based on the AutoScaling Launch Configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b10b1d180b2b17c4c04499f0811c054da01c67c" translate="yes" xml:space="preserve">
          <source>Finally, we must recompile the binary and instruct Terraform to reinitialize it by rerunning &lt;code&gt;terraform init&lt;/code&gt;. This is only necessary because we have modified the code and recompiled the binary, and it no longer matches an internal hash Terraform uses to ensure the same binaries are used for each operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677d7f79647b79a1df1b744c62f3cccf686392bd" translate="yes" xml:space="preserve">
          <source>Finally, you need to create an API Gateway &quot;deployment&quot; in order to activate the configuration and expose the API at a URL that can be used for testing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34802e249e2948ca8fc034be49fda548a40162ed" translate="yes" xml:space="preserve">
          <source>Find current Account unique identifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cab11630878a606f3a70f38af82f8a94135366" translate="yes" xml:space="preserve">
          <source>Find current Data Center endpoint URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ecb916c2df423f30c495d182c613d6a8d798c2" translate="yes" xml:space="preserve">
          <source>Find the ID of a Base 64 LTS image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cec4980145da3c76adf38cfd7b8ab00710806d" translate="yes" xml:space="preserve">
          <source>Find the Network ID of the &lt;code&gt;Joyent-SDC-Private&lt;/code&gt; network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ba5fa70161eeee1b54c716458aded835de0d32" translate="yes" xml:space="preserve">
          <source>Find the VLAN ID using name (with a wildcard match) and description of the Fabric VLAN as a search filters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2ff075ef84c9c477d8bad9af297a53b1f06f9d" translate="yes" xml:space="preserve">
          <source>Find the VLAN ID using the name of the Fabric VLAN as a search filter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f7309c30ca59b810697143795fa35bca3bd32c" translate="yes" xml:space="preserve">
          <source>Find the subnet CIDR of a Fabric Network:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffedb8162ce09e838b55ad47e4dc071cc12c6798" translate="yes" xml:space="preserve">
          <source>Finding Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246b1217fd9cde94ff773d0dfed89759d431c5d6" translate="yes" xml:space="preserve">
          <source>Finding and Using Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf996bc35b97edab28ad44fd3a0ba011629495f" translate="yes" xml:space="preserve">
          <source>Firewall Groups can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd400419c1e68ed76366d6862f73c9c9d033e75" translate="yes" xml:space="preserve">
          <source>Firewall Policies can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbe4599e4be8596abc6c676bb64210b334352b4" translate="yes" xml:space="preserve">
          <source>Firewall Policy Rules (&lt;code&gt;rules&lt;/code&gt;) support the follwing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c42dd849ae8bc6de4d204bc0e00d637a2b266a" translate="yes" xml:space="preserve">
          <source>Firewall Rules can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43806055bae0e34b0ab4a90549c44c10e2e6a27" translate="yes" xml:space="preserve">
          <source>Firewalls can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb8591f3a049d7a5451eeb73b91bcf5ceaedcdb" translate="yes" xml:space="preserve">
          <source>Firewalls can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6a205766222488be5897e944ebf551f7039da6" translate="yes" xml:space="preserve">
          <source>Firewalls can be imported using the firewall &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f8a9a5d87efe150ed9038b47a12a5d233cba88" translate="yes" xml:space="preserve">
          <source>First Time Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d01a966cfa1cd6419058b93b7785278cfa52db8" translate="yes" xml:space="preserve">
          <source>First character must be a letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12606ce9c0d1d672b2e30810fc6df6f678454173" translate="yes" xml:space="preserve">
          <source>First, create a KMS KeyRing and CryptoKey using the resource definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87536074ea1f916166e01b25c8da12928bc25510" translate="yes" xml:space="preserve">
          <source>First, let us create a data source to fetch the latest Amazon Machine Image (AMI) that Amazon provides with an EKS compatible Kubernetes baked in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d2bdc4958411377c83c7b1c24464bb8b944574" translate="yes" xml:space="preserve">
          <source>First, let's encrypt a password with KMS using the &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/kms/encrypt.html&quot;&gt;AWS CLI tools&lt;/a&gt;. This requires you to have your AWS CLI setup correctly, and you would replace the key-id with your own. If you have a newline character at the end of your file, secrets will be decrypted with this newline character intact. For most use-cases this is undesirable and leads to incorrect passwords or invalid values, as well as possible changes in the plan. Alternatively you can use &lt;code&gt;--plaintext 'password'&lt;/code&gt; instead of reading from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8299b218ba12744a2c7b6566c3f1c4c0749a4ba9" translate="yes" xml:space="preserve">
          <source>First, when using the &lt;code&gt;ssh&lt;/code&gt; connection type the destination directory must already exist. If you need to create it, use a remote-exec provisioner just prior to the file provisioner in order to create the directory. When using the &lt;code&gt;winrm&lt;/code&gt; connection type the destination directory will be created for you if it doesn't already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bccd7996081371b851b1368dab7779378be9e4f" translate="yes" xml:space="preserve">
          <source>Firstly navigate to &lt;a href=&quot;https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview&quot;&gt;the &lt;strong&gt;Azure Active Directory&lt;/strong&gt; overview&lt;/a&gt; within the Azure Portal - &lt;a href=&quot;https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps/RegisteredApps/Overview&quot;&gt;then select the &lt;strong&gt;App Registration&lt;/strong&gt; blade&lt;/a&gt; and click &lt;strong&gt;Endpoints&lt;/strong&gt; at the top of the &lt;strong&gt;App Registration&lt;/strong&gt; blade. A list of URIs will be displayed and you need to locate the URI for &lt;strong&gt;OAUTH 2.0 AUTHORIZATION ENDPOINT&lt;/strong&gt; which contains a GUID. This is your Tenant ID / the &lt;code&gt;tenant_id&lt;/code&gt; field mentioned above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6929e8f3c75650dbee4df0f4de2823bfcaa7789e" translate="yes" xml:space="preserve">
          <source>Firstly, login to the Azure CLI using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ee3b408ffac62dd1b425c7511392f7c4f578d2" translate="yes" xml:space="preserve">
          <source>Firstly, specify a Role which grants the appropriate permissions needed for the Service Principal (for example, &lt;code&gt;Contributor&lt;/code&gt; will grant Read/Write on all resources in the Subscription). There's more information about &lt;a href=&quot;https://azure.microsoft.com/en-gb/documentation/articles/role-based-access-built-in-roles/&quot;&gt;the built in roles available here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a707acd8c79a5dc5e791d8bf46843c37150b980a" translate="yes" xml:space="preserve">
          <source>Flavors can be imported using the &lt;code&gt;ID&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ccc1f724bc8c151197e69e23dd1968a77d30af" translate="yes" xml:space="preserve">
          <source>FlexibleEngine</source>
          <target state="translated">FlexibleEngine</target>
        </trans-unit>
        <trans-unit id="087d07d7dd080ffb3d34aabd277acf2b7e681643" translate="yes" xml:space="preserve">
          <source>FlexibleEngine Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eed8c6514f14343310d4af2aef3b642aeda6a0" translate="yes" xml:space="preserve">
          <source>Flexibleengine</source>
          <target state="translated">Flexibleengine</target>
        </trans-unit>
        <trans-unit id="942bba7e8579aa7f72ab5f42c8a3fa156618777b" translate="yes" xml:space="preserve">
          <source>Floating IP associations can be imported using the &lt;code&gt;id&lt;/code&gt; of the floating IP, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b845cc016c243f08ca94fe091c84150fcf6f6f88" translate="yes" xml:space="preserve">
          <source>Floating IPs can be imported using its &lt;code&gt;id&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e0b5da7aaefac136dbcf5cad0e1a4a910f924c" translate="yes" xml:space="preserve">
          <source>Floating IPs can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f53c251f02dc0279581db435cef868f38eb3d56" translate="yes" xml:space="preserve">
          <source>Floating IPs can be imported using the &lt;code&gt;ip&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa0972228db7c6e79677c5714ae8d9fcd61df2e" translate="yes" xml:space="preserve">
          <source>Flow Logs can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54702b0de21130c8461b10d1dae121d3c803bf2" translate="yes" xml:space="preserve">
          <source>Folder-level logging exclusions can be imported using their URI, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19adc47be34bed86af37b8e8dc882af424402561" translate="yes" xml:space="preserve">
          <source>Folders</source>
          <target state="translated">Folders</target>
        </trans-unit>
        <trans-unit id="5a045871299f58a5ae5cba2d755d91d626930439" translate="yes" xml:space="preserve">
          <source>Folders can be imported using the folder autogenerated &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33539352fe2678fc2f972f5d27910a07c8e2693" translate="yes" xml:space="preserve">
          <source>Folders created live inside an Organization. See the &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/quickstarts&quot;&gt;Organization documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43121b42b87d4af8121c669992c903573dcb1c04" translate="yes" xml:space="preserve">
          <source>Following are examples of using each of the record types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b087e3fcbf4df9e6843e9b3e96363207f5b879" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;remote&quot;&gt;remote state&lt;/a&gt;, the workspaces are stored directly in the configured &lt;a href=&quot;../backends&quot;&gt;backend&lt;/a&gt;. For example, if you use &lt;a href=&quot;../backends/types/consul&quot;&gt;Consul&lt;/a&gt;, the workspaces are stored by appending the environment name to the state path. To ensure that workspace names are stored correctly and safely in all backends, the name must be valid to use in a URL path segment without escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c67c00aed4a4cfe298eb9d077b5401a480bbce" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;bareMetal&lt;/code&gt;, the required fields &lt;code&gt;source_server_id&lt;/code&gt;, &lt;code&gt;cpu&lt;/code&gt;, and &lt;code&gt;memory_mb&lt;/code&gt; are ignored and instead the following fields are required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe5b4ef6859b66edb32a58c1997e33683be72f4" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;ssh&lt;/code&gt; type connections, &lt;code&gt;cURL&lt;/code&gt; must be available on the remote host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cbb9fe2552480dc8032aaaa677336e4da23243" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;ssh&lt;/code&gt; type connections, we assume a few tools to be available on the remote host:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d83e6795224add7ffb4fd37d98a389cb8336cd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;winrm&lt;/code&gt; connections, &lt;code&gt;PowerShell 2.0&lt;/code&gt; must be available on the remote host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bc49d82aa0f857d5a7e7e426284473082a4ec8" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;data_resource&lt;/strong&gt; the following attributes are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcec956ed6d9303ffadad921bb0c3b42ffdfacf" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;environment&lt;/strong&gt; the following attributes are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a90e6720c55a93e9400b57c94f116084dc1c719" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;event_selector&lt;/strong&gt; the following attributes are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c633dd96db5e9a5b9ac0d71d103feadfd2285bf" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;routing_config&lt;/strong&gt; the following attributes are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea3addb364910d364ba17f3fbea1155115ebecf" translate="yes" xml:space="preserve">
          <source>For AWS accounts created after 2013-12-04, each region comes with a Default VPC. &lt;strong&gt;This is an advanced resource&lt;/strong&gt;, and has special caveats to be aware of when using it. Please read this document in its entirety before using this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5f3103ebaacf1498af4c616bd7820990b75a4c" translate="yes" xml:space="preserve">
          <source>For EC2 Classic accounts, each region comes with a Default Security Group. Additionally, each VPC created in AWS comes with a Default Security Group that can be managed, but not destroyed. &lt;strong&gt;This is an advanced resource&lt;/strong&gt;, and has special caveats to be aware of when using it. Please read this document in its entirety before using this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5149edef9d21abf576f18465121fe45c94b57006" translate="yes" xml:space="preserve">
          <source>For Terraform's &lt;a href=&quot;../../../configuration/syntax&quot;&gt;JSON syntax&lt;/a&gt;, use an array instead of defining the &lt;code&gt;queue&lt;/code&gt; key twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a74826741fc192e93ea792dd47816f7699bc6a" translate="yes" xml:space="preserve">
          <source>For a CloudWatch datasource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c5a96b9fa6742ef29aa0a8d46638b838358f0b" translate="yes" xml:space="preserve">
          <source>For a complete Shared VPC example with both host and service projects, see &lt;a href=&quot;compute_shared_vpc_host_project&quot;&gt;&lt;code&gt;google_compute_shared_vpc_host_project&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdc9371138cdb999940aa9806a62271555859a3" translate="yes" xml:space="preserve">
          <source>For a comprehensive reference of supported &lt;code&gt;metric_name&lt;/code&gt; values for types of &lt;code&gt;resource&lt;/code&gt; refer to &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-supported-metrics&quot;&gt;Supported metrics with Azure Monitor&lt;/a&gt; in the Azure documentation. In the referred table, the column &quot;Metric&quot; corresponds to supported values for &lt;code&gt;metric_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc64e1c24bbf64656b1542eeeb4603c9bbbffd19" translate="yes" xml:space="preserve">
          <source>For a configuration such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d51d91bbc5302eef0fb93b13b358551a9b1a903" translate="yes" xml:space="preserve">
          <source>For a given plugin, Acceptance Tests can be run from the root of the project by using a common make task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7065cff630ce43f93eabe338d2b1f2647dc7f1b9" translate="yes" xml:space="preserve">
          <source>For a given plugin, Unit Tests can be run from the root of the project by using a common make task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badd1e4b23b2df94e5ff18060c6e8532ab452fbc" translate="yes" xml:space="preserve">
          <source>For a large number of resources, edit the state file directly to rename every resource at the same time (replace all instances of &lt;code&gt;consul_agent_service&lt;/code&gt; with &lt;code&gt;consul_service&lt;/code&gt;). This requires understanding the consequences and guidelines for &lt;a href=&quot;../../backends/state#manual-state-pull-push&quot;&gt;editing state files&lt;/a&gt;, so please read those.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae056ebe73a794200b17fde7e647bd222e9af8fd" translate="yes" xml:space="preserve">
          <source>For a list of services available, visit the &lt;a href=&quot;https://console.cloud.google.com/apis/library&quot;&gt;API library page&lt;/a&gt; or run &lt;code&gt;gcloud services list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a248c517c0ac952f664514095def4b9239456f58" translate="yes" xml:space="preserve">
          <source>For a list variable like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8932633fce9276d79a955513bcf6d70812239341" translate="yes" xml:space="preserve">
          <source>For a small number of resources, the first class &lt;a href=&quot;../../commands/state/rm&quot;&gt;&lt;code&gt;state rm&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../import/usage&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; commands can be used to first remove the old resource from the state, and then import it under the new resource name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9450087be6fcc609064b30f701070babc6be76a2" translate="yes" xml:space="preserve">
          <source>For a small number of resources, the first class &lt;a href=&quot;../../commands/state/rm&quot;&gt;&lt;code&gt;state rm&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../import/usage&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; commands can be used to first remove the old resource from the state, and then import it under the new resource name. The &lt;code&gt;node&lt;/code&gt; attribute will need to be added to services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8e50402e3b6c9b42eb2a47444b93321bd91029" translate="yes" xml:space="preserve">
          <source>For additional details please refer to &lt;a href=&quot;https://arukas.io/en/category/documents-en/&quot;&gt;Arukas documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee901b186584bc2beb4a292d59dbddf704c45a6" translate="yes" xml:space="preserve">
          <source>For additional details please refer to &lt;a href=&quot;https://arukas.io/en/documents-en/arukas-api-reference-en/#containers&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be1ffc2f1b2d666e2856c682cbc82fb43d5e310" translate="yes" xml:space="preserve">
          <source>For additional documentation, see the &lt;a href=&quot;https://www.ctl.io/developers/&quot;&gt;CLC Developer Center&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3a674d5f8d58fcf7f3e5ceeae89c62537fb6ba" translate="yes" xml:space="preserve">
          <source>For advanced filtering and modification, we recommend piping Terraform state subcommands together with other command line tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865183e5bcc96bb7ed2314d12d86ca911bac306d" translate="yes" xml:space="preserve">
          <source>For all files which match &lt;code&gt;terraform.tfvars&lt;/code&gt; or &lt;code&gt;*.auto.tfvars&lt;/code&gt; present in the current directory, Terraform automatically loads them to populate variables. If the file is located somewhere else, you can pass the path to the file using the &lt;code&gt;-var-file&lt;/code&gt; flag. It is recommended to name such files with names ending in &lt;code&gt;.tfvars&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d630b9d8e36172c87b06eb709d3d255e21b96719" translate="yes" xml:space="preserve">
          <source>For all import syntaxes, the &quot;resource in question&quot; can take any of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18787481a856dc97e8750ed4f86db5684699f0c" translate="yes" xml:space="preserve">
          <source>For an InfluxDB datasource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43181edf97e11b244a73d4608cb623346a66872c" translate="yes" xml:space="preserve">
          <source>For an overview on vSphere networking concepts, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.networking.doc/GUID-2B11DBB8-CB3C-4AFF-8885-EFEA0FC562F4.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8857e73d2cb38f1f0ffe823f0e34fe528a816ac7" translate="yes" xml:space="preserve">
          <source>For an overview on vSphere networking concepts, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.networking.doc/GUID-2B11DBB8-CB3C-4AFF-8885-EFEA0FC562F4.html&quot;&gt;this page&lt;/a&gt;. For more information on vSphere DVS portgroups, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.networking.doc/GUID-69933F6E-2442-46CF-AA17-1196CB9A0A09.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3070c28db5cc462ddee714de1d94ee7fc83065" translate="yes" xml:space="preserve">
          <source>For an overview on vSphere networking concepts, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.networking.doc/GUID-2B11DBB8-CB3C-4AFF-8885-EFEA0FC562F4.html&quot;&gt;this page&lt;/a&gt;. For more information on vSphere DVS, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.networking.doc/GUID-375B45C7-684C-4C51-BA3C-70E48DFABF04.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65877c9946c7c0823c88b050b9a487b8a3ab999a" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;root_block_device&lt;/code&gt; and &lt;code&gt;ebs_block_device&lt;/code&gt; the &lt;code&gt;volume_id&lt;/code&gt; is exported. e.g. &lt;code&gt;aws_instance.web.root_block_device.0.volume_id&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f16bee356fc26fdf9987ac00cf4685bc47afa7e" translate="yes" xml:space="preserve">
          <source>For any real application there will inevitably be changes to the application code over time, which must then be deployed to AWS Lambda in place of the previous version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d431d077e259eed967cb1fe4eb416f505843fc6c" translate="yes" xml:space="preserve">
          <source>For complex infrastructures, the state can contain thousands of resources. To filter these, provide one or more patterns to the command. Patterns are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5296a4fd5157648566a485501d9ccbdec6c519" translate="yes" xml:space="preserve">
          <source>For configurations requiring Hadoop Compatible File System (HCFS) references, the options below are generally applicable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaa7b3221940c8624d7dc657d11f7e956c93dc2" translate="yes" xml:space="preserve">
          <source>For convenience in simple configurations, a child module automatically inherits default (un-aliased) provider configurations from its parent. This means that explicit &lt;code&gt;provider&lt;/code&gt; blocks appear only in the root module, and downstream modules can simply declare resources for that provider and have them automatically associated with the root provider configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b84e72c18d8d167073977efb47803020783fa7" translate="yes" xml:space="preserve">
          <source>For day-to-day use it is strongly recommended &lt;em&gt;not&lt;/em&gt; to rely on this mechanism and to instead provide the discovery document on the standard port, since this allows use of the most user-friendly hostname form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb70780fbc910c4d14889fda3ef784cb711d9216" translate="yes" xml:space="preserve">
          <source>For details on setting up govc, see the &lt;a href=&quot;https://github.com/vmware/govmomi/tree/master/govc&quot;&gt;homepage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a508d34f1866ce4b891f9b8fe4333f3d7ed984e4" translate="yes" xml:space="preserve">
          <source>For each security rule, there are three styles of profile settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e10dc5dfebf7b55f9d300e6f5e0c3bb118725c" translate="yes" xml:space="preserve">
          <source>For example usage, see &lt;a href=&quot;../providers/terraform/d/remote_state&quot;&gt;the &lt;code&gt;terraform_remote_state&lt;/code&gt; data source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398a5f12fb350848c202bde0b21e6eb942d09b2c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;timeadd(&quot;2017-11-22T00:00:00Z&quot;, &quot;10m&quot;)&lt;/code&gt; produces a value &lt;code&gt;&quot;2017-11-22T00:10:00Z&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a934f642a22ac6f1c004ff91d261b99430793ad" translate="yes" xml:space="preserve">
          <source>For example, a core infrastructure team can handle building the core machines, networking, etc. and can expose some information to other teams to run their own infrastructure. As a more specific example with AWS: you can expose things such as VPC IDs, subnets, NAT instance IDs, etc. through remote state and have other Terraform states consume that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e695c679d1305a2140361e59939056560dee5f59" translate="yes" xml:space="preserve">
          <source>For example, a data source may retrieve artifact information from Terraform Enterprise, configuration information from Consul, or look up a pre-existing AWS resource by filtering on its attributes and tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84893dc500a91a3da7c76c8b491f433f8123b951" translate="yes" xml:space="preserve">
          <source>For example, creating a new workspace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c24cf70c6db224e2b99d4846c0865fd43757a8" translate="yes" xml:space="preserve">
          <source>For example, encryption at rest can be enabled with the S3 backend and IAM policies and logging can be used to identify any invalid access. Requests for the state go over a TLS connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d423f878c1065b52fbc3512b725b50be319fa4" translate="yes" xml:space="preserve">
          <source>For example, given the configuration below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6f20b3f89cbbe72e9ad2309242601ab4d4a5e4" translate="yes" xml:space="preserve">
          <source>For example, given the hostname &lt;code&gt;example.com&lt;/code&gt; the initial discovery URL would be &lt;code&gt;https://example.com/.well-known/terraform.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c6dc9102fb9346a77836d527cfc4a0cf2d3fd9" translate="yes" xml:space="preserve">
          <source>For example, here's how you could create three &lt;a href=&quot;../providers/aws/r/instance&quot;&gt;AWS Instances&lt;/a&gt; each with their own static IP address:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d6f586f265e05d772e58b1736ba12808d0ffeb" translate="yes" xml:space="preserve">
          <source>For example, if discovery produces the URL &lt;code&gt;https://modules.example.com/v1/&lt;/code&gt; then this API would use full endpoint URLs like &lt;code&gt;https://modules.example.com/v1/{namespace}/{name}/{provider}/versions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1bbe3cdf194026ef295f36e7bbc1968e41e7eb" translate="yes" xml:space="preserve">
          <source>For example, if you define a variable twice on the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a988d96fe95133a8d8291ba3eb3eae586fb91b75" translate="yes" xml:space="preserve">
          <source>For example, in the Web Console an instance's fully qualified name is: &lt;code&gt;
/Compute-&amp;lt;identify&amp;gt;/&amp;lt;user&amp;gt;@&amp;lt;account&amp;gt;/&amp;lt;instance_name&amp;gt;/&amp;lt;instance_id&amp;gt;
&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed2de54114ca1b5b284c1bb697e8d554a35ad6" translate="yes" xml:space="preserve">
          <source>For example, module source strings can include a module registry hostname as their first segment, like &lt;code&gt;example.com/namespace/name/provider&lt;/code&gt;, and Terraform uses service discovery to determine whether &lt;code&gt;example.com&lt;/code&gt;&lt;em&gt;has&lt;/em&gt; a module registry, and if so where its API is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1427a48c8a58925d45efcd2e598258b08fc6592e" translate="yes" xml:space="preserve">
          <source>For example, the following command: &lt;code&gt;TF_CLI_ARGS=&quot;-input=false&quot; terraform apply -force&lt;/code&gt; is the equivalent to manually typing: &lt;code&gt;terraform apply -input=false -force&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8d6efed6462c065888ff5f5396035650c0bdeb" translate="yes" xml:space="preserve">
          <source>For example, the root module might contain only a &lt;code&gt;provider&lt;/code&gt; block and a &lt;code&gt;module&lt;/code&gt; block to instantiate a child module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e72a668f6de5ae77020412fe39e0f7f44a5aa1" translate="yes" xml:space="preserve">
          <source>For example, to create a list of all &lt;a href=&quot;../providers/aws/r/subnet&quot;&gt;AWS subnet&lt;/a&gt; ids vs referencing a specific subnet in the list you can use this syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd3c03ba6d2bcbbff9fbb2a37c4d02d6532d8e8" translate="yes" xml:space="preserve">
          <source>For example, to download both Terraform and the &lt;code&gt;template&lt;/code&gt; provider into &lt;code&gt;GOPATH&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a0058161813cab969a15748d179db51a4ed5e1" translate="yes" xml:space="preserve">
          <source>For example, to run an acceptance test against the Azure Resource Manager provider, the following environment variables must be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69d0eebc3e745a12755c5cbe86e4f87157c9e81" translate="yes" xml:space="preserve">
          <source>For example, to set the traffic class resource options for virtual machine traffic, see the example below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9a6937541fbddea46440fcd48333893cd5d56e" translate="yes" xml:space="preserve">
          <source>For example, with a configuration similar to what we've built above, the default graph output looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ca5be015266e03349192e63615b8d0cd3485dc" translate="yes" xml:space="preserve">
          <source>For example, you have reserved IPv4 address block 147.229.10.152/30, you can choose to assign either the whole block as one subnet to a device; or 2 subnets with CIDRs 147.229.10.152/31' and 147.229.10.154/31; or 4 subnets with mask prefix length 32. More about the elastic IP subnets is &lt;a href=&quot;https://help.packet.net/technical/networking/elastic-ips&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="0c2ca9700436b236018845479a5660f1e598284b" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;
$ terraform import heroku_app_release.foobar-release foobar
&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ccabe39bfa356e9f837285e374b96e6d59dcbe" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;
$ terraform import heroku_formation.foobar-web foobar:web
&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9f2cbf446a0b232c1ab948fa6be3f53e83400c" translate="yes" xml:space="preserve">
          <source>For fully-featured remote backends, Terraform can also use &lt;a href=&quot;locking&quot;&gt;state locking&lt;/a&gt; to prevent concurrent runs of Terraform against the same state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362083939426d6088c7384175ecc5d1b118627aa" translate="yes" xml:space="preserve">
          <source>For information about AWS Batch, see &lt;a href=&quot;http://docs.aws.amazon.com/batch/latest/userguide/what-is-batch.html&quot;&gt;What is AWS Batch?&lt;/a&gt; . For information about compute environment, see &lt;a href=&quot;http://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html&quot;&gt;Compute Environments&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbaa79a184062b610c4b28114d969873ae28d9a" translate="yes" xml:space="preserve">
          <source>For information about CloudFront distributions, see the &lt;a href=&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html&quot;&gt;Amazon CloudFront Developer Guide&lt;/a&gt;. For more information on generating origin access identities, see &lt;a href=&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html&quot;&gt;Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4ddfb70903f1173cb6b3a034973e0ff7d703c4" translate="yes" xml:space="preserve">
          <source>For information about CloudFront distributions, see the &lt;a href=&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html&quot;&gt;Amazon CloudFront Developer Guide&lt;/a&gt;. For specific information about creating CloudFront web distributions, see the &lt;a href=&quot;https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html&quot;&gt;POST Distribution&lt;/a&gt; page in the Amazon CloudFront API Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7880af8a31ef0178b504d1331b405ad9fd3575a2" translate="yes" xml:space="preserve">
          <source>For information about Lambda and how to use it, see &lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/welcome.html&quot;&gt;What is AWS Lambda?&lt;/a&gt; For information about event source mappings, see &lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/API_CreateEventSourceMapping.html&quot;&gt;CreateEventSourceMapping&lt;/a&gt; in the API docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8485654035baae413add655f8d80f33b300f144f" translate="yes" xml:space="preserve">
          <source>For information about Lambda and how to use it, see &lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/welcome.html&quot;&gt;What is AWS Lambda?&lt;/a&gt; For information about function aliases, see &lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/API_CreateAlias.html&quot;&gt;CreateAlias&lt;/a&gt; and &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/API_AliasRoutingConfiguration.html&quot;&gt;AliasRoutingConfiguration&lt;/a&gt; in the API docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d52acdc2c5d1743e3ffe3cf604f27107b60b87" translate="yes" xml:space="preserve">
          <source>For information about Lambda and how to use it, see &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/welcome.html&quot;&gt;What is AWS Lambda?&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab62057df529d82a3462fdcc034db62564a6909" translate="yes" xml:space="preserve">
          <source>For information about server certificates in IAM, see &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html&quot;&gt;Managing Server Certificates&lt;/a&gt; in AWS Documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640c7cd493705537b0b7853f8e00143a1d0f8c69" translate="yes" xml:space="preserve">
          <source>For information on the difference between the available Aurora MySQL engines see &lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html&quot;&gt;Comparison between Aurora MySQL 1 and Aurora MySQL 2&lt;/a&gt; in the Amazon RDS User Guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b4a2b1e7d824a027eb8b3b3228356f66c0e143" translate="yes" xml:space="preserve">
          <source>For internal load balancing, use a &lt;a href=&quot;compute_region_backend_service&quot;&gt;google_compute_region_backend_service&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333cd583f5b275c53ae4cf872fab1f5144231667" translate="yes" xml:space="preserve">
          <source>For larger deployment packages it is recommended by Amazon to upload via S3, since the S3 API has better support for uploading large files efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111de6baa1ea32ab5de4d5384a5a643dbe2c28de" translate="yes" xml:space="preserve">
          <source>For larger infrastructures, querying every resource is too slow. Many cloud providers do not provide APIs to query multiple resources at once, and the round trip time for each resource is hundreds of milliseconds. On top of this, cloud providers almost always have API rate limiting so Terraform can only request a certain number of resources in a period of time. Larger users of Terraform make heavy use of the &lt;code&gt;-refresh=false&lt;/code&gt; flag as well as the &lt;code&gt;-target&lt;/code&gt; flag in order to work around this. In these scenarios, the cached state is treated as the record of truth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946a1bf92a1d690882d62fab3b45a853a941d467" translate="yes" xml:space="preserve">
          <source>For local state, Terraform stores the workspace states in a directory called &lt;code&gt;terraform.tfstate.d&lt;/code&gt;. This directory should be be treated similarly to local-only &lt;code&gt;terraform.tfstate&lt;/code&gt;; some teams commit these files to version control, although using a remote backend instead is recommended when there are multiple collaborators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2591a94ca5d33f404bc0868e98baad56fe111112" translate="yes" xml:space="preserve">
          <source>For modules maintained within your organization, a version range strategy may be appropriate if a semantic versioning methodology is used consistently or if there is a well-defined release process that avoids unwanted updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6d4f1e60f6163e46e2fb03b46a110cb9602c02" translate="yes" xml:space="preserve">
          <source>For modules, a minimum version is recommended, such as &lt;code&gt;&amp;gt; 0.8.0&lt;/code&gt;. This minimum version ensures that a module operates as expected, but gives the consumer flexibility to use newer versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcca197de041e209bcbd2736edaa94f292db93a6" translate="yes" xml:space="preserve">
          <source>For more detailed documentation about each argument, refer to the &lt;a href=&quot;http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html&quot;&gt;AWS official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f98cebae980734dd799b5d8b6d83ec72ddbb61" translate="yes" xml:space="preserve">
          <source>For more detailed documentation about each argument, refer to the &lt;a href=&quot;http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-budget.html&quot;&gt;AWS official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413c8dfc619bd662b81339139056d6fb212ec334" translate="yes" xml:space="preserve">
          <source>For more detailed documentation about each argument, refer to the &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/redshift/index.html#cli-aws-redshift&quot;&gt;AWS official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33c362509526be248698dfad41a7724c193075b" translate="yes" xml:space="preserve">
          <source>For more detailed documentation about each argument, refer to the &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-cluster.html&quot;&gt;AWS official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69f7fffb1334d5f64f874252b390ba1c50b3b6f" translate="yes" xml:space="preserve">
          <source>For more detailed documentation about each argument, refer to the &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html&quot;&gt;AWS official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc704d7a4d29a2eb28933400175fd7f107189906" translate="yes" xml:space="preserve">
          <source>For more details on working with virtual machines in vSphere, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vm_admin.doc/GUID-55238059-912E-411F-A0E9-A7A536972A91.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f1eaedf805cc26e0a0df736300d47fbe215204" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;https://aws.amazon.com/documentation/firehose/&quot;&gt;Amazon Kinesis Firehose Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1f3cc378a2ee8474437f6e254081cd26cf9262" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;https://aws.amazon.com/documentation/kinesis/&quot;&gt;Amazon Kinesis Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f34e1408c1ac907be9fbe99a3b2f001e8918069" translate="yes" xml:space="preserve">
          <source>For more info about signed URL's is available &lt;a href=&quot;https://cloud.google.com/storage/docs/access-control/signed-urls&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd177976184bd8911281438ea1605ca456f7105b" translate="yes" xml:space="preserve">
          <source>For more information about Default Security Groups, see the AWS Documentation on &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#default-security-group&quot;&gt;Default Security Groups&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fbbc27732edf4144d0bad6ad7fc72956d0f4c8" translate="yes" xml:space="preserve">
          <source>For more information about Device Farm Projects, see the AWS Documentation on &lt;a href=&quot;http://docs.aws.amazon.com/devicefarm/latest/APIReference/API_GetProject.html&quot;&gt;Device Farm Projects&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5974a87ef9de6302721e0d56451fdede4b031b" translate="yes" xml:space="preserve">
          <source>For more information about Network ACLs, see the AWS Documentation on &lt;a href=&quot;http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html&quot;&gt;Network ACLs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a32ed7af3cf172f17fa7fb91630e4324a4b71c" translate="yes" xml:space="preserve">
          <source>For more information about Route Tables, see the AWS Documentation on &lt;a href=&quot;http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html#Route_Replacing_Main_Table&quot;&gt;Route Tables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02067cb3edd77c22adda062d10f625df12faa448" translate="yes" xml:space="preserve">
          <source>For more information about custom attributes, click &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-73606C4C-763C-4E27-A1DA-032E4C46219D.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362d184c29cf075f226f809f9fc7b8077f83f793" translate="yes" xml:space="preserve">
          <source>For more information about filtering, see the &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html&quot;&gt;EC2 API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e7bd7ab51b334a184bcaa39b493f7ea675bff1" translate="yes" xml:space="preserve">
          <source>For more information about managing normal Route Tables in Terraform, see our documentation on &lt;a href=&quot;route_table&quot;&gt;aws_route_table&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4d69e06db0219b2f082a29a2417c8731b66d8b" translate="yes" xml:space="preserve">
          <source>For more information about tags, click &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b9c305efa6c83fa908be95d5330e2fe2ea8ad" translate="yes" xml:space="preserve">
          <source>For more information about tags, click &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html&quot;&gt;here&lt;/a&gt;. For more information about tag categories specifically, click &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-BA3D1794-28F2-43F3-BCE9-3964CB207FB6.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49de67a048355c8579b8ec669c23c82ff3ea2f88" translate="yes" xml:space="preserve">
          <source>For more information how how to submit bug reports, feature requests, or details on how to make your own contributions to the provider, see the vSphere provider &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-vsphere&quot;&gt;project page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a158f1cfe1270cf11b083d3756fbc1d511f4499" translate="yes" xml:space="preserve">
          <source>For more information how how to submit feature requests, bug reports, or details on how to make your own contributions to the provider, see the &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-nsxt&quot;&gt;NSX-T provider project page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e6fef0f6e96a97f5c0263f64a6521e7bffd046" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;grant_tokens&lt;/code&gt; see the &lt;a href=&quot;http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html&quot;&gt;KMS Concepts&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c293c1fe455aba4348a0fc09dfa50caf8e24f9b3" translate="yes" xml:space="preserve">
          <source>For more information on Amazon Aurora, see &lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html&quot;&gt;Aurora on Amazon RDS&lt;/a&gt; in the Amazon RDS User Guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4059ee7cd60a0af18e50d6be746507c5525b2b18" translate="yes" xml:space="preserve">
          <source>For more information on Amazon MQ, see &lt;a href=&quot;https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/welcome.html&quot;&gt;Amazon MQ documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c927bf07a6e4d42c4cad25173f095e05833fa37" translate="yes" xml:space="preserve">
          <source>For more information on DPM within vSphere clusters, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfea11e8231e613fe941c53f92fea90e7d60df2" translate="yes" xml:space="preserve">
          <source>For more information on managed disks, such as sizing options and pricing, please check out the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/storage/storage-managed-disks-overview&quot;&gt;azure documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e9df835d36a50da6ec390be0b65fa070dfff8c" translate="yes" xml:space="preserve">
          <source>For more information on managing snapshots and how they work in VMware, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vm_admin.doc/GUID-CA948C69-7F58-4519-AEB1-739545EA94E5.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a651e485369a082d89fd35ea47cd8c9646df27a" translate="yes" xml:space="preserve">
          <source>For more information on state locking, view the &lt;a href=&quot;../state/locking&quot;&gt;page dedicated to state locking&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6787d1ff9bde1831f027542f95e760bbb5171450" translate="yes" xml:space="preserve">
          <source>For more information on the different example configurations, please check out the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/mt163591.aspx#Anchor_2&quot;&gt;azure documentation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a91782eb93978013cb5504560e572a8b2413df" translate="yes" xml:space="preserve">
          <source>For more information on the root resource pool, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-60077B40-66FF-4625-934A-641703ED7601.html&quot;&gt;Managing Resource Pools&lt;/a&gt; in the vSphere documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a594c0566c744f27ae80821448eecf314f1fdfe" translate="yes" xml:space="preserve">
          <source>For more information on the specific resources available, see the links in the navigation bar. Read on for information on the general patterns that apply to this provider's resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ab8d0d81fef0937d213e81fa5a14c854c7fb92" translate="yes" xml:space="preserve">
          <source>For more information on vSphere HA, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c17de4bb14b1984a7516e56f04cf28bf0425c5a" translate="yes" xml:space="preserve">
          <source>For more information on vSphere clusters and DRS, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-8ACF3502-5314-469F-8CC9-4A9BD5925BC2.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f1b8c6568bba887e993db0c3215ab9f2c6f057" translate="yes" xml:space="preserve">
          <source>For more information on vSphere clusters and DRS, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-8ACF3502-5314-469F-8CC9-4A9BD5925BC2.html&quot;&gt;this page&lt;/a&gt;. For more information on vSphere HA, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8358ec273c3216a07a34e5ab3116993defcf5c" translate="yes" xml:space="preserve">
          <source>For more information on vSphere datastore clusters and Storage DRS, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-598DF695-107E-406B-9C95-0AF961FC227A.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5fb2a858cb27dd20b2c221320f26d8e7150e75" translate="yes" xml:space="preserve">
          <source>For more information on vSphere resource pools, see &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-60077B40-66FF-4625-934A-641703ED7601.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8caa3b48c83d8376ecc4a2d9d658b02e88715fa" translate="yes" xml:space="preserve">
          <source>For more information on why Terraform requires state and why Terraform cannot function without state, please see the page &lt;a href=&quot;purpose&quot;&gt;state purpose&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7682bdfa686726f6d6c9a6ab3a5a9ba75579100" translate="yes" xml:space="preserve">
          <source>For more information on why Terraform requires state and why Terraform cannot function without state, please see the page &lt;a href=&quot;state/purpose&quot;&gt;state purpose&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48473c712349eacffd1d55e44f9f15bad109a9f" translate="yes" xml:space="preserve">
          <source>For more information regarding modules, check out the section on &lt;a href=&quot;../modules/usage&quot;&gt;Using Modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e59dff6a893caed5826c9c3224bc98d355e28d1" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;https://cloud.google.com/kms/docs/encrypt-decrypt&quot;&gt;the official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882767b107ea642c70cb991495dcef164ba0a3af" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://cloud.google.com/compute/docs/usage-export&quot;&gt;Docs&lt;/a&gt; and for further details, the &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/rest/beta/projects/setUsageExportBucket&quot;&gt;API Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2e28f5e8b7f357c21b1d9fa0b5133bdc9cd70d" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../commands/init&quot;&gt;the &lt;code&gt;terraform init&lt;/code&gt; command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3e842f6c06a78f35a880768360d0b0cec9480c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://cloud.google.com/source-repositories/&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/source-repositories/docs/reference/rest/v1/projects.repos&quot;&gt;API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e02f0700f66d5aab84360a1dc83c92c0647fc2c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html&quot;&gt;Task Networking&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b165d497d7e17b463f0a9c172b1b35c2a8a4f6" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://docs.aws.amazon.com/glue/latest/dg/populate-add-connection.html#connection-JDBC-VPC&quot;&gt;AWS Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0095e7fc27b26c00df3d410bbeb6dc3e05c67c3" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://www.vaultproject.io/api/auth/aws/index.html#configure-client&quot;&gt;Vault docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1392460f0dcc229ee3600d7197bbade4f847c8" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://www.vaultproject.io/api/auth/aws/index.html#configure-identity-whitelist-tidy-operation&quot;&gt;Vault docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31750619e5b63354c0de9ff44086e13bfb04074" translate="yes" xml:space="preserve">
          <source>For more information, see, &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/projects&quot;&gt;the Project API documentation&lt;/a&gt;, where the Shared VPC feature is referred to by its former name &quot;XPN&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5ad339b85398179fd69e2d24cd1c8660da96dd" translate="yes" xml:space="preserve">
          <source>For more on debugging Terraform, check out the section on &lt;a href=&quot;../internals/debugging&quot;&gt;Debugging&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bd1deb5cd544b350f469e63248988da1a2ada8" translate="yes" xml:space="preserve">
          <source>For more on how to use &lt;code&gt;TF_VAR_name&lt;/code&gt; in context, check out the section on &lt;a href=&quot;variables&quot;&gt;Variable Configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91e7f773c640effd6c76c3183154ec58c4b1a2c" translate="yes" xml:space="preserve">
          <source>For new accounts, you should initially run these steps manually:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462a608ce77c737888972a6a5b42c53c2e1bd88a" translate="yes" xml:space="preserve">
          <source>For provisioners other than local execution, you must specify &lt;a href=&quot;connection&quot;&gt;connection settings&lt;/a&gt; so Terraform knows how to communicate with the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06e5905b612e9d8d5ca1e7f2aed09a8f5dce510" translate="yes" xml:space="preserve">
          <source>For pull requests that follow the guidelines, we expect to be able to review and merge very quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5289138762b6c6e4896b07f7ae4da92301b16e3" translate="yes" xml:space="preserve">
          <source>For routine use it is recommended to check out configuration from version control separately, using the version control system's own commands. This way it is possible to pass extra flags to the version control system when necessary, and to perform other preparation steps (such as configuration generation, or activating credentials) before running &lt;code&gt;terraform init&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7826a6abf5734db4aba60ba3c3e81286116643" translate="yes" xml:space="preserve">
          <source>For server addresses, use a provider-specific resource to create a DNS record with a predictable name and then either use that name directly or use &lt;a href=&quot;../providers/dns/index&quot;&gt;the &lt;code&gt;dns&lt;/code&gt; provider&lt;/a&gt; to retrieve the published addresses in other configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311ae12eefeb1cecaa329537367318569a8642b3" translate="yes" xml:space="preserve">
          <source>For simplicity here we will assume you are already using a set of IAM credentials with suitable access to create Lambda functions and work with API Gateway. If you aren't sure and are working in an AWS account used only for development, the simplest approach to get started is to use credentials with full administrative access to the target AWS account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0559b1a317c3b0e4829df6e57e7edd11bd7e587d" translate="yes" xml:space="preserve">
          <source>For simplicity here, we will assume you are already using a set of IAM credentials with suitable access to create AutoScaling, EC2, EKS, and IAM resources. If you are not sure and are working in an AWS account used only for development, the simplest approach to get started is to use credentials with full administrative access to the target AWS account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6cebb8815f046de220c94961ec23d28652ec65" translate="yes" xml:space="preserve">
          <source>For small infrastructures, Terraform can query your providers and sync the latest attributes from all your resources. This is the default behavior of Terraform: for every plan and apply, Terraform will sync all resources in your state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d5a16d839297188f0e7ce7921b990ec62d98d1" translate="yes" xml:space="preserve">
          <source>For some background on graph theory, and a summary of how Terraform applies it, see the HashiCorp 2016 presentation &lt;a href=&quot;https://www.youtube.com/watch?v=Ce3RNfRbdZ0&quot;&gt;&lt;em&gt;Applying Graph Theory to Infrastructure as Code&lt;/em&gt;&lt;/a&gt;. This presentation also covers some similar ideas to the following guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d759443ab70ead292177823f73b68e40dc28a2" translate="yes" xml:space="preserve">
          <source>For some providers like AWS, Terraform could theoretically use something like AWS tags. Early prototypes of Terraform actually had no state files and used this method. However, we quickly ran into problems. The first major issue was a simple one: not all resources support tags, and not all cloud providers support tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c25109a526ca3332cf8801b45c6e21305b63740" translate="yes" xml:space="preserve">
          <source>For teams that use Terraform as a key part of a change management and deployment pipeline, it can be desirable to orchestrate Terraform runs in some sort of automation in order to ensure consistency between runs, and provide other interesting features such as integration with version control hooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592ce62c9467c33ca92d8019a49fbdde1b780a90" translate="yes" xml:space="preserve">
          <source>For the access credentials we recommend using a &lt;a href=&quot;../config&quot;&gt;partial configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30989233527ed9c1089bc103e86ee820caef5bcb" translate="yes" xml:space="preserve">
          <source>For the latest required policy, see the &lt;a href=&quot;https://docs.aws.amazon.com/eks/latest/userguide/&quot;&gt;EKS User Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57e00eb675e2acd2614da2f09afa6a3a1e48b46" translate="yes" xml:space="preserve">
          <source>For the legacy API (PowerDNS version 3.4):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec620fb8aee2579dec0ca4dbfc276386b9bdcc7" translate="yes" xml:space="preserve">
          <source>For the sake of example, this guide uses the test URLs offered by default by API Gateway. In practice, most applications will be deployed at a custom hostname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb8bf0f711a078c821ab19de69815bb08312757" translate="yes" xml:space="preserve">
          <source>For the sake of this section, the term &quot;environment account&quot; refers to one of the accounts whose contents are managed by Terraform, separate from the administrative account described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b37aa777ba30002a52c1d87970fad2e835cc49" translate="yes" xml:space="preserve">
          <source>For the sake of this tutorial we will perform these build steps manually and build a very simple AWS Lambda function. Start by creating a new directory called &lt;code&gt;example&lt;/code&gt; that will be used to create the archive, and place in it a single source file. We will use the JavaScript runtime in this example, so our file is called &lt;code&gt;main.js&lt;/code&gt; and will contain the following source code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c93d6b3a21cae104f9353b6ae295941c9518685" translate="yes" xml:space="preserve">
          <source>For the technical details of each virtual disk provisioning policy, click &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vm_admin.doc/GUID-4C0F4D73-82F2-4B81-8AA7-1DD752A8A5AC.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5c959b1792a78da9fd2ab5584be220b7162d5d" translate="yes" xml:space="preserve">
          <source>For the v1 API (PowerDNS version 4):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a414d89090df829564e98d3c1f512d2fdf5dcce3" translate="yes" xml:space="preserve">
          <source>For use in subdomains, note that you need to create a &lt;code&gt;aws_route53_record&lt;/code&gt; of type &lt;code&gt;NS&lt;/code&gt; as well as the subdomain zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b883f880eaeac8105b5da4cd808090b5f09a934f" translate="yes" xml:space="preserve">
          <source>Force Unlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615e1cdc19814103116fea3715e2fbd3c0c722a0" translate="yes" xml:space="preserve">
          <source>ForceNew</source>
          <target state="translated">ForceNew</target>
        </trans-unit>
        <trans-unit id="0b7a5c28c8fcc648b8ea0a4c120e069142b02667" translate="yes" xml:space="preserve">
          <source>Forcing the recreation of a resource is useful when you want a certain side effect of recreation that is not visible in the attributes of a resource. For example: re-running provisioners will cause the node to be different or rebooting the machine from a base image will cause new startup scripts to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="a6046db0634e080ec548c336fde8567a7ccfe6ae" translate="yes" xml:space="preserve">
          <source>Format: &lt;code&gt;ddd:hh24:mi-ddd:hh24:mi&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5313467f9cf9b29db2c652dddb42cfc6b87b2ee" translate="yes" xml:space="preserve">
          <source>Forwarded Values Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ab70dcfb040de046e88e1b65f001ace827b74f" translate="yes" xml:space="preserve">
          <source>Forwarding URL actions support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b300141f9d8fa196a76cd03961abbc65ea5fdc1b" translate="yes" xml:space="preserve">
          <source>Forwarding rules can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93524d2058516bacde3cf6c470befdc1d702cd3" translate="yes" xml:space="preserve">
          <source>From your command prompt, change to the directory containing that file and add it to a zip file in the parent directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cd73dd0789e6b2b20e0ddf99f41e8fda3798d9" translate="yes" xml:space="preserve">
          <source>Full Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a804f20731b2ed701665c58bcd085ab2d6e3a3" translate="yes" xml:space="preserve">
          <source>Full Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370805caefae5dbc0495ed1764f5d25a018c61f2" translate="yes" xml:space="preserve">
          <source>Full details on role delegation are covered in the AWS documentation linked above. The most important details are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97740d49afb132ca3ff91c6658b14008144cd3eb" translate="yes" xml:space="preserve">
          <source>Full details on the core parameters and impacts are in the API Docs: &lt;a href=&quot;http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_RestoreDBInstanceFromS3.html&quot;&gt;RestoreDBInstanceFromS3&lt;/a&gt;. Sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd7070fb82e92bfd9f95e5cdda6318772b45b88" translate="yes" xml:space="preserve">
          <source>Full details on the core parameters and impacts are in the API Docs: &lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_RestoreDBClusterFromS3.html&quot;&gt;RestoreDBClusterFromS3&lt;/a&gt;. Requires that the S3 bucket be in the same region as the RDS cluster you're trying to create. Sample:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b3bd925a5a7b585764404e4eb3bfdafc54a0ee" translate="yes" xml:space="preserve">
          <source>Full usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d167a6a39972da72e35cb93cf7d7ba4f1a9a1d9" translate="yes" xml:space="preserve">
          <source>Function Apps can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043696fee061f3d0dfa187e1267a247185e3ef98" translate="yes" xml:space="preserve">
          <source>Function Behaviors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999ea718ef43d3f406321dd91e57581e0f3911ed" translate="yes" xml:space="preserve">
          <source>Functions can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95e454330c0e1e48c3fb110bbcb0e04a9438f12" translate="yes" xml:space="preserve">
          <source>Functions should &lt;em&gt;never&lt;/em&gt; intentionally &lt;code&gt;panic&lt;/code&gt; or call &lt;code&gt;os.Exit&lt;/code&gt; - always return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">Дальнейшее чтение</target>
        </trans-unit>
        <trans-unit id="81cbfcf4599c25c92054ade14ab7e40194a385ed" translate="yes" xml:space="preserve">
          <source>Further documentation on GitHub collaborators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18acaa702cd6585271a5458e8e3e90518634aa71" translate="yes" xml:space="preserve">
          <source>Further documentation on GitHub repository deploy keys: - &lt;a href=&quot;https://developer.github.com/guides/managing-deploy-keys/#deploy-keys&quot;&gt;About deploy keys&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cba160fe064a0d9a4fc24f20540221a2aff0ed" translate="yes" xml:space="preserve">
          <source>Future Work</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c9bcf9913f711ce7d2d3597d6dc6885df538eb" translate="yes" xml:space="preserve">
          <source>Future versions of Terraform will make plan files more secure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712aeda34f8331c7ae91592e24ec2034c9d2e4d4" translate="yes" xml:space="preserve">
          <source>Future versions of this resource may allow you to control the hosts that a datastore is mounted to, but currently, this automatic behaviour cannot be changed, so keep this in mind when writing your configurations and deploying your disks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21dddd2448e5571f5a087cb91d0be0735e6d810" translate="yes" xml:space="preserve">
          <source>GCS</source>
          <target state="translated">GCS</target>
        </trans-unit>
        <trans-unit id="5114cee1817c347fa9115725bab86f352135e41d" translate="yes" xml:space="preserve">
          <source>GKE clusters can be imported using the &lt;code&gt;project&lt;/code&gt; , &lt;code&gt;zone&lt;/code&gt; or &lt;code&gt;region&lt;/code&gt;, and &lt;code&gt;name&lt;/code&gt;. If the project is omitted, the default provider value will be used. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4a161f6c39203c7231dba564201ab088943b07" translate="yes" xml:space="preserve">
          <source>Gamelift Aliases can be imported using the ID, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc2d967bb6859f93f3c6fb9fe4d362876826aaf" translate="yes" xml:space="preserve">
          <source>Gamelift Builds cannot be imported at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8160c69b264d391662d29796b25665cc50345b7" translate="yes" xml:space="preserve">
          <source>Gamelift Fleets cannot be imported at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0c010fef7b3f6f0954289e515d9a686564d5c1" translate="yes" xml:space="preserve">
          <source>Gandi</source>
          <target state="translated">Gandi</target>
        </trans-unit>
        <trans-unit id="7335d542cd48c93742fde42d0fb3387be475495f" translate="yes" xml:space="preserve">
          <source>General HA options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5b2231ebb51b96ad83f42c8232a3a30504b098" translate="yes" xml:space="preserve">
          <source>General Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca6ac6f375a184f4cbe46973fa116a69e8dd803" translate="yes" xml:space="preserve">
          <source>General Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f114ab7ef688858a651ce75d972b191fc78ab0" translate="yes" xml:space="preserve">
          <source>General network I/O control arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcb5f8aaf1a9e559046fd7b5b3d79bbe4d3f426" translate="yes" xml:space="preserve">
          <source>General options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d316386c5b5b671089488b11fe81c62e27ade288" translate="yes" xml:space="preserve">
          <source>Generate Python Script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5d55de58ba5b2e6620e425ed0ba1fdd0dbdd35" translate="yes" xml:space="preserve">
          <source>Generate Scala Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa8d82ee5d3f1e20a5bcac3469ca90716cb473c" translate="yes" xml:space="preserve">
          <source>Generate a Public/Private Key Pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4866fc071d0459d035c1aaaeb5b01fc8af3aec" translate="yes" xml:space="preserve">
          <source>Generate an API v2 access token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07361513f754dd687a6b722b1894b7e0d93d1c1" translate="yes" xml:space="preserve">
          <source>Generates a &lt;em&gt;Certificate Signing Request&lt;/em&gt; (CSR) in PEM format, which is the typical format used to request a certificate from a certificate authority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2281297f25d5bd73e2acfff23d197254f80e84eb" translate="yes" xml:space="preserve">
          <source>Generates a &lt;em&gt;self-signed&lt;/em&gt; TLS certificate in PEM format, which is the typical format used to configure TLS server software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf41717dc2628386742b8b8c4fa795c79bdd2fcd" translate="yes" xml:space="preserve">
          <source>Generates a TLS certificate using a &lt;em&gt;Certificate Signing Request&lt;/em&gt; (CSR) and signs it with a provided certificate authority (CA) private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd06886887b336b7aad2a21d2afc656ce255fa5c" translate="yes" xml:space="preserve">
          <source>Generates a local file with the given content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63554f413d0582fcf20c91032b9c569067de0850" translate="yes" xml:space="preserve">
          <source>Generates a secure private key and encodes it as PEM. This resource is primarily intended for easily bootstrapping throwaway development environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f32b059175763742ef89e8c11e90782f37798f" translate="yes" xml:space="preserve">
          <source>Generates an IAM policy document in JSON format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8947c5501037b83a1e966e8127871421d7a543" translate="yes" xml:space="preserve">
          <source>Generates an IAM policy document that may be referenced by and applied to other Google Cloud Platform resources, such as the &lt;code&gt;google_project&lt;/code&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21a9572c3b95c6a73c2dc8c82861e76271fcbf4" translate="yes" xml:space="preserve">
          <source>Generates an archive from content, a file, or directory of files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992d2b949a0f6e7633e9766da84c8a422d0a130f" translate="yes" xml:space="preserve">
          <source>Generating Images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fd33bb7f0af6442e952a06fd6a8ad461cceab3" translate="yes" xml:space="preserve">
          <source>Generating a New Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d1c1d0ae0f72eb122c957f0b33e3c1556ef36b" translate="yes" xml:space="preserve">
          <source>Generic &lt;a href=&quot;#generic-git-repository&quot;&gt;Git&lt;/a&gt;, &lt;a href=&quot;#generic-mercurial-repository&quot;&gt;Mercurial&lt;/a&gt; repositories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd62eb96de94e649be729f01ee2a8bdcb7f367e" translate="yes" xml:space="preserve">
          <source>Generic Git Repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2802b340a7c4f3843205424013a5c9b0611857" translate="yes" xml:space="preserve">
          <source>Generic Git repositories are also supported. The value of &lt;code&gt;source&lt;/code&gt; in this case should be a complete Git-compatible URL. Using generic Git repositories requires that Git is installed on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c91754e882409fe3ddea0c029999754b66bb24b" translate="yes" xml:space="preserve">
          <source>Generic HTTP repositories are supported, and state from different configurations may be kept at different subpaths within the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6b8639071a0924c60b7c74122986cf6257a730" translate="yes" xml:space="preserve">
          <source>Generic Mercurial Repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c881f78caf049df7a232de1cc3b22a9eeddcba" translate="yes" xml:space="preserve">
          <source>Generic Mercurial repositories are supported. The value of &lt;code&gt;source&lt;/code&gt; in this case should be a complete Mercurial-compatible URL. Using generic Mercurial repositories requires that Mercurial is installed on your system. You must tell Terraform that your &lt;code&gt;source&lt;/code&gt; is a Mercurial repository by prefixing it with &lt;code&gt;hg::&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bc8bfe5d73616cd1e989884b0919f48b512ad0" translate="yes" xml:space="preserve">
          <source>Generic Rest API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e15e53c81e2e9366d07c8852498246e7979fc0" translate="yes" xml:space="preserve">
          <source>Geo Info blocks support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bae414cd0d7c10170d3ba3336c0f9effd3503e" translate="yes" xml:space="preserve">
          <source>Geolocation routing policies support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71468a330a848699ca436b3fb505abfbafaacdd0" translate="yes" xml:space="preserve">
          <source>Get a Compute Instance Group within GCE. For more information, see &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/instanceGroups&quot;&gt;API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baf08984146dd9df093aa8c923e962e817138f9" translate="yes" xml:space="preserve">
          <source>Get a Compute Region Instance Group within GCE. For more information, see &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bd6a6ee2fe30e5dfe06d6b519c0f4d0fe6a7fd" translate="yes" xml:space="preserve">
          <source>Get a Specific Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26be369e85538b8d3f74126c6d77acda7cfd1526" translate="yes" xml:space="preserve">
          <source>Get a VPN gateway within GCE from its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489d6bcae506e011b676ae8cf41e5ca41436d2ad" translate="yes" xml:space="preserve">
          <source>Get a forwarding rule within GCE from its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b6a802e30e7ed281e8a314c197191f116cb33b" translate="yes" xml:space="preserve">
          <source>Get a network within GCE from its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7d6cf027ebdb0c09e95328a32c5082173c833d" translate="yes" xml:space="preserve">
          <source>Get a subnetwork within GCE from its name and region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebfa048f4a2fd66fb7f39c988dc88a30c9f17b7" translate="yes" xml:space="preserve">
          <source>Get an active folder within GCP by &lt;code&gt;display_name&lt;/code&gt; and &lt;code&gt;parent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4684713113cd7eec5984701dd8594c8eaebfe274" translate="yes" xml:space="preserve">
          <source>Get info about a cluster within GKE from its name and zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0d87a5aed6867433e6c32ec81d7094fc4bf9e6" translate="yes" xml:space="preserve">
          <source>Get information about a Google Cloud Function. For more information see the &lt;a href=&quot;https://cloud.google.com/functions/docs/&quot;&gt;official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/functions/docs/apis&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc55ae656d454650235b86e90cd16336e0cbf45" translate="yes" xml:space="preserve">
          <source>Get information about a Google Compute Image. Check that your service account has the &lt;code&gt;compute.imageUser&lt;/code&gt; role if you want to share &lt;a href=&quot;https://cloud.google.com/compute/docs/images/sharing-images-across-projects&quot;&gt;custom images&lt;/a&gt; from another project. If you want to use &lt;a href=&quot;https://cloud.google.com/compute/docs/images#os-compute-support&quot;&gt;public images&lt;/a&gt;, do not forget to specify the dedicated project. For more information see &lt;a href=&quot;https://cloud.google.com/compute/docs/images&quot;&gt;the official documentation&lt;/a&gt; and its &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/images&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5254246c00f94cb034f7d66694582b7a40718dac" translate="yes" xml:space="preserve">
          <source>Get information about an Application Security Group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b79f3614a8923000dde4c9c00da756de52cd8a3" translate="yes" xml:space="preserve">
          <source>Get information on a AWS Certificate Manager Private Certificate Authority (ACM PCA Certificate Authority).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4edf1f66d1b38d4ef6f7a92d3fbcd31cf45a55" translate="yes" xml:space="preserve">
          <source>Get information on an snapshot images. The aim of this datasource is to enable you to build droplets based on snapshot names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331b95b90777470ee9712a41428f172b26ee6788" translate="yes" xml:space="preserve">
          <source>Get service account public key. For more information, see &lt;a href=&quot;https://cloud.google.com/iam/docs/creating-managing-service-account-keys&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts.keys/get&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b184c8fa406b108e4fd91ed2126339092fbd87" translate="yes" xml:space="preserve">
          <source>Get the IP address from a static address reserved for a Global Forwarding Rule which are only used for HTTP load balancing. For more information see the official &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/globalAddresses&quot;&gt;API&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ceb4c5e8a4ce863f570d675cfdcb3de982ac7ef" translate="yes" xml:space="preserve">
          <source>Get the IP address from a static address. For more information see the official &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/addresses/get&quot;&gt;API&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aea95e328b6e1d9e112efc7d7c2753f047d95fe" translate="yes" xml:space="preserve">
          <source>Get the data about a snapshot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f95aacd8a838461b85c4f7360382ebe3e4c2978" translate="yes" xml:space="preserve">
          <source>Get the service account from a project. For more information see the official &lt;a href=&quot;https://cloud.google.com/compute/docs/access/service-accounts&quot;&gt;API&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9576eabd72d938bc09534196c7e4c45503c285cd" translate="yes" xml:space="preserve">
          <source>Gets an SSL Policy within GCE from its name, for use with Target HTTPS and Target SSL Proxies. For more information see &lt;a href=&quot;https://cloud.google.com/compute/docs/load-balancing/ssl-policies&quot;&gt;the official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e91a184617ea42e0c641141567769389e42518" translate="yes" xml:space="preserve">
          <source>Gets information about a Key Vault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31db88413fb7fdbe1ccbe32671b9a02a9e11f52" translate="yes" xml:space="preserve">
          <source>Gets information about a Route Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb7aa6c70be2a2c8432f7843b9222716745b46f" translate="yes" xml:space="preserve">
          <source>Gets information about a managed Kubernetes Cluster (AKS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ea07077ad98b747d317a47fd509d54a10b06cd" translate="yes" xml:space="preserve">
          <source>Gets information about the specified Storage Account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0f73ca6aa746ede1e77153dd3bf5bb16e841ab" translate="yes" xml:space="preserve">
          <source>Getting Help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4397104795ecb508040fba151b88ccbad0b22660" translate="yes" xml:space="preserve">
          <source>Getting Started with AWS EKS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc6ac056f3fec021145b60865516f62325df855" translate="yes" xml:space="preserve">
          <source>Getting Started with Kubernetes provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88035cca47180fa1c293ed24df911052834b972" translate="yes" xml:space="preserve">
          <source>Getting the Account ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="337bb8db7da1c583ae0957f929b8128fc21206f7" translate="yes" xml:space="preserve">
          <source>GitHub Enterprise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ac5163150288fa32f9a8cb4e56754155d79435" translate="yes" xml:space="preserve">
          <source>GitHub Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b2050ed087f015dee68b615df90b0cfebe6f77" translate="yes" xml:space="preserve">
          <source>GitHub source URLs require that Git is installed on your system and that you have access to the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d64d3b3a2a238d57aaf3e5ab329ab4fa79629d1" translate="yes" xml:space="preserve">
          <source>GitLab Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53ced31f785a1888b348de05057011fedd3be48" translate="yes" xml:space="preserve">
          <source>Github</source>
          <target state="translated">Github</target>
        </trans-unit>
        <trans-unit id="3945c5d7efa7665bf62459a8df9ac8b878c070dd" translate="yes" xml:space="preserve">
          <source>Github Branch Protection can be imported using an id made up of &lt;code&gt;repository:branch&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc9d577f8ffed6909c5984d1691336229000af5" translate="yes" xml:space="preserve">
          <source>Github Issue Labels can be imported using an id made up of &lt;code&gt;repository:name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9667e86dc51502b4be7737bcac70143d323823fc" translate="yes" xml:space="preserve">
          <source>Github Membership can be imported using an id made up of &lt;code&gt;organization:username&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fc86fba54b5ff1e6265c55f2310631cccfaa1e" translate="yes" xml:space="preserve">
          <source>Github Repository Collaborators can be imported using an id made up of &lt;code&gt;repository:username&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15375dc415be1add42d7a71cebc2ebc88d5b317a" translate="yes" xml:space="preserve">
          <source>Github Team Membership can be imported using an id made up of &lt;code&gt;teamid:repository&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826893ca3845478bd825ab01548070353926abea" translate="yes" xml:space="preserve">
          <source>Github Team Membership can be imported using an id made up of &lt;code&gt;teamid:username&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b6b6b721e5d306274d353908907407f45d7516" translate="yes" xml:space="preserve">
          <source>Github Teams can be imported using the github team Id e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f079a831cab27bcda7d81cd9b48296d0c3dd92ee" translate="yes" xml:space="preserve">
          <source>Gitlab</source>
          <target state="translated">Gitlab</target>
        </trans-unit>
        <trans-unit id="bb9112cbdfec99e95e6c4028cb8795d3bf2d5cd7" translate="yes" xml:space="preserve">
          <source>Given a Terraform config that includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fe54da79cacc5631f6d318e9f0d4b263838e15" translate="yes" xml:space="preserve">
          <source>Given a hostname, discovery begins by forming an initial discovery URL using that hostname with the &lt;code&gt;https:&lt;/code&gt; scheme and the fixed path &lt;code&gt;/.well-known/terraform.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2411ed58e5a9fe331fc1216452184faf1b334b" translate="yes" xml:space="preserve">
          <source>Given a version control source, it can serve as a shorthand for checking out a configuration from version control and then initializing the work directory for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61602d7acbdddfbd558680f24d092fab0231ce4" translate="yes" xml:space="preserve">
          <source>Given that provider plugins can be quite large (on the order of hundreds of megabytes), this default behavior can be inconvenient for those with slow or metered Internet connections. Therefore Terraform optionally allows the use of a local directory as a shared plugin cache, which then allows each distinct plugin binary to be downloaded only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ac8764e49e76cfcb0fc291652f2bc5bdf4a0eb" translate="yes" xml:space="preserve">
          <source>Given the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11acb349a0b1cd6742cac6875fb572147c4be38d" translate="yes" xml:space="preserve">
          <source>Glacier Vaults can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69893ac8274af3142b8f034cf592d952a7eafc0" translate="yes" xml:space="preserve">
          <source>Global DNS settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f66fd8f0854e18f06b60313401a50700338d94" translate="yes" xml:space="preserve">
          <source>Global datastore migration can be handled by changing the global &lt;code&gt;datastore_id&lt;/code&gt; attribute. This triggers a storage migration for all disks that do not have an explicit &lt;code&gt;datastore_id&lt;/code&gt; specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f5a01894b24214182aa7eee5edba864aa432e2" translate="yes" xml:space="preserve">
          <source>Global forwarding rules can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1166279aa7ee961fb57bea4bbcbb8dc0ddc163c0" translate="yes" xml:space="preserve">
          <source>Global routing settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7981ddd0ff9cd3db3ed346b245a3a28a4f18d459" translate="yes" xml:space="preserve">
          <source>GlobalAddress can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbec7419df7b3fb05227593b191b03eccbb694fd" translate="yes" xml:space="preserve">
          <source>Glue</source>
          <target state="translated">Glue</target>
        </trans-unit>
        <trans-unit id="e7d209f4f879fd5edd86200f7a57a0de172003c4" translate="yes" xml:space="preserve">
          <source>Glue Catalog Databases can be imported using the &lt;code&gt;catalog_id:name&lt;/code&gt;. If you have not set a Catalog ID specify the AWS Account ID that the database is in, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df119c650f1f0306faddbd56122535a72cf2c083" translate="yes" xml:space="preserve">
          <source>Glue Classifiers can be imported using their name, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967fa4a093bc6bb524e8086745a77d7d1701648e" translate="yes" xml:space="preserve">
          <source>Glue Connections can be imported using the &lt;code&gt;CATALOG-ID&lt;/code&gt; (AWS account ID if not custom) and &lt;code&gt;NAME&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ea4cfe505fb901035709348ec95dadf4c55239" translate="yes" xml:space="preserve">
          <source>Glue Crawlers can be imported using &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9adb50a48c4699127055c4cb97cf986fb67c7c5" translate="yes" xml:space="preserve">
          <source>Glue Jobs can be imported using &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6d480ccfa43cc8167018a39ac4df747e8137e8" translate="yes" xml:space="preserve">
          <source>Glue Tables can be imported with their catalog ID (usually AWS account ID), database name, and table name, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc4e35dcad407d3ec6d75a6a0397cbb86a176b1" translate="yes" xml:space="preserve">
          <source>Glue Triggers can be imported using &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c84ab34ad82077587e8c7da2656f71a8003ced6" translate="yes" xml:space="preserve">
          <source>Go Plugin Architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22fbed9baee5926a544e423998e44f29f8aec73" translate="yes" xml:space="preserve">
          <source>Go requires a &lt;code&gt;main.go&lt;/code&gt; file, which is the default executable when the binary is built. Since Terraform plugins are distributed as Go binaries, it is important to define this entry-point with the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e9753fd2dd6a69719319434661a8117b88e956" translate="yes" xml:space="preserve">
          <source>GoCD</source>
          <target state="translated">GoCD</target>
        </trans-unit>
        <trans-unit id="bf7e797b37dd1dc65793bd22dc5b9f5d86856349" translate="yes" xml:space="preserve">
          <source>Going forward there is only one file in the distribution so you will need to perform a one-time cleanup when upgrading from Terraform &amp;lt; 0.7 to Terraform 0.7 or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570374e4e4cc42f26e069bb5d791b5bbe89e4068" translate="yes" xml:space="preserve">
          <source>Google Calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e20207c59bed99b9c0c29d92d00fe7a54842fdd" translate="yes" xml:space="preserve">
          <source>Google Cloud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493f18767b25597bdefb3340b4518cb9623d23e5" translate="yes" xml:space="preserve">
          <source>Google Cloud Messaging (GCM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482dde1b9cad4acc9d70908f045239807dbf38e5" translate="yes" xml:space="preserve">
          <source>Google Cloud Platform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a69b289da18e257fc9815f77fc2ab0551dc2d0" translate="yes" xml:space="preserve">
          <source>Google Cloud Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2958c7a854ba92ade5a40a2389ef7815d0c2392" translate="yes" xml:space="preserve">
          <source>Google Cloud:   google_dataproc_cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a82664271e9390cda44270c14fee79c3939911" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google BigQuery Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da2990e750098e4fbac3693c52e50a99dcd9e95" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Bigtable Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc91c924ed632c486190c718beb8a7b2caf370f" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Cloud Build Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed06c019d70208155b9cc2968741afe26ab59c8" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Cloud Functions Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3254b759039b4e1db769f6dc3d9469d3e250bd84" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Cloud IoT Core</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e00b4e0568d99926d8798f947b94a1c4024177" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Cloud Platform Data Sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3c2786dcc65cb2fe342d8db6108b21e07c4746" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Cloud Platform Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1218e337fd8ce0ca60c6717600f6924ad78395b9" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Compute Engine Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437142b19bfdbfd36d8127f490198e34e7e6a418" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google DNS Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a12a858da0e633abc0d1c9b7f602df2e506232b" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Dataflow Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbecbfa5c9099b88906cb04b9e9d9f950c3fe824" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Dataproc Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efebefca83cdc0592ac39b14b99fbba3d796069d" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Endpoints Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd35392aebe8a6be66c804017ab9889d465fddd4" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Key Management Service Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98c71fc1075231bda54868f9c37da70ab143fb5" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Kubernetes (Container) Engine Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0854cc3a3884d0f26250feb4d3b54c0b5b876a8" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google PubSub Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89936f0202f6aa60ca259bcb806282452368e44" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Redis (Cloud Memorystore) Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84579a029f02fbd61fd877e64a178cc06cbc45fd" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google RuntimeConfig Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89aa13f0197e43c29d31c0756d831d62289142d5" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google SQL Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35e2f319a490b62358b1bde09c1a7727311ff8c" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Spanner Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6fe89685b21b20a6f448ccdf0fee5e4032c6f4" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Stackdriver Logging Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12306d4d09e597bbd112c52eae11987d10a63e9" translate="yes" xml:space="preserve">
          <source>Google Cloud: Google Storage Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6de6ad89687fea9e29b2e9848fb8421f160505" translate="yes" xml:space="preserve">
          <source>Google Compute Engine Shared VPC host project feature can be imported using the &lt;code&gt;project&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe47149b62e7996b2283df2e6c47191bfd1b68ba" translate="yes" xml:space="preserve">
          <source>Google Compute Engine Shared VPC service project feature can be imported using the &lt;code&gt;host_project&lt;/code&gt; and &lt;code&gt;service_project&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b803cd999de2a6e84e53b93cedf849c6c3a63248" translate="yes" xml:space="preserve">
          <source>Google G Suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe5da1f43308a5f67539612b002f7898a686bbc" translate="yes" xml:space="preserve">
          <source>Grafana</source>
          <target state="translated">Grafana</target>
        </trans-unit>
        <trans-unit id="561a7470c02b48806e4d4e0b94e2ce80ec499e77" translate="yes" xml:space="preserve">
          <source>Grafana Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0a0eb960fda3a30271fad1c259afbb0e91d0c1" translate="yes" xml:space="preserve">
          <source>Grant the Application access to manage resources in your Azure Subscription</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4723b57914a82670ffbc5fbea8104acb7a6590b1" translate="yes" xml:space="preserve">
          <source>Graph Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28d78573c44f36106a7635f2c8546bc76f44c94" translate="yes" xml:space="preserve">
          <source>Grok Classifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f3beccd9e118aec281f3ea19be88afaa3a2ec8" translate="yes" xml:space="preserve">
          <source>Groups can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a05f0f5db4dd8799afa49f52a3f0ea3523eaefa" translate="yes" xml:space="preserve">
          <source>GuardDuty IPSet can be imported using the the master GuardDuty detector ID and IPSet ID, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ad872b7b1656c09ef2bf4f6ae5ab05de9f321f" translate="yes" xml:space="preserve">
          <source>GuardDuty ThreatIntelSet can be imported using the the master GuardDuty detector ID and ThreatIntelSetID, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd18b5bd19848e99c1c7edbe17b1d165ff9ff5c" translate="yes" xml:space="preserve">
          <source>GuardDuty detectors can be imported using the detector ID, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d829c8f335e3376c18b8076d59e3b3032d2e13" translate="yes" xml:space="preserve">
          <source>GuardDuty members can be imported using the the master GuardDuty detector ID and member AWS account ID, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d32d2009b4f4d950485fc87e110ea2380c045d" translate="yes" xml:space="preserve">
          <source>Guide Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6d93e26422cc2f735d427da7208543ae4a2e6a" translate="yes" xml:space="preserve">
          <source>HA Virtual Machine Component Protection settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5967e60858a66c26707b232270eb13086cc68ea5" translate="yes" xml:space="preserve">
          <source>HA policy options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1554dc7ea1f9f3e2a0b70a14c84abb4d6f87b97e" translate="yes" xml:space="preserve">
          <source>HA virtual machine and application monitoring settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d226f143ae1edc141d4c14519e9b11da5d76fbe" translate="yes" xml:space="preserve">
          <source>HP OneView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="4c76df737782a8dc75169ed775fd7d6d4018f0bb" translate="yes" xml:space="preserve">
          <source>HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaca2f18ad6a779753ed98577f3ed4146459a99b" translate="yes" xml:space="preserve">
          <source>HTTP File Upload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c29f9cc8fb8763225a3857c76f7c8493b40e5e" translate="yes" xml:space="preserve">
          <source>HTTP Probe block - &lt;code&gt;transaction&lt;/code&gt; - (Optional) One or more Transaction blocks. - &lt;code&gt;total_limits&lt;/code&gt; - (Optional) A Limit block, but with no &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9374f8261564a32663ae7f2e8f872112be966012" translate="yes" xml:space="preserve">
          <source>HTTP Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73fbd0fe4abd29dbbaab0e34e9fb7946399eaa9" translate="yes" xml:space="preserve">
          <source>HTTP Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618c0dc2173d9aaf41968e47078811a97f55aa64" translate="yes" xml:space="preserve">
          <source>HTTP URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513d327ad1f5a62863915e282668226fa4772ae0" translate="yes" xml:space="preserve">
          <source>HTTPRED Record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4f14f1dfeb6091ee683f7d7fe1020b348fffd7" translate="yes" xml:space="preserve">
          <source>Habitat Provisioner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a96730ec8cc11deac7a9624ce82901ad075ec62" translate="yes" xml:space="preserve">
          <source>HashiCorp Community Guidelines apply to you when interacting with the community while working on Terraform Providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1989f8282e84c26d5549a2528ed918fe2a5117" translate="yes" xml:space="preserve">
          <source>HashiCorp mug for the next top 10 who close the most issues via bug closure or finding duplicates and closing issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb5be975267d11e7e7f64338cad486ceb266a21" translate="yes" xml:space="preserve">
          <source>HashiCorp providers are providers that we'll dedicate full time resources to improving, supporting the latest features, and fixing bugs. These are providers we understand deeply and are confident we have the resources to manage ourselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e94e88d583130aa3ee954d8ce360ca2b584546" translate="yes" xml:space="preserve">
          <source>HashiCorp runs nightly acceptance tests of providers found in the &lt;a href=&quot;https://github.com/terraform-providers&quot;&gt;Terraform Providers GitHub Organization&lt;/a&gt; to ensure each Provider is working correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf4cc56434d600cd55c2c481c454dd21983cb4e" translate="yes" xml:space="preserve">
          <source>HashiCorp vs. Community Providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c01ed527827ee1ceb7546518c552142e44b0c3" translate="yes" xml:space="preserve">
          <source>Having this unit test will catch a lot of beginner mistakes as you build your provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb35682a5bb27ac7e36cfa64c2bcdace5da7bbc0" translate="yes" xml:space="preserve">
          <source>Hcloud</source>
          <target state="translated">Hcloud</target>
        </trans-unit>
        <trans-unit id="132e2f8d48e3f8726e2a666ee9502a9d369f7f51" translate="yes" xml:space="preserve">
          <source>Health Check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963931b21710d25592a2e508bd817907c75e526d" translate="yes" xml:space="preserve">
          <source>Health Check (&lt;code&gt;health_check&lt;/code&gt;) supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd185743786f57ffce12066429464a37c4873f8" translate="yes" xml:space="preserve">
          <source>Health Check Blocks (&lt;code&gt;health_check&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e666abb4908b9e351e39c92cea0d4645c615337" translate="yes" xml:space="preserve">
          <source>Health checks can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4007effca2245f3fcbc552e12ae7b0adbdc48ecf" translate="yes" xml:space="preserve">
          <source>Healthcheck</source>
          <target state="translated">Healthcheck</target>
        </trans-unit>
        <trans-unit id="c9b1188b3e6c97fbdccee71bdcd7aaaac430f40e" translate="yes" xml:space="preserve">
          <source>Helm</source>
          <target state="translated">Helm</target>
        </trans-unit>
        <trans-unit id="204ef7dc163f8ecc3db189284dc2047926e3802d" translate="yes" xml:space="preserve">
          <source>Heptio Authenticator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f3b886102a3ca3651b4a4bf8009bbbd7c212e2" translate="yes" xml:space="preserve">
          <source>Here are some of the benefits of backends:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8e36e3cd0055e46d5fa7b6b6e9cac22847ae10" translate="yes" xml:space="preserve">
          <source>Here are the rules for state updating in Terraform. Note that this mentions callbacks we have not discussed, for the sake of completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be2fb28e77efa43492843fbd22dec38550c9670" translate="yes" xml:space="preserve">
          <source>Here is an example graph output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337af87c629e5a803aa898b3ea512361f842aa2a" translate="yes" xml:space="preserve">
          <source>Here is an example of Terraform's HCL syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb4ddaefe21bd99e3600de4105a4555d2e2abbb" translate="yes" xml:space="preserve">
          <source>Here is an example of a partial mode with an update function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ac0c747efc30db353d13ee624da30232b2ca04" translate="yes" xml:space="preserve">
          <source>Here is an example that combines the capabilities of templates with the interpolation from &lt;code&gt;count&lt;/code&gt; to give us a parameterized template, unique to each resource instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb0190679b8003214aff8a1f8a15afc13801b36" translate="yes" xml:space="preserve">
          <source>Here is an example that will setup the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d19664785e363dd9b5e44ba7d2fe8cb82373ec" translate="yes" xml:space="preserve">
          <source>Here is an example that will setup the following: + A Server. + An IP Address. + A security group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dda34469cb8de209b82d74328cba739141aed1b" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;name&lt;/code&gt; represents the resource name in state (&lt;code&gt;example_widget.foo&lt;/code&gt;), the &lt;code&gt;key&lt;/code&gt; represents the attribute to check (&lt;code&gt;active&lt;/code&gt;), and &lt;code&gt;value&lt;/code&gt; represents the desired value to check against (&lt;code&gt;true&lt;/code&gt;). Not all functions accept all three inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68fef2661f9be7c8c8de523f7c24409910e7330" translate="yes" xml:space="preserve">
          <source>Here we assume the service API accepts capitalizations of the &lt;code&gt;base_image&lt;/code&gt; name and converts it to a lowercase string. The API then returns the lower case value in it&amp;rsquo;s responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0516532b912b9607f3257cce127d553b82d1790" translate="yes" xml:space="preserve">
          <source>Here we cover information needed to write successful tests for Terraform Plugins. Tests are a vital part of the Terraform ecosystem, verifying we can deliver on our mission to safely and predictably create, change, and improve infrastructure. Documentation for Terraform tests are broken into categories briefly described below. Each category has more detailed information by clicking on the matching item in the left navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349db5b6e5f83b0cad1764f31f24393e35b4618d" translate="yes" xml:space="preserve">
          <source>Here we create a pod with a single container running the nginx web server, exposing port 80 (HTTP) which can be then exposed through the load balancer to the real user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b66879c7ebc2330eccd8f021da83586c0006f0" translate="yes" xml:space="preserve">
          <source>Here we use &lt;code&gt;${path.module}&lt;/code&gt; to get a module-relative path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d368c7a1f4cac2cca9ee40d5385dc275376ffd9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example acceptance test. Here the Provider is named &lt;code&gt;Example&lt;/code&gt;, and the Resource under test is &lt;code&gt;Thing&lt;/code&gt;. The parts of this test are explained below the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea35331e8ed14100f9b71364c9e8676ca0c9270" translate="yes" xml:space="preserve">
          <source>Here's an example for how to set default context and avoid all provider configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451780c156ac08adcb7c40da7237c6b90e6166d4" translate="yes" xml:space="preserve">
          <source>Heroku</source>
          <target state="translated">Heroku</target>
        </trans-unit>
        <trans-unit id="db116fdd5129703e61690ef65f624f69152061f7" translate="yes" xml:space="preserve">
          <source>Heroku Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67bd3f2a1ce06ab41dfb1ad0eac6e231db55310" translate="yes" xml:space="preserve">
          <source>Hetzner Cloud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f956f7d3ea6ef9d180fc51e2cc8e77cc04a57064" translate="yes" xml:space="preserve">
          <source>Hetzner Cloud Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9565ed30ab226e824daaff1238ca1e1aa0e532" translate="yes" xml:space="preserve">
          <source>Hiera</source>
          <target state="translated">Hiera</target>
        </trans-unit>
        <trans-unit id="c4f9b5309424bb071fb7148fdf984979e62eaaa4" translate="yes" xml:space="preserve">
          <source>High level overview of how the Terraform tool works. Learn about the logical components of Terraform (Core vs. Plugins) and the basics of how they interact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15079ee37bbce8e7c2dd3612037f220d7f71209" translate="yes" xml:space="preserve">
          <source>Horizontal Pod Autoscaler automatically scales the number of pods in a replication controller, deployment or replica set based on observed CPU utilization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1d1cd4cec855f80d12aa8e05905968d5b94351" translate="yes" xml:space="preserve">
          <source>Horizontal Pod Autoscaler can be imported using the namespace and name, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815d2af052d012ddc42484e3a17ec6c4d105752f" translate="yes" xml:space="preserve">
          <source>Host management arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0fc83be0ebea1dd21516bea46d426281e8836f" translate="yes" xml:space="preserve">
          <source>Host management options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79aac39d199f4b69531505ef018f205b4ee171f" translate="yes" xml:space="preserve">
          <source>Host, cluster, and resource pool migration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2aff28f95165f68dff942c6e5a119a4f2df18a" translate="yes" xml:space="preserve">
          <source>Hostname for the computing instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53103abbf6928a041edf7fdcc119b345aafa39bf" translate="yes" xml:space="preserve">
          <source>Hosts</source>
          <target state="translated">Hosts</target>
        </trans-unit>
        <trans-unit id="14a0d006a0e68632e44030db0f0cfb2cc6262dbc" translate="yes" xml:space="preserve">
          <source>How Terraform Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd56f1a8628a8e9dbb07378db512a9f7c9ea8b3" translate="yes" xml:space="preserve">
          <source>How Terraform removes hosts from clusters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7d2d845b0b8b7a68b9895ebfac904360012294" translate="yes" xml:space="preserve">
          <source>How-to Guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85478f26b97509350ccc004ef961937adbc76d0" translate="yes" xml:space="preserve">
          <source>However, for maps, the values are merged:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60b197d9ff14b2658963de2974d976ff7067e4e" translate="yes" xml:space="preserve">
          <source>However, if you are interested in figuring out what might have gone wrong before filing an issue, here are the basic details of how to read a crash log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec472b3d025d4763f37c75fc76e75ee3711838" translate="yes" xml:space="preserve">
          <source>However, when you upgrade you will need to manually delete old plugins from disk. You can do this via something like this, depending on where you installed &lt;code&gt;terraform&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279af7de58fc824c90ce3215ebcd7e71f1f49fef" translate="yes" xml:space="preserve">
          <source>HttpHealthCheck can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f373370761f78eac7a43c71369b26f21677f8e" translate="yes" xml:space="preserve">
          <source>HttpsHealthCheck can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebe7914696f5a7ad044619b1f4d8b29c0c229fc" translate="yes" xml:space="preserve">
          <source>Hybrid Disaster Recovery supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bccb6117dd01f20b0d365fa517c0a16d1321e0" translate="yes" xml:space="preserve">
          <source>Hyperscale &lt;code&gt;hyperscale&lt;/code&gt; servers offer significantly higher IOPS than standard servers for CPU and IO intensive servers. See the &lt;a href=&quot;https://www.ctl.io/knowledge-base/servers/hyperscale-server-faq/&quot;&gt;FAQ&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f713427f14d02b80fa163f246c193352c94110f" translate="yes" xml:space="preserve">
          <source>IAM Account Password Policy can be imported using the word &lt;code&gt;iam-account-password-policy&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4769a2e2469e47bd9b259956a2154065ca1d5403" translate="yes" xml:space="preserve">
          <source>IAM Groups can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa14dbcdb24ada1ab8bfb9fcc64a0d528ae5708" translate="yes" xml:space="preserve">
          <source>IAM Login Profiles may not be imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbc963066025444214b2ec762eb3cad66c41236" translate="yes" xml:space="preserve">
          <source>IAM OpenID Connect Providers can be imported using the &lt;code&gt;arn&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddb7f5377e76f3e945ee1acded71d36f1cf098e" translate="yes" xml:space="preserve">
          <source>IAM Policies can be imported using the &lt;code&gt;arn&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827064b85bb8121b7d7d81af512f0bfdaacd8455" translate="yes" xml:space="preserve">
          <source>IAM Role Policies can be imported using the &lt;code&gt;role_name:role_policy_name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaf1ee308d1c58b19095f8e3dea5503f5982e5c" translate="yes" xml:space="preserve">
          <source>IAM Roles can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fddceee2d5ca65b146281b00af09918a15b11d2" translate="yes" xml:space="preserve">
          <source>IAM SAML Providers can be imported using the &lt;code&gt;arn&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be844b4fef3cadafcc2dbff76e0b9165bcba2bb" translate="yes" xml:space="preserve">
          <source>IAM Server Certificates can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41d2d99b0999f6df52123ff6126d08ae92ce706" translate="yes" xml:space="preserve">
          <source>IAM User Policies can be imported using the &lt;code&gt;user_name:user_policy_name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192bfdae3a3cd4cd53a1eb91eda02fb65183828b" translate="yes" xml:space="preserve">
          <source>IAM Users can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30b8bacc43b51f10a9bc7f07c7df1f28bdef78d" translate="yes" xml:space="preserve">
          <source>IAM binding imports use space-delimited identifiers; first the resource in question and then the role. These bindings can be imported using the &lt;code&gt;crypto_key_id&lt;/code&gt; and role, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f9a85bac3c235885826320cdbd5d2bb0fdf392" translate="yes" xml:space="preserve">
          <source>IAM binding imports use space-delimited identifiers; first the resource in question and then the role. These bindings can be imported using the &lt;code&gt;folder&lt;/code&gt; and role, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfed27bed0e37892022d100cfe00ca63b5701f1c" translate="yes" xml:space="preserve">
          <source>IAM binding imports use space-delimited identifiers; first the resource in question and then the role. These bindings can be imported using the &lt;code&gt;org_id&lt;/code&gt; and role, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43dc970558829d126ab9dc6bc68d71d7f045a7a" translate="yes" xml:space="preserve">
          <source>IAM binding imports use space-delimited identifiers; the resource in question and the role, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbd5875e97007f5bfb088e99c231dc6f087b3ef" translate="yes" xml:space="preserve">
          <source>IAM binding imports use space-delimited identifiers; the resource in question and the role. This binding resource can be imported using the &lt;code&gt;key_ring_id&lt;/code&gt;, role, and account e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b48c284095f5e032de29d864aabce32dfe9de5e" translate="yes" xml:space="preserve">
          <source>IAM member imports use space-delimited identifiers; the resource in question, the role, and the account, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1e6547e4f0241d06b49fa00339248a87e0042f" translate="yes" xml:space="preserve">
          <source>IAM member imports use space-delimited identifiers; the resource in question, the role, and the account. This member resource can be imported using the &lt;code&gt;crypto_key_id&lt;/code&gt;, role, and account e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c4763f6e2b1aeb8c2cdc697d9e58f2090eac8a" translate="yes" xml:space="preserve">
          <source>IAM member imports use space-delimited identifiers; the resource in question, the role, and the account. This member resource can be imported using the &lt;code&gt;folder&lt;/code&gt;, role, and account e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fca80e234a4f8a7d642f8aaca16006f7a2517d" translate="yes" xml:space="preserve">
          <source>IAM member imports use space-delimited identifiers; the resource in question, the role, and the account. This member resource can be imported using the &lt;code&gt;key_ring_id&lt;/code&gt;, role, and account e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaca7dcc58947ce2caa7ac23b4f9fd20eb210656" translate="yes" xml:space="preserve">
          <source>IAM member imports use space-delimited identifiers; the resource in question, the role, and the account. This member resource can be imported using the &lt;code&gt;org_id&lt;/code&gt;, role, and account e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db03769219931f38a5b46b8ace426516be26a899" translate="yes" xml:space="preserve">
          <source>IAM policy for GCE subnetwork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3b168fb7eb2dfb735d615f0fb8eeb9de8ce422" translate="yes" xml:space="preserve">
          <source>IAM policy for Google Cloud KMS key ring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36474470e6f388936745efbc1434fec73a8a54f" translate="yes" xml:space="preserve">
          <source>IAM policy for Google storage bucket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c08cfe77d9998806074bc764da1777bfb77d83" translate="yes" xml:space="preserve">
          <source>IAM policy for Pubsub Subscription</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4692adc2c764adfcfbe66c5f53ce0e196f895e48" translate="yes" xml:space="preserve">
          <source>IAM policy for Pubsub Topic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9768353865e2b5d7d95596a4c104ca411b5e65c5" translate="yes" xml:space="preserve">
          <source>IAM policy for Spanner Instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ef4dc008964f0c6af2a980e17bc4041095f241" translate="yes" xml:space="preserve">
          <source>IAM policy for Spanner databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4881b54b0409e038aa80d9f52b9e9b60157b3d9e" translate="yes" xml:space="preserve">
          <source>IAM policy for projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f2884885549bbc76c5d7471ea890e5dd695a8c" translate="yes" xml:space="preserve">
          <source>IAM policy for service account</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75276f7002bdc84d6ba13869790fc75be31cf72d" translate="yes" xml:space="preserve">
          <source>IAM policy imports use the identifier of the resource in question, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdd8629097cd4b2e4f7f88e99936b84b3bf567c" translate="yes" xml:space="preserve">
          <source>IAM policy imports use the identifier of the resource in question. This policy resource can be imported using the &lt;code&gt;key_ring_id&lt;/code&gt;, role, and account e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c352833d7568487d9a88eeb6df8f564eafdf9e16" translate="yes" xml:space="preserve">
          <source>IAM resources can be imported using the &lt;code&gt;project_id&lt;/code&gt;, role, and account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e073c147b8ce119aad9c6b50f35d72f99f5c62" translate="yes" xml:space="preserve">
          <source>IAM service-linked roles can be imported using role ARN, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad65afb8bbbe432db564bde4ee688b0ffaf72a5" translate="yes" xml:space="preserve">
          <source>ICMP Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4051a65f56995f08f88fe96b9e4fdd3584bcc3" translate="yes" xml:space="preserve">
          <source>ID is dependent on the resource type being imported. For example, for AWS instances it is the instance ID (&lt;code&gt;i-abcd1234&lt;/code&gt;) but for AWS Route53 zones it is the zone ID (&lt;code&gt;Z12ABC4UGMOZ2N&lt;/code&gt;). Please reference the provider documentation for details on the ID format. If you're unsure, feel free to just try an ID. If the ID is invalid, you'll just receive an error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eca8bb8b486a2bb2460f39af9f111a59bff080c" translate="yes" xml:space="preserve">
          <source>IOT Things can be imported using the name, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3851d7aad240213abb5f7491f9247d3af0540d" translate="yes" xml:space="preserve">
          <source>IP Address Associations can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c846f46885d13eeb7fa7a1dca546c6777424817c" translate="yes" xml:space="preserve">
          <source>IP Address Prefix Set can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8677706f809f64a689bc5c69cb018c7979035df8" translate="yes" xml:space="preserve">
          <source>IP Address Reservations can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11ff6e9ec6c32410c3ca9457910bda81b96c44a" translate="yes" xml:space="preserve">
          <source>IP Associations can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df545f847a10728b21ad8238fda67991e278e32" translate="yes" xml:space="preserve">
          <source>IP Info blocks support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c99ee4ba5db8c9e302abfb30674b0a848a3ea1" translate="yes" xml:space="preserve">
          <source>IP List's can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9dfd1eb4f5b22f663a5b59097ecd81d622971d" translate="yes" xml:space="preserve">
          <source>IP Network Exchange's can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584c9cc4565b9a2ebd6cf127eb8eebf495f786fb" translate="yes" xml:space="preserve">
          <source>IP Networks can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d98086216d355214150ec7328125bcad646b9b" translate="yes" xml:space="preserve">
          <source>IP Pools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f9fae760f14404b57dc30e0007b9cdd7fc0b6b" translate="yes" xml:space="preserve">
          <source>IP Reservations can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17521459b3f295c12396a97101a47939ba8eeb4e" translate="yes" xml:space="preserve">
          <source>IP blocks support the following: - &lt;code&gt;start&lt;/code&gt; - (Optional) String. IP Address. Must be paired with &lt;code&gt;end&lt;/code&gt;. Conflicts with &lt;code&gt;cidr&lt;/code&gt; or &lt;code&gt;address&lt;/code&gt;. - &lt;code&gt;end&lt;/code&gt; - (Optional) String. IP Address. Must be paired with &lt;code&gt;start&lt;/code&gt;. - &lt;code&gt;cidr&lt;/code&gt; - (Optional) String. - &lt;code&gt;address&lt;/code&gt; - (Optional) String. IP Address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e8109efb880eecb8d8f4a33a2a0f09fdef9046" translate="yes" xml:space="preserve">
          <source>IPAM config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7acbed19f034bc17ef176c6b53553e77a3c519" translate="yes" xml:space="preserve">
          <source>IPs (&lt;code&gt;ips&lt;/code&gt;) expose the following attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7ef23bd6da6f22bfb96e8b3ea79559b7f7f3be" translate="yes" xml:space="preserve">
          <source>Icinga2</source>
          <target state="translated">Icinga2</target>
        </trans-unit>
        <trans-unit id="3d686d679cb1c649a189b5a1ee0c58a99ebf0c6f" translate="yes" xml:space="preserve">
          <source>Icinga2 Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e2cd710a5d58ab7719281bb9f00d9c178fa6f0" translate="yes" xml:space="preserve">
          <source>Idempotent reference to a first /32 address from a reserved block might look like &lt;code&gt;&quot;${cidrhost(packet_reserved_ip_block.test.cidr_notation,0)}/32&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386a63b400638f1f70595764dab981872e85584d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-auto-approve&lt;/code&gt; is set, then the destroy confirmation will not be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad43847f061a7383d4ebb094a658cf2b76972781" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Default&lt;/code&gt; is specified, that value that is used when this item is not set in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a424814990cef22a421631d7ae9db63ff0d982f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PANOS_USERNAME&lt;/code&gt; is set to &lt;code&gt;admin&lt;/code&gt;, then the above will skip the step that creates the account, as the &lt;code&gt;admin&lt;/code&gt; account already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34be48204f4a6d3afcf654441f206e376019c8a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;min_size&lt;/code&gt; or &lt;code&gt;desired_capacity&lt;/code&gt; are changed in a subsequent update, Terraform will also wait for the correct number of healthy instances before continuing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154680477d55fcb473e37d07a33bf6cd561953a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source_datacenter&lt;/code&gt; and &lt;code&gt;source_datastore&lt;/code&gt; are not provided, the file resource will upload the file from the host that Terraform is running on. If either &lt;code&gt;source_datacenter&lt;/code&gt; or &lt;code&gt;source_datastore&lt;/code&gt; are provided, the resource will copy from within specified locations in vSphere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63b8a373d0e73bfb062dd98cf4909c484e42cd8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;wait_for_elb_capacity&lt;/code&gt; is set, Terraform will wait for exactly that number of Instances to be &lt;code&gt;&quot;InService&quot;&lt;/code&gt; in all attached ELBs on both creation and updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6debbac295277e312d491c1a0c4d3cb60b25aa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;when = &quot;destroy&quot;&lt;/code&gt; is specified, the provisioner will run when the resource it is defined within is &lt;em&gt;destroyed&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9427027b001736030485e7fb4ca19e844d1e5bd" translate="yes" xml:space="preserve">
          <source>If ASG creation takes more than a few minutes, this could indicate one of a number of configuration problems. See the &lt;a href=&quot;https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-troubleshooting.html&quot;&gt;AWS Docs on Load Balancer Troubleshooting&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f43b57fc6bd7545161c4eb3a2edbfa6a13ac913" translate="yes" xml:space="preserve">
          <source>If PATH is &quot;-&quot; then the state data to push is read from stdin. This data is loaded completely into memory and verified prior to being written to the destination state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209d929b1b257d1bc74a82f58522cc3928cd2897" translate="yes" xml:space="preserve">
          <source>If Terraform doesn't detect a VCS, it will upload all files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17b5be76ab623a2ba7b9f99d5818fe69cdf41a9" translate="yes" xml:space="preserve">
          <source>If Terraform ever crashes (a &quot;panic&quot; in the Go runtime), it saves a log file with the debug logs from the session as well as the panic message and backtrace to &lt;code&gt;crash.log&lt;/code&gt;. Generally speaking, this log file is meant to be passed along to the developers via a GitHub Issue. As a user, you're not required to dig into this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6444bf5a8ed639b253d75950311fcefb12d3e011" translate="yes" xml:space="preserve">
          <source>If a Terraform state for one configuration is stored in a remote backend that is accessible to other configurations then &lt;a href=&quot;../providers/terraform/d/remote_state&quot;&gt;&lt;code&gt;terraform_remote_state&lt;/code&gt;&lt;/a&gt; can be used to directly consume its root module outputs from those other configurations. This creates a tighter coupling between configurations, but avoids the need for the &quot;producer&quot; configuration to explicitly publish its results in a separate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02fcb00eaad4bee804f376465d450602de68ff8" translate="yes" xml:space="preserve">
          <source>If a creation-time provisioner fails, the resource is marked as &lt;strong&gt;tainted&lt;/strong&gt;. A tainted resource will be planned for destruction and recreation upon the next &lt;code&gt;terraform apply&lt;/code&gt;. Terraform does this because a failed provisioner can leave a resource in a semi-configured state. Because Terraform cannot reason about what the provisioner does, the only way to ensure proper creation of a resource is to recreate it. This is tainting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddba48c55f5de3ef0087dd5f44ca7821bcf1075" translate="yes" xml:space="preserve">
          <source>If a diff is present, traverse all resource nodes and find resources that are being destroyed. These resource nodes are split into two: one node that destroys the resource and another that creates the resource (if it is being recreated). The reason the nodes must be split is because the destroy order is often different from the create order, and so they can't be represented by a single graph node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cee016c0e82362c156b92c9492ca07e3eb866a" translate="yes" xml:space="preserve">
          <source>If a module is already downloaded and the &lt;code&gt;-update&lt;/code&gt; flag is &lt;em&gt;not&lt;/em&gt; set, Terraform will do nothing. As a result, it is safe (and fast) to run this command multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69301d564e93f143bda4199784a6527895baf87a" translate="yes" xml:space="preserve">
          <source>If a module is verified, it is promised to be actively maintained and of high quality. It isn't indicative of flexibility or feature support; very simple modules can be verified just because they're great examples of modules. Likewise, an unverified module could be extremely high quality and actively maintained. An unverified module shouldn't be assumed to be poor quality, it only means it hasn't been created by a HashiCorp partner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738b0c983ed27f0931fd265758333a1fb166b293" translate="yes" xml:space="preserve">
          <source>If a resource was just created and did not exist before, and the apply succeeded without error, then the provisioners are executed in sequence. If any provisioner errors, the resource is marked as &lt;em&gt;tainted&lt;/em&gt;, so that it will be destroyed on the next apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536a93ef543dc47a8f1a0a491537aabd86b25677" translate="yes" xml:space="preserve">
          <source>If a state file doesn't exist, the console still works and can be used to experiment with supported interpolation functions. Try entering some basic math such as &lt;code&gt;1 + 5&lt;/code&gt; to see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c4ca475b783f20f38dd4428415c3b230da4fa4" translate="yes" xml:space="preserve">
          <source>If a state is present, any &quot;orphan&quot; resources are added to the graph. Orphan resources are any resources that are no longer present in the configuration but are present in the state file. Orphans never have any configuration associated with them, since the state file does not store configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9852a12459ed7d0db4737920b2b580f757d37b28" translate="yes" xml:space="preserve">
          <source>If acquiring the lock is taking longer than expected, Terraform will output a status message. If Terraform doesn't output a message, state locking is still occurring if your backend supports it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50faa93265faed6c3a7fd7d03d6e6d7a0a17870d" translate="yes" xml:space="preserve">
          <source>If an error happens at any stage in the lifecycle of a resource, Terraform stores a partial state of the resource. This behavior is critical for Terraform to ensure that you don't end up with any &lt;em&gt;zombie&lt;/em&gt; resources: resources that were created by Terraform but no longer managed by Terraform due to a loss of state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bea1abe2d0541cb4634b5e828c930481b288c54" translate="yes" xml:space="preserve">
          <source>If backend settings are provided in multiple locations, the top-level settings are merged such that any command-line options override the settings in the main configuration and then the command-line options are processed in order, with later options overriding values set by earlier options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1802472c043b5dce09a6e1aa1492a27af9eac537" translate="yes" xml:space="preserve">
          <source>If both &quot;name&quot; and &quot;version&quot; are provided the plugin will concatenate the two strings in this format [name]-[version].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1329337f9dd0e9c4260504ecaaa432cb6c7dc5b8" translate="yes" xml:space="preserve">
          <source>If both VPCs are not in the same AWS account do not enable the &lt;code&gt;auto_accept&lt;/code&gt; attribute. The accepter can manage its side of the connection using the &lt;code&gt;aws_vpc_peering_connection_accepter&lt;/code&gt; resource or accept the connection manually using the AWS Management Console, AWS CLI, through SDKs, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7c36e573a509f3bcc8c3ccfb919e2008bfa716" translate="yes" xml:space="preserve">
          <source>If credentials for the given hostname are available in &lt;a href=&quot;../commands/cli-config&quot;&gt;the CLI config&lt;/a&gt; then they will be included in the request for the discovery document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498c96e24bdcd0ae0db6acf4eefbe45c5338f345" translate="yes" xml:space="preserve">
          <source>If desired, you can leave the body of the resource block blank for now and return to fill it in once the instance is imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0aa014124ae7d2342dd5ae683fcc98bf2fd028" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;provider&lt;/code&gt; field is specified, the default provider is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a455402d2c35dc812da30109439922197644a6d" translate="yes" xml:space="preserve">
          <source>If no arguments are given, the configuration in the current working directory is initialized. It is recommended to run Terraform with the current working directory set to the root directory of the configuration, and omit the &lt;code&gt;DIR&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24adc3cdb15599493fcf526d5fdaeaafb05213b8" translate="yes" xml:space="preserve">
          <source>If no credentials are specified, the provider will fall back to using the &lt;a href=&quot;https://cloud.google.com/docs/authentication/production&quot;&gt;Google Application Default Credentials&lt;/a&gt;. If you are running Terraform from a GCE instance, see &lt;a href=&quot;https://cloud.google.com/compute/docs/authentication&quot;&gt;Creating and Enabling Service Accounts for Instances&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed408f67d1dcf4e31031c328181383579995410e" translate="yes" xml:space="preserve">
          <source>If partial mode (covered next) is enabled when a create or update returns, only the explicitly enabled configuration keys are persisted, resulting in a partial state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189e473c97ae2fb7ee28f885832fe1fc76874d9e" translate="yes" xml:space="preserve">
          <source>If provided with a role ARN, Terraform will attempt to assume this role using the supplied credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba1ffc1c6eaad8411b4786bbfbb1b6f9b8a31e4" translate="yes" xml:space="preserve">
          <source>If set to &quot;false&quot; or &quot;0&quot;, causes terraform commands to behave as if the &lt;code&gt;-input=false&lt;/code&gt; flag was specified. This is used when you want to disable prompts for variables that haven't had their values specified. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68497f95b88be98f9f261de581806561fb9cb044" translate="yes" xml:space="preserve">
          <source>If set to any value, enables detailed logs to appear on stderr which is useful for debugging. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8bb1484755a8afd46df0ba7f05755a5e028287" translate="yes" xml:space="preserve">
          <source>If such a block is not present, the child module will behave as if it has no configurations of this type at all, which may cause input prompts to supply any required provider configuration arguments. This limitation will be addressed in a future version of Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec35be2553fc73e0f65fffecc9b6ec20b5196cd" translate="yes" xml:space="preserve">
          <source>If supported by your &lt;a href=&quot;../backends&quot;&gt;backend&lt;/a&gt;, Terraform will lock your state for all operations that could write state. This prevents others from acquiring the lock and potentially corrupting your state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c7f8987b1057395dc5f2b6bd649a1faf71c510" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-state&lt;/code&gt; flag is given, the state specified by the given path will be copied to initialize the state for this new workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d386f41e0a29aa6d73f54c00f01a5a6b96302db9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Create&lt;/code&gt; callback returns with or without an error and an ID has been set, the resource is assumed created and all state is saved with it. Repeating because it is important: if there is an error, but the ID is set, the state is fully saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb782ae39876bcf9e3fb1436be09b619c016e185" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Create&lt;/code&gt; callback returns with or without an error without an ID set using &lt;code&gt;SetId&lt;/code&gt;, the resource is assumed to not be created, and no state is saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1106b985742bbc95e5aa15ae2c330c5a2ee47a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Destroy&lt;/code&gt; callback returns with an error, the resource is assumed to still exist, and all prior state is preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee125c0717766afdb58564ba4885ddc566d6cb1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Destroy&lt;/code&gt; callback returns without an error, the resource is assumed to be destroyed, and all state is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c626f6ffcf82c92ef42b4ce0bc44e29b2a30202c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Update&lt;/code&gt; callback returns with or without an error, the full state is saved. If the ID becomes blank, the resource is destroyed (even within an update, though this shouldn't happen except in error scenarios).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988f6ac6aac6c6fe1cffb6373bfb9d4520e9ed52" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;group&lt;/code&gt; param and none of the &lt;code&gt;Profiles&lt;/code&gt; params are specified, then the Profile Setting is set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cac3e6ffca568b4ec406649575ceeaacbf2cf6" translate="yes" xml:space="preserve">
          <source>If the ARN of the &lt;code&gt;ssl_certificate_id&lt;/code&gt; that is pointed to references a certificate that was signed by an ECDSA key, note that ELB only supports the P256 and P384 curves. Using a certificate signed by a key using a different curve could produce the error &lt;code&gt;ERR_SSL_VERSION_OR_CIPHER_MISMATCH&lt;/code&gt; in your browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599ac8ad7dbb76b95f910cf4388afd9683278b4c" translate="yes" xml:space="preserve">
          <source>If the Consul agent is running on the node where this service is registered, it is not recommended to use this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b071ffe75c21994d0cc3619f24e66fc7077eb376" translate="yes" xml:space="preserve">
          <source>If the ID is updated to blank, this tells Terraform the resource no longer exists (maybe it was destroyed out of band). Just like the destroy callback, the &lt;code&gt;Read&lt;/code&gt; function should gracefully handle this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb02784cd004713be909ac6c1967e7df32f6ebb" translate="yes" xml:space="preserve">
          <source>If the arguments of a data instance contain no references to computed values, such as attributes of resources that have not yet been created, then the data instance will be read and its state updated during Terraform's &quot;refresh&quot; phase, which by default runs prior to creating a plan. This ensures that the retrieved data is available for use during planning and the diff will show the real values obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8c08122903a46f2048f5b363a4b3135d3809a5" translate="yes" xml:space="preserve">
          <source>If the command is given an existing saved plan as an argument, the command will output the contents of the saved plan. In this scenario, the &lt;code&gt;plan&lt;/code&gt; command will not modify the given plan. This can be used to inspect a planfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486dea7439e86e69113048a38843a5feaf60aae1" translate="yes" xml:space="preserve">
          <source>If the credentials for the Rancher provider have access to the global API, then &lt;code&gt;environment_id&lt;/code&gt; can be omitted e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42925831293c4bc875d586be7bab873398f8d0fd" translate="yes" xml:space="preserve">
          <source>If the credentials for the Rancher provider have access to the global API, then then &lt;code&gt;environment_id&lt;/code&gt; can be omitted e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6258a533611b72279fd55e1f40bfebf6fd678d22" translate="yes" xml:space="preserve">
          <source>If the credentials for the Rancher provider have access to the global API, then then &lt;code&gt;registry_id&lt;/code&gt; can be omitted e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638312057d6d296716b70c8569bf9e5fe1d51aa0" translate="yes" xml:space="preserve">
          <source>If the given address &lt;em&gt;does not&lt;/em&gt; have a resource spec, and instead just specifies a module path, the target applies to all resources in the specified module &lt;em&gt;and&lt;/em&gt; all of the descendent modules of the specified module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be1f56933229233253721967e0b37ceda5e5481" translate="yes" xml:space="preserve">
          <source>If the given address has a &lt;em&gt;resource spec&lt;/em&gt;, only the specified resource is targeted. If the named resource uses &lt;code&gt;count&lt;/code&gt; and no explicit index is specified in the address, all of the instances sharing the given resource name are targeted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07da3a33f15ddbbbc59631cd12e3e640b81e43b1" translate="yes" xml:space="preserve">
          <source>If the program encounters an error and is unable to produce a result, it must print a human-readable error message (ideally a single line) to &lt;code&gt;stderr&lt;/code&gt; and exit with a non-zero status. Any data on &lt;code&gt;stdout&lt;/code&gt; is ignored if the program returns a non-zero status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8948f0f2c37a152bcd5509e694cc798cf43de8d9" translate="yes" xml:space="preserve">
          <source>If the response is a valid JSON object then its keys are Terraform native service identifiers, consisting of a service type name and a version string separated by a period. For example, the service identifier for version 1 of the module registry protocol is &lt;code&gt;modules.v1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e00731b46c382c714c0418df0989daf5cf39469" translate="yes" xml:space="preserve">
          <source>If the response is an HTTP redirect then Terraform repeats this step with the new location as its discovery URL. Terraform is guaranteed to follow at least one redirect, but nested redirects are not guaranteed nor recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9405833b624d51ffc31c6ef5b6719ee2ff74768d" translate="yes" xml:space="preserve">
          <source>If the selected plugin is not already in the cache, it will be downloaded into the cache first and then copied from there into the correct location under your current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd073be33f998af33284ff1cefde2a35bc8611c" translate="yes" xml:space="preserve">
          <source>If the source AMI has associated EBS snapshots, those will also be duplicated along with the AMI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5fc2ffa4e0c182433cddb028f37f744b95542c" translate="yes" xml:space="preserve">
          <source>If the source is &lt;code&gt;/foo&lt;/code&gt; (no trailing slash), and the destination is &lt;code&gt;/tmp&lt;/code&gt;, then the contents of &lt;code&gt;/foo&lt;/code&gt; on the local machine will be uploaded to &lt;code&gt;/tmp/foo&lt;/code&gt; on the remote machine. The &lt;code&gt;foo&lt;/code&gt; directory on the remote machine will be created by Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc88e7267b08bcc6c16d0d22794aae8b34c9f936" translate="yes" xml:space="preserve">
          <source>If the source refers to an &lt;em&gt;example&lt;/em&gt; configuration, it can be copied into a local directory to be used as a basis for a new configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349d8a7208900f18ee9903d817aeb43adceff685" translate="yes" xml:space="preserve">
          <source>If the source, however, is &lt;code&gt;/foo/&lt;/code&gt; (a trailing slash is present), and the destination is &lt;code&gt;/tmp&lt;/code&gt;, then the contents of &lt;code&gt;/foo&lt;/code&gt; will be uploaded directly into &lt;code&gt;/tmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c8a180775b7eaa7a4c6fea89bd86f6a3adff64" translate="yes" xml:space="preserve">
          <source>If the subscription has a topic in a different project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2b87c0f6f2d78a4376410d81ec66480330b45d" translate="yes" xml:space="preserve">
          <source>If the supplied &lt;code&gt;entry&lt;/code&gt; value is invalid for the image list, Terraform will exit with an error, that the desired image list entry was not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851a43ebc9606ddd2858742993b4a17de9218415" translate="yes" xml:space="preserve">
          <source>If the values of the measurements to be rolled up are: 2, 10, 5:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488cd26c86820471a2365034f2b81101a2b3b6ab" translate="yes" xml:space="preserve">
          <source>If this block is provided and both &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; are empty, basic authentication will be disabled. This block also contains several computed attributes, documented below. If this block is not provided, GKE will generate a password for you with the username &lt;code&gt;admin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366a6f7f580d819130e0a948600d00c592ff1191" translate="yes" xml:space="preserve">
          <source>If this happens only an entity with &lt;code&gt;roles/storage.admin&lt;/code&gt; privileges can repair this bucket's policies. It is recommended to include the above roles in policies to get the same behaviour as with the other two options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39edfaf2d5213fd9724356cd7f44b1d7d77e4e45" translate="yes" xml:space="preserve">
          <source>If we instead set &lt;code&gt;-module-depth=0&lt;/code&gt;, the graph will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a70cde764813211e3adb24d23538732bedfc531" translate="yes" xml:space="preserve">
          <source>If workspace IAM roles are centrally managed and shared across many separate Terraform configurations, the role ARNs could also be obtained via a data source such as &lt;a href=&quot;../../providers/terraform/d/remote_state&quot;&gt;&lt;code&gt;terraform_remote_state&lt;/code&gt;&lt;/a&gt; to avoid repeating these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d10a2b6277a7d0c7969bda086abe2e8b82e3890" translate="yes" xml:space="preserve">
          <source>If you are going to be at HashiDays or HashiConf, let us know and we will set the goodies aside for you. Otherwise please feel free to reach out to Beth Fuller with your address and she&amp;rsquo;ll send that to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eda3e94fc70918193335d9e5c6eb0f7e844a57d" translate="yes" xml:space="preserve">
          <source>If you are planning on using &lt;code&gt;kubectl&lt;/code&gt; to manage the Kubernetes cluster, now might be a great time to configure your client. The below Terraform output generates a sample &lt;code&gt;kubectl&lt;/code&gt; configuration to connect to your cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d6f07d4a904797efdf7002c2cf3b64c3a47da9" translate="yes" xml:space="preserve">
          <source>If you are planning to locally use the standard Kubernetes client, &lt;code&gt;kubectl&lt;/code&gt;, it must be at least version 1.10 to support &lt;code&gt;exec&lt;/code&gt; authentication with usage of &lt;code&gt;heptio-authenticator-aws&lt;/code&gt;. For additional information about installation and configuration of these applications, see their official documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf11ed68948a77e9ec46a772430a7bdec84267f" translate="yes" xml:space="preserve">
          <source>If you are restoring a bootable storage volume from a snapshot, additionally you must specify the value for &lt;code&gt;bootable&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;snapshot_id&lt;/code&gt; and &lt;code&gt;snapshot_source&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; used when creating a volume from a colocated snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8066a0cd15eac0e57d547b222af65c88009ad83c" translate="yes" xml:space="preserve">
          <source>If you are upgrading from a previous Terraform version and you were using the API v1, you will need to upgrade the DNSimple provider configuration to use the new API access token and specify the Account ID. Terraform will automatically detect an existing legacy configurations and it will return an error message asking to upgrade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4f3ab2cc69f926d7d41cdb145abe3c392a3958" translate="yes" xml:space="preserve">
          <source>If you are using state locking, Terraform will need the following AWS IAM permissions on the DynamoDB table (&lt;code&gt;arn:aws:dynamodb:::table/mytable&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ed2231ba014c3b7ae0e221ae7a2ab43f1fae19" translate="yes" xml:space="preserve">
          <source>If you delete a DHCP Options Set, all VPCs using it will be associated to AWS's &lt;code&gt;default&lt;/code&gt; DHCP Option Set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32947a09fd72323ae6fd6e663f3f538758f64179" translate="yes" xml:space="preserve">
          <source>If you delete a workspace with a non-empty state (via &lt;code&gt;-force&lt;/code&gt;), then resources may become &quot;dangling&quot;. These are resources that physically exist but that Terraform can no longer manage. This is sometimes preferred: you want Terraform to stop managing resources so they can be managed some other way. Most of the time, however, this is not intended and so Terraform protects you from getting into this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ef6ccbff504a6febd091df0085bf3e565e340e" translate="yes" xml:space="preserve">
          <source>If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Structure is documented below. * &lt;code&gt;source_image_encryption_key&lt;/code&gt; - (Optional) The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Structure is documented below. * &lt;code&gt;snapshot&lt;/code&gt; - (Optional) The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cba919f0b2d4ca0980a01cca5bebab898a49768" translate="yes" xml:space="preserve">
          <source>If you do not specify an action type, you can only use &amp;ndash; &lt;code&gt;adjustment&lt;/code&gt;, &lt;code&gt;minTargetCapacity&lt;/code&gt;, &lt;code&gt;maxTargetCapacity&lt;/code&gt;. While using action_type, please also set the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e462b86ad184af19d19d5899e4d2eacb15a8f480" translate="yes" xml:space="preserve">
          <source>If you do not specify the type of &lt;code&gt;source&lt;/code&gt; then Terraform will attempt to use the closest match, for example assuming &lt;code&gt;https://hashicorp.com/consul.git&lt;/code&gt; is a HTTP URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b201d22c7290a5d405c7b102c77ba987db7f7" translate="yes" xml:space="preserve">
          <source>If you do not want to put credentials in your configuration file, you can leave them out:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83157876662e70a2b84cc8bb824ca1b41b1450a6" translate="yes" xml:space="preserve">
          <source>If you don't do this you will see an error message like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4566d312523355e749f966a5b407b6e4b91df2e" translate="yes" xml:space="preserve">
          <source>If you don't provider &quot;application_key&quot;, &quot;application_secret&quot; or &quot;consumer_key&quot;, the provider will try to fetch them from the ~/.ovh.conf file generated by ovh-cli.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec709e1da3e0f465f20aeb5595f1a5c364b0a5f4" translate="yes" xml:space="preserve">
          <source>If you find a bug with Terraform, please include the detailed log by using a service such as gist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49486e56e163265b55dd2fd56b37519373441b04" translate="yes" xml:space="preserve">
          <source>If you have &lt;strong&gt;both&lt;/strong&gt; valid configuration in a config file and static configuration, the static one is used as override. i.e. any static field will override its counterpart loaded from the config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355edf48218b80799e5adab24f55b892fb1b6330" translate="yes" xml:space="preserve">
          <source>If you have a Terraform configuration &lt;code&gt;example.tf&lt;/code&gt; with the contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b92c8ca3ecfc35979de482b312132921e6d40ab" translate="yes" xml:space="preserve">
          <source>If you have built a provider and would like to add it to this community list, please fill out this &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSeenG02tGEmz7pntIqMKlp5kY53f8AV5u88wJ_H1pJc2CmvKA/viewform?usp=sf_link#responses&quot;&gt;community providers form&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93184832c727c8d45857929bb1f4fa5319027832" translate="yes" xml:space="preserve">
          <source>If you have successfully used this provider with Rackspace and can add any additional comments, please let us know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a7f23b9673d5bdd3ed193e205cf0161a037510" translate="yes" xml:space="preserve">
          <source>If you just want to duplicate an existing AMI, possibly copying it to another region, it's better to use &lt;code&gt;aws_ami_copy&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3961277a35d3708ced4bf2e2a53846d5c340e982" translate="yes" xml:space="preserve">
          <source>If you just want to share an existing AMI with another AWS account, it's better to use &lt;code&gt;aws_ami_launch_permission&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1da7754ce31a6818257b07fa8c42b69544506ec" translate="yes" xml:space="preserve">
          <source>If you need Terraform to fetch modules from private GitHub repos, you must provide Terraform with credentials to authenticate as a user with read access to those repos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687fb1f0e6d89818d612a81671d5fec775e68702" translate="yes" xml:space="preserve">
          <source>If you need to run Terraform on a remote machine like a CI worker, you either need to write an SSH key to disk and set the &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; environment variable appropriately during the worker's provisioning process, or create a &lt;a href=&quot;https://developer.github.com/guides/managing-deploy-keys/#machine-users&quot;&gt;GitHub machine user&lt;/a&gt; with read access to the repos in question and embed its credentials into the modules' &lt;code&gt;source&lt;/code&gt; parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9ef612c89cce525850f78b75b885dd510d6ba6" translate="yes" xml:space="preserve">
          <source>If you need to use modules directly from Git, you can use SSH URIs with Terraform Enterprise. You'll need to add an SSH private key to your organization and assign it to any workspace that fetches modules from private repos. &lt;a href=&quot;https://www.terraform.io/docs/enterprise/workspaces/ssh-keys.html&quot;&gt;See the Terraform Enterprise docs about SSH keys for cloning modules.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43a53cf3b498dfc17035fc9f82c3c6de28ed740" translate="yes" xml:space="preserve">
          <source>If you no longer want to use any backend, you can simply remove the configuration from the file. Terraform will detect this like any other change and prompt you to &lt;a href=&quot;init&quot;&gt;reinitialize&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae67e88afe8e3cc2af5fe2b270cdc8601cab1c2c" translate="yes" xml:space="preserve">
          <source>If you now run &lt;code&gt;terraform apply&lt;/code&gt;, you see how this works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c75621ccd26d28a20a48f8c3f30a6e6129aeb6" translate="yes" xml:space="preserve">
          <source>If you require a user-defined list of datastores, ensure you select either &lt;code&gt;userSelectedDs&lt;/code&gt; (for user selected only) or &lt;code&gt;allFeasibleDsWithUserPreference&lt;/code&gt; (for automatic selection with preferred overrides) for the &lt;a href=&quot;#ha_heartbeat_datastore_policy&quot;&gt;&lt;code&gt;ha_heartbeat_datastore_policy&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad50a1997d739e83b85cf2868bd926895ec9884" translate="yes" xml:space="preserve">
          <source>If you require access to deprecated services, such as Keystone v2 and LBaaS v1, you can use the &quot;legacy&quot; environment &lt;a href=&quot;https://github.com/jtopjian/terraform-devstack/tree/master/packstack-legacy&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ad65c261d521305e2f4ff0f6e4e3b334b5d36c" translate="yes" xml:space="preserve">
          <source>If you run Terraform only on your local machine, you can specify the module source as an SSH URI (like &lt;code&gt;git@github.com:hashicorp/example.git&lt;/code&gt;) and Terraform will use your default SSH key to authenticate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eae8d885cbea3d04de354d5a167f37dba88a2f8" translate="yes" xml:space="preserve">
          <source>If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot. * &lt;code&gt;image&lt;/code&gt; - (Optional) The image from which to initialize this disk. This can be one of: the image's &lt;code&gt;self_link&lt;/code&gt;, &lt;code&gt;projects/{project}/global/images/{image}&lt;/code&gt;, &lt;code&gt;projects/{project}/global/images/family/{family}&lt;/code&gt;, &lt;code&gt;global/images/{image}&lt;/code&gt;, &lt;code&gt;global/images/family/{family}&lt;/code&gt;, &lt;code&gt;family/{family}&lt;/code&gt;, &lt;code&gt;{project}/{family}&lt;/code&gt;, &lt;code&gt;{project}/{image}&lt;/code&gt;, &lt;code&gt;{family}&lt;/code&gt;, or &lt;code&gt;{image}&lt;/code&gt;. If referred by family, the images names must include the family name. If they don't, use the &lt;a href=&quot;../d/datasource_compute_image&quot;&gt;google_compute_image data source&lt;/a&gt;. For instance, the image &lt;code&gt;centos-6-v20180104&lt;/code&gt; includes its family name &lt;code&gt;centos-6&lt;/code&gt;. These images can be referred by family name here. * &lt;code&gt;type&lt;/code&gt; - (Optional) URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk. * &lt;code&gt;zone&lt;/code&gt; - (Optional) A reference to the zone where the disk resides. * &lt;code&gt;disk_encryption_key&lt;/code&gt; - (Optional) Encrypts the disk using a customer-supplied encryption key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdb768846f1b2b3797cee4ca6d45256fef48e5c" translate="yes" xml:space="preserve">
          <source>If you submit these logs with a bug report, please ensure any sensitive information has been scrubbed first!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f25b41610c5f45352cf5559bfa43ae2f220281" translate="yes" xml:space="preserve">
          <source>If you try using this provider with Rackspace and run into bugs, you are welcomed to open a bug report / issue on Github, but please keep in mind that this is unsupported and the reported bug may not be able to be fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bb062ecf62fb091ee0258b06eb520384bc633f" translate="yes" xml:space="preserve">
          <source>If you use Terraform Enterprise, consider using the private module registry. It makes handling credentials easier, and provides full versioning support. (See &lt;a href=&quot;#private-registries&quot;&gt;Private Registries&lt;/a&gt; above for more info.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d218aff7d9021a1b4b24ec7bc932a913fb81c615" translate="yes" xml:space="preserve">
          <source>If you use either &lt;code&gt;allowed_account_ids&lt;/code&gt; or &lt;code&gt;forbidden_account_ids&lt;/code&gt;, Terraform uses several approaches to get the actual account ID in order to compare it with allowed or forbidden IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdffe89db35474153fa691bf0844f7a1302d15e" translate="yes" xml:space="preserve">
          <source>If you use either &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; as your command shell, Terraform can provide tab-completion support for all command names and (at this time) &lt;em&gt;some&lt;/em&gt; command arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93076ad9640d1b01070180c818978121b4a9f600" translate="yes" xml:space="preserve">
          <source>If you want to create a repository with a CamelCase name, you should provide a seperate slug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4490e8c39f815224a8955ff962a235b90fb797" translate="yes" xml:space="preserve">
          <source>If you want to ensure that the volumes are attached in a given order, create explicit dependencies between the volumes, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e566347edb044ad6cbce73c7536d90b6f7c50ee4" translate="yes" xml:space="preserve">
          <source>If you want to rename or otherwise move the imported resources, the &lt;a href=&quot;../commands/state/index&quot;&gt;state management commands&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac21ec13f2e22af85a7ff107c2b23fef8bb85b9" translate="yes" xml:space="preserve">
          <source>If you wish to configure the provider statically you can do so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9651b0966f17dfec4d56c32898d3ce6a89d4cef" translate="yes" xml:space="preserve">
          <source>If you're curious about the low-level details, keep reading!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d4b615c1e83908e2848a706a777137ad60705c" translate="yes" xml:space="preserve">
          <source>If you're interested in provider development, then read on. The remainder of this page will assume you're familiar with &lt;a href=&quot;basics&quot;&gt;plugin basics&lt;/a&gt; and that you already have a basic development environment setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252040761cc73289e7583e79d4bf79e3a15c879d" translate="yes" xml:space="preserve">
          <source>If you're interested in taking on a larger core feature, it's a good idea to get feedback early and often on the effort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666d9cdafefde4669cf162ce36de08835640807d" translate="yes" xml:space="preserve">
          <source>If you're just reconfiguring the same backend, Terraform will still ask if you want to migrate your state. You can respond &quot;no&quot; in this scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d763ad04c1c4352c413ac59e9c86d68d2bb1f4" translate="yes" xml:space="preserve">
          <source>If you're moving an item to a different state file, a backup will be created for each state file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07eb1ecb98f7f44066f305424b6e18c2af203870" translate="yes" xml:space="preserve">
          <source>If you're not signed in, this will ask you to connect with GitHub. We only ask for access to public repositories, since the public registry may only publish public modules. We require access to hooks so we can register a webhook with your repository. We require access to your email address so that we can email you alerts about your module. We will not spam you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507736a56df5c8e2bcd5baa8133ad1af3f79f2fb" translate="yes" xml:space="preserve">
          <source>If you're running Terraform from an EC2 instance with IAM Instance Profile using IAM Role, Terraform will just ask &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#instance-metadata-security-credentials&quot;&gt;the metadata API&lt;/a&gt; endpoint for credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328b128109e4b393d7f509166cb59fd0509a44fb" translate="yes" xml:space="preserve">
          <source>If you're running Terraform on ECS or CodeBuild and you have configured an &lt;a href=&quot;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html&quot;&gt;IAM Task Role&lt;/a&gt;, Terraform will use the container's Task Role. Terraform looks for the presence of the &lt;code&gt;AWS_CONTAINER_CREDENTIALS_RELATIVE_URI&lt;/code&gt; environment variable that AWS injects when a Task Role is configured. If you have not defined a Task Role for your container or CodeBuild job, Terraform will continue to use the &lt;a href=&quot;#ec2-role&quot;&gt;EC2 Role&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bbf043827b4c71b4f23953e56943c15cb09823" translate="yes" xml:space="preserve">
          <source>If you're using Cloudflare's Load Balancing to load-balance across multiple origin servers or data centers, you configure one of these Monitors to actively check the availability of those servers over HTTP(S).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83fc0f52ba171bebcdda717726af7fa31c48e69" translate="yes" xml:space="preserve">
          <source>If you're using multiple &lt;a href=&quot;../state/workspaces&quot;&gt;workspaces&lt;/a&gt;, Terraform can copy all workspaces to the destination. If Terraform detects you have multiple workspaces, it will ask if this is what you want to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d090512f317e758457d2ad8988b8443e59408568" translate="yes" xml:space="preserve">
          <source>If you've built a module that you intend to be reused, we recommend &lt;a href=&quot;../registry/modules/publish&quot;&gt;publishing the module&lt;/a&gt; on the &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt;. This will version your module, generate documentation, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b32c033b8a7cdfc96b1ac7a35adbad70ec8ccc" translate="yes" xml:space="preserve">
          <source>If your organization is specialized enough that teams frequently use modules created by other teams, you will benefit from a private module registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e6699730f526f31180ec9e5fdd17de2e8698fc" translate="yes" xml:space="preserve">
          <source>If your vSphere version supports &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html&quot;&gt;tags&lt;/a&gt;, keep in mind that Terraform will always attempt to read tags from a resource, even if you do not have any tags defined. Ensure that your user has access to at least read tags, or else you will encounter errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c675c1b5d346884ff98d8b9cb7ab1f6b711c9713" translate="yes" xml:space="preserve">
          <source>If your version doesn't appear properly, you may force a sync with GitHub by viewing your module on the registry and clicking &quot;Force GitHub Sync&quot; under the &quot;Manage Module&quot; dropdown. This process may take a few minutes. Please only do this if you do not see the version appear, since it will cause the registry to resync &lt;em&gt;all versions&lt;/em&gt; of your module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d40c36445a2b42adbf9dcb1d07f12461ee8104d" translate="yes" xml:space="preserve">
          <source>Ignition</source>
          <target state="translated">Ignition</target>
        </trans-unit>
        <trans-unit id="1ddd9158c3b33910fcc4e22d3408f89541a065d4" translate="yes" xml:space="preserve">
          <source>Ignition Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136acd5cf08246ae72f12a0f48edb2c9279f05bb" translate="yes" xml:space="preserve">
          <source>Ignition versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e732b87a4c75b3898cdc0a0bff2162b1acd715" translate="yes" xml:space="preserve">
          <source>Ignored attribute names can be matched by their name, not state ID. For example, if an &lt;code&gt;aws_route_table&lt;/code&gt; has two routes defined and the &lt;code&gt;ignore_changes&lt;/code&gt; list contains &quot;route&quot;, both routes will be ignored. Additionally you can also use a single entry with a wildcard (e.g. &lt;code&gt;&quot;*&quot;&lt;/code&gt;) which will match all attribute names. Using a partial string together with a wildcard (e.g. &lt;code&gt;&quot;rout*&quot;&lt;/code&gt;) is &lt;strong&gt;not&lt;/strong&gt; supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3af9b7e4e2df253f227198d1b8071c25b435e3" translate="yes" xml:space="preserve">
          <source>Ignoring Changes to Desired Count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb29bfb8bb77f4786ec4d75e500be2a1251a231" translate="yes" xml:space="preserve">
          <source>Image List's can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6f92e083c8c49f35ee4d8277da3c32679c0248" translate="yes" xml:space="preserve">
          <source>Image List's can be imported using the Name of the Image List, along with the Version of the Image List Entry, delimited via the &lt;code&gt;|&lt;/code&gt; character, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d913b4612aabc4163191dc7bccf11ef96e3f7b0" translate="yes" xml:space="preserve">
          <source>Image can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c4ca2b90f5eb49abb403f1b082d4669432b107" translate="yes" xml:space="preserve">
          <source>Images can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ac8248e78c043188c859887d78e9e795f554b6" translate="yes" xml:space="preserve">
          <source>Implement Create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308e4ffd41822408ac0d66a9dd693def6be7272d" translate="yes" xml:space="preserve">
          <source>Implementing Destroy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66ea91493bad33a9b754e5b8bd802de901d1843" translate="yes" xml:space="preserve">
          <source>Implementing Read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0458175215d9682f6834162d804e9ae183c3afeb" translate="yes" xml:space="preserve">
          <source>Implementing a new provider gives Terraform the ability to manage resources in a whole new API. It's a larger undertaking, but brings major new functionality into Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993b51d1e7cf9e4466f56aa3eec289ef7b933413" translate="yes" xml:space="preserve">
          <source>Implementing a new resource is a good way to learn more about how Terraform interacts with upstream APIs. There are plenty of examples to draw from in the existing resources, but you still get to implement something completely new.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ecb08151553a3cd1371d0297b2185abd676aaa" translate="yes" xml:space="preserve">
          <source>Implicit Provider Inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fbc9d2bdd580e18ed0bc5805dc26db323d6f5f" translate="yes" xml:space="preserve">
          <source>Import</source>
          <target state="translated">Import</target>
        </trans-unit>
        <trans-unit id="208426687494fca998d28580c39a6de854a80bdc" translate="yes" xml:space="preserve">
          <source>Import Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5d3cf261cf333e769a3b6d392c3b5a53d5bb83" translate="yes" xml:space="preserve">
          <source>Import Existing Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396ecfda84a761be57c5c1e067246b72744aed76" translate="yes" xml:space="preserve">
          <source>Import Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bac7a594c908e80cadf566f220ca6157dfe411" translate="yes" xml:space="preserve">
          <source>Import an Existing Public Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d60699cf0392c030089318d6526e1c3e2018ab" translate="yes" xml:space="preserve">
          <source>Import an existing public key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4738462efe1594c12db9f1e9826f4745da8ed1" translate="yes" xml:space="preserve">
          <source>Import will find the existing resource from ID and import it into your Terraform state at the given ADDRESS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab5ed3bb3e27748d586ad9b9b11e2ab9efaaf8" translate="yes" xml:space="preserve">
          <source>Importing</source>
          <target state="translated">Importing</target>
        </trans-unit>
        <trans-unit id="0ccb7e8f7916a6930c692663bf89cf18e958e49e" translate="yes" xml:space="preserve">
          <source>Importing uses the name of the repository, as well as the ID of the webhook, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63005150b8db05c1a78338411a708ea07315b991" translate="yes" xml:space="preserve">
          <source>In OpenStack environments prior to the Kilo release, deleting or recreating an Instance will cause the Instance's Port(s) to be deleted. One way of working around this is to taint any Port(s) used in Instances which are to be recreated. See &lt;a href=&quot;https://review.openstack.org/#/c/126309/&quot;&gt;here&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34f2b11374d361231be6de9a2df249b09220943" translate="yes" xml:space="preserve">
          <source>In TelefonicaOpenCloud environments prior to the Kilo release, deleting or recreating an Instance will cause the Instance's Port(s) to be deleted. One way of working around this is to taint any Port(s) used in Instances which are to be recreated. See &lt;a href=&quot;https://review.telefonicaopencloud.org/#/c/126309/&quot;&gt;here&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd67f1d726e3c8b5fced97e0a1d1b48c20a81dca" translate="yes" xml:space="preserve">
          <source>In Terraform 0.6.15 there were 42 programs in total, using around 750MB on disk. And it turns out that about 600MB of this is duplicate data! This uses up a lot of space on your hard drive and a lot of bandwidth on our CDN. Fortunately, there is a way to resolve this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b867f40e6152b9b86954a417f34e165a554bf3f" translate="yes" xml:space="preserve">
          <source>In Terraform 0.7 we merged all of the programs into the same binary. We do this by using a special command &lt;code&gt;terraform internal-plugin&lt;/code&gt; which allows us to invoke a plugin just by calling the same Terraform binary with extra arguments. In essence, Terraform now just calls itself in order to activate the special behavior in each plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90fdc63b9494c5cec0df0f13fadec05da9860cc" translate="yes" xml:space="preserve">
          <source>In Terraform, a Provider is the logical abstraction of an upstream API. This guide details how to build a custom provider for Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62ac0b7d3e99fdff3df5a117cd7fd5bec301cd0" translate="yes" xml:space="preserve">
          <source>In a configuration with multiple modules, there are some special considerations for how resources are associated with provider configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b857608b2cac7041eb6033c491fdcf040bb61bd" translate="yes" xml:space="preserve">
          <source>In a few seconds, your module will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0094a704f44268beebcfd2a1cd387f8df1e1bf" translate="yes" xml:space="preserve">
          <source>In a real build and deploy scenario we would have an S3 bucket set aside for staging our archive and would use this to &quot;hand off&quot; these artifacts between the build and deploy process. For the sake of this tutorial we will create a temporary S3 bucket using the AWS CLI. S3 bucket names are globally unique, so you may need to change the &lt;code&gt;--bucket=&lt;/code&gt; argument in the following example and substitute your new bucket name throughout the rest of this tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3045d90a546bfcda9f2ed40ad9a57a427c4fd7fe" translate="yes" xml:space="preserve">
          <source>In a regional configuration, API Gateway does not create a CloudFront distribution to route requests to the API, though a distribution can be created if needed. In either case, it is necessary to create a DNS record corresponding to the given domain name which is an alias (either Route53 alias or traditional CNAME) to the regional domain name exported in the &lt;code&gt;regional_domain_name&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2ba08e21ad39a18c432e4e523031ece178ce17" translate="yes" xml:space="preserve">
          <source>In a simple implementation of the pattern described in the prior sections, all users have access to read and write states for all workspaces. In many cases it is desirable to apply more precise access constraints to the Terraform state objects in S3, so that for example only trusted administrators are allowed to modify the production state, or to control &lt;em&gt;reading&lt;/em&gt; of a state that contains sensitive information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b4e8fbc9500db5dac8da7c480af9797a17c432" translate="yes" xml:space="preserve">
          <source>In addition the the arguments listed above the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9315ad5347b8c2faf7e52848ce6360028af0d9" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../../configuration/providers&quot;&gt;generic &lt;code&gt;provider&lt;/code&gt; arguments&lt;/a&gt; (e.g. &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;), the following arguments are supported in the AWS &lt;code&gt;provider&lt;/code&gt; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59720f2931869bc7d7849472075cf200412ca82" translate="yes" xml:space="preserve">
          <source>In addition to all arguments above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47dd36d26bc4bf654292a476c1f66f09143f9a7" translate="yes" xml:space="preserve">
          <source>In addition to all arguments above, the following attributes are exported: ~&amp;gt; &lt;strong&gt;NOTE:&lt;/strong&gt; Only the target that is entered is exported as a readable attribute once the route resource is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392f853dc79e964c67ee19fdb8db8d121d3ebc5f" translate="yes" xml:space="preserve">
          <source>In addition to all the resource configuration available, &lt;code&gt;null_resource&lt;/code&gt; supports the following specific configuration options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5a454ae1250f176b371293dbee8f51308498f5" translate="yes" xml:space="preserve">
          <source>In addition to arguments listed above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9917eb2ddff30f7d4de411625f5d22f08689d4" translate="yes" xml:space="preserve">
          <source>In addition to basic mapping, Terraform stores a cache of the attribute values for all resources in the state. This is the most optional feature of Terraform state and is done only as a performance improvement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a029699dfa4af2554fa88db006bd020b58ac6e" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;id&lt;/code&gt; being exported, all of the fields that are available in the &lt;a href=&quot;../r/custom_attribute&quot;&gt;&lt;code&gt;vsphere_custom_attribute&lt;/code&gt; resource&lt;/a&gt; are also populated. See that page for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b0ef909fc0c29f4b9adc9d55f22cb92041f3a0" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;id&lt;/code&gt; being exported, all of the fields that are available in the &lt;a href=&quot;../r/tag&quot;&gt;&lt;code&gt;vsphere_tag&lt;/code&gt; resource&lt;/a&gt; are also populated. See that page for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38d4ca1ad5852ce291f4603dcbd197fb78f96ef" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;id&lt;/code&gt; being exported, all of the fields that are available in the &lt;a href=&quot;../r/tag_category&quot;&gt;&lt;code&gt;vsphere_tag_category&lt;/code&gt; resource&lt;/a&gt; are also populated. See that page for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e54d4451f72c859ae3706f59b8b5dadb75d6627" translate="yes" xml:space="preserve">
          <source>In addition to the above arguments, the following attributes are exported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6dde08589218715cc6e769a6d67bfd20210619" translate="yes" xml:space="preserve">
          <source>In addition to the above arguments, the following attributes are exported and can be referenced:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b786fb95b6aba89957ee4af87d269aa829a1ffbf" translate="yes" xml:space="preserve">
          <source>In addition to the above arguments, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d147a4885086863af99ea5627226bc3fe6b7cd69" translate="yes" xml:space="preserve">
          <source>In addition to the above attributes, the following attributes are exported for a storage volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5591ffa8490b1efde43f2764ccd5ed065843c05c" translate="yes" xml:space="preserve">
          <source>In addition to the above options, you can configure any policy option that is available under the &lt;a href=&quot;distributed_virtual_switch#default-port-group-policy-arguments&quot;&gt;&lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt; policy options&lt;/a&gt; section. Any policy option that is not set is inherited from the DVS, its options propagating to the port group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2ab202fbff77948f2a2426cd3f595598e419a5" translate="yes" xml:space="preserve">
          <source>In addition to the above options, you can configure any policy option that is available under the &lt;a href=&quot;host_virtual_switch#policy-options&quot;&gt;&lt;code&gt;vsphere_host_virtual_switch&lt;/code&gt; policy options section&lt;/a&gt;. Any policy option that is not set is &lt;strong&gt;inherited&lt;/strong&gt; from the virtual switch, its options propagating to the port group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a03d7bfa6f1e3ba35dacee60e25d1772bc6cd75" translate="yes" xml:space="preserve">
          <source>In addition to the above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894b3954ff2a3f893f0d89ef17265d5243c7ec27" translate="yes" xml:space="preserve">
          <source>In addition to the above, the following values are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59410aab99f807fccb08cb7a9a529d226022983d" translate="yes" xml:space="preserve">
          <source>In addition to the above, the following variables are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3afe0d3074559a7deb84db21936025554bd7239" translate="yes" xml:space="preserve">
          <source>In addition to the arguments above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4b23366778651941f8a90af32d198f9ef7392e" translate="yes" xml:space="preserve">
          <source>In addition to the arguments listed above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ba5e07e62fcea9411d3ff14a071aa3bd76a45f" translate="yes" xml:space="preserve">
          <source>In addition to the arguments listed above, the following computed attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0878ba2ae9920b472014d9d7b4de837583aa72ce" translate="yes" xml:space="preserve">
          <source>In addition to the arguments listed above, this data source exports: * &lt;code&gt;image_url&lt;/code&gt;: The URL at which the image can be accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badfd3f0f9192c174fea07e365a645befbbd3403" translate="yes" xml:space="preserve">
          <source>In addition to the arguments listed above, this data source exports: * &lt;code&gt;repository_url&lt;/code&gt;: The URL at which the repository can be accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bb5868de4c4be1360edf9e9d620b39da2928ff" translate="yes" xml:space="preserve">
          <source>In addition to the arguments, the following attributes are available: * &lt;code&gt;config_id&lt;/code&gt;: The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided to compute engine instances as a tag. * &lt;code&gt;dns_address&lt;/code&gt;: The address at which the service can be found - usually the same as the service name. * &lt;code&gt;apis&lt;/code&gt;: A list of API objects; structure is documented below. * &lt;code&gt;endpoints&lt;/code&gt;: A list of Endpoint objects; structure is documented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aee5be97f96f3b8941154c39c3d03efc97bfec0" translate="yes" xml:space="preserve">
          <source>In addition to the arguments, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4c32180fca77d6db78a6add54f6f6640d3ebc3" translate="yes" xml:space="preserve">
          <source>In addition to the arguments, which are exported, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9f90cc3332ce5b975df288c1b149db75641441" translate="yes" xml:space="preserve">
          <source>In addition to the attributes above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991f74c5d54170aa41a43cdf6f6048f2050552c7" translate="yes" xml:space="preserve">
          <source>In addition to the attributes listed above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869cb61bd447950525934fc6e58da0a691a5fd2f" translate="yes" xml:space="preserve">
          <source>In addition to the basics, the syntax supports hierarchies of sections, such as the &quot;resource&quot; and &quot;variable&quot; in the example above. These sections are similar to maps, but visually look better. For example, these are nearly equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e34c8f26167e027330fd787c2eeb58bf1b3fb0" translate="yes" xml:space="preserve">
          <source>In addition to the fields above, the following attributes are also exposed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd3bb5c8bccd0aceec3ba4fddc42218163879cd" translate="yes" xml:space="preserve">
          <source>In addition to the fields above, the following attributes are exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb7eea95defc1fa9e1c9ddd99b1c70e9a3f0215" translate="yes" xml:space="preserve">
          <source>In addition to these rules, the following extra rules apply to importing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3932e197aaa7c34624e617c5b65b7d22e55980bc" translate="yes" xml:space="preserve">
          <source>In addition, each output in the remote state appears as a top level attribute on the &lt;code&gt;terraform_remote_state&lt;/code&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f737b6605058972555c4009763615a6dd12917" translate="yes" xml:space="preserve">
          <source>In all cases it is recommended to keep explicit provider configurations only in the root module and pass them (whether implicitly or explicitly) down to descendent modules. This avoids the provider configurations from being &quot;lost&quot; when descendent modules are removed from the configuration. It also allows the user of a configuration to determine which providers require credentials by inspecting only the root module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c86713559f7fa1a4a900e0b39e495bcbb1d8cb" translate="yes" xml:space="preserve">
          <source>In both provider and resource, the schema is a &lt;code&gt;map[string]*schema.Schema&lt;/code&gt;. The key of this map is the configuration key, and the value is a schema for the value of that key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d70edaa65ef5d5706dfb152f6568e36a73f507" translate="yes" xml:space="preserve">
          <source>In general, you should use template variables in the &lt;code&gt;vars&lt;/code&gt; block and try not to mix interpolations. This keeps it understandable and has the benefit that you don't have to change anything to switch your template to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b2c74551a8bca0324141c8477bd6026f91c215" translate="yes" xml:space="preserve">
          <source>In modules we only specify a name, rather than a name and a type as for resources. This name is used elsewhere in the configuration to reference the module and its outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490c76de25cfc6cd59739af9f2fc622cc048931d" translate="yes" xml:space="preserve">
          <source>In more complex situations there may be &lt;a href=&quot;../configuration/providers#multiple-provider-instances&quot;&gt;multiple provider instances&lt;/a&gt;, or a child module may need to use different provider settings than its parent. For such situations, it's necessary to pass providers explicitly as we will see in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae4de218e95c1b2a62b87319dbfb1824d337e7a" translate="yes" xml:space="preserve">
          <source>In most cases it should not be necessary to set this variable, but it may be useful to do so if e.g. the working directory is not writable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409095fa8f10299808db4148b6661a58c23341c5" translate="yes" xml:space="preserve">
          <source>In most cases unless you're configuring your own DNS you'll want to set &lt;code&gt;domain_name_servers&lt;/code&gt; to &lt;code&gt;AmazonProvidedDNS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c40e957021409429c48b9c136cd4fedc3fd5937" translate="yes" xml:space="preserve">
          <source>In most cases, FlexibleEngine will create some egress security group rules for each new security group. These security group rules will not be managed by Terraform, so if you prefer to have &lt;em&gt;all&lt;/em&gt; aspects of your infrastructure managed by Terraform, set &lt;code&gt;delete_default_rules&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and then create separate security group rules such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72335f749e3b07552dff307cf65f4ff3249839ca" translate="yes" xml:space="preserve">
          <source>In most cases, OpenStack will create some egress security group rules for each new security group. These security group rules will not be managed by Terraform, so if you prefer to have &lt;em&gt;all&lt;/em&gt; aspects of your infrastructure managed by Terraform, set &lt;code&gt;delete_default_rules&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and then create separate security group rules such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c02f22c60762600502339b2665198c9952a9074" translate="yes" xml:space="preserve">
          <source>In most cases, OpenTelekomCloud will create some egress security group rules for each new security group. These security group rules will not be managed by Terraform, so if you prefer to have &lt;em&gt;all&lt;/em&gt; aspects of your infrastructure managed by Terraform, set &lt;code&gt;delete_default_rules&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and then create separate security group rules such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf16befa783a028881d5bf400fc2c524a0b2417" translate="yes" xml:space="preserve">
          <source>In most cases, TelefonicaOpenCloud will create some egress security group rules for each new security group. These security group rules will not be managed by Terraform, so if you prefer to have &lt;em&gt;all&lt;/em&gt; aspects of your infrastructure managed by Terraform, set &lt;code&gt;delete_default_rules&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and then create separate security group rules such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a709906bd92c1685d7b098af8b99d9c39955ac74" translate="yes" xml:space="preserve">
          <source>In order to be able to connect VMs to the newly created logical switch a new &lt;code&gt;vpshere_network&lt;/code&gt; datasource need to be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9661cb0b5f965e56b30819cee0f6822584d274" translate="yes" xml:space="preserve">
          <source>In order to define wildcard principal (a.k.a. anonymous user) use &lt;code&gt;type = &quot;*&quot;&lt;/code&gt; and &lt;code&gt;identifiers = [&quot;*&quot;]&lt;/code&gt;. In that case the rendered json will contain &lt;code&gt;&quot;Principal&quot;: &quot;*&quot;&lt;/code&gt;. Note, that even though the &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html&quot;&gt;IAM Documentation&lt;/a&gt; states that &lt;code&gt;&quot;Principal&quot;: &quot;*&quot;&lt;/code&gt; and &lt;code&gt;&quot;Principal&quot;: {&quot;AWS&quot;: &quot;*&quot;}&lt;/code&gt; are equivalent, those principals have different behavior for IAM Role Trust Policy. Therefore Terraform will normalize the principal field only in above-mentioned case and principals like &lt;code&gt;type = &quot;AWS&quot;&lt;/code&gt; and &lt;code&gt;identifiers = [&quot;*&quot;]&lt;/code&gt; will be rendered as &lt;code&gt;&quot;Principal&quot;: {&quot;AWS&quot;: &quot;*&quot;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d407f81dc9c2c7ce35d1d22780d001a6fc09b9e" translate="yes" xml:space="preserve">
          <source>In order to deliver on our promise to be safe and predictable, we need to be able to easily and routinely verify that Terraform Plugins produce the expected outcome. The most common usage of an acceptance test is in Terraform Providers, where each Resource is tested with configuration files and the resulting infrastructure is verified. Terraform includes a framework for constructing acceptance tests that imitate the execution of one or more steps of applying one or more configuration files, allowing multiple scenarios to be tested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbd4a86da7d019a9e24d7cc9465458fc0dc9bdd" translate="yes" xml:space="preserve">
          <source>In order to follow this guide you will need an AWS account and to have Terraform installed. &lt;a href=&quot;../index#authentication&quot;&gt;Configure your credentials&lt;/a&gt; so that Terraform is able to act on your behalf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9605ee2eec183838a27a2d143fdaa91b2bdd9802" translate="yes" xml:space="preserve">
          <source>In order to force the generation of a new key within an existing state, the private key instance can be &quot;tainted&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5980a1290b6d967c0d3bf21aa71ee166e6ecd31f" translate="yes" xml:space="preserve">
          <source>In order to provide the required configuration options you can either supply values for the &lt;code&gt;api_url&lt;/code&gt;, &lt;code&gt;api_key&lt;/code&gt; and &lt;code&gt;secret_key&lt;/code&gt; fields, or for the &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;profile&lt;/code&gt; fields. A combination of both is not allowed and will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40f82116edf8f86dca5004bad926cd44e5996c4" translate="yes" xml:space="preserve">
          <source>In order to run the Acceptance Tests for development, the following environment variables must also be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9929aba0f934293d35b6d4b7fc99f6a8f4c3d616" translate="yes" xml:space="preserve">
          <source>In order to test the created API you will need to access its test URL. To make this easier to access, add the following output to &lt;code&gt;api_gateway.tf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9625ecf5fe56870523b64c3041d47dde193e21e5" translate="yes" xml:space="preserve">
          <source>In order to use the NSX Terraform provider you must first configure the provider to communicate with the VMware NSX manager. The NSX manager is the system which serves the NSX REST API and provides a way to configure the desired state of the NSX system. The configuration of the NSX provider requires the IP address, hostname, or FQDN of the NSX manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52714b1b29c8d746da3862d51de329b1f5a9f648" translate="yes" xml:space="preserve">
          <source>In order to use this Provider, you must have an active account with Fastly. Pricing and signup information can be found at &lt;a href=&quot;https://www.fastly.com/signup&quot;&gt;https://www.fastly.com/signup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c979575e742b9925e8ff8799de160167321bdb67" translate="yes" xml:space="preserve">
          <source>In other languages, plugins are built using dynamic libraries. Since this is not an option for us in Go we use a network RPC interface instead. This means that each plugin is an independent program, and instead of communicating via shared memory, the main process communicates with the plugin process over HTTP. When you start Terraform, it identifies the plugin you want to use, finds it on disk, runs the other binary, and does some handshaking to make sure they can talk to each other (the error you may see after upgrading is a handshake failure in the RPC code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71709738a6711099b1155ed59d06a4504ffd753e" translate="yes" xml:space="preserve">
          <source>In particular, organizations commonly want to create a strong separation between multiple deployments of the same infrastructure serving different development stages (e.g. staging vs. production) or different internal teams. In this case, the backend used for each deployment often belongs to that deployment, with different credentials and access controls. Named workspaces are &lt;em&gt;not&lt;/em&gt; a suitable isolation mechanism for this scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eecb81d54d4089dfe943ee26c7fd9d40b5a9f93" translate="yes" xml:space="preserve">
          <source>In previous versions of Terraform all of the plugins were included in a zip file. For example, when you upgraded from 0.6.12 to 0.6.15, the newer version of each plugin file would have replaced the older one on disk, and you would have ended up with the latest version of each plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90631521dbda54f13f027d22af7ded257a19d83d" translate="yes" xml:space="preserve">
          <source>In rare cases, we might decide that a PR should be closed. We'll make sure to provide clear reasoning when this happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d00ec1de75b2cee34da1d6332f48dbc0d78cc5a" translate="yes" xml:space="preserve">
          <source>In reality, it is a bit more complicated than this. Imagine the scenario where our update function has to update two separate fields which require two separate API calls. What do we do if the first API call succeeds but the second fails? How do we properly tell Terraform to only persist half the diff? This is known as a &lt;em&gt;partial state&lt;/em&gt; scenario, and implementing these properly is critical to a well-behaving provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8070a0951d09904118843942e9ac039d7b240c2" translate="yes" xml:space="preserve">
          <source>In systems that support user-defined labels or tags, use a tagging convention to make resources automatically discoverable. For example, use &lt;a href=&quot;../providers/aws/r/vpc&quot;&gt;the &lt;code&gt;aws_vpc&lt;/code&gt; resource type&lt;/a&gt; to assign suitable tags and then &lt;a href=&quot;../providers/aws/d/vpc&quot;&gt;the &lt;code&gt;aws_vpc&lt;/code&gt; data source&lt;/a&gt; to query by those tags in other configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc3d3d75078ed6f099b5a2dc93fbb7ba0f89765" translate="yes" xml:space="preserve">
          <source>In the 0.9 line of Terraform releases, this concept was known as &quot;environment&quot;. It was renamed in 0.10 based on feedback about confusion caused by the overloading of the word &quot;environment&quot; both within Terraform itself and within organizations that use Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7479fcfa02b874c3155a6e015ba69d2649ee8511" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;providers&lt;/code&gt; map, the keys are provider names as expected by the child module, while the values are the names of corresponding configurations in the &lt;em&gt;current&lt;/em&gt; module. The subdirectory &lt;code&gt;./tunnel&lt;/code&gt; must then contain &lt;em&gt;proxy configuration blocks&lt;/em&gt; like the following, to declare that it requires configurations to be passed with these from the &lt;code&gt;providers&lt;/code&gt; block in the parent's &lt;code&gt;module&lt;/code&gt; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff3f230c02f5aca53d64f6ced53cbd35a7a9cc1" translate="yes" xml:space="preserve">
          <source>In the above example each &lt;code&gt;TestCase&lt;/code&gt; invokes a function to retrieve it&amp;rsquo;s desired configuration, based on a randomized name provided, however an in-line string or constant string would work as well, so long as they contain valid Terraform configuration for the plugin or resource under test. This pattern of first applying and checking a basic configuration, followed by applying a modified configuration with updated or additional checks is a common pattern used to test update functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f76d05d6608599a7ffd367871ed67963b3759b" translate="yes" xml:space="preserve">
          <source>In the above example, the template is processed by Terraform first to turn it into: &lt;code&gt;${foo}:80&lt;/code&gt;. After that, the template is processed as a template to interpolate &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83a69b24736e1f4fa643e5f6f929075d02224dc" translate="yes" xml:space="preserve">
          <source>In the below example implementation of a Resource you see parameters &lt;code&gt;uuid&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758f1927890e1f44e31dbd61853b7bf9363ba775" translate="yes" xml:space="preserve">
          <source>In the case above, the plugin is of type &quot;provider&quot; and of name &quot;example&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f062998f7fa3efee279173a2ec63fb2cd2666d12" translate="yes" xml:space="preserve">
          <source>In the case of an error persisting the state to the backend, Terraform will write the state locally. This is to prevent data loss. If this happens the end user must manually push the state to the remote backend once the error is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b17fe073de86fc16432ddff5eec033ed1701a5" translate="yes" xml:space="preserve">
          <source>In the case of govc, you can locate a managed object ID from an inventory path by doing the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b5cb9e6b5bdafbd845a6fb32a0a000d47254fc" translate="yes" xml:space="preserve">
          <source>In the case of two routes with equal prefix length, the one with the lowest-numbered priority value wins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277f43198260c13f79114cd9be5dc32bcbb124d7" translate="yes" xml:space="preserve">
          <source>In the default configuration, Terraform stores the state in a file in the current working directory where Terraform was run. This is okay for getting started, but when using Terraform in a team it is important for everyone to be working with the same state so that operations will be applied to the same remote objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae214a140351f88d4b517b401a33d14dfeac4b0" translate="yes" xml:space="preserve">
          <source>In the example above, it is possible that setting the &lt;code&gt;tags&lt;/code&gt; succeeds, but setting the &lt;code&gt;name&lt;/code&gt; fails. In this scenario, we want to make sure that only the state of the &lt;code&gt;tags&lt;/code&gt; is updated. To do this the &lt;code&gt;Partial&lt;/code&gt; and &lt;code&gt;SetPartial&lt;/code&gt; functions are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffaaf7c64a9451e8460b38bb41e405be4db01b8a" translate="yes" xml:space="preserve">
          <source>In the example above, the &quot;vpn&quot; resource will only be included if &quot;var.something&quot; evaluates to true. Otherwise, the VPN resource will not be created at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee644d214975eb5c311bb00a5d4c46a140969a88" translate="yes" xml:space="preserve">
          <source>In the following section we will manually emulate an automatic build process using the &lt;code&gt;zip&lt;/code&gt; command line tool and the &lt;a href=&quot;https://aws.amazon.com/cli/&quot;&gt;AWS CLI&lt;/a&gt;. The latter must also have access to your AWS credentials, and the easiest way to achieve this is to provide them via environment variables so that they can be used by both the AWS CLI and Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d960e5dadd7cf3cfb44f77ca8ad9f115161a8d" translate="yes" xml:space="preserve">
          <source>In theory, because the plugin interface is HTTP, you could even develop a plugin using a completely different programming language! (Disclaimer, you would also have to re-implement the plugin API which is not a trivial amount of work.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f65b3ad3a2b2e94ae709579ed1ca23afe1d6cd2" translate="yes" xml:space="preserve">
          <source>In these cases, you can't use a relative path, since paths in Terraform are generally relative to the working directory from which Terraform was executed. Instead, you want to use a module-relative path. To do this, you should use the &lt;a href=&quot;../configuration/interpolation&quot;&gt;path interpolated variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8433820b935bfb6ef29cabefdf500210c53e30ec" translate="yes" xml:space="preserve">
          <source>In this case, either use &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; directly or set the enviroment variables &lt;code&gt;DOCKER_REGISTRY_USER&lt;/code&gt; and &lt;code&gt;DOCKER_REGISTRY_PASS&lt;/code&gt; or add the string manually via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff5929d15909637e79ad1fd2a58cf2c60ec3aab" translate="yes" xml:space="preserve">
          <source>In this example we&amp;rsquo;re creating a &lt;code&gt;Provider&lt;/code&gt; and setting it&amp;rsquo;s &lt;code&gt;schema&lt;/code&gt;. This schema is a collection of key value pairs of schema elements the attributes a user can specify in their configuration. The keys are strings, and the values are &lt;a href=&quot;https://github.com/hashicorp/terraform/blob/5727d3335247e5940af2bef35c88657753f6d260/helper/schema/schema.go#L37&quot;&gt;&lt;code&gt;schema.Schema&lt;/code&gt;&lt;/a&gt; structs that define the behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0d8e24d8261759cd8b4a55a1f3288ba1e3a2ef" translate="yes" xml:space="preserve">
          <source>In this example you can use the &lt;code&gt;${var.foo_port}&lt;/code&gt; variable to dynamically set the &lt;code&gt;${port}&lt;/code&gt; variable in the &lt;code&gt;foo.configs.json.tpl&lt;/code&gt; template and create the data of the &lt;code&gt;foo_config&lt;/code&gt; with the help of the &lt;code&gt;base64encode&lt;/code&gt; interpolation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962100ad2a64b5483b2e444fbad1909066146998" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;Z4KAPRWWNC7JR&lt;/code&gt; is the ZoneID, &lt;code&gt;dev.example.com&lt;/code&gt; is the Record Name, &lt;code&gt;NS&lt;/code&gt; is the Type and &lt;code&gt;dev&lt;/code&gt; is the Set Identifier. Only the Set Identifier is actually optional in the ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0342c7beaec02e04a3eae300e0f081f53ed8a65c" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;instance&lt;/code&gt; is provided by the &lt;code&gt;aws_instance&lt;/code&gt; data source, fetching an external instance, possibly not managed by Terraform. &lt;code&gt;sg_attachment&lt;/code&gt; then attaches to the output instance's &lt;code&gt;network_interface_id&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7b8749d1a15b9013bd8e81f2fa253df112e844" translate="yes" xml:space="preserve">
          <source>In this example, Terraform will attempt to read &lt;code&gt;region&lt;/code&gt; from the environment if it is omitted from configuration. If it&amp;rsquo;s not found in the environment, a default value of &lt;code&gt;us-west&lt;/code&gt; is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2d7f5a3a2b29f485f89201ba9853521e0baa1d" translate="yes" xml:space="preserve">
          <source>In this example, the output &lt;code&gt;value&lt;/code&gt; from the &quot;app&quot; module is available as &quot;app_value&quot;. If this root level output hadn't been created, then a remote state resource wouldn't be able to access the &lt;code&gt;value&lt;/code&gt; output on the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706b852dfa6a662b96bb65fd4204eb12bf3218d6" translate="yes" xml:space="preserve">
          <source>In this example, three EC2 instances are created and then a &lt;code&gt;null_resource&lt;/code&gt; instance is used to gather data about all three and execute a single action that affects them all. Due to the &lt;code&gt;triggers&lt;/code&gt; map, the &lt;code&gt;null_resource&lt;/code&gt; will be replaced each time the instance ids change, and thus the &lt;code&gt;remote-exec&lt;/code&gt; provisioner will be re-run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9441aa8b777aa568484d9ecdc8512be358b7cf9f" translate="yes" xml:space="preserve">
          <source>In this guide you created an AWS Lambda function that produces a result compatible with Amazon API Gateway &lt;em&gt;proxy resources&lt;/em&gt; and then configured API Gateway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eb59998d71b5fa5f066a8b1c90807a59af335b" translate="yes" xml:space="preserve">
          <source>In this scenario, the secondary resources will not already exist in configuration, so it is necessary to consult the import output and create a &lt;code&gt;resource&lt;/code&gt; block in configuration for each secondary resource. If this is not done, Terraform will plan to destroy the imported objects on the next run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762efcc5fd3df2719258ad742a3add290f24ea31" translate="yes" xml:space="preserve">
          <source>In this situation, the resource is simply a waiter for manual email approval of ACM certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbbbe88e6b3e3e9a52cbe6a7dc916c4b84b2d6b" translate="yes" xml:space="preserve">
          <source>In versions of Terraform prior to 0.7, each plugin shipped as a separate binary. In versions of Terraform &amp;gt;= 0.7, all of the official plugins are shipped as a single binary. This saves a lot of disk space and makes downloads faster for you!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624c9db57251934a65cfe37453d48a236ee71c79" translate="yes" xml:space="preserve">
          <source>Increasing Datastore Size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353bba57ca7c5fcad7a3f4b5988b45fa9afc0e40" translate="yes" xml:space="preserve">
          <source>Indicates that this element is optional to include in the configuration. Note that &lt;code&gt;Optional&lt;/code&gt; does not itself establish a default value. See Default below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3239d2639306f5084f9d4a94b442d02f1160adf2" translate="yes" xml:space="preserve">
          <source>Indicates that this element must be provided in the configuration. Omitting this attribute from configuration, or later removing it, will result in a plan-time error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ef38e44abfd82dc37fd88ea8f7ec86dba08843" translate="yes" xml:space="preserve">
          <source>Individual Resources may provide a &lt;code&gt;timeouts&lt;/code&gt; block to enable users to configure the amount of time a specific operation is allowed to take before being considered an error. For example, the &lt;a href=&quot;../providers/aws/r/db_instance#timeouts&quot;&gt;aws_db_instance&lt;/a&gt; resource provides configurable timeouts for the &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; operations. Any Resource that provides Timeouts will document the default values for that operation, and users can overwrite them in their configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6acf96c624829fea0f862c23e11df667c0c1d7" translate="yes" xml:space="preserve">
          <source>Individual Resources must opt-in to providing configurable Timeouts, and attempting to configure the timeout for a Resource that does not support Timeouts, or overwriting a specific action that the Resource does not specify as an option, will result in an error. Valid units of time are &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455fe89db202dee579d702d3a82362149c97e7d5" translate="yes" xml:space="preserve">
          <source>Individual resources may provide a &lt;code&gt;timeouts&lt;/code&gt; block to configure the amount of time a specific operation is allowed to take before being considered an error. Each resource may provide configurable timeouts for the &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; operations. Each resource that supports timeouts will have or inherit default values for that operation. Users can overwrite the default values for a specific resource in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c727769fef2a02c6acb74848de33a092473e22" translate="yes" xml:space="preserve">
          <source>Individual resources must opt-in to providing configurable &lt;code&gt;timeouts&lt;/code&gt;, and attempting to configure values for a resource that does not support &lt;code&gt;timeouts&lt;/code&gt;, or overwriting a specific action that the resource does not specify as an option, will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7c854197e661a6800daddc6a8b6911d9a29a38" translate="yes" xml:space="preserve">
          <source>InfluxDB</source>
          <target state="translated">InfluxDB</target>
        </trans-unit>
        <trans-unit id="50e4f11272986e0b370cebb4f173af690a044c26" translate="yes" xml:space="preserve">
          <source>InfluxDB Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb7e4a0bf623d84038d9a6847045d00e6203685" translate="yes" xml:space="preserve">
          <source>Influxdb</source>
          <target state="translated">Influxdb</target>
        </trans-unit>
        <trans-unit id="e65f4d3a811412b6b55b373b570b5b74d96d1885" translate="yes" xml:space="preserve">
          <source>Infoblox</source>
          <target state="translated">Infoblox</target>
        </trans-unit>
        <trans-unit id="8540f2ef00e882c6537d99de87c6bb509764ffac" translate="yes" xml:space="preserve">
          <source>Infrastructure Software Providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8950fa799fe4168fbc174271358d46032f28740" translate="yes" xml:space="preserve">
          <source>Infrastructure as Code. If this is a new term for you, check out &lt;a href=&quot;https://en.wikipedia.org/wiki/Infrastructure_as_Code&quot;&gt;Infrastructure as Code&lt;/a&gt; on Wikipedia for a brief introduction. Our &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;Getting Started guide&lt;/a&gt; is a great way to get started as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceffe4737645b49c67a034abe70246ee7f3ee7b4" translate="yes" xml:space="preserve">
          <source>Infrastructure as code: reading and interpolating configuration files and modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804ef18900220a885d05ece355f01546b5575559" translate="yes" xml:space="preserve">
          <source>Infrastructure managed by Terraform will be destroyed. This will ask for confirmation before destroying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af02f933a3ac2d6d8b21b970ce7f2551bb13947c" translate="yes" xml:space="preserve">
          <source>Ingress blocks support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="37227908a1b89c4bdc3be5c8089cf42d6b27292c" translate="yes" xml:space="preserve">
          <source>Initialization of any included libraries used to make API calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44289ee2d1bd2c3982f79cb3d372150789f0e39" translate="yes" xml:space="preserve">
          <source>Inline Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b2e2163d1c60520bee357572aa298ec1983f20" translate="yes" xml:space="preserve">
          <source>Inline templates allow you to specify the template string inline without loading a file. An example is shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeed70cfb56148be41d72fcdd403f4af2b4230a" translate="yes" xml:space="preserve">
          <source>Input Variable Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728c6b9f7310aa8e0c08bc5c2b6a2fc29a7d1379" translate="yes" xml:space="preserve">
          <source>Input variable usage is introduced in the Getting Started guide section &lt;a href=&quot;https://www.terraform.io/intro/getting-started/variables.html&quot;&gt;&lt;em&gt;Input Variables&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79986020150880e9243fde2e30dee4b9c215d29e" translate="yes" xml:space="preserve">
          <source>Input variables can be defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16df1330e509e8597974ee343f1b6e6e9e69fce9" translate="yes" xml:space="preserve">
          <source>Input variables serve as parameters for a Terraform module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ac063fc3c235694e1475e82bfd21acb6b4eba4" translate="yes" xml:space="preserve">
          <source>Inputs of a module are &lt;a href=&quot;../configuration/variables&quot;&gt;variables&lt;/a&gt; and outputs are &lt;a href=&quot;../configuration/outputs&quot;&gt;outputs&lt;/a&gt;. There is no special syntax to define these, they're defined just like any other variables or outputs. You can think about these variables and outputs as the API interface to your module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4352b4ccfad7eb08dc4b1b77d1a92df2d89da4" translate="yes" xml:space="preserve">
          <source>Inputs/Outputs</source>
          <target state="translated">Inputs/Outputs</target>
        </trans-unit>
        <trans-unit id="84b3a34ac4e6f58a73404bb4c944f3390984a093" translate="yes" xml:space="preserve">
          <source>Inside the file, reference the variable as such:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cb438c917965cf2583715dc1e8bba2354876bc" translate="yes" xml:space="preserve">
          <source>Inside this function we invoke &lt;code&gt;resource.Test()&lt;/code&gt; with the &lt;code&gt;*testing.T&lt;/code&gt; input and a new testcase object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ff8da811630194bc31aedc192a64f382791449" translate="yes" xml:space="preserve">
          <source>Inspection and Modification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8684bbf0aba2fc0d6f933444b6e7ee8bac556e35" translate="yes" xml:space="preserve">
          <source>Installing a Plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f97f8775628e86310829ab9e8c465258ab92a5e" translate="yes" xml:space="preserve">
          <source>Instance</source>
          <target state="translated">Instance</target>
        </trans-unit>
        <trans-unit id="2d1119e09b1371a911ae239381072aebe7514173" translate="yes" xml:space="preserve">
          <source>Instance Profile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc5b8a81ad1266d399a7ada85508799cc56481a" translate="yes" xml:space="preserve">
          <source>Instance Profiles can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853b1219b0a4b602e9a149a398170bf66fcef2d3" translate="yes" xml:space="preserve">
          <source>Instance Templates cannot be updated after creation with the Google Cloud Platform API. In order to update an Instance Template, Terraform will destroy the existing resource and create a replacement. In order to effectively use an Instance Template resource with an &lt;a href=&quot;compute_instance_group_manager&quot;&gt;Instance Group Manager resource&lt;/a&gt;, it's recommended to specify &lt;code&gt;create_before_destroy&lt;/code&gt; in a &lt;a href=&quot;../../../configuration/resources#lifecycle&quot;&gt;lifecycle&lt;/a&gt; block. Either omit the Instance Template &lt;code&gt;name&lt;/code&gt; attribute, or specify a partial name with &lt;code&gt;name_prefix&lt;/code&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe5e6d8948dd50c7d4855c91a8c41724611fce8" translate="yes" xml:space="preserve">
          <source>Instance With Attached Volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e247f0c7e6e7ec4a1f559e3203d29b0746834ed5" translate="yes" xml:space="preserve">
          <source>Instance With Multiple Networks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ccffd563f96e2ced4fd1e53103e68e4178fc95" translate="yes" xml:space="preserve">
          <source>Instance With Personality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8864220557d04b3fe300c98c3509376e868ba31" translate="yes" xml:space="preserve">
          <source>Instance can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1ab21642ab9a9a62c274bbee70a92fe0f4baa6" translate="yes" xml:space="preserve">
          <source>Instance can be imported using the id, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc89ae3235afcbcc3c6b22b6ae2c894d8a0c560" translate="yes" xml:space="preserve">
          <source>Instance count is 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecb934764a33bd2ee2f6f703988e2adaff0765d" translate="yes" xml:space="preserve">
          <source>Instance group can be imported using the &lt;code&gt;zone&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f818b45f933e102e02f6156ca80a2c4689d3dfc" translate="yes" xml:space="preserve">
          <source>Instance group managers can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3911096aa70bece143735f9457c09efc41cf6217" translate="yes" xml:space="preserve">
          <source>Instance supports the arguments found in &lt;a href=&quot;opc_compute_instance&quot;&gt;opc_compute_instance&lt;/a&gt; and the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4d1ca0d102d12db300bfdf19bf7466ed42f27c" translate="yes" xml:space="preserve">
          <source>Instance templates can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f2697c56bbde0ef7d635be672144804b932665" translate="yes" xml:space="preserve">
          <source>Instance with Multiple Ephemeral Disks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb259a17c083196840e615939e7b03c1f1c3f9c5" translate="yes" xml:space="preserve">
          <source>Instance with User Data (cloud-init)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6d1f925eaeb9ca273f32b53029833fe313a777" translate="yes" xml:space="preserve">
          <source>Instances and Ports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b75c05bd3cb376c61164bbd86c442764900624a" translate="yes" xml:space="preserve">
          <source>Instances and Security Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eeaef519bf7d2c1e75ce35a3f478276ab82a0cc" translate="yes" xml:space="preserve">
          <source>Instances can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2132b2f131a2c8157378b17947579e829c3ea9d7" translate="yes" xml:space="preserve">
          <source>Instances can be imported using the &lt;code&gt;project&lt;/code&gt;, &lt;code&gt;zone&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd40fe9025f3b6a94267436771de434e27c232e" translate="yes" xml:space="preserve">
          <source>Instances can be imported using the Instance's combined &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;ID&lt;/code&gt; with a &lt;code&gt;/&lt;/code&gt; character separating them. If viewing an instance in the Oracle Web Console, the instance's &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; are the last two fields in the instances fully qualified &lt;code&gt;Name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e55c044dcd1e61af7b420cd279e308846025f04" translate="yes" xml:space="preserve">
          <source>Instances can be imported using their &lt;code&gt;name&lt;/code&gt; and optionally the &lt;code&gt;project&lt;/code&gt; in which it is defined (Often used when the project is different to that defined in the provider), The format is thus either &lt;code&gt;{instanceId}&lt;/code&gt; or &lt;code&gt;{projectId}/{instanceId}&lt;/code&gt;. e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78139d43a73d199ba1af653ed694483fb2471a01" translate="yes" xml:space="preserve">
          <source>Instantiate from Backup supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ba6e77056b023162dc6ae5a8124d3ccbd83d9e" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;-target&lt;/code&gt; as a means to operate on isolated portions of very large configurations, prefer instead to break large configurations into several smaller configurations that can each be independently applied. &lt;a href=&quot;../configuration/data-sources&quot;&gt;Data sources&lt;/a&gt; can be used to access information about resources created in other configurations, allowing a complex system architecture to be broken down into more managable parts that can be updated independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74010b7a4145a215da853b426e90febd6898deef" translate="yes" xml:space="preserve">
          <source>Instead, use one or more &lt;a href=&quot;../modules/index&quot;&gt;re-usable modules&lt;/a&gt; to represent the common elements, and then represent each instance as a separate configuration that instantiates those common elements in the context of a different backend. In that case, the root module of each configuration will consist only of a backend configuration and a small number of &lt;code&gt;module&lt;/code&gt; blocks whose arguments describe any small differences between the deployments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed06ac77e394c8c3bb8547ddc04ff14c6a8b2ab5" translate="yes" xml:space="preserve">
          <source>Instead, we've developed some higher level libraries to help you out with developing providers. These are the same libraries we use in our own core providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2536e8bab30f215602182766e7831f56b678a0c2" translate="yes" xml:space="preserve">
          <source>Integer Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3b939dfc16ded79f3c4b4072a27dde601a719c" translate="yes" xml:space="preserve">
          <source>Interacting with instances has been seen to work. Interacting with all other resources is either untested or known to not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8aff7c18369c8d26db7ba84fa3143fa45cd8f8" translate="yes" xml:space="preserve">
          <source>Interface type usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c23e2568ff5dc785c8fdf6d012f7ac12d94f743" translate="yes" xml:space="preserve">
          <source>Interfaces are assigned to devices in the specific order they are declared. This has different implications for different operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5958d718abb535bc74f6f8d601ab8e69f761f90" translate="yes" xml:space="preserve">
          <source>Internal IP addresses are ephemeral and only belong to an instance for the lifetime of the instance; if the instance is deleted and recreated, the instance is assigned a new internal IP address, either by Compute Engine or by you. External IP addresses can be either ephemeral or static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844f8e9f87eb86e393089e7bb2613b35ae148b8d" translate="yes" xml:space="preserve">
          <source>Internal Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="4e40a55b4143ec141bf933b942a9e8d97bd3fe94" translate="yes" xml:space="preserve">
          <source>Internet Gateways can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9afe8e3091480042489fca994cbc75f430b6f6" translate="yes" xml:space="preserve">
          <source>Interpolated tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="559726405985f0e9a0df7144cbacbe09bd659179" translate="yes" xml:space="preserve">
          <source>Interpolation Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884aed91d28a693f35492aa1b683335eaae2195c" translate="yes" xml:space="preserve">
          <source>Interpolation is supported only for the per-provider configuration arguments. It is not supported for the special &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fb1c952ac39822717c094e8a6cd195bbe85adc" translate="yes" xml:space="preserve">
          <source>Interpolations are not currently supported in the &lt;code&gt;lifecycle&lt;/code&gt; configuration block (see &lt;a href=&quot;https://github.com/hashicorp/terraform/issues/3116&quot;&gt;issue #3116&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962a683057dde7f5b8b3e44f18cfc4f83cdc69e7" translate="yes" xml:space="preserve">
          <source>Interpolations are parsed in resource and provider configurations to determine dependencies. References to resource attributes are turned into dependencies from the resource with the interpolation to the resource being referenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc075a1f3770c30bcf3653fbcb0ad0a4cbc50e31" translate="yes" xml:space="preserve">
          <source>Interpolations may contain conditionals to branch on the final value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76609fa1d4efeaf7f2e4cce2e6a999517b0983fe" translate="yes" xml:space="preserve">
          <source>Interpreter Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a594b70f25f4d725ca231f8f1ff60452a5ba64" translate="yes" xml:space="preserve">
          <source>Interpreting a Crash Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f2fe21fb3baf406c6be4b75748d2e7bd43d03f" translate="yes" xml:space="preserve">
          <source>Invite Message template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1709c17d2de8e0cd927d05a3ed198c0494102c" translate="yes" xml:space="preserve">
          <source>Invoking the Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798d6dca6422f4fadc73e3800669d2f51c8d966a" translate="yes" xml:space="preserve">
          <source>IoT Topic Rules can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5b2585535569001442fea2742fc30d55fdca98" translate="yes" xml:space="preserve">
          <source>IoTHubs can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b603afe6378a8e2efef18c917ccf3a4f5cdd754" translate="yes" xml:space="preserve">
          <source>IsUnitTest</source>
          <target state="translated">IsUnitTest</target>
        </trans-unit>
        <trans-unit id="887fcd24010c1bf5edea2daa9a41f5d431015be1" translate="yes" xml:space="preserve">
          <source>Issue Lifecycle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb73de0a82956dc90a5932158a84c969b557de4" translate="yes" xml:space="preserve">
          <source>Issue Reporting Checklists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fa6acc0f6dfb2910e29fd3f26c64b57d45852e" translate="yes" xml:space="preserve">
          <source>Issue labels are keyed off of their &quot;name&quot;, so pre-existing issue labels result in a 422 HTTP error if they exist outside of Terraform. Normally this would not be an issue, except new repositories are created with a &quot;default&quot; set of labels, and those labels easily conflict with custom ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">Issues</target>
        </trans-unit>
        <trans-unit id="c2fdf3303b539008b0b0a3d47e0acebf12820e87" translate="yes" xml:space="preserve">
          <source>It deals with requesting certificates and managing their attributes and life-cycle. This resource does not deal with validation of a certificate but can provide inputs for other resources implementing the validation. It does not wait for a certificate to be issued. Use a &lt;a href=&quot;acm_certificate_validation&quot;&gt;&lt;code&gt;aws_acm_certificate_validation&lt;/code&gt;&lt;/a&gt; resource for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b1ff98fd5665ba7b856084e5ea7776b3f4a65b" translate="yes" xml:space="preserve">
          <source>It defines the maximum and minimum numbers of ECS instances in the group, and their associated Server Load Balancer instances, RDS instances, and other attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f88debf341cab28e6c2cfd92b90f6d42f05caec" translate="yes" xml:space="preserve">
          <source>It exposes the following attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e8e901c836cd03a6ebca784a2d9bd400fbf46a" translate="yes" xml:space="preserve">
          <source>It is also possible to disable Admission Control by setting &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;disabled&lt;/code&gt;, however this is not recommended as it can lead to issues with cluster capacity, and instability with vSphere HA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d3300c33eba2903752175661c2e52ad559b7d3" translate="yes" xml:space="preserve">
          <source>It is also possible to import to resources in child modules and to single instances of a resource with &lt;code&gt;count&lt;/code&gt; set. See &lt;a href=&quot;../internals/resource-addressing&quot;&gt;&lt;em&gt;Resource Addressing&lt;/em&gt;&lt;/a&gt; for more details on how to specify a target resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d523627c22f9bcc0391bd3e82af425c7ca6ac1" translate="yes" xml:space="preserve">
          <source>It is always valid to use &lt;a href=&quot;variables&quot;&gt;input variables&lt;/a&gt; and &lt;a href=&quot;data-sources&quot;&gt;data sources&lt;/a&gt; whose configurations do not in turn depend on as-yet-unknown values. &lt;a href=&quot;locals&quot;&gt;Local values&lt;/a&gt; may also be used, but currently may cause errors when running &lt;code&gt;terraform destroy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d097c351600451bcb31ffd3187a3dd9f97123ea" translate="yes" xml:space="preserve">
          <source>It is appropriate to either reference existing services or specify non-existent services that will be created in the future when creating intentions. This resource can be used in conjunction with the &lt;code&gt;consul_service&lt;/code&gt; datasource when referencing services registered on nodes that have a running Consul agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b94804864081e601596127d6848af2f3f6c2db" translate="yes" xml:space="preserve">
          <source>It is important to keep this in mind if you do (or plan to) store sensitive data (e.g. database passwords, user passwords, private keys) as it may affect the risk of exposure of such sensitive data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4da47698b49c57666f6bbc23ca510562dc546f" translate="yes" xml:space="preserve">
          <source>It is not possible to apply such fine-grained access control to the DynamoDB table used for locking, so it is possible for any user with Terraform access to lock any workspace state, even if they do not have access to read or write that state. If a malicious user has such access they could block attempts to use Terraform against some or all of your workspaces as long as locking is enabled in the backend configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94332bbbfa6a4769031af3df4c8d1f697c882b7c" translate="yes" xml:space="preserve">
          <source>It is not possible to import this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5988eb183895a734223961fa657db5937b56cf48" translate="yes" xml:space="preserve">
          <source>It is not possible to taint an entire module. Instead, each resource within the module must be tainted separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4affeb0684d19744ca93255fb28efac4fc335f" translate="yes" xml:space="preserve">
          <source>It is only possible to create public IPv4 blocks, with masks from /24 (256 addresses) to /32 (1 address).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba01dc1c49d4c48b93aeb80ea862d057e4781b77" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;circonus_check&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5334499b3e8238029c09bec20d11533d23b8655c" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;circonus_contact_group&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393d38d99f6514e986d4eec1cace1883e448f079" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;circonus_graph&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52489bd224f5ff8f7c62b34e8a93e7d7249f15c" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;circonus_metric&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67e234d9a3488d0b65c805bc727efed233d29eb" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;circonus_metric_cluster&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67431a1680e3c738e672eca4ec5321b8b9d00ff" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;circonus_rule_set&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec1a4f1917fbfcf0ff66858628690eefe62df7f" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;postgresql_database&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d90d2057dab5651ad425c78ef959308f3e33363" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;postgresql_role&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da3bb293c30ac2f995e8532325a0fdd0298afa" translate="yes" xml:space="preserve">
          <source>It is possible to import a &lt;code&gt;postgresql_schema&lt;/code&gt; resource with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59189d8b29657db41f5500a6e7c1f541be13ce83" translate="yes" xml:space="preserve">
          <source>It is possible to run &lt;code&gt;terraform apply&lt;/code&gt;, but it will be a no-op because all of the resource options currently take no action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65593ba505018d832ff9a9bfba613c8d61bdecc3" translate="yes" xml:space="preserve">
          <source>It is recommended for now to specify boolean values for variables as the strings &lt;code&gt;&quot;true&quot;&lt;/code&gt; and &lt;code&gt;&quot;false&quot;&lt;/code&gt;, to avoid some caveats in the conversion process. A future version of Terraform will properly support boolean values and so relying on the current behavior could result in backwards-incompatibilities at that time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a3720281316f811f28999121e6577534832d9a" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to embed files within the module that aren't Terraform configuration files, such as a script to provision a resource or a file to upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fcbb59727cb747d5f7e655c976eb5c11d39c8a" translate="yes" xml:space="preserve">
          <source>It is strongly recommended to provide the discovery document for a hostname on the standard HTTPS port 443. However, in development environments this is not always possible or convenient, so Terraform allows a hostname to end with a port specification consisting of a colon followed by one or more decimal digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfc40be20f47752f9dfd936bed81ef341f028e6" translate="yes" xml:space="preserve">
          <source>It is worth noting that there are other valid ways to use these services and resources that make different tradeoffs. We encourage readers to consult the official documentation for the respective services and resources for additional context and best-practices. This guide can still serve as an introduction to the main resources associated with these services, even if you choose a different architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b9d8631348406f0d30a87095361d7b57bb0ed6" translate="yes" xml:space="preserve">
          <source>It needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b335caf301fa38049b2ffeae4f47ab6801c136f" translate="yes" xml:space="preserve">
          <source>It returns a 302 redirect whose &lt;code&gt;Location&lt;/code&gt; header redirects the client to the download endpoint (above) for the latest version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911330366bf7ac5893ba87ba424c2c21b4bfb7a1" translate="yes" xml:space="preserve">
          <source>It uses the same VCS-backed tagged release workflow as the Terraform Registry, but imports modules from your private VCS repos (on any of TFE's supported VCS providers) instead of requiring public GitHub repos. You can seamlessly reference private modules in your Terraform configurations (just include a hostname in the module source), and TFE's UI provides a searchable marketplace of private modules to help your users find the code they need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c48663fd7da0203f45e3d3bcc7a28b340e39fd2" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to reiterate that acceptance tests in resources &lt;em&gt;create actual cloud infrastructure&lt;/em&gt;, with possible expenses incurred, and are the responsibility of the user running the tests. Creating real infrastructure in tests verifies the described behavior of Terraform Plugins in real world use cases against the actual APIs, and verifies both local state and remote values match. Acceptance tests require a network connection and often require credentials to access an account for the given API. When writing and testing plugins, &lt;strong&gt;it is highly recommended to use an account dedicated to testing, to ensure no infrastructure is created in error in any environment that cannot be completely and safely destroyed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817c8f4a30c2b7b02699866f4c0958d0a103def4" translate="yes" xml:space="preserve">
          <source>It's also possible to create credentials via &lt;a href=&quot;https://azure.microsoft.com/en-us/documentation/articles/resource-group-authenticate-service-principal-cli/&quot;&gt;the legacy cross-platform CLI&lt;/a&gt; and the &lt;a href=&quot;https://azure.microsoft.com/en-us/documentation/articles/resource-group-authenticate-service-principal/&quot;&gt;legacy PowerShell Cmdlets&lt;/a&gt; - however we would highly recommend using the Azure CLI above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8856e1db2657335a30659fd348fbc6b86a7528df" translate="yes" xml:space="preserve">
          <source>It's common to write custom &lt;code&gt;TestCheckFunc&lt;/code&gt; functions to validate resources were created correctly by using SDKs directly to verify identity and properties of resources. These functions can retrieve information by SDKs and provide the results to other &lt;code&gt;TestCheckFunc&lt;/code&gt; methods. The below example uses &lt;code&gt;ComposeTestCheckFunc&lt;/code&gt; to group a set of &lt;code&gt;TestCheckFunc&lt;/code&gt; functions together. The first function &lt;code&gt;testAccCheckExampleWidgetExists&lt;/code&gt; uses the &lt;code&gt;Example&lt;/code&gt; service SDK directly, and queries it for the ID of the widget we have in state. Once found, the result is stored into the &lt;code&gt;widget&lt;/code&gt; struct declared at the begining of the test function. The next check function &lt;code&gt;testAccCheckExampleWidgetAttributes&lt;/code&gt; recieves the updated &lt;code&gt;widget&lt;/code&gt; and checks its attributes. The final check &lt;code&gt;TestCheckResourceAttr&lt;/code&gt; verifies that the same value is stored in state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f4788b28641e9937758d4dd22813995f375faa" translate="yes" xml:space="preserve">
          <source>It's important to note that any project resources that were added to your Terraform config prior to 0.8.5 will continue to function as they always have, and will not be managed by Terraform. Only newly added projects are affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576969b7cb41bac5e91043af2b7be814d015587b" translate="yes" xml:space="preserve">
          <source>It's possible to complete this task in either the &lt;a href=&quot;#creating-a-service-principal-using-the-azure-cli&quot;&gt;Azure CLI&lt;/a&gt; or in the &lt;a href=&quot;#creating-a-service-principal-in-the-azure-portal&quot;&gt;Azure Portal&lt;/a&gt; - in both we'll create a Service Principal which has &lt;code&gt;Contributor&lt;/code&gt; rights to the subscription. &lt;a href=&quot;https://azure.microsoft.com/en-gb/documentation/articles/role-based-access-built-in-roles/&quot;&gt;It's also possible to assign other rights&lt;/a&gt; depending on your configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd3dbf32308a782ec6831a961bff280345dcf9b" translate="yes" xml:space="preserve">
          <source>It's possible to specify multiple &lt;code&gt;block_device&lt;/code&gt; entries to create an instance with multiple ephemeral (local) disks. In order to create multiple ephemeral disks, the sum of the total amount of ephemeral space must be less than or equal to what the chosen flavor supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356c169a103f08ffadbdd496226863c022c6bf06" translate="yes" xml:space="preserve">
          <source>It's recommended to group together logically-related local values into a single block, particularly if they depend on each other. This will help the reader understand the relationships between variables. Conversely, prefer to define &lt;em&gt;unrelated&lt;/em&gt; local values in &lt;em&gt;separate&lt;/em&gt; blocks, and consider annotating each block with a comment describing any context common to all of the enclosed locals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26570a5fc8bc16eb618a6a435853413ab49e399" translate="yes" xml:space="preserve">
          <source>It's recommended to specify &lt;code&gt;create_before_destroy = true&lt;/code&gt; in a &lt;a href=&quot;../../../configuration/resources#lifecycle&quot;&gt;lifecycle&lt;/a&gt; block to replace a certificate which is currently in use (eg, by &lt;a href=&quot;lb_listener&quot;&gt;&lt;code&gt;aws_lb_listener&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d7fad58bec74711fd43cd0903826b8127539ce" translate="yes" xml:space="preserve">
          <source>Items removed from the Terraform state are &lt;em&gt;not physically destroyed&lt;/em&gt;. Items removed from the Terraform state are only no longer managed by Terraform. For example, if you remove an AWS instance from the state, the AWS instance will continue running, but &lt;code&gt;terraform plan&lt;/code&gt; will no longer see that instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6743eed7d23b1a4a83c7a187efeec24cdfab720b" translate="yes" xml:space="preserve">
          <source>JDBC Target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29dc52e9448cfe378dd3f1c619aba269f0a0ffb" translate="yes" xml:space="preserve">
          <source>JSON Classifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9676b339ab43bd82dbca30f2e148a6eaa4483245" translate="yes" xml:space="preserve">
          <source>JSON Data (&lt;code&gt;json_data&lt;/code&gt;) supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbdf2bf663981a50340fbce25971cbfacfdb62a" translate="yes" xml:space="preserve">
          <source>JSON Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df2f79446ef29bc80e1359db8bf72de70014876" translate="yes" xml:space="preserve">
          <source>JSON element 'address' contains the text &quot;avenue&quot;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
