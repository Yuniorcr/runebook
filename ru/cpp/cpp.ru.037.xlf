<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="e9770531fb5bde808ec96fd4c54c2ee841cfdf8a" translate="yes" xml:space="preserve">
          <source>std::fmax, std::fmaxf, std::fmaxl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59ea8c84214c29f95a51e20af33968f72383da3" translate="yes" xml:space="preserve">
          <source>std::fmaxl</source>
          <target state="translated">std::fmaxl</target>
        </trans-unit>
        <trans-unit id="c47ccfd196b347f3334ba9225217f6dd2a277da2" translate="yes" xml:space="preserve">
          <source>std::fmin, std::fminf, std::fminl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c6e644a67845ba8c9e73d9aa3d28e11ec00a9a" translate="yes" xml:space="preserve">
          <source>std::fminl</source>
          <target state="translated">std::fminl</target>
        </trans-unit>
        <trans-unit id="c5585440347248d1e8b7747ee37d82f131caeb5c" translate="yes" xml:space="preserve">
          <source>std::fmod, std::fmodf, std::fmodl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2cdb4c6b0b88aa43474694c925b131a2c73d67" translate="yes" xml:space="preserve">
          <source>std::fmodl</source>
          <target state="translated">std::fmodl</target>
        </trans-unit>
        <trans-unit id="6df33f10b73f53c461c288de4f0cc4a872ebffef" translate="yes" xml:space="preserve">
          <source>std::fopen</source>
          <target state="translated">std::fopen</target>
        </trans-unit>
        <trans-unit id="aea0c8adfd5b14be565ca8aa29c31f18b427850c" translate="yes" xml:space="preserve">
          <source>std::for_each</source>
          <target state="translated">std::for_each</target>
        </trans-unit>
        <trans-unit id="9c514b99b9b8b7700dba9d2a6e03c7b18b9d9831" translate="yes" xml:space="preserve">
          <source>std::for_each_n</source>
          <target state="translated">std::for_each_n</target>
        </trans-unit>
        <trans-unit id="4cdc2d7fd46c5cb45725a33cac6b4e3a7119a74d" translate="yes" xml:space="preserve">
          <source>std::forward</source>
          <target state="translated">std::forward</target>
        </trans-unit>
        <trans-unit id="f25b9837cefd740b712c4e90a69283702862ae45" translate="yes" xml:space="preserve">
          <source>std::forward_as_tuple</source>
          <target state="translated">std::forward_as_tuple</target>
        </trans-unit>
        <trans-unit id="a21e607eeaf251e85bd41a93db805033b7ea7ff9" translate="yes" xml:space="preserve">
          <source>std::forward_list</source>
          <target state="translated">std::forward_list</target>
        </trans-unit>
        <trans-unit id="9793723e108fdb5dc11f3a0ff6b6b29e7476924a" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::assign</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::assign</target>
        </trans-unit>
        <trans-unit id="60541586e399e101ae546fb4cab68317f2de0a18" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::before_begin, cbefore_begin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929ff423fbc19672b259440a3a25495d1caeb899" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::begin, std::forward_list&amp;lt;T,Allocator&amp;gt;::cbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ae4ac20f7a88d282e7500e291299ec0ab34c2e" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::clear</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="82215609aafd15e2a8df35cdd3957da4ce5cd410" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::emplace_after</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::emplace_after</target>
        </trans-unit>
        <trans-unit id="547824d1ffe08fc7f2c548485c22c112e78ba399" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::emplace_front</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::emplace_front</target>
        </trans-unit>
        <trans-unit id="9a1cea7e6cb9647b5936640313f722a3be080f79" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::empty</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="8fa4c854ea4511f6115a0bdf9cb1a6480cbd214d" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::end, std::forward_list&amp;lt;T,Allocator&amp;gt;::cend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d7a7c6b290bee7a764fa155fed9b33db45e1fa" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::erase_after</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::erase_after</target>
        </trans-unit>
        <trans-unit id="70fa7b732b4b94929918b11f00c699abbfa473ea" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::forward_list</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::forward_list</target>
        </trans-unit>
        <trans-unit id="89907aa74ee5622213243e3ef6e7918a7d78af9c" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::front</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="3162d60fba091d1cae52eb31ec039ab55683c48a" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="98761b2e40e34b8d6f994270404687351f4c73b1" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::insert_after</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::insert_after</target>
        </trans-unit>
        <trans-unit id="c4d256c64067e93a02cc2dc91e15d4027827b143" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="d720b73c97cc4922fd1f0cc164250d86bbdc3ab0" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::merge</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="0543ff0c2c2beab703046d3e6cce9a0396704548" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="f453e41155ccd729fa890a51b3cd69835262fbba" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::pop_front</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::pop_front</target>
        </trans-unit>
        <trans-unit id="9dab6a2fee3bfcb2d933df99e24700178bfd409b" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::push_front</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::push_front</target>
        </trans-unit>
        <trans-unit id="a253a3a7d309e9edda7a8559e2c5bd4a52d1bebf" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::remove, remove_if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b511604fd6e78823ca9d589b2b8d8a4c322f9c" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::resize</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::resize</target>
        </trans-unit>
        <trans-unit id="39736c814694513240aa73a59138671ac817116a" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::reverse</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::reverse</target>
        </trans-unit>
        <trans-unit id="70717bb37b6aec91bd62b626e4cf9eb94e2867fd" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::sort</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::sort</target>
        </trans-unit>
        <trans-unit id="a41b890596fb181ba8f6a2f12444ae851009514f" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::splice_after</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::splice_after</target>
        </trans-unit>
        <trans-unit id="acc070e7ba89db2204fc078fb85a3403201b3709" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::swap</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="a3476640c025bcd9a1340236bbde898eca08c6a4" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::unique</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::unique</target>
        </trans-unit>
        <trans-unit id="1d5e3da9679078413818b4ace453bd5875b5029f" translate="yes" xml:space="preserve">
          <source>std::forward_list&amp;lt;T,Allocator&amp;gt;::~forward_list</source>
          <target state="translated">std::forward_list&amp;lt;T,Allocator&amp;gt;::~forward_list</target>
        </trans-unit>
        <trans-unit id="2828485e7643956b16e78bdec09b36283b52b58c" translate="yes" xml:space="preserve">
          <source>std::forward_list::assign</source>
          <target state="translated">std::forward_list::assign</target>
        </trans-unit>
        <trans-unit id="a78a7ea04cd1096641910f6dbcf10fa853989339" translate="yes" xml:space="preserve">
          <source>std::forward_list::before_begin</source>
          <target state="translated">std::forward_list::before_begin</target>
        </trans-unit>
        <trans-unit id="4b2408460d33905c6c47fcc8595a3d2adb749220" translate="yes" xml:space="preserve">
          <source>std::forward_list::cbegin</source>
          <target state="translated">std::forward_list::cbegin</target>
        </trans-unit>
        <trans-unit id="af640329001f13bcc890a23ec8608fb3f809efb6" translate="yes" xml:space="preserve">
          <source>std::forward_list::clear</source>
          <target state="translated">std::forward_list::clear</target>
        </trans-unit>
        <trans-unit id="9203286e973ff4dc67ec2c9e41979cb35fb5cc4a" translate="yes" xml:space="preserve">
          <source>std::forward_list::emplace_after</source>
          <target state="translated">std::forward_list::emplace_after</target>
        </trans-unit>
        <trans-unit id="03d182954ace279322acd403caeffb187d670d05" translate="yes" xml:space="preserve">
          <source>std::forward_list::emplace_front</source>
          <target state="translated">std::forward_list::emplace_front</target>
        </trans-unit>
        <trans-unit id="ca52dac56fdea25b988cbe437e8da497b5b0c077" translate="yes" xml:space="preserve">
          <source>std::forward_list::empty</source>
          <target state="translated">std::forward_list::empty</target>
        </trans-unit>
        <trans-unit id="24b58e6a9f9afeb159a045934a267af48c43cd67" translate="yes" xml:space="preserve">
          <source>std::forward_list::end</source>
          <target state="translated">std::forward_list::end</target>
        </trans-unit>
        <trans-unit id="d592e79d3b57ada9b11974624632d6b6df36148d" translate="yes" xml:space="preserve">
          <source>std::forward_list::erase_after</source>
          <target state="translated">std::forward_list::erase_after</target>
        </trans-unit>
        <trans-unit id="b6ca6ce281934984edecba25563b279a4903b968" translate="yes" xml:space="preserve">
          <source>std::forward_list::forward_list</source>
          <target state="translated">std::forward_list::forward_list</target>
        </trans-unit>
        <trans-unit id="ba578417a9273d69b56af1b6039ef96e9009a1b9" translate="yes" xml:space="preserve">
          <source>std::forward_list::front</source>
          <target state="translated">std::forward_list::front</target>
        </trans-unit>
        <trans-unit id="f758eb3cd4035bd9f4d6a882329b08455d973c71" translate="yes" xml:space="preserve">
          <source>std::forward_list::get_allocator</source>
          <target state="translated">std::forward_list::get_allocator</target>
        </trans-unit>
        <trans-unit id="7a3ed60a384734dd346625aa91696a4fb5d9e55d" translate="yes" xml:space="preserve">
          <source>std::forward_list::insert_after</source>
          <target state="translated">std::forward_list::insert_after</target>
        </trans-unit>
        <trans-unit id="0be747bab7233fb32edbd20ad369be3a52b464c1" translate="yes" xml:space="preserve">
          <source>std::forward_list::max_size</source>
          <target state="translated">std::forward_list::max_size</target>
        </trans-unit>
        <trans-unit id="d16358d2d76114846b7446e38ca90b6f7308b314" translate="yes" xml:space="preserve">
          <source>std::forward_list::merge</source>
          <target state="translated">std::forward_list::merge</target>
        </trans-unit>
        <trans-unit id="6e7bca44b1d6a85e429611d36b4b03edcc6e99c4" translate="yes" xml:space="preserve">
          <source>std::forward_list::operator=</source>
          <target state="translated">std::forward_list::operator=</target>
        </trans-unit>
        <trans-unit id="12ebc1832cd9e27d41332a1bbe1abb5ab3fd69ec" translate="yes" xml:space="preserve">
          <source>std::forward_list::pop_front</source>
          <target state="translated">std::forward_list::pop_front</target>
        </trans-unit>
        <trans-unit id="813c8235d05b70c2f73811a404fac0e788ff23eb" translate="yes" xml:space="preserve">
          <source>std::forward_list::push_front</source>
          <target state="translated">std::forward_list::push_front</target>
        </trans-unit>
        <trans-unit id="26d04a66fdbfdd54157e64ee6520e10474fc62ad" translate="yes" xml:space="preserve">
          <source>std::forward_list::remove</source>
          <target state="translated">std::forward_list::remove</target>
        </trans-unit>
        <trans-unit id="2554b3b083c27ad7f9a235d513a30a90f6830fc6" translate="yes" xml:space="preserve">
          <source>std::forward_list::resize</source>
          <target state="translated">std::forward_list::resize</target>
        </trans-unit>
        <trans-unit id="7e7f6115cb6174b4d7eadefa32b5d647aa9a5359" translate="yes" xml:space="preserve">
          <source>std::forward_list::reverse</source>
          <target state="translated">std::forward_list::reverse</target>
        </trans-unit>
        <trans-unit id="6f18f9dadbbbdc41e78d9ce1f74c78605a6980dc" translate="yes" xml:space="preserve">
          <source>std::forward_list::sort</source>
          <target state="translated">std::forward_list::sort</target>
        </trans-unit>
        <trans-unit id="ec5a8974ccf4243c7f35f1e4fb0da1757415c1c8" translate="yes" xml:space="preserve">
          <source>std::forward_list::splice_after</source>
          <target state="translated">std::forward_list::splice_after</target>
        </trans-unit>
        <trans-unit id="68b37ce9c6914ca3f6987dcf459c3176387442f1" translate="yes" xml:space="preserve">
          <source>std::forward_list::swap</source>
          <target state="translated">std::forward_list::swap</target>
        </trans-unit>
        <trans-unit id="1611f7df87a48d1ff3c25cf1f71ac9c4049eba77" translate="yes" xml:space="preserve">
          <source>std::forward_list::unique</source>
          <target state="translated">std::forward_list::unique</target>
        </trans-unit>
        <trans-unit id="f1fbcf3bd4a5d58b13b1e8c9695806f6dccd380c" translate="yes" xml:space="preserve">
          <source>std::forward_list::~forward_list</source>
          <target state="translated">std::forward_list::~forward_list</target>
        </trans-unit>
        <trans-unit id="8594003f481da83008bf4814bae098ac9a0c1a92" translate="yes" xml:space="preserve">
          <source>std::fpclassify</source>
          <target state="translated">std::fpclassify</target>
        </trans-unit>
        <trans-unit id="528fed18db7b59cf6f06c5de7988b90df9762fef" translate="yes" xml:space="preserve">
          <source>std::fpos</source>
          <target state="translated">std::fpos</target>
        </trans-unit>
        <trans-unit id="dd8a799c6f273a4f08039f381af2cb34c6042857" translate="yes" xml:space="preserve">
          <source>std::fpos&amp;lt;State&amp;gt;::state</source>
          <target state="translated">std::fpos&amp;lt;State&amp;gt;::state</target>
        </trans-unit>
        <trans-unit id="6b464cbeab6a11c91d47d3e438f7b8cdb876d093" translate="yes" xml:space="preserve">
          <source>std::fpos::state</source>
          <target state="translated">std::fpos::state</target>
        </trans-unit>
        <trans-unit id="5c173952a82825fefd4c710dbb035bba39fc5e5d" translate="yes" xml:space="preserve">
          <source>std::fputc, std::putc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50428b99624543df5942991a059440eb7d4f8867" translate="yes" xml:space="preserve">
          <source>std::fputs</source>
          <target state="translated">std::fputs</target>
        </trans-unit>
        <trans-unit id="cd9778830d41a11679176e597ce5d24a9f928f6a" translate="yes" xml:space="preserve">
          <source>std::fputwc</source>
          <target state="translated">std::fputwc</target>
        </trans-unit>
        <trans-unit id="dbeccc7750958b37c8f85aa5441d5478a3fa7de9" translate="yes" xml:space="preserve">
          <source>std::fputws</source>
          <target state="translated">std::fputws</target>
        </trans-unit>
        <trans-unit id="bce6d6a5c90b535068e9affe2abc3df09ff4d904" translate="yes" xml:space="preserve">
          <source>std::fread</source>
          <target state="translated">std::fread</target>
        </trans-unit>
        <trans-unit id="6def9dfc544bde466ce7dbeb630b068b8fc9aedd" translate="yes" xml:space="preserve">
          <source>std::free</source>
          <target state="translated">std::free</target>
        </trans-unit>
        <trans-unit id="e77671280a133b32cd663fd307ad0a4fffb8e2d3" translate="yes" xml:space="preserve">
          <source>std::freopen</source>
          <target state="translated">std::freopen</target>
        </trans-unit>
        <trans-unit id="f7a9639c50de5eb18b29ed6da776ffcb2640af2d" translate="yes" xml:space="preserve">
          <source>std::frexp, std::frexpf, std::frexpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b599760fb8b87ad68d681fae9188572800cc79a" translate="yes" xml:space="preserve">
          <source>std::frexpl</source>
          <target state="translated">std::frexpl</target>
        </trans-unit>
        <trans-unit id="74a5097c1903cf314a4ce33e8f4cc2cec0ae8ecf" translate="yes" xml:space="preserve">
          <source>std::from_chars</source>
          <target state="translated">std::from_chars</target>
        </trans-unit>
        <trans-unit id="0880cd0f264a2a6d76044a4892c5e35185169c20" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator</source>
          <target state="translated">std::front_insert_iterator</target>
        </trans-unit>
        <trans-unit id="2cbd3efd4c79ef170fc88ce15b6e04160bec825d" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator&amp;lt;Container&amp;gt;::front_insert_iterator</source>
          <target state="translated">std::front_insert_iterator&amp;lt;Container&amp;gt;::front_insert_iterator</target>
        </trans-unit>
        <trans-unit id="ea1074f0f20c749d2ce66e977b1332b3b454f864" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator&amp;lt;Container&amp;gt;::operator*</source>
          <target state="translated">std::front_insert_iterator&amp;lt;Container&amp;gt;::operator*</target>
        </trans-unit>
        <trans-unit id="42d2ea37e723854438f2262a67d51b0aa7d2372b" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator&amp;lt;Container&amp;gt;::operator=</source>
          <target state="translated">std::front_insert_iterator&amp;lt;Container&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="76f892590047adaecd349b385a72fa0b734fe741" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator::front_insert_iterator</source>
          <target state="translated">std::front_insert_iterator::front_insert_iterator</target>
        </trans-unit>
        <trans-unit id="fa2e7a87b49353aabe081c055d8ef11367703cd8" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator::operator*</source>
          <target state="translated">std::front_insert_iterator::operator*</target>
        </trans-unit>
        <trans-unit id="1a685a84d1b44431ea648f02204cc59cc206c6c0" translate="yes" xml:space="preserve">
          <source>std::front_insert_iterator::operator=</source>
          <target state="translated">std::front_insert_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="a21323cd5c7024b2f6a20b73caeaadf836293e5a" translate="yes" xml:space="preserve">
          <source>std::front_inserter</source>
          <target state="translated">std::front_inserter</target>
        </trans-unit>
        <trans-unit id="cb4dc8080406f22e567cea7b7364d06dd71a8f62" translate="yes" xml:space="preserve">
          <source>std::fseek</source>
          <target state="translated">std::fseek</target>
        </trans-unit>
        <trans-unit id="18559dd3d540a227d7b978c41039dccf205baa6b" translate="yes" xml:space="preserve">
          <source>std::fsetpos</source>
          <target state="translated">std::fsetpos</target>
        </trans-unit>
        <trans-unit id="0d1050a3dc2481e92740ac43f9136eabc6127b7d" translate="yes" xml:space="preserve">
          <source>std::ftell</source>
          <target state="translated">std::ftell</target>
        </trans-unit>
        <trans-unit id="fcf26a65f202f9a5f125d1293967342936826cd1" translate="yes" xml:space="preserve">
          <source>std::function</source>
          <target state="translated">std::function</target>
        </trans-unit>
        <trans-unit id="60a93597e0e926424542234aeee0a252d6df3972" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::assign</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::assign</target>
        </trans-unit>
        <trans-unit id="836fddbb5461f635eeb77974ad3db1d7a8804f07" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::function</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::function</target>
        </trans-unit>
        <trans-unit id="ac237516896d31ba46606555dc892bf4ee85ba7c" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::operator bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113673c0071f095f34c35dcf0c6867b4b01515c0" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::operator()</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="0eccc1e7b0747d0dc443d4bd472ff5a8a65f94d9" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::operator=</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="35cb304c41682780933ec48e0d7d0eb9809e2ec3" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::swap</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="89be22aaa7b6ffd491fed876d908875b393ba717" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::target</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::target</target>
        </trans-unit>
        <trans-unit id="1ba05fd42700f7b4e0faac9af129e62b2b275fba" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::target_type</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::target_type</target>
        </trans-unit>
        <trans-unit id="39e5033de71b915d1b51df8b75661072ecbeb44c" translate="yes" xml:space="preserve">
          <source>std::function&amp;lt;R(Args...)&amp;gt;::~function</source>
          <target state="translated">std::function&amp;lt;R(Args...)&amp;gt;::~function</target>
        </trans-unit>
        <trans-unit id="05bb2ef9d482fb63265a3b9f1c0144d335108c40" translate="yes" xml:space="preserve">
          <source>std::function::assign</source>
          <target state="translated">std::function::assign</target>
        </trans-unit>
        <trans-unit id="6ecfbd070c365efd01ead710d278d6d5ac21fabd" translate="yes" xml:space="preserve">
          <source>std::function::function</source>
          <target state="translated">std::function::function</target>
        </trans-unit>
        <trans-unit id="d2e55fbee7174b237a62221940e99a81e7ceed1f" translate="yes" xml:space="preserve">
          <source>std::function::operator bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc27fa984de9bab253864d4f214cc7d1d18e330" translate="yes" xml:space="preserve">
          <source>std::function::operator()</source>
          <target state="translated">std::function::operator()</target>
        </trans-unit>
        <trans-unit id="adc0fcde5d6defd1cedd87e2606d1b37b8af611f" translate="yes" xml:space="preserve">
          <source>std::function::operator=</source>
          <target state="translated">std::function::operator=</target>
        </trans-unit>
        <trans-unit id="8cd76e47421d3253b1a2977963d0871dc3e842c6" translate="yes" xml:space="preserve">
          <source>std::function::swap</source>
          <target state="translated">std::function::swap</target>
        </trans-unit>
        <trans-unit id="ac9b996d46611fc09abb450d6259a01b27f1729a" translate="yes" xml:space="preserve">
          <source>std::function::target</source>
          <target state="translated">std::function::target</target>
        </trans-unit>
        <trans-unit id="951e4fa2c199bab28a7b21bf56beee5a2abca568" translate="yes" xml:space="preserve">
          <source>std::function::target_type</source>
          <target state="translated">std::function::target_type</target>
        </trans-unit>
        <trans-unit id="45f40834ffb70918a1cde366d5ef92a934791b83" translate="yes" xml:space="preserve">
          <source>std::function::~function</source>
          <target state="translated">std::function::~function</target>
        </trans-unit>
        <trans-unit id="b435e94718a3cc1e4854d6e4351ee7dec91b197a" translate="yes" xml:space="preserve">
          <source>std::future</source>
          <target state="translated">std::future</target>
        </trans-unit>
        <trans-unit id="22d6f1ac6747e26b78f24d56a31a8e5f205d35ec" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::future</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::future</target>
        </trans-unit>
        <trans-unit id="fbe480a7408d5219f2eefe68cbb6c181f4a19d16" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::get</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::get</target>
        </trans-unit>
        <trans-unit id="78156fd8161d3438b51c6611d4807df7acfee0f2" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="5a2408453691d64a630f8c375097dd3dee2c4daa" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::share</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::share</target>
        </trans-unit>
        <trans-unit id="f603953d4e6ee2af00bce9414c8a3ff1ad68ea49" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::valid</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::valid</target>
        </trans-unit>
        <trans-unit id="a83e957c02968dbad5ac7300b96c83b51207f0b0" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::wait</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::wait</target>
        </trans-unit>
        <trans-unit id="aa689abf4c0305cf39dc55fc3a2e3f4198c2d0e4" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::wait_for</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::wait_for</target>
        </trans-unit>
        <trans-unit id="137dab9ef360eec7ceed176f291a16f04b91410f" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::wait_until</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::wait_until</target>
        </trans-unit>
        <trans-unit id="b819ac554eef2c9176811e237b42138395a2e49e" translate="yes" xml:space="preserve">
          <source>std::future&amp;lt;T&amp;gt;::~future</source>
          <target state="translated">std::future&amp;lt;T&amp;gt;::~future</target>
        </trans-unit>
        <trans-unit id="51abf8a43a2fe014be5e908b821538643c5fa094" translate="yes" xml:space="preserve">
          <source>std::future::future</source>
          <target state="translated">std::future::future</target>
        </trans-unit>
        <trans-unit id="2295ba537f50e7d77feba276dd1df3b77b5aec58" translate="yes" xml:space="preserve">
          <source>std::future::get</source>
          <target state="translated">std::future::get</target>
        </trans-unit>
        <trans-unit id="470d248cd9ee0ae8e115c31a02a562fea28386c7" translate="yes" xml:space="preserve">
          <source>std::future::operator=</source>
          <target state="translated">std::future::operator=</target>
        </trans-unit>
        <trans-unit id="b34c4aaad4eaaa6dacadcccaa3ed265a235d7ce5" translate="yes" xml:space="preserve">
          <source>std::future::share</source>
          <target state="translated">std::future::share</target>
        </trans-unit>
        <trans-unit id="08cc6a2b45bc9dddf1db4322b5ccc8bf881abde9" translate="yes" xml:space="preserve">
          <source>std::future::valid</source>
          <target state="translated">std::future::valid</target>
        </trans-unit>
        <trans-unit id="fe0e43ffa8dd72d1a19cb361ab749612cce14437" translate="yes" xml:space="preserve">
          <source>std::future::wait</source>
          <target state="translated">std::future::wait</target>
        </trans-unit>
        <trans-unit id="4304d8c0b6af03f189699f12ffbe34da3b772d2d" translate="yes" xml:space="preserve">
          <source>std::future::wait_for</source>
          <target state="translated">std::future::wait_for</target>
        </trans-unit>
        <trans-unit id="22412dc96af0c7a15ac1a7ac4a0e62d365cb5253" translate="yes" xml:space="preserve">
          <source>std::future::wait_until</source>
          <target state="translated">std::future::wait_until</target>
        </trans-unit>
        <trans-unit id="70c6e742cf7713eb58af7d6f25c0e5153909c2fb" translate="yes" xml:space="preserve">
          <source>std::future::~future</source>
          <target state="translated">std::future::~future</target>
        </trans-unit>
        <trans-unit id="38dd931d0a4c62963456060cf6ea9e3ac4229dee" translate="yes" xml:space="preserve">
          <source>std::future_category</source>
          <target state="translated">std::future_category</target>
        </trans-unit>
        <trans-unit id="0965f1aa3219c71cb6f1068e841bc253bcee2532" translate="yes" xml:space="preserve">
          <source>std::future_errc</source>
          <target state="translated">std::future_errc</target>
        </trans-unit>
        <trans-unit id="294fc67f1e2107e794a7d16c9319888b36aea3f8" translate="yes" xml:space="preserve">
          <source>std::future_error</source>
          <target state="translated">std::future_error</target>
        </trans-unit>
        <trans-unit id="b85227d0199fd8369269faeff7c98a6c6df7b886" translate="yes" xml:space="preserve">
          <source>std::future_error::code</source>
          <target state="translated">std::future_error::code</target>
        </trans-unit>
        <trans-unit id="c7d3a135e76f9ae6c11d39ad683fbe74eac297d0" translate="yes" xml:space="preserve">
          <source>std::future_error::future_error</source>
          <target state="translated">std::future_error::future_error</target>
        </trans-unit>
        <trans-unit id="01b1a9eb097abd75fd4b7ad3afc1fed31c4b7b30" translate="yes" xml:space="preserve">
          <source>std::future_error::what</source>
          <target state="translated">std::future_error::what</target>
        </trans-unit>
        <trans-unit id="6430bb384d67ae2c40a7551b3e4504c20ef34155" translate="yes" xml:space="preserve">
          <source>std::future_status</source>
          <target state="translated">std::future_status</target>
        </trans-unit>
        <trans-unit id="fb5c1cdaa11be333ab62ecb8e99f1f426238a359" translate="yes" xml:space="preserve">
          <source>std::fwide</source>
          <target state="translated">std::fwide</target>
        </trans-unit>
        <trans-unit id="4e66c315da0992ca080b066306fd35ced706256f" translate="yes" xml:space="preserve">
          <source>std::fwrite</source>
          <target state="translated">std::fwrite</target>
        </trans-unit>
        <trans-unit id="b773e1357971d52c01128fcc22dfb915d611dd34" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution</source>
          <target state="translated">std::gamma_distribution</target>
        </trans-unit>
        <trans-unit id="7e08cffc0493fd0d365d9e41f6d3e66c3cdc2ecc" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::alpha, beta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e483da4399b4ebfd7c7c3fd4ac4cb8e0a4914383" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::gamma_distribution</source>
          <target state="translated">std::gamma_distribution&amp;lt;RealType&amp;gt;::gamma_distribution</target>
        </trans-unit>
        <trans-unit id="5b75fe037d278e40c7a8f147405c7da87e65bb76" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::gamma_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="e93e650c558095b74daff09bcafcff6b81c5f5c9" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::gamma_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="35e430f058080d05d673f6ea32ee36092111ed50" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::gamma_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="75466f4c9e184a423badbf7857148241f45b03dc" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::gamma_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="a9dc8c2578fdf74c4da32d6d46a0a2fd0821be45" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::gamma_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="4b4fed5792252792cdc3407700c5778cc0f08809" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::alpha</source>
          <target state="translated">std::gamma_distribution::alpha</target>
        </trans-unit>
        <trans-unit id="0974dd0115d559feb5399d972fa342d64f8a5df6" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::gamma_distribution</source>
          <target state="translated">std::gamma_distribution::gamma_distribution</target>
        </trans-unit>
        <trans-unit id="d22f4f8f4e2df73125df327e2ef0ebea678b0d8d" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::max</source>
          <target state="translated">std::gamma_distribution::max</target>
        </trans-unit>
        <trans-unit id="b72f9ded724a35e12a25012d4dace730e7ece5e3" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::min</source>
          <target state="translated">std::gamma_distribution::min</target>
        </trans-unit>
        <trans-unit id="d14dc32e5b8c28ccb2017761c76b1d7083419cf8" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::operator()</source>
          <target state="translated">std::gamma_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="e1888d2655ab185f48dbc330bbc9627106ddb157" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::param</source>
          <target state="translated">std::gamma_distribution::param</target>
        </trans-unit>
        <trans-unit id="4ccbca85b2451b6a2db1ac594564ac25a2ad62e7" translate="yes" xml:space="preserve">
          <source>std::gamma_distribution::reset</source>
          <target state="translated">std::gamma_distribution::reset</target>
        </trans-unit>
        <trans-unit id="e726910a6969f0e97e7f63564648cb7957561013" translate="yes" xml:space="preserve">
          <source>std::gcd</source>
          <target state="translated">std::gcd</target>
        </trans-unit>
        <trans-unit id="e2d4f9507e08e218dcb2a4d797ba4a2e16816c3a" translate="yes" xml:space="preserve">
          <source>std::generate</source>
          <target state="translated">std::generate</target>
        </trans-unit>
        <trans-unit id="8042ad481b98646175386261c74d7296759a473d" translate="yes" xml:space="preserve">
          <source>std::generate_canonical</source>
          <target state="translated">std::generate_canonical</target>
        </trans-unit>
        <trans-unit id="56fb9a5cb4bd55242b3a491b8ed9d1eb187279e0" translate="yes" xml:space="preserve">
          <source>std::generate_n</source>
          <target state="translated">std::generate_n</target>
        </trans-unit>
        <trans-unit id="aee57eca71835aef53b5d5498def3c6836ae6dc9" translate="yes" xml:space="preserve">
          <source>std::generic_category</source>
          <target state="translated">std::generic_category</target>
        </trans-unit>
        <trans-unit id="6479a22fe5f70628b163cf63c148957a0a3f0f73" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution</source>
          <target state="translated">std::geometric_distribution</target>
        </trans-unit>
        <trans-unit id="451d661851e7e0baf8b53a664016d20f8b835ab3" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::geometric_distribution</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::geometric_distribution</target>
        </trans-unit>
        <trans-unit id="6b09a08d5a77a8471d03e05c3b7cec1d90db9c36" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::max</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="eea6c61f12ef50db4ef94202efec7eb1e0d3922e" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::min</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="caf088eb3452aac680241c44bff81fce7e72921d" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::operator()</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="22796c4162ac984a227c8368b6b1d7d1b5acb809" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::p</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::p</target>
        </trans-unit>
        <trans-unit id="41d09ac57da2538fe21dd5f60da0e8990cf2b19c" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::param</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="53b64a700f6ccf7cf448154ed307f309180fe1a8" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution&amp;lt;IntType&amp;gt;::reset</source>
          <target state="translated">std::geometric_distribution&amp;lt;IntType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="74a975422d0b81891600599deef91fe42c6a578f" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::geometric_distribution</source>
          <target state="translated">std::geometric_distribution::geometric_distribution</target>
        </trans-unit>
        <trans-unit id="f53859492700d17b1a92b1014b3ee60978169058" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::max</source>
          <target state="translated">std::geometric_distribution::max</target>
        </trans-unit>
        <trans-unit id="ec2553abcdcc7c54cac979e2811f981f5687eef2" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::min</source>
          <target state="translated">std::geometric_distribution::min</target>
        </trans-unit>
        <trans-unit id="ecfe9d52bd350940f566ec1d3840cc6571de7bd4" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::operator()</source>
          <target state="translated">std::geometric_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="c19539ca1c151229f788ba0be26f3854168f8e02" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::p</source>
          <target state="translated">std::geometric_distribution::p</target>
        </trans-unit>
        <trans-unit id="a5631408c9d70d1c980edc3cd2bd6bdee394f7e5" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::param</source>
          <target state="translated">std::geometric_distribution::param</target>
        </trans-unit>
        <trans-unit id="fbde730e037dbf62db479e90adc61ca47e46d61a" translate="yes" xml:space="preserve">
          <source>std::geometric_distribution::reset</source>
          <target state="translated">std::geometric_distribution::reset</target>
        </trans-unit>
        <trans-unit id="da4cf091b8940fcda0025ed951fc92bf340995aa" translate="yes" xml:space="preserve">
          <source>std::get</source>
          <target state="translated">std::get</target>
        </trans-unit>
        <trans-unit id="1ca06496a7c27870dc643ef24f6fc93ec7e20e18" translate="yes" xml:space="preserve">
          <source>std::get (std::variant)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57581431b0cfb7153963173ed7c72370db53701" translate="yes" xml:space="preserve">
          <source>std::get(std::array)</source>
          <target state="translated">std::get(std::array)</target>
        </trans-unit>
        <trans-unit id="e96238e62beb78afbd6df321fac4844ed901ba49" translate="yes" xml:space="preserve">
          <source>std::get(std::pair)</source>
          <target state="translated">std::get(std::pair)</target>
        </trans-unit>
        <trans-unit id="e10869c0b5293e92b26d56b2c231347547fcb2bb" translate="yes" xml:space="preserve">
          <source>std::get(std::span)</source>
          <target state="translated">std::get(std::span)</target>
        </trans-unit>
        <trans-unit id="2798891d0210d278df07ec2cb50a9503ce5d72d1" translate="yes" xml:space="preserve">
          <source>std::get(std::tuple)</source>
          <target state="translated">std::get(std::tuple)</target>
        </trans-unit>
        <trans-unit id="5abf3ec235c8ccee6c23abcf7555f340882c1edd" translate="yes" xml:space="preserve">
          <source>std::get(std::variant)</source>
          <target state="translated">std::get(std::variant)</target>
        </trans-unit>
        <trans-unit id="a445a0acee497c2fb91cbac74ce402c43a2013f9" translate="yes" xml:space="preserve">
          <source>std::get&lt;small&gt;(std::array)&lt;/small&gt;</source>
          <target state="translated">std::get&lt;small&gt;(std::array)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4d8f910b12616d352a634cf0ee0fe1feea003266" translate="yes" xml:space="preserve">
          <source>std::get&lt;small&gt;(std::pair)&lt;/small&gt;</source>
          <target state="translated">std::get&lt;small&gt;(std::pair)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5745b3af9536249b4fe2970b2dd967d86e2d5c98" translate="yes" xml:space="preserve">
          <source>std::get&lt;small&gt;(std::span)&lt;/small&gt;</source>
          <target state="translated">std::get&lt;small&gt;(std::span)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9633b043b10cd5e655fbe773e7962e35a884bc76" translate="yes" xml:space="preserve">
          <source>std::get&lt;small&gt;(std::tuple)&lt;/small&gt;</source>
          <target state="translated">std::get&lt;small&gt;(std::tuple)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0c9f99984815be87dd7a5cd8607ea8fbc79ef13b" translate="yes" xml:space="preserve">
          <source>std::get_deleter</source>
          <target state="translated">std::get_deleter</target>
        </trans-unit>
        <trans-unit id="de63d66f5f9d5239c883e31061198f8181a0977a" translate="yes" xml:space="preserve">
          <source>std::get_if</source>
          <target state="translated">std::get_if</target>
        </trans-unit>
        <trans-unit id="da204878692142472566a56856ab397ec49db666" translate="yes" xml:space="preserve">
          <source>std::get_money</source>
          <target state="translated">std::get_money</target>
        </trans-unit>
        <trans-unit id="05239938effb22b14f683a3a0b27d86af864b4a0" translate="yes" xml:space="preserve">
          <source>std::get_new_handler</source>
          <target state="translated">std::get_new_handler</target>
        </trans-unit>
        <trans-unit id="ab36d1103b3f835850e73a3e1e3a82ae0a9c5884" translate="yes" xml:space="preserve">
          <source>std::get_pointer_safety</source>
          <target state="translated">std::get_pointer_safety</target>
        </trans-unit>
        <trans-unit id="44a0a2e1c29121bcdffd08d810f2a0821485ec77" translate="yes" xml:space="preserve">
          <source>std::get_temporary_buffer</source>
          <target state="translated">std::get_temporary_buffer</target>
        </trans-unit>
        <trans-unit id="1675fcaa001e7aae498b89ec478739e401717ff9" translate="yes" xml:space="preserve">
          <source>std::get_terminate</source>
          <target state="translated">std::get_terminate</target>
        </trans-unit>
        <trans-unit id="8b4706355cbddfede8e0db09799a78d42cb96cbf" translate="yes" xml:space="preserve">
          <source>std::get_time</source>
          <target state="translated">std::get_time</target>
        </trans-unit>
        <trans-unit id="3fb695743c2cb49992c3830185874c9c8b24d0ea" translate="yes" xml:space="preserve">
          <source>std::get_unexpected</source>
          <target state="translated">std::get_unexpected</target>
        </trans-unit>
        <trans-unit id="d559697cf489f41ad02f56aa1b9cc72526602dda" translate="yes" xml:space="preserve">
          <source>std::getc</source>
          <target state="translated">std::getc</target>
        </trans-unit>
        <trans-unit id="3383a2888b9aeab777737e1bc4524a2317877719" translate="yes" xml:space="preserve">
          <source>std::getchar</source>
          <target state="translated">std::getchar</target>
        </trans-unit>
        <trans-unit id="4ada9f7254fe18c3440e6f4a4ca0b505efb2ba70" translate="yes" xml:space="preserve">
          <source>std::getenv</source>
          <target state="translated">std::getenv</target>
        </trans-unit>
        <trans-unit id="e25bd3460ecbba1804b383c6f59116250d1f37e4" translate="yes" xml:space="preserve">
          <source>std::getline</source>
          <target state="translated">std::getline</target>
        </trans-unit>
        <trans-unit id="4d59fe9973faefccad365435e0513b46a9b3647e" translate="yes" xml:space="preserve">
          <source>std::gets</source>
          <target state="translated">std::gets</target>
        </trans-unit>
        <trans-unit id="83675d4c9ea645f2c2fef0c64c1b401d6b78ae1c" translate="yes" xml:space="preserve">
          <source>std::getwchar</source>
          <target state="translated">std::getwchar</target>
        </trans-unit>
        <trans-unit id="0bfd974b0e45d5f30073d7f4bf1fb01202c5992d" translate="yes" xml:space="preserve">
          <source>std::gmtime</source>
          <target state="translated">std::gmtime</target>
        </trans-unit>
        <trans-unit id="61ae9eb9e1e21153bca69ac97b2348eb855dc975" translate="yes" xml:space="preserve">
          <source>std::greater</source>
          <target state="translated">std::greater</target>
        </trans-unit>
        <trans-unit id="e07dd876d856c9506e4b028031db86c38f3f7758" translate="yes" xml:space="preserve">
          <source>std::greater&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::greater&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="979d30b923ac047254f09c25a45f4934c54253b3" translate="yes" xml:space="preserve">
          <source>std::greater&amp;lt;void&amp;gt;</source>
          <target state="translated">std::greater&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f073baaa17f14c94e1083969e992f4aa88842c79" translate="yes" xml:space="preserve">
          <source>std::greater::operator()</source>
          <target state="translated">std::greater::operator()</target>
        </trans-unit>
        <trans-unit id="200d28d509ee90d252c3254486a74ee9a31d117b" translate="yes" xml:space="preserve">
          <source>std::greater_equal</source>
          <target state="translated">std::greater_equal</target>
        </trans-unit>
        <trans-unit id="02f212a924c161673663c26d5775536ed1d16f20" translate="yes" xml:space="preserve">
          <source>std::greater_equal&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::greater_equal&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="acdc3e4377c6b260ae40eda82fc0eae7836be6a2" translate="yes" xml:space="preserve">
          <source>std::greater_equal&amp;lt;void&amp;gt;</source>
          <target state="translated">std::greater_equal&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="72b8f06ff489ccc3a6ba593fd188498814b0bd6a" translate="yes" xml:space="preserve">
          <source>std::greater_equal::operator()</source>
          <target state="translated">std::greater_equal::operator()</target>
        </trans-unit>
        <trans-unit id="12341c2213402a73871241a751c6adbf1f1569c0" translate="yes" xml:space="preserve">
          <source>std::gslice</source>
          <target state="translated">std::gslice</target>
        </trans-unit>
        <trans-unit id="ba4d393c4f847c761012459fa424a8ac7a8ff10c" translate="yes" xml:space="preserve">
          <source>std::gslice::gslice</source>
          <target state="translated">std::gslice::gslice</target>
        </trans-unit>
        <trans-unit id="04039c27c0dd2e4158447f0849814a04f20b6908" translate="yes" xml:space="preserve">
          <source>std::gslice_array</source>
          <target state="translated">std::gslice_array</target>
        </trans-unit>
        <trans-unit id="80ccafb6b4b21b217e451f74edf911f849ebb7f7" translate="yes" xml:space="preserve">
          <source>std::gslice_array&amp;lt;T&amp;gt;::gslice_array</source>
          <target state="translated">std::gslice_array&amp;lt;T&amp;gt;::gslice_array</target>
        </trans-unit>
        <trans-unit id="b4b3b7a64a42f3efa7af851095c153bfcfbcadbd" translate="yes" xml:space="preserve">
          <source>std::gslice_array&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,^=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</source>
          <target state="translated">std::gslice_array&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,^=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="ed16a122af79e0a989e75d7f734621f705197da8" translate="yes" xml:space="preserve">
          <source>std::gslice_array&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::gslice_array&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="c9505c5730c3094ee779844ccbc6c8cb96bc3c2a" translate="yes" xml:space="preserve">
          <source>std::gslice_array&amp;lt;T&amp;gt;::~gslice_array</source>
          <target state="translated">std::gslice_array&amp;lt;T&amp;gt;::~gslice_array</target>
        </trans-unit>
        <trans-unit id="98fa80bf6b7f9b2ad4ac824d497116f87c18be3b" translate="yes" xml:space="preserve">
          <source>std::gslice_array::gslice_array</source>
          <target state="translated">std::gslice_array::gslice_array</target>
        </trans-unit>
        <trans-unit id="237a5a43cd59f43aad160a2d93d465fe669cae59" translate="yes" xml:space="preserve">
          <source>std::gslice_array::operator=</source>
          <target state="translated">std::gslice_array::operator=</target>
        </trans-unit>
        <trans-unit id="b706b356ff226384f74a6dd5ce56be0870adb877" translate="yes" xml:space="preserve">
          <source>std::gslice_array::operators</source>
          <target state="translated">std::gslice_array::operators</target>
        </trans-unit>
        <trans-unit id="d16c4743d1580fe0e2754c6253b34a6bcdea4197" translate="yes" xml:space="preserve">
          <source>std::gslice_array::~gslice_array</source>
          <target state="translated">std::gslice_array::~gslice_array</target>
        </trans-unit>
        <trans-unit id="3ec1a1caff38e759beb168c25929017a5ccadb03" translate="yes" xml:space="preserve">
          <source>std::hardware_destructive_interference_size</source>
          <target state="translated">std::hardware_destructive_interference_size</target>
        </trans-unit>
        <trans-unit id="effee7b55fa523ee4ba5a38ae9674b0575fcced1" translate="yes" xml:space="preserve">
          <source>std::hardware_destructive_interference_size, std::hardware_constructive_interference_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2808253aba4f692a9c3365ff515fedec63cfabe1" translate="yes" xml:space="preserve">
          <source>std::has_facet</source>
          <target state="translated">std::has_facet</target>
        </trans-unit>
        <trans-unit id="c253c79326340a909f3674a55bd1d626d24df4b6" translate="yes" xml:space="preserve">
          <source>std::has_unique_object_representations</source>
          <target state="translated">std::has_unique_object_representations</target>
        </trans-unit>
        <trans-unit id="758bd1109b1ca3063f23ffaeaf5c89144a445d12" translate="yes" xml:space="preserve">
          <source>std::has_virtual_destructor</source>
          <target state="translated">std::has_virtual_destructor</target>
        </trans-unit>
        <trans-unit id="a9ccd97d2f6c679652c7a742092b54b03b25cc8b" translate="yes" xml:space="preserve">
          <source>std::hash</source>
          <target state="translated">std::hash</target>
        </trans-unit>
        <trans-unit id="d6701ac8e06f525476351c53a0d85501db25ce97" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;&amp;lt;std::optional&amp;gt;&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca37eec0dd108c9bb7600482dcf4e986753b8f7" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;&amp;lt;std::unique_ptr&amp;gt;&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb37d483dd0a0d712f63ac4165dce9b5ec1967a6" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;&amp;lt;std::variant&amp;gt;&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8946f131ebcdd9ad2695ac1792252313678549dd" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;(std::bitset)&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2034d1a1c8bfee7f9e477269e35b94288743d434" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;(std::string, std::wstring, std::u16string, std::u32string, std::pmr::string, std::pmr::wstring, std::pmr::u16string, std::pmr::u32string)&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38364a6efc26c814e09c59d2d118fe15a4d463be" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;(std::string_view, std::wstring_view, std::u16string_view, std::u32string_view)&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ddd0e76c810145feb60bc5c8765c675581ed0e" translate="yes" xml:space="preserve">
          <source>std::hash &lt;small&gt;(std::vector&amp;lt;bool&amp;gt;)&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7127aea35f968a0cfca1095c1416ed3fffda21" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;Key&amp;gt;::operator()</source>
          <target state="translated">std::hash&amp;lt;Key&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="356f9dfa37f0cf310629208a3f0ba6a436f4f91c" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::bitset&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::bitset&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d1f7a06f0fdd38da0c0236d3ad69eb1fcd160265" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::error_code&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::error_code&amp;gt;</target>
        </trans-unit>
        <trans-unit id="893e533b381d7f2df9409f713e9b44a06c283f26" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::error_condition&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::error_condition&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85e93fdc5306b0a9f52e4328cd8f3a1d2953914a" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::monostate&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::monostate&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5423a7b49bb4bb6c51c3fecfaec4513e4fccdc7a" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::optional&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::optional&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cf6dea8dbdb9fd0436e729f33c0988b595474440" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::shared_ptr&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::shared_ptr&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e1d9dde9f294213810a78520a590ab0fe148a977" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::string&amp;gt;std::hash&amp;lt;std::u8string&amp;gt;std::hash&amp;lt;std::u16string&amp;gt;std::hash&amp;lt;std::u32string&amp;gt;std::hash&amp;lt;std::wstring&amp;gt;std::hash&amp;lt;std::pmr::string&amp;gt;std::hash&amp;lt;std::pmr::u8string&amp;gt;std::hash&amp;lt;std::pmr::u16string&amp;gt;std::hash&amp;lt;std::pmr::u32string&amp;gt;std::hash&amp;lt;std::pmr::wstring&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::string&amp;gt;std::hash&amp;lt;std::u8string&amp;gt;std::hash&amp;lt;std::u16string&amp;gt;std::hash&amp;lt;std::u32string&amp;gt;std::hash&amp;lt;std::wstring&amp;gt;std::hash&amp;lt;std::pmr::string&amp;gt;std::hash&amp;lt;std::pmr::u8string&amp;gt;std::hash&amp;lt;std::pmr::u16string&amp;gt;std::hash&amp;lt;std::pmr::u32string&amp;gt;std::hash&amp;lt;std::pmr::wstring&amp;gt;</target>
        </trans-unit>
        <trans-unit id="470d1bde6dc1a41855c2abc080b0b04dfbfd40bc" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::string_view&amp;gt;std::hash&amp;lt;std::wstring_view&amp;gt;std::hash&amp;lt;std::u8string_view&amp;gt;std::hash&amp;lt;std::u16string_view&amp;gt;std::hash&amp;lt;std::u32string_view&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::string_view&amp;gt;std::hash&amp;lt;std::wstring_view&amp;gt;std::hash&amp;lt;std::u8string_view&amp;gt;std::hash&amp;lt;std::u16string_view&amp;gt;std::hash&amp;lt;std::u32string_view&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5c4af4e86e136c6a1150b30998524b15159d8c47" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::thread::id&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::thread::id&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0b99b3ec46b15af8b59fab9e300bf02d5bcbfbac" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::type_index&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::type_index&amp;gt;</target>
        </trans-unit>
        <trans-unit id="025345b10826b6a589e1983030ff59111d82bfb8" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::unique_ptr&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::unique_ptr&amp;gt;</target>
        </trans-unit>
        <trans-unit id="15b2ad180e30f9740fc5b4c1fb5c52af05270498" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::variant&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::variant&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ca28e21ec98507e8e0528b9b160781e87a2256bd" translate="yes" xml:space="preserve">
          <source>std::hash&amp;lt;std::vector&amp;lt;bool&amp;gt;&amp;gt;</source>
          <target state="translated">std::hash&amp;lt;std::vector&amp;lt;bool&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6a986a272788c1091b0c718e5ff171dd14af2a80" translate="yes" xml:space="preserve">
          <source>std::hash(std::shared_ptr)</source>
          <target state="translated">std::hash(std::shared_ptr)</target>
        </trans-unit>
        <trans-unit id="febd31b3b423aad3d1aa99c444b100b7b434de46" translate="yes" xml:space="preserve">
          <source>std::hash::hash</source>
          <target state="translated">std::hash::hash</target>
        </trans-unit>
        <trans-unit id="a799665689fa4e236861d975039cbdf4c3fe288a" translate="yes" xml:space="preserve">
          <source>std::hash::operator()</source>
          <target state="translated">std::hash::operator()</target>
        </trans-unit>
        <trans-unit id="02c9f553e3ffde5aa1cb7b8971da4368fa8c7f94" translate="yes" xml:space="preserve">
          <source>std::hash&lt;small&gt;(std::shared_ptr)&lt;/small&gt;</source>
          <target state="translated">std::hash&lt;small&gt;(std::shared_ptr)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4d3887318771073a6c7a7404e737f63f94d08b10" translate="yes" xml:space="preserve">
          <source>std::hermite, std::hermitef, std::hermitel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ed367700897deb68c58126c213a8d26906896f" translate="yes" xml:space="preserve">
          <source>std::hermitel</source>
          <target state="translated">std::hermitel</target>
        </trans-unit>
        <trans-unit id="db4dc88bf96e441aa4f2a5879f7a6d1d5296b35c" translate="yes" xml:space="preserve">
          <source>std::holds_alternative</source>
          <target state="translated">std::holds_alternative</target>
        </trans-unit>
        <trans-unit id="f3641e51e5c7bad2e0a5719c78d2c1e6e120e92b" translate="yes" xml:space="preserve">
          <source>std::hypot, std::hypotf, std::hypotl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415db65de9332822a4d67a3235cd046c7882eaa0" translate="yes" xml:space="preserve">
          <source>std::hypotl</source>
          <target state="translated">std::hypotl</target>
        </trans-unit>
        <trans-unit id="e8014d01c8a6e952fd48115fa9cfe810c91b770b" translate="yes" xml:space="preserve">
          <source>std::identity</source>
          <target state="translated">std::identity</target>
        </trans-unit>
        <trans-unit id="499679f2302fc636f0b1c2323c76ce2fa8c42745" translate="yes" xml:space="preserve">
          <source>std::identity::operator()</source>
          <target state="translated">std::identity::operator()</target>
        </trans-unit>
        <trans-unit id="27937e12a437d0eeb409996268f8a7e27fc023a9" translate="yes" xml:space="preserve">
          <source>std::ignore</source>
          <target state="translated">std::ignore</target>
        </trans-unit>
        <trans-unit id="e3090ef62e53a34bbbc60c651f0e17d1ba981c11" translate="yes" xml:space="preserve">
          <source>std::ilogb, std::ilogbf, std::ilogbl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec376ed2006cb937cc7153a479990ac02af4b29" translate="yes" xml:space="preserve">
          <source>std::ilogbl</source>
          <target state="translated">std::ilogbl</target>
        </trans-unit>
        <trans-unit id="83643dc8432dbabbb7e73bb24c2a1a856b792d66" translate="yes" xml:space="preserve">
          <source>std::imag(std::complex)</source>
          <target state="translated">std::imag(std::complex)</target>
        </trans-unit>
        <trans-unit id="9c525aa82ccd46c2c2138cf84ea5794639813ad7" translate="yes" xml:space="preserve">
          <source>std::imaxdiv_t</source>
          <target state="translated">std::imaxdiv_t</target>
        </trans-unit>
        <trans-unit id="c4f3b5498c98fb457a91ffb668478db14e22c2ab" translate="yes" xml:space="preserve">
          <source>std::in_place, std::in_place_type, std::in_place_index, std::in_place_t, std::in_place_type_t, std::in_place_index_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd70bbc0ff3b23fbc28968f5b00816965c46288" translate="yes" xml:space="preserve">
          <source>std::in_place_type_t</source>
          <target state="translated">std::in_place_type_t</target>
        </trans-unit>
        <trans-unit id="40d63f212f4ddd93f75d0aae33dccd304c59705c" translate="yes" xml:space="preserve">
          <source>std::includes</source>
          <target state="translated">std::includes</target>
        </trans-unit>
        <trans-unit id="0102155a7507c63217a2a205201566fb11478443" translate="yes" xml:space="preserve">
          <source>std::inclusive_scan</source>
          <target state="translated">std::inclusive_scan</target>
        </trans-unit>
        <trans-unit id="7fe6d95e72662c82399b012f74b14721fde712e7" translate="yes" xml:space="preserve">
          <source>std::incrementable_traits</source>
          <target state="translated">std::incrementable_traits</target>
        </trans-unit>
        <trans-unit id="12a9fc2be96e8cf10b859f4fa9595ff23c58565f" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine</source>
          <target state="translated">std::independent_bits_engine</target>
        </trans-unit>
        <trans-unit id="cf1b31d302afa22044a4f1460ae1e43421a1b4f1" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::base</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::base</target>
        </trans-unit>
        <trans-unit id="8cd53504a392b57120f4a12cb02837e041ebd3cc" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::discard</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::discard</target>
        </trans-unit>
        <trans-unit id="cfd39f9bed054cd1080407f0050b187d4d036802" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::independent_bits_engine</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::independent_bits_engine</target>
        </trans-unit>
        <trans-unit id="cf0892d901b2e4136417683826b13020b70478d6" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::max</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="8b857b8fbcc73e13f4ec84ccb72179cdb8a3cef9" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::min</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="67a67421b8d90ce70b65f733b28b6feb4b4e2c57" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::operator()</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="fcb0ad3541c188c0c476d9af2d738f79829f5697" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::seed</source>
          <target state="translated">std::independent_bits_engine&amp;lt;Engine,W,UIntType&amp;gt;::seed</target>
        </trans-unit>
        <trans-unit id="eb5634c96dabaa19211295c945a4b1c34779ef58" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::base</source>
          <target state="translated">std::independent_bits_engine::base</target>
        </trans-unit>
        <trans-unit id="bcb56f02e2857652871bd0366b1babf771004766" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::discard</source>
          <target state="translated">std::independent_bits_engine::discard</target>
        </trans-unit>
        <trans-unit id="f752fc490b233875414a136c813e4c66def48f76" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::independent_bits_engine</source>
          <target state="translated">std::independent_bits_engine::independent_bits_engine</target>
        </trans-unit>
        <trans-unit id="4ecd4c69d0775250ad6f2252bc9e44757213d0ac" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::max</source>
          <target state="translated">std::independent_bits_engine::max</target>
        </trans-unit>
        <trans-unit id="056867dd7ad61d7ba1d2d62df4699d440a1ec6f3" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::min</source>
          <target state="translated">std::independent_bits_engine::min</target>
        </trans-unit>
        <trans-unit id="ebefa88c2443b77765287aa4f4a15f933b060869" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::operator()</source>
          <target state="translated">std::independent_bits_engine::operator()</target>
        </trans-unit>
        <trans-unit id="03f246c61ecd49bb8a903f95f0a5bb323ace6bce" translate="yes" xml:space="preserve">
          <source>std::independent_bits_engine::seed</source>
          <target state="translated">std::independent_bits_engine::seed</target>
        </trans-unit>
        <trans-unit id="fafd981f646ca58c469d47ee5b772e8a8a77bc0a" translate="yes" xml:space="preserve">
          <source>std::indirect_array</source>
          <target state="translated">std::indirect_array</target>
        </trans-unit>
        <trans-unit id="24c673a02306aeb36e1d2d5e02f1818014fcb24f" translate="yes" xml:space="preserve">
          <source>std::indirect_array&amp;lt;T&amp;gt;::indirect_array</source>
          <target state="translated">std::indirect_array&amp;lt;T&amp;gt;::indirect_array</target>
        </trans-unit>
        <trans-unit id="3e8ac52f20e40379ca2f5e98cdda56f4d3b6c270" translate="yes" xml:space="preserve">
          <source>std::indirect_array&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,^=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</source>
          <target state="translated">std::indirect_array&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,^=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="54dcb2889428c9e3eb0ce215333cdd4b9138f95a" translate="yes" xml:space="preserve">
          <source>std::indirect_array&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::indirect_array&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="0d5a3e987a6e68e1086886cd7ad094790a209dfb" translate="yes" xml:space="preserve">
          <source>std::indirect_array&amp;lt;T&amp;gt;::~indirect_array</source>
          <target state="translated">std::indirect_array&amp;lt;T&amp;gt;::~indirect_array</target>
        </trans-unit>
        <trans-unit id="a490737799d759d6d7916b235b8cc863f0457e02" translate="yes" xml:space="preserve">
          <source>std::indirect_array::indirect_array</source>
          <target state="translated">std::indirect_array::indirect_array</target>
        </trans-unit>
        <trans-unit id="5b08e2fc4433c29569710e89e8ab937380ce3416" translate="yes" xml:space="preserve">
          <source>std::indirect_array::operator=</source>
          <target state="translated">std::indirect_array::operator=</target>
        </trans-unit>
        <trans-unit id="c1d60515114dd9d8553b4b6c12c3c295d52e6d1e" translate="yes" xml:space="preserve">
          <source>std::indirect_array::operators</source>
          <target state="translated">std::indirect_array::operators</target>
        </trans-unit>
        <trans-unit id="0f983a2fdf873a949881c26d9f558f67877a77cc" translate="yes" xml:space="preserve">
          <source>std::indirect_array::~indirect_array</source>
          <target state="translated">std::indirect_array::~indirect_array</target>
        </trans-unit>
        <trans-unit id="3ba964dd09e00f1114edfb34b768d2d713afce62" translate="yes" xml:space="preserve">
          <source>std::initializer_list</source>
          <target state="translated">std::initializer_list</target>
        </trans-unit>
        <trans-unit id="f1f81b04bdd09f15d2cf0df936c84e9bce13649a" translate="yes" xml:space="preserve">
          <source>std::initializer_list constructors had priority over copy constructors for single-element lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96a71257d08f0e480e719e8352c114142e43aa6" translate="yes" xml:space="preserve">
          <source>std::initializer_list&amp;lt;T&amp;gt;::begin</source>
          <target state="translated">std::initializer_list&amp;lt;T&amp;gt;::begin</target>
        </trans-unit>
        <trans-unit id="fdc875985736aa981bf53107f95c95f6fd626151" translate="yes" xml:space="preserve">
          <source>std::initializer_list&amp;lt;T&amp;gt;::end</source>
          <target state="translated">std::initializer_list&amp;lt;T&amp;gt;::end</target>
        </trans-unit>
        <trans-unit id="764eac1892042965af12376c312deb5613f41765" translate="yes" xml:space="preserve">
          <source>std::initializer_list&amp;lt;T&amp;gt;::initializer_list</source>
          <target state="translated">std::initializer_list&amp;lt;T&amp;gt;::initializer_list</target>
        </trans-unit>
        <trans-unit id="26f4b2511abec7a06c5acc071dc26bdcc1d456b4" translate="yes" xml:space="preserve">
          <source>std::initializer_list&amp;lt;T&amp;gt;::size</source>
          <target state="translated">std::initializer_list&amp;lt;T&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="757841a066e523ddc7b5887ebd141de6abc5ea9c" translate="yes" xml:space="preserve">
          <source>std::initializer_list::begin</source>
          <target state="translated">std::initializer_list::begin</target>
        </trans-unit>
        <trans-unit id="09296de59a6085712ffc4354f2cb0b759112c060" translate="yes" xml:space="preserve">
          <source>std::initializer_list::end</source>
          <target state="translated">std::initializer_list::end</target>
        </trans-unit>
        <trans-unit id="8fee7b166d8408dff6be8df50c317f7dcb495eb2" translate="yes" xml:space="preserve">
          <source>std::initializer_list::initializer_list</source>
          <target state="translated">std::initializer_list::initializer_list</target>
        </trans-unit>
        <trans-unit id="2a12699a977b696220f6b2a4e8a062927f1a5239" translate="yes" xml:space="preserve">
          <source>std::initializer_list::size</source>
          <target state="translated">std::initializer_list::size</target>
        </trans-unit>
        <trans-unit id="450dff82926fbce201f6d84845f6b3624a46aa48" translate="yes" xml:space="preserve">
          <source>std::inner_product</source>
          <target state="translated">std::inner_product</target>
        </trans-unit>
        <trans-unit id="6da814d6cb8b7c3bfa6fc2887e05f0f06dc731be" translate="yes" xml:space="preserve">
          <source>std::inplace_merge</source>
          <target state="translated">std::inplace_merge</target>
        </trans-unit>
        <trans-unit id="2bc38eb0d5d57d99f1743a26b57510fb28f9634e" translate="yes" xml:space="preserve">
          <source>std::input_iterator_tag, std::output_iterator_tag, std::forward_iterator_tag, std::bidirectional_iterator_tag, std::random_access_iterator_tag, std::contiguous_iterator_tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d4c1a8948bd618ca63f20e8e1a95f22322a538" translate="yes" xml:space="preserve">
          <source>std::insert_iterator</source>
          <target state="translated">std::insert_iterator</target>
        </trans-unit>
        <trans-unit id="331e648e68dbb75cbaafc7401a451f1719bfdded" translate="yes" xml:space="preserve">
          <source>std::insert_iterator&amp;lt;Container&amp;gt;::insert_iterator</source>
          <target state="translated">std::insert_iterator&amp;lt;Container&amp;gt;::insert_iterator</target>
        </trans-unit>
        <trans-unit id="61c6be65f55bf564ec9e9a7a4035c9fa30a88c7e" translate="yes" xml:space="preserve">
          <source>std::insert_iterator&amp;lt;Container&amp;gt;::operator*</source>
          <target state="translated">std::insert_iterator&amp;lt;Container&amp;gt;::operator*</target>
        </trans-unit>
        <trans-unit id="014beeaae2dc71166ad8f00079c2e99f90db3932" translate="yes" xml:space="preserve">
          <source>std::insert_iterator&amp;lt;Container&amp;gt;::operator=</source>
          <target state="translated">std::insert_iterator&amp;lt;Container&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="46e33df2c7cc9f4bf27cd5284b2e8f92e38aa2ce" translate="yes" xml:space="preserve">
          <source>std::insert_iterator::insert_iterator</source>
          <target state="translated">std::insert_iterator::insert_iterator</target>
        </trans-unit>
        <trans-unit id="9e54a0fdd7c89e3b582adadce1cb78b5c608ec9c" translate="yes" xml:space="preserve">
          <source>std::insert_iterator::operator*</source>
          <target state="translated">std::insert_iterator::operator*</target>
        </trans-unit>
        <trans-unit id="c0513f5706f3fbf2c00428ec7538e065119daec8" translate="yes" xml:space="preserve">
          <source>std::insert_iterator::operator=</source>
          <target state="translated">std::insert_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="cc17bc806f90e9e9ced4f88da4eb6e15701d1d0c" translate="yes" xml:space="preserve">
          <source>std::inserter</source>
          <target state="translated">std::inserter</target>
        </trans-unit>
        <trans-unit id="5ba90f7b85f47ca7328a4aa020e761ed238aee1c" translate="yes" xml:space="preserve">
          <source>std::integer_sequence</source>
          <target state="translated">std::integer_sequence</target>
        </trans-unit>
        <trans-unit id="06a5046844f0e3d554a169034a51fc252f50c0e0" translate="yes" xml:space="preserve">
          <source>std::integer_sequence::size</source>
          <target state="translated">std::integer_sequence::size</target>
        </trans-unit>
        <trans-unit id="8128258779ca2d0876835865b65c64462f4218a6" translate="yes" xml:space="preserve">
          <source>std::integral_constant</source>
          <target state="translated">std::integral_constant</target>
        </trans-unit>
        <trans-unit id="1e9026b0d34f4d2f4c5ab20061e4c0a3c5eca651" translate="yes" xml:space="preserve">
          <source>std::integral_constant::operator value_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb750b18934e8416aed632dce115037da50cb62" translate="yes" xml:space="preserve">
          <source>std::integral_constant::operator()</source>
          <target state="translated">std::integral_constant::operator()</target>
        </trans-unit>
        <trans-unit id="8d497a34afcaad66ccba936a1085f0829d6799d6" translate="yes" xml:space="preserve">
          <source>std::invalid_argument</source>
          <target state="translated">std::invalid_argument</target>
        </trans-unit>
        <trans-unit id="c2d09590651b8cc7a4f12a2a223233e959f96621" translate="yes" xml:space="preserve">
          <source>std::invalid_argument::invalid_argument</source>
          <target state="translated">std::invalid_argument::invalid_argument</target>
        </trans-unit>
        <trans-unit id="dc0a7bc363b1c38d66eedc592ddf874886534d32" translate="yes" xml:space="preserve">
          <source>std::invoke</source>
          <target state="translated">std::invoke</target>
        </trans-unit>
        <trans-unit id="d20c01fefc6ef124cf0c2a7a7c70d4e096f5b4fd" translate="yes" xml:space="preserve">
          <source>std::io_errc</source>
          <target state="translated">std::io_errc</target>
        </trans-unit>
        <trans-unit id="d9a65cf4398c71b1aa18c7a7b878364643ed05ec" translate="yes" xml:space="preserve">
          <source>std::ios_base</source>
          <target state="translated">std::ios_base</target>
        </trans-unit>
        <trans-unit id="229e5730c0a7abf8d03d484e15e3e2750806f52e" translate="yes" xml:space="preserve">
          <source>std::ios_base::Init</source>
          <target state="translated">std::ios_base::Init</target>
        </trans-unit>
        <trans-unit id="d63589dda2f07728d2038d4e5edd5c272a6ac5ce" translate="yes" xml:space="preserve">
          <source>std::ios_base::event</source>
          <target state="translated">std::ios_base::event</target>
        </trans-unit>
        <trans-unit id="9031c126415fa4e2055088b2139d10a84ba96cea" translate="yes" xml:space="preserve">
          <source>std::ios_base::event_callback</source>
          <target state="translated">std::ios_base::event_callback</target>
        </trans-unit>
        <trans-unit id="4879e9c1d002504624e4d511c98a150ebbeb5de5" translate="yes" xml:space="preserve">
          <source>std::ios_base::failure</source>
          <target state="translated">std::ios_base::failure</target>
        </trans-unit>
        <trans-unit id="143f8ec5a3307f5ae64c64c293c89f995d0212e8" translate="yes" xml:space="preserve">
          <source>std::ios_base::failure::failure</source>
          <target state="translated">std::ios_base::failure::failure</target>
        </trans-unit>
        <trans-unit id="3d76ae007d0c7bb7039e46029585427e8a7246a4" translate="yes" xml:space="preserve">
          <source>std::ios_base::flags</source>
          <target state="translated">std::ios_base::flags</target>
        </trans-unit>
        <trans-unit id="558ade87ed0f2dd9674a244bc6603257517044b9" translate="yes" xml:space="preserve">
          <source>std::ios_base::fmtflags</source>
          <target state="translated">std::ios_base::fmtflags</target>
        </trans-unit>
        <trans-unit id="098c047bdaf5f2a2d83c68f6908a21f5885bff54" translate="yes" xml:space="preserve">
          <source>std::ios_base::getloc</source>
          <target state="translated">std::ios_base::getloc</target>
        </trans-unit>
        <trans-unit id="73d6b1e9b9982779c85460595a54daa7cc3b4476" translate="yes" xml:space="preserve">
          <source>std::ios_base::imbue</source>
          <target state="translated">std::ios_base::imbue</target>
        </trans-unit>
        <trans-unit id="7d4bb1402021227af9ae72fcec9478c2ac381473" translate="yes" xml:space="preserve">
          <source>std::ios_base::ios_base</source>
          <target state="translated">std::ios_base::ios_base</target>
        </trans-unit>
        <trans-unit id="6ccd4722bb7991a7eb6f44835469b70f38561e76" translate="yes" xml:space="preserve">
          <source>std::ios_base::iostate</source>
          <target state="translated">std::ios_base::iostate</target>
        </trans-unit>
        <trans-unit id="8b0d8595b59fede95432c00478049386e9590b4c" translate="yes" xml:space="preserve">
          <source>std::ios_base::iword</source>
          <target state="translated">std::ios_base::iword</target>
        </trans-unit>
        <trans-unit id="db0dd02e8341f5435a74302b6fddb0dcf34af8c1" translate="yes" xml:space="preserve">
          <source>std::ios_base::openmode</source>
          <target state="translated">std::ios_base::openmode</target>
        </trans-unit>
        <trans-unit id="3c979a9a9c0c553cb04e277e868da540fa1f921a" translate="yes" xml:space="preserve">
          <source>std::ios_base::precision</source>
          <target state="translated">std::ios_base::precision</target>
        </trans-unit>
        <trans-unit id="97d7dbf3a2f80caf881b7eef12d84247ae375610" translate="yes" xml:space="preserve">
          <source>std::ios_base::pword</source>
          <target state="translated">std::ios_base::pword</target>
        </trans-unit>
        <trans-unit id="10ded5a4859656d09ffd49519077738c630ccef3" translate="yes" xml:space="preserve">
          <source>std::ios_base::register_callback</source>
          <target state="translated">std::ios_base::register_callback</target>
        </trans-unit>
        <trans-unit id="ab1804624a551b8ab7771b400b8556aadbce0e07" translate="yes" xml:space="preserve">
          <source>std::ios_base::seekdir</source>
          <target state="translated">std::ios_base::seekdir</target>
        </trans-unit>
        <trans-unit id="a41650821a7eca0faba3e89fcc6e4fcfd9eb2c97" translate="yes" xml:space="preserve">
          <source>std::ios_base::setf</source>
          <target state="translated">std::ios_base::setf</target>
        </trans-unit>
        <trans-unit id="3fc16caebd1f484acb0ed4b16f40e02d0001dd52" translate="yes" xml:space="preserve">
          <source>std::ios_base::sync_with_stdio</source>
          <target state="translated">std::ios_base::sync_with_stdio</target>
        </trans-unit>
        <trans-unit id="9c460a1c2a63492be875d8c2b06893ee71decf4f" translate="yes" xml:space="preserve">
          <source>std::ios_base::unsetf</source>
          <target state="translated">std::ios_base::unsetf</target>
        </trans-unit>
        <trans-unit id="5482809d810417aa318ce7d7461f47027df4b4b9" translate="yes" xml:space="preserve">
          <source>std::ios_base::width</source>
          <target state="translated">std::ios_base::width</target>
        </trans-unit>
        <trans-unit id="707362bbae9c55e6829759fbdc4f2659753961ce" translate="yes" xml:space="preserve">
          <source>std::ios_base::xalloc</source>
          <target state="translated">std::ios_base::xalloc</target>
        </trans-unit>
        <trans-unit id="0b0a78e2a5d6eaee5989596183c6491dad55432a" translate="yes" xml:space="preserve">
          <source>std::ios_base::~ios_base</source>
          <target state="translated">std::ios_base::~ios_base</target>
        </trans-unit>
        <trans-unit id="cfb99ab818a27b0eb6014a9fc07b286b4315d222" translate="yes" xml:space="preserve">
          <source>std::iostream_category</source>
          <target state="translated">std::iostream_category</target>
        </trans-unit>
        <trans-unit id="f86cf1d67ca19f23c6b26a2283113f9e8085127a" translate="yes" xml:space="preserve">
          <source>std::iota</source>
          <target state="translated">std::iota</target>
        </trans-unit>
        <trans-unit id="4af5a3a6751c57d16b254436231516bad1d227cd" translate="yes" xml:space="preserve">
          <source>std::is_abstract</source>
          <target state="translated">std::is_abstract</target>
        </trans-unit>
        <trans-unit id="c459565a50cef91ab21f3b3de4f786a43ab3b4ff" translate="yes" xml:space="preserve">
          <source>std::is_aggregate</source>
          <target state="translated">std::is_aggregate</target>
        </trans-unit>
        <trans-unit id="ef1e45e6c0a33cb8129225b98a176929bcd110cd" translate="yes" xml:space="preserve">
          <source>std::is_arithmetic</source>
          <target state="translated">std::is_arithmetic</target>
        </trans-unit>
        <trans-unit id="bfea7559a121ab76be0c74e3f74c622e2ae78d5a" translate="yes" xml:space="preserve">
          <source>std::is_array</source>
          <target state="translated">std::is_array</target>
        </trans-unit>
        <trans-unit id="04587bba3266354afc4e57e47b9291f04f25eddc" translate="yes" xml:space="preserve">
          <source>std::is_assignable, std::is_trivially_assignable, std::is_nothrow_assignable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebecb5cb5001ad6780727aefe22a487e92ce787" translate="yes" xml:space="preserve">
          <source>std::is_base_of</source>
          <target state="translated">std::is_base_of</target>
        </trans-unit>
        <trans-unit id="7f97a5df41efd5dc4024203919eda7dfd93e010a" translate="yes" xml:space="preserve">
          <source>std::is_bind_expression</source>
          <target state="translated">std::is_bind_expression</target>
        </trans-unit>
        <trans-unit id="3fdfee7d5ee3ca2b01e791bde8c00685eb3fcd23" translate="yes" xml:space="preserve">
          <source>std::is_bounded_array</source>
          <target state="translated">std::is_bounded_array</target>
        </trans-unit>
        <trans-unit id="474d8bb12106e81fcc57d96aa9d9259bcd6d1815" translate="yes" xml:space="preserve">
          <source>std::is_class</source>
          <target state="translated">std::is_class</target>
        </trans-unit>
        <trans-unit id="ab0b6c7e5e76475de6f5fa788648d0c633648f04" translate="yes" xml:space="preserve">
          <source>std::is_compound</source>
          <target state="translated">std::is_compound</target>
        </trans-unit>
        <trans-unit id="e06aaeb6e82d01038be16103cb9741ad8bb4a7a8" translate="yes" xml:space="preserve">
          <source>std::is_const</source>
          <target state="translated">std::is_const</target>
        </trans-unit>
        <trans-unit id="01253640a96c87e3011c7f26056a511d7184ebf8" translate="yes" xml:space="preserve">
          <source>std::is_constant_evaluated</source>
          <target state="translated">std::is_constant_evaluated</target>
        </trans-unit>
        <trans-unit id="21b22976873bdb4c84a3e1e783a8982c28fdab1c" translate="yes" xml:space="preserve">
          <source>std::is_constructible, std::is_trivially_constructible, std::is_nothrow_constructible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd60c52d8cca054c943112e29caf7eb9b4386c1d" translate="yes" xml:space="preserve">
          <source>std::is_convertible, std::is_nothrow_convertible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b34206054a69c3a766fd6099ff50184e1a1a375" translate="yes" xml:space="preserve">
          <source>std::is_copy_assignable, std::is_trivially_copy_assignable, std::is_nothrow_copy_assignable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f093b4968339691eba053f7da4fdcd59b50ea289" translate="yes" xml:space="preserve">
          <source>std::is_copy_constructible, std::is_trivially_copy_constructible, std::is_nothrow_copy_constructible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b041fb3db0da0d8635326abddab36b57e22cd951" translate="yes" xml:space="preserve">
          <source>std::is_default_constructible, std::is_trivially_default_constructible, std::is_nothrow_default_constructible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f72f09377c5902fe2c95d73d9e6717feda58f3" translate="yes" xml:space="preserve">
          <source>std::is_destructible, std::is_trivially_destructible, std::is_nothrow_destructible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e9b474a88527fc72a6612575bf8eb82585cc42" translate="yes" xml:space="preserve">
          <source>std::is_empty</source>
          <target state="translated">std::is_empty</target>
        </trans-unit>
        <trans-unit id="10f73dd7ac24eaedd39faecd429becc1b53bb120" translate="yes" xml:space="preserve">
          <source>std::is_enum</source>
          <target state="translated">std::is_enum</target>
        </trans-unit>
        <trans-unit id="40ebc7b42f1dd8ff0c4d7f83b947a7de6a5cdba8" translate="yes" xml:space="preserve">
          <source>std::is_eq, std::is_neq, std::is_lt, std::is_gt, std::is_lteq, std::is_gteq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0579e81b235a5f0be208fbc8a9c35ee19f4bb6e" translate="yes" xml:space="preserve">
          <source>std::is_error_code_enum</source>
          <target state="translated">std::is_error_code_enum</target>
        </trans-unit>
        <trans-unit id="28795f4f5d480e195360e759f0620139aa79ba83" translate="yes" xml:space="preserve">
          <source>std::is_error_code_enum&amp;lt;std::future_errc&amp;gt;</source>
          <target state="translated">std::is_error_code_enum&amp;lt;std::future_errc&amp;gt;</target>
        </trans-unit>
        <trans-unit id="227290b810e60b476fac78fd2b09428c7bbd1bfe" translate="yes" xml:space="preserve">
          <source>std::is_error_code_enum&lt;small&gt;&amp;lt;std::io_errc&amp;gt;&lt;/small&gt;</source>
          <target state="translated">std::is_error_code_enum&lt;small&gt;&amp;lt;std::io_errc&amp;gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4e921eb0f320cd27d98ade9d000ad2973774e524" translate="yes" xml:space="preserve">
          <source>std::is_error_condition_enum</source>
          <target state="translated">std::is_error_condition_enum</target>
        </trans-unit>
        <trans-unit id="f03ed3798da221a8c7701443482f87795c1d356f" translate="yes" xml:space="preserve">
          <source>std::is_error_condition_enum&amp;lt;std::errc&amp;gt;</source>
          <target state="translated">std::is_error_condition_enum&amp;lt;std::errc&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e6fce7e98d1654aa6d1734a0bf648364db911cae" translate="yes" xml:space="preserve">
          <source>std::is_execution_policy</source>
          <target state="translated">std::is_execution_policy</target>
        </trans-unit>
        <trans-unit id="0e87989f1b648a868f5d7813157bb804ba6507c2" translate="yes" xml:space="preserve">
          <source>std::is_final</source>
          <target state="translated">std::is_final</target>
        </trans-unit>
        <trans-unit id="ed9ac718585533418f8851e418a39f0ae1f359a5" translate="yes" xml:space="preserve">
          <source>std::is_floating_point</source>
          <target state="translated">std::is_floating_point</target>
        </trans-unit>
        <trans-unit id="d3810f5cd88f57f54d7e73ce4e30b0ccfaf7ef45" translate="yes" xml:space="preserve">
          <source>std::is_function</source>
          <target state="translated">std::is_function</target>
        </trans-unit>
        <trans-unit id="a094c351166b0e2109ec56eedbe74d3588ccccea" translate="yes" xml:space="preserve">
          <source>std::is_fundamental</source>
          <target state="translated">std::is_fundamental</target>
        </trans-unit>
        <trans-unit id="d5dc81b50ffeb5837af7ca9e49d5904e50003a21" translate="yes" xml:space="preserve">
          <source>std::is_heap</source>
          <target state="translated">std::is_heap</target>
        </trans-unit>
        <trans-unit id="e976c49f7a78ab92a6d2209018bff0813b25aa83" translate="yes" xml:space="preserve">
          <source>std::is_heap_until</source>
          <target state="translated">std::is_heap_until</target>
        </trans-unit>
        <trans-unit id="e208d48a85160839c4bada0fbd3aaa8054ef710e" translate="yes" xml:space="preserve">
          <source>std::is_integral</source>
          <target state="translated">std::is_integral</target>
        </trans-unit>
        <trans-unit id="dd75a1a9a0157869f8d045bef53cc9fdb8a301d2" translate="yes" xml:space="preserve">
          <source>std::is_invocable, std::is_invocable_r, std::is_nothrow_invocable, std::is_nothrow_invocable_r</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c808ef2c79f65233b2dc939e5a7533ab47d41f3" translate="yes" xml:space="preserve">
          <source>std::is_literal_type</source>
          <target state="translated">std::is_literal_type</target>
        </trans-unit>
        <trans-unit id="4133faded8684f01d55349996e825a8e6b283fd5" translate="yes" xml:space="preserve">
          <source>std::is_lvalue_reference</source>
          <target state="translated">std::is_lvalue_reference</target>
        </trans-unit>
        <trans-unit id="ea570bc42339c617c75478c10bb062254c708554" translate="yes" xml:space="preserve">
          <source>std::is_member_function_pointer</source>
          <target state="translated">std::is_member_function_pointer</target>
        </trans-unit>
        <trans-unit id="5934349c4e8ca7590b8f265b1088f8def75ee7aa" translate="yes" xml:space="preserve">
          <source>std::is_member_object_pointer</source>
          <target state="translated">std::is_member_object_pointer</target>
        </trans-unit>
        <trans-unit id="021bbe1287af29004d7d7063d0ca27534e496a83" translate="yes" xml:space="preserve">
          <source>std::is_member_pointer</source>
          <target state="translated">std::is_member_pointer</target>
        </trans-unit>
        <trans-unit id="55f200caa42cc63771a63462ffcabc31609eb751" translate="yes" xml:space="preserve">
          <source>std::is_move_assignable, std::is_trivially_move_assignable, std::is_nothrow_move_assignable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c2fdb3f6ddfa0b8b726366c1027fc7c360c792" translate="yes" xml:space="preserve">
          <source>std::is_move_constructible, std::is_trivially_move_constructible, std::is_nothrow_move_constructible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d14255c9c6d638d7021fc3ac4dc8b60b3c660c0" translate="yes" xml:space="preserve">
          <source>std::is_neq</source>
          <target state="translated">std::is_neq</target>
        </trans-unit>
        <trans-unit id="2c515e4910fc18dfe029bd21650ed49f4e6da222" translate="yes" xml:space="preserve">
          <source>std::is_nothrow_convertible</source>
          <target state="translated">std::is_nothrow_convertible</target>
        </trans-unit>
        <trans-unit id="ad27f12276afb650d0682e8146e3623b7cce81bf" translate="yes" xml:space="preserve">
          <source>std::is_nothrow_invocable_r</source>
          <target state="translated">std::is_nothrow_invocable_r</target>
        </trans-unit>
        <trans-unit id="b78779d6f732306e7bf4fbba5841d4f44b89bc6d" translate="yes" xml:space="preserve">
          <source>std::is_null_pointer</source>
          <target state="translated">std::is_null_pointer</target>
        </trans-unit>
        <trans-unit id="430d1977dcfe62976e891b0588b94aa67e0d6b80" translate="yes" xml:space="preserve">
          <source>std::is_object</source>
          <target state="translated">std::is_object</target>
        </trans-unit>
        <trans-unit id="a584c2e21c3b0493200da5d78f589c313bcdbae3" translate="yes" xml:space="preserve">
          <source>std::is_partitioned</source>
          <target state="translated">std::is_partitioned</target>
        </trans-unit>
        <trans-unit id="38f3ad775a54ba8b5b2e5ad3c3aff33411b88b08" translate="yes" xml:space="preserve">
          <source>std::is_permutation</source>
          <target state="translated">std::is_permutation</target>
        </trans-unit>
        <trans-unit id="05e87906ba643def3368e957bf1d68506a1e4934" translate="yes" xml:space="preserve">
          <source>std::is_placeholder</source>
          <target state="translated">std::is_placeholder</target>
        </trans-unit>
        <trans-unit id="1c87367bf0690530cb29502098f5c2acccf50e58" translate="yes" xml:space="preserve">
          <source>std::is_pod</source>
          <target state="translated">std::is_pod</target>
        </trans-unit>
        <trans-unit id="ea6f366999e494291c47fff1c940a61d5de05d39" translate="yes" xml:space="preserve">
          <source>std::is_pointer</source>
          <target state="translated">std::is_pointer</target>
        </trans-unit>
        <trans-unit id="fb45f694c10a331f606d9cd9029f6ef36d28eb64" translate="yes" xml:space="preserve">
          <source>std::is_polymorphic</source>
          <target state="translated">std::is_polymorphic</target>
        </trans-unit>
        <trans-unit id="27341fe035ff3e4f778b3db22bc9d824b55c5283" translate="yes" xml:space="preserve">
          <source>std::is_reference</source>
          <target state="translated">std::is_reference</target>
        </trans-unit>
        <trans-unit id="3c259a2e8bd38f577b8ed37404f2d2f7edbc5b08" translate="yes" xml:space="preserve">
          <source>std::is_rvalue_reference</source>
          <target state="translated">std::is_rvalue_reference</target>
        </trans-unit>
        <trans-unit id="6fdecc76952135999fff1784bbe912da0834a2a7" translate="yes" xml:space="preserve">
          <source>std::is_same</source>
          <target state="translated">std::is_same</target>
        </trans-unit>
        <trans-unit id="a415ea88b4f22ba134ad081d30b68a369393e636" translate="yes" xml:space="preserve">
          <source>std::is_scalar</source>
          <target state="translated">std::is_scalar</target>
        </trans-unit>
        <trans-unit id="0c571fd4ee52bef7b00081994e2a44b4a44ac0f7" translate="yes" xml:space="preserve">
          <source>std::is_signed</source>
          <target state="translated">std::is_signed</target>
        </trans-unit>
        <trans-unit id="4bbaa50fa0e10f09ecb38e145d8315286c74b413" translate="yes" xml:space="preserve">
          <source>std::is_sorted</source>
          <target state="translated">std::is_sorted</target>
        </trans-unit>
        <trans-unit id="3f381925a7be7ae83858dd600ee8b8a769ab780a" translate="yes" xml:space="preserve">
          <source>std::is_sorted_until</source>
          <target state="translated">std::is_sorted_until</target>
        </trans-unit>
        <trans-unit id="82f5e8d9104927f715cc0d95602f3bf96a12e55f" translate="yes" xml:space="preserve">
          <source>std::is_standard_layout</source>
          <target state="translated">std::is_standard_layout</target>
        </trans-unit>
        <trans-unit id="91fe545d78b771a5d8f805afe9cdd548be23a636" translate="yes" xml:space="preserve">
          <source>std::is_swappable_with</source>
          <target state="translated">std::is_swappable_with</target>
        </trans-unit>
        <trans-unit id="e0e119a6d2d0105c36f531aa807d844639c3e47f" translate="yes" xml:space="preserve">
          <source>std::is_swappable_with, std::is_swappable, std::is_nothrow_swappable_with, std::is_nothrow_swappable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad48da1b46a36babc28010f738f00b06a2e14b30" translate="yes" xml:space="preserve">
          <source>std::is_trivial</source>
          <target state="translated">std::is_trivial</target>
        </trans-unit>
        <trans-unit id="41f26009b76713b587960d49f8330e3fd79f37fc" translate="yes" xml:space="preserve">
          <source>std::is_trivially_assignable</source>
          <target state="translated">std::is_trivially_assignable</target>
        </trans-unit>
        <trans-unit id="38a27ce50db459a49bda8d54c3dfb8bb11db6266" translate="yes" xml:space="preserve">
          <source>std::is_trivially_constructible</source>
          <target state="translated">std::is_trivially_constructible</target>
        </trans-unit>
        <trans-unit id="c11d8a95fd02955c885a1f6ddb4126b744557447" translate="yes" xml:space="preserve">
          <source>std::is_trivially_copy_assignable</source>
          <target state="translated">std::is_trivially_copy_assignable</target>
        </trans-unit>
        <trans-unit id="959311f553efde3d047fd1c761c3c01f020cd7bc" translate="yes" xml:space="preserve">
          <source>std::is_trivially_copy_constructible</source>
          <target state="translated">std::is_trivially_copy_constructible</target>
        </trans-unit>
        <trans-unit id="ca4364eaa181f7c5eacc32451b3ffff2f4bcc348" translate="yes" xml:space="preserve">
          <source>std::is_trivially_copyable</source>
          <target state="translated">std::is_trivially_copyable</target>
        </trans-unit>
        <trans-unit id="d03494f27c7efd5d2bc27421f688f312642ff15b" translate="yes" xml:space="preserve">
          <source>std::is_trivially_default_constructible</source>
          <target state="translated">std::is_trivially_default_constructible</target>
        </trans-unit>
        <trans-unit id="ee4d54408461a0adb8c5e7a5fc9d0c2411d2a2c8" translate="yes" xml:space="preserve">
          <source>std::is_trivially_destructible</source>
          <target state="translated">std::is_trivially_destructible</target>
        </trans-unit>
        <trans-unit id="a57599c2da8f91f54f63ebfe38c31276250c12ed" translate="yes" xml:space="preserve">
          <source>std::is_trivially_move_assignable</source>
          <target state="translated">std::is_trivially_move_assignable</target>
        </trans-unit>
        <trans-unit id="1d0f15dd9e34b8332767ba7b6a37e4cdd595ab28" translate="yes" xml:space="preserve">
          <source>std::is_trivially_move_constructible</source>
          <target state="translated">std::is_trivially_move_constructible</target>
        </trans-unit>
        <trans-unit id="02133628b9013e2a81fb89ed2c11da08c469754b" translate="yes" xml:space="preserve">
          <source>std::is_unbounded_array</source>
          <target state="translated">std::is_unbounded_array</target>
        </trans-unit>
        <trans-unit id="174ce15da19bd1820087873988e49e0e19c6d21c" translate="yes" xml:space="preserve">
          <source>std::is_union</source>
          <target state="translated">std::is_union</target>
        </trans-unit>
        <trans-unit id="f03396a29dfac840264ab1535c7ac2fac5d000fe" translate="yes" xml:space="preserve">
          <source>std::is_unsigned</source>
          <target state="translated">std::is_unsigned</target>
        </trans-unit>
        <trans-unit id="8fdb13ec37e631d5d47690813fe0025faef45168" translate="yes" xml:space="preserve">
          <source>std::is_void</source>
          <target state="translated">std::is_void</target>
        </trans-unit>
        <trans-unit id="f42763badf6d427666a8c79bc77252449fffdb2e" translate="yes" xml:space="preserve">
          <source>std::is_volatile</source>
          <target state="translated">std::is_volatile</target>
        </trans-unit>
        <trans-unit id="a8e2fca2be94bdc7fd6c18246aae096b5a509ccd" translate="yes" xml:space="preserve">
          <source>std::isalnum</source>
          <target state="translated">std::isalnum</target>
        </trans-unit>
        <trans-unit id="65cbc49e95bde8d14fbd8b8b70b5341f4233622a" translate="yes" xml:space="preserve">
          <source>std::isalnum(std::locale)</source>
          <target state="translated">std::isalnum(std::locale)</target>
        </trans-unit>
        <trans-unit id="d1858854154ec7e0472a736d75ffbcabed93a086" translate="yes" xml:space="preserve">
          <source>std::isalpha</source>
          <target state="translated">std::isalpha</target>
        </trans-unit>
        <trans-unit id="05a32769a24efc0b9c7f72f472a5dd0069d776df" translate="yes" xml:space="preserve">
          <source>std::isalpha(std::locale)</source>
          <target state="translated">std::isalpha(std::locale)</target>
        </trans-unit>
        <trans-unit id="07549f3004ed9844b131b153ab067fdd1aa67a78" translate="yes" xml:space="preserve">
          <source>std::isblank</source>
          <target state="translated">std::isblank</target>
        </trans-unit>
        <trans-unit id="f8e3f46d0f3eaea7dbf979fab39f8b53169d01cb" translate="yes" xml:space="preserve">
          <source>std::isblank(std::locale)</source>
          <target state="translated">std::isblank(std::locale)</target>
        </trans-unit>
        <trans-unit id="74b7c1e4e6ca7704221d2f53c84d64d1005193d7" translate="yes" xml:space="preserve">
          <source>std::iscntrl</source>
          <target state="translated">std::iscntrl</target>
        </trans-unit>
        <trans-unit id="d41d6936b1628808eab0a62c962fe1e764ff4bd0" translate="yes" xml:space="preserve">
          <source>std::iscntrl(std::locale)</source>
          <target state="translated">std::iscntrl(std::locale)</target>
        </trans-unit>
        <trans-unit id="e4fd0596f7398a68862edc0d88581bada9a1bc08" translate="yes" xml:space="preserve">
          <source>std::isdigit</source>
          <target state="translated">std::isdigit</target>
        </trans-unit>
        <trans-unit id="7c8e32b1d36ccf659085c6aef855e3905060dd52" translate="yes" xml:space="preserve">
          <source>std::isdigit(std::locale)</source>
          <target state="translated">std::isdigit(std::locale)</target>
        </trans-unit>
        <trans-unit id="3e916a4aea1c2f0ee6cda0a04f932abe2fee5086" translate="yes" xml:space="preserve">
          <source>std::isfinite</source>
          <target state="translated">std::isfinite</target>
        </trans-unit>
        <trans-unit id="e186e956f312aeba7d9d49e831303fdec7fcd882" translate="yes" xml:space="preserve">
          <source>std::isgraph</source>
          <target state="translated">std::isgraph</target>
        </trans-unit>
        <trans-unit id="4af09f75ec97ad85eec9bbe1ed8f5d22b775fb96" translate="yes" xml:space="preserve">
          <source>std::isgraph(std::locale)</source>
          <target state="translated">std::isgraph(std::locale)</target>
        </trans-unit>
        <trans-unit id="d5db3a9620556a19c8985021d1a9377c53382234" translate="yes" xml:space="preserve">
          <source>std::isgreater</source>
          <target state="translated">std::isgreater</target>
        </trans-unit>
        <trans-unit id="913468d9e4ead5a3ed68ac3313d19135d77edb76" translate="yes" xml:space="preserve">
          <source>std::isgreaterequal</source>
          <target state="translated">std::isgreaterequal</target>
        </trans-unit>
        <trans-unit id="0508a7361048ba011736db0df2b895be7420d0b8" translate="yes" xml:space="preserve">
          <source>std::isinf</source>
          <target state="translated">std::isinf</target>
        </trans-unit>
        <trans-unit id="5b532883e9e90691e6bc28d4eb9b47399d8dcf4c" translate="yes" xml:space="preserve">
          <source>std::isless</source>
          <target state="translated">std::isless</target>
        </trans-unit>
        <trans-unit id="a07bda2a3a8cc6388ec805c4e395225dd65d377e" translate="yes" xml:space="preserve">
          <source>std::islessequal</source>
          <target state="translated">std::islessequal</target>
        </trans-unit>
        <trans-unit id="af06962e71ea1ee543fb8294696c66d8a457b2df" translate="yes" xml:space="preserve">
          <source>std::islessgreater</source>
          <target state="translated">std::islessgreater</target>
        </trans-unit>
        <trans-unit id="96bf0c5213fb4a9bdc61e092c146991efb600954" translate="yes" xml:space="preserve">
          <source>std::islower</source>
          <target state="translated">std::islower</target>
        </trans-unit>
        <trans-unit id="1b87bdaf24af88cffb2c8e82a8805eb97ea0987e" translate="yes" xml:space="preserve">
          <source>std::islower(std::locale)</source>
          <target state="translated">std::islower(std::locale)</target>
        </trans-unit>
        <trans-unit id="3e7696e4294c077d6eefbc934b64eb45b5404680" translate="yes" xml:space="preserve">
          <source>std::isnan</source>
          <target state="translated">std::isnan</target>
        </trans-unit>
        <trans-unit id="44b30211a5b010e55347c7134d24c77afca3fbf6" translate="yes" xml:space="preserve">
          <source>std::isnormal</source>
          <target state="translated">std::isnormal</target>
        </trans-unit>
        <trans-unit id="8b6588ae2f0933a41e5206196f16604539699294" translate="yes" xml:space="preserve">
          <source>std::ispow2</source>
          <target state="translated">std::ispow2</target>
        </trans-unit>
        <trans-unit id="d3607ab328de0e4ae054a34e11895c2b79b39e06" translate="yes" xml:space="preserve">
          <source>std::isprint</source>
          <target state="translated">std::isprint</target>
        </trans-unit>
        <trans-unit id="9016aa76cbf8ecfb138ff9b69ac16527ed9ce714" translate="yes" xml:space="preserve">
          <source>std::isprint(std::locale)</source>
          <target state="translated">std::isprint(std::locale)</target>
        </trans-unit>
        <trans-unit id="6702db6a8cfebc342276c600c351e5006940e757" translate="yes" xml:space="preserve">
          <source>std::ispunct</source>
          <target state="translated">std::ispunct</target>
        </trans-unit>
        <trans-unit id="03c7a022b72661409638622a10c9a5d310e905c6" translate="yes" xml:space="preserve">
          <source>std::ispunct(std::locale)</source>
          <target state="translated">std::ispunct(std::locale)</target>
        </trans-unit>
        <trans-unit id="67cbcd66457385ceee76d110afe2c688efedb7b1" translate="yes" xml:space="preserve">
          <source>std::isspace</source>
          <target state="translated">std::isspace</target>
        </trans-unit>
        <trans-unit id="4cc46f56e960f9def62771fb2560e0bca3c0ee91" translate="yes" xml:space="preserve">
          <source>std::isspace(std::locale)</source>
          <target state="translated">std::isspace(std::locale)</target>
        </trans-unit>
        <trans-unit id="2ff0625bc9821c4cce1939c0bdf870b068405922" translate="yes" xml:space="preserve">
          <source>std::istream_iterator</source>
          <target state="translated">std::istream_iterator</target>
        </trans-unit>
        <trans-unit id="edb2d02e54f999569c1e394dc35686deac9a4de7" translate="yes" xml:space="preserve">
          <source>std::istream_iterator&amp;lt;T,CharT,Traits,Distance&amp;gt;::istream_iterator</source>
          <target state="translated">std::istream_iterator&amp;lt;T,CharT,Traits,Distance&amp;gt;::istream_iterator</target>
        </trans-unit>
        <trans-unit id="894cfe9f05511ed6c8a5fec145a91b95446300ed" translate="yes" xml:space="preserve">
          <source>std::istream_iterator&amp;lt;T,CharT,Traits,Distance&amp;gt;::operator*, operator-&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1ccf754ac70159ebccfc519bb28ce50eb7fea9" translate="yes" xml:space="preserve">
          <source>std::istream_iterator&amp;lt;T,CharT,Traits,Distance&amp;gt;::operator++, operator++(int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bdc3cd5c3b065eefb4369329213b5bd034d594" translate="yes" xml:space="preserve">
          <source>std::istream_iterator&amp;lt;T,CharT,Traits,Distance&amp;gt;::~istream_iterator</source>
          <target state="translated">std::istream_iterator&amp;lt;T,CharT,Traits,Distance&amp;gt;::~istream_iterator</target>
        </trans-unit>
        <trans-unit id="5328e23ff6e5a980ff1c7283bcb25789c5d21f6c" translate="yes" xml:space="preserve">
          <source>std::istream_iterator::istream_iterator</source>
          <target state="translated">std::istream_iterator::istream_iterator</target>
        </trans-unit>
        <trans-unit id="d722df2ccb1f8130e4090d8b69cf055e1de723a8" translate="yes" xml:space="preserve">
          <source>std::istream_iterator::operators (int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477c2d4b1e7bc94e630ac7b7a35110620b9e81c6" translate="yes" xml:space="preserve">
          <source>std::istream_iterator::operators (operator-&amp;gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b164edaa0d0572a51b3c5035221decbd8544dc19" translate="yes" xml:space="preserve">
          <source>std::istream_iterator::~istream_iterator</source>
          <target state="translated">std::istream_iterator::~istream_iterator</target>
        </trans-unit>
        <trans-unit id="f9c028683309a61bd89e650c76b31ae0c7fc84b0" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator</source>
          <target state="translated">std::istreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="4742c05bad0016987888be77f4efcc76e6d49726" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::equal</source>
          <target state="translated">std::istreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::equal</target>
        </trans-unit>
        <trans-unit id="2b98273b7dd166a71fe8e6323bb48d728ebb586d" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::istreambuf_iterator</source>
          <target state="translated">std::istreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::istreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="50eda8643ce4f73ae70dbe0f453b8cc18a41f8b3" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator*, operator-&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee45a38b4bf8daaaf4f08e8d6550c38b0a67cfd" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator++, operator++(int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5f481608a729c6377b2240cb0e4dc7a7e139d1" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator::equal</source>
          <target state="translated">std::istreambuf_iterator::equal</target>
        </trans-unit>
        <trans-unit id="a042992c30a22b04b3159e0b4de4f0f583c1c0ea" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator::istreambuf_iterator</source>
          <target state="translated">std::istreambuf_iterator::istreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="6027d0ae8fdcd834dbce497bdb747d5c74be8093" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator::operators (int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f5d66ddabe69af99f9e37aeff652bc2de5098b" translate="yes" xml:space="preserve">
          <source>std::istreambuf_iterator::operators (operator-&amp;gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b968ae8eafde66fd32b48cd27318cb8a6f853c56" translate="yes" xml:space="preserve">
          <source>std::istrstream</source>
          <target state="translated">std::istrstream</target>
        </trans-unit>
        <trans-unit id="8ba1ffb93a58d683a9f279b52396aa9da9a00ef2" translate="yes" xml:space="preserve">
          <source>std::istrstream::istrstream</source>
          <target state="translated">std::istrstream::istrstream</target>
        </trans-unit>
        <trans-unit id="64b7036e13ee3df9912df4d2d659abeed2d36359" translate="yes" xml:space="preserve">
          <source>std::istrstream::rdbuf</source>
          <target state="translated">std::istrstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="38193e86085c6a9b08e418deb56ca64a29b169d6" translate="yes" xml:space="preserve">
          <source>std::istrstream::str</source>
          <target state="translated">std::istrstream::str</target>
        </trans-unit>
        <trans-unit id="3486dce0ef61492cf0322d559b80d59919ea9577" translate="yes" xml:space="preserve">
          <source>std::istrstream::~istrstream</source>
          <target state="translated">std::istrstream::~istrstream</target>
        </trans-unit>
        <trans-unit id="ea2c6cebf02ac83641e85bbb501df0a228bf2d32" translate="yes" xml:space="preserve">
          <source>std::isunordered</source>
          <target state="translated">std::isunordered</target>
        </trans-unit>
        <trans-unit id="00e4f2dc86182e6f9357dd6942437abe934bb947" translate="yes" xml:space="preserve">
          <source>std::isupper</source>
          <target state="translated">std::isupper</target>
        </trans-unit>
        <trans-unit id="892f4ccafc8e282bd3f3f59c66dbbe3b2b3013e2" translate="yes" xml:space="preserve">
          <source>std::isupper(std::locale)</source>
          <target state="translated">std::isupper(std::locale)</target>
        </trans-unit>
        <trans-unit id="ec90998deab7894fd29c1c2bd66e25cdbb84b796" translate="yes" xml:space="preserve">
          <source>std::iswalnum</source>
          <target state="translated">std::iswalnum</target>
        </trans-unit>
        <trans-unit id="2df83f9d4155037eafd0bfad71f597a320b8f389" translate="yes" xml:space="preserve">
          <source>std::iswalpha</source>
          <target state="translated">std::iswalpha</target>
        </trans-unit>
        <trans-unit id="cbd9c76ed684a5880451f11a9ef0e261b75548ed" translate="yes" xml:space="preserve">
          <source>std::iswblank</source>
          <target state="translated">std::iswblank</target>
        </trans-unit>
        <trans-unit id="2ece707e34e20cb02a06a9b4fd70298afae80cb3" translate="yes" xml:space="preserve">
          <source>std::iswcntrl</source>
          <target state="translated">std::iswcntrl</target>
        </trans-unit>
        <trans-unit id="33e3ebfbb046433b8c1ca69876261570cc71a712" translate="yes" xml:space="preserve">
          <source>std::iswctype</source>
          <target state="translated">std::iswctype</target>
        </trans-unit>
        <trans-unit id="9b638b9ce65c5c5211c5186aeb93bd046fd95cee" translate="yes" xml:space="preserve">
          <source>std::iswdigit</source>
          <target state="translated">std::iswdigit</target>
        </trans-unit>
        <trans-unit id="c60c1b875f48c1e653ecb9949976d349aa252169" translate="yes" xml:space="preserve">
          <source>std::iswgraph</source>
          <target state="translated">std::iswgraph</target>
        </trans-unit>
        <trans-unit id="04ff732fd40c1089949a2078e4a90c2d90bd0dd9" translate="yes" xml:space="preserve">
          <source>std::iswlower</source>
          <target state="translated">std::iswlower</target>
        </trans-unit>
        <trans-unit id="5e4eebe16d196e07c20d949be05624dde768b0e2" translate="yes" xml:space="preserve">
          <source>std::iswprint</source>
          <target state="translated">std::iswprint</target>
        </trans-unit>
        <trans-unit id="eae74f42e7dde6bf7a3ea5aab26ef3f4d47efcf2" translate="yes" xml:space="preserve">
          <source>std::iswpunct</source>
          <target state="translated">std::iswpunct</target>
        </trans-unit>
        <trans-unit id="47b04280e85c876239ebdbe392371251261e6390" translate="yes" xml:space="preserve">
          <source>std::iswspace</source>
          <target state="translated">std::iswspace</target>
        </trans-unit>
        <trans-unit id="609572e1b5f7343e4ed14833e612ed074185e5a1" translate="yes" xml:space="preserve">
          <source>std::iswupper</source>
          <target state="translated">std::iswupper</target>
        </trans-unit>
        <trans-unit id="45233864f7cebe3beddccce1d882d591a4b27bcc" translate="yes" xml:space="preserve">
          <source>std::iswxdigit</source>
          <target state="translated">std::iswxdigit</target>
        </trans-unit>
        <trans-unit id="2c25ee0e93a33a541fd6b270eb563cd5c6696d0f" translate="yes" xml:space="preserve">
          <source>std::isxdigit</source>
          <target state="translated">std::isxdigit</target>
        </trans-unit>
        <trans-unit id="521e67ccc8c07402151cbbd8a6eef59fa0b6d0cb" translate="yes" xml:space="preserve">
          <source>std::isxdigit(std::locale)</source>
          <target state="translated">std::isxdigit(std::locale)</target>
        </trans-unit>
        <trans-unit id="0aebc17d1de1b41873df4195b9045e12d7f87892" translate="yes" xml:space="preserve">
          <source>std::iter_swap</source>
          <target state="translated">std::iter_swap</target>
        </trans-unit>
        <trans-unit id="b161c97dfced0505c959abfe7c287090f427ba02" translate="yes" xml:space="preserve">
          <source>std::iter_value_t</source>
          <target state="translated">std::iter_value_t</target>
        </trans-unit>
        <trans-unit id="6f272815b6fb9e501a5639723f611eb5f9ec23e5" translate="yes" xml:space="preserve">
          <source>std::iter_value_t, std::iter_reference_t, std::iter_difference_t, std::iter_rvalue_reference_t, std::iter_common_reference_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c3af7ab8459792c2a989523f2cc1a0be485693" translate="yes" xml:space="preserve">
          <source>std::iterator</source>
          <target state="translated">std::iterator</target>
        </trans-unit>
        <trans-unit id="1c08b7f88e6bfd1e92635dfeed7c566321b9b8f8" translate="yes" xml:space="preserve">
          <source>std::iterator_traits</source>
          <target state="translated">std::iterator_traits</target>
        </trans-unit>
        <trans-unit id="ca4cf64d529ecf159f9285f68f160344a3387e5e" translate="yes" xml:space="preserve">
          <source>std::jmp_buf</source>
          <target state="translated">std::jmp_buf</target>
        </trans-unit>
        <trans-unit id="146fb7fbc11f3c93779db81f3c8fa0703c1cbf9e" translate="yes" xml:space="preserve">
          <source>std::kill_dependency</source>
          <target state="translated">std::kill_dependency</target>
        </trans-unit>
        <trans-unit id="e12a50fdaae756c52a4cdd496de4adbe2623e421" translate="yes" xml:space="preserve">
          <source>std::laguerre, std::laguerref, std::laguerrel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e4aa98037853a8d37a61b0a7870c2626d855fa" translate="yes" xml:space="preserve">
          <source>std::laguerrel</source>
          <target state="translated">std::laguerrel</target>
        </trans-unit>
        <trans-unit id="a1dd3b55331bee4fed3e161c2500de88a50c23fe" translate="yes" xml:space="preserve">
          <source>std::launch</source>
          <target state="translated">std::launch</target>
        </trans-unit>
        <trans-unit id="b56ce2b2ce44abe7a96ee15e9f2d21ba6fe9995a" translate="yes" xml:space="preserve">
          <source>std::launder</source>
          <target state="translated">std::launder</target>
        </trans-unit>
        <trans-unit id="48b1f8139052959194aa939d21e6569e75b4c5ac" translate="yes" xml:space="preserve">
          <source>std::lcm</source>
          <target state="translated">std::lcm</target>
        </trans-unit>
        <trans-unit id="a3f274572fa0d82190aa78df25dc2fac00375694" translate="yes" xml:space="preserve">
          <source>std::lconv</source>
          <target state="translated">std::lconv</target>
        </trans-unit>
        <trans-unit id="a8ab32fc6f3f0f7e7f19c63bf454b31800680453" translate="yes" xml:space="preserve">
          <source>std::ldexp, std::ldexpf, std::ldexpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbff8b3cc2a4b73ab487b4f52d4f2fc841ecdde6" translate="yes" xml:space="preserve">
          <source>std::ldexpl</source>
          <target state="translated">std::ldexpl</target>
        </trans-unit>
        <trans-unit id="cf15f20f9db293924bcb3be98afa9377151bad30" translate="yes" xml:space="preserve">
          <source>std::ldiv_t</source>
          <target state="translated">std::ldiv_t</target>
        </trans-unit>
        <trans-unit id="92afa99b708a355ea0435a34024e1fc9e6cdebb2" translate="yes" xml:space="preserve">
          <source>std::left, std::right, std::internal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5206c037f39aa813a256d8fa27cdd6f369f6d839" translate="yes" xml:space="preserve">
          <source>std::legendre, std::legendref, std::legendrel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c1b8a8d6520975a4251957cd2c8571b8737c96" translate="yes" xml:space="preserve">
          <source>std::legendrel</source>
          <target state="translated">std::legendrel</target>
        </trans-unit>
        <trans-unit id="0ed2aa1b37e50a33b0032d1ba9c0a9d28cd627f0" translate="yes" xml:space="preserve">
          <source>std::length_error</source>
          <target state="translated">std::length_error</target>
        </trans-unit>
        <trans-unit id="6b340cdda5b346e88ef73095760cf08ee591ef82" translate="yes" xml:space="preserve">
          <source>std::length_error::length_error</source>
          <target state="translated">std::length_error::length_error</target>
        </trans-unit>
        <trans-unit id="188fd0c95695079da1c45815da108ce2f5b28087" translate="yes" xml:space="preserve">
          <source>std::lerp</source>
          <target state="translated">std::lerp</target>
        </trans-unit>
        <trans-unit id="31c0a7f403b124e8753cfad23131e284642d4238" translate="yes" xml:space="preserve">
          <source>std::less</source>
          <target state="translated">std::less</target>
        </trans-unit>
        <trans-unit id="8b44fdd13028dde4c150df553057d2352c4be8a1" translate="yes" xml:space="preserve">
          <source>std::less&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::less&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="f63b4ed5fedea9f6d5dbb102dc8217600cca9ba5" translate="yes" xml:space="preserve">
          <source>std::less&amp;lt;void&amp;gt;</source>
          <target state="translated">std::less&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="adec77cb1cde163dcb435ede8b634d11ea9250b9" translate="yes" xml:space="preserve">
          <source>std::less::operator()</source>
          <target state="translated">std::less::operator()</target>
        </trans-unit>
        <trans-unit id="75217f58a52845ebbe4ed5d896705c0a1bd72287" translate="yes" xml:space="preserve">
          <source>std::less_equal</source>
          <target state="translated">std::less_equal</target>
        </trans-unit>
        <trans-unit id="54ac468b3ca1a572d3e54128676a7186a1306ae6" translate="yes" xml:space="preserve">
          <source>std::less_equal&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::less_equal&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="faab68079f1b790ffdfdbb4c8f42d611ed0b7eeb" translate="yes" xml:space="preserve">
          <source>std::less_equal&amp;lt;void&amp;gt;</source>
          <target state="translated">std::less_equal&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ec043cfc6807e934c1fb5aa50d37301fa641bbcb" translate="yes" xml:space="preserve">
          <source>std::less_equal::operator()</source>
          <target state="translated">std::less_equal::operator()</target>
        </trans-unit>
        <trans-unit id="0d62f25e69e8059008f2ca924bc38294f137f74b" translate="yes" xml:space="preserve">
          <source>std::lexicographical_compare</source>
          <target state="translated">std::lexicographical_compare</target>
        </trans-unit>
        <trans-unit id="fcf07dfe00a92c63c83f638f899e5c7d688b362a" translate="yes" xml:space="preserve">
          <source>std::lexicographical_compare_3way</source>
          <target state="translated">std::lexicographical_compare_3way</target>
        </trans-unit>
        <trans-unit id="8e92d07a0ad8da8cec5a65788411ece436477dbf" translate="yes" xml:space="preserve">
          <source>std::lgamma, std::lgammaf, std::lgammal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d013e98b32bf09c11e052ecedfb4e9543f8d87" translate="yes" xml:space="preserve">
          <source>std::lgammal</source>
          <target state="translated">std::lgammal</target>
        </trans-unit>
        <trans-unit id="d472db1892296e84da34d3f9925084992bac9a52" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine</source>
          <target state="translated">std::linear_congruential_engine</target>
        </trans-unit>
        <trans-unit id="0d358ca3a3b631d40f86e1852dc384568e931097" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::discard</source>
          <target state="translated">std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::discard</target>
        </trans-unit>
        <trans-unit id="a81f2ea48f33c3b705cd1b1e529ca3e5e1451222" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::linear_congruential_engine</source>
          <target state="translated">std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::linear_congruential_engine</target>
        </trans-unit>
        <trans-unit id="d33dcd64baf0de94571a4b931c9c682130ac4ecc" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::max</source>
          <target state="translated">std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="62fa96d75bd90a08b116acf9d9965b2ca2f46e73" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::min</source>
          <target state="translated">std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="236938a06094e0b33c89803e3018792da21463d5" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::operator()</source>
          <target state="translated">std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="4a8139db379304ff00448ce2b61ee91ba7ee3f40" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::seed</source>
          <target state="translated">std::linear_congruential_engine&amp;lt;UIntType,a,c,m&amp;gt;::seed</target>
        </trans-unit>
        <trans-unit id="54bd4117eaca6c1823dc262005efaccbf5e1d024" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine::discard</source>
          <target state="translated">std::linear_congruential_engine::discard</target>
        </trans-unit>
        <trans-unit id="c57e6df2b7a2fa3142e6b456ab2298a5c6862114" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine::linear_congruential_engine</source>
          <target state="translated">std::linear_congruential_engine::linear_congruential_engine</target>
        </trans-unit>
        <trans-unit id="3be00b42368dc428be30fbe2e5fbc1f992cba76c" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine::max</source>
          <target state="translated">std::linear_congruential_engine::max</target>
        </trans-unit>
        <trans-unit id="7a6b396e3c59040f734ad8524f6a255199fbadba" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine::min</source>
          <target state="translated">std::linear_congruential_engine::min</target>
        </trans-unit>
        <trans-unit id="07968a3071ae01ccd3eaa6d5a762911e4e2ed95e" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine::operator()</source>
          <target state="translated">std::linear_congruential_engine::operator()</target>
        </trans-unit>
        <trans-unit id="bb4fc0ce74cf8da45086918aca03b969ce6b2a76" translate="yes" xml:space="preserve">
          <source>std::linear_congruential_engine::seed</source>
          <target state="translated">std::linear_congruential_engine::seed</target>
        </trans-unit>
        <trans-unit id="7e93af7b4f3a77d3b0ce815933c6d211ef64a463" translate="yes" xml:space="preserve">
          <source>std::list</source>
          <target state="translated">std::list</target>
        </trans-unit>
        <trans-unit id="2eaa5b5113f8c88617ea0519005cfafc1d8b19ca" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::assign</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::assign</target>
        </trans-unit>
        <trans-unit id="8234b1852afa4dcda556d309175c81fa39b38a4b" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::back</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::back</target>
        </trans-unit>
        <trans-unit id="85f85ff1f63cdafda60d6ab56905fdea6b7ffd59" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::begin, std::list&amp;lt;T,Allocator&amp;gt;::cbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f6fd68570bfb5df088b25de4c944e9b123ef50" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::clear</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="931c332b3baa359c8c6a28c1699e5175c3e7dc8a" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="00ccbffa6e849bc59949c551af7062146af200ea" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::emplace_back</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::emplace_back</target>
        </trans-unit>
        <trans-unit id="89b6c2abafc18ea0bb8757e9a859304f47065680" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::emplace_front</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::emplace_front</target>
        </trans-unit>
        <trans-unit id="22b6b3a022b590198813e6413cd0d609b7113eec" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::empty</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="f63c0a7f2bda0084caf8b63456279995a94a94f5" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::end, std::list&amp;lt;T,Allocator&amp;gt;::cend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b1e5fcea65b45114117642232737e39257fb9f" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::erase</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="0fb844a1057c1e19b4827f9087e986ec7101fafe" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::front</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="5ffc0bdf128b763401d47b822744a1cdc4dca0a1" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="3429adb43b4626623648ea670164b7ad08d69b2d" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::insert</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="67db0d48adeeea14f5108a20af360b152b44ee88" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::list</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::list</target>
        </trans-unit>
        <trans-unit id="60bafc419e5c8bd6bc8408bd8b6eeb3d05bd28fc" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="a8a15bf9e1203bdea35fc54ab9484bdac7a6ef3c" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::merge</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="dcf848010de7ea009624734132c6a983790ac1af" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="a2c902568cf523b178b109044fb5a2d7367dec4f" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::pop_back</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::pop_back</target>
        </trans-unit>
        <trans-unit id="17a41c1d9b6edf15ca31f91644c6aa410562ae45" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::pop_front</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::pop_front</target>
        </trans-unit>
        <trans-unit id="3d4d1e7994167c9b5d00fd2e5457b1dfb57a90c9" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::push_back</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::push_back</target>
        </trans-unit>
        <trans-unit id="2b6295262f350eeaee0840f239e57e4401829947" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::push_front</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::push_front</target>
        </trans-unit>
        <trans-unit id="26a6f1e75bc2da38a160344f1357c79f0acece5c" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::rbegin, std::list&amp;lt;T,Allocator&amp;gt;::crbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8554190a59b8ef39e9176f7e517f91eea094281" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::remove, remove_if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebfb128738eaa270bb2740f9dedd83b12a52166" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::rend, std::list&amp;lt;T,Allocator&amp;gt;::crend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b4b6faa321be21d489fc0a56367b498654f6e9" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::resize</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::resize</target>
        </trans-unit>
        <trans-unit id="99de4d7d8651f68a13c986d9d8068940b65ffc78" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::reverse</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::reverse</target>
        </trans-unit>
        <trans-unit id="d2276847233f17370aa178a411ef64811cd83629" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::size</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="49d7d4cab61ab014e523696f1128eed54424393c" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::sort</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::sort</target>
        </trans-unit>
        <trans-unit id="7462030e4b1757244c6fea53d173da5eec3eafaa" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::splice</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::splice</target>
        </trans-unit>
        <trans-unit id="ed13cf3171a47f4c65e4801c0ebfaa083383c372" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::swap</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="dd0893ae758fa0a94121844638bbcd29eed602bc" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::unique</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::unique</target>
        </trans-unit>
        <trans-unit id="d9125e4d6c504ea59b71ab2370329e4e141015cb" translate="yes" xml:space="preserve">
          <source>std::list&amp;lt;T,Allocator&amp;gt;::~list</source>
          <target state="translated">std::list&amp;lt;T,Allocator&amp;gt;::~list</target>
        </trans-unit>
        <trans-unit id="01bf8e500c9bbac8c71213838a595970c94aecf9" translate="yes" xml:space="preserve">
          <source>std::list::assign</source>
          <target state="translated">std::list::assign</target>
        </trans-unit>
        <trans-unit id="aa476d063f4079db4035d16fe02f98e43901fae8" translate="yes" xml:space="preserve">
          <source>std::list::back</source>
          <target state="translated">std::list::back</target>
        </trans-unit>
        <trans-unit id="7ced1dc1c52987b2e5db57085ce3a3dc43da82a1" translate="yes" xml:space="preserve">
          <source>std::list::cbegin</source>
          <target state="translated">std::list::cbegin</target>
        </trans-unit>
        <trans-unit id="db168c641d9cc1efea8a99867d11ad79b956f646" translate="yes" xml:space="preserve">
          <source>std::list::clear</source>
          <target state="translated">std::list::clear</target>
        </trans-unit>
        <trans-unit id="48a162a43a12020397355ca84d92f0ee2665a8f0" translate="yes" xml:space="preserve">
          <source>std::list::emplace</source>
          <target state="translated">std::list::emplace</target>
        </trans-unit>
        <trans-unit id="3f22470bf8f6d9c723ae8c7264421807ec5c19c8" translate="yes" xml:space="preserve">
          <source>std::list::emplace_back</source>
          <target state="translated">std::list::emplace_back</target>
        </trans-unit>
        <trans-unit id="59bff52486bbf40aab93b63accb8626f09ea843f" translate="yes" xml:space="preserve">
          <source>std::list::emplace_front</source>
          <target state="translated">std::list::emplace_front</target>
        </trans-unit>
        <trans-unit id="bc93f44fc6132d849add98d4ec569bd17ca28729" translate="yes" xml:space="preserve">
          <source>std::list::empty</source>
          <target state="translated">std::list::empty</target>
        </trans-unit>
        <trans-unit id="54fc7adb35695916b56122a97df84f4157483953" translate="yes" xml:space="preserve">
          <source>std::list::end</source>
          <target state="translated">std::list::end</target>
        </trans-unit>
        <trans-unit id="c155abb1dcd4e7b0582c9b7b3876b79a69faad29" translate="yes" xml:space="preserve">
          <source>std::list::erase</source>
          <target state="translated">std::list::erase</target>
        </trans-unit>
        <trans-unit id="168b2fae2126de7d74639fed3e9e9473d01c4927" translate="yes" xml:space="preserve">
          <source>std::list::front</source>
          <target state="translated">std::list::front</target>
        </trans-unit>
        <trans-unit id="c4a08522d37549de103eeea9c2e1624ca3608652" translate="yes" xml:space="preserve">
          <source>std::list::get_allocator</source>
          <target state="translated">std::list::get_allocator</target>
        </trans-unit>
        <trans-unit id="bf90649e231efb3d6de91d805a97bc4374a518c7" translate="yes" xml:space="preserve">
          <source>std::list::insert</source>
          <target state="translated">std::list::insert</target>
        </trans-unit>
        <trans-unit id="75af7da7ba156149674c45a34db30ac886279701" translate="yes" xml:space="preserve">
          <source>std::list::list</source>
          <target state="translated">std::list::list</target>
        </trans-unit>
        <trans-unit id="6dedc841cd88f0f548d532965a475172f37af413" translate="yes" xml:space="preserve">
          <source>std::list::max_size</source>
          <target state="translated">std::list::max_size</target>
        </trans-unit>
        <trans-unit id="7b8d5d05f4579a41e0bcccc6ce4613809be09f3a" translate="yes" xml:space="preserve">
          <source>std::list::merge</source>
          <target state="translated">std::list::merge</target>
        </trans-unit>
        <trans-unit id="d562cf1b776a27efd7ba74d9c37d9d99cdb1098f" translate="yes" xml:space="preserve">
          <source>std::list::operator=</source>
          <target state="translated">std::list::operator=</target>
        </trans-unit>
        <trans-unit id="c45872b54798320e85f9c69186dd33626a34f795" translate="yes" xml:space="preserve">
          <source>std::list::pop_back</source>
          <target state="translated">std::list::pop_back</target>
        </trans-unit>
        <trans-unit id="63c0dc5488074202454fef8448817f9040a5d91a" translate="yes" xml:space="preserve">
          <source>std::list::pop_front</source>
          <target state="translated">std::list::pop_front</target>
        </trans-unit>
        <trans-unit id="4147e8f8fc0835863c9cc2e89651721263735664" translate="yes" xml:space="preserve">
          <source>std::list::push_back</source>
          <target state="translated">std::list::push_back</target>
        </trans-unit>
        <trans-unit id="45a0c15059abd0d42d25ae81bef26f568cef1de3" translate="yes" xml:space="preserve">
          <source>std::list::push_front</source>
          <target state="translated">std::list::push_front</target>
        </trans-unit>
        <trans-unit id="6bc9ac0f688a382469407c1aa641468cc4130a09" translate="yes" xml:space="preserve">
          <source>std::list::rbegin</source>
          <target state="translated">std::list::rbegin</target>
        </trans-unit>
        <trans-unit id="bf93d2d643556b5fb7e426288fa9839273a325f1" translate="yes" xml:space="preserve">
          <source>std::list::remove</source>
          <target state="translated">std::list::remove</target>
        </trans-unit>
        <trans-unit id="0a89f85f12f1576e0d84960b1fca12d2e8175bbb" translate="yes" xml:space="preserve">
          <source>std::list::rend</source>
          <target state="translated">std::list::rend</target>
        </trans-unit>
        <trans-unit id="966b800e431144a6b35a1f17ceea3d088d0d0706" translate="yes" xml:space="preserve">
          <source>std::list::resize</source>
          <target state="translated">std::list::resize</target>
        </trans-unit>
        <trans-unit id="162fad64fafcb59f68c2f37d8c10a1bc3344563d" translate="yes" xml:space="preserve">
          <source>std::list::reverse</source>
          <target state="translated">std::list::reverse</target>
        </trans-unit>
        <trans-unit id="73d7dfd228aa5628155e5001817606e857513fdc" translate="yes" xml:space="preserve">
          <source>std::list::size</source>
          <target state="translated">std::list::size</target>
        </trans-unit>
        <trans-unit id="aca5a5c8c11597f0f13aecd40020a993aba68314" translate="yes" xml:space="preserve">
          <source>std::list::sort</source>
          <target state="translated">std::list::sort</target>
        </trans-unit>
        <trans-unit id="ad62f12e4e711250f911a215aa50695ab95ee5bf" translate="yes" xml:space="preserve">
          <source>std::list::splice</source>
          <target state="translated">std::list::splice</target>
        </trans-unit>
        <trans-unit id="b7ae3bd4a464d40018c8985e72ad8b4594857c95" translate="yes" xml:space="preserve">
          <source>std::list::swap</source>
          <target state="translated">std::list::swap</target>
        </trans-unit>
        <trans-unit id="2a08195b9a49546d2f621d3786c1be6e5f6c7b01" translate="yes" xml:space="preserve">
          <source>std::list::unique</source>
          <target state="translated">std::list::unique</target>
        </trans-unit>
        <trans-unit id="319d7e8e757b03baa607c19b5062b0f0563a0170" translate="yes" xml:space="preserve">
          <source>std::list::~list</source>
          <target state="translated">std::list::~list</target>
        </trans-unit>
        <trans-unit id="76e1bcb40042eee162ff86a5229ecfe67d2207f2" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;d</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;d</target>
        </trans-unit>
        <trans-unit id="a79fd464355ad71f5b302d916e5c9f73e5c7b9ec" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;h</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;h</target>
        </trans-unit>
        <trans-unit id="bc7f348ffa15322d033168c89e58a07610997ff8" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;min</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;min</target>
        </trans-unit>
        <trans-unit id="f621b3fb776b89622dc864ac8fdb40a73b70931f" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;ms</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;ms</target>
        </trans-unit>
        <trans-unit id="cc93d24de365656870799f53ff61af5a612cb10f" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;ns</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;ns</target>
        </trans-unit>
        <trans-unit id="940f6f9da7b25b84cf9cdaf0c786abb995ccf29d" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;s</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;s</target>
        </trans-unit>
        <trans-unit id="480748ecff7cbb7ca9d5a1f367e0519a3097f6d8" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;us</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;us</target>
        </trans-unit>
        <trans-unit id="c36fbd94e73badf10ab0bc62b689ead6ea99c074" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&quot;&quot;y</source>
          <target state="translated">std::literals::chrono_literals::operator&quot;&quot;y</target>
        </trans-unit>
        <trans-unit id="c4dc3b4d7ce53f0f75d32e9e2a5df7f11737fe0c" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;d</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;d</target>
        </trans-unit>
        <trans-unit id="49d3e3fcfd90ce0a9f2d1b18e7b2609dd83e851f" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;h</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;h</target>
        </trans-unit>
        <trans-unit id="3a1ce25150ea5231ae52e589d88de1c97cfdee77" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;min</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;min</target>
        </trans-unit>
        <trans-unit id="09370c79910b9872d64af307c4b548d63ae6f77a" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;ms</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;ms</target>
        </trans-unit>
        <trans-unit id="0634174c0afb1cdde9c956a5ab3716d2c48b13ec" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;ns</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;ns</target>
        </trans-unit>
        <trans-unit id="3d91959dd9acfeb4b744a2200b379bb90967e2b2" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;s</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;s</target>
        </trans-unit>
        <trans-unit id="08c5aed777b26afedf34c2174db7b3dad72e36c7" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;us</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;us</target>
        </trans-unit>
        <trans-unit id="ab2a6a16e7909f35a0b95d6fbf8e32bc2653070f" translate="yes" xml:space="preserve">
          <source>std::literals::chrono_literals::operator&amp;quot;&amp;quot;y</source>
          <target state="translated">std::literals::chrono_literals::operator&amp;quot;&amp;quot;y</target>
        </trans-unit>
        <trans-unit id="22cd81f77744b9fb7515999e2093243baeb146bb" translate="yes" xml:space="preserve">
          <source>std::literals::complex_literals::operator&quot;&quot;i, operator&quot;&quot;if, operator&quot;&quot;il</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3342e5b8d22d115daa765d1f076162a9a1915bf4" translate="yes" xml:space="preserve">
          <source>std::literals::complex_literals::operators</source>
          <target state="translated">std::literals::complex_literals::operators</target>
        </trans-unit>
        <trans-unit id="5347fc37ae7d9c11a3cc46ef9d6f75410e89a9c1" translate="yes" xml:space="preserve">
          <source>std::literals::string_literals::operator&quot;&quot;s</source>
          <target state="translated">std::literals::string_literals::operator&quot;&quot;s</target>
        </trans-unit>
        <trans-unit id="4efc83a665cde33008d101c53fdd23a83c11371b" translate="yes" xml:space="preserve">
          <source>std::literals::string_literals::operator&amp;quot;&amp;quot;s</source>
          <target state="translated">std::literals::string_literals::operator&amp;quot;&amp;quot;s</target>
        </trans-unit>
        <trans-unit id="f949d853aca89a25928b565067e86052d12598c0" translate="yes" xml:space="preserve">
          <source>std::literals::string_view_literals::operator&quot;&quot;sv</source>
          <target state="translated">std::literals::string_view_literals::operator&quot;&quot;sv</target>
        </trans-unit>
        <trans-unit id="a2866aae4e7d3908fc79dfc33a4906706eb82fa2" translate="yes" xml:space="preserve">
          <source>std::literals::string_view_literals::operator&amp;quot;&amp;quot;sv</source>
          <target state="translated">std::literals::string_view_literals::operator&amp;quot;&amp;quot;sv</target>
        </trans-unit>
        <trans-unit id="9849efed2e3a0c6c67bd4b271be07df6da5115dc" translate="yes" xml:space="preserve">
          <source>std::llabs</source>
          <target state="translated">std::llabs</target>
        </trans-unit>
        <trans-unit id="23fa4779f327eb2234a57526e3ce8c63cf449c07" translate="yes" xml:space="preserve">
          <source>std::lldiv</source>
          <target state="translated">std::lldiv</target>
        </trans-unit>
        <trans-unit id="f8f09a9199ab85abee106d17a85c3900b406de30" translate="yes" xml:space="preserve">
          <source>std::lldiv_t</source>
          <target state="translated">std::lldiv_t</target>
        </trans-unit>
        <trans-unit id="08f18c8f53880ef2a2e7b8a1ad0dfce8499f6b71" translate="yes" xml:space="preserve">
          <source>std::locale</source>
          <target state="translated">std::locale</target>
        </trans-unit>
        <trans-unit id="ee46296fb1d032d1c66b62f91780a20f74f2a6e5" translate="yes" xml:space="preserve">
          <source>std::locale::classic</source>
          <target state="translated">std::locale::classic</target>
        </trans-unit>
        <trans-unit id="3fc2cb4bc660272059c2da873b9643709a007ed2" translate="yes" xml:space="preserve">
          <source>std::locale::combine</source>
          <target state="translated">std::locale::combine</target>
        </trans-unit>
        <trans-unit id="2024b6df4a7a0b8902f672ecb33588e45bf4c088" translate="yes" xml:space="preserve">
          <source>std::locale::facet</source>
          <target state="translated">std::locale::facet</target>
        </trans-unit>
        <trans-unit id="20bdcde88768187719c4ef2f15c471a257e9162a" translate="yes" xml:space="preserve">
          <source>std::locale::facet::facet</source>
          <target state="translated">std::locale::facet::facet</target>
        </trans-unit>
        <trans-unit id="c541349fff213697aa9ef3a93a305db0633a6255" translate="yes" xml:space="preserve">
          <source>std::locale::global</source>
          <target state="translated">std::locale::global</target>
        </trans-unit>
        <trans-unit id="a4c4dad55e1e1b824eb9357a8265ab121c9aa20d" translate="yes" xml:space="preserve">
          <source>std::locale::id</source>
          <target state="translated">std::locale::id</target>
        </trans-unit>
        <trans-unit id="f2a5ba1bcde50b84df8075fcada15ba488177fd9" translate="yes" xml:space="preserve">
          <source>std::locale::id::id</source>
          <target state="translated">std::locale::id::id</target>
        </trans-unit>
        <trans-unit id="344663167d24a4643d88623cd9d95789f8837a45" translate="yes" xml:space="preserve">
          <source>std::locale::locale</source>
          <target state="translated">std::locale::locale</target>
        </trans-unit>
        <trans-unit id="71fde511fbaa4931bb59a316f9e1dd48a37aad24" translate="yes" xml:space="preserve">
          <source>std::locale::name</source>
          <target state="translated">std::locale::name</target>
        </trans-unit>
        <trans-unit id="f9e04882ca814a5f87d0cdda275fb6365a72036f" translate="yes" xml:space="preserve">
          <source>std::locale::operator()</source>
          <target state="translated">std::locale::operator()</target>
        </trans-unit>
        <trans-unit id="bdb104e1aea153f3d875991d7450d0434efaf9d5" translate="yes" xml:space="preserve">
          <source>std::locale::operator=</source>
          <target state="translated">std::locale::operator=</target>
        </trans-unit>
        <trans-unit id="2a720a308ea536422c3bab06687b57a2d8324ec0" translate="yes" xml:space="preserve">
          <source>std::locale::operator==, operator!=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072b1babda6c908a94980286337f9cce160b5ad8" translate="yes" xml:space="preserve">
          <source>std::locale::operators (operator!=)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e17131e48f33221c666b7a7c004fade91a1eb1" translate="yes" xml:space="preserve">
          <source>std::locale::~locale</source>
          <target state="translated">std::locale::~locale</target>
        </trans-unit>
        <trans-unit id="62b592e7353887ffcae415d23ebb51b58d3f57d4" translate="yes" xml:space="preserve">
          <source>std::localeconv</source>
          <target state="translated">std::localeconv</target>
        </trans-unit>
        <trans-unit id="3f865fa610a5f59dc798088af17d4be52e3ff32b" translate="yes" xml:space="preserve">
          <source>std::localtime</source>
          <target state="translated">std::localtime</target>
        </trans-unit>
        <trans-unit id="c93cd6b18640c0630b56fd19590cf18dbea8ad41" translate="yes" xml:space="preserve">
          <source>std::lock</source>
          <target state="translated">std::lock</target>
        </trans-unit>
        <trans-unit id="fff9cb8517359437160d72c702f15663b943ab0a" translate="yes" xml:space="preserve">
          <source>std::lock_guard</source>
          <target state="translated">std::lock_guard</target>
        </trans-unit>
        <trans-unit id="c3cecd362444c7fed94943ebf9128d843bed6ed4" translate="yes" xml:space="preserve">
          <source>std::lock_guard&amp;lt;Mutex&amp;gt;::lock_guard</source>
          <target state="translated">std::lock_guard&amp;lt;Mutex&amp;gt;::lock_guard</target>
        </trans-unit>
        <trans-unit id="67d5496569e693b4a98048b4267bb9a54506a8f2" translate="yes" xml:space="preserve">
          <source>std::lock_guard&amp;lt;Mutex&amp;gt;::~lock_guard</source>
          <target state="translated">std::lock_guard&amp;lt;Mutex&amp;gt;::~lock_guard</target>
        </trans-unit>
        <trans-unit id="dea55b7edfada2e9a4c66c23689424aa43de636e" translate="yes" xml:space="preserve">
          <source>std::lock_guard::lock_guard</source>
          <target state="translated">std::lock_guard::lock_guard</target>
        </trans-unit>
        <trans-unit id="7df68dd2698422c661a4b5ce710741222719e35d" translate="yes" xml:space="preserve">
          <source>std::lock_guard::~lock_guard</source>
          <target state="translated">std::lock_guard::~lock_guard</target>
        </trans-unit>
        <trans-unit id="d749c19d8d854eed3ac6e5c3cb1f6d92a8b94f29" translate="yes" xml:space="preserve">
          <source>std::log(std::complex)</source>
          <target state="translated">std::log(std::complex)</target>
        </trans-unit>
        <trans-unit id="e7fce8fab800fb520bd0b6e61dccabfb74e96c16" translate="yes" xml:space="preserve">
          <source>std::log(std::valarray)</source>
          <target state="translated">std::log(std::valarray)</target>
        </trans-unit>
        <trans-unit id="a7c646c529c4238b4a5e5f8d2e53e9cc23d64138" translate="yes" xml:space="preserve">
          <source>std::log, std::logf, std::logl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eb837a96a8575fd3b246d4ed010877bfccef21" translate="yes" xml:space="preserve">
          <source>std::log10(std::complex)</source>
          <target state="translated">std::log10(std::complex)</target>
        </trans-unit>
        <trans-unit id="0c9ceaf9a14948321d09f1cac51b58bb2eb5d3e4" translate="yes" xml:space="preserve">
          <source>std::log10(std::valarray)</source>
          <target state="translated">std::log10(std::valarray)</target>
        </trans-unit>
        <trans-unit id="87c1440d97c0c00ecda4b747bf5f828bbb47fcff" translate="yes" xml:space="preserve">
          <source>std::log10, std::log10f, std::log10l</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa430124d31e6a5f94d95084a0ea0c5e7fa50036" translate="yes" xml:space="preserve">
          <source>std::log10l</source>
          <target state="translated">std::log10l</target>
        </trans-unit>
        <trans-unit id="3a6ab0f25a9c1c089855ea7dd1aa59be1955b993" translate="yes" xml:space="preserve">
          <source>std::log1p, std::log1pf, std::log1pl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a492ae7910968bc9ca89bb3e26e9dbb95e8fdf" translate="yes" xml:space="preserve">
          <source>std::log1pl</source>
          <target state="translated">std::log1pl</target>
        </trans-unit>
        <trans-unit id="674a337b2aebd3bcdfb5a1b7bd0ae817bfb2f709" translate="yes" xml:space="preserve">
          <source>std::log2, std::log2f, std::log2l</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fa1f3604e7d2bb81ad791e0de5c7ad08b3b7e9" translate="yes" xml:space="preserve">
          <source>std::log2l</source>
          <target state="translated">std::log2l</target>
        </trans-unit>
        <trans-unit id="3f78b7224c8545bd6376fb85904166b3993107cb" translate="yes" xml:space="preserve">
          <source>std::log2p1</source>
          <target state="translated">std::log2p1</target>
        </trans-unit>
        <trans-unit id="3814f5fe531d80913599706e6320f06416e501a0" translate="yes" xml:space="preserve">
          <source>std::logb, std::logbf, std::logbl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a129a83607b39a7fe6ec4ac9cf5e107cdda1a2" translate="yes" xml:space="preserve">
          <source>std::logbl</source>
          <target state="translated">std::logbl</target>
        </trans-unit>
        <trans-unit id="f36f15a499cdb83ca1082ba8d66da30b3cf4958d" translate="yes" xml:space="preserve">
          <source>std::logic_error</source>
          <target state="translated">std::logic_error</target>
        </trans-unit>
        <trans-unit id="0d26b45f538a93899a1f6ebfc5a3754b17df5dbc" translate="yes" xml:space="preserve">
          <source>std::logic_error::logic_error</source>
          <target state="translated">std::logic_error::logic_error</target>
        </trans-unit>
        <trans-unit id="15c95eb3d3b323d13c4fddecdcfa0e73b7927aea" translate="yes" xml:space="preserve">
          <source>std::logical_and</source>
          <target state="translated">std::logical_and</target>
        </trans-unit>
        <trans-unit id="6368879b6072b1d92a31ccfd522960fc71ae5d02" translate="yes" xml:space="preserve">
          <source>std::logical_and&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::logical_and&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="184825bb633f54e42fed7f1e5618b4d853ab299e" translate="yes" xml:space="preserve">
          <source>std::logical_and&amp;lt;void&amp;gt;</source>
          <target state="translated">std::logical_and&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="82596ae76e447a833988b7fc34ea35b2ed7fc190" translate="yes" xml:space="preserve">
          <source>std::logical_and::operator()</source>
          <target state="translated">std::logical_and::operator()</target>
        </trans-unit>
        <trans-unit id="9063c70c0482ad18f55066b5159e2e0b52360669" translate="yes" xml:space="preserve">
          <source>std::logical_not</source>
          <target state="translated">std::logical_not</target>
        </trans-unit>
        <trans-unit id="d71929c2c86924025e27adb0320614efb46d180d" translate="yes" xml:space="preserve">
          <source>std::logical_not&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::logical_not&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="e13f1343d8d0b08d0d1c07366c1a77b58f8aa1d4" translate="yes" xml:space="preserve">
          <source>std::logical_not&amp;lt;void&amp;gt;</source>
          <target state="translated">std::logical_not&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5e245c62a0b507cd7f462f932b9fdafdfca861d5" translate="yes" xml:space="preserve">
          <source>std::logical_not::operator()</source>
          <target state="translated">std::logical_not::operator()</target>
        </trans-unit>
        <trans-unit id="2ee18ddc65339a3c150d3a27528b6d988a83da57" translate="yes" xml:space="preserve">
          <source>std::logical_or</source>
          <target state="translated">std::logical_or</target>
        </trans-unit>
        <trans-unit id="c8b55a25a4035c9c179c5ea647220ef7d37912e4" translate="yes" xml:space="preserve">
          <source>std::logical_or&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::logical_or&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="30c9d21652eeb4130684d384de0c8e62d1ea5398" translate="yes" xml:space="preserve">
          <source>std::logical_or&amp;lt;void&amp;gt;</source>
          <target state="translated">std::logical_or&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4bb984f59283e54274d6477f0b93f1d7d86531cb" translate="yes" xml:space="preserve">
          <source>std::logical_or::operator()</source>
          <target state="translated">std::logical_or::operator()</target>
        </trans-unit>
        <trans-unit id="e430db04f7d621cf34c890906c195102d00466b8" translate="yes" xml:space="preserve">
          <source>std::logl</source>
          <target state="translated">std::logl</target>
        </trans-unit>
        <trans-unit id="ee45ccab917762fef78f758ecee7f8a112f32f24" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution</source>
          <target state="translated">std::lognormal_distribution</target>
        </trans-unit>
        <trans-unit id="1d7519d7053bee5fc90e766ab05336128054bc18" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::lognormal_distribution</source>
          <target state="translated">std::lognormal_distribution&amp;lt;RealType&amp;gt;::lognormal_distribution</target>
        </trans-unit>
        <trans-unit id="b14e5692913f269253c64d07cfa8ecfb0c9a12c8" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::m, s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebafd26cb58d65e710dbd9c1f3862f1fcae5ff5" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::lognormal_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="b962381e8cafa248835e0abf1f0258c09ed9d6d9" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::lognormal_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="e939a8bb3bb5ed2737e40b1de524c05315837a4f" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::lognormal_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="aaab26771762493af8bd28c017940c1b092bf305" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::lognormal_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="bbb7b3005e135b4ec0b369d298e378af61bb2806" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::lognormal_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="62d0d69c278267b2d5a1fe80fdf35bd181aad258" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::lognormal_distribution</source>
          <target state="translated">std::lognormal_distribution::lognormal_distribution</target>
        </trans-unit>
        <trans-unit id="a2a49020664b03e55ec9d0e4d2d083c0de561eda" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::m</source>
          <target state="translated">std::lognormal_distribution::m</target>
        </trans-unit>
        <trans-unit id="1e7854bbf1c947f9746e534243b20fb3605eba62" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::max</source>
          <target state="translated">std::lognormal_distribution::max</target>
        </trans-unit>
        <trans-unit id="48a804544269dbdecb387b3400f2b64140394e96" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::min</source>
          <target state="translated">std::lognormal_distribution::min</target>
        </trans-unit>
        <trans-unit id="9bc738fe3d280956cb51a16f7899105b33f7a6c2" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::operator()</source>
          <target state="translated">std::lognormal_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="ac604e956dc3926f846b311d7cb046b16e2b0f9d" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::param</source>
          <target state="translated">std::lognormal_distribution::param</target>
        </trans-unit>
        <trans-unit id="be0e748265ecd7bb8b54e14871a717ac392521f4" translate="yes" xml:space="preserve">
          <source>std::lognormal_distribution::reset</source>
          <target state="translated">std::lognormal_distribution::reset</target>
        </trans-unit>
        <trans-unit id="9730850709f863ab67b702eee94b03051d31f6fc" translate="yes" xml:space="preserve">
          <source>std::longjmp</source>
          <target state="translated">std::longjmp</target>
        </trans-unit>
        <trans-unit id="e4af7f3948d933c013caa7ab1dedacbf6eb3db9e" translate="yes" xml:space="preserve">
          <source>std::lower_bound</source>
          <target state="translated">std::lower_bound</target>
        </trans-unit>
        <trans-unit id="1849e9bd7b85aa32fe72bb11f271e9ebdfa4c152" translate="yes" xml:space="preserve">
          <source>std::make_any</source>
          <target state="translated">std::make_any</target>
        </trans-unit>
        <trans-unit id="8101cbfb6687d0c366a961296ba1f827ad3d77de" translate="yes" xml:space="preserve">
          <source>std::make_error_code(std::errc)</source>
          <target state="translated">std::make_error_code(std::errc)</target>
        </trans-unit>
        <trans-unit id="785c210f8383486ca8d87707f6ad29f5d4a24096" translate="yes" xml:space="preserve">
          <source>std::make_error_code(std::future_errc)</source>
          <target state="translated">std::make_error_code(std::future_errc)</target>
        </trans-unit>
        <trans-unit id="7517589f3ad847652cb3913f71fa86d203ecc6f9" translate="yes" xml:space="preserve">
          <source>std::make_error_code(std::io_errc)</source>
          <target state="translated">std::make_error_code(std::io_errc)</target>
        </trans-unit>
        <trans-unit id="79c44798604e9efc4fc40e567393676e075c451e" translate="yes" xml:space="preserve">
          <source>std::make_error_condition(std::errc)</source>
          <target state="translated">std::make_error_condition(std::errc)</target>
        </trans-unit>
        <trans-unit id="77a0dd8a77d9f53eca549529e15da70ba28f9c41" translate="yes" xml:space="preserve">
          <source>std::make_error_condition(std::future_errc)</source>
          <target state="translated">std::make_error_condition(std::future_errc)</target>
        </trans-unit>
        <trans-unit id="bb5b5e1ae0ff008feb192137bcf7914f16e5a69c" translate="yes" xml:space="preserve">
          <source>std::make_error_condition(std::io_errc)</source>
          <target state="translated">std::make_error_condition(std::io_errc)</target>
        </trans-unit>
        <trans-unit id="7441b91be450070cf113289a7bca8cd8ce199b8b" translate="yes" xml:space="preserve">
          <source>std::make_exception_ptr</source>
          <target state="translated">std::make_exception_ptr</target>
        </trans-unit>
        <trans-unit id="f10196b5fb4315fd5eed20b994405894847d39fe" translate="yes" xml:space="preserve">
          <source>std::make_from_tuple</source>
          <target state="translated">std::make_from_tuple</target>
        </trans-unit>
        <trans-unit id="553a474b8ff129a6db115da8855f4508fa68ea2a" translate="yes" xml:space="preserve">
          <source>std::make_heap</source>
          <target state="translated">std::make_heap</target>
        </trans-unit>
        <trans-unit id="9d3d1c782d545716a9a4381c797ec17559fcda10" translate="yes" xml:space="preserve">
          <source>std::make_move_iterator</source>
          <target state="translated">std::make_move_iterator</target>
        </trans-unit>
        <trans-unit id="9c05884fbb0272fae1783631457ff53b8dd27c26" translate="yes" xml:space="preserve">
          <source>std::make_obj_using_allocator</source>
          <target state="translated">std::make_obj_using_allocator</target>
        </trans-unit>
        <trans-unit id="40415c21024f97a54e3d7caf2ba4300ecaab799d" translate="yes" xml:space="preserve">
          <source>std::make_optional</source>
          <target state="translated">std::make_optional</target>
        </trans-unit>
        <trans-unit id="f4971ee76e8e8243ac913a67ff2b08077fb7ce7f" translate="yes" xml:space="preserve">
          <source>std::make_pair</source>
          <target state="translated">std::make_pair</target>
        </trans-unit>
        <trans-unit id="d099d98bfafeecded620ee62b406708eca46ff8f" translate="yes" xml:space="preserve">
          <source>std::make_reverse_iterator</source>
          <target state="translated">std::make_reverse_iterator</target>
        </trans-unit>
        <trans-unit id="85c99d959d1bb88230dad40ae2bb4a49cb264877" translate="yes" xml:space="preserve">
          <source>std::make_shared, std::make_shared_default_init</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7815ca57cb463f7a87de8105288dc806b10db97a" translate="yes" xml:space="preserve">
          <source>std::make_shared_default_init</source>
          <target state="translated">std::make_shared_default_init</target>
        </trans-unit>
        <trans-unit id="55ba045a32f7c46019f150dd1bccc157e6456b90" translate="yes" xml:space="preserve">
          <source>std::make_signed</source>
          <target state="translated">std::make_signed</target>
        </trans-unit>
        <trans-unit id="ecac68c2986dee4b6264855c401fd15ef4f363c3" translate="yes" xml:space="preserve">
          <source>std::make_tuple</source>
          <target state="translated">std::make_tuple</target>
        </trans-unit>
        <trans-unit id="7601eabf170478a6ad40d2e10457313a2390859b" translate="yes" xml:space="preserve">
          <source>std::make_unique, std::make_unique_default_init</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f641e5fc3838317902d0379bdd2d87da0c1229d" translate="yes" xml:space="preserve">
          <source>std::make_unique_default_init</source>
          <target state="translated">std::make_unique_default_init</target>
        </trans-unit>
        <trans-unit id="c7bdce942b884fd56bd8ce502bfa4238ea7ed925" translate="yes" xml:space="preserve">
          <source>std::make_unsigned</source>
          <target state="translated">std::make_unsigned</target>
        </trans-unit>
        <trans-unit id="ba6426dc1e6c9360a035abe3aeaa75f880f4fe58" translate="yes" xml:space="preserve">
          <source>std::malloc</source>
          <target state="translated">std::malloc</target>
        </trans-unit>
        <trans-unit id="89428a620b00ae0ed3cc096ef0015987f0a1336b" translate="yes" xml:space="preserve">
          <source>std::map</source>
          <target state="translated">std::map</target>
        </trans-unit>
        <trans-unit id="d71bb204be0b71c9599e64d347ae4787ae1f5b8c" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::operator()</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::operator()</target>
        </trans-unit>
        <trans-unit id="1b53cc89134d3d3cbc712a90fbf22914e9c2d068" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::value_compare</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::value_compare</target>
        </trans-unit>
        <trans-unit id="84b4f83aff4d6a0ed507f98d55219e219d4754b3" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::at</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::at</target>
        </trans-unit>
        <trans-unit id="1c169970fa736bea4668ab56dd5731f43ccb70b2" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::begin, std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::cbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f675f1a8d77a2a122f6c02788066dea9e8b321d" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::clear</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="dff6dcd3744305b3bc2cef2be9f29b65d85440bb" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::contains</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::contains</target>
        </trans-unit>
        <trans-unit id="e00ec80d1e6d544d63cf96aa78b5d370e42a923b" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::count</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::count</target>
        </trans-unit>
        <trans-unit id="cbdee504c4b083450d4472fab8c61e0b38cda0ab" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="bf11b60e249aecdaf28dcb53eaaa0820d75aadbf" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace_hint</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace_hint</target>
        </trans-unit>
        <trans-unit id="f617b14487639b0c8e0a34300c94fe2a53e3e990" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::empty</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="77acd6832c5f409f2adce8373ff86929da54cb88" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::end, std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::cend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023e401a599a6f43716670e6e2e7cbfeefc05c94" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::equal_range</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::equal_range</target>
        </trans-unit>
        <trans-unit id="9172e20defb00bb35fac2dde574401d722a4a40b" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::erase</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="c65344ef34952b955db5a67be642f58966ec4367" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::extract</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::extract</target>
        </trans-unit>
        <trans-unit id="0a6f985921f2a54cad478045a569b840eb34b6b2" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::find</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="7c60cb67db26c4feef50f993296dd5d88d4300ab" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="173c917e7292bc29766d88140d1dd8b03f0537a5" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="e95e9e661ee3354c12b54816badc4d6299370ab6" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert_or_assign</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert_or_assign</target>
        </trans-unit>
        <trans-unit id="f61c2d3b4245ac4f1d6a96bd754bc63d86260efa" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::key_comp</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::key_comp</target>
        </trans-unit>
        <trans-unit id="327d53423b9e1f7bdf39acd92d56994e13b930b0" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::lower_bound</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::lower_bound</target>
        </trans-unit>
        <trans-unit id="2a8d5ac5cfc559e7d1359c1b65536a82bb976390" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::map</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::map</target>
        </trans-unit>
        <trans-unit id="71db9b7716994c50cd1cbc8852b304601783bba8" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="927202e47b41bfa86c4555039ca4546b7d5289a3" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::merge</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="a96a96d81a3f6f85610fff5ecf4da83db043d709" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="15fbbfd6929698740a0783408afc41a00f224976" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator[]</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="1c258172132b2c1053f5d8654fccd136262d3142" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::rbegin, std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::crbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8d4b047fdd84b3f361d112e5a07590fb7fb3f2" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::rend, std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::crend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a132721e69d3cfa967c69e9426358e6e756bbe4" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::size</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="357adc22d4cf42e687f71010c6c967f2923f1a76" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::swap</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="fc4509af06d3bfb971a9d02b42ea6b514a27356e" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::try_emplace</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::try_emplace</target>
        </trans-unit>
        <trans-unit id="f0342e150d92de3f310d69e13e82ffade6e4e6db" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::upper_bound</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::upper_bound</target>
        </trans-unit>
        <trans-unit id="8f43395a7df37d7c14db76d45ceb610f930b4685" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_comp</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_comp</target>
        </trans-unit>
        <trans-unit id="ff3ff7e6bb76db50e2ad80551172c4887e8f83dd" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_compare</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_compare</target>
        </trans-unit>
        <trans-unit id="05b44d6815475369da9387444c84de952cf7277c" translate="yes" xml:space="preserve">
          <source>std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::~map</source>
          <target state="translated">std::map&amp;lt;Key,T,Compare,Allocator&amp;gt;::~map</target>
        </trans-unit>
        <trans-unit id="95ff0a9487205a8350eb579f1df10a26086ae393" translate="yes" xml:space="preserve">
          <source>std::map::at</source>
          <target state="translated">std::map::at</target>
        </trans-unit>
        <trans-unit id="07c78266e0c3700462403b9754e56621c37a70ae" translate="yes" xml:space="preserve">
          <source>std::map::cbegin</source>
          <target state="translated">std::map::cbegin</target>
        </trans-unit>
        <trans-unit id="e263fc704a8ac54ac07be68d8637f8d8dfb22682" translate="yes" xml:space="preserve">
          <source>std::map::clear</source>
          <target state="translated">std::map::clear</target>
        </trans-unit>
        <trans-unit id="7226bd9f89d8aedc2fb2538017f8d6a40732ceda" translate="yes" xml:space="preserve">
          <source>std::map::contains</source>
          <target state="translated">std::map::contains</target>
        </trans-unit>
        <trans-unit id="f634b09b7c9963a22ad297a114dcc60aafde2e47" translate="yes" xml:space="preserve">
          <source>std::map::count</source>
          <target state="translated">std::map::count</target>
        </trans-unit>
        <trans-unit id="f7ad4aab8098b8cf8accaf88484a25cfe8235a0e" translate="yes" xml:space="preserve">
          <source>std::map::emplace</source>
          <target state="translated">std::map::emplace</target>
        </trans-unit>
        <trans-unit id="8b282537022759f01e04cf0ee7ccb1c272e50674" translate="yes" xml:space="preserve">
          <source>std::map::emplace_hint</source>
          <target state="translated">std::map::emplace_hint</target>
        </trans-unit>
        <trans-unit id="8f6102de9705d874d00ac37552f39c51a2555780" translate="yes" xml:space="preserve">
          <source>std::map::empty</source>
          <target state="translated">std::map::empty</target>
        </trans-unit>
        <trans-unit id="2f80960bb622f3b45e2867b5c32f55e1c1e597eb" translate="yes" xml:space="preserve">
          <source>std::map::end</source>
          <target state="translated">std::map::end</target>
        </trans-unit>
        <trans-unit id="e7ab7bb35d0dfd9108f7073497619a8fca56377b" translate="yes" xml:space="preserve">
          <source>std::map::equal_range</source>
          <target state="translated">std::map::equal_range</target>
        </trans-unit>
        <trans-unit id="1560b56734e8678385b2f06500a0fa9bcbae6d0c" translate="yes" xml:space="preserve">
          <source>std::map::erase</source>
          <target state="translated">std::map::erase</target>
        </trans-unit>
        <trans-unit id="4c2a44525e5417fdc9897356a9900cc2013712b4" translate="yes" xml:space="preserve">
          <source>std::map::extract</source>
          <target state="translated">std::map::extract</target>
        </trans-unit>
        <trans-unit id="0d1e1f65cb841b6171fc31439000696d1065f699" translate="yes" xml:space="preserve">
          <source>std::map::find</source>
          <target state="translated">std::map::find</target>
        </trans-unit>
        <trans-unit id="9e0f04cf42fd5fd4a4c7a8ce3028d54b599b0397" translate="yes" xml:space="preserve">
          <source>std::map::get_allocator</source>
          <target state="translated">std::map::get_allocator</target>
        </trans-unit>
        <trans-unit id="2b3beb582e6cafbf0a5daab2a594db336966374f" translate="yes" xml:space="preserve">
          <source>std::map::insert</source>
          <target state="translated">std::map::insert</target>
        </trans-unit>
        <trans-unit id="292c2c70c8d58e250cbf44bd3e6b33b043f5a6dd" translate="yes" xml:space="preserve">
          <source>std::map::insert_or_assign</source>
          <target state="translated">std::map::insert_or_assign</target>
        </trans-unit>
        <trans-unit id="1dbb35d124532e4725e1c589b0b9db6693a6eead" translate="yes" xml:space="preserve">
          <source>std::map::key_comp</source>
          <target state="translated">std::map::key_comp</target>
        </trans-unit>
        <trans-unit id="f4b0ef6a47d7c9d65ddb32c99e70b88ed1af653d" translate="yes" xml:space="preserve">
          <source>std::map::lower_bound</source>
          <target state="translated">std::map::lower_bound</target>
        </trans-unit>
        <trans-unit id="4af238870c47214b7886bcb4361058ec1328a0d9" translate="yes" xml:space="preserve">
          <source>std::map::map</source>
          <target state="translated">std::map::map</target>
        </trans-unit>
        <trans-unit id="f600792bfa7936f059ec098bc1f1204d9cebf5b4" translate="yes" xml:space="preserve">
          <source>std::map::max_size</source>
          <target state="translated">std::map::max_size</target>
        </trans-unit>
        <trans-unit id="b5f5ca40d88c70ddae246d0915296bff84925c74" translate="yes" xml:space="preserve">
          <source>std::map::merge</source>
          <target state="translated">std::map::merge</target>
        </trans-unit>
        <trans-unit id="6f23549328b4a9415cf3c60c999750a26521d3b1" translate="yes" xml:space="preserve">
          <source>std::map::operator=</source>
          <target state="translated">std::map::operator=</target>
        </trans-unit>
        <trans-unit id="42765e01b4c9a08d81e9e68adc688abf47debfde" translate="yes" xml:space="preserve">
          <source>std::map::operator[]</source>
          <target state="translated">std::map::operator[]</target>
        </trans-unit>
        <trans-unit id="1583e0667358e8514101dacc83ef2d02a100dfe5" translate="yes" xml:space="preserve">
          <source>std::map::rbegin</source>
          <target state="translated">std::map::rbegin</target>
        </trans-unit>
        <trans-unit id="d22d8cd50e75467a14a744543fe3e2fa383b89bb" translate="yes" xml:space="preserve">
          <source>std::map::rend</source>
          <target state="translated">std::map::rend</target>
        </trans-unit>
        <trans-unit id="af5845df00e5f358900191b80fc2ff3852ff96b7" translate="yes" xml:space="preserve">
          <source>std::map::size</source>
          <target state="translated">std::map::size</target>
        </trans-unit>
        <trans-unit id="35e1ba66eb355ec5f836dc92219117b77ab6fe7e" translate="yes" xml:space="preserve">
          <source>std::map::swap</source>
          <target state="translated">std::map::swap</target>
        </trans-unit>
        <trans-unit id="f04b06bf50a4e18b90a67ee89ad9a4db10e77fdf" translate="yes" xml:space="preserve">
          <source>std::map::try_emplace</source>
          <target state="translated">std::map::try_emplace</target>
        </trans-unit>
        <trans-unit id="60d0ab6c6be968e681dc064e38f85749bb8e93bd" translate="yes" xml:space="preserve">
          <source>std::map::upper_bound</source>
          <target state="translated">std::map::upper_bound</target>
        </trans-unit>
        <trans-unit id="a02bf6c64122b24dd87cb3f46a1f3ec5ed5f8399" translate="yes" xml:space="preserve">
          <source>std::map::value_comp</source>
          <target state="translated">std::map::value_comp</target>
        </trans-unit>
        <trans-unit id="7cfdb6d34623083aa871fa23409d5c02cc3f64c5" translate="yes" xml:space="preserve">
          <source>std::map::value_compare</source>
          <target state="translated">std::map::value_compare</target>
        </trans-unit>
        <trans-unit id="6fbdfceeded0f164dd0c6588187de5da67fcd0f4" translate="yes" xml:space="preserve">
          <source>std::map::~map</source>
          <target state="translated">std::map::~map</target>
        </trans-unit>
        <trans-unit id="7b479ea7857d77067b9165f0d38e1b730d75210b" translate="yes" xml:space="preserve">
          <source>std::mask_array</source>
          <target state="translated">std::mask_array</target>
        </trans-unit>
        <trans-unit id="d949292bde623975ec99cd940cf08c9d628a2fe0" translate="yes" xml:space="preserve">
          <source>std::mask_array&amp;lt;T&amp;gt;::mask_array</source>
          <target state="translated">std::mask_array&amp;lt;T&amp;gt;::mask_array</target>
        </trans-unit>
        <trans-unit id="523760ca03829437b4bb25abb264ba8cc908819f" translate="yes" xml:space="preserve">
          <source>std::mask_array&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,^=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</source>
          <target state="translated">std::mask_array&amp;lt;T&amp;gt;::operator+=,-=,*=,/=,%=,&amp;amp;=,|=,^=,&amp;lt;&amp;lt;=,&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="1ae9e3574d93151f4600238be78b132ce82752b5" translate="yes" xml:space="preserve">
          <source>std::mask_array&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::mask_array&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="9844b116f11e38bf069217476839ba3bfb8c54d5" translate="yes" xml:space="preserve">
          <source>std::mask_array&amp;lt;T&amp;gt;::~mask_array</source>
          <target state="translated">std::mask_array&amp;lt;T&amp;gt;::~mask_array</target>
        </trans-unit>
        <trans-unit id="9b7dd111f9d7065bce18ea7fbb4558621361c744" translate="yes" xml:space="preserve">
          <source>std::mask_array::mask_array</source>
          <target state="translated">std::mask_array::mask_array</target>
        </trans-unit>
        <trans-unit id="f5c7ac611e39c239f5a33c02b10379bab7ff64ec" translate="yes" xml:space="preserve">
          <source>std::mask_array::operator=</source>
          <target state="translated">std::mask_array::operator=</target>
        </trans-unit>
        <trans-unit id="b571a34e9926b5ed6d41d44ae94a8f5f7b994e34" translate="yes" xml:space="preserve">
          <source>std::mask_array::operators</source>
          <target state="translated">std::mask_array::operators</target>
        </trans-unit>
        <trans-unit id="fe2e494da06a43982397465dafa5b41467ea22f8" translate="yes" xml:space="preserve">
          <source>std::mask_array::~mask_array</source>
          <target state="translated">std::mask_array::~mask_array</target>
        </trans-unit>
        <trans-unit id="15689193d60decd0b6cdebf8de041128bdb3a2f1" translate="yes" xml:space="preserve">
          <source>std::match_results</source>
          <target state="translated">std::match_results</target>
        </trans-unit>
        <trans-unit id="1c5bfb3fcfa8c8bbc0716d2f39f477d323c4b18f" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::begin, std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::cbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e352da6fd3432e2a1ed772f62253d7ee4a177fd5" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::empty</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="6eb6d133d7ad3c525e19d5cb22a72c49b2decba1" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::end, std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::cend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1c6d04d6537c1198625b59cccbe14ed59df6a4" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::format</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::format</target>
        </trans-unit>
        <trans-unit id="b0d1316d00a285c427ec794169bfc2dc68003116" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::get_allocator</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="fdfb8959f678c8bf6ad7f97772e3df4907873681" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::length</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::length</target>
        </trans-unit>
        <trans-unit id="4cae9977c628de6aa34b20951ae368a4ee3a9d73" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::match_results</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::match_results</target>
        </trans-unit>
        <trans-unit id="b5df3813829542aad74e1074aa211d6c2ab94f83" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::max_size</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="bbaebc611b233b5f978ca76dce78528f75022a50" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::operator=</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="1c0d00a2df1e533081de8370d882ad639039d382" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::operator[]</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="599a89e97559ca10c787c8fa89367cae37ed6000" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::position</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::position</target>
        </trans-unit>
        <trans-unit id="714c2b87da4ed230b5000c11f669279bce895631" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::prefix</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::prefix</target>
        </trans-unit>
        <trans-unit id="bf5f468e32565df7dba629fecee47e66f60de21d" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::ready</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::ready</target>
        </trans-unit>
        <trans-unit id="ed06efebe035f97c874b872d81b08949a14a35d3" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::size</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="ad9ece1d10c6f9394e9d52dadff770d6773dddb6" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::str</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::str</target>
        </trans-unit>
        <trans-unit id="71a8f30bb573060cbec9915613ff4f5453020c5d" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::suffix</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::suffix</target>
        </trans-unit>
        <trans-unit id="f0ffbb76df35e4c5ff6a652adcdfbb78163a0866" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::swap</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="ce768fc29ea1ae56ab81128116e52fc21be47d2b" translate="yes" xml:space="preserve">
          <source>std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::~match_results</source>
          <target state="translated">std::match_results&amp;lt;BidirIt,Alloc&amp;gt;::~match_results</target>
        </trans-unit>
        <trans-unit id="3f29a73c755890c027c4fe922c31650e30b29b43" translate="yes" xml:space="preserve">
          <source>std::match_results::cbegin</source>
          <target state="translated">std::match_results::cbegin</target>
        </trans-unit>
        <trans-unit id="6cd70358dbe21965c30445147f33446a2cf1bf6c" translate="yes" xml:space="preserve">
          <source>std::match_results::empty</source>
          <target state="translated">std::match_results::empty</target>
        </trans-unit>
        <trans-unit id="a56edb208c4d3a93d93719d6120fb9dd54489140" translate="yes" xml:space="preserve">
          <source>std::match_results::end</source>
          <target state="translated">std::match_results::end</target>
        </trans-unit>
        <trans-unit id="daddc6ac1eac453d0970ed996b9e8f1fd169aa35" translate="yes" xml:space="preserve">
          <source>std::match_results::format</source>
          <target state="translated">std::match_results::format</target>
        </trans-unit>
        <trans-unit id="66359352cf1c1df53ba5e96bcbfe11582d0a9bea" translate="yes" xml:space="preserve">
          <source>std::match_results::get_allocator</source>
          <target state="translated">std::match_results::get_allocator</target>
        </trans-unit>
        <trans-unit id="cf365367cedaae651537cff0e5450d109340785d" translate="yes" xml:space="preserve">
          <source>std::match_results::length</source>
          <target state="translated">std::match_results::length</target>
        </trans-unit>
        <trans-unit id="7cce329f9f5e647892516d226ff7f7bcc5abff20" translate="yes" xml:space="preserve">
          <source>std::match_results::match_results</source>
          <target state="translated">std::match_results::match_results</target>
        </trans-unit>
        <trans-unit id="b582d2f441198389723e5260d3e14fa00b1da232" translate="yes" xml:space="preserve">
          <source>std::match_results::max_size</source>
          <target state="translated">std::match_results::max_size</target>
        </trans-unit>
        <trans-unit id="0f5dd068426f19ae12d767a651034324b0b60a77" translate="yes" xml:space="preserve">
          <source>std::match_results::operator=</source>
          <target state="translated">std::match_results::operator=</target>
        </trans-unit>
        <trans-unit id="e8c28c4b4750f4f10c59ba8bff5cae918972fb49" translate="yes" xml:space="preserve">
          <source>std::match_results::operator[]</source>
          <target state="translated">std::match_results::operator[]</target>
        </trans-unit>
        <trans-unit id="481938a29cceba534fa392357def7e92568e2d8b" translate="yes" xml:space="preserve">
          <source>std::match_results::position</source>
          <target state="translated">std::match_results::position</target>
        </trans-unit>
        <trans-unit id="5d95b1ce665ffe472105a489c254b057b2d2c117" translate="yes" xml:space="preserve">
          <source>std::match_results::prefix</source>
          <target state="translated">std::match_results::prefix</target>
        </trans-unit>
        <trans-unit id="fe7d83054743b510a8fd3faf1ff98ce664671002" translate="yes" xml:space="preserve">
          <source>std::match_results::ready</source>
          <target state="translated">std::match_results::ready</target>
        </trans-unit>
        <trans-unit id="5535206b0f67442c90b59207c021eb771509ae75" translate="yes" xml:space="preserve">
          <source>std::match_results::size</source>
          <target state="translated">std::match_results::size</target>
        </trans-unit>
        <trans-unit id="3f167c949fd433f054e0d186ab9644e60c809233" translate="yes" xml:space="preserve">
          <source>std::match_results::str</source>
          <target state="translated">std::match_results::str</target>
        </trans-unit>
        <trans-unit id="d16863ebd64a7d5f5f4913ebd5decda2be8035d1" translate="yes" xml:space="preserve">
          <source>std::match_results::suffix</source>
          <target state="translated">std::match_results::suffix</target>
        </trans-unit>
        <trans-unit id="3f0596d66dcd96805b3fa2e56a550d675ba5d375" translate="yes" xml:space="preserve">
          <source>std::match_results::swap</source>
          <target state="translated">std::match_results::swap</target>
        </trans-unit>
        <trans-unit id="dec40d03a27a200f7051d103ad8fff8d921a2efd" translate="yes" xml:space="preserve">
          <source>std::match_results::~match_results</source>
          <target state="translated">std::match_results::~match_results</target>
        </trans-unit>
        <trans-unit id="9be95af885bd2c21cd2aadcb66fb6cbe70894cdf" translate="yes" xml:space="preserve">
          <source>std::max</source>
          <target state="translated">std::max</target>
        </trans-unit>
        <trans-unit id="815563a73b98e4458ee5f93db5fc55d7429f440b" translate="yes" xml:space="preserve">
          <source>std::max_align_t</source>
          <target state="translated">std::max_align_t</target>
        </trans-unit>
        <trans-unit id="cab6e5e8f0fcd040a8454bb0f23f09e132176c97" translate="yes" xml:space="preserve">
          <source>std::max_element</source>
          <target state="translated">std::max_element</target>
        </trans-unit>
        <trans-unit id="d3f1b6bebbfcdd127c6e096d3bc8a2960cf7cd79" translate="yes" xml:space="preserve">
          <source>std::mblen</source>
          <target state="translated">std::mblen</target>
        </trans-unit>
        <trans-unit id="7221f3a44f4d6a90f785263859aea8d3e05840c5" translate="yes" xml:space="preserve">
          <source>std::mbrlen</source>
          <target state="translated">std::mbrlen</target>
        </trans-unit>
        <trans-unit id="47fe20a613200a0f5470b3cdddf4d580a5b763a2" translate="yes" xml:space="preserve">
          <source>std::mbrtoc16</source>
          <target state="translated">std::mbrtoc16</target>
        </trans-unit>
        <trans-unit id="1c3181cc9016e0d12fa27878c4f6c9d4ecd05d01" translate="yes" xml:space="preserve">
          <source>std::mbrtoc32</source>
          <target state="translated">std::mbrtoc32</target>
        </trans-unit>
        <trans-unit id="23611d50346d2c629ccd50a422650096750926ba" translate="yes" xml:space="preserve">
          <source>std::mbrtoc8</source>
          <target state="translated">std::mbrtoc8</target>
        </trans-unit>
        <trans-unit id="a8dde3ae90ad7d06f13e6e65b21a3f70bd14f992" translate="yes" xml:space="preserve">
          <source>std::mbrtowc</source>
          <target state="translated">std::mbrtowc</target>
        </trans-unit>
        <trans-unit id="a293f23560d2c0ca5abd2cf6c873f79666bb8265" translate="yes" xml:space="preserve">
          <source>std::mbsinit</source>
          <target state="translated">std::mbsinit</target>
        </trans-unit>
        <trans-unit id="220898eb136c202eb6e8cbb58690cae1de79a114" translate="yes" xml:space="preserve">
          <source>std::mbsrtowcs</source>
          <target state="translated">std::mbsrtowcs</target>
        </trans-unit>
        <trans-unit id="f94ae91cc06397e13eba186b109fe3c5f360f330" translate="yes" xml:space="preserve">
          <source>std::mbstate_t</source>
          <target state="translated">std::mbstate_t</target>
        </trans-unit>
        <trans-unit id="2dd572a4945b7054f9b6d32faf652e7207c940bb" translate="yes" xml:space="preserve">
          <source>std::mbstowcs</source>
          <target state="translated">std::mbstowcs</target>
        </trans-unit>
        <trans-unit id="11b4ba1b0e017e0622a898023ea61d96485a3bde" translate="yes" xml:space="preserve">
          <source>std::mbtowc</source>
          <target state="translated">std::mbtowc</target>
        </trans-unit>
        <trans-unit id="1c18d490947be6b233d02156f217a9dc919491d0" translate="yes" xml:space="preserve">
          <source>std::mem_fn</source>
          <target state="translated">std::mem_fn</target>
        </trans-unit>
        <trans-unit id="4c658dbfe620be903d9dd6c3f2f992c842626120" translate="yes" xml:space="preserve">
          <source>std::mem_fn Return type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c5ebce7d77262611fe85d272d3baea4f0b45b9" translate="yes" xml:space="preserve">
          <source>std::mem_fun</source>
          <target state="translated">std::mem_fun</target>
        </trans-unit>
        <trans-unit id="436a13f671e3b3a0b36cee7c53206dcae2707f83" translate="yes" xml:space="preserve">
          <source>std::mem_fun_ref</source>
          <target state="translated">std::mem_fun_ref</target>
        </trans-unit>
        <trans-unit id="f1d718b34c4b80e21adc102f82e89f32008e8c0f" translate="yes" xml:space="preserve">
          <source>std::mem_fun_ref_t</source>
          <target state="translated">std::mem_fun_ref_t</target>
        </trans-unit>
        <trans-unit id="f522c95baf8698b64e3977d0aef82a12e744e051" translate="yes" xml:space="preserve">
          <source>std::mem_fun_ref_t, std::mem_fun1_ref_t, std::const_mem_fun_ref_t, std::const_mem_fun1_ref_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa2a4c5913f4d4fc64072e5f4bc2b7c9928f848" translate="yes" xml:space="preserve">
          <source>std::mem_fun_t</source>
          <target state="translated">std::mem_fun_t</target>
        </trans-unit>
        <trans-unit id="99ea2b2f383bb2247a51e4c2abcb7399188f4e46" translate="yes" xml:space="preserve">
          <source>std::mem_fun_t, std::mem_fun1_t, std::const_mem_fun_t, std::const_mem_fun1_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21e9376e05505ea29e8c33f5ef602f4171af82a" translate="yes" xml:space="preserve">
          <source>std::memchr</source>
          <target state="translated">std::memchr</target>
        </trans-unit>
        <trans-unit id="6e5450825c693088f2e39e72e5e0de39c001e2ed" translate="yes" xml:space="preserve">
          <source>std::memcmp</source>
          <target state="translated">std::memcmp</target>
        </trans-unit>
        <trans-unit id="ce6ad6d8d3a4e12de7310bbac91295b47bfc4b19" translate="yes" xml:space="preserve">
          <source>std::memcpy</source>
          <target state="translated">std::memcpy</target>
        </trans-unit>
        <trans-unit id="0a4878d6646ad2d4abcff14eb8cc8bc720d0c583" translate="yes" xml:space="preserve">
          <source>std::memmove</source>
          <target state="translated">std::memmove</target>
        </trans-unit>
        <trans-unit id="fb2c2cfbb6b684b0d81e7e917be8e3fc7c64fe5d" translate="yes" xml:space="preserve">
          <source>std::memory_order</source>
          <target state="translated">std::memory_order</target>
        </trans-unit>
        <trans-unit id="45e137dd25c40ea37210bfbc04c26bd1b26d0845" translate="yes" xml:space="preserve">
          <source>std::memset</source>
          <target state="translated">std::memset</target>
        </trans-unit>
        <trans-unit id="563b1791ed03f90de6bf94634a64c7dba4484590" translate="yes" xml:space="preserve">
          <source>std::merge</source>
          <target state="translated">std::merge</target>
        </trans-unit>
        <trans-unit id="44f9b64e925efea11afc047e73aa63a410b8a774" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine</source>
          <target state="translated">std::mersenne_twister_engine</target>
        </trans-unit>
        <trans-unit id="6ad614a29a7d54578d91e95fc26c7325fee9082c" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::discard</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::discard</target>
        </trans-unit>
        <trans-unit id="655c02a593c26c06c7a36238cf732571c2f3b1ca" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::max</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="0654eb56c2f6de42247ecc5833bd8e11373d73de" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::mersenne_twister_engine</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::mersenne_twister_engine</target>
        </trans-unit>
        <trans-unit id="7e1c99d28dc2956a36690b7d41772e6c8a47f91f" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::min</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="601f9cff0b869ec3fca691be6a5b7f851387d53d" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::operator()</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="ee4d42cd36c97870c9b26458d4611bb4e0a7fe05" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::seed</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::seed</target>
        </trans-unit>
        <trans-unit id="e0a30aae52259d00b4cc8541fd5d14af1072002e" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::discard</source>
          <target state="translated">std::mersenne_twister_engine::discard</target>
        </trans-unit>
        <trans-unit id="5c54a443ece5e97c54c433da960cf5b79ed26ac2" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::max</source>
          <target state="translated">std::mersenne_twister_engine::max</target>
        </trans-unit>
        <trans-unit id="b39f1d344f6234dd0377fe1f99ff31c97c54c12e" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::mersenne_twister_engine</source>
          <target state="translated">std::mersenne_twister_engine::mersenne_twister_engine</target>
        </trans-unit>
        <trans-unit id="13e52023ac955f6583891e1fef9040012744a8e6" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::min</source>
          <target state="translated">std::mersenne_twister_engine::min</target>
        </trans-unit>
        <trans-unit id="4f4fe1e7a5fc4f7151d7cbbbcd1ee1eb054fd69a" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::operator()</source>
          <target state="translated">std::mersenne_twister_engine::operator()</target>
        </trans-unit>
        <trans-unit id="7dba284f07152376e03796faf223d6edd56357f9" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::seed</source>
          <target state="translated">std::mersenne_twister_engine::seed</target>
        </trans-unit>
        <trans-unit id="6e09dd6fb8f3fb3a8309a6a260be39c1853da230" translate="yes" xml:space="preserve">
          <source>std::messages</source>
          <target state="translated">std::messages</target>
        </trans-unit>
        <trans-unit id="9fdcc7e9e990f030c2ce8329289c5f62486d7fea" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::close, std::messages&amp;lt;CharT&amp;gt;::do_close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a63913d6cc3f63597d90a85160f89df3a2b1309" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::get, std::messages&amp;lt;CharT&amp;gt;::do_get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179947c91d853a79c5c680a0ae55b79dc7680cf0" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::messages</source>
          <target state="translated">std::messages&amp;lt;CharT&amp;gt;::messages</target>
        </trans-unit>
        <trans-unit id="4bc690d4a7a2aed35ca1bf2929dd09d6b87fffe5" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::open, std::messages&amp;lt;CharT&amp;gt;::do_open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb54ce7c59ff0fa9174da55493cae330893fcc4" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::~messages</source>
          <target state="translated">std::messages&amp;lt;CharT&amp;gt;::~messages</target>
        </trans-unit>
        <trans-unit id="5bba0ea0c0217d59f8da092c078cb6009c578a0b" translate="yes" xml:space="preserve">
          <source>std::messages::do_close</source>
          <target state="translated">std::messages::do_close</target>
        </trans-unit>
        <trans-unit id="81058601cf0e1914f68e8332813b04b97e41beb7" translate="yes" xml:space="preserve">
          <source>std::messages::get</source>
          <target state="translated">std::messages::get</target>
        </trans-unit>
        <trans-unit id="61613cfcc9fc1eb3cbb53c73ff533d81eaced91c" translate="yes" xml:space="preserve">
          <source>std::messages::messages</source>
          <target state="translated">std::messages::messages</target>
        </trans-unit>
        <trans-unit id="4e0ce06f62858817c11cb5d87918da8e144937fb" translate="yes" xml:space="preserve">
          <source>std::messages::open</source>
          <target state="translated">std::messages::open</target>
        </trans-unit>
        <trans-unit id="aab711375c9dc3e02ae613b5b94b627e6ff5bb6c" translate="yes" xml:space="preserve">
          <source>std::messages::~messages</source>
          <target state="translated">std::messages::~messages</target>
        </trans-unit>
        <trans-unit id="68dc6ac0aa73e5882494103ba752dd8f7ce4ce76" translate="yes" xml:space="preserve">
          <source>std::messages_base</source>
          <target state="translated">std::messages_base</target>
        </trans-unit>
        <trans-unit id="86fe3001a599e6feaefb3b05ae1e3672cf512bdf" translate="yes" xml:space="preserve">
          <source>std::messages_byname</source>
          <target state="translated">std::messages_byname</target>
        </trans-unit>
        <trans-unit id="5d7f23a5e2348d459a59df014e9ec5b89bf5ed9c" translate="yes" xml:space="preserve">
          <source>std::messages_byname::messages_byname</source>
          <target state="translated">std::messages_byname::messages_byname</target>
        </trans-unit>
        <trans-unit id="b88d034297a4a231e02114c4863ee4aaf927da41" translate="yes" xml:space="preserve">
          <source>std::messages_byname::~messages_byname</source>
          <target state="translated">std::messages_byname::~messages_byname</target>
        </trans-unit>
        <trans-unit id="981ead5cdae43249d0d2ddf58184e9ee043fb8af" translate="yes" xml:space="preserve">
          <source>std::midpoint</source>
          <target state="translated">std::midpoint</target>
        </trans-unit>
        <trans-unit id="c048533c00192b90be99cc043eca0fc1440ef187" translate="yes" xml:space="preserve">
          <source>std::min</source>
          <target state="translated">std::min</target>
        </trans-unit>
        <trans-unit id="e4e72366feb2f96684a04e68e3c797d7d71289b1" translate="yes" xml:space="preserve">
          <source>std::min_element</source>
          <target state="translated">std::min_element</target>
        </trans-unit>
        <trans-unit id="7a31d5547e9ad984bb51ef030157f2b15f5cb9cf" translate="yes" xml:space="preserve">
          <source>std::minmax</source>
          <target state="translated">std::minmax</target>
        </trans-unit>
        <trans-unit id="12f544490f8e33f3e7a46e26f81c87474e25b1c2" translate="yes" xml:space="preserve">
          <source>std::minmax_element</source>
          <target state="translated">std::minmax_element</target>
        </trans-unit>
        <trans-unit id="eab455847119add5f2403953789a2ece6387c762" translate="yes" xml:space="preserve">
          <source>std::minus</source>
          <target state="translated">std::minus</target>
        </trans-unit>
        <trans-unit id="7b111d33831b8b0c45ae6b2c11754fbd32b717ce" translate="yes" xml:space="preserve">
          <source>std::minus&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::minus&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="0fe65ca2be2edb25be0dff07b4bffb0ac2882f43" translate="yes" xml:space="preserve">
          <source>std::minus&amp;lt;void&amp;gt;</source>
          <target state="translated">std::minus&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5015a349da0279cd3f8131ac92c11f29a54a6d05" translate="yes" xml:space="preserve">
          <source>std::minus::operator()</source>
          <target state="translated">std::minus::operator()</target>
        </trans-unit>
        <trans-unit id="7cce04cc81b7ceff89f3993d3323d711cd2e1416" translate="yes" xml:space="preserve">
          <source>std::mismatch</source>
          <target state="translated">std::mismatch</target>
        </trans-unit>
        <trans-unit id="78dd36dee7753c0e353f238243f0d692eb365e87" translate="yes" xml:space="preserve">
          <source>std::mktime</source>
          <target state="translated">std::mktime</target>
        </trans-unit>
        <trans-unit id="a5d2476267d986cc0a95d5089d899f49959ae85c" translate="yes" xml:space="preserve">
          <source>std::modf, std::modff, std::modfl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2405f9accdd8f1c10b122898fe5ac450636e51ab" translate="yes" xml:space="preserve">
          <source>std::modfl</source>
          <target state="translated">std::modfl</target>
        </trans-unit>
        <trans-unit id="8ead7b1ca5a7df554a50246cea742548ca00a0bb" translate="yes" xml:space="preserve">
          <source>std::modulus</source>
          <target state="translated">std::modulus</target>
        </trans-unit>
        <trans-unit id="369498a4b9e9083a6d6c6f50373b861f57f7db90" translate="yes" xml:space="preserve">
          <source>std::modulus&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::modulus&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="a4d7b8963fb115c4795cce67bfa97c358ea37d20" translate="yes" xml:space="preserve">
          <source>std::modulus&amp;lt;void&amp;gt;</source>
          <target state="translated">std::modulus&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2d0629a75627fe40d82328732412da737bfbd8d6" translate="yes" xml:space="preserve">
          <source>std::modulus::operator()</source>
          <target state="translated">std::modulus::operator()</target>
        </trans-unit>
        <trans-unit id="ef9d1e835d54eeb4ec51822ba2e9221de5eb9a3b" translate="yes" xml:space="preserve">
          <source>std::money_base</source>
          <target state="translated">std::money_base</target>
        </trans-unit>
        <trans-unit id="4a8fbdba7907d7a26add926dfe8a54b068fce627" translate="yes" xml:space="preserve">
          <source>std::money_get</source>
          <target state="translated">std::money_get</target>
        </trans-unit>
        <trans-unit id="e97829c9992206b667baad9c429aff7d3547bcc1" translate="yes" xml:space="preserve">
          <source>std::money_get&amp;lt;CharT,InputIt&amp;gt;::get, do_get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98189c88bca754376fe417ef3f6dd57a8c797e55" translate="yes" xml:space="preserve">
          <source>std::money_get&amp;lt;CharT,InputIt&amp;gt;::money_get</source>
          <target state="translated">std::money_get&amp;lt;CharT,InputIt&amp;gt;::money_get</target>
        </trans-unit>
        <trans-unit id="b324b6a523939cb332e4f1886f605c1642ec462c" translate="yes" xml:space="preserve">
          <source>std::money_get&amp;lt;CharT,InputIt&amp;gt;::~money_get</source>
          <target state="translated">std::money_get&amp;lt;CharT,InputIt&amp;gt;::~money_get</target>
        </trans-unit>
        <trans-unit id="8646085448b60c641ab39e791268608480aa0e33" translate="yes" xml:space="preserve">
          <source>std::money_get::get</source>
          <target state="translated">std::money_get::get</target>
        </trans-unit>
        <trans-unit id="b4a713d23b6a331c2af1d9984790e35261c79d14" translate="yes" xml:space="preserve">
          <source>std::money_get::money_get</source>
          <target state="translated">std::money_get::money_get</target>
        </trans-unit>
        <trans-unit id="4d3b93c161239c6e09bb1cd749057351935ffddf" translate="yes" xml:space="preserve">
          <source>std::money_get::~money_get</source>
          <target state="translated">std::money_get::~money_get</target>
        </trans-unit>
        <trans-unit id="d72633a67b0e2a5ad78ccde7490a82054c89f4db" translate="yes" xml:space="preserve">
          <source>std::money_put</source>
          <target state="translated">std::money_put</target>
        </trans-unit>
        <trans-unit id="d780a1d2f0515a954fcbddb27461ec919c6b8908" translate="yes" xml:space="preserve">
          <source>std::money_put&amp;lt;CharT,OutputIt&amp;gt;::money_put</source>
          <target state="translated">std::money_put&amp;lt;CharT,OutputIt&amp;gt;::money_put</target>
        </trans-unit>
        <trans-unit id="c668eb3e314a7d616d158323dbe38ff866d7915a" translate="yes" xml:space="preserve">
          <source>std::money_put&amp;lt;CharT,OutputIt&amp;gt;::put, do_put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605c9703ebd1f9ce0c0d2647777ea9b6dcd74cdb" translate="yes" xml:space="preserve">
          <source>std::money_put&amp;lt;CharT,OutputIt&amp;gt;::~money_put</source>
          <target state="translated">std::money_put&amp;lt;CharT,OutputIt&amp;gt;::~money_put</target>
        </trans-unit>
        <trans-unit id="ad4b6e5314d480a686357fd7264a0eefeeb95ad9" translate="yes" xml:space="preserve">
          <source>std::money_put::money_put</source>
          <target state="translated">std::money_put::money_put</target>
        </trans-unit>
        <trans-unit id="94eed2d99b4893b7ff84c0fddf30390e3f492bb4" translate="yes" xml:space="preserve">
          <source>std::money_put::put</source>
          <target state="translated">std::money_put::put</target>
        </trans-unit>
        <trans-unit id="b35213993357bb7ae0f39fd62b91842d33004d4f" translate="yes" xml:space="preserve">
          <source>std::money_put::~money_put</source>
          <target state="translated">std::money_put::~money_put</target>
        </trans-unit>
        <trans-unit id="b0415b6afe0d9cc11cd4e1a64200a529ad40c0fd" translate="yes" xml:space="preserve">
          <source>std::moneypunct</source>
          <target state="translated">std::moneypunct</target>
        </trans-unit>
        <trans-unit id="4338c292f2ef0a8ee9bc18a79574d82340e65692" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::curr_symbol, do_curr_symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b0426519650dc70ee8f721441ee05401760f61" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::decimal_point, do_decimal_point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0d4e574b0eecf82a14d998790033d49d2ac472" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::frac_digits, do_frac_digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d756ea0ffd917751f334dddffe1670f077220c" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::grouping, do_grouping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915de6abe67901a5f2afc9a69e98974443bbfcd4" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::moneypunct</source>
          <target state="translated">std::moneypunct&amp;lt;CharT,International&amp;gt;::moneypunct</target>
        </trans-unit>
        <trans-unit id="81cbf613478d22c7320f1d690411bc6987480e28" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::pos_format, do_pos_format, neg_format, do_neg_format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc70c425169d99642b0a05237d08aefe6487cca" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::positive_sign, do_positive_sign, negative_sign, do_negative_sign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5fe1721f88962c3a9b9d3af7e640582b93d2bf" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::thousands_sep, do_thousands_sep</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2e81087908df27b40d76cd34576ef5ecbd4727" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::~moneypunct</source>
          <target state="translated">std::moneypunct&amp;lt;CharT,International&amp;gt;::~moneypunct</target>
        </trans-unit>
        <trans-unit id="f099887dfdb830177d2ce1466a990d4c327fb5b7" translate="yes" xml:space="preserve">
          <source>std::moneypunct::curr_symbol</source>
          <target state="translated">std::moneypunct::curr_symbol</target>
        </trans-unit>
        <trans-unit id="9b3879cd694e995da87c7a6e294ef6c587ba4679" translate="yes" xml:space="preserve">
          <source>std::moneypunct::decimal_point</source>
          <target state="translated">std::moneypunct::decimal_point</target>
        </trans-unit>
        <trans-unit id="fb14a888811e2146ec74d84a338ed66e4a25619c" translate="yes" xml:space="preserve">
          <source>std::moneypunct::frac_digits</source>
          <target state="translated">std::moneypunct::frac_digits</target>
        </trans-unit>
        <trans-unit id="a9e08e9ce439be67965353a16ab5d955fd96f687" translate="yes" xml:space="preserve">
          <source>std::moneypunct::grouping</source>
          <target state="translated">std::moneypunct::grouping</target>
        </trans-unit>
        <trans-unit id="63f265a58ea2a5be2da94760f9d7b62546c94ae9" translate="yes" xml:space="preserve">
          <source>std::moneypunct::moneypunct</source>
          <target state="translated">std::moneypunct::moneypunct</target>
        </trans-unit>
        <trans-unit id="a5f8629cebb6bce9fb060ecdf61162fc1e9dbb99" translate="yes" xml:space="preserve">
          <source>std::moneypunct::pos_format</source>
          <target state="translated">std::moneypunct::pos_format</target>
        </trans-unit>
        <trans-unit id="56c88cafaf6c85c3d35aadf2813806d55573017a" translate="yes" xml:space="preserve">
          <source>std::moneypunct::positive_sign</source>
          <target state="translated">std::moneypunct::positive_sign</target>
        </trans-unit>
        <trans-unit id="4ca8d403fdbdffbc887f2f7aa5dc636f01c510d0" translate="yes" xml:space="preserve">
          <source>std::moneypunct::thousands_sep</source>
          <target state="translated">std::moneypunct::thousands_sep</target>
        </trans-unit>
        <trans-unit id="502ede272b0b47ebc834c8075da5f299581e8a96" translate="yes" xml:space="preserve">
          <source>std::moneypunct::~moneypunct</source>
          <target state="translated">std::moneypunct::~moneypunct</target>
        </trans-unit>
        <trans-unit id="c4ff1949d1d8a6011374c2e377c5f084f75c9d55" translate="yes" xml:space="preserve">
          <source>std::moneypunct_byname</source>
          <target state="translated">std::moneypunct_byname</target>
        </trans-unit>
        <trans-unit id="28fc598104e4fa7b68cee414ad60deda61597663" translate="yes" xml:space="preserve">
          <source>std::moneypunct_byname::moneypunct_byname</source>
          <target state="translated">std::moneypunct_byname::moneypunct_byname</target>
        </trans-unit>
        <trans-unit id="a945c8728a077353b0efdc69b278d7d2588db0a9" translate="yes" xml:space="preserve">
          <source>std::moneypunct_byname::~moneypunct_byname</source>
          <target state="translated">std::moneypunct_byname::~moneypunct_byname</target>
        </trans-unit>
        <trans-unit id="c9e49ff7a8e32031c28bc87277cc75d0094248d2" translate="yes" xml:space="preserve">
          <source>std::monostate</source>
          <target state="translated">std::monostate</target>
        </trans-unit>
        <trans-unit id="5f1a4eb764926ed7e38f1e97bd5ece5f6ea5b676" translate="yes" xml:space="preserve">
          <source>std::move</source>
          <target state="translated">std::move</target>
        </trans-unit>
        <trans-unit id="981bbdad51df6259bb7f8fb85a2cef1f88d347fc" translate="yes" xml:space="preserve">
          <source>std::move_backward</source>
          <target state="translated">std::move_backward</target>
        </trans-unit>
        <trans-unit id="a008df720bcc2bfced71e8b46526e75ebca3fa5a" translate="yes" xml:space="preserve">
          <source>std::move_if_noexcept</source>
          <target state="translated">std::move_if_noexcept</target>
        </trans-unit>
        <trans-unit id="a24d9a6189e4aa8c5017b4c140e6dfcb6b6b50a7" translate="yes" xml:space="preserve">
          <source>std::move_iterator</source>
          <target state="translated">std::move_iterator</target>
        </trans-unit>
        <trans-unit id="d84592c8eca921b434e386075b94e022b5c3a691" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::base</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::base</target>
        </trans-unit>
        <trans-unit id="1224aa7a570e4532ec576b096893cffb7bd45504" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::move_iterator</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::move_iterator</target>
        </trans-unit>
        <trans-unit id="7a4e9e60a9bede74123f32afcee2aa0745b80dc0" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator*,-&amp;gt;</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator*,-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b1f6a3be814185292d7852065ed14f792856be82" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator++,+,+=,--,-,-=</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator++,+,+=,--,-,-=</target>
        </trans-unit>
        <trans-unit id="d39f1672d9cf9eabc321c3ceb990c2f7cc414305" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator=</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="83c3cb245ef83c4595fe8f2656bd6289d51b0140" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator[]</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="99d4e696ffd619a44cfeb6e02d9ae633b0c64752" translate="yes" xml:space="preserve">
          <source>std::move_iterator::base</source>
          <target state="translated">std::move_iterator::base</target>
        </trans-unit>
        <trans-unit id="b945d3718a87576fd4f51c07447071f8fa83dab5" translate="yes" xml:space="preserve">
          <source>std::move_iterator::move_iterator</source>
          <target state="translated">std::move_iterator::move_iterator</target>
        </trans-unit>
        <trans-unit id="42496ac9f77a5b9cb56e1d29928d4d7c9ec7ae1b" translate="yes" xml:space="preserve">
          <source>std::move_iterator::operator=</source>
          <target state="translated">std::move_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="8920f6d443fcc5a0c9167eb2e0291d1ead36ebcf" translate="yes" xml:space="preserve">
          <source>std::move_iterator::operator[]</source>
          <target state="translated">std::move_iterator::operator[]</target>
        </trans-unit>
        <trans-unit id="7ce12c2384c0fb5839344530563d6bacdd26b533" translate="yes" xml:space="preserve">
          <source>std::move_iterator::operators</source>
          <target state="translated">std::move_iterator::operators</target>
        </trans-unit>
        <trans-unit id="69dbf76967589e773d589091b3efc54035d04ba3" translate="yes" xml:space="preserve">
          <source>std::multimap</source>
          <target state="translated">std::multimap</target>
        </trans-unit>
        <trans-unit id="84b8b8a619cdfb9b5a3b3041481197245953c6ef" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::operator()</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::operator()</target>
        </trans-unit>
        <trans-unit id="23c1468c50ba276c03b302b197fcaa98045926b7" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::value_compare</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::value_compare</target>
        </trans-unit>
        <trans-unit id="52b37380d32f8acf3fa5f10042577ee9400920cd" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::begin, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::cbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72037e612bcb03ce193f9697a9859aa95a4e1cd4" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::clear</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="a266e322d1c93e03e0965818d9f1501210e8cdcc" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::contains</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::contains</target>
        </trans-unit>
        <trans-unit id="f6140ae5c4d08950857418cd44011595866c11dd" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::count</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::count</target>
        </trans-unit>
        <trans-unit id="62e083af550ecd84fa06f903c9ba8fa0a4ba8274" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="9db2e2d9b9ee8fcb104baafa9b4e1f86cec30a86" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace_hint</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace_hint</target>
        </trans-unit>
        <trans-unit id="3781419a31d878d04ebc5c9a6a09f86a6e2120fc" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::empty</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="b6a21e8fae3a05e2eb07bafbf6f9b6453b2c8471" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::end, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::cend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0110cf36db4e15ff1ec04bb7f6a9508171f409a1" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::equal_range</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::equal_range</target>
        </trans-unit>
        <trans-unit id="c39fd8ab9269a90850e641b404fc49524676128d" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::erase</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="faa3e96cb540af70e0c603dd8eaf495afabd7261" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::extract</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::extract</target>
        </trans-unit>
        <trans-unit id="53030e9d2e2f285734fcd4a9ec870e4ac1355f92" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::find</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="51c248ca12f33c067fe64809819c201ac2af3f8e" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="c1a191428913e07fc0090fcfc46cfc9e934da234" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="13ec77c4e4d6b4ba83b64dfa13fdbf4132899c3a" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::key_comp</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::key_comp</target>
        </trans-unit>
        <trans-unit id="c8f5e106c7d4f4f32c3a5abf27cd9de6e461c68f" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::lower_bound</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::lower_bound</target>
        </trans-unit>
        <trans-unit id="af1a4429a20277784d466aa50d5f4109d342ae73" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="a940529c5df5dea714d44bf57e1d566df81cba4b" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::merge</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="f713059748a18a0e4b4ed04b33e558e3db59dd57" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::multimap</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::multimap</target>
        </trans-unit>
        <trans-unit id="cc25991a0ffb8e727199ffd6ae15fd44c1d5ca5c" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="580ef2d96ca7e88d1068e3243e2932404a81963d" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::rbegin, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::crbegin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c7964cb9522c2599f9ff9dbe0a66f74f648251" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::rend, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::crend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73c8a34e680000ca036915d876f10b0fdef8204" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::size</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="aea3e55b6cfe467b3a417ec0e75d8051154a8f6f" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::swap</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="ba0db62b33e3601480b773ac95801f2e2e1f22d6" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::upper_bound</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::upper_bound</target>
        </trans-unit>
        <trans-unit id="3d167fc9c6d2475858b65e10817117671bf8e663" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_comp</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_comp</target>
        </trans-unit>
        <trans-unit id="294612c305e2cd78b84d3a50907b8154a4938803" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_compare</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_compare</target>
        </trans-unit>
        <trans-unit id="fe04326fe60f2daeb4ff70b0afeb9c6cfd7ee8f6" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::~multimap</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::~multimap</target>
        </trans-unit>
        <trans-unit id="7d5b115fa525374b6840692fe4df2ac3037ec3c4" translate="yes" xml:space="preserve">
          <source>std::multimap::cbegin</source>
          <target state="translated">std::multimap::cbegin</target>
        </trans-unit>
        <trans-unit id="a6cd18800179788d04c9e360cdd2d21e8b260a94" translate="yes" xml:space="preserve">
          <source>std::multimap::clear</source>
          <target state="translated">std::multimap::clear</target>
        </trans-unit>
        <trans-unit id="b2deeffb654bb46c4ed20893c4c00d50e7a38b74" translate="yes" xml:space="preserve">
          <source>std::multimap::contains</source>
          <target state="translated">std::multimap::contains</target>
        </trans-unit>
        <trans-unit id="6727b37c0dead64e43394528a30741b07fe0a141" translate="yes" xml:space="preserve">
          <source>std::multimap::count</source>
          <target state="translated">std::multimap::count</target>
        </trans-unit>
        <trans-unit id="dacf013e76f2c7d90c08c7d8581b1fa43651de88" translate="yes" xml:space="preserve">
          <source>std::multimap::emplace</source>
          <target state="translated">std::multimap::emplace</target>
        </trans-unit>
        <trans-unit id="0a8bb56ccb11b31a81e356f8dc24d730662b0791" translate="yes" xml:space="preserve">
          <source>std::multimap::emplace_hint</source>
          <target state="translated">std::multimap::emplace_hint</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
