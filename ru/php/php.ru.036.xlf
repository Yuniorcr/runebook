<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="4f1840f1264aeaf06a6392e0e982d0bab4d0c107" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents option that tells Event to verify peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121c46b634996816fbf57a471a8a2211d365a730" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents passphrase of the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d72e2d01535dc792fd515e46ae65fd6230d855d" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents path of the certificate authority file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8c8702134651daebc01c9f5aee1922fb4f0efe" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents path where the certificate authority file should be searched for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16d49f968911d7919e50e40f81eb7877670f640" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents the cipher list for the SSL context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ea1d3fea0986b7c11d23cc47856d3719a1961a" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . The option points to path of local certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45eca97117bf853f8bbb1550f7bab9437ca18220" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . The option points to path of the private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dde4a1d30520701e0706973e522f1b1df66b25c" translate="yes" xml:space="preserve">
          <source>Key:</source>
          <target state="translated">Key:</target>
        </trans-unit>
        <trans-unit id="89939bcf9b18d45e94babf833d419e5989cec305" translate="yes" xml:space="preserve">
          <source>Keys and section names consisting of numbers are now evaluated as PHP &lt;a href=&quot;language.types.integer&quot;&gt;integers&lt;/a&gt; thus numbers starting by 0 are evaluated as octals and numbers starting by 0x are evaluated as hexadecimals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be80503c8f773023c77fec93d65ee9fe1db0f6f9" translate="yes" xml:space="preserve">
          <source>Keys and values can be any type, including objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a4af0b19cf0433d21b76de82583c9d9651164f" translate="yes" xml:space="preserve">
          <source>Keys are created from sub iterators associated information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0982140833e1bd62ddedb31f09a62c8c58d43672" translate="yes" xml:space="preserve">
          <source>Keys are created from the sub iterators position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56534ea48959e72db3a28dc5ddcaeef3ddf1762" translate="yes" xml:space="preserve">
          <source>Keys of type &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; are supported. If an object implements &lt;strong&gt;Ds\Hashable&lt;/strong&gt;, equality will be determined by the object's &lt;code&gt;equals&lt;/code&gt; function. If an object does not implement &lt;strong&gt;Ds\Hashable&lt;/strong&gt;, objects must be references to the same instance to be considered equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa8df807b34be6af58eeb0b11ce92a7f8bce319" translate="yes" xml:space="preserve">
          <source>Keywords to highlight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36ef2bb8487fe2b5741194ab8597e2245228d71" translate="yes" xml:space="preserve">
          <source>Kyocera</source>
          <target state="translated">Kyocera</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="d8343c683ae1584c96390fa627005bc1bb0719cd" translate="yes" xml:space="preserve">
          <source>LDAP</source>
          <target state="translated">LDAP</target>
        </trans-unit>
        <trans-unit id="48d530ddd8d7c1f379bf9ac84099ab897846930a" translate="yes" xml:space="preserve">
          <source>LDAP allows more than one entry for an attribute, so it can, for example, store a number of email addresses for one person's directory entry all labeled with the attribute &quot;mail&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae8d02c84eaa6d1163f2badda2dfabe15a06eb6" translate="yes" xml:space="preserve">
          <source>LENGTH</source>
          <target state="translated">LENGTH</target>
        </trans-unit>
        <trans-unit id="eef547253333788eba60b0d632afef911364ef95" translate="yes" xml:space="preserve">
          <source>LINECAP_ constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cb8939fb9819ca82f85eedc8828dbb284afb12" translate="yes" xml:space="preserve">
          <source>LINEJOIN_ constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba2d31d194ea92572b8b1f1288481d086d10647" translate="yes" xml:space="preserve">
          <source>LITERAL_PREFIX</source>
          <target state="translated">LITERAL_PREFIX</target>
        </trans-unit>
        <trans-unit id="948fbe832cc1080f04f2619380c714f6ec225ac9" translate="yes" xml:space="preserve">
          <source>LITERAL_SUFFIX</source>
          <target state="translated">LITERAL_SUFFIX</target>
        </trans-unit>
        <trans-unit id="829b2e176b583fddf040d2887fedf631e1b5b85c" translate="yes" xml:space="preserve">
          <source>LOAD DATA INFILE ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9730a358d677101af76c5d498361b04a3bc829" translate="yes" xml:space="preserve">
          <source>LOCAL_TYPE_NAME</source>
          <target state="translated">LOCAL_TYPE_NAME</target>
        </trans-unit>
        <trans-unit id="bfc310e8b42d1a0059839a9e52d6f3122ab0b176" translate="yes" xml:space="preserve">
          <source>LZF &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="b52e6ec9fa3d5c13a402c0dc8beb63c9192cad04" translate="yes" xml:space="preserve">
          <source>Language Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f76767f392be7ae1b23e5e45f47a3a928bfd160" translate="yes" xml:space="preserve">
          <source>Language and its setting is ISO-2022-JP/Base64 for Japanese, UTF-8/Base64 for uni, ISO-8859-1/quoted printable for English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d636d1ff54e3bcd76dcf3fea8df5de93307a37c" translate="yes" xml:space="preserve">
          <source>Language subtag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1acba31a3a2bc394c572186143de3c31de24b8" translate="yes" xml:space="preserve">
          <source>Lapack &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377fece65107130d5f3b448a505d11501e904035" translate="yes" xml:space="preserve">
          <source>Lastly, &lt;em&gt;instanceof&lt;/em&gt; can also be used to determine whether a variable is an instantiated object of a class that implements an &lt;a href=&quot;language.oop5.interfaces&quot;&gt;interface&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff137d291630ffc589740083cae6761b1a73aff" translate="yes" xml:space="preserve">
          <source>Late Static Bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b2e8da82a42c15e9bcdfc358c76ba7b1186936" translate="yes" xml:space="preserve">
          <source>Late Static Bindings &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f39502701dd10ab254b21926d9fe13b3ad6c792" translate="yes" xml:space="preserve">
          <source>Late Static Bindings' usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4002926fb2af4efb34a0a3e64287dc790e2a46c9" translate="yes" xml:space="preserve">
          <source>Late static bindings tries to solve that limitation by introducing a keyword that references the class that was initially called at runtime. Basically, a keyword that would allow you to reference &lt;em&gt;B&lt;/em&gt; from &lt;em&gt;test()&lt;/em&gt; in the previous example. It was decided not to introduce a new keyword but rather use &lt;em&gt;static&lt;/em&gt; that was already reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae01e88dd5d038c786113545ef2fcb8af80722d4" translate="yes" xml:space="preserve">
          <source>Late static bindings' resolution will stop at a fully resolved static call with no fallback. On the other hand, static calls using keywords like &lt;em&gt;parent::&lt;/em&gt; or &lt;em&gt;self::&lt;/em&gt; will forward the calling information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6842a0b1e92345ec03abab63f4b18691f95cb39c" translate="yes" xml:space="preserve">
          <source>Latin letters from both the ASCII range (0061..007A, 0041..005A) as well as from the Fullwidth ASCII range (FF41..FF5A, FF21..FF3A) are recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8035901e27429946a244602a7c75819eb982a62" translate="yes" xml:space="preserve">
          <source>Latitude in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b0cae5b6cb1f3e3ae88276fea297dac86aa984" translate="yes" xml:space="preserve">
          <source>Leading period in string must be exactly matched by period in the given pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffb39fbba7d5cb198c6708ea654412b36452b92" translate="yes" xml:space="preserve">
          <source>Leaves a multicast group. (added in PHP 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27b9918b21b31104a6f018c22e92325a06f1514" translate="yes" xml:space="preserve">
          <source>Left precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a634abef137b271f6172840870e4e9195c67d6" translate="yes" xml:space="preserve">
          <source>Length in &lt;em&gt;bytes&lt;/em&gt;. If omitted or &lt;em&gt;NULL&lt;/em&gt; is passed, extract all bytes to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b43c69da6419bb5767c11ad866814477ef223e" translate="yes" xml:space="preserve">
          <source>Length in grapheme units. If $length is given and is positive, the string returned will contain at most $length grapheme units beginning from $start (depending on the length of string). If $length is given and is negative, then that many grapheme units will be omitted from the end of string (after the start position has been calculated when a start is negative). If $start denotes a position beyond this truncation, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f21d94f23b021acb2529dc6737028b69a548884" translate="yes" xml:space="preserve">
          <source>Length of data to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9cfba1eb904beca4a5d07280d15b0617002be3" translate="yes" xml:space="preserve">
          <source>Length of desired output key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d50f8819b32dcd7300d55be74b8460716f5c5f" translate="yes" xml:space="preserve">
          <source>Length of first side</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8633cdaef28086bb7d7afcb6d1d6fdf60186f70" translate="yes" xml:space="preserve">
          <source>Length of second side</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390e8a7ce03c4cca60011d521b255002da495f49" translate="yes" xml:space="preserve">
          <source>Length of the data to be retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fe580d03bae173caee9add7767a48f76fdd09b" translate="yes" xml:space="preserve">
          <source>Length of the data type. To indicate that a parameter is an OUT parameter from a stored procedure, you must explicitly set the length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c46dc1383f4ebcbf17e982741839ce1ebda517" translate="yes" xml:space="preserve">
          <source>LengthException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263538c87e60e25739434f91f9da88da35af258f" translate="yes" xml:space="preserve">
          <source>LengthException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86712adf86d96ab39fb3c451f369b4fb7df40733" translate="yes" xml:space="preserve">
          <source>Lenient parse mode used by rule-based formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3d412a0852cc56c28ad0c2a1153229aa365b43" translate="yes" xml:space="preserve">
          <source>Less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33331a5bba7154831ad991e3d73f2368d8a52f4d" translate="yes" xml:space="preserve">
          <source>Less than or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94597186cea0db3499ac72088f4242c6a13f5fde" translate="yes" xml:space="preserve">
          <source>Let the process &lt;code&gt;pid&lt;/code&gt; join the process group &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6ec19114910f3bb61b1aa929df43ab015932e8" translate="yes" xml:space="preserve">
          <source>Let's see some examples(assuming APPLICATION_PATH is &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c3369799ebceb177e12bd19012983789c9d350" translate="yes" xml:space="preserve">
          <source>Lets you control the brightness, saturation, and hue of an image. Hue is the percentage of absolute rotation from the current position. For example 50 results in a counter-clockwise rotation of 90 degrees, 150 results in a clockwise rotation of 90 degrees, with 0 and 200 both resulting in a rotation of 180 degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee14050617b7b58e17aabccd61c241ccdafc6379" translate="yes" xml:space="preserve">
          <source>Letter</source>
          <target state="translated">Letter</target>
        </trans-unit>
        <trans-unit id="da5c93dba30bae6a81789ea350754c7db18d45fd" translate="yes" xml:space="preserve">
          <source>Letter number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab2b0a9ef538a7cb4ffdd418f5159edf89ccf60" translate="yes" xml:space="preserve">
          <source>Libevent API allows HTTP request objects to be not bound to any HTTP connection. Therefore we can't unambiguously associate &lt;a href=&quot;class.eventhttprequest&quot;&gt;EventHttpRequest&lt;/a&gt; with &lt;a href=&quot;class.eventhttpconnection&quot;&gt;EventHttpConnection&lt;/a&gt; . Thus, we construct &lt;a href=&quot;class.eventhttpconnection&quot;&gt;EventHttpConnection&lt;/a&gt; object on-the-fly. Having no information about the event base, DNS base and connection-close callback, we just leave these fields unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6093944ca0e592eed7bf3e874d8a3ab1516525a" translate="yes" xml:space="preserve">
          <source>Libevent provides an abstraction layer on top of the regular event API. Using buffered event you don't need to deal with the I/O manually, instead it provides input and output buffers that get filled and drained automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783b8a97dc5d2a0cc8af137c7068cdee44b597e9" translate="yes" xml:space="preserve">
          <source>Libevent' version number at the time when Event extension had been compiled with the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061643476d1c04085b65d04cb2c1219de891dd89" translate="yes" xml:space="preserve">
          <source>Libmysqlclient uses the default charset set in the &lt;var&gt;my.cnf&lt;/var&gt; or by an explicit call to &lt;a href=&quot;mysqli.options&quot;&gt;mysqli_options()&lt;/a&gt; prior to calling &lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli_real_connect()&lt;/a&gt;, but after &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870171daa2126afa6121aa007b81641225a04e87" translate="yes" xml:space="preserve">
          <source>Libmysqlclient uses the default charset set in the &lt;var&gt;my.cnf&lt;/var&gt; or by an explicit call to &lt;a href=&quot;mysqli.options&quot;&gt;mysqli_options()&lt;/a&gt; prior to calling &lt;strong&gt;mysqli_real_connect()&lt;/strong&gt;, but after &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1de4f6829675af70c5d8599294a8606304b0e1" translate="yes" xml:space="preserve">
          <source>Libmysqlclient uses the default charset set in the &lt;var&gt;my.cnf&lt;/var&gt; or by an explicit call to &lt;strong&gt;mysqli_options()&lt;/strong&gt; prior to calling &lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli_real_connect()&lt;/a&gt;, but after &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b5af8b51584ffa14fbd8d482b1a80e8dd84454" translate="yes" xml:space="preserve">
          <source>Libxml 2 unescapes the URI, so if you want to pass e.g. &lt;em&gt;b&amp;amp;c&lt;/em&gt; as the URI parameter &lt;em&gt;a&lt;/em&gt;, you have to call &lt;em&gt;simplexml_load_file(rawurlencode('http://example.com/?a=' . urlencode('b&amp;amp;c')))&lt;/em&gt;. Since PHP 5.1.0 you don't need to do this because PHP will do it for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a25c29990c2ec1c59bd3337060b9873395b01a" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License v3.0 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f699b0438c3c3e7614c12669c6d1d479c901083" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.add&quot;&gt;DateTime::add()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b9c9efa9288ccb127aecbb797a5726a5f84087" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.construct&quot;&gt;DateTime::__construct()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6fe4c3d985199ce4e1e1abbb9aa9567f8e8500" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.createfromformat&quot;&gt;DateTime::createFromFormat()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5df509b5769f2c8638afca1950474a79c642fe" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.getlasterrors&quot;&gt;DateTime::getLastErrors()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd26268cadb94c97ee9baac271278fee6b6d74c5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.set-state&quot;&gt;DateTime::__set_state()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dce51e714d4fa8782b0c936d04b410da77de29" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.setdate&quot;&gt;DateTime::setDate()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa7404d9e3b65bcb14086a1e56cc924cbb57eaa" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.setisodate&quot;&gt;DateTime::setISODate()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb56d2bb21760307840836f9d3cb27ba3a059f2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.settime&quot;&gt;DateTime::setTime()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c32d7dbb6d983f8c0e0d8ed3ac6aa4be4fac77" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.settimestamp&quot;&gt;DateTime::setTimestamp()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83f4240ee3994761c69bf5a76c357c79be32f0d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.settimezone&quot;&gt;DateTime::setTimezone()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c241e39acf802ea0e60741fc9abf5427d467d37" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;datetime.sub&quot;&gt;DateTime::sub()&lt;/a&gt; but works with &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7676bbb4da187ef975baaae3bf0765b26c9926b8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;function.array&quot;&gt;array()&lt;/a&gt;, this is not really a function, but a language construct. &lt;strong&gt;list()&lt;/strong&gt; is used to assign a list of variables in one operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa22575e4ff2d7dea366f9ec2aa18bb12f5dd7a1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;function.mktime&quot;&gt;mktime()&lt;/a&gt;, arguments may be left out in order from right to left, with any omitted arguments being set to the current corresponding GMT value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9de4e4d4233de76736d160e84c20b1acd3cc82b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;language.variables.predefined&quot;&gt;superglobals&lt;/a&gt;, the scope of a constant is global. You can access constants anywhere in your script without regard to scope. For more information on scope, read the manual section on &lt;a href=&quot;language.variables.scope&quot;&gt;variable scope&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0cc29395f119ea09d75e9f2925ecdf5bf8c374" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;safe_mode&lt;/code&gt;, this setting can only be made more restrictive, in this case by setting it to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; when it is previously set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26f42482faa7d6e6b8d353c288f7ab8ceda85b8" translate="yes" xml:space="preserve">
          <source>Like &lt;em&gt;&quot;grouping&quot;&lt;/em&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa24a514ff98b86c82fb0ae4695b821a81608782" translate="yes" xml:space="preserve">
          <source>Like &lt;strong&gt;&lt;code&gt;CURLOPT_RANDOM_FILE&lt;/code&gt;&lt;/strong&gt;, except a filename to an Entropy Gathering Daemon socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a9d55215a10dc512e4a1cfd7b631b156cda438" translate="yes" xml:space="preserve">
          <source>Like &lt;strong&gt;&lt;code&gt;MYSQLI_CLIENT_SSL&lt;/code&gt;&lt;/strong&gt;, but disables validation of the provided SSL certificate. This is only for installations using MySQL Native Driver and MySQL 5.6 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2894a69febfb6d36ab3f95720c726930f9b73bbf" translate="yes" xml:space="preserve">
          <source>Like any other PHP static variable, static properties may only be initialized using a literal or constant before PHP 5.6; expressions are not allowed. In PHP 5.6 and later, the same rules apply as &lt;a href=&quot;language.constants.syntax&quot;&gt;&lt;em&gt;const&lt;/em&gt;&lt;/a&gt; expressions: some limited expressions are possible, provided they can be evaluated at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6392e31e054a5ba6c96a83b8063d395b8b9ebfb4" translate="yes" xml:space="preserve">
          <source>Like constructors, parent destructors will not be called implicitly by the engine. In order to run a parent destructor, one would have to explicitly call &lt;strong&gt;parent::__destruct()&lt;/strong&gt; in the destructor body. Also like constructors, a child class may inherit the parent's destructor if it does not implement one itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601d96adac7171b011b579c141cafe2ee175f469" translate="yes" xml:space="preserve">
          <source>Like the reference JSON encoder, &lt;strong&gt;json_encode()&lt;/strong&gt; will generate JSON that is a simple value (that is, neither an object nor an array) if given a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; or &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; as an input &lt;code&gt;value&lt;/code&gt;. While most decoders will accept these values as valid JSON, some may not, as the specification is ambiguous on this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167b0fff84fda204140490529a515035e5aaef00" translate="yes" xml:space="preserve">
          <source>Like with the &lt;em&gt;if&lt;/em&gt; statement, you can group multiple statements within the same &lt;em&gt;while&lt;/em&gt; loop by surrounding a group of statements with curly braces, or by using the alternate syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ad259f4779b36a20ceda30abdd406d81d96f7a" translate="yes" xml:space="preserve">
          <source>Limit description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437b9f2fa9492089ff6d3f15bfacc885c0f45fde" translate="yes" xml:space="preserve">
          <source>Limit name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5e6e6e9aca4eea769fa51df3609cf895722b55" translate="yes" xml:space="preserve">
          <source>Limit number of requests in the request group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c686712736ad8b06e8042d48a63444585584cc" translate="yes" xml:space="preserve">
          <source>LimitIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a784e35b3457516a6805136b49837945ff4b5a2f" translate="yes" xml:space="preserve">
          <source>LimitIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c3131076e4ec1be19048e0df3269ed641ed849" translate="yes" xml:space="preserve">
          <source>LimitIterator examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac418035b8d1851a4c993c447e1a21660feca399" translate="yes" xml:space="preserve">
          <source>LimitIterator::__construct</source>
          <target state="translated">LimitIterator::__construct</target>
        </trans-unit>
        <trans-unit id="8a181087b69d68622aefaaf8a61170bacdd6f65d" translate="yes" xml:space="preserve">
          <source>LimitIterator::__construct &amp;mdash; Construct a LimitIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caa47fae9786c1169007a13b9cebdc3d65e5bef" translate="yes" xml:space="preserve">
          <source>LimitIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad7c78c523182ea6b43d53cd2c3dc7f16b13456" translate="yes" xml:space="preserve">
          <source>LimitIterator::current</source>
          <target state="translated">LimitIterator::current</target>
        </trans-unit>
        <trans-unit id="5673f6bf3d8bd5817be945661f7e12fe98f5c16a" translate="yes" xml:space="preserve">
          <source>LimitIterator::current &amp;mdash; Get current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8772d330f45f97a690522b2f7a59cb3e2ed2bc59" translate="yes" xml:space="preserve">
          <source>LimitIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ad0e2628f0fc63491066d67cd79ec71a79ae60" translate="yes" xml:space="preserve">
          <source>LimitIterator::getInnerIterator</source>
          <target state="translated">LimitIterator::getInnerIterator</target>
        </trans-unit>
        <trans-unit id="fe7e43502a5ce1661ca11d92289881b16f25dde2" translate="yes" xml:space="preserve">
          <source>LimitIterator::getInnerIterator &amp;mdash; Get inner iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cff7b86107b444e65080c9469798f553f345ae0" translate="yes" xml:space="preserve">
          <source>LimitIterator::getInnerIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c676c4bb974f633ad1827fbedef4d2a70c2facb" translate="yes" xml:space="preserve">
          <source>LimitIterator::getPosition</source>
          <target state="translated">LimitIterator::getPosition</target>
        </trans-unit>
        <trans-unit id="5690dc61c3a0fdd288cb6a03b78bac36b4776057" translate="yes" xml:space="preserve">
          <source>LimitIterator::getPosition &amp;mdash; Return the current position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5995519a5731b86770766c3b0ec66bd7212a69d" translate="yes" xml:space="preserve">
          <source>LimitIterator::getPosition &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcbea8f8202935da0d8e94244004d9334537fec" translate="yes" xml:space="preserve">
          <source>LimitIterator::key</source>
          <target state="translated">LimitIterator::key</target>
        </trans-unit>
        <trans-unit id="501bf1ea687783628dcc21ee9f7aab7eaef233e1" translate="yes" xml:space="preserve">
          <source>LimitIterator::key &amp;mdash; Get current key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a7be23ec5b99de1c4a4c64ab3d8e06f7165b5e" translate="yes" xml:space="preserve">
          <source>LimitIterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962b2f8a1f4555f4647d485061e0c7f3bfefb4c3" translate="yes" xml:space="preserve">
          <source>LimitIterator::next</source>
          <target state="translated">LimitIterator::next</target>
        </trans-unit>
        <trans-unit id="b7054eb4586fa8301c84fa87a7832959acd2c772" translate="yes" xml:space="preserve">
          <source>LimitIterator::next &amp;mdash; Move the iterator forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2da91cecc0d4fb4c91c7d4181efb5181ca19fb6" translate="yes" xml:space="preserve">
          <source>LimitIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3b9b9085ef1ee95493813527fac487643cbecf" translate="yes" xml:space="preserve">
          <source>LimitIterator::rewind</source>
          <target state="translated">LimitIterator::rewind</target>
        </trans-unit>
        <trans-unit id="8fbc5c4dca84a8715d8165d0b9ccd147d06294a7" translate="yes" xml:space="preserve">
          <source>LimitIterator::rewind &amp;mdash; Rewind the iterator to the specified starting offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb3dd14a45a61040672ba85ca6f8408a4e5d51d" translate="yes" xml:space="preserve">
          <source>LimitIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271d1d06309ec98e08a48d234fbdb32d8f18596b" translate="yes" xml:space="preserve">
          <source>LimitIterator::seek</source>
          <target state="translated">LimitIterator::seek</target>
        </trans-unit>
        <trans-unit id="edd8754845e8c6ca29eb9d5472b50cb065c69436" translate="yes" xml:space="preserve">
          <source>LimitIterator::seek &amp;mdash; Seek to the given position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb18c8f01d7762bb24a1fa50e8dc376968cb526" translate="yes" xml:space="preserve">
          <source>LimitIterator::seek &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6510aa16026e08a554fabbbb55e68ca316ac37" translate="yes" xml:space="preserve">
          <source>LimitIterator::valid</source>
          <target state="translated">LimitIterator::valid</target>
        </trans-unit>
        <trans-unit id="dd08e83dedff01ac76efcf5ecb4a8e6f6befd8c1" translate="yes" xml:space="preserve">
          <source>LimitIterator::valid &amp;mdash; Check whether the current element is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125a8a5336832a1c166d261a28ddeb665912a8b3" translate="yes" xml:space="preserve">
          <source>LimitIterator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c17c3bdfb37032e96b6e7e6166f89e8860ce5e0" translate="yes" xml:space="preserve">
          <source>Limitation: header information from GZIP compressed data are not made available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca78deb96176cd902dc467e629bef6ef4db845d" translate="yes" xml:space="preserve">
          <source>Limitation: there is currently no way to set the header information on a GZIP compressed stream, which are set as follows: GZIP signature (&lt;em&gt;\x1f\x8B&lt;/em&gt;); compression method (&lt;em&gt;\x08&lt;/em&gt; == DEFLATE); 6 zero bytes; the operating system set to the current system (&lt;em&gt;\x00&lt;/em&gt; = Windows, &lt;em&gt;\x03&lt;/em&gt; = Unix, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344c0cd8e380f7e48d49245c2ccffa6fc75211e1" translate="yes" xml:space="preserve">
          <source>Limitations of &lt;em&gt;self::&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27c7414c5eae892cb65cb48a9e3ada0082180c3" translate="yes" xml:space="preserve">
          <source>Line numbers are returned in element 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815507f47a2606910a0fd0cc8b7e5b87462f8246" translate="yes" xml:space="preserve">
          <source>Line separator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3072fbc8c929c64642dd29776eec09de79fd7b12" translate="yes" xml:space="preserve">
          <source>Link node type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a8b8815a7edc495ead117e6764de8075d494bb" translate="yes" xml:space="preserve">
          <source>Linux-specific &lt;em&gt;epoll(7)&lt;/em&gt; backend for both pre- and post-2.6.9 kernels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d26e6d8f6f9e97db80de72863d3e334316e1c53" translate="yes" xml:space="preserve">
          <source>List all the registry settings. Returns an array of all the key/value pairs in the registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3575b75cda9f3051ec676699e3fe3abf09fd72" translate="yes" xml:space="preserve">
          <source>List currently authorized publickeys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acf67935e5b378263486c22def3c8d20a90a205" translate="yes" xml:space="preserve">
          <source>List of MAC methods to advertise, comma separated in order of preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91700689308d9d577244d71c439f66b1081d7998" translate="yes" xml:space="preserve">
          <source>List of Parser Tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4766984246d90b9a7bdd04925acfc6787c0940" translate="yes" xml:space="preserve">
          <source>List of Supported Socket Transports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd82748824af4479d3d68ac29931bfab1af44e79" translate="yes" xml:space="preserve">
          <source>List of Supported Timezones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221c0a7790ef3c6cf38c14a360d54b9fa4003d85" translate="yes" xml:space="preserve">
          <source>List of compression methods to advertise, comma separated in order of preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e151efdfadde1d339197460360ebfd1c59587f2f" translate="yes" xml:space="preserve">
          <source>List of connections on which an error occured, for example, query failure or lost connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a38dbd384ead8b2a4fa591e6b1f7cbbd74bffd" translate="yes" xml:space="preserve">
          <source>List of connections rejected because no asynchronous query has been run on for which the function could poll results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5953ba93b524f123a7e0539b8e20f35f6dfbd8ff" translate="yes" xml:space="preserve">
          <source>List of connections to check for outstanding results that can be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c77c317e9f358bf6b41ff03849397947c28267" translate="yes" xml:space="preserve">
          <source>List of crypto methods to advertise, comma separated in order of preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcf43e11b2978ca97f7511b0f3903911d9fa7d8" translate="yes" xml:space="preserve">
          <source>List of extensions registered using &lt;a href=&quot;v8js.registerextension&quot;&gt;V8Js::registerExtension()&lt;/a&gt; which should be available in the Javascript context of the created &lt;a href=&quot;class.v8js&quot;&gt;V8Js&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714753df789091f32a5dbae9697eda774f1b7d8d" translate="yes" xml:space="preserve">
          <source>List of hostkey methods to advertise, comma separated in order of preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bc9c07c5613ef707905308542eb921a19bcc99" translate="yes" xml:space="preserve">
          <source>List of key exchange methods to advertise, comma separated in order of preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8578295beaea1d82d4a6ecce2c8386560457415e" translate="yes" xml:space="preserve">
          <source>List of signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbc8c0bfe8b722a8ba4fd62e265be37d8991103" translate="yes" xml:space="preserve">
          <source>List the contents of a directory using a while loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e73fedaa7c1d26dccb47b627092adb09d1421a0" translate="yes" xml:space="preserve">
          <source>Listed examples may include &lt;em&gt;example.php&lt;/em&gt;, which refers to the XML string found in the first example of the &lt;a href=&quot;https://secure.php.net/manual/en/simplexml.examples-basic.php&quot;&gt;basic usage&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868c9a15802315c430cc9be22f8dfc6a22ccb70b" translate="yes" xml:space="preserve">
          <source>Listener (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebd89117ef38d2f3d8861ce56942e7d07e658da" translate="yes" xml:space="preserve">
          <source>Listener::__construct</source>
          <target state="translated">Listener::__construct</target>
        </trans-unit>
        <trans-unit id="07059050648d9177f00afd93c853224f71649fa0" translate="yes" xml:space="preserve">
          <source>Listener::disable</source>
          <target state="translated">Listener::disable</target>
        </trans-unit>
        <trans-unit id="f297e2fea587c68ef4161f83a2ee88d99a426ac9" translate="yes" xml:space="preserve">
          <source>Listener::enable</source>
          <target state="translated">Listener::enable</target>
        </trans-unit>
        <trans-unit id="2ec643463d7f72e8f09b3f5699f22bcac6d74bf9" translate="yes" xml:space="preserve">
          <source>Listener::getBase</source>
          <target state="translated">Listener::getBase</target>
        </trans-unit>
        <trans-unit id="bb15eb22a17615946210597f1c78ce1562b7f569" translate="yes" xml:space="preserve">
          <source>Listener::getSocketName</source>
          <target state="translated">Listener::getSocketName</target>
        </trans-unit>
        <trans-unit id="76052e616cf92fd00b45fb49f64bf0b25b98354d" translate="yes" xml:space="preserve">
          <source>Listener::setCallback</source>
          <target state="translated">Listener::setCallback</target>
        </trans-unit>
        <trans-unit id="abffd4411882cbf8831f4cf036b95f78f2116d16" translate="yes" xml:space="preserve">
          <source>Listener::setErrorCallback</source>
          <target state="translated">Listener::setErrorCallback</target>
        </trans-unit>
        <trans-unit id="7e130c410549d06cf2d0e71363aca896352ffe76" translate="yes" xml:space="preserve">
          <source>Listing of supported wrappers (&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe8959122b943b07f2672aaa69053b9b77588fc" translate="yes" xml:space="preserve">
          <source>Listing of supported wrappers with context options (&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509352fe5789fef4cd5dbd9ab3d6c8c5c7517a8c" translate="yes" xml:space="preserve">
          <source>Lists all columns in the requested range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79954fe37191713b37742af8586f40fa8e45469" translate="yes" xml:space="preserve">
          <source>Lists all output handlers in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8736af2544a061ee7c718ec71628bf5d6de31d6" translate="yes" xml:space="preserve">
          <source>Lists all procedures in the requested range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3421dd203aef44bc4f09fed558f10f0b4f68d917" translate="yes" xml:space="preserve">
          <source>Lists all tables in the requested range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb6eb560e1da808eb04da22bd6bed7ea94ad046" translate="yes" xml:space="preserve">
          <source>Lists columns and associated privileges for the given table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc0ed14bd7e36a19bf13e1d1eb5c4ff159209e7" translate="yes" xml:space="preserve">
          <source>Lists tables in the requested range and the privileges associated with each table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cf69a09faee7e6b53661ae0be4b276b24a0367" translate="yes" xml:space="preserve">
          <source>Literal &lt;em&gt;%&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70232cad04a8335179e7207adfa82f6be82d53a8" translate="yes" xml:space="preserve">
          <source>Little used cyrillic charset (Latin/Cyrillic).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4ad31ae129f292e07c3f7c2137354a14e64d2a" translate="yes" xml:space="preserve">
          <source>Load DTD and default attributes but do not validate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03accaf0344dd6bd7eb20d540f27ff4507a253d5" translate="yes" xml:space="preserve">
          <source>Load DTD and validate while parsing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c20c3894601c35267d83ed8bf3c16db00808ff" translate="yes" xml:space="preserve">
          <source>Load DTD but do not validate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc92d7ccd07666969765419035d9509582e7f374" translate="yes" xml:space="preserve">
          <source>Load a PostScript Type 1 font from the given &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589a10450e310e08bbe242c7915d067160b5cc64" translate="yes" xml:space="preserve">
          <source>Loaded modules and their respective settings. See also &lt;a href=&quot;function.get-loaded-extensions&quot;&gt;get_loaded_extensions()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffe355f0cb87242485170917c914cd21232b567" translate="yes" xml:space="preserve">
          <source>Loads a Tidy configuration file, with the specified &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f535e8aa6a6925415bdfcdf3160eda6ac4247de" translate="yes" xml:space="preserve">
          <source>Loads a binary dump from a file into the APC file/user cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d049609161e01bc357bf5f349870da7d4e90c2e9" translate="yes" xml:space="preserve">
          <source>Loads a character encoding vector from a file and changes the fonts encoding vector to it. As a PostScript fonts default vector lacks most of the character positions above 127, you'll definitely want to change this if you use a language other than English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f488e93fea7008994c62ed3149c6a27572fa1cc5" translate="yes" xml:space="preserve">
          <source>Loads a hosts file (in the same format as &lt;em&gt;/etc/hosts&lt;/em&gt; ) from hosts file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0211f74e54da2ef7f7017c1ba33f7a14c7c15552" translate="yes" xml:space="preserve">
          <source>Loads a set of constants from the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8c3f1af4ae8b9eedf10f2eb5411c12de407ac4" translate="yes" xml:space="preserve">
          <source>Loads an XML document from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80778653819e4ba9d6f0ba8792e30e80c2dd8b41" translate="yes" xml:space="preserve">
          <source>Loads an XML document from a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf91bc7d705685b5eb01be254091bbdb55bcdfe7" translate="yes" xml:space="preserve">
          <source>Loads and validates against the DTD. Default to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2854981040ebc89d824b01f362915ae9535746" translate="yes" xml:space="preserve">
          <source>Loads the PHP extension given by the parameter &lt;code&gt;library&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2df127d7d8b32c7cbe85055bc2056b8f610768" translate="yes" xml:space="preserve">
          <source>Loads the given binary dump into the APC file/user cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540173ed69a649a524ad7811f1f0db1753df9067" translate="yes" xml:space="preserve">
          <source>Local communication protocol family. High efficiency and low overhead make it a great form of IPC (Interprocess Communication).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48521dbea62a9ac1994ba37b7d25a5bbbcc9ab57" translate="yes" xml:space="preserve">
          <source>Local currency symbol (i.e. $)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4196f78acb5e15163031bb305c6c69a7881387" translate="yes" xml:space="preserve">
          <source>Local currency symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2ed2bf721d5e7f2f35ecce1e66270cf1955201" translate="yes" xml:space="preserve">
          <source>Local fractional digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fe44f4dfdaaee697cbc1d63fbf38be968c449f" translate="yes" xml:space="preserve">
          <source>Local fractional digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09cfcfe3954b52ae5319398c264796445f6e59b" translate="yes" xml:space="preserve">
          <source>Locale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88c96d682ab7fa34094cfa1371d87911b4d91e2" translate="yes" xml:space="preserve">
          <source>Locale (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2830bb9beec96cf98af337b93389f2d2cd38870" translate="yes" xml:space="preserve">
          <source>Locale for which the resources should be loaded (locale name, e.g. en_CA).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f520fb6847441219e5ab8e6713dcdf5ad7d556" translate="yes" xml:space="preserve">
          <source>Locale in which the number would be formatted (locale name, e.g. en_CA).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89525fa20f6dfbc3720acec7d722c9ab5aff91a2" translate="yes" xml:space="preserve">
          <source>Locale to use when formatting or parsing or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; to use the value specified in the ini setting &lt;a href=&quot;https://secure.php.net/manual/en/intl.configuration.php#ini.intl.default-locale&quot;&gt;intl.default_locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd444d86701eaf0c74dc1216f87ef5cf1d66a92" translate="yes" xml:space="preserve">
          <source>Locale::acceptFromHttp</source>
          <target state="translated">Locale::acceptFromHttp</target>
        </trans-unit>
        <trans-unit id="3c4df1ce89fdf8bc8054e1eab4eba9d395899dd2" translate="yes" xml:space="preserve">
          <source>Locale::acceptFromHttp &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f47bb641477c4ff9963c26ab1b0768c45c4c36" translate="yes" xml:space="preserve">
          <source>Locale::acceptFromHttp -- locale_accept_from_http &amp;mdash; Tries to find out best available locale based on HTTP &quot;Accept-Language&quot; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7180d26438ba7fa9cb70cecbd59c9e7c5875f58" translate="yes" xml:space="preserve">
          <source>Locale::canonicalize</source>
          <target state="translated">Locale::canonicalize</target>
        </trans-unit>
        <trans-unit id="37c6213bdd618a220b3dd3bd5bbcb9fda65ca9dc" translate="yes" xml:space="preserve">
          <source>Locale::canonicalize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28d71a03303b9854b47b585e3ddb4357def94e7" translate="yes" xml:space="preserve">
          <source>Locale::canonicalize -- locale_canonicalize &amp;mdash; Canonicalize the locale string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b3a5e41457251501dedc380518527d5906ef40" translate="yes" xml:space="preserve">
          <source>Locale::composeLocale</source>
          <target state="translated">Locale::composeLocale</target>
        </trans-unit>
        <trans-unit id="5438d1a8c25499a973bda120b0bdf359e6645123" translate="yes" xml:space="preserve">
          <source>Locale::composeLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fb4a0f687efcb818a84af30776c9a09a4264b1" translate="yes" xml:space="preserve">
          <source>Locale::composeLocale -- locale_compose &amp;mdash; Returns a correctly ordered and delimited locale ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278c5952fce9207a0a3387db01f26088bbc470b3" translate="yes" xml:space="preserve">
          <source>Locale::filterMatches</source>
          <target state="translated">Locale::filterMatches</target>
        </trans-unit>
        <trans-unit id="92e327f6d33d1bd5676cb54e061e103ae0615f81" translate="yes" xml:space="preserve">
          <source>Locale::filterMatches &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c9c89dd189cf9127779d4780009737503ff9bc" translate="yes" xml:space="preserve">
          <source>Locale::filterMatches -- locale_filter_matches &amp;mdash; Checks if a language tag filter matches with locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbf3ef6c426a51ec56b7ac23bc1e053e028f037" translate="yes" xml:space="preserve">
          <source>Locale::getAllVariants</source>
          <target state="translated">Locale::getAllVariants</target>
        </trans-unit>
        <trans-unit id="90248c61708bfd1d55f84133955c75cf313c5008" translate="yes" xml:space="preserve">
          <source>Locale::getAllVariants &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857ed4bf17b4c2334174a055d736f7a045f5248d" translate="yes" xml:space="preserve">
          <source>Locale::getAllVariants -- locale_get_all_variants &amp;mdash; Gets the variants for the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df713d3c27a3acfc2f32502efb07fec0126823e9" translate="yes" xml:space="preserve">
          <source>Locale::getDefault</source>
          <target state="translated">Locale::getDefault</target>
        </trans-unit>
        <trans-unit id="9d928e9a1b30ff30c957e1e9c3e40e22c49a7703" translate="yes" xml:space="preserve">
          <source>Locale::getDefault &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84cb43c73a6a874029668762192168f46441c5b" translate="yes" xml:space="preserve">
          <source>Locale::getDefault -- locale_get_default &amp;mdash; Gets the default locale value from the INTL global 'default_locale'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a3071aa867689449536f09db572425be4a73a4" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayLanguage</source>
          <target state="translated">Locale::getDisplayLanguage</target>
        </trans-unit>
        <trans-unit id="5aced0f4031a3bd86f1e1a406d2d6ce0efac32f3" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayLanguage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544d59943c401d2abccd528b71fb7b88e991bdba" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayLanguage -- locale_get_display_language &amp;mdash; Returns an appropriately localized display name for language of the inputlocale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc0322cb47e44285400b26177c0835c2f2b9c00" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayName</source>
          <target state="translated">Locale::getDisplayName</target>
        </trans-unit>
        <trans-unit id="60fe63c1dd594fc090f32661f8c47fb880ca83a1" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2213a275189c745f1ed740f53701c617ef7744c8" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayName -- locale_get_display_name &amp;mdash; Returns an appropriately localized display name for the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a504d27d4b6249757873564022414c902980d8e2" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayRegion</source>
          <target state="translated">Locale::getDisplayRegion</target>
        </trans-unit>
        <trans-unit id="c7c209fe93195937d0a80b10e32e64e79a5b0c31" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayRegion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed723c97e2be79946649be01f788ee3375e59f37" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayRegion -- locale_get_display_region &amp;mdash; Returns an appropriately localized display name for region of the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1172f85f98f59bd695355797b6e392d5a146a2b7" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayScript</source>
          <target state="translated">Locale::getDisplayScript</target>
        </trans-unit>
        <trans-unit id="c9bf1cbe875dc90f879aec1dbef166dcfdecd6ec" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayScript &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abd3f088eea10a5c4cb2cf876cb761902154949" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayScript -- locale_get_display_script &amp;mdash; Returns an appropriately localized display name for script of the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4feb2c15cafad3d6c157fe6d50f57e5048db85cf" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayVariant</source>
          <target state="translated">Locale::getDisplayVariant</target>
        </trans-unit>
        <trans-unit id="b806b9f278a949cc1268437cf6f572f73916aa87" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayVariant &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08cb7f332c1f798bdcf3b5cd8251d5d4eb2a467" translate="yes" xml:space="preserve">
          <source>Locale::getDisplayVariant -- locale_get_display_variant &amp;mdash; Returns an appropriately localized display name for variants of the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cf360bf4cade22dd17b1f113d19454ef44bc61" translate="yes" xml:space="preserve">
          <source>Locale::getKeywords</source>
          <target state="translated">Locale::getKeywords</target>
        </trans-unit>
        <trans-unit id="be67e287b4db0e325abe096c8a3d95dc15fdb917" translate="yes" xml:space="preserve">
          <source>Locale::getKeywords &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20d4cfa467d3c9a0056a7bb672a16817ee820c8" translate="yes" xml:space="preserve">
          <source>Locale::getKeywords -- locale_get_keywords &amp;mdash; Gets the keywords for the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2617536eabc59e17b7c9eb28dff17fd7068b7608" translate="yes" xml:space="preserve">
          <source>Locale::getPrimaryLanguage</source>
          <target state="translated">Locale::getPrimaryLanguage</target>
        </trans-unit>
        <trans-unit id="91b13f016c5a3a6089df80c09995a5fedc341aef" translate="yes" xml:space="preserve">
          <source>Locale::getPrimaryLanguage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af16bbd8aac000c436e9c0c672a6f110ab00ef1" translate="yes" xml:space="preserve">
          <source>Locale::getPrimaryLanguage -- locale_get_primary_language &amp;mdash; Gets the primary language for the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e8201d4c33d75707907871c380d5d8f327d14d" translate="yes" xml:space="preserve">
          <source>Locale::getRegion</source>
          <target state="translated">Locale::getRegion</target>
        </trans-unit>
        <trans-unit id="1a6c16913a8d455084fad3ba173dea85ebfacc70" translate="yes" xml:space="preserve">
          <source>Locale::getRegion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699c5a188228f6b9e550e437b8b90603bff17b9b" translate="yes" xml:space="preserve">
          <source>Locale::getRegion -- locale_get_region &amp;mdash; Gets the region for the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920f7740018f5606a3b18c230d518f5fb0e547ec" translate="yes" xml:space="preserve">
          <source>Locale::getScript</source>
          <target state="translated">Locale::getScript</target>
        </trans-unit>
        <trans-unit id="d66ce47f6b77118e9a2cab06fb265d50057c23a3" translate="yes" xml:space="preserve">
          <source>Locale::getScript &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ac90ca049ad9bff17b5cfeccd9314b5d65097a" translate="yes" xml:space="preserve">
          <source>Locale::getScript -- locale_get_script &amp;mdash; Gets the script for the input locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b126f967c2bccdbc883783cd57f3d8a2345c2bdc" translate="yes" xml:space="preserve">
          <source>Locale::lookup</source>
          <target state="translated">Locale::lookup</target>
        </trans-unit>
        <trans-unit id="2cbbb8ac12d73568104da3b97f0c13eb0f91e3ca" translate="yes" xml:space="preserve">
          <source>Locale::lookup &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1f7ad4ec379261cf176d6216d829c0ba6db90d" translate="yes" xml:space="preserve">
          <source>Locale::lookup -- locale_lookup &amp;mdash; Searches the language tag list for the best match to the language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fda2c8665050eadfbcd15a4a2835fbe5ea8ff7d" translate="yes" xml:space="preserve">
          <source>Locale::parseLocale</source>
          <target state="translated">Locale::parseLocale</target>
        </trans-unit>
        <trans-unit id="c61e008a847fa059a8dfd641557904f0e5b808d4" translate="yes" xml:space="preserve">
          <source>Locale::parseLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba890b273cf1c8eec46e74e02f4cb978c3796fb" translate="yes" xml:space="preserve">
          <source>Locale::parseLocale -- locale_parse &amp;mdash; Returns a key-value array of locale ID subtag elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93497f926b32269bde04a376ce452b47b2bb677f" translate="yes" xml:space="preserve">
          <source>Locale::setDefault</source>
          <target state="translated">Locale::setDefault</target>
        </trans-unit>
        <trans-unit id="bc0537978adfb32acbbc12a80846b4ba1ac6d17b" translate="yes" xml:space="preserve">
          <source>Locale::setDefault &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c577549b0d5036cdacfc13815d2d12db30843da" translate="yes" xml:space="preserve">
          <source>Locale::setDefault -- locale_set_default &amp;mdash; Sets the default runtime locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7417ac6fa0054e4f9f4192b1194f6375f96e75b6" translate="yes" xml:space="preserve">
          <source>Locales cannot be instantiated as objects. All of the functions/methods provided are static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c57a6545e38372aafb78b88c38a30531517d719" translate="yes" xml:space="preserve">
          <source>Localized software products often require sets of data that are to be customized depending on current locale, e.g.: messages, labels, formatting patterns. ICU resource mechanism allows to define sets of resources that the application can load on locale basis, while accessing them in unified locale-independent fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e4d528545f5be1fa2efb722982a7752c08b8e6" translate="yes" xml:space="preserve">
          <source>Localtime compatible array of integers : contains 24 hour clock value in tm_hour field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0117f82fce415501ebdfe7e65416107ece5e41" translate="yes" xml:space="preserve">
          <source>Locate the Nth index present in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68ca716cbff525d1931ad0388bddc17d6dc4822" translate="yes" xml:space="preserve">
          <source>Locates an entry using its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3903ef697b216fa78643a54557ee129ca4250554" translate="yes" xml:space="preserve">
          <source>Location where to extract the files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e701a5d4592c3b0f6cfae1f66203af068b4adc43" translate="yes" xml:space="preserve">
          <source>Lock the referenced objects property table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992f73d36210b510cf2ca18a8e866544e3855fe4" translate="yes" xml:space="preserve">
          <source>Locks or unlocks the file in the same portable way as &lt;a href=&quot;function.flock&quot;&gt;flock()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b72e8fb7a45ce9cc05f176889839dc95daae9c9" translate="yes" xml:space="preserve">
          <source>Log (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31af60d63e57bbd9529e1b094330a17477655d0e" translate="yes" xml:space="preserve">
          <source>Log tag index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91917c37c29aab86500c698fec93e0fd8612e619" translate="yes" xml:space="preserve">
          <source>Log to email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2494cc1d1a861e6b11c84d19b92dda9f4c16efc0" translate="yes" xml:space="preserve">
          <source>Log::__construct</source>
          <target state="translated">Log::__construct</target>
        </trans-unit>
        <trans-unit id="494023fdc14d92b35b9fe4883d282d35fb1dc42b" translate="yes" xml:space="preserve">
          <source>Log::getLine</source>
          <target state="translated">Log::getLine</target>
        </trans-unit>
        <trans-unit id="7181e046ac387e11c0e8f35f508650a88da34144" translate="yes" xml:space="preserve">
          <source>Log::getTagName</source>
          <target state="translated">Log::getTagName</target>
        </trans-unit>
        <trans-unit id="f893a960423a92fb508b8c8db70ad48a3045e4fb" translate="yes" xml:space="preserve">
          <source>LogSeverity</source>
          <target state="translated">LogSeverity</target>
        </trans-unit>
        <trans-unit id="e5987ef322c439ce27287d81ea789e9e14eab13b" translate="yes" xml:space="preserve">
          <source>LogSubsystems</source>
          <target state="translated">LogSubsystems</target>
        </trans-unit>
        <trans-unit id="ce4b65fe82415adc760e0eb4b4228c244fdf35f4" translate="yes" xml:space="preserve">
          <source>LogicException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85de50a6c35013475b4e52bd150357d5e11a7b56" translate="yes" xml:space="preserve">
          <source>LogicException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1723b5fe8689faa1391016cd3f2d7822baf8e789" translate="yes" xml:space="preserve">
          <source>Logical Operators &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7234c2169e8da83f5ee157def1b5fe36e0647208" translate="yes" xml:space="preserve">
          <source>Logo GUIDs were replaced with data URIs, and so turning off expose_php now has no effect on the result of phpinfo(). Credits are also now embedded within the output itself instead of linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5aabe630b592465adeef3eface2a62d32ff85c0" translate="yes" xml:space="preserve">
          <source>Logs in to the given FTP stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1e3e9f65ba3ed76fa8afc955809a9b147ce647" translate="yes" xml:space="preserve">
          <source>Long style (January 12, 1952 or 3:30:32pm)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c38f251af9722c54c8cd398eb22010fc619914" translate="yes" xml:space="preserve">
          <source>Longitude in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ce6b77febfb86614f04321e830de103cf6606f" translate="yes" xml:space="preserve">
          <source>Looks up a current parameter setting of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f27f82ac8c3746917c9bcc2f2679815120325df" translate="yes" xml:space="preserve">
          <source>Looks up a message in the current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcc5fd311c80fdbad6fd1ba4136da371f87487b" translate="yes" xml:space="preserve">
          <source>Lookup different ways we can connect to &lt;code&gt;host&lt;/code&gt;. The returned array contains a set of resources that we can bind to using &lt;a href=&quot;function.socket-addrinfo-bind&quot;&gt;socket_addrinfo_bind()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306e7ce64f3d1438f507eab197e5e6e1a42d4fcd" translate="yes" xml:space="preserve">
          <source>Lookup in scope namespace for a given prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f3bc6ed07233f8f176f28eebef9ee45038eb6a" translate="yes" xml:space="preserve">
          <source>Looping over, and printing out, error trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdb31ff3d686091661cb82033104e4eebaf3ca7" translate="yes" xml:space="preserve">
          <source>Looping over, and printing out, exception trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7f7cd083c72350ecca71788d6c639956bfe754" translate="yes" xml:space="preserve">
          <source>Low watermark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d02344512d2df8d3c144e0fce038fb259bfc59a" translate="yes" xml:space="preserve">
          <source>Lower case letter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800e988fa5bbcb3ed9bb12117637c7e21cab093d" translate="yes" xml:space="preserve">
          <source>Lowercase Ante meridiem and Post meridiem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0832074630eb731d7fbe8074de48a90cd9bb220" translate="yes" xml:space="preserve">
          <source>Lua</source>
          <target state="translated">Lua</target>
        </trans-unit>
        <trans-unit id="9bcf0570f16725caf0a12569647381dd92c6e6ea" translate="yes" xml:space="preserve">
          <source>Lua &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09807e23cad8cd3cf59c1950cfcad7f884670b8a" translate="yes" xml:space="preserve">
          <source>Lua::__call</source>
          <target state="translated">Lua::__call</target>
        </trans-unit>
        <trans-unit id="caa9b8a2920912ff0b78ae2c83ab266d4c13388f" translate="yes" xml:space="preserve">
          <source>Lua::__construct</source>
          <target state="translated">Lua::__construct</target>
        </trans-unit>
        <trans-unit id="ee4d1ecabfb1a81dc11ff53dcddd8ad9b7f8be62" translate="yes" xml:space="preserve">
          <source>Lua::__construct &amp;mdash; Lua constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13547de7794c8ab330dd122dc9265b4da7fa9576" translate="yes" xml:space="preserve">
          <source>Lua::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59563e8ab9defa9821e118c946d6e0e8ba7fd4e" translate="yes" xml:space="preserve">
          <source>Lua::assign</source>
          <target state="translated">Lua::assign</target>
        </trans-unit>
        <trans-unit id="06e54699f6d989b4550d5ed63d03da51f21c3f58" translate="yes" xml:space="preserve">
          <source>Lua::assign &amp;mdash; Assign a PHP variable to Lua</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44edb09496499e07e774cd5cfa78ed4ca5e95544" translate="yes" xml:space="preserve">
          <source>Lua::assign &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5206e28d988bb82c90569888bcb83dd8bfd9c5ad" translate="yes" xml:space="preserve">
          <source>Lua::call</source>
          <target state="translated">Lua::call</target>
        </trans-unit>
        <trans-unit id="bf113eda74d4599252829825f07f56a58f1e44dd" translate="yes" xml:space="preserve">
          <source>Lua::call &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daafc1a9f85172c3ece4114a30fcf4e2af10fc8a" translate="yes" xml:space="preserve">
          <source>Lua::call -- Lua::__call &amp;mdash; Call Lua functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb9d89e984a8417a38023236255b5645e3a2f75" translate="yes" xml:space="preserve">
          <source>Lua::eval</source>
          <target state="translated">Lua::eval</target>
        </trans-unit>
        <trans-unit id="f73b3b8ea2673bf656b63d4b2682376e4423d81b" translate="yes" xml:space="preserve">
          <source>Lua::eval &amp;mdash; Evaluate a string as Lua code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15b9e135372992230898ff34617071a42f6858b" translate="yes" xml:space="preserve">
          <source>Lua::eval &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d398599ebd4782544c9a485643d87049e86ed0" translate="yes" xml:space="preserve">
          <source>Lua::getVersion</source>
          <target state="translated">Lua::getVersion</target>
        </trans-unit>
        <trans-unit id="16abd376ecbaf1d457493c5075c4d7585c221982" translate="yes" xml:space="preserve">
          <source>Lua::getVersion &amp;mdash; The getversion purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb90fa1fcb0ed79a2c301d7683f8eded6f5a49c2" translate="yes" xml:space="preserve">
          <source>Lua::getVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f972dcf29ea123dbe07be5c554e745808ec291f" translate="yes" xml:space="preserve">
          <source>Lua::include</source>
          <target state="translated">Lua::include</target>
        </trans-unit>
        <trans-unit id="6c1b411a47767dd5d7b875494a1e11ae729a8e13" translate="yes" xml:space="preserve">
          <source>Lua::include &amp;mdash; Parse a Lua script file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3734f659a7d2c918a3730bf434208d03bb45115" translate="yes" xml:space="preserve">
          <source>Lua::include &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2dd8cb004c8157b17cffaf09f7a75adf289335" translate="yes" xml:space="preserve">
          <source>Lua::registerCallback</source>
          <target state="translated">Lua::registerCallback</target>
        </trans-unit>
        <trans-unit id="3a4dff87b12cac458005bd58add7a0a16a2e7a3b" translate="yes" xml:space="preserve">
          <source>Lua::registerCallback &amp;mdash; Register a PHP function to Lua</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b082e00c4d44311969ffaa38bf3e73cb228372" translate="yes" xml:space="preserve">
          <source>Lua::registerCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bca0b01ec84eba73efaaf7f1039694cb6c94efe" translate="yes" xml:space="preserve">
          <source>LuaClosure &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ef949ea6312f146bcf6d2de3ea3cbd3ef70d12" translate="yes" xml:space="preserve">
          <source>LuaClosure is a wrapper class for LUA_TFUNCTION which could be return from calling to Lua function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776187bae4b11545c6c8db18e462f25c6b06fdff" translate="yes" xml:space="preserve">
          <source>LuaClosure::__invoke</source>
          <target state="translated">LuaClosure::__invoke</target>
        </trans-unit>
        <trans-unit id="f1c6a46bf08aea0cbeb2cecf785ff49b54c81681" translate="yes" xml:space="preserve">
          <source>LuaClosure::__invoke &amp;mdash; Invoke luaclosure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6282690c54bea86b4201e02e630544448a59fe06" translate="yes" xml:space="preserve">
          <source>LuaClosure::__invoke &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d8a011b926daf84004138096b5e0a2869e1f29" translate="yes" xml:space="preserve">
          <source>Lucene supports escaping special characters that are part of the query syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19413b0ca3442b7e5b2ead7b5719a260d8ebc6dd" translate="yes" xml:space="preserve">
          <source>MAXIMUM_SCALE</source>
          <target state="translated">MAXIMUM_SCALE</target>
        </trans-unit>
        <trans-unit id="2d4aa5a5271bf55bf5139dda546f0f30ba06a6bd" translate="yes" xml:space="preserve">
          <source>MIME</source>
          <target state="translated">MIME</target>
        </trans-unit>
        <trans-unit id="bfc3c78d950e9aa21db5fd08cac41b0ca2ee561e" translate="yes" xml:space="preserve">
          <source>MIME character set to use when searching strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45111423e810db3db8b0a52609a750bda63f60e0" translate="yes" xml:space="preserve">
          <source>MIME character set to use when sorting strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dff6b4f53293d6f4e9a3d4ab39db01c395d106c" translate="yes" xml:space="preserve">
          <source>MIME type of the file (default is &lt;em&gt;application/octet-stream&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab6775681b0f15137bb4d28f0ec4dee808d180e" translate="yes" xml:space="preserve">
          <source>MIME type to be used in POST data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b09af59d22dcce1d626524b5d6f9e3cc20d6e81" translate="yes" xml:space="preserve">
          <source>MINIMUM_SCALE</source>
          <target state="translated">MINIMUM_SCALE</target>
        </trans-unit>
        <trans-unit id="6bfef49ec2b223347d0828c05410c230fcd4b723" translate="yes" xml:space="preserve">
          <source>MONEY</source>
          <target state="translated">MONEY</target>
        </trans-unit>
        <trans-unit id="ab564241d56d2a6d9b704ecfba0866b810008b1e" translate="yes" xml:space="preserve">
          <source>MSDN</source>
          <target state="translated">MSDN</target>
        </trans-unit>
        <trans-unit id="80648bd31f027ab56b88119a6b2a4170e50a0c12" translate="yes" xml:space="preserve">
          <source>MYSQLI_STMT_ATTR_CURSOR_TYPE</source>
          <target state="translated">MYSQLI_STMT_ATTR_CURSOR_TYPE</target>
        </trans-unit>
        <trans-unit id="a8dd9cf7c3a4171990b990ca91d8c515b8e23ffb" translate="yes" xml:space="preserve">
          <source>MYSQLI_STMT_ATTR_PREFETCH_ROWS</source>
          <target state="translated">MYSQLI_STMT_ATTR_PREFETCH_ROWS</target>
        </trans-unit>
        <trans-unit id="bb1b3375eac66e3f60ea3a576cf4102211755ebe" translate="yes" xml:space="preserve">
          <source>MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH</source>
          <target state="translated">MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH</target>
        </trans-unit>
        <trans-unit id="b4148d5a608032dae5ce995df075e46f0eaf8912" translate="yes" xml:space="preserve">
          <source>MacRoman</source>
          <target state="translated">MacRoman</target>
        </trans-unit>
        <trans-unit id="e8ce36a4e5df574d208ecc8a3cbc9683d0972633" translate="yes" xml:space="preserve">
          <source>Magic Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dc2189135f9b018f7b5590d400b7056202707d" translate="yes" xml:space="preserve">
          <source>Magic Methods &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0ebd98fa5e6d797bebdd2c2d2dbacb085a7bcb" translate="yes" xml:space="preserve">
          <source>Magic constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf6f7871f1f7bfce9dbd0267d1950492105bed6" translate="yes" xml:space="preserve">
          <source>Magic constants &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18809d1bd94f9b121dfffd96d980ab2e7f856ce" translate="yes" xml:space="preserve">
          <source>Magic method for accessing the field as a property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1516111b16deb8a7e6ba52984a57aea8c04f0a" translate="yes" xml:space="preserve">
          <source>MagickQueryFontMetrics() returns an array representing the font metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d717610253be2a3285ede277b8ccfa72d4ba2ab" translate="yes" xml:space="preserve">
          <source>Magnified Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92379cbb8ecf696194b47b619a87e9e4f9a75db2" translate="yes" xml:space="preserve">
          <source>Mail</source>
          <target state="translated">Mail</target>
        </trans-unit>
        <trans-unit id="d61077b6a869351264398e63c77c6bfd2a68eefd" translate="yes" xml:space="preserve">
          <source>Mail &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b5899eb88a7b4f7a40aa7676be66f6cf183f85" translate="yes" xml:space="preserve">
          <source>Mail Related Extensions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8927b920290c0a6664691a1bb97eefb0404aeba1" translate="yes" xml:space="preserve">
          <source>MailDate -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5c26f8354eb006b6774108508df2bad6245927" translate="yes" xml:space="preserve">
          <source>Mailbox</source>
          <target state="translated">Mailbox</target>
        </trans-unit>
        <trans-unit id="d34f8a6a81a2f394062af8af54a47a4fab43b637" translate="yes" xml:space="preserve">
          <source>Mailparse &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d702596afcae0b1571e08f8b03bcc68dff61341a" translate="yes" xml:space="preserve">
          <source>Make a single, non-blocking sweep over the embedded loop. Works similarly to the following, but in the most appropriate way for embedded loops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be07e15bc57314becf10408ca603258a31b7add7" translate="yes" xml:space="preserve">
          <source>Make a string tainted. This is used for testing purpose only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c4383a89f417807fa65e5a80f1e26921a2c0d7" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;replacement&lt;/code&gt; constitutes a valid PHP code string, otherwise PHP will complain about a parse error at the line containing &lt;a href=&quot;function.preg-replace&quot;&gt;preg_replace()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50edfc88bce2e8a1e5e6e5f8a253cb9e570b2d08" translate="yes" xml:space="preserve">
          <source>Make the current process a session leader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c180879298c1d4e07f0855c3944c171c3018357" translate="yes" xml:space="preserve">
          <source>Makes &lt;a href=&quot;filesystemiterator.current&quot;&gt;FilesystemIterator::current()&lt;/a&gt; return $this (the FilesystemIterator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27c4c88f28e2feeeb64ef06739c4c9661b9bc65" translate="yes" xml:space="preserve">
          <source>Makes &lt;a href=&quot;filesystemiterator.current&quot;&gt;FilesystemIterator::current()&lt;/a&gt; return an &lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706d9756c2fb8dbf2e7f6325b0cc49f56bb3c0a4" translate="yes" xml:space="preserve">
          <source>Makes &lt;a href=&quot;filesystemiterator.current&quot;&gt;FilesystemIterator::current()&lt;/a&gt; return the pathname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ded293a03cb9575c2af684e0dbba6ff0a2ba41" translate="yes" xml:space="preserve">
          <source>Makes &lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator::key()&lt;/a&gt; return the filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc018aaacaa7939d3d6b2be53c5d56c855a93629" translate="yes" xml:space="preserve">
          <source>Makes &lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator::key()&lt;/a&gt; return the pathname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6699214d61f6179e896ef1926aa7c90c69f5a130" translate="yes" xml:space="preserve">
          <source>Makes &lt;a href=&quot;recursivedirectoryiterator.haschildren&quot;&gt;RecursiveDirectoryIterator::hasChildren()&lt;/a&gt; follow symlinks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013beb929a4ec6009983373408220c592b5410ac" translate="yes" xml:space="preserve">
          <source>Makes a copy of the file &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f81f388e7c46509697d371ec8d2524f1dcf1df5" translate="yes" xml:space="preserve">
          <source>Makes a copy of up to &lt;code&gt;maxlength&lt;/code&gt; bytes of data from the current position (or from the &lt;code&gt;offset&lt;/code&gt; position, if specified) in &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. If &lt;code&gt;maxlength&lt;/code&gt; is not specified, all remaining content in &lt;code&gt;source&lt;/code&gt; will be copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63efe5217cea980bd5084c066368e7b1b4be7f15" translate="yes" xml:space="preserve">
          <source>Makes all nested &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; (or &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; ) calls return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c377bc413581f85e698f53a1a5c4b8e4c4f307e1" translate="yes" xml:space="preserve">
          <source>Makes an HTTP request over the specified connection. &lt;code&gt;type&lt;/code&gt; is one of &lt;em&gt;EventHttpRequest::CMD_*&lt;/em&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90dc9e506050788e15fdf887d51c47ae6c540656" translate="yes" xml:space="preserve">
          <source>Makes an HTTP server accept connections on the specified socket stream or resource. The socket should be ready to accept connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafae73dd2d53b8ce8dc1740e7dbc15a066f627d" translate="yes" xml:space="preserve">
          <source>Makes an exact copy of the Imagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9034dd108913ccef6d7d9c62a310462f9d0a45ca" translate="yes" xml:space="preserve">
          <source>Makes an exact copy of the specified ImagickDraw object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cf36b938c1de239a9f2b243d3868125e8e8b2d" translate="yes" xml:space="preserve">
          <source>Makes libev check for a fork in each iteration, instead of calling &lt;a href=&quot;evloop.fork&quot;&gt;EvLoop::fork()&lt;/a&gt; manually. This works by calling &lt;em&gt;getpid()&lt;/em&gt; on every iteration of the loop, and thus this might slow down the event loop with lots of loop iterations, but usually is not noticeable. This flag setting cannot be overridden or specified in the &lt;var&gt;&lt;var&gt;LIBEV_FLAGS&lt;/var&gt;&lt;/var&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afacdda7fe66b3ba998f8be345b7a2d5a3710a0" translate="yes" xml:space="preserve">
          <source>Makes paths use Unix-style forward slash irrespective of system default. Note that the &lt;code&gt;path&lt;/code&gt; that is passed to the constructor is not modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b572013ee1881a44b5add0066a9152caa9049ab" translate="yes" xml:space="preserve">
          <source>Makes the colors of the palette version of an image more closely match the true color version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2530a647eaa94b1a228561801a520f00126f2dc" translate="yes" xml:space="preserve">
          <source>Makes the innermost &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; (or &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; ) call return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e259bbd8da0960e264383106dece0192a8bf2e0" translate="yes" xml:space="preserve">
          <source>Makes the next result of the specified statement active. Results include result sets, row counts, and output parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5484a971ca902ee41b9609420012d4de1c75d14f" translate="yes" xml:space="preserve">
          <source>Makes the next row in a result set available for reading. Use &lt;a href=&quot;function.sqlsrv-get-field&quot;&gt;sqlsrv_get_field()&lt;/a&gt; to read the fields of the row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7de4052985b5cfc98631c0a92f76bd5a6ced3ac" translate="yes" xml:space="preserve">
          <source>Makes the script sleep until the specified &lt;code&gt;timestamp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52517579e4d25f01abdfd720eac1fc3e7e89cc2" translate="yes" xml:space="preserve">
          <source>Makes thread safe standard class at runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e32f556ef21c22d7922f8d6c2849ae514e22466" translate="yes" xml:space="preserve">
          <source>Making use of the &lt;strong&gt;&lt;code&gt;PATH_SEPARATOR&lt;/code&gt;&lt;/strong&gt; constant, it is possible to extend the include path regardless of the operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5039a7640d7b79ed191f78bf9001cca1d537a37" translate="yes" xml:space="preserve">
          <source>Malformed UTF-16 characters, possibly incorrectly encoded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbaf36d11c2435c1c2e6076d805c47f6f8e8dfdf" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 characters, possibly incorrectly encoded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb17e8091cf6327287dcb97b2c87347a8ff625a6" translate="yes" xml:space="preserve">
          <source>Malloc failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33834b960a1613c3e7b54960f3b4528cbfa03056" translate="yes" xml:space="preserve">
          <source>Manages an OAuth provider class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd516f81d0b4a7a9f2ee9761a3f310e0f9075e08" translate="yes" xml:space="preserve">
          <source>Manipulating the serialised data by replacing &lt;em&gt;C:&lt;/em&gt; with &lt;em&gt;O:&lt;/em&gt; to force object instantiation without calling the constructor will now fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf28eff584a943aa02170fdf1895b533ac26f9fb" translate="yes" xml:space="preserve">
          <source>Manual reset event objects allow all waiting processes through until the object is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786329264507f0c8e87031bc93580c4bb4ed61c1" translate="yes" xml:space="preserve">
          <source>Many FTP servers do not support this command. These servers may return a failure code (&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;) indicating the command is not supported or a success code (&lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;) to indicate that pre-allocation is not necessary and the client should continue as though the operation were successful. Because of this, it may be best to reserve this function for servers which explicitly require preallocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c9513465d0827977422928299a918160efe32" translate="yes" xml:space="preserve">
          <source>Many developers writing object-oriented applications create one PHP source file per class definition. One of the biggest annoyances is having to write a long list of needed includes at the beginning of each script (one for each class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a245a50a96ca43f7514f8640d49e0da9c8cbf4" translate="yes" xml:space="preserve">
          <source>Many ini memory size values, such as &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.upload-max-filesize&quot;&gt;upload_max_filesize&lt;/a&gt;, are stored in the &lt;var&gt;php.ini&lt;/var&gt; file in shorthand notation. &lt;strong&gt;ini_get()&lt;/strong&gt; will return the exact string stored in the &lt;var&gt;php.ini&lt;/var&gt; file and &lt;em&gt;NOT&lt;/em&gt; its &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; equivalent. Attempting normal arithmetic functions on these values will not have otherwise expected results. The example above shows one way to convert shorthand notation into bytes, much like how the PHP source does it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e83122ca008ee9965d5f9d820c5bd1a7a3c4e99" translate="yes" xml:space="preserve">
          <source>Many internal functions (for example &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt;) will throw a warning if more than the expected number of argument are passed in and are not usable directly as a &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1544801cd4f4879592af27866e7c71f312228d" translate="yes" xml:space="preserve">
          <source>Many random number generators of older libcs have dubious or unknown characteristics and are slow. The &lt;strong&gt;mt_rand()&lt;/strong&gt; function is a drop-in replacement for the older &lt;a href=&quot;function.rand&quot;&gt;rand()&lt;/a&gt;. It uses a random number generator with known characteristics using the &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html&quot;&gt;&amp;raquo; Mersenne Twister&lt;/a&gt;, which will produce random numbers four times faster than what the average libc rand() provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f18bb60d89371371a713f9f71b0a047057f9e5" translate="yes" xml:space="preserve">
          <source>Many servers are configured to automatically highlight files with a &lt;em&gt;phps&lt;/em&gt; extension. For example, &lt;var&gt;example.phps&lt;/var&gt; when viewed will show the syntax highlighted source of the file. To enable this, add this line to the &lt;var&gt;httpd.conf&lt;/var&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0249a78be284adf81c071c75302a75713ac5b92c" translate="yes" xml:space="preserve">
          <source>Many syntax constructs in PHP are implemented via referencing mechanisms, so everything mentioned herein about reference binding also applies to these constructs. Some constructs, like passing and returning by reference, are mentioned above. Other constructs that use references are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9872087d2ad0bab87667568da11d274635e718d5" translate="yes" xml:space="preserve">
          <source>Many web pages marked as using the &lt;em&gt;ISO-8859-1&lt;/em&gt; character encoding actually use the similar &lt;em&gt;Windows-1252&lt;/em&gt; encoding, and web browsers will interpret &lt;em&gt;ISO-8859-1&lt;/em&gt; web pages as &lt;em&gt;Windows-1252&lt;/em&gt;. &lt;em&gt;Windows-1252&lt;/em&gt; features additional printable characters, such as the Euro sign (&lt;em&gt;&amp;euro;&lt;/em&gt;) and curly quotes (&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;), instead of certain &lt;em&gt;ISO-8859-1&lt;/em&gt; control characters. This function will not convert such &lt;em&gt;Windows-1252&lt;/em&gt; characters correctly. Use a different function if &lt;em&gt;Windows-1252&lt;/em&gt; conversion is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f346dc499a3b448f3fce2e8834d74e3c245d9ae" translate="yes" xml:space="preserve">
          <source>Map &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472f769bb956c558f2627a6e058d6a5db7d89e41" translate="yes" xml:space="preserve">
          <source>Map (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335d3020a3afd049c5ef9c1d09223a0c964dcdf2" translate="yes" xml:space="preserve">
          <source>Map of PHP variables that will be available in Javascript. Must be an associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; in format &lt;em&gt;array(&quot;name-for-js&quot; =&amp;gt; &quot;name-of-php-variable&quot;)&lt;/em&gt;. Defaults to empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9901a161951d46389d7e63e223edbed7aad8087e" translate="yes" xml:space="preserve">
          <source>Map of pixel ordering as a string. This can be for example &lt;em&gt;RGB&lt;/em&gt;. The value can be any combination or order of R = red, G = green, B = blue, A = alpha (0 is transparent), O = opacity (0 is opaque), C = cyan, Y = yellow, M = magenta, K = black, I = intensity (for grayscale), P = pad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf530bc07f087e624032dfe4c1c78fc2d3c749ce" translate="yes" xml:space="preserve">
          <source>Maps the specified character to a &quot;mirror-image&quot; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f9b108ea99ba955c3618535a5d88c4a30c6eb6" translate="yes" xml:space="preserve">
          <source>Maps the specified character to its paired bracket character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b234354b4eff44ae822c8f96d2ec63f1c5a06337" translate="yes" xml:space="preserve">
          <source>Maps to facet.date.end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be3fce964d207d4b277602b556b0059dfe6818" translate="yes" xml:space="preserve">
          <source>Maps to facet.date.gap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ae9419c3111d036cb27862f054446fb9540c5b" translate="yes" xml:space="preserve">
          <source>Maps to facet.date.hardend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a007a4939b1b42ec17face0b7397b058668727" translate="yes" xml:space="preserve">
          <source>Maps to facet.date.start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb47a8c146c623ccc5b910bbe9c397e2a864e8c" translate="yes" xml:space="preserve">
          <source>Maps to facet.limit. Sets the maximum number of constraint counts that should be returned for the facet fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede25362d35834336217c1bee0107e8c71ae4418" translate="yes" xml:space="preserve">
          <source>Maps to hl.fl. This is used to specify that highlighted snippets should be generated for a particular field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2280163bccecb40acdaa9ba798417d3ecd9007dd" translate="yes" xml:space="preserve">
          <source>Maps to mlt.fl. It specifies that a field should be used for similarity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8e40cf780538f78211d20a253a4f44095b16be" translate="yes" xml:space="preserve">
          <source>Maps to mlt.qf. It is used to specify query fields and their boosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f33202f95e09e7905a1174bea81a00c2e0c5e4a" translate="yes" xml:space="preserve">
          <source>Maps to stats.field parameter This methods adds another stats.field parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba198396919211b5cc001fc5c75509121e8ddbe" translate="yes" xml:space="preserve">
          <source>Maps where non-scalar keys are can't be converted to an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="c53a624386e5d5c22d56ee62533fe063e6e66915" translate="yes" xml:space="preserve">
          <source>Marks event pending. Non-pending event will never occur, and the event callback will never be called. In conjuction with &lt;a href=&quot;event.del&quot;&gt;Event::del()&lt;/a&gt; an event could be re-scheduled by user at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0ebc6659c6c878a89ba4fc72d7ab78a8cba798" translate="yes" xml:space="preserve">
          <source>Marks messages listed in &lt;code&gt;msg_number&lt;/code&gt; for deletion. Messages marked for deletion will stay in the mailbox until either &lt;a href=&quot;function.imap-expunge&quot;&gt;imap_expunge()&lt;/a&gt; is called or &lt;a href=&quot;function.imap-close&quot;&gt;imap_close()&lt;/a&gt; is called with the optional parameter &lt;strong&gt;&lt;code&gt;CL_EXPUNGE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a97b889e4ed92b8f8794f26ec9de67695c95ba" translate="yes" xml:space="preserve">
          <source>Marks the watcher as active. Note that only active watchers will receive events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329cf2061f3db8ff0e4178a0df845ee8d43ef9e1" translate="yes" xml:space="preserve">
          <source>Marks the watcher as inactive. Note that only active watchers will receive events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd7fdd7340689fb1bed0f234ed0dde7389a0a42" translate="yes" xml:space="preserve">
          <source>Masks &lt;a href=&quot;filesystemiterator.current&quot;&gt;FilesystemIterator::current()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691fd925fc8cb067939be8ad2671d2744040294a" translate="yes" xml:space="preserve">
          <source>Masks &lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator::key()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7169ee7ec7f4dc574ba75f0f4b31170c996d97" translate="yes" xml:space="preserve">
          <source>Match all query words (default mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55208fda292b53b26185d3b34a1f807b3714f740" translate="yes" xml:space="preserve">
          <source>Match any of query words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f785fc7d2421d10b86628cea127547d479645f65" translate="yes" xml:space="preserve">
          <source>Match query as a boolean expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dde7b5dc7d3bb1d87b8f051756ba0a7468880ec" translate="yes" xml:space="preserve">
          <source>Match query as a phrase, requiring perfect match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4736dd8b1b4f447f8a4a75df73d9b41aa8c45ef" translate="yes" xml:space="preserve">
          <source>Match query as an expression in Sphinx internal query language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b32a13d086b03c22439dc9e85959d326921fdb" translate="yes" xml:space="preserve">
          <source>Match ranking can be affected by per-field weights. See &lt;a href=&quot;http://sphinxsearch.com/&quot;&gt;&amp;raquo; Sphinx documentation&lt;/a&gt; for an explanation on how phrase proximity ranking is affected. This call lets you specify non-default weights for full-text fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="51a78676636f7c7b5cf0ef9225d55a80bb0bfa0e" translate="yes" xml:space="preserve">
          <source>Matches &lt;em&gt;(string)&lt;/em&gt;&lt;strong&gt;RegexIterator::current()&lt;/strong&gt; (or &lt;strong&gt;RegexIterator::key()&lt;/strong&gt; if the &lt;a href=&quot;class.regexiterator#regexiterator.constants.use-key&quot;&gt;RegexIterator::USE_KEY&lt;/a&gt; flag is set) against the regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df62c3ea0b89cfecb9eb1d5a4967751be047b9e2" translate="yes" xml:space="preserve">
          <source>Matching characters by Unicode property is not fast, because PCRE has to search a structure that contains data for over fifteen thousand characters. That is why the traditional escape sequences such as &lt;em&gt;\d&lt;/em&gt; and &lt;em&gt;\w&lt;/em&gt; do not use Unicode properties in PCRE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62afbdbef66fc0c38476f485fde061251558d633" translate="yes" xml:space="preserve">
          <source>Matching mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06a77cda1f0fe480299649af647924142a54fb7" translate="yes" xml:space="preserve">
          <source>Mathematical symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e774bacbdb4d919d66d929940fc5bdbe59d534" translate="yes" xml:space="preserve">
          <source>Mathematics</source>
          <target state="translated">Mathematics</target>
        </trans-unit>
        <trans-unit id="ac9a8e07d0c19629c291c5650f38356e48bf59c3" translate="yes" xml:space="preserve">
          <source>Maximum ID value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64898dd0de90f48b17fc232951dfd055827386dd" translate="yes" xml:space="preserve">
          <source>Maximum allowed watcher priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865f74e78a7b93437fa2f7f0982f68fb8c02919f" translate="yes" xml:space="preserve">
          <source>Maximum bytes to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1eb46de89508fb6a0b2683d07797e04952a0ab2" translate="yes" xml:space="preserve">
          <source>Maximum character length in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b77aa9f3263b6f5277b1b96c72ae59b3deccdf" translate="yes" xml:space="preserve">
          <source>Maximum fraction digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c061cd3a7a7cd73fb84008f5d6123c13a4949ec1" translate="yes" xml:space="preserve">
          <source>Maximum integer digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca4933d7c72fbcb0218a95ed610f5287abd5d8d" translate="yes" xml:space="preserve">
          <source>Maximum length of data read. The default is to read until end of file is reached. Note that this parameter is applied to the stream processed by the filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798681c9649f2e7c83bb3f8fe0fb941e53b1408a" translate="yes" xml:space="preserve">
          <source>Maximum length of the chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b51c51de69c0c302aa52a46a0c8ef4c7622dea3" translate="yes" xml:space="preserve">
          <source>Maximum length of this parameter is 1023 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc534b7128d2c2b6eaf0ac52fe611428e6003648" translate="yes" xml:space="preserve">
          <source>Maximum number items - based on the $extract_type - to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8099e9d8479df145a140dbad71866cd985cafd7" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6905151c518ba572922e307691fefc8d81d794e" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e2124a3b9ca0ef01f6b78e7af3b154f22d0c49" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to substract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142e324662d5b94d06774d7f1d3dcf8c8795f428" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a22a74a0253ab9926117798458a4736d94f943" translate="yes" xml:space="preserve">
          <source>Maximum number of characters to copy from &lt;code&gt;handle&lt;/code&gt; into the hashing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8423c88e3a9a765504e1532d2c3b5670f41d1e0" translate="yes" xml:space="preserve">
          <source>Maximum number of characters to use from &lt;code&gt;str&lt;/code&gt;. If omitted or &lt;em&gt;NULL&lt;/em&gt; is passed, extract all characters to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfe460edbae033c48e4f7f38a9a170d0f21580b" translate="yes" xml:space="preserve">
          <source>Maximum number of microseconds to wait, must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba00079c11612ebed71c2cdb1a8aa32966ba77c5" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds to wait, must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710bbd71bc627bd353d92ccdb10481c58b625f63" translate="yes" xml:space="preserve">
          <source>Maximum query time, in milliseconds. It must be a non-negative integer. Default value is 0, i.e. no limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e365350d384204b3351389f078f41dfcd8ad34" translate="yes" xml:space="preserve">
          <source>Maximum read chunk size in bytes when reading the body of a MySQL command packet. Only valid for mysqlnd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903659fdbbdfa9620e914cbab59140aad6a907ef" translate="yes" xml:space="preserve">
          <source>Maximum significant digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0235c2f9612e505c2c8ea37c7184b83563f408" translate="yes" xml:space="preserve">
          <source>Maximum snippet size, in symbols (codepoints). Integer, default is 256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5c2d1f45b8c52440004386685be2dcd8259ccf" translate="yes" xml:space="preserve">
          <source>Maximum value for &quot;int&quot; is &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40216b2881d06021d975a03d7b5087b46e8a3c1" translate="yes" xml:space="preserve">
          <source>Maximum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ec92de7a42cdc2baaf916eaa7be0f53d359f42" translate="yes" xml:space="preserve">
          <source>Maximum watermark value. &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; means &quot;unlimited&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e57c0c4291e8f3020d9f91e04360e9ba9c961c7" translate="yes" xml:space="preserve">
          <source>Maxmimum number of bytes to read from the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a776f601ebcf40d3284ece16a9efdc89952ea2" translate="yes" xml:space="preserve">
          <source>Maxmimum number of bytes to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82536a0e655129a0d65a863a70f78505cf9cc24a" translate="yes" xml:space="preserve">
          <source>May be an array or object containing properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810ae05ee9c9287db2b903d5547f7612a6e1e027" translate="yes" xml:space="preserve">
          <source>May be any scalar type. &lt;strong&gt;floatval()&lt;/strong&gt; should not be used on objects, as doing so will emit an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; level error and return 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6744ff7a4e411558144c184e778be6717b9a424b" translate="yes" xml:space="preserve">
          <source>May be any valid &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a807f7bf4921816f4215f6e3dc84932832294e26" translate="yes" xml:space="preserve">
          <source>May be created as a stream(not necessarily by means of &lt;em&gt;sockets&lt;/em&gt; extension)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341f7ba30cf5b647151d685a8f5daf81b8a84853" translate="yes" xml:space="preserve">
          <source>May be specified to begin searching an arbitrary number of characters into the &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. Negative values will stop searching at an arbitrary point prior to the end of the &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5dc3623c5715b78c5afe8f7774d72c042ee08c2" translate="yes" xml:space="preserve">
          <source>May be string, socket resource, or a stream associated with a socket. In case if &lt;code&gt;target&lt;/code&gt; is a string, the string will be parsed as network address. It will be interpreted as a UNIX domain socket path, if prefixed with &lt;em&gt;'unix:'&lt;/em&gt; , e.g. &lt;em&gt;'unix:/tmp/my.sock'&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12829a6c017bb17e77783b0a8b546ebc0f37d2a1" translate="yes" xml:space="preserve">
          <source>May include decimal numeric character references (of the form: &amp;amp;#8364;) to access characters in a font beyond position 127. The hexadecimal format (like &amp;amp;#xA9;) is supported. Strings in UTF-8 encoding can be passed directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4868d3cedeeec040149c43e7a4c75901f7b969f0" translate="yes" xml:space="preserve">
          <source>May only be used on file pointers returned by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; for local files, or file pointers pointing to userspace streams that implement the &lt;a href=&quot;streamwrapper.stream-lock&quot;&gt;streamWrapper::stream_lock()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e51bd7aacd45a00018450736a1968f2bf7ef7f" translate="yes" xml:space="preserve">
          <source>May return the current element in the iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efa80e76bb86d162983b514d281029048685284" translate="yes" xml:space="preserve">
          <source>May return the number of elements in the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d50459f19387276e66738c5b89c251d0c05afd5" translate="yes" xml:space="preserve">
          <source>May the sandbox call functions in its parent's context?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2ceff368836f6fef1f3239183ea3be45fd0c52" translate="yes" xml:space="preserve">
          <source>May the sandbox echo data in its parent's context effectively bypassing its own output_handler?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9457a629e1516125289038453ffc297eaabef98" translate="yes" xml:space="preserve">
          <source>May the sandbox evaluate arbitrary code in its parent's context? &lt;em&gt;DANGEROUS&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fab938ad9ffb274b8c8027b28d0c1e22e7ca68" translate="yes" xml:space="preserve">
          <source>May the sandbox include php code files in its parent's context? &lt;em&gt;DANGEROUS&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d12759fe5bd80f4c8d095e6d3982ba6d58be6e" translate="yes" xml:space="preserve">
          <source>May the sandbox kill its own parent? (And thus itself)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206313fdbcbede32cfdeb0d1bfc0b68e9f5f04ed" translate="yes" xml:space="preserve">
          <source>May the sandbox modify variables in its parent's context?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bddbca1bb5db689921e98b2344e816a5a16623a" translate="yes" xml:space="preserve">
          <source>May the sandbox read variables in its parent's context?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53d9fc416c46d8e3fb18f23775e5f3bbaf960c8" translate="yes" xml:space="preserve">
          <source>May the sandbox use instances of the &lt;strong&gt;Runkit_Sandbox_Parent&lt;/strong&gt; class? Must be enabled for other &lt;strong&gt;Runkit_Sandbox_Parent&lt;/strong&gt; related settings to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79e6a4a9509640bbbb16766296de212e114755c" translate="yes" xml:space="preserve">
          <source>Mcrypt &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="22473f56b131f8edd5328c209eb9e571c8534a07" translate="yes" xml:space="preserve">
          <source>Means that event loop will look for new events (waiting if necessary) and will handle those and any already outstanding ones. It will block the process until at least one new event arrives (which could be an event internal to libev itself, so there is no guarantee that a user-registered callback will be called), and will return after one iteration of the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f1e6c675f17f293f9854ae5bef9efa826ff332" translate="yes" xml:space="preserve">
          <source>Means that event loop will look for new events, will handle those events and any already outstanding ones, but will not wait and block the process in case there are no events and will return after one iteration of the loop. This is sometimes useful to poll and handle new events while doing lengthy calculations, to keep the program responsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aac22dbb5ec89dd86cadcb9fa9a0291df1d1a97" translate="yes" xml:space="preserve">
          <source>Medium style (Jan 12, 1952)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a97017a7dc22f5db94e3b92a91043b41d72b6b5" translate="yes" xml:space="preserve">
          <source>Memcache &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc301f7283a9e45e85a8a8deab4551d236d86a4" translate="yes" xml:space="preserve">
          <source>Memcached</source>
          <target state="translated">Memcached</target>
        </trans-unit>
        <trans-unit id="b9424e6eb9204b99f7882a69de0bf28e0b8be19d" translate="yes" xml:space="preserve">
          <source>Memcached Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a38b349aa2d13c8cac3e9ca5a955d5ce42ac812" translate="yes" xml:space="preserve">
          <source>Memcached::__construct</source>
          <target state="translated">Memcached::__construct</target>
        </trans-unit>
        <trans-unit id="c9d23cbd007c98c31106e730b980ea752bc47835" translate="yes" xml:space="preserve">
          <source>Memcached::__construct &amp;mdash; Create a Memcached instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266a722850a44530f773364db2136e9c27213718" translate="yes" xml:space="preserve">
          <source>Memcached::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3dfcb28fbe772107d5fe1ce847573d3627fca2" translate="yes" xml:space="preserve">
          <source>Memcached::add</source>
          <target state="translated">Memcached::add</target>
        </trans-unit>
        <trans-unit id="f756acffcfbd5d1c4fbb7ed839134515d2fe5436" translate="yes" xml:space="preserve">
          <source>Memcached::add &amp;mdash; Add an item under a new key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf5236d79f2006a2a633043c8202ff04e1d5900" translate="yes" xml:space="preserve">
          <source>Memcached::add &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f72910cb8bdec2aab3e717cc3393a08dd0fde0b" translate="yes" xml:space="preserve">
          <source>Memcached::addByKey</source>
          <target state="translated">Memcached::addByKey</target>
        </trans-unit>
        <trans-unit id="8cb6499330912e2aa71402aac0bbfba0a42182cc" translate="yes" xml:space="preserve">
          <source>Memcached::addByKey &amp;mdash; Add an item under a new key on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615808bb218282d6295732e43c2e6bc312402b0b" translate="yes" xml:space="preserve">
          <source>Memcached::addByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e787253ad405b7d7798fca70b70e663377e15f59" translate="yes" xml:space="preserve">
          <source>Memcached::addServer</source>
          <target state="translated">Memcached::addServer</target>
        </trans-unit>
        <trans-unit id="426bf85e6902ed266c90accda8d4f4afc82df965" translate="yes" xml:space="preserve">
          <source>Memcached::addServer &amp;mdash; Add a server to the server pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04870f08e18579c662de6524d5e9122b89818e44" translate="yes" xml:space="preserve">
          <source>Memcached::addServer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d06585f6f927601806b27a8f5d93b82b1165891" translate="yes" xml:space="preserve">
          <source>Memcached::addServers</source>
          <target state="translated">Memcached::addServers</target>
        </trans-unit>
        <trans-unit id="98f6d5a091792360470cd5bcb7d4123b7695c63c" translate="yes" xml:space="preserve">
          <source>Memcached::addServers &amp;mdash; Add multiple servers to the server pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1742979237d367dbc354b651c535b3ae868496a7" translate="yes" xml:space="preserve">
          <source>Memcached::addServers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3867ed0181f8e6b84fd3f9277b5195430b787b30" translate="yes" xml:space="preserve">
          <source>Memcached::append</source>
          <target state="translated">Memcached::append</target>
        </trans-unit>
        <trans-unit id="cbb94a7598815a8171c38791f330589a2ed38871" translate="yes" xml:space="preserve">
          <source>Memcached::append &amp;mdash; Append data to an existing item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfb75212c9680b804e12a236850bb6906948704" translate="yes" xml:space="preserve">
          <source>Memcached::append &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b15a60f5327ec0b593f664ec13f800d733017b4" translate="yes" xml:space="preserve">
          <source>Memcached::appendByKey</source>
          <target state="translated">Memcached::appendByKey</target>
        </trans-unit>
        <trans-unit id="032b6e2364fd6505ff42360aed8cec691b0dd6bc" translate="yes" xml:space="preserve">
          <source>Memcached::appendByKey &amp;mdash; Append data to an existing item on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562307243138e12eb31fd4585274f07f7b0d97a7" translate="yes" xml:space="preserve">
          <source>Memcached::appendByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b5f0ba8d6c19c8c972bed7ba20efe84b3446af" translate="yes" xml:space="preserve">
          <source>Memcached::cas</source>
          <target state="translated">Memcached::cas</target>
        </trans-unit>
        <trans-unit id="ebd370178c22c5c29b4a5645b9846d43646d9654" translate="yes" xml:space="preserve">
          <source>Memcached::cas &amp;mdash; Compare and swap an item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a941946545ab55a67c825f4b60185106bd97b2ff" translate="yes" xml:space="preserve">
          <source>Memcached::cas &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bdf688b54cdd48ccc476bf26888c831bb71d22" translate="yes" xml:space="preserve">
          <source>Memcached::casByKey</source>
          <target state="translated">Memcached::casByKey</target>
        </trans-unit>
        <trans-unit id="be8efeb86010320a37ee56191ebaea1d7daa9079" translate="yes" xml:space="preserve">
          <source>Memcached::casByKey &amp;mdash; Compare and swap an item on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc9455e8bd7a6655f56e60b7fbd1290a69098f4" translate="yes" xml:space="preserve">
          <source>Memcached::casByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93737ba355fca2ec4aea2d03157fbe360ad3cf5f" translate="yes" xml:space="preserve">
          <source>Memcached::decrement</source>
          <target state="translated">Memcached::decrement</target>
        </trans-unit>
        <trans-unit id="8814966016172875b0c6b011aba495ccf0dddb1f" translate="yes" xml:space="preserve">
          <source>Memcached::decrement &amp;mdash; Decrement numeric item's value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e6e4de140f10f35ee21da1501f4c411ad5a288" translate="yes" xml:space="preserve">
          <source>Memcached::decrement &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2637f37f2fe0a5d4dd822634615c8be3b402b46d" translate="yes" xml:space="preserve">
          <source>Memcached::decrementByKey</source>
          <target state="translated">Memcached::decrementByKey</target>
        </trans-unit>
        <trans-unit id="5186daa3b24883ca2de70431e42b43b6e8aad5e9" translate="yes" xml:space="preserve">
          <source>Memcached::decrementByKey &amp;mdash; Decrement numeric item's value, stored on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafe30c55178557bc1bdba2aa1c88efb49bfa301" translate="yes" xml:space="preserve">
          <source>Memcached::decrementByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8abd97d915353b8723376254731988edcc6cafa" translate="yes" xml:space="preserve">
          <source>Memcached::delete</source>
          <target state="translated">Memcached::delete</target>
        </trans-unit>
        <trans-unit id="515f8f6e50551bc18c975588860d24b60398b670" translate="yes" xml:space="preserve">
          <source>Memcached::delete &amp;mdash; Delete an item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1ec9ba6f37ff0be73fc300e907f0300cbd4bab" translate="yes" xml:space="preserve">
          <source>Memcached::delete &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcc51526ba10069932b9ddcf1efce0035a83602" translate="yes" xml:space="preserve">
          <source>Memcached::deleteByKey</source>
          <target state="translated">Memcached::deleteByKey</target>
        </trans-unit>
        <trans-unit id="8baa63471a6265dd36bfbbfa037e42916cb9d2aa" translate="yes" xml:space="preserve">
          <source>Memcached::deleteByKey &amp;mdash; Delete an item from a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca142a3a72fe8ccd8d08aba58e6e6611f24b028" translate="yes" xml:space="preserve">
          <source>Memcached::deleteByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac819ac8be751ebf7ed987f2af2138c6b0a5f2f" translate="yes" xml:space="preserve">
          <source>Memcached::deleteMulti</source>
          <target state="translated">Memcached::deleteMulti</target>
        </trans-unit>
        <trans-unit id="657ca1e824f226648e7504d7e459f3520c4ea354" translate="yes" xml:space="preserve">
          <source>Memcached::deleteMulti &amp;mdash; Delete multiple items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c26bf9cd16e0b99cdc4c5eff105782d3d374ed7" translate="yes" xml:space="preserve">
          <source>Memcached::deleteMulti &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b9ac526fcb5b1df87f408a6072f8cab2febabf" translate="yes" xml:space="preserve">
          <source>Memcached::deleteMultiByKey</source>
          <target state="translated">Memcached::deleteMultiByKey</target>
        </trans-unit>
        <trans-unit id="16585149bc613054d851278f8c00beb52d385b8a" translate="yes" xml:space="preserve">
          <source>Memcached::deleteMultiByKey &amp;mdash; Delete multiple items from a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27e050eee919f689a246f42a441a158f3674766" translate="yes" xml:space="preserve">
          <source>Memcached::deleteMultiByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dc51c6395ac36c3668568a910cdca517e2efd1" translate="yes" xml:space="preserve">
          <source>Memcached::fetch</source>
          <target state="translated">Memcached::fetch</target>
        </trans-unit>
        <trans-unit id="1667a760d300690b7d851f22288eebb9625cd928" translate="yes" xml:space="preserve">
          <source>Memcached::fetch &amp;mdash; Fetch the next result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09aeb3e2ee5731d4f0e26359d79100a260cb6b05" translate="yes" xml:space="preserve">
          <source>Memcached::fetch &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ca797c65e3ae4b77e7292b341ed25ae018798a" translate="yes" xml:space="preserve">
          <source>Memcached::fetchAll</source>
          <target state="translated">Memcached::fetchAll</target>
        </trans-unit>
        <trans-unit id="9faa55e4d965c1c4b340ca481dde022382ee3023" translate="yes" xml:space="preserve">
          <source>Memcached::fetchAll &amp;mdash; Fetch all the remaining results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8c291ac6826ceb55b9e18bad2f783a4c97a738" translate="yes" xml:space="preserve">
          <source>Memcached::fetchAll &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b41399a2c3e7cbfd2f17fad6ec1cae4f9ec5152" translate="yes" xml:space="preserve">
          <source>Memcached::flush</source>
          <target state="translated">Memcached::flush</target>
        </trans-unit>
        <trans-unit id="ca5d717aa56be9de7d485fae7148035b3bf64ddf" translate="yes" xml:space="preserve">
          <source>Memcached::flush &amp;mdash; Invalidate all items in the cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e61457ed00f02bd18c7928dda2d6e884c24218e" translate="yes" xml:space="preserve">
          <source>Memcached::flush &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1286aea57e45af3c6f8e23900b1453194ca21450" translate="yes" xml:space="preserve">
          <source>Memcached::get</source>
          <target state="translated">Memcached::get</target>
        </trans-unit>
        <trans-unit id="ca423280346720e6e1b1253d89afd7478355d033" translate="yes" xml:space="preserve">
          <source>Memcached::get &amp;mdash; Retrieve an item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fc0a744a169119cf451e19c8dbcb4d33135c14" translate="yes" xml:space="preserve">
          <source>Memcached::get &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bcaf847000bc6861a9445d5fb76fe8e81c8453" translate="yes" xml:space="preserve">
          <source>Memcached::getAllKeys</source>
          <target state="translated">Memcached::getAllKeys</target>
        </trans-unit>
        <trans-unit id="8e4edd9d3e8ae27192de7072d7f7723de783ce58" translate="yes" xml:space="preserve">
          <source>Memcached::getAllKeys &amp;mdash; Gets the keys stored on all the servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1888fa5bf3c49b2935132de6bb41d88798ba2b2" translate="yes" xml:space="preserve">
          <source>Memcached::getAllKeys &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc89bf297acf80b6b4d8f42a61809912bdf9af4" translate="yes" xml:space="preserve">
          <source>Memcached::getByKey</source>
          <target state="translated">Memcached::getByKey</target>
        </trans-unit>
        <trans-unit id="f35236ede51203ae90e7a34a8af8cea9a35b0028" translate="yes" xml:space="preserve">
          <source>Memcached::getByKey &amp;mdash; Retrieve an item from a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7242a5e59a2582488f1428d547fef5dbd97d9eb2" translate="yes" xml:space="preserve">
          <source>Memcached::getByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b336c61109d4520c5b87690bbe6986699cb829cd" translate="yes" xml:space="preserve">
          <source>Memcached::getDelayed</source>
          <target state="translated">Memcached::getDelayed</target>
        </trans-unit>
        <trans-unit id="e94ec4dae6e61c48135232692a96b5bb2c4cf884" translate="yes" xml:space="preserve">
          <source>Memcached::getDelayed &amp;mdash; Request multiple items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515b5f4f6f6630143110d44825932d996d73042f" translate="yes" xml:space="preserve">
          <source>Memcached::getDelayed &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aca8c6b2526c29395df1bd13d5bf5cd8db78d6d" translate="yes" xml:space="preserve">
          <source>Memcached::getDelayedByKey</source>
          <target state="translated">Memcached::getDelayedByKey</target>
        </trans-unit>
        <trans-unit id="f348d45ad3222662a4082306dfb6d47808a316b2" translate="yes" xml:space="preserve">
          <source>Memcached::getDelayedByKey &amp;mdash; Request multiple items from a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ff561ccee29ff999bb35f604487505f79d6deb" translate="yes" xml:space="preserve">
          <source>Memcached::getDelayedByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e2fa78e8bdf0eeae9b27bfd0d13bd94492a9bc" translate="yes" xml:space="preserve">
          <source>Memcached::getMulti</source>
          <target state="translated">Memcached::getMulti</target>
        </trans-unit>
        <trans-unit id="dac6efd0be809b84f407e68c485045567ce45bcc" translate="yes" xml:space="preserve">
          <source>Memcached::getMulti &amp;mdash; Retrieve multiple items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af3e38e26e280fc79aa4ab9f94978885c668156" translate="yes" xml:space="preserve">
          <source>Memcached::getMulti &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964bb8900e8854cd881e792674447bf5e8afd181" translate="yes" xml:space="preserve">
          <source>Memcached::getMultiByKey</source>
          <target state="translated">Memcached::getMultiByKey</target>
        </trans-unit>
        <trans-unit id="004db550462d4e27767689b764a9f9304992057e" translate="yes" xml:space="preserve">
          <source>Memcached::getMultiByKey &amp;mdash; Retrieve multiple items from a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b6ae8497252ab6cd2367cc2af32f58d8cad7c5" translate="yes" xml:space="preserve">
          <source>Memcached::getMultiByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dc6de0e8cc49895401c5f6ae29fe3fefcf1387" translate="yes" xml:space="preserve">
          <source>Memcached::getOption</source>
          <target state="translated">Memcached::getOption</target>
        </trans-unit>
        <trans-unit id="85ed0c83e3a37a6bd0026b50c1c96e1616b0a90d" translate="yes" xml:space="preserve">
          <source>Memcached::getOption &amp;mdash; Retrieve a Memcached option value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0179339f8c21ec3a5c69e0ae8872a79ae9c974f7" translate="yes" xml:space="preserve">
          <source>Memcached::getOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d19b6d8123850d89b55e9a17e996f08bf4bb442" translate="yes" xml:space="preserve">
          <source>Memcached::getResultCode</source>
          <target state="translated">Memcached::getResultCode</target>
        </trans-unit>
        <trans-unit id="76ca3316ca6f1edc2e5349a4a7c42bbe6b318c05" translate="yes" xml:space="preserve">
          <source>Memcached::getResultCode &amp;mdash; Return the result code of the last operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050211f1de09fada12e36a3b5a61ef22ff3c75bd" translate="yes" xml:space="preserve">
          <source>Memcached::getResultCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662c657517bc8c9b9a82eeb4381a88a22ae581c3" translate="yes" xml:space="preserve">
          <source>Memcached::getResultMessage</source>
          <target state="translated">Memcached::getResultMessage</target>
        </trans-unit>
        <trans-unit id="53dcacf99521a07fc52cee4d404b756b54c41d5a" translate="yes" xml:space="preserve">
          <source>Memcached::getResultMessage &amp;mdash; Return the message describing the result of the last operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ff8791c497a8c38ce5824a888f09565394a801" translate="yes" xml:space="preserve">
          <source>Memcached::getResultMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45aa59148a330b8ef7e93de2dd521cfde7a5f351" translate="yes" xml:space="preserve">
          <source>Memcached::getServerByKey</source>
          <target state="translated">Memcached::getServerByKey</target>
        </trans-unit>
        <trans-unit id="1631a6aca8b3279fa3b7c1a3e0679e249106edba" translate="yes" xml:space="preserve">
          <source>Memcached::getServerByKey &amp;mdash; Map a key to a server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708cba1caebef1d9cea7e762d7fa5678b3b974a3" translate="yes" xml:space="preserve">
          <source>Memcached::getServerByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf8ffaee1f884be8b8f08b268eddf92c7cf8229" translate="yes" xml:space="preserve">
          <source>Memcached::getServerList</source>
          <target state="translated">Memcached::getServerList</target>
        </trans-unit>
        <trans-unit id="9db9d80833837fecf4ded5279c89d52fd4226725" translate="yes" xml:space="preserve">
          <source>Memcached::getServerList &amp;mdash; Get the list of the servers in the pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2991a8293b92f13c9e85e3906057a3ededfe27ac" translate="yes" xml:space="preserve">
          <source>Memcached::getServerList &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe05c687f34a7e5ce761413184746c849fc6819" translate="yes" xml:space="preserve">
          <source>Memcached::getStats</source>
          <target state="translated">Memcached::getStats</target>
        </trans-unit>
        <trans-unit id="01271dfddea6b32793d44b71144bb066bb6bc007" translate="yes" xml:space="preserve">
          <source>Memcached::getStats &amp;mdash; Get server pool statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8301006cf99445e3b9e57a6435698f712f48c29f" translate="yes" xml:space="preserve">
          <source>Memcached::getStats &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bd2422dd9e858f0867d7d0e8dd23bc9ace9478" translate="yes" xml:space="preserve">
          <source>Memcached::getVersion</source>
          <target state="translated">Memcached::getVersion</target>
        </trans-unit>
        <trans-unit id="405364cfb750b688ea6fcd15b78420937cbfa713" translate="yes" xml:space="preserve">
          <source>Memcached::getVersion &amp;mdash; Get server pool version info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4f319cec6a6b85e7f56f8b9af1837c004df73a" translate="yes" xml:space="preserve">
          <source>Memcached::getVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9b0e8129972212924e556fd4ba3446c6a102b2" translate="yes" xml:space="preserve">
          <source>Memcached::increment</source>
          <target state="translated">Memcached::increment</target>
        </trans-unit>
        <trans-unit id="b3890053b40b710ea547f32a2d8668c277b43092" translate="yes" xml:space="preserve">
          <source>Memcached::increment &amp;mdash; Increment numeric item's value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19190616083cb25de2adffd7931da565f5551f02" translate="yes" xml:space="preserve">
          <source>Memcached::increment &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4aad654eb3b6beff23c9164bcbd0f2f71b05d5a" translate="yes" xml:space="preserve">
          <source>Memcached::incrementByKey</source>
          <target state="translated">Memcached::incrementByKey</target>
        </trans-unit>
        <trans-unit id="9c183bbe2e3835d71127fab7aba675ddf1a2d502" translate="yes" xml:space="preserve">
          <source>Memcached::incrementByKey &amp;mdash; Increment numeric item's value, stored on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ef27fb3edd1aba0d0c977f35df65c0ce705549" translate="yes" xml:space="preserve">
          <source>Memcached::incrementByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ccd5a0a4125dff9898c77df1a4a66695495f04" translate="yes" xml:space="preserve">
          <source>Memcached::isPersistent</source>
          <target state="translated">Memcached::isPersistent</target>
        </trans-unit>
        <trans-unit id="9f1b14b1d0b544c5bd0946543f55430c5f4ce121" translate="yes" xml:space="preserve">
          <source>Memcached::isPersistent &amp;mdash; Check if a persitent connection to memcache is being used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4881c17d388eb4c1c752e53c29dd73e720fd46c3" translate="yes" xml:space="preserve">
          <source>Memcached::isPersistent &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df27be41c846b8f022711acec2611b4f4baeccf" translate="yes" xml:space="preserve">
          <source>Memcached::isPristine</source>
          <target state="translated">Memcached::isPristine</target>
        </trans-unit>
        <trans-unit id="97f7f9b188d76ea9aa689665ef64932d984945a2" translate="yes" xml:space="preserve">
          <source>Memcached::isPristine &amp;mdash; Check if the instance was recently created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e1f0ddb953dfb0e4998dea2adfc5020cfe5566" translate="yes" xml:space="preserve">
          <source>Memcached::isPristine &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a182a2a5eb511ca84722560c58b60c37d819c1b" translate="yes" xml:space="preserve">
          <source>Memcached::prepend</source>
          <target state="translated">Memcached::prepend</target>
        </trans-unit>
        <trans-unit id="d9e8de8bc0ef748bdcd214192c39fa58256ecb99" translate="yes" xml:space="preserve">
          <source>Memcached::prepend &amp;mdash; Prepend data to an existing item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d55e22b2de0d8a1ba470386458f8a3cc25504a6" translate="yes" xml:space="preserve">
          <source>Memcached::prepend &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531fbfcdbe7881ee7ed2497bbbd868d7348467c0" translate="yes" xml:space="preserve">
          <source>Memcached::prependByKey</source>
          <target state="translated">Memcached::prependByKey</target>
        </trans-unit>
        <trans-unit id="3c2a82e8fcdc2669bcd865a682476397cf5fc82c" translate="yes" xml:space="preserve">
          <source>Memcached::prependByKey &amp;mdash; Prepend data to an existing item on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11025d6f6503395f526bc28fafb9af0a13190291" translate="yes" xml:space="preserve">
          <source>Memcached::prependByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b7b8c090be8635c9034a23ac6d0d35de7f5103" translate="yes" xml:space="preserve">
          <source>Memcached::quit</source>
          <target state="translated">Memcached::quit</target>
        </trans-unit>
        <trans-unit id="b51aea76825fc8c19b8e427298251cb91b7d715b" translate="yes" xml:space="preserve">
          <source>Memcached::quit &amp;mdash; Close any open connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f7ba8f94aa1e7d89e35abd964ac2210ea62a05" translate="yes" xml:space="preserve">
          <source>Memcached::quit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7866cd991d796487530b3caa58f8d34eb9ec6698" translate="yes" xml:space="preserve">
          <source>Memcached::replace</source>
          <target state="translated">Memcached::replace</target>
        </trans-unit>
        <trans-unit id="fc0b4cc8b358a345c50b4f7d9cc0c48c0e081bf3" translate="yes" xml:space="preserve">
          <source>Memcached::replace &amp;mdash; Replace the item under an existing key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa6f9c3cdc76f320b45a2252ffdfb5eaa2f85ed" translate="yes" xml:space="preserve">
          <source>Memcached::replace &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e74a93be3f85f8f19737f0311ae77368eefabbf" translate="yes" xml:space="preserve">
          <source>Memcached::replaceByKey</source>
          <target state="translated">Memcached::replaceByKey</target>
        </trans-unit>
        <trans-unit id="4190f462b1b0c394e6f0c6126c692ebabfa49f61" translate="yes" xml:space="preserve">
          <source>Memcached::replaceByKey &amp;mdash; Replace the item under an existing key on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4edfdc4b69aa6ebe8aac2ac130724993d132c4d" translate="yes" xml:space="preserve">
          <source>Memcached::replaceByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5c8c37036ae89b819b44960e5bb183bf442ad6" translate="yes" xml:space="preserve">
          <source>Memcached::resetServerList</source>
          <target state="translated">Memcached::resetServerList</target>
        </trans-unit>
        <trans-unit id="c96dcb2720d61f2853bd7fb58f382e7325157c24" translate="yes" xml:space="preserve">
          <source>Memcached::resetServerList &amp;mdash; Clears all servers from the server list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5154f686eb3f4098cfc3f8c3278d3868ff9a96" translate="yes" xml:space="preserve">
          <source>Memcached::resetServerList &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcfbf5dde7af4fd2dce2b1cef2d166dd915a828" translate="yes" xml:space="preserve">
          <source>Memcached::set</source>
          <target state="translated">Memcached::set</target>
        </trans-unit>
        <trans-unit id="a55a405335b25977bf7475dd6489c9c96d7abac7" translate="yes" xml:space="preserve">
          <source>Memcached::set &amp;mdash; Store an item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a16200ee0243d38778eaf0d6a0d08b541525140" translate="yes" xml:space="preserve">
          <source>Memcached::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a4c52a15399c7d98cac67397a548e9c39c0655" translate="yes" xml:space="preserve">
          <source>Memcached::setByKey</source>
          <target state="translated">Memcached::setByKey</target>
        </trans-unit>
        <trans-unit id="eb2af257a1f8967f901578d9bba0818499410fc6" translate="yes" xml:space="preserve">
          <source>Memcached::setByKey &amp;mdash; Store an item on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda44d4e6de1a63def531caf251e03b89c298932" translate="yes" xml:space="preserve">
          <source>Memcached::setByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a37fc5961db0e820dfb7d7bfef35c4451cffde" translate="yes" xml:space="preserve">
          <source>Memcached::setMulti</source>
          <target state="translated">Memcached::setMulti</target>
        </trans-unit>
        <trans-unit id="32cd59f44892fbfb92b58f503e0b0c6be29be667" translate="yes" xml:space="preserve">
          <source>Memcached::setMulti &amp;mdash; Store multiple items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3317d33dccad5af2be87d2fad9afa1d04744c923" translate="yes" xml:space="preserve">
          <source>Memcached::setMulti &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e25a4f7f4968491cd04524453498550daf83975" translate="yes" xml:space="preserve">
          <source>Memcached::setMultiByKey</source>
          <target state="translated">Memcached::setMultiByKey</target>
        </trans-unit>
        <trans-unit id="fe0a35c05771163492a4a0112bea0c82c6c078a2" translate="yes" xml:space="preserve">
          <source>Memcached::setMultiByKey &amp;mdash; Store multiple items on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6854c3fb80536b7db96018c9be4f5a95032efe8f" translate="yes" xml:space="preserve">
          <source>Memcached::setMultiByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8ac6a7c871cd45beaf922c42dfa3e1a1ca9bda" translate="yes" xml:space="preserve">
          <source>Memcached::setOption</source>
          <target state="translated">Memcached::setOption</target>
        </trans-unit>
        <trans-unit id="1afd1e27879fb111d34c7a30848997b9ac4ae9b7" translate="yes" xml:space="preserve">
          <source>Memcached::setOption &amp;mdash; Set a Memcached option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2390e2d4b27f7dde0f8c411563dbe17262c6e1" translate="yes" xml:space="preserve">
          <source>Memcached::setOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1e815f4f89d837d4129c025a7b09c6aeafa32b" translate="yes" xml:space="preserve">
          <source>Memcached::setOptions</source>
          <target state="translated">Memcached::setOptions</target>
        </trans-unit>
        <trans-unit id="58d4ab9b51ed827d6aad95536c3f6fcd69bf3868" translate="yes" xml:space="preserve">
          <source>Memcached::setOptions &amp;mdash; Set Memcached options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b934b90dda3fc7c5e53176fbb613741c0e5f55" translate="yes" xml:space="preserve">
          <source>Memcached::setOptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc34eb087b73ef94a384590222ee78f099943413" translate="yes" xml:space="preserve">
          <source>Memcached::setSaslAuthData</source>
          <target state="translated">Memcached::setSaslAuthData</target>
        </trans-unit>
        <trans-unit id="73227f90caed0ad9b5a294ffcfef54a714f385b6" translate="yes" xml:space="preserve">
          <source>Memcached::setSaslAuthData &amp;mdash; Set the credentials to use for authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6c6d939ead18256356658f638182ee81e762eb" translate="yes" xml:space="preserve">
          <source>Memcached::setSaslAuthData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6dbd29d8281279b18ff0a03101760831b7fe61" translate="yes" xml:space="preserve">
          <source>Memcached::touch</source>
          <target state="translated">Memcached::touch</target>
        </trans-unit>
        <trans-unit id="5497ef3406045b810c17a9cf7626beda54dfe295" translate="yes" xml:space="preserve">
          <source>Memcached::touch &amp;mdash; Set a new expiration on an item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ce4b0cf7ff798cdaaf07e9a65ef6ddf4b6be48" translate="yes" xml:space="preserve">
          <source>Memcached::touch &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401eb21b007cf920467f778cd0961c51feb5f03c" translate="yes" xml:space="preserve">
          <source>Memcached::touchByKey</source>
          <target state="translated">Memcached::touchByKey</target>
        </trans-unit>
        <trans-unit id="6ece13879421bfc919fdb5f1333dd86d1a8acab9" translate="yes" xml:space="preserve">
          <source>Memcached::touchByKey &amp;mdash; Set a new expiration on an item on a specific server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fee8f02c730efdd6b5788bdedd24f39a8e1f5c" translate="yes" xml:space="preserve">
          <source>Memcached::touchByKey &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c487eaa41c1e726a69a29484d490eb17efdb154a" translate="yes" xml:space="preserve">
          <source>MemcachedException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3813fe080d31b00f80f3cd2ecadc843a9a1c94c" translate="yes" xml:space="preserve">
          <source>Merge segments with deletes away. (Solr1.4+)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e56ffcb0a271eb59af7171b61391cd7bf3c3b4" translate="yes" xml:space="preserve">
          <source>Merges a sequence of images. This is useful for combining Photoshop layers into a single image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f48b47698cc72b816095ee0bcb17141f21779bb" translate="yes" xml:space="preserve">
          <source>Merges data into the current object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3594a250bc2530f35e84b03731f98300a0d7dcdf" translate="yes" xml:space="preserve">
          <source>Merges image layers into one. This method is useful when working with image formats that use multiple layers such as PSD. The merging is controlled using the &lt;code&gt;layer_method&lt;/code&gt; which defines how the layers are merged. This method is available if Imagick has been compiled against ImageMagick version 6.3.7 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e84f3c551844d3cffb52e47d6e68ae52be8b36" translate="yes" xml:space="preserve">
          <source>Merges one input document into another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a8b07f1ac5f1c78aaffeb2765af1b93d88665e" translate="yes" xml:space="preserve">
          <source>Merges source to the current SolrDocument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081dac8f06286abc096e0c5c5b3ff34eb284a06b" translate="yes" xml:space="preserve">
          <source>Merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1211b152ddcffcc6008169c8648e13951367ec" translate="yes" xml:space="preserve">
          <source>Message describing the result of the last Memcached operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0d6c0ab5307001d8073825cddd9c96d13b3570" translate="yes" xml:space="preserve">
          <source>Message queue numeric ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28feb95e7224a1d35655ab21361466683d417b82" translate="yes" xml:space="preserve">
          <source>Message queue resource handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77834c745433ca0aebbd26a5704be1b878f6efa9" translate="yes" xml:space="preserve">
          <source>Message string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e191a6caee2553e4b40331afb3f998a536f492" translate="yes" xml:space="preserve">
          <source>Message to be hashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d377098e44b69d194b1092fafce6adff6ce084" translate="yes" xml:space="preserve">
          <source>Message to be included in the hash digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e8e02f92e72cdf05f34a3b0b0ce0466b786311" translate="yes" xml:space="preserve">
          <source>Message to be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5885dfd0069897887b22a742326a6378bacdf0a7" translate="yes" xml:space="preserve">
          <source>MessageFormatter &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ebc40d56d391629c49924c55a0481cc681f00f" translate="yes" xml:space="preserve">
          <source>MessageFormatter (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8712c3c7ce5bb46d8deb9ffd3cf6bc2ae24c5a8b" translate="yes" xml:space="preserve">
          <source>MessageFormatter is a concrete class that enables users to produce concatenated, language-neutral messages. The methods supplied in this class are used to build all the messages that are seen by end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f677f0feab2d6b5faf7b387493e5b8e816b274a" translate="yes" xml:space="preserve">
          <source>MessageFormatter takes a set of objects, formats them, and then inserts the formatted strings into the pattern at the appropriate places. Choice formats can be used in conjunction with MessageFormatter to handle plurals, match numbers, and select from an array of items. Typically, the message format will come from resources and the arguments will be dynamically set at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffd4bf1190326e050b9668721fb5941066e5517" translate="yes" xml:space="preserve">
          <source>MessageFormatter::__construct</source>
          <target state="translated">MessageFormatter::__construct</target>
        </trans-unit>
        <trans-unit id="ffcb01e8cadf93223e71ce6f5cff966cf0a11cba" translate="yes" xml:space="preserve">
          <source>MessageFormatter::create</source>
          <target state="translated">MessageFormatter::create</target>
        </trans-unit>
        <trans-unit id="a14dc8f57135bec3b6b8a74ae1263aff4a20487c" translate="yes" xml:space="preserve">
          <source>MessageFormatter::create &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd5e52ef3ff968e6baa5186cc372f359355e9b1" translate="yes" xml:space="preserve">
          <source>MessageFormatter::create -- MessageFormatter::__construct -- msgfmt_create &amp;mdash; Constructs a new Message Formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad5190ea05f2d66682ea7a95c4a25c4b08ee506" translate="yes" xml:space="preserve">
          <source>MessageFormatter::format</source>
          <target state="translated">MessageFormatter::format</target>
        </trans-unit>
        <trans-unit id="2e5a2fafa4c924613371414e9f87901e3a50d79a" translate="yes" xml:space="preserve">
          <source>MessageFormatter::format &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fba5769f06364ea8506e9bbc90997b0b5819067" translate="yes" xml:space="preserve">
          <source>MessageFormatter::format -- msgfmt_format &amp;mdash; Format the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4733ae7c79035abf6e59faa72591060f28b16c11" translate="yes" xml:space="preserve">
          <source>MessageFormatter::formatMessage</source>
          <target state="translated">MessageFormatter::formatMessage</target>
        </trans-unit>
        <trans-unit id="0f54669f667fb5bdd6b4377de223fc78bd982588" translate="yes" xml:space="preserve">
          <source>MessageFormatter::formatMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b61df305ac2decdb700c4d8f56aa67a324c405" translate="yes" xml:space="preserve">
          <source>MessageFormatter::formatMessage -- msgfmt_format_message &amp;mdash; Quick format message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6432470ed4e16223432e059f667e69a0355c6e" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getErrorCode</source>
          <target state="translated">MessageFormatter::getErrorCode</target>
        </trans-unit>
        <trans-unit id="2c8ff1e3887c8f4dfd6f34e3072ad16953de114e" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getErrorCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8981ca084469a6bf970a2f84db25395056da882" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getErrorCode -- msgfmt_get_error_code &amp;mdash; Get the error code from last operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516862cb032088a6da71d3b8f27d1f24c6860fe9" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getErrorMessage</source>
          <target state="translated">MessageFormatter::getErrorMessage</target>
        </trans-unit>
        <trans-unit id="cffadb41bbb36b3ce6da99727495b11f48095a49" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getErrorMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8f835c3c1230889a0e0334a9f2de3bdb05f024" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getErrorMessage -- msgfmt_get_error_message &amp;mdash; Get the error text from the last operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36bec8bd47977d6822d9a00495d2b5823268df5" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getLocale</source>
          <target state="translated">MessageFormatter::getLocale</target>
        </trans-unit>
        <trans-unit id="157ad9d9275afd15e708f6b890d71da420df6de2" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873eb534b8eb641413e678762cdfdc89289c88a7" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getLocale -- msgfmt_get_locale &amp;mdash; Get the locale for which the formatter was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44673c14c8dd47001af5b6853e2fce9265519b1" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getPattern</source>
          <target state="translated">MessageFormatter::getPattern</target>
        </trans-unit>
        <trans-unit id="861ab1114f3ea2461f75493d843ff7a23c20cee7" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getPattern &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb1cb7a1a7dee7f6e568290070cdac47720ad9e" translate="yes" xml:space="preserve">
          <source>MessageFormatter::getPattern -- msgfmt_get_pattern &amp;mdash; Get the pattern used by the formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed3df50d9b19894a83ad34970582223a58dfd00" translate="yes" xml:space="preserve">
          <source>MessageFormatter::parse</source>
          <target state="translated">MessageFormatter::parse</target>
        </trans-unit>
        <trans-unit id="039f9f113f3c3630a6ad6cbf81931da1660b46db" translate="yes" xml:space="preserve">
          <source>MessageFormatter::parse &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f8f1a652dbf3f51530067a82add5f7a910431d" translate="yes" xml:space="preserve">
          <source>MessageFormatter::parse -- msgfmt_parse &amp;mdash; Parse input string according to pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d58facdb298cea66c22f2fc6c7fc2b2aad7d88b" translate="yes" xml:space="preserve">
          <source>MessageFormatter::parseMessage</source>
          <target state="translated">MessageFormatter::parseMessage</target>
        </trans-unit>
        <trans-unit id="ea3251f80f9737bda836f554bb52e08bb1585ec6" translate="yes" xml:space="preserve">
          <source>MessageFormatter::parseMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d09bc5d2a1f6a8c33ada81b0f85533002a3040" translate="yes" xml:space="preserve">
          <source>MessageFormatter::parseMessage -- msgfmt_parse_message &amp;mdash; Quick parse input string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a270a8d1920f024e2b206ffa15863e796be8dc" translate="yes" xml:space="preserve">
          <source>MessageFormatter::setPattern</source>
          <target state="translated">MessageFormatter::setPattern</target>
        </trans-unit>
        <trans-unit id="6e5c19dc4c90267692b86f508dc298f7fb8a352e" translate="yes" xml:space="preserve">
          <source>MessageFormatter::setPattern &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37db39c14bdccf16f3c12659a8361321408003e3" translate="yes" xml:space="preserve">
          <source>MessageFormatter::setPattern -- msgfmt_set_pattern &amp;mdash; Set the pattern used by the formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292a21e9003f2524470bd3250183114f45d9808f" translate="yes" xml:space="preserve">
          <source>Meta-character</source>
          <target state="translated">Meta-character</target>
        </trans-unit>
        <trans-unit id="1d7887e90a081b249a55f0a13f9680bc24666a62" translate="yes" xml:space="preserve">
          <source>Meta-characters</source>
          <target state="translated">Meta-characters</target>
        </trans-unit>
        <trans-unit id="0e174741221811683598cc50c03984babdcd30b0" translate="yes" xml:space="preserve">
          <source>Meta-characters &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568b1f7c72e7d38abfa19887cfe1e9d86045d545" translate="yes" xml:space="preserve">
          <source>Metaphone was developed by Lawrence Philips &amp;lt;lphilips at verity dot com&amp;gt;. It is described in [&quot;Practical Algorithms for Programmers&quot;, Binstock &amp;amp; Rex, Addison Wesley, 1995].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878bdd30dce7c090b04471857b976a91d5871713" translate="yes" xml:space="preserve">
          <source>Method (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df94e9ea2cd92628d7ecf8eed3786a48250644c1" translate="yes" xml:space="preserve">
          <source>Method Modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa50fae25242e39914fe3b2174dac730c4cb2c52" translate="yes" xml:space="preserve">
          <source>Method Visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e118c63bd8791f07339901dcc077ec3c8aed3305" translate="yes" xml:space="preserve">
          <source>Method made static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fea92dc9c0af9b6e713d70d970fd4caf5a23f4b" translate="yes" xml:space="preserve">
          <source>Method morphs a set of images. Both the image pixels and size are linearly interpolated to give the appearance of a meta-morphosis from one image to the next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1389e0e832a05337d6ccb31e50ea1425ca91a8" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd967ae4c58ded8088fbf7cd4fd0023ab0d0599" translate="yes" xml:space="preserve">
          <source>Method overloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e304cf705130b41602ca65a04e592cf732cde5b" translate="yes" xml:space="preserve">
          <source>Method parameters compatible with method signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465e110242e520923f7df5f41c6e679c5d5faf5e" translate="yes" xml:space="preserve">
          <source>Method::__construct</source>
          <target state="translated">Method::__construct</target>
        </trans-unit>
        <trans-unit id="2c00b81631bef08ecfc64fee01e50ed1cdf8284d" translate="yes" xml:space="preserve">
          <source>Method::__toString</source>
          <target state="translated">Method::__toString</target>
        </trans-unit>
        <trans-unit id="0ca8d0f51b7d850d951a88f0d29f07d7dd9c0603" translate="yes" xml:space="preserve">
          <source>Method::export</source>
          <target state="translated">Method::export</target>
        </trans-unit>
        <trans-unit id="5d010540012aa8bd83fa32c1f28ee3604d557b77" translate="yes" xml:space="preserve">
          <source>Method::getClosure</source>
          <target state="translated">Method::getClosure</target>
        </trans-unit>
        <trans-unit id="221c15cc3ea0ea9d32db4a1d15f011b979c5d9bb" translate="yes" xml:space="preserve">
          <source>Method::getDeclaringClass</source>
          <target state="translated">Method::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="9b8225043379878ede649c6991f9c754041af8c9" translate="yes" xml:space="preserve">
          <source>Method::getModifiers</source>
          <target state="translated">Method::getModifiers</target>
        </trans-unit>
        <trans-unit id="ad2c1be43da9d19a96f8d31143f63ce0e70e283f" translate="yes" xml:space="preserve">
          <source>Method::getPrototype</source>
          <target state="translated">Method::getPrototype</target>
        </trans-unit>
        <trans-unit id="efa4daccf93ccf8734fc619855bd0b954fab8525" translate="yes" xml:space="preserve">
          <source>Method::invoke</source>
          <target state="translated">Method::invoke</target>
        </trans-unit>
        <trans-unit id="20d9a9c8229839f63a4af746fe5e45f40a6adad3" translate="yes" xml:space="preserve">
          <source>Method::invokeArgs</source>
          <target state="translated">Method::invokeArgs</target>
        </trans-unit>
        <trans-unit id="8b1054d8d6b471b930990cb0c6889d5070512284" translate="yes" xml:space="preserve">
          <source>Method::isAbstract</source>
          <target state="translated">Method::isAbstract</target>
        </trans-unit>
        <trans-unit id="8691f820eb383af707eebf1d00fa0d09df2152af" translate="yes" xml:space="preserve">
          <source>Method::isConstructor</source>
          <target state="translated">Method::isConstructor</target>
        </trans-unit>
        <trans-unit id="b5fd0c83c6fb355cc6631dfd068d8db0935c4c56" translate="yes" xml:space="preserve">
          <source>Method::isDestructor</source>
          <target state="translated">Method::isDestructor</target>
        </trans-unit>
        <trans-unit id="e4b8d2b29fb0aeadc147a7a1462f7c426fed5ec1" translate="yes" xml:space="preserve">
          <source>Method::isFinal</source>
          <target state="translated">Method::isFinal</target>
        </trans-unit>
        <trans-unit id="ccf5df8e99540d9f78183eae245871acd58ba6b3" translate="yes" xml:space="preserve">
          <source>Method::isPrivate</source>
          <target state="translated">Method::isPrivate</target>
        </trans-unit>
        <trans-unit id="7dc61cf6690e496646d3ca137e1fc8a32ff1f348" translate="yes" xml:space="preserve">
          <source>Method::isProtected</source>
          <target state="translated">Method::isProtected</target>
        </trans-unit>
        <trans-unit id="2f10a8d761215313ffa7d7d2f33344ef4cd9707d" translate="yes" xml:space="preserve">
          <source>Method::isPublic</source>
          <target state="translated">Method::isPublic</target>
        </trans-unit>
        <trans-unit id="2184378bf4f4db3e904ca5268cd78458c2d51fdc" translate="yes" xml:space="preserve">
          <source>Method::isStatic</source>
          <target state="translated">Method::isStatic</target>
        </trans-unit>
        <trans-unit id="cc5c31c33ea3796ab97d1da3c7f569096da210ea" translate="yes" xml:space="preserve">
          <source>Method::setAccessible</source>
          <target state="translated">Method::setAccessible</target>
        </trans-unit>
        <trans-unit id="c2b6189099a381e5c3cf619f10cc40d7600f98ad" translate="yes" xml:space="preserve">
          <source>Mhash &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a4128f964306e229c42810ed910728db76e8cb" translate="yes" xml:space="preserve">
          <source>Microsecond of the time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cfe51e270ca03f71b4f1f2ffee83ff1f0b42a3" translate="yes" xml:space="preserve">
          <source>Microseconds (added in PHP 5.2.2). Note that &lt;strong&gt;date()&lt;/strong&gt; will always generate &lt;em&gt;000000&lt;/em&gt; since it takes an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; parameter, whereas &lt;a href=&quot;datetime.format&quot;&gt;DateTime::format()&lt;/a&gt; does support microseconds if &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; was created with microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25413fe3b81558b39efe95f4e265afd0fb613f0" translate="yes" xml:space="preserve">
          <source>Microseconds (up to six digits)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9092bc165691f2e390a49df662da0857295a121" translate="yes" xml:space="preserve">
          <source>Microseconds began to be allowed, but they are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1f69da1cf5510d7cb29ee3b7bfe49a671d185" translate="yes" xml:space="preserve">
          <source>Microseconds, numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9b9e8f20e183f42c7774cc01bc58f97df55342" translate="yes" xml:space="preserve">
          <source>Microseconds, numeric, at least 6 digits with leading 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e05b54bbd21caaecef5c10b9112529c0886b257" translate="yes" xml:space="preserve">
          <source>Might require an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5e1c3a0d98eab5d46a80dfa9ddc32687399c06" translate="yes" xml:space="preserve">
          <source>Milliseconds (added in PHP 7.0.0). Same note applies as for &lt;em&gt;u&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42478d034803a82793e5cc1a130cb59ace66f642" translate="yes" xml:space="preserve">
          <source>Mimetype &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde4faad7b7412f33f5ba54d0874d1974275ee47" translate="yes" xml:space="preserve">
          <source>Mimetype of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62d7c45324613273cab73a4f0b4ef4e8c38316d" translate="yes" xml:space="preserve">
          <source>Minimum ID value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ee28235a154b344c71bccf9031e7b87597b231" translate="yes" xml:space="preserve">
          <source>Minimum PHP version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc50f9c790e82fd63daff7db6cba679deef3a63" translate="yes" xml:space="preserve">
          <source>Minimum allowed watcher priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9069dbc635f88917b122c41e5a2013185e3ae4b" translate="yes" xml:space="preserve">
          <source>Minimum character length in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e32bfdecc3323d5f752c2f01ff8d2df33a7ce5" translate="yes" xml:space="preserve">
          <source>Minimum fraction digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297051bdfd765b1eff2cf8c053daa5789613d089" translate="yes" xml:space="preserve">
          <source>Minimum integer digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b815eb4c04a5926cbcfa03147275bcb94cd6d9e" translate="yes" xml:space="preserve">
          <source>Minimum match value/expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04dbd2635a99f73fd9e2d1b33e75bf2584dd62f3" translate="yes" xml:space="preserve">
          <source>Minimum significant digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32033bd4002341edca78a006223975adad5e652" translate="yes" xml:space="preserve">
          <source>Minimum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fb741b5681a2f84a5475eac50c4136c113b6a6" translate="yes" xml:space="preserve">
          <source>Minimum watermark value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6c4c5a18bc87b8a9945960f4d3709b914aa112" translate="yes" xml:space="preserve">
          <source>Minolta</source>
          <target state="translated">Minolta</target>
        </trans-unit>
        <trans-unit id="790004809251abaa95194d6b609022073e581764" translate="yes" xml:space="preserve">
          <source>Minute of the time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092f99ea11a34a8490e7a767a83a42fc45634f82" translate="yes" xml:space="preserve">
          <source>Minutes</source>
          <target state="translated">Minutes</target>
        </trans-unit>
        <trans-unit id="f9d524f43d743f1058d41726abb76af18d208369" translate="yes" xml:space="preserve">
          <source>Minutes after the hour (0-59)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2430159850f22801e67b47c92800058fb62e0863" translate="yes" xml:space="preserve">
          <source>Minutes with leading zeros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327ce3923576c2156278e24ecc23ec305b68defa" translate="yes" xml:space="preserve">
          <source>Minutes, numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49300d4b59fc28d508d503164c34fa8e03708306" translate="yes" xml:space="preserve">
          <source>Minutes, numeric, at least 2 digits with leading 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e75127df3c7d1869788f42d2524a64f1b977bb" translate="yes" xml:space="preserve">
          <source>Misc. &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c90716b215a92f7924b7cafc5379de4309279d6" translate="yes" xml:space="preserve">
          <source>Miscellaneous Classes and Interfaces &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d26ed6eda9c562e609a3703f38c3c1622e5f341" translate="yes" xml:space="preserve">
          <source>MissingMandatoryParameterException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dcb865ad81a32e522b11fd1e33bae685e88709" translate="yes" xml:space="preserve">
          <source>Mixed</source>
          <target state="translated">Mixed</target>
        </trans-unit>
        <trans-unit id="831560f6d2c7ca96a8bbdfb5aaa534fb39cfb109" translate="yes" xml:space="preserve">
          <source>Mixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="8c1fa6515faa02a3a8a342894192ccf69d11a04e" translate="yes" xml:space="preserve">
          <source>ModifiableParams (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb179132a2d3ba0a747304893702ce5591a80d1" translate="yes" xml:space="preserve">
          <source>ModifiableParams::__construct</source>
          <target state="translated">ModifiableParams::__construct</target>
        </trans-unit>
        <trans-unit id="6a233df5517c05a18050a3fd997c47be68c99959" translate="yes" xml:space="preserve">
          <source>ModifiableParams::__destruct</source>
          <target state="translated">ModifiableParams::__destruct</target>
        </trans-unit>
        <trans-unit id="32c1e30f63cdb9423bb009aed441b9f279fc322f" translate="yes" xml:space="preserve">
          <source>Modification of the array during &lt;strong&gt;list()&lt;/strong&gt; execution (e.g. using &lt;em&gt;list($a, $b) = $b&lt;/em&gt;) results in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d8b53b8e4d2de7100bfb676ab23641c1d3dd12" translate="yes" xml:space="preserve">
          <source>Modification time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad23ea5529c0f8c6c8d290e83637676c692c2dd" translate="yes" xml:space="preserve">
          <source>Modifier letter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253879158d55c56d709e1481da82674291cad63a" translate="yes" xml:space="preserve">
          <source>Modifier symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bfa512f974e5755bcc6c889f3da08384a44c93" translate="yes" xml:space="preserve">
          <source>Modifiers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ae9e3a10fcd738fb292684610a1fa93bbf5f97" translate="yes" xml:space="preserve">
          <source>Modifies an existing entry in the LDAP directory. Allows detailed specification of the modifications to perform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd360604ac3851763be105b641be0fbbaf5a61bb" translate="yes" xml:space="preserve">
          <source>Module name must be defined in config, considering application.module=&quot;Index,Foo,Bar&quot;, in this case, only index, foo and bar can be considerd as a module name. if doesn't config, there is only one module named &quot;Index&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a40520b4026078c79efca77f06437b79124739" translate="yes" xml:space="preserve">
          <source>Modulo</source>
          <target state="translated">Modulo</target>
        </trans-unit>
        <trans-unit id="0c2c84395324e3dd86864fc2339515fbb43f0002" translate="yes" xml:space="preserve">
          <source>Monday.</source>
          <target state="translated">Monday.</target>
        </trans-unit>
        <trans-unit id="e6621404e35c0c1df99468e94c1e8f44cdfab89b" translate="yes" xml:space="preserve">
          <source>Monetary decimal point character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d419ba541f739c2bb00261bee0f96e86ce8f1060" translate="yes" xml:space="preserve">
          <source>Monetary thousands separator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46269168433005597d3bb49d4d6e571bc3009f6" translate="yes" xml:space="preserve">
          <source>Month and weekday names and other language dependent strings respect the current locale set with &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; (&lt;strong&gt;&lt;code&gt;LC_TIME&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d1dc63f1071a99b1af4b9d466fb169da716a23" translate="yes" xml:space="preserve">
          <source>Month in the selected calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedbe41ab019724cdfbe53fc303bae973cd3ddc6" translate="yes" xml:space="preserve">
          <source>Month number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca531fa5ed9ed10dbcf7fa18f1a6538f17cab7a4" translate="yes" xml:space="preserve">
          <source>Month of the date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067176346b3eb9c8e5ace219dedd7e57e25c1f2a" translate="yes" xml:space="preserve">
          <source>Months since January (0-11)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecba6f8b6208bb3cd2fa2445ae56d7dd603665a2" translate="yes" xml:space="preserve">
          <source>Months, numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367063c4987be95251ea2dca02edad30c9a4624a" translate="yes" xml:space="preserve">
          <source>Months, numeric, at least 2 digits with leading 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61739ac2f5d2b0ee01161e457e24e9354d7472be" translate="yes" xml:space="preserve">
          <source>More arrays to compare against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a942a5e3a554d0f43e2969f7593a3d048c75533" translate="yes" xml:space="preserve">
          <source>More arrays, optionally followed by sort order and flags. Only elements corresponding to equivalent elements in previous arrays are compared. In other words, the sort is lexicographical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff1d068dff6b70d4737390f77ee6bbc0405a56b" translate="yes" xml:space="preserve">
          <source>More details about the cause of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09df0cd9a915ec46dbd5c960b6c76b13478a7af9" translate="yes" xml:space="preserve">
          <source>More details of the fault</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016a67fe3fcede5d7d74c972b08bd498a357c88a" translate="yes" xml:space="preserve">
          <source>More examples to demonstrate this behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131567d539634589aab282fcdc6bb4848596a573" translate="yes" xml:space="preserve">
          <source>More information on references and their potential uses can be found in the &lt;a href=&quot;https://secure.php.net/manual/en/language.references.php&quot;&gt;References Explained&lt;/a&gt; section of the manual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5376d6570367eea5bc090034657787277812e913" translate="yes" xml:space="preserve">
          <source>More precisely, late static bindings work by storing the class named in the last &quot;non-forwarding call&quot;. In case of static method calls, this is the class explicitly named (usually the one on the left of the &lt;a href=&quot;language.oop5.paamayim-nekudotayim&quot;&gt;&lt;em&gt;::&lt;/em&gt;&lt;/a&gt; operator); in case of non static method calls, it is the class of the object. A &quot;forwarding call&quot; is a static one that is introduced by &lt;em&gt;self::&lt;/em&gt;, &lt;em&gt;parent::&lt;/em&gt;, &lt;em&gt;static::&lt;/em&gt;, or, if going up in the class hierarchy, &lt;a href=&quot;function.forward-static-call&quot;&gt;forward_static_call()&lt;/a&gt;. The function &lt;a href=&quot;function.get-called-class&quot;&gt;get_called_class()&lt;/a&gt; can be used to retrieve a string with the name of the called class and &lt;em&gt;static::&lt;/em&gt; introduces its scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b5bd6ab99ac76d8367d236a8f330979240f387" translate="yes" xml:space="preserve">
          <source>More precisely, this function decodes all the entities (including all numeric entities) that a) are necessarily valid for the chosen document type &amp;mdash; i.e., for XML, this function does not decode named entities that might be defined in some DTD &amp;mdash; and b) whose character or characters are in the coded character set associated with the chosen encoding and are permitted in the chosen document type. All other entities are left as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80ab73fa6951df1fd59e5f5f5c3aee59c1e0d16" translate="yes" xml:space="preserve">
          <source>Most PHP values can also be converted to &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s for permanent storage. This method is called serialization, and is performed by the &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt; function. If the PHP engine was built with &lt;a href=&quot;https://secure.php.net/manual/en/ref.wddx.php&quot;&gt;WDDX&lt;/a&gt; support, PHP values can also be serialized as well-formed XML text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dfe16b82a734f7b24f526d68f3a4a0601bf1cc" translate="yes" xml:space="preserve">
          <source>Most abbreviated style, only essential data (12/13/52 or 3:30pm)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e578a8234ebccb7ad60b7772e92f2cee7a98b5f" translate="yes" xml:space="preserve">
          <source>Most contemporary clients accept relative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a338153c26c44164614d969075dcdf74b00309c" translate="yes" xml:space="preserve">
          <source>Most of &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; errors are evaluated at the compile time thus such errors are not reported in the file where &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; is enhanced to include &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; errors (and vice versa).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf74f4424d227aefe7d0ae87cfc9caaf8dce0a3" translate="yes" xml:space="preserve">
          <source>Most parameters are input parameters, that is, parameters that are used in a read-only fashion to build up the query. Some drivers support the invocation of stored procedures that return data as output parameters, and some also as input/output parameters that both send in data and are updated to receive it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c734e741376f610d13852d8614b2d0d9645daf1c" translate="yes" xml:space="preserve">
          <source>Move all data from the buffer provided in &lt;code&gt;buf&lt;/code&gt; parameter to the end of current &lt;a href=&quot;class.eventbuffer&quot;&gt;EventBuffer&lt;/a&gt; . This is a destructive add. The data from one buffer moves into the other buffer. However, no unnecessary memory copies occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4b03b2b8d1dc74fd256541fe4c6ea69d6ab836" translate="yes" xml:space="preserve">
          <source>Move forward to the next &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759ed749f5f2519207d66aea9bc9c6be0d142504" translate="yes" xml:space="preserve">
          <source>Move the iterator forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936c77e446e101bf68e3fe013de6002b42ca0ddd" translate="yes" xml:space="preserve">
          <source>Move the iterator to the next array entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf1ae2e6aa2e3782fa33191fb5e1dadb68f35a6" translate="yes" xml:space="preserve">
          <source>Move the iterator to the next node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e01db0e0ceeb548524146540ddabb8de87c0cf" translate="yes" xml:space="preserve">
          <source>Move the iterator to the previous node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f7438b7e661c3c00c02d3855fa67f5af9c13e3" translate="yes" xml:space="preserve">
          <source>Move to the next file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568680504a0af34f4b53391e22492bb7013231a1" translate="yes" xml:space="preserve">
          <source>Move to the next node. This will delete the top node of the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f44255decf413f0073360b5f0007a0737ed2a7" translate="yes" xml:space="preserve">
          <source>Moves ahead to the next line in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fdaa53e86242d6d7b6175298e9d18248b63ced" translate="yes" xml:space="preserve">
          <source>Moves all attached iterator instances forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5b908f8a8d0f44f26cf33537bb1d1bded7de19" translate="yes" xml:space="preserve">
          <source>Moves cursor to the first Attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc1631f91a2047f8177b6e8c1c3561832af51a8" translate="yes" xml:space="preserve">
          <source>Moves cursor to the next Attribute if positioned on an Attribute or moves to first attribute if positioned on an Element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c245ce7a535f799655bffe3b9ad97ca3dd431af0" translate="yes" xml:space="preserve">
          <source>Moves cursor to the next node in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ae59bb9216e278349a12d149904ae9b055a9e2" translate="yes" xml:space="preserve">
          <source>Moves cursor to the parent Element of current Attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ebdf619ff31f4d4c53c4a019a495c95291536e" translate="yes" xml:space="preserve">
          <source>Moves forward to the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08e0e327597a9d48a9051db6caef0518089cea5" translate="yes" xml:space="preserve">
          <source>Moves mail messages specified by &lt;code&gt;msglist&lt;/code&gt; to the specified &lt;code&gt;mailbox&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1480ff77d67f80d3963f72bcafe84612e8d921" translate="yes" xml:space="preserve">
          <source>Moves the current position to the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd2a1c2563e8b104abb9bbf36377114d5ceaf05" translate="yes" xml:space="preserve">
          <source>Moves the inner &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; forward to its next element if there is one, otherwise rewinds the inner &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; back to the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4ebf8116446d67e58ee1e199243759fcb64967" translate="yes" xml:space="preserve">
          <source>Moves the internal pointer to the next field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7802469640c6042c218229ce7f1b85b1db59d38" translate="yes" xml:space="preserve">
          <source>Moves the iterator forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28090a5d69c0bed001b0721b7825e3e94f93d90c" translate="yes" xml:space="preserve">
          <source>Moves the iterator pointer to the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7810c408e7c051fe5743361a9f7abf2690bb8dc4" translate="yes" xml:space="preserve">
          <source>Moves the iterator to the next &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; in the storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87dd706ccfb6935215fd513ca80311efd5da914" translate="yes" xml:space="preserve">
          <source>Moves the iterator to the offset specified by &lt;code&gt;position&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de20e5eb8afcba711d26c8843f6ab2223ff1784" translate="yes" xml:space="preserve">
          <source>Moves the specified number of bytes from a source buffer to the end of the current buffer. If there are fewer number of bytes, it moves all the bytes available from the source buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2078ff0a0afdecd3d60dc2f117fe4a3583d8445" translate="yes" xml:space="preserve">
          <source>Moves to the next element. If this means to another Iterator then it rewinds that Iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105441caadeb9f12c9a9fb8df777ec98afe9ef54" translate="yes" xml:space="preserve">
          <source>Msgno - The message number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6f44b91234c53ce147503b54293930aceb5ee8" translate="yes" xml:space="preserve">
          <source>Much like directories and files, PHP namespaces also contain the ability to specify a hierarchy of namespace names. Thus, a namespace name can be defined with sub-levels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be9b67ebb29d8a792f5f9073d285204a2833b0f" translate="yes" xml:space="preserve">
          <source>Much like the unix file system concept of mounting external devices to paths within the directory tree, &lt;strong&gt;Phar::mount()&lt;/strong&gt; allows referring to external files and directories as if they were inside of an archive. This allows powerful abstraction such as referring to external configuration files as if they were inside the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbdc0d773415db9c436cb62993808197d01d9e4" translate="yes" xml:space="preserve">
          <source>Multibyte String &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377754296ddb9bd810e5e48a6d00ac8e4a0650a5" translate="yes" xml:space="preserve">
          <source>Multibyte characters may be used in &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b747e82549657ee73092a400b9b0a1360c7c89" translate="yes" xml:space="preserve">
          <source>Multidimensional array like array( array( 'x' =&amp;gt; 1, 'y' =&amp;gt; 2 ), array( 'x' =&amp;gt; 3, 'y' =&amp;gt; 4 ) )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a706ac82c6461693fb0e8246afffb872073e2391" translate="yes" xml:space="preserve">
          <source>Multiline parameter. If left empty it is autodetected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076e5c393cc35ba498c0b1aedb27f1a904a15ac9" translate="yes" xml:space="preserve">
          <source>Multiple &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; blocks can be used to catch different classes of exceptions. Normal execution (when no exception is thrown within the &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;try&lt;/em&gt;&lt;/a&gt; block) will continue after that last &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; block defined in sequence. Exceptions can be &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;throw&lt;/em&gt;&lt;/a&gt;n (or re-thrown) within a &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a701bd27ecf5db99f88b83917c9c0b7fa1de60a2" translate="yes" xml:space="preserve">
          <source>Multiple Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dcd1bbc84646d877f3dda30da152ba7762a2ea" translate="yes" xml:space="preserve">
          <source>Multiple Traits can be inserted into a class by listing them in the use statement, separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae06c99b4b609c1937977651d87ec63e21bb7c0b" translate="yes" xml:space="preserve">
          <source>Multiple calls to &lt;strong&gt;register_shutdown_function()&lt;/strong&gt; can be made, and each will be called in the same order as they were registered. If you call &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; within one registered shutdown function, processing will stop completely and no other registered shutdown functions will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f62d398c3d94b8aabe1044d6bcfa74236b9f082" translate="yes" xml:space="preserve">
          <source>Multiple calls to &lt;strong&gt;setcookie()&lt;/strong&gt; are performed in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37ebd6858da32ddc749149ddf5a5f35eae998b7" translate="yes" xml:space="preserve">
          <source>Multiple default cases will raise a &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857eb04f7231d39770429d41ff44c45764a47d46" translate="yes" xml:space="preserve">
          <source>Multiple elements with the same priority will get dequeued in no particular order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93feb88aebb1797b374da8f0aa3a1a40c276b1e9" translate="yes" xml:space="preserve">
          <source>Multiple namespaces may also be declared in the same file. There are two allowed syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389f1379588b67c94729f67d4fd842742429a5f9" translate="yes" xml:space="preserve">
          <source>Multiple occurrences in &lt;var&gt;&lt;var&gt;$array1&lt;/var&gt;&lt;/var&gt; are all treated the same way. This will output :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e35816469851bf1fc26378bf6efebfeb56186af" translate="yes" xml:space="preserve">
          <source>Multiple values cannot be bound to a single parameter; for example, it is not allowed to bind two values to a single named parameter in an IN() clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19dc6293598bcf2a2df1d460b6b6c7718dd462e" translate="yes" xml:space="preserve">
          <source>Multiple values will be added in the same order that they are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190c45c64af80f5ec6425afc2b512b6d6f20b723" translate="yes" xml:space="preserve">
          <source>MultipleIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea625fcd46b7450d6df965cb852623137f06b4f2" translate="yes" xml:space="preserve">
          <source>MultipleIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8895146f7b670bd988d5ecee4fa566736156788" translate="yes" xml:space="preserve">
          <source>MultipleIterator::__construct</source>
          <target state="translated">MultipleIterator::__construct</target>
        </trans-unit>
        <trans-unit id="a62cf995036c49a60f8b8a8b911170cf79c15b88" translate="yes" xml:space="preserve">
          <source>MultipleIterator::__construct &amp;mdash; Constructs a new MultipleIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cabfadcfdd4ce64b9c525a7c583ca3b21ca5ba2" translate="yes" xml:space="preserve">
          <source>MultipleIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23e4b30986896eccb86f53ad24e069c4f502921" translate="yes" xml:space="preserve">
          <source>MultipleIterator::attachIterator</source>
          <target state="translated">MultipleIterator::attachIterator</target>
        </trans-unit>
        <trans-unit id="8b32e1986f24da501462a2ffeb814a7c49d4e0f8" translate="yes" xml:space="preserve">
          <source>MultipleIterator::attachIterator &amp;mdash; Attaches iterator information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636c19c177633571607020ba792eb616ef711b2b" translate="yes" xml:space="preserve">
          <source>MultipleIterator::attachIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0da410a8447a082d38a744aebd0a2355f0e2f5" translate="yes" xml:space="preserve">
          <source>MultipleIterator::containsIterator</source>
          <target state="translated">MultipleIterator::containsIterator</target>
        </trans-unit>
        <trans-unit id="f605f0280f44f068c51f195f1d5c8f9381f72966" translate="yes" xml:space="preserve">
          <source>MultipleIterator::containsIterator &amp;mdash; Checks if an iterator is attached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510505dee0a34930eaa2abc0c4f3dba4066587d8" translate="yes" xml:space="preserve">
          <source>MultipleIterator::containsIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649bd047d7a01532dcabc8ffe582b3e4bf9de3d9" translate="yes" xml:space="preserve">
          <source>MultipleIterator::countIterators</source>
          <target state="translated">MultipleIterator::countIterators</target>
        </trans-unit>
        <trans-unit id="04d3a8d5fe48ec9bf887c803489945158894cfe6" translate="yes" xml:space="preserve">
          <source>MultipleIterator::countIterators &amp;mdash; Gets the number of attached iterator instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e0a4e42779fb0b6b2ffe0f6a8ca5c419ab2289" translate="yes" xml:space="preserve">
          <source>MultipleIterator::countIterators &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e25315bdd4bd060dd9c0ea28109906521d9a80" translate="yes" xml:space="preserve">
          <source>MultipleIterator::current</source>
          <target state="translated">MultipleIterator::current</target>
        </trans-unit>
        <trans-unit id="ade804e839f48b7c131eca475bc4aaf7cfb1efca" translate="yes" xml:space="preserve">
          <source>MultipleIterator::current &amp;mdash; Gets the registered iterator instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e81001b813646de56385dddeeac86892d8e45d" translate="yes" xml:space="preserve">
          <source>MultipleIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e76ff51196c29789f1e13d48caaea57f8a6559" translate="yes" xml:space="preserve">
          <source>MultipleIterator::detachIterator</source>
          <target state="translated">MultipleIterator::detachIterator</target>
        </trans-unit>
        <trans-unit id="f8c88ec0edb3d29ef95e3cee8022332b925728d2" translate="yes" xml:space="preserve">
          <source>MultipleIterator::detachIterator &amp;mdash; Detaches an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756440b462071b5df63aa9093ec8e7279964733f" translate="yes" xml:space="preserve">
          <source>MultipleIterator::detachIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c7c97369af2c1a3860454debc04d8d48ad3e01" translate="yes" xml:space="preserve">
          <source>MultipleIterator::getFlags</source>
          <target state="translated">MultipleIterator::getFlags</target>
        </trans-unit>
        <trans-unit id="e3bd8b6162d39d1bed8cb267d8e64583882e1148" translate="yes" xml:space="preserve">
          <source>MultipleIterator::getFlags &amp;mdash; Gets the flag information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c455991e491593a4c3263ed5f727c772ad54dd" translate="yes" xml:space="preserve">
          <source>MultipleIterator::getFlags &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d36f26a4b9a51ca8a75e8484f3c0debba8c10f" translate="yes" xml:space="preserve">
          <source>MultipleIterator::key</source>
          <target state="translated">MultipleIterator::key</target>
        </trans-unit>
        <trans-unit id="1ea92cfce6ce060c36614e4eb5f0258611d2905f" translate="yes" xml:space="preserve">
          <source>MultipleIterator::key &amp;mdash; Gets the registered iterator instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f842083c482e1dee02c5b062b56d181919703c" translate="yes" xml:space="preserve">
          <source>MultipleIterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f055ef42d817fe88315f66f4742183419bda8f" translate="yes" xml:space="preserve">
          <source>MultipleIterator::next</source>
          <target state="translated">MultipleIterator::next</target>
        </trans-unit>
        <trans-unit id="77f612e92fd9b067c33b0da0f01798ac8fdd9e7c" translate="yes" xml:space="preserve">
          <source>MultipleIterator::next &amp;mdash; Moves all attached iterator instances forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d61230a7a934edd06a3a1b85c35cb34c234085" translate="yes" xml:space="preserve">
          <source>MultipleIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c5b26e7c244731cc221bebce407b03f5ff189a" translate="yes" xml:space="preserve">
          <source>MultipleIterator::rewind</source>
          <target state="translated">MultipleIterator::rewind</target>
        </trans-unit>
        <trans-unit id="62880e1a76e546c43761be2374ecb7f90815f6d4" translate="yes" xml:space="preserve">
          <source>MultipleIterator::rewind &amp;mdash; Rewinds all attached iterator instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc03a5b1f5b450f3d07ba3cdca5907cd011179c5" translate="yes" xml:space="preserve">
          <source>MultipleIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7487453fec53c136b6fc502f77c8254407b696bf" translate="yes" xml:space="preserve">
          <source>MultipleIterator::setFlags</source>
          <target state="translated">MultipleIterator::setFlags</target>
        </trans-unit>
        <trans-unit id="d629cdd42cafdd05256fb0bcab010df781d8e0b6" translate="yes" xml:space="preserve">
          <source>MultipleIterator::setFlags &amp;mdash; Sets flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94a3737a41e966eaed1751bf44b495225d6dd09" translate="yes" xml:space="preserve">
          <source>MultipleIterator::setFlags &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e670cfb3f37aeee6b949ea71f8b2857dad5c377" translate="yes" xml:space="preserve">
          <source>MultipleIterator::valid</source>
          <target state="translated">MultipleIterator::valid</target>
        </trans-unit>
        <trans-unit id="105c59deefaf105891ee76b353277925d13f6dc1" translate="yes" xml:space="preserve">
          <source>MultipleIterator::valid &amp;mdash; Checks the validity of sub iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f566a31032ff686437897f922cbdadf5a77d14ed" translate="yes" xml:space="preserve">
          <source>MultipleIterator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ac193dba793bdf2d48977c1ffeb337109f5e1c" translate="yes" xml:space="preserve">
          <source>Multiplexed block device (v7+coherent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ceee18a92b7e7c68fd989aa202456aa54b0b9d" translate="yes" xml:space="preserve">
          <source>Multiplexed char device (v7+coherent) node type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="43d0bc1e7edd43337153f1156bfe4ea0dcce467f" translate="yes" xml:space="preserve">
          <source>Multiplier.</source>
          <target state="translated">Multiplier.</target>
        </trans-unit>
        <trans-unit id="e442d2dc9281fdcf4e6f74aba3a54507762ade1b" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;code&gt;a&lt;/code&gt; by &lt;code&gt;b&lt;/code&gt; and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705c49967cf3b1dd288bc3f55111af513ff7af0c" translate="yes" xml:space="preserve">
          <source>Multiply the &lt;code&gt;left_operand&lt;/code&gt; by the &lt;code&gt;right_operand&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfac45d891ebd4314fe462d0e5c5e31a70cf48a" translate="yes" xml:space="preserve">
          <source>Must be a non-negative integer less than 1 billion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66c460079ccba2cb3be8797c7b2f78c4dbce663" translate="yes" xml:space="preserve">
          <source>Must be a non-negative integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e261d0e9d2955d90aac5a46cf8f473cbe44503" translate="yes" xml:space="preserve">
          <source>Must be an associative array in the format &lt;em&gt;$arr['parameter'] = $value&lt;/em&gt;. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/context.params.php&quot;&gt;context parameters&lt;/a&gt; for a listing of standard stream parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0d8cf320e152af6bfc6b7751527418c2347f60" translate="yes" xml:space="preserve">
          <source>Must be an associative array of associative arrays in the format &lt;em&gt;$arr['wrapper']['option'] = $value&lt;/em&gt;. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/context.php&quot;&gt;context options&lt;/a&gt; for a list of available wrappers and options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23817b6891e5e8cef4359b7262663ab7ab525551" translate="yes" xml:space="preserve">
          <source>Must be between zero and the total number of rows minus one (0.. &lt;a href=&quot;mysqli-stmt.num-rows&quot;&gt;mysqli_stmt_num_rows()&lt;/a&gt; - 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f895920447a0bcd1bb7b2c0f3af4c88c2de51a" translate="yes" xml:space="preserve">
          <source>Must be called after a &lt;em&gt;fork&lt;/em&gt; in the child, before entering or continuing the event loop. An alternative is to use &lt;strong&gt;&lt;code&gt;Ev::FLAG_FORKCHECK&lt;/code&gt;&lt;/strong&gt; which calls this function automatically, at some performance loss (refer to the &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#FUNCTIONS_CONTROLLING_EVENT_LOOPS&quot;&gt;&amp;raquo; libev documentation&lt;/a&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fccb6dc863e46482cf028f7afdc82e7d25ed32" translate="yes" xml:space="preserve">
          <source>Must be greater than the longest line (in characters) to be found in the CSV file (allowing for trailing line-end characters). Otherwise the line is split in chunks of &lt;code&gt;length&lt;/code&gt; characters, unless the split would occur inside an enclosure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75526171cdeada112886bd5670850bb7992a3538" translate="yes" xml:space="preserve">
          <source>Must call &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; before using &lt;strong&gt;session_encode()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f58800abaa2a38c6f7bdfa5c77a920e9a3bdb2f" translate="yes" xml:space="preserve">
          <source>Mutes the colors of the image to simulate a scene at nighttime in the moonlight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad95e34a6961376f325cfafa62ee5be6096a81f" translate="yes" xml:space="preserve">
          <source>Mutex &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8b1194432dd4bd6006b4d14b059b175e1f55b1" translate="yes" xml:space="preserve">
          <source>Mutex (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a480b57d0ac5f97b3b88ef4f1af977fc1da48ed8" translate="yes" xml:space="preserve">
          <source>Mutex::create</source>
          <target state="translated">Mutex::create</target>
        </trans-unit>
        <trans-unit id="f624a7fd06fc4f2da4effbe77017581cf3e43a8f" translate="yes" xml:space="preserve">
          <source>Mutex::create &amp;mdash; Create a Mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efd0c4b8d0a1a36ac761cf85fe43a3843e8b338" translate="yes" xml:space="preserve">
          <source>Mutex::create &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04f09f94cf74d83c944495696ea45d157cbc56d" translate="yes" xml:space="preserve">
          <source>Mutex::destroy</source>
          <target state="translated">Mutex::destroy</target>
        </trans-unit>
        <trans-unit id="29dddfeef2a28aefd99e8ec584b6c3a5250a43aa" translate="yes" xml:space="preserve">
          <source>Mutex::destroy &amp;mdash; Destroy Mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5a747b4f4f65e114d050d32858b72cf13f1f72" translate="yes" xml:space="preserve">
          <source>Mutex::destroy &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e2a8305c697b4c7a758e3debe7bcee30f43862" translate="yes" xml:space="preserve">
          <source>Mutex::lock</source>
          <target state="translated">Mutex::lock</target>
        </trans-unit>
        <trans-unit id="82ddf694a329e1c622bee2c02e62a1be0941cd28" translate="yes" xml:space="preserve">
          <source>Mutex::lock &amp;mdash; Acquire Mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e45e459818ecee6e005dfd52fc34ce5a980c1b" translate="yes" xml:space="preserve">
          <source>Mutex::lock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72549dc58fe22e6d9827d211e9d0556661a84f97" translate="yes" xml:space="preserve">
          <source>Mutex::trylock</source>
          <target state="translated">Mutex::trylock</target>
        </trans-unit>
        <trans-unit id="8d48b75bcb1c7b4fe4b4b93a9c9167015247ddcf" translate="yes" xml:space="preserve">
          <source>Mutex::trylock &amp;mdash; Attempt to Acquire Mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81991cc9c9b124ebf447e9181f39d78d8bfa336" translate="yes" xml:space="preserve">
          <source>Mutex::trylock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c319372e4bc14f5518de847530e6b7033e56cfc" translate="yes" xml:space="preserve">
          <source>Mutex::unlock</source>
          <target state="translated">Mutex::unlock</target>
        </trans-unit>
        <trans-unit id="6083d479ac71053e651788777e2e5db5281b1195" translate="yes" xml:space="preserve">
          <source>Mutex::unlock &amp;mdash; Release Mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c3e505af98c7a0fe97b37d7faba66689450a64" translate="yes" xml:space="preserve">
          <source>Mutex::unlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25abc6ba8fd965bddbcd5bea93dde62a5971220" translate="yes" xml:space="preserve">
          <source>MySQL Native Driver Only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7275a29a13a361b9f9e72143faf26ea665038d" translate="yes" xml:space="preserve">
          <source>MySQL character set concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7608b25730f715a32b9a89f519001577f98b2a" translate="yes" xml:space="preserve">
          <source>MySQLi Driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f9156757784d386d2e43121bc5c1cb6722d747" translate="yes" xml:space="preserve">
          <source>MySQLnd always assumes the server default charset. This charset is sent during connection hand-shake/authentication, which mysqlnd will use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="abb9386fff542a0ccce12572da3b5cf684c31f47" translate="yes" xml:space="preserve">
          <source>NEW - match new messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da166baba5f297e111700a7008c236d3cc9c3fd7" translate="yes" xml:space="preserve">
          <source>NNTP</source>
          <target state="translated">NNTP</target>
        </trans-unit>
        <trans-unit id="21c94d3955beaa34b28e9180fe118aee0cedcbd4" translate="yes" xml:space="preserve">
          <source>NON_UNIQUE</source>
          <target state="translated">NON_UNIQUE</target>
        </trans-unit>
        <trans-unit id="e2eb81da56d08d6505a6a4907f269954cc2d0bdf" translate="yes" xml:space="preserve">
          <source>NSAPI &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580852705d003f21aa1496e697702b68773ab2ff" translate="yes" xml:space="preserve">
          <source>NUL (the NUL byte)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b9392c9ed0336297a59c92a1de9a5f1013ec7e" translate="yes" xml:space="preserve">
          <source>NUL byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cc8994a4be802be581101bc8e82153aa571401" translate="yes" xml:space="preserve">
          <source>NUL-fill to absolute position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d5c776dbc380dda732f8823069d5ced27ba8dc" translate="yes" xml:space="preserve">
          <source>NUL-padded string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01552da5321bbb8731d8184cb396c12f74e4b445" translate="yes" xml:space="preserve">
          <source>NUL-padded string (new in PHP 5.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef19c54306daa69eda49c0272623bdb5e2b341f" translate="yes" xml:space="preserve">
          <source>NULL</source>
          <target state="translated">NULL</target>
        </trans-unit>
        <trans-unit id="5cd3f55c1cf324bf5f87ed22c0c104f02cfb5520" translate="yes" xml:space="preserve">
          <source>NULL &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526e9ec2d97128e464c6fab7077b5c0803b3f24c" translate="yes" xml:space="preserve">
          <source>NULL, Bool, Long, Double, String, or Resource value to store in the new constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6590624f1c1cb5fb123b9a660073c8ea49f31ce9" translate="yes" xml:space="preserve">
          <source>NULLABLE</source>
          <target state="translated">NULLABLE</target>
        </trans-unit>
        <trans-unit id="49a80e8fd3bf79e1a6a69d3bb2b2c32f4c44dc89" translate="yes" xml:space="preserve">
          <source>NUM_INPUT_PARAMS</source>
          <target state="translated">NUM_INPUT_PARAMS</target>
        </trans-unit>
        <trans-unit id="663070713ef8de0f4f0463499f6231eb0554c49c" translate="yes" xml:space="preserve">
          <source>NUM_OUTPUT_PARAMS</source>
          <target state="translated">NUM_OUTPUT_PARAMS</target>
        </trans-unit>
        <trans-unit id="5e54159deabe1e9b88c2b4776dd8fca7571081b2" translate="yes" xml:space="preserve">
          <source>NUM_RESULT_SETS</source>
          <target state="translated">NUM_RESULT_SETS</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="fc4eb4b3e7552a31567cac8ba077afdd59a56894" translate="yes" xml:space="preserve">
          <source>Name (constant)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168ef6b2b4f8b08ebc56874081d04ce67b4baaab" translate="yes" xml:space="preserve">
          <source>Name and revision of the information protocol via which the page was requested; i.e. '&lt;em&gt;HTTP/1.0&lt;/em&gt;';</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c19150d2fc21041d0109cdf427bee401f753e31" translate="yes" xml:space="preserve">
          <source>Name collisions between code you create, and internal PHP classes/functions/constants or third-party classes/functions/constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9c9a387fa901316567c7eae67889980125ae95" translate="yes" xml:space="preserve">
          <source>Name of a file to be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af0bdeb3d75c5ebc661a59b781ad58302ad9096" translate="yes" xml:space="preserve">
          <source>Name of a filter to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0d92ff7e9779d376bcc24601b3e56e57bf8bbd" translate="yes" xml:space="preserve">
          <source>Name of a function which expects one parameter. Output generated by &lt;code&gt;sandbox&lt;/code&gt; will be passed to this callback. Anything returned by the callback will be displayed normally. If this parameter is not passed then output handling will not be changed. If a non-truth value is passed, output handling will be disabled and will revert to direct display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf325fb8f277319b12221b306c8c46407b1ae1e" translate="yes" xml:space="preserve">
          <source>Name of a latitude attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4571c39860a8db14aece6d60a021d10977729f22" translate="yes" xml:space="preserve">
          <source>Name of a longitude attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59b50719c7d9a1e45c9a4ac2f9bfcc94c1b6bc" translate="yes" xml:space="preserve">
          <source>Name of a magic database file, usually something like &lt;var&gt;/path/to/magic.mime&lt;/var&gt;. If not specified, the &lt;em&gt;MAGIC&lt;/em&gt; environment variable is used. If the environment variable isn't set, then PHP's bundled magic database will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1098018660f8a31ab5dd2f9781f2fa0052a015" translate="yes" xml:space="preserve">
          <source>Name of a variable to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219974921c8dd52aa920f088f737a30e5be007b5" translate="yes" xml:space="preserve">
          <source>Name of a variable to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965f041002a89ccf0240239680f8ed01f3023ce5" translate="yes" xml:space="preserve">
          <source>Name of active output handler or ' default output handler' if none is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2254089ba04e64575bcdb36b9f1f17dfc547a83" translate="yes" xml:space="preserve">
          <source>Name of algorithm used by this publickey, for example: &lt;em&gt;ssh-dss&lt;/em&gt; or &lt;em&gt;ssh-rsa&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1739dd07d7812d22e9c08805d0749d0cef3c3c28" translate="yes" xml:space="preserve">
          <source>Name of an &lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; derived class to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08aaabe4c3c662e1c5e598aa6077890157708afe" translate="yes" xml:space="preserve">
          <source>Name of class to be adopted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5706003ecdd21dde7e76d0c3741d1d29660179" translate="yes" xml:space="preserve">
          <source>Name of class to emancipate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be81276fb60b6b96e814f01a1904fee28420d81b" translate="yes" xml:space="preserve">
          <source>Name of constant to declare. Either a string to indicate a global constant, or &lt;em&gt;classname::constname&lt;/em&gt; to indicate a class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c1ba63b17b3573569e4cb76d3b08f0a27ccda8" translate="yes" xml:space="preserve">
          <source>Name of constant to remove. Either a string indicating a global constant, or &lt;em&gt;classname::constname&lt;/em&gt; indicating a class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce3005d4e2e81e2621a8df81a08bfbe20ec6c2b" translate="yes" xml:space="preserve">
          <source>Name of existing function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a4b6677b4a74e69b4a8244fb1772abe78eafcb" translate="yes" xml:space="preserve">
          <source>Name of function to be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329bcce2a835c5dfbe8236a4005b4d5b59afecc4" translate="yes" xml:space="preserve">
          <source>Name of function to be deleted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c31a91fd7db95260e1dfacd06d98b2fc0bdf203" translate="yes" xml:space="preserve">
          <source>Name of function to call when a packet is received but the message authentication code failed. If the callback returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, the mismatch will be ignored, otherwise the connection will be terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b498fcad8bec5f569c394fc5b8b4c8bf0def4c33" translate="yes" xml:space="preserve">
          <source>Name of function to call when an &lt;strong&gt;&lt;code&gt;SSH2_MSG_DEBUG&lt;/code&gt;&lt;/strong&gt; packet is received</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83482a779514d776bdccb669118574394ded83bd" translate="yes" xml:space="preserve">
          <source>Name of function to call when an &lt;strong&gt;&lt;code&gt;SSH2_MSG_DISCONNECT&lt;/code&gt;&lt;/strong&gt; packet is received</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3d9c36de14ac988b98187080b6fdfef26b338e" translate="yes" xml:space="preserve">
          <source>Name of function to call when an &lt;strong&gt;&lt;code&gt;SSH2_MSG_IGNORE&lt;/code&gt;&lt;/strong&gt; packet is received</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47505d980f0607ccb448ede0b7b514484a77457a" translate="yes" xml:space="preserve">
          <source>Name of function to redefine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543ce4695979f2dbba9ebe18641ce06cfa9abb6f" translate="yes" xml:space="preserve">
          <source>Name of new function to copy definition to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc1e1efcb29fb81e77165033eb70cca5d4f5a5d" translate="yes" xml:space="preserve">
          <source>Name of parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba20f226652809a4c83e6033f0b2e2c3d8796283" translate="yes" xml:space="preserve">
          <source>Name of profile to add or remove: ICC, IPTC, or generic profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143cb2550605089d02c6b4e0b84a1acd1b20e934" translate="yes" xml:space="preserve">
          <source>Name of profile to return: ICC, IPTC, or generic profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08515a993243c1b59dab8d265b7664ae907a051" translate="yes" xml:space="preserve">
          <source>Name of selected hashing algorithm (e.g. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb7cd733a3af5f02718276e537d4fec08b5b2d0" translate="yes" xml:space="preserve">
          <source>Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66d880d29e244351259c320469e10d1fe5385c3" translate="yes" xml:space="preserve">
          <source>Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..) See &lt;a href=&quot;function.hash-hmac-algos&quot;&gt;hash_hmac_algos()&lt;/a&gt; for a list of supported algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea0941d1c541caf1de7ade2be995c75a906a9db" translate="yes" xml:space="preserve">
          <source>Name of selected hashing algorithm (i.e. &quot;md5&quot;, &quot;sha256&quot;, &quot;haval160,4&quot;, etc..). For a list of supported algorithms see &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f8fd557d6b11d2d0f3c9a5417292bcc26de2f6" translate="yes" xml:space="preserve">
          <source>Name of selected hashing algorithm (i.e. &quot;sha256&quot;, &quot;sha512&quot;, &quot;haval160,4&quot;, etc..) See &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos()&lt;/a&gt; for a list of supported algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4114b558c910b7e9cc75f35f217126429d838a" translate="yes" xml:space="preserve">
          <source>Name of selected hashing algorithm (i.e. &lt;em&gt;md5&lt;/em&gt;, &lt;em&gt;sha256&lt;/em&gt;, &lt;em&gt;haval160,4&lt;/em&gt;, etc..) See &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos()&lt;/a&gt; for a list of supported algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a174337a489adad30b9e4bb4bd94b265516abe5a" translate="yes" xml:space="preserve">
          <source>Name of the PHP variable to bind to the SQL statement parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39433d274c6c00413d1900e4999e5ba96007224d" translate="yes" xml:space="preserve">
          <source>Name of the PHP variable to which the column will be bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d4adeb40ffebfc9ea24cf6ca1a1624d83e445e" translate="yes" xml:space="preserve">
          <source>Name of the SQL aggregate to be created or redefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4031e4de38d8df973433069812d6cf1fd95879" translate="yes" xml:space="preserve">
          <source>Name of the SQL collating function to be created or redefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c706754316b449aa6a8c8bb0fe87891eab42ef4" translate="yes" xml:space="preserve">
          <source>Name of the SQL function to be created or redefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013549fb31a6501d5f5b287495c201dee25a31ee" translate="yes" xml:space="preserve">
          <source>Name of the class constant. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa320100e11cad13f82690e17a937e716f0ed46" translate="yes" xml:space="preserve">
          <source>Name of the class to load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46204ee2c74fe713831433a15adcf83a51361e75" translate="yes" xml:space="preserve">
          <source>Name of the class where the class constant is defined. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf9a3127c0eb039125cd1f576cca739d221e46b" translate="yes" xml:space="preserve">
          <source>Name of the class where the property is defined. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13c6cffd229a3a935af0e2318ca4aa82fcea34b" translate="yes" xml:space="preserve">
          <source>Name of the class. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a077c1e5087585a30815c97a547fea69b2c36e2d" translate="yes" xml:space="preserve">
          <source>Name of the constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd5543fd5b46924906b526cda9b33c206fa1f66" translate="yes" xml:space="preserve">
          <source>Name of the created class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc09691a5075e65e45533dec3fc1eac7363ca9a4" translate="yes" xml:space="preserve">
          <source>Name of the entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c08ae1bb6f802c1858dc677c046fb02dab9cffb" translate="yes" xml:space="preserve">
          <source>Name of the entry to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee693e8eb60c5e149488aa3c9f0825bb1ef796e" translate="yes" xml:space="preserve">
          <source>Name of the entry to rename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d2463c76f8927c5c262f3db8f30e208a6a7fd6" translate="yes" xml:space="preserve">
          <source>Name of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ee9a5a6733bdd59c825a7afde178e4f7bd7ed7" translate="yes" xml:space="preserve">
          <source>Name of the extension to be registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1d029d57359e49ddffa35aed4409731790217f" translate="yes" xml:space="preserve">
          <source>Name of the extension, same as calling the &lt;a href=&quot;reflectionextension.getname&quot;&gt;ReflectionExtension::getName()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40abec161decd95c4a4db2e6e216375078b6b6d2" translate="yes" xml:space="preserve">
          <source>Name of the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b1f80926744b4b9efe86a62fedf253dac0303a" translate="yes" xml:space="preserve">
          <source>Name of the extension. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f252087e3c09b9f4a563bfab1b901c6642cb28" translate="yes" xml:space="preserve">
          <source>Name of the field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b58f1691d136aa13d0aac4da8428af22b1bf79" translate="yes" xml:space="preserve">
          <source>Name of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45eabd197b52189b821d50c43ab02250db1c8811" translate="yes" xml:space="preserve">
          <source>Name of the file to be uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac30d39204e3a100271d1a5cd9ae8baeb488fe1" translate="yes" xml:space="preserve">
          <source>Name of the file to be used in the upload data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372481af59af365bf8efb02af65159bef0bb4770" translate="yes" xml:space="preserve">
          <source>Name of the file to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a79bfe856f155f893ab35481a22e879206a5c0d" translate="yes" xml:space="preserve">
          <source>Name of the filter registered by &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5168918f607c2c2e4325f1fccde6884c08bdddae" translate="yes" xml:space="preserve">
          <source>Name of the function to be called when an uncaught exception occurs. This handler function needs to accept one parameter, which will be the exception object that was thrown. This is the handler signature before PHP 7:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027e8f3bd86bd8e4ba981a0b82985a234dd63d1f" translate="yes" xml:space="preserve">
          <source>Name of the function. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995ea7bf8391dbe80107468be2f805a6c96f6b00" translate="yes" xml:space="preserve">
          <source>Name of the index (or indexes) to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeaf0305c1412f2769410c4f1285ecb84df2323" translate="yes" xml:space="preserve">
          <source>Name of the method being checked for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d81cb92df240f87411e0084a52bf2fee09745a2" translate="yes" xml:space="preserve">
          <source>Name of the method to call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5f44f07bd0d61fe927d03793b09a736fef9df4" translate="yes" xml:space="preserve">
          <source>Name of the method to copy from the source class. If this parameter is omitted, the value of &lt;code&gt;dMethod&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9936815fcc87ba4e0826674718548a885a3a43f4" translate="yes" xml:space="preserve">
          <source>Name of the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c90ac03c4b4f2a75696c6f9034ee2c6db1327d" translate="yes" xml:space="preserve">
          <source>Name of the n-th day of the week (DAY_1 = Sunday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b35727419e4f1144a14755314c8cf44e89d5b1" translate="yes" xml:space="preserve">
          <source>Name of the n-th month of the year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6632eaa93bfa1b5a0237f508cdda294c57165c74" translate="yes" xml:space="preserve">
          <source>Name of the notation of this entity (see &lt;a href=&quot;function.xml-set-notation-decl-handler&quot;&gt;xml_set_notation_decl_handler()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dac1fcaa8ea59c97701a9d4510e97c1bc6ed9e" translate="yes" xml:space="preserve">
          <source>Name of the object's class. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8809c55b789507fb7508d5cf4a2a099108a35ee9" translate="yes" xml:space="preserve">
          <source>Name of the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90447b66e5aafb83db32af636097f6b8d42548f3" translate="yes" xml:space="preserve">
          <source>Name of the parameter. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08e1d22b4d4cd1ed4bef01ebfe7741da7d364e3" translate="yes" xml:space="preserve">
          <source>Name of the property being checked for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9fbd932f29553b375276be1dd572fa140570d9" translate="yes" xml:space="preserve">
          <source>Name of the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fbc1080cea59a236652845b6ad8c9dbfd8673b" translate="yes" xml:space="preserve">
          <source>Name of the property. Read-only, throws &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; in attempt to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de36029f5089796e958e12537c6faeedb677fe7" translate="yes" xml:space="preserve">
          <source>Name of the sequence object from which the ID should be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02480403af72d8ff02be1f55695edf3e3a0cabab" translate="yes" xml:space="preserve">
          <source>Name of the table against which to convert types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f987f4d79ef8d8427c053086cc0c7c18fbf5077" translate="yes" xml:space="preserve">
          <source>Name of the table from which to copy the data into &lt;code&gt;rows&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2879cf2083ad865649bf5f02e4f780ba95fdeaf" translate="yes" xml:space="preserve">
          <source>Name of the table from which to delete rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a3b2539872bce547c3719e8654d17b8570b795" translate="yes" xml:space="preserve">
          <source>Name of the table from which to select rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebf7e66dc507e1c282c28ea9319586095a155f1" translate="yes" xml:space="preserve">
          <source>Name of the table into which to copy the &lt;code&gt;rows&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bb4f34960d2accdb3781c8f09b4b21e00db237" translate="yes" xml:space="preserve">
          <source>Name of the table into which to insert rows. The table &lt;code&gt;table_name&lt;/code&gt; must at least have as many columns as &lt;code&gt;assoc_array&lt;/code&gt; has elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7752740b9dc4e349cda0af4b314e8134680c4a6" translate="yes" xml:space="preserve">
          <source>Name of the table into which to update rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede6a7c780beb1a56e34a91faafeea08638e68e7" translate="yes" xml:space="preserve">
          <source>Name of the trait to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3266c439fd2a60f0e53f94aff989244adc69a7d1" translate="yes" xml:space="preserve">
          <source>Name of user-defined callback function to be called whenever a stream triggers a notification. Only supported for &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.http.php&quot;&gt;http://&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.ftp.php&quot;&gt;ftp://&lt;/a&gt; stream wrappers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d889d54afb16143c89d8df684d6d0d2cb4ac75" translate="yes" xml:space="preserve">
          <source>Name resolution rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374f6974fda3b833584a143ec511febfddac4670" translate="yes" xml:space="preserve">
          <source>Name resolution rules &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31562fa3a4ae7e856c42b6c849c876fdc50a9b6" translate="yes" xml:space="preserve">
          <source>Named entities, such as &amp;amp;copy;, are not supported. Consider using &lt;a href=&quot;function.html-entity-decode&quot;&gt;html_entity_decode()&lt;/a&gt; to decode these named entities into UTF-8 strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37997fb001b026382dd8514c5ce2a0d9e35f297" translate="yes" xml:space="preserve">
          <source>Named subpatterns now accept the syntax &lt;em&gt;(?&amp;lt;name&amp;gt;)&lt;/em&gt; and &lt;em&gt;(?'name')&lt;/em&gt; as well as &lt;em&gt;(?P&amp;lt;name&amp;gt;)&lt;/em&gt;. Previous versions accepted only &lt;em&gt;(?P&amp;lt;name&amp;gt;)&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa96d25567df342962894e96e0ceb7020c62820" translate="yes" xml:space="preserve">
          <source>NamedType (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5a0d605d3b87d3bed5f8148dc3f2054ae0f3b9" translate="yes" xml:space="preserve">
          <source>NamedType::getName</source>
          <target state="translated">NamedType::getName</target>
        </trans-unit>
        <trans-unit id="96d8cf91def4561cd447d594f22d502cb21b599a" translate="yes" xml:space="preserve">
          <source>Names are resolved following these resolution rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38e63055b86fa9bb3c9295fd7d4e6c8ddcb7a77" translate="yes" xml:space="preserve">
          <source>Names in key, variables in value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f039f67281c581c892754ba8113c9ce84dee388" translate="yes" xml:space="preserve">
          <source>Names that begin with a &lt;em&gt;\&lt;/em&gt; always resolve to what they look like, so &lt;em&gt;\my\name&lt;/em&gt; is in fact &lt;em&gt;my\name&lt;/em&gt;, and &lt;em&gt;\Exception&lt;/em&gt; is &lt;em&gt;Exception&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad6b8cc145782ab39d5933e2915e1a99799ec70" translate="yes" xml:space="preserve">
          <source>Names that contain a backslash but do not begin with a backslash like &lt;em&gt;my\name&lt;/em&gt; can be resolved in 2 different ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171bb8d10c8d9c55e412caf5b04daf00f240d1a6" translate="yes" xml:space="preserve">
          <source>Namespace prefix or URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99aa8522e322fe1c473c60855202a159a0676eb4" translate="yes" xml:space="preserve">
          <source>Namespaces &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3990821e17200355a809d65cf7a4b3a29c15bc44" translate="yes" xml:space="preserve">
          <source>Namespaces and dynamic language features</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
