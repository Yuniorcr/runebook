<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="d30703c56e2e632443e4e06a25801bd79a5b8c36" translate="yes" xml:space="preserve">
          <source>Supports datagrams (connectionless, unreliable messages of a fixed maximum length). The UDP protocol is based on this socket type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f972c8ad8ce431bf65bf1e51aab0cd4a13d0613e" translate="yes" xml:space="preserve">
          <source>Suppress the currency symbol from the output string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c948ea0246807256cf48a7cfaaf94b78e7b2095a" translate="yes" xml:space="preserve">
          <source>Surrogate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f13656e529c1c23d0e7ed10dd16bf6a180c41d" translate="yes" xml:space="preserve">
          <source>Surround the image with an ornamental border (e.g. 15x15+3+3). The frame color is that of the thumbnail's matte color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2450dab5bd344d30f9e2a8f16181106f2ee22e51" translate="yes" xml:space="preserve">
          <source>Surrounds the image with a border of the color defined by the bordercolor GmagickPixel object or a color string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ac377fae3a0f0614b1b8c66a6e1b9d32b9c321" translate="yes" xml:space="preserve">
          <source>Surrounds the image with a border of the color defined by the bordercolor ImagickPixel object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfeca8a08e14a32f8a791cca920f8e2fbdb8c19" translate="yes" xml:space="preserve">
          <source>Suspends execution of the current process until a child as specified by the &lt;code&gt;pid&lt;/code&gt; argument has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b321fe827667535f0f780739720732b4ee85bd" translate="yes" xml:space="preserve">
          <source>Swapping the &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; may yield a different result; see the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0611b52e389c736d1964dae10fcfa2ccf1dd3ea" translate="yes" xml:space="preserve">
          <source>Swatch Beat/Internet Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557e7a8455a70e57de32c4a439ee96b5d88f11e0" translate="yes" xml:space="preserve">
          <source>Swatch Internet time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4415ba58f82bd3f2d71720295e41804895eb3d4" translate="yes" xml:space="preserve">
          <source>Swirls the pixels about the center of the image, where degrees indicates the sweep of the arc through which each pixel is moved. You get a more dramatic effect as the degrees move from 1 to 360.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0645c268de5331a14a097342c1d085f1edcdd54" translate="yes" xml:space="preserve">
          <source>Swish &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb4ab85fcd94d4f3193152c07f3319abf437ab1" translate="yes" xml:space="preserve">
          <source>Switch QueryParser to be DisMax Query Parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50805d37e7d60ef7be41c13b62e0d442b5ad9840" translate="yes" xml:space="preserve">
          <source>Switch QueryParser to be EDisMax. By default the query builder uses edismax, if it was switched using &lt;a href=&quot;solrdismaxquery.usedismaxqueryparser&quot;&gt;SolrDisMaxQuery::useDisMaxQueryParser()&lt;/a&gt;, it can be switched back using this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edf9dc39dbce84f23f52ec8745125e42a83a39a" translate="yes" xml:space="preserve">
          <source>Swoole &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e03169a7c008aa2059641300ca4ee390daebc9f" translate="yes" xml:space="preserve">
          <source>Sybase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2de2bb7dbff971c24fb7881567c14380b437f1" translate="yes" xml:space="preserve">
          <source>Symbol specifier, one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatsymbol&quot;&gt; format symbol&lt;/a&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b911325a44bf4c65ef1f2c88d8ca5ae86f28dcac" translate="yes" xml:space="preserve">
          <source>Sync &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffc88c1feb1654818e72394ec2c5e6d798f2124" translate="yes" xml:space="preserve">
          <source>SyncEvent &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023e7e247add4e6b85602286c4d327ce4f27e343" translate="yes" xml:space="preserve">
          <source>SyncEvent (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470434245428950b058a45e462a2b413c0c28fa0" translate="yes" xml:space="preserve">
          <source>SyncEvent::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7a8b06e9d27ec494d6bd5c68861d760be8d996" translate="yes" xml:space="preserve">
          <source>SyncEvent::__construct &amp;mdash; Constructs a new SyncEvent object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1642bfe9904a0d6f19f625d6f89a6c805b819bac" translate="yes" xml:space="preserve">
          <source>SyncEvent::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d636dbc2daa5d800b107e80e71c8bd61591fe8d8" translate="yes" xml:space="preserve">
          <source>SyncEvent::fire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d93e1a977010839619916b4265c54561df0a82" translate="yes" xml:space="preserve">
          <source>SyncEvent::fire &amp;mdash; Fires/sets the event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1facd834188e3f41cabc525b1b9836c55c1691" translate="yes" xml:space="preserve">
          <source>SyncEvent::fire &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a53cf91f5a1cfe4d69cae9ab7dd1516f49c668a" translate="yes" xml:space="preserve">
          <source>SyncEvent::reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d6ace9d5b02f6ef5cacbdffa5d86b3ab4beea7" translate="yes" xml:space="preserve">
          <source>SyncEvent::reset &amp;mdash; Resets a manual event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828a2cc6e557ff5c025b58e4af56dc48f6346d02" translate="yes" xml:space="preserve">
          <source>SyncEvent::reset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300fbdc6a5ccff2ab1377e91807c0e5d10d59395" translate="yes" xml:space="preserve">
          <source>SyncEvent::wait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f0b528c7119b26f8431b5361fa87e403075e99" translate="yes" xml:space="preserve">
          <source>SyncEvent::wait &amp;mdash; Waits for the event to be fired/set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e31645aaf39cfc5affa1c068d686c5d8af79c7" translate="yes" xml:space="preserve">
          <source>SyncEvent::wait &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0ced1adf19cb9910083a003bc5b5651d688973" translate="yes" xml:space="preserve">
          <source>SyncMutex (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d818ddcf47f9511406b454b7e74b1e8718b411f" translate="yes" xml:space="preserve">
          <source>SyncMutex::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f97a6ab803110bc750095120352e74fb31b1563" translate="yes" xml:space="preserve">
          <source>SyncMutex::__construct &amp;mdash; Constructs a new SyncMutex object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f94a31400650128d6e63862560b2de6c02c2c3" translate="yes" xml:space="preserve">
          <source>SyncMutex::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b289f46b939240d81a05c3ab6c6e2a57556e824" translate="yes" xml:space="preserve">
          <source>SyncMutex::lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e4b697619c48d61d2dcf75120bf75adec7d7d8" translate="yes" xml:space="preserve">
          <source>SyncMutex::lock &amp;mdash; Waits for an exclusive lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1e55ef49da9b6147f631cdded5bb2bf2bb932e" translate="yes" xml:space="preserve">
          <source>SyncMutex::lock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b926fc0752748a6ed65587d0792b633be961641" translate="yes" xml:space="preserve">
          <source>SyncMutex::unlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba379385218e53540d59c57960e819493769b6d" translate="yes" xml:space="preserve">
          <source>SyncMutex::unlock &amp;mdash; Unlocks the mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5c32c5ceece3657e06483f6ec17d101b3b2792" translate="yes" xml:space="preserve">
          <source>SyncMutex::unlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501b2a9e6d8161e250d59fc80341a1ef36c09201" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffbbce834ae0f699b2f594fbb97fa9177703f5f" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df75cd0ad7245e5b36579e998c20767fb40af7f" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54df1d6188c89ac760279b50297c15f6f62a3c7e" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::__construct &amp;mdash; Constructs a new SyncReaderWriter object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a828ce1b48ca21d40ef48ce56e4c2f47ae8e42c8" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a9f68da3691c1ef7bc7a8a0ce639debfd52023" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::readlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4805a37b2b2b852694405ed213cdf30bacbbb7d" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::readlock &amp;mdash; Waits for a read lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d421f743365c95a2fa0448616ed29a1331ba155" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::readlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eb9634f104dee9861b72d6302a672a4a417656" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::readunlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcf64fb33961f4133ab4570b959dd6a5b68f6a6" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::readunlock &amp;mdash; Releases a read lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a47007fcc7be0aa62e035ec22c018d950bd9999" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::readunlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4044ab84b1ae1ef99437f90a37364c0e865bf0" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::writelock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b53c05c242e29d34cee50fb8072d8b7669c134" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::writelock &amp;mdash; Waits for an exclusive write lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b22edbc0d5c43caae5a5914d791caf60d512d8" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::writelock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23507444d0676a9970971f0f69ca6eaee33854e3" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::writeunlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9400bf6dc6c8fbceb69455b118eef3fab8847a" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::writeunlock &amp;mdash; Releases a write lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963fdd4ce04f39a53f5f2e4ed326b1842bc8fd2c" translate="yes" xml:space="preserve">
          <source>SyncReaderWriter::writeunlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f93299676b7a2ae7a583a44df37f69c6b923202" translate="yes" xml:space="preserve">
          <source>SyncSemaphore &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e4a9e4b34afdde2bb292958257aae6e5664101" translate="yes" xml:space="preserve">
          <source>SyncSemaphore (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b4d997a8ce2e4b9aac3c62e6c1be81053ede2e" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c935e55f891706ae0f303b6354be475f22bfda6" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::__construct &amp;mdash; Constructs a new SyncSemaphore object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201c84dee916165b46b3ed984cc722b461c22c2a" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9201c21abd4b492bcc5592d3c9b68e2a58f4fe82" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d47ed1eca7b5e898c4693618767063c9ee4d866" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::lock &amp;mdash; Decreases the count of the semaphore or waits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37544a2a7ae96074ded61f96c8b081bafb7bac5d" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::lock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4065bb8433a516480217a506981317f8ffaa3a8e" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::unlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c492269ae99ad7a44be3df07d879554f5a4730" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::unlock &amp;mdash; Increases the count of the semaphore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1b983f57f0d5003cb9c2cbdc4b0ff287f312a2" translate="yes" xml:space="preserve">
          <source>SyncSemaphore::unlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a085bd525200a3f1094a9194293a5c42c340c3" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bb0534541692bc803738cb269ebc01b3000e4e" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def49fd0a6234ff9a2d320a13266183b95e87e1a" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044ba4fd53220c9b5d47ec8d9e031d0fcc0f6a37" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::__construct &amp;mdash; Constructs a new SyncSharedMemory object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae1f94527eb357d8d55f143b571e81d8354935c" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f137d841408b8e02558c554d048703c71e2a7c1" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e9989fcc972c8ad2d1cdf15cf79beb3a608ba1" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::first &amp;mdash; Check to see if the object is the first instance system-wide of named shared memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649543f4b67aa413de9c0cf645b7ef28c4dcdc39" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::first &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca410393027ba5cdff98af09e8fda197e32756c" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eba86c4ccc3b99b372924f7dc8aee326d4430a8" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::read &amp;mdash; Copy data from named shared memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39667914b4b5b438b1055abe6d0d2bafdccd0dc4" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::read &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426b8ee068d820aa425ff72792cf28eccc179eea" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8c145ea0c45d597ae8d3f4510d2e33622ba0c2" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::size &amp;mdash; Returns the size of the named shared memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e9c6ae63b86a129e27d18761d4d5865d727baf" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::size &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ba452b86644944c3776974447714c2ccf1d497" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9c2ffd1fc138226288f56e2e92c089cf896cab" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::write &amp;mdash; Copy data to named shared memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1fb17208dffde4cd11600dbc8b799606517bf5" translate="yes" xml:space="preserve">
          <source>SyncSharedMemory::write &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549781e4606aa6ed053b339f59082483c297e757" translate="yes" xml:space="preserve">
          <source>Synchronization objects (e.g. SyncMutex) are still required to protect most uses of shared memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00945483e4f7b70b7194355782cf7e1bf08dd594" translate="yes" xml:space="preserve">
          <source>Synchronize a file's in-core state with storage device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2722d787bc1d89651414aace3e623fd5101cac3" translate="yes" xml:space="preserve">
          <source>Syncs the pixel iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ce99e15d644e2b6568c4a04b9297a6327e7b69" translate="yes" xml:space="preserve">
          <source>Syntax &quot;index =&amp;gt; values&quot;, separated by commas, define index and values. index may be of type string or integer. When index is omitted, an integer index is automatically generated, starting at 0. If index is an integer, next generated index will be the biggest integer index + 1. Note that when two identical index are defined, the last overwrite the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffba300f08eb28c4f16295006f4137ea8766375" translate="yes" xml:space="preserve">
          <source>Syntax &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5251dc3f40325e4b6c646ccc9b2a351bd76f29e7" translate="yes" xml:space="preserve">
          <source>Syntax error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4515a1d00cfee2f5927823add398bd1e9eb4b1d4" translate="yes" xml:space="preserve">
          <source>System Dependent, typically &lt;em&gt;-2147483648&lt;/em&gt; through &lt;em&gt;2147483647&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8058c7b3acb7b9338005b71dbf427627351eba" translate="yes" xml:space="preserve">
          <source>System identifier for the external entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30240c282fc322438ed9ee1b0f9f0575e236c3b4" translate="yes" xml:space="preserve">
          <source>System identifier of the external notation declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c923d6f6e3288003bd36c27698b36e4a59ac719e" translate="yes" xml:space="preserve">
          <source>System is unusable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa2d11bc9521e64484ddbe122fccece383eb95a" translate="yes" xml:space="preserve">
          <source>System status of the Zip Archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d903e498c3e7cf1d9b2ce5d454140e0333145102" translate="yes" xml:space="preserve">
          <source>System's id for the shared memory block. Can be passed as a decimal or hex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bebd70aa26cdd83912840c2938197bc5f3c8c27" translate="yes" xml:space="preserve">
          <source>T1Lib Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd155c413651c3a7bfc12c1f8341ce66a572fb6" translate="yes" xml:space="preserve">
          <source>T1Lib support was removed from PHP, thus this function was removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cbeb1bb9b72faf26e1b0590f1920b6a47a57d5" translate="yes" xml:space="preserve">
          <source>TABLE_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f3f8b090886acf1f7880b82f3f9c0ec768c886" translate="yes" xml:space="preserve">
          <source>TABLE_OWNER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e41f3f92d8b114686bc75e1b223e24b3ace5754" translate="yes" xml:space="preserve">
          <source>TABLE_QUALIFIER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4989d2e6808b133cdcd8ef9dfcbbed3ced93cb3a" translate="yes" xml:space="preserve">
          <source>TABLE_SCHEM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6665e9c1ca3be298822023d3ad449287e65923" translate="yes" xml:space="preserve">
          <source>TABLE_TYPE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf50b1886b655ee71a4d1e33ff788a5e15edbb1" translate="yes" xml:space="preserve">
          <source>TEXT &quot;string&quot; - match messages with text &quot;string&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613985309005a18c0319233b1c479b23c59812b8" translate="yes" xml:space="preserve">
          <source>THUMBNAIL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a775b64f2cd6a88a198986d46d44e0a021785125" translate="yes" xml:space="preserve">
          <source>TIFF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46316f32c3f5350cdced8e67e9f6ae77cb554fbb" translate="yes" xml:space="preserve">
          <source>TLS client method. See &lt;em&gt;SSL_CTX_new(3)&lt;/em&gt; man page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031630b392ff4235c852f9eac157366edb80f667" translate="yes" xml:space="preserve">
          <source>TLS server method. See &lt;em&gt;SSL_CTX_new(3)&lt;/em&gt; man page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902c30b0e58df4f492e8293323dc1a692c7bc48e" translate="yes" xml:space="preserve">
          <source>TO &quot;string&quot; - match messages with &quot;string&quot; in the To:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272253a12941cdb4182436f5fa43ee0b7d189d3c" translate="yes" xml:space="preserve">
          <source>TRACE method(command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfd7225a60a360de9d1785e30fbb0221310cbd3" translate="yes" xml:space="preserve">
          <source>TXT &lt;code&gt;type&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766ddd600411887fcfafa6751de9b2543d66189e" translate="yes" xml:space="preserve">
          <source>TYPEAPPLICATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71676b5dffc02e2fb8e8dd7f4163f536726196c6" translate="yes" xml:space="preserve">
          <source>TYPEAUDIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6468ee4197ab0d13c121f1f0158198f274a213" translate="yes" xml:space="preserve">
          <source>TYPEIMAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a067464339c9291f4bea9234e0f7e117363baa2" translate="yes" xml:space="preserve">
          <source>TYPEMESSAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5092676b502ce16ef316017d8ef2bab87731160c" translate="yes" xml:space="preserve">
          <source>TYPEMODEL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f47029f13d76d24645032b3979f4654dc9dd1a0" translate="yes" xml:space="preserve">
          <source>TYPEMULTIPART</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d522c4e038658a23f24f2f3f8ac64541aa147d" translate="yes" xml:space="preserve">
          <source>TYPEOTHER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ef8d1f7017a3365a848fa97a1313647732d0a2" translate="yes" xml:space="preserve">
          <source>TYPETEXT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6cc9b9b99229c6feb34efa162d7d1f67a2b87e" translate="yes" xml:space="preserve">
          <source>TYPEVIDEO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecc8dc53a938a63264334c30f4f099359fb0f73" translate="yes" xml:space="preserve">
          <source>TYPE_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4833395c4b49303366bca8590ccfddc6bfbe420" translate="yes" xml:space="preserve">
          <source>Table for HTML 4.01.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d136a8fb9c83911dc1e4efbe1347adc6095c6a1" translate="yes" xml:space="preserve">
          <source>Table for HTML 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf620c019f21e725c217f25ff429cddfe3c6dcbe" translate="yes" xml:space="preserve">
          <source>Table for XHTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a435011c589148246e0f234a4b44b4dca054e1a" translate="yes" xml:space="preserve">
          <source>Table for XML 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad6e3b5ca737a4ab5fb95af81cfb776e11fc9bf" translate="yes" xml:space="preserve">
          <source>Table will contain entities for both double and single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11646ff81d551618131ac53a2a6ed363f682dc7" translate="yes" xml:space="preserve">
          <source>Table will contain entities for double-quotes, but not for single-quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00982ab8fee729c98cfd1b62949cbfd5c0c8bb07" translate="yes" xml:space="preserve">
          <source>Table will neither contain entities for single quotes nor for double quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be707db3f6c31821d0ffd8fda91a478a65773b96" translate="yes" xml:space="preserve">
          <source>Tag names within the input HTML that are greater than 1023 bytes in length will be treated as though they are invalid, regardless of the &lt;code&gt;allowable_tags&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6b48a9eab5fdf40889a6c868ecef785a11aa5c" translate="yes" xml:space="preserve">
          <source>Takes a JSON encoded string and converts it into a PHP variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597d522ad6d11626d97481cc80d46503495b2955" translate="yes" xml:space="preserve">
          <source>Takes a raw or base64 encoded string and decrypts it using a given method and key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e3a846864a68ed16db90051251a4b652ac3210" translate="yes" xml:space="preserve">
          <source>Takes a well-formed XML string and returns it as an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d675112749bed0f37f6f325e0370533dd9da7dae" translate="yes" xml:space="preserve">
          <source>Takes all images from the current image pointer to the end of the image list and smushs them to each other top-to-bottom if the stack parameter is true, otherwise left-to-right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2c0964cd5fba9f44894a9aece94b9383ae17cd" translate="yes" xml:space="preserve">
          <source>Takes an input &lt;code&gt;array&lt;/code&gt; and returns a new array with the order of the elements reversed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ae8b5a9c5b105ff2240d8cb4c7aa6acca93c87" translate="yes" xml:space="preserve">
          <source>Takes an input &lt;code&gt;array&lt;/code&gt; and returns a new array without duplicate values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddc5fbd505088cb325f9b82b51413518a62bbd6" translate="yes" xml:space="preserve">
          <source>Takes the &lt;code&gt;nth&lt;/code&gt; root of &lt;code&gt;a&lt;/code&gt; and returns the integer component and remainder of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f3ad65941ca2f06a17825d073a848bca49f6ff" translate="yes" xml:space="preserve">
          <source>Takes the &lt;code&gt;nth&lt;/code&gt; root of &lt;code&gt;a&lt;/code&gt; and returns the integer component of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00741a8268af1dadf7ec7ec76af7553718de643f" translate="yes" xml:space="preserve">
          <source>Takes the filepointer, &lt;code&gt;handle&lt;/code&gt;, and truncates the file to length, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d497c64102e3560fe20a3ad21c13f1dad9761e48" translate="yes" xml:space="preserve">
          <source>Taking into account the above, the directory then defaults to &lt;em&gt;&amp;lt;install-dir&amp;gt;/lib/php/extensions/ &amp;lt;debug-or-not&amp;gt;-&amp;lt;zts-or-not&amp;gt;-ZEND_MODULE_API_NO&lt;/em&gt;, e.g. &lt;var&gt;/usr/local/php/lib/php/extensions/debug-non-zts-20010901&lt;/var&gt; or &lt;var&gt;/usr/local/php/lib/php/extensions/no-debug-zts-20010901&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9556e4053611fca5c9837ec2607424749b12dc4" translate="yes" xml:space="preserve">
          <source>Target buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfad27bf65aabae1d9a073adc54e65c3683348d" translate="yes" xml:space="preserve">
          <source>Target file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2da4e7c64f12b4b2d6d913966cbb1496be497c" translate="yes" xml:space="preserve">
          <source>Target of the link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b548ff214b99296395863d2d2220227958d361" translate="yes" xml:space="preserve">
          <source>Target of the symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682d664264029e5c77d87b607190a9b2b3907412" translate="yes" xml:space="preserve">
          <source>Target path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d1784820ed5baa3b6bbd7990396e24b7bce3fc" translate="yes" xml:space="preserve">
          <source>Target stream, Socket resource, or numeric file descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa6b73dc1f1c42eb0b11762173d048e2b0ff73b" translate="yes" xml:space="preserve">
          <source>Task (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151a4b96dd348ee43f4fa432e3ee05a3868e96f8" translate="yes" xml:space="preserve">
          <source>Task::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0af2bc9a59e5da3489c72dd4d69eea2467a8947" translate="yes" xml:space="preserve">
          <source>Task::create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb10efe673766882e9f21f14a550c5d7a7d41c7f" translate="yes" xml:space="preserve">
          <source>Task::data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f48f73e33cbb246822bff0bb6097bce243be12" translate="yes" xml:space="preserve">
          <source>Task::dataSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fededc2a9950f81c71a3647a68673aee325c9ab" translate="yes" xml:space="preserve">
          <source>Task::function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939a3fb36b643f7b8f5b2eb5cf8cbb77e8101399" translate="yes" xml:space="preserve">
          <source>Task::functionName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd03233353c5cab088fc516a76e1e512a067d5e8" translate="yes" xml:space="preserve">
          <source>Task::isKnown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a034310ac6d803a0f983c60f6af1562935e7c53" translate="yes" xml:space="preserve">
          <source>Task::isRunning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b05030b8cc68b28b6e01ef162528545cf0e89a" translate="yes" xml:space="preserve">
          <source>Task::jobHandle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338fc8d4b177232482ecbf5c53c6b202928ed45" translate="yes" xml:space="preserve">
          <source>Task::recvData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d7ee9be052f1e7e7c8daf624353a2219899a7c" translate="yes" xml:space="preserve">
          <source>Task::returnCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653e4f6feceedf9b8d68fc498b8dd3f804b2f28a" translate="yes" xml:space="preserve">
          <source>Task::sendData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613bd9dec1f21fabf7a99c19a1e107e9c65060c8" translate="yes" xml:space="preserve">
          <source>Task::sendWorkload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c2c27c11620931567c430934f83da45293bdea" translate="yes" xml:space="preserve">
          <source>Task::taskDenominator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b70ecd61add6dcf9bd5aac5a34841c92c2505c" translate="yes" xml:space="preserve">
          <source>Task::taskNumerator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f871b02bcddeaf522be1bc26f7ad9ddfe5488d7c" translate="yes" xml:space="preserve">
          <source>Task::unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc0f23e82958a2ef4e5f9cfdec93ea2fd46c356" translate="yes" xml:space="preserve">
          <source>Task::uuid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b820b2f1437a5d6cd99aeba7ab687f81ef5b1985" translate="yes" xml:space="preserve">
          <source>Tell curl which method to use to reach a file on a FTP(S) server. Possible values are &lt;strong&gt;&lt;code&gt;CURLFTPMETHOD_MULTICWD&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLFTPMETHOD_NOCWD&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLFTPMETHOD_SINGLECWD&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53aae21224797fd55278adb22709257942d07291" translate="yes" xml:space="preserve">
          <source>Tell if a Worker is executing Stackables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d7fe15063c1415c17bf53c0cd68daa31691db7" translate="yes" xml:space="preserve">
          <source>Tell if the referenced Thread has been joined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08975b0f151bf501da3b3c5324ec37085c4b994" translate="yes" xml:space="preserve">
          <source>Tell if the referenced Thread was started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f49265d49dd5ee50b1e74c8ad462c26f31402cd" translate="yes" xml:space="preserve">
          <source>Tell if the referenced object is executing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cdd049b5797cfe92f3b333e4e0728577d59f11" translate="yes" xml:space="preserve">
          <source>Tell if the referenced object is waiting for notification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ef3328787b48354aeb2889fc7f9f3d0814e7f1" translate="yes" xml:space="preserve">
          <source>Tell if the referenced object was terminated during execution; suffered fatal errors, or threw uncaught exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0abd71a785a4d7af04a420b72bd5948b3b4ef8" translate="yes" xml:space="preserve">
          <source>Tells a bufferevent to begin SSL renegotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c4e912ea4da4d3a323f361cab72c4449f55e79" translate="yes" xml:space="preserve">
          <source>Tells event base to stop optionally after given number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14522380f1c46f8516233d5a42226838a621c5b4" translate="yes" xml:space="preserve">
          <source>Tells event_base to stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daf45297a4ea44dfe0d83c1de4112d2a54537a4" translate="yes" xml:space="preserve">
          <source>Tells if the document is a XHTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1feac3d0c992688cd0e6e057a01e3d1740ce00df" translate="yes" xml:space="preserve">
          <source>Tells if the document is a generic (non HTML/XHTML) XML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b43cff3f85cb82aa2cc13594dfacb27a4bb0b1" translate="yes" xml:space="preserve">
          <source>Tells if the node has children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a629ff7bac1e5dbc724019cfbeab0db034aaf431" translate="yes" xml:space="preserve">
          <source>Tells if the node has siblings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5fc6add5867b60ec00bead1552f460457085b2" translate="yes" xml:space="preserve">
          <source>Tells if the node is JSTE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4846ff3d69fe45128827023321e0496f13770fe" translate="yes" xml:space="preserve">
          <source>Tells if the node is PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9a6799ba43030bb42e996550abfa2beba91299" translate="yes" xml:space="preserve">
          <source>Tells if the node is a comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b8d2e6ff7a9a13ea7e05c063a40505cabeb4c6" translate="yes" xml:space="preserve">
          <source>Tells if the node is part of HTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1676d62a925842a1a05ef63a04fed120bb4a0e4e" translate="yes" xml:space="preserve">
          <source>Tells if the node represents a text (without any markup).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c871ed33b8cf6d68b69cd154814b55f354c7885" translate="yes" xml:space="preserve">
          <source>Tells libevent to avoid specific event method(backend). See &lt;a href=&quot;http://www.wangafu.net/~nickm/libevent-book/Ref2_eventbase.html#_creating_an_event_base&quot;&gt;&amp;raquo; Creating an event base&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de996a88f774cdcf88a449b19dc173db6a41604" translate="yes" xml:space="preserve">
          <source>Tells to learn as much as it can from the &lt;em&gt;resolv.conf&lt;/em&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcf4064cdd8fd07d8793bdefae4ae58a0f739d6" translate="yes" xml:space="preserve">
          <source>Tells to learn the nameservers from the &lt;em&gt;resolv.conf&lt;/em&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804a53f8fd66e01fe4d5bd1c3f9da97409e13b12" translate="yes" xml:space="preserve">
          <source>Tells to read a list of hosts from &lt;em&gt;/etc/hosts&lt;/em&gt; as part of loading the &lt;em&gt;resolv.conf&lt;/em&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22eeb8087bb4046e6caf023111cd07844794d6c" translate="yes" xml:space="preserve">
          <source>Tells to read the domain and search fields from the &lt;em&gt;resolv.conf&lt;/em&gt; file and the &lt;em&gt;ndots&lt;/em&gt; option, and use them to decide which domains(if any) to search for hostnames that aren&amp;rsquo;t fully-qualified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db55b94bab0148ea0a080d0b06378502b90a77c" translate="yes" xml:space="preserve">
          <source>Tells whether &lt;code&gt;namespaceURI&lt;/code&gt; is the default namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75072e4cbbffe4386cd430e46e0a47d6d68503c" translate="yes" xml:space="preserve">
          <source>Tells whether a file exists and is readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7474ecadd4f122ee305bbdb34583c757e7a4c0eb" translate="yes" xml:space="preserve">
          <source>Tells whether the algorithm of the opened mode is a block algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f9dffe394f1417c2d7cad7d7e102a9ced4ffe8" translate="yes" xml:space="preserve">
          <source>Tells whether the algorithm of the opened mode works on blocks (e.g. &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for stream, and &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for cbc, cfb, ofb)..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c700c44f44b1b010b2d0cd12a782907cbff1d739" translate="yes" xml:space="preserve">
          <source>Tells whether the client library is compiled as thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a42ca64d1ad42b46e9d43304a2ff3cdb80df5e6" translate="yes" xml:space="preserve">
          <source>Tells whether the current node is ASP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84f8b5fb053bdfd4ea67e14b5b836bf457c0196" translate="yes" xml:space="preserve">
          <source>Tells whether the filename is executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7f047724281a4ce00ec93030a0b9fd3e15cb95" translate="yes" xml:space="preserve">
          <source>Tells whether the given file is a regular file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515815b720c38bc0b6c8e2e1f80a16dc06a22fe9" translate="yes" xml:space="preserve">
          <source>Tells whether the given file is a symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb58c3e9b37e9914ffee5462ad7554352352080" translate="yes" xml:space="preserve">
          <source>Tells whether the given filename is a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952aeb1364a21ea25a3bd139d950fe4731ba26d8" translate="yes" xml:space="preserve">
          <source>Tells whether the opened mode outputs blocks (e.g. &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for cbc and ecb, and &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for cfb and stream).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2877141d5179df164ebde9437931583a068c85" translate="yes" xml:space="preserve">
          <source>Tells whether the stream supports locking through &lt;a href=&quot;function.flock&quot;&gt;flock()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbd7fb4357ddbfc633184fa77e4f6f1090354fa" translate="yes" xml:space="preserve">
          <source>Temporarily binds the closure to &lt;code&gt;newthis&lt;/code&gt;, and calls it with any given parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2593a517fc065182616c52dc7b073d21d6e8ddfb" translate="yes" xml:space="preserve">
          <source>Terminates a clip path definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c394f93f0f6b6eb46e25d5242ce2140bb1cb1739" translate="yes" xml:space="preserve">
          <source>Terminates a definition list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7334b5f635a7f6950d33dee4b587eb25f2ce09" translate="yes" xml:space="preserve">
          <source>Terminates a pattern definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75e5ba2267f41c883e47b4d54b40727d0c68eee" translate="yes" xml:space="preserve">
          <source>Terminates execution of the script. &lt;a href=&quot;function.register-shutdown-function&quot;&gt;Shutdown functions&lt;/a&gt; and &lt;a href=&quot;language.oop5.decon#language.oop5.decon.destructor&quot;&gt;object destructors&lt;/a&gt; will always be executed even if &lt;em&gt;exit&lt;/em&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4078a7530f77ca768367e47339b301c17e853d" translate="yes" xml:space="preserve">
          <source>Terminates the current path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40735bc727ae1db7f555635000520d9343037f8c" translate="yes" xml:space="preserve">
          <source>Ternary Operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e422c0734bf4ac38a2b009533cbfd67ce5c315" translate="yes" xml:space="preserve">
          <source>Test if the DOM implementation implements a specific &lt;code&gt;feature&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d70d4c917016dd89d0c01881110e9da1b74a53" translate="yes" xml:space="preserve">
          <source>Tests for end-of-file on a file pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89558729212fc31c378a8f93b1ff4caf255dc09" translate="yes" xml:space="preserve">
          <source>Tests if the specified bit is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440df3d97e67a83255e74d194f31eb0103d65ad8" translate="yes" xml:space="preserve">
          <source>Tests the given GZ file pointer for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04b3ef190aaaade2fffa622a5241f290e3bbe3e" translate="yes" xml:space="preserve">
          <source>Text Processing &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd522740c36c70a915597c0866813a1ebf7573a3" translate="yes" xml:space="preserve">
          <source>Text decoration. One of NoDecoration, UnderlineDecoration, OverlineDecoration, or LineThroughDecoration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c29e36e1bb0918167ea45d325ac3481b8778f03" translate="yes" xml:space="preserve">
          <source>Text for the attribute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022175a2bc4119a272c1e3b28be7e1a6d532a96a" translate="yes" xml:space="preserve">
          <source>Text for the symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b106e97a2507b805f16d4dc423a87b87b541fe" translate="yes" xml:space="preserve">
          <source>Text node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc9f88633201f9fdfdd2c55c72bf389aae6fa3b" translate="yes" xml:space="preserve">
          <source>Text pointsize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504476e168f9af28a029ea6e14307bf27f271106" translate="yes" xml:space="preserve">
          <source>Text to be inserted into image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa01a0cc409adcb4ed46f73f43ea697aa7f47b7c" translate="yes" xml:space="preserve">
          <source>Thanks to the reference-counting system being part of Zend Engine, a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; with no more references to it is detected automatically, and it is freed by the garbage collector. For this reason, it is rarely necessary to free the memory manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41da773979b7392321d8db69943a20c7ad99671a" translate="yes" xml:space="preserve">
          <source>That is, after instanciating an &lt;strong&gt;EvTimer&lt;/strong&gt; with an &lt;code&gt;after&lt;/code&gt; value of &lt;strong&gt;&lt;code&gt;5.0&lt;/code&gt;&lt;/strong&gt; and &lt;code&gt;repeat&lt;/code&gt; value of &lt;strong&gt;&lt;code&gt;7.0&lt;/code&gt;&lt;/strong&gt; , &lt;var&gt;&lt;var&gt;remaining&lt;/var&gt;&lt;/var&gt; returns &lt;strong&gt;&lt;code&gt;5.0&lt;/code&gt;&lt;/strong&gt; . When the timer is started and one second passes, &lt;var&gt;&lt;var&gt;remaining&lt;/var&gt;&lt;/var&gt; will return &lt;strong&gt;&lt;code&gt;4.0&lt;/code&gt;&lt;/strong&gt; . When the timer expires and is restarted, it will return roughly &lt;strong&gt;&lt;code&gt;7.0&lt;/code&gt;&lt;/strong&gt; (likely slightly less as callback invocation takes some time too), and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790f37ca43e0a28efe7d6a5d81c76fccb28cc025" translate="yes" xml:space="preserve">
          <source>That means that calling an &lt;a href=&quot;functions.anonymous&quot;&gt;anonymous function&lt;/a&gt; which has been assigned to a property is not directly possible. Instead the property has to be assigned to a variable first, for instance. As of PHP 7.0.0 it is possible to call such a property directly by enclosing it in parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670c1427cec267605c1c350d9f00bf6e6baf443c" translate="yes" xml:space="preserve">
          <source>That will create two separate cookies although &lt;var&gt;&lt;var&gt;MyCookie&lt;/var&gt;&lt;/var&gt; will now be a single array in your script. If you want to set just one cookie with multiple values, consider using &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt; or &lt;a href=&quot;function.explode&quot;&gt;explode()&lt;/a&gt; on the value first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede3c4280a51a1555ff044840ca26aa9e5c31da8" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;em&gt;filehits&lt;/em&gt;&quot; option for the &lt;code&gt;cache_type&lt;/code&gt; parameter was introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d456ec621a3253c45f18ad1187db149e6b1ee5bf" translate="yes" xml:space="preserve">
          <source>The &quot;A&quot; code now strips all trailing ASCII whitespace (spaces, tabs, newlines, carriage returns, and NULL bytes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dacf3b762fabc46f734f2e28d9dbbce3f35bcd" translate="yes" xml:space="preserve">
          <source>The &quot;Loaded Configuration File&quot; information was added, when before only &quot;Configuration File (php.ini) Path&quot; existed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb794781a89e42ea14224619edea5deb06f96113" translate="yes" xml:space="preserve">
          <source>The &quot;Z&quot; code was added for NULL-padded strings, and removes trailing NULL bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c04e4b4d21d1314bba79d9c5f227dd36bd6cf0" translate="yes" xml:space="preserve">
          <source>The &quot;Z&quot; code was added with equivalent functionality to &quot;a&quot; for Perl compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d73a68dd286490387ceabf0653cd659d924adfa" translate="yes" xml:space="preserve">
          <source>The &quot;a&quot; code now retains trailing NULL bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb29acb64a6bfba839f533573fc74764ebbb36c" translate="yes" xml:space="preserve">
          <source>The &quot;age&quot; is the Unicode version when the code point was first designated (as a non-character or for Private Use) or assigned a character. This can be useful to avoid emitting code points to receiving processes that do not accept newer characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142e2cb43811c97d55fa09872efdd08c2d125b7e" translate="yes" xml:space="preserve">
          <source>The &quot;distance&quot; between the desired color and each color in the palette is calculated as if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0a6efbb1ebd59590cc74f3b4d5fbbe65934c00" translate="yes" xml:space="preserve">
          <source>The &quot;e&quot;, &quot;E&quot;, &quot;g&quot; and &quot;G&quot; codes were added to enable byte order support for float and double.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3b628254ace55082f96e945e5283e117493ea9" translate="yes" xml:space="preserve">
          <source>The &quot;httponly&quot; entry was added in the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fd3db459cd4b61378cd1cdf978f6cd668a6a85" translate="yes" xml:space="preserve">
          <source>The &quot;one-line&quot; comment styles only comment to the end of the line or the current block of PHP code, whichever comes first. This means that HTML code after &lt;em&gt;// ... ?&amp;gt;&lt;/em&gt; or &lt;em&gt;# ... ?&amp;gt;&lt;/em&gt; WILL be printed: ?&amp;gt; breaks out of PHP mode and returns to HTML mode, and &lt;em&gt;//&lt;/em&gt; or &lt;em&gt;#&lt;/em&gt; cannot influence that. If the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.asp-tags&quot;&gt;asp_tags&lt;/a&gt; configuration directive is enabled, it behaves the same with &lt;em&gt;// %&amp;gt;&lt;/em&gt; and &lt;em&gt;# %&amp;gt;&lt;/em&gt;. However, the &lt;em&gt;&amp;lt;/script&amp;gt;&lt;/em&gt; tag doesn't break out of PHP mode in a one-line comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51336059ff81386df47c71539c4249f316de9b75" translate="yes" xml:space="preserve">
          <source>The &quot;q&quot;, &quot;Q&quot;, &quot;J&quot; and &quot;P&quot; codes were added to enable working with 64-bit numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec9d60748d2fd15da12504bdae5331569097256" translate="yes" xml:space="preserve">
          <source>The &quot;whitespace&quot; characters are HT (9), LF (10), FF (12), CR (13), and space (32). However, if locale-specific matching is happening, characters with code points in the range 128-255 may also be considered as whitespace characters, for instance, NBSP (A0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c9f118d61a36b646fb9e4a56f7eedcf87544f9" translate="yes" xml:space="preserve">
          <source>The &quot;write&quot; handler is not executed until after the output stream is closed. Thus, output from debugging statements in the &quot;write&quot; handler will never be seen in the browser. If debugging output is necessary, it is suggested that the debug output be written to a file instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240868481c9651a4f22a74bbaa5d10f6528a2994" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;bound object&amp;rdquo; determines the value &lt;em&gt;$this&lt;/em&gt; will have in the function body and the &amp;ldquo;class scope&amp;rdquo; represents a class which determines which private and protected members the anonymous function will be able to access. Namely, the members that will be visible are the same as if the anonymous function were a method of the class given as value of the &lt;code&gt;newscope&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c98ff94b0178b0e35d93507dffc3d8606ee1c9" translate="yes" xml:space="preserve">
          <source>The 'variant' and 'private' subtags can take maximum 15 values whereas 'extlang' can take maximum 3 values.e.g. Variants are allowed with the suffix ranging from 0-14. Hence the keys for the input array can be variant0, variant1, ...,variant14. In the returned locale id, the subtag is ordered by suffix resulting in variant0 followed by variant1 followed by variant2 and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa7a33a5960bfbd8c7543f3ae1db707736d6b4" translate="yes" xml:space="preserve">
          <source>The 'variant', 'private' and 'extlang' multiple values can be specified both as array under specific key (e.g. 'variant') and as multiple numbered keys (e.g. 'variant0', 'variant1', etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682a65c49fa4766014e7e6ae332e8d5d5e522eef" translate="yes" xml:space="preserve">
          <source>The (?J) internal option setting changes the local &lt;em&gt;PCRE_DUPNAMES&lt;/em&gt; option. Allow duplicate names for subpatterns. As of PHP 7.2.0 &lt;em&gt;J&lt;/em&gt; is supported as modifier as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025ff3da436f0bc6ed9c70d9cfef9f1014b334f7" translate="yes" xml:space="preserve">
          <source>The (signed) amount to add to the field, &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for rolling up (adding &lt;em&gt;1&lt;/em&gt;), or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for rolling down (subtracting &lt;em&gt;1&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092e4fb43332f60093df3bab54c32d2bfb63f191" translate="yes" xml:space="preserve">
          <source>The (sub)domain that the cookie is available to. Setting this to a subdomain (such as &lt;em&gt;'www.example.com'&lt;/em&gt;) will make the cookie available to that subdomain and all other sub-domains of it (i.e. w2.www.example.com). To make the cookie available to the whole domain (including all subdomains of it), simply set the value to the domain name (&lt;em&gt;'example.com'&lt;/em&gt;, in this case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bf9763b8dc09562d7beea3a45a79e3b9ee7d7a" translate="yes" xml:space="preserve">
          <source>The (unset) cast has been deprecated as of PHP 7.2.0. Note that the (unset) cast is the same as assigning the value &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; to the variable or call. The (unset) cast will be removed as of PHP 8.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c63f5a29d32c48d815d9e8b862688450538cbe" translate="yes" xml:space="preserve">
          <source>The + &lt;code&gt;format&lt;/code&gt; specifier has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e791aa68ab53ccb56ba5446a5ccc49baf329af7d" translate="yes" xml:space="preserve">
          <source>The 0-indexed column in the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc9f4ba45b53e8311303e1898374420f75a05cb" translate="yes" xml:space="preserve">
          <source>The 2-legged flow, or request signing. It does not require a token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51923b47e119e3eb83383d12407dd3ff18ea5f23" translate="yes" xml:space="preserve">
          <source>The 3-letter ISO 4217 currency code indicating the currency to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9e8d3737c5fb22bc53bc719063784162d3df85" translate="yes" xml:space="preserve">
          <source>The 8bit string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84569eb2c1c622682778bca388d30382612b7ad" translate="yes" xml:space="preserve">
          <source>The 8bit string to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06902209d888188b0f753ddb7c08ecdc23b7f80f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;arrayobject.setiteratorclass&quot;&gt;ArrayObject::setIteratorClass&lt;/a&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a970ec00326aec8cb96865dbd5f39b3c8b00dd73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c147c1ecd66b58ee3abe2c57c8b41ead80c8eb72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.cond&quot;&gt;Cond&lt;/a&gt; class has been removed in pthreads v3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a81d1e576214f45f63affae963d2460f5fce939" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; interface is implemented and returns the value of the &lt;a href=&quot;class.domnodelist#domnodelist.props.length&quot;&gt;length&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e49555cfd4a4f63f3494b2577d358352e072bd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; object representing the difference between the two dates or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787cd2ffdd9e1530945fb2fd74662a0f0d614bae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.datetimezone&quot;&gt;DateTimeZone&lt;/a&gt; for which to get a name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1016bb62ca9e8554d60c0ec6aeaaf8d917c26faa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; associated with the &lt;a href=&quot;class.domxpath&quot;&gt;DOMXPath&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145dcd72ae11b89f3919d73da2c5439cefeaf06a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; object associated with this node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235af39b54d074857cefb42f75862ead25017990" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; or &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; object to be transformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5846a4943af8ae46b764b3c8bf8c56fdd80df0f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.domelement&quot;&gt;DOMElement&lt;/a&gt; node added or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if any errors occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b1a44b7ebe0f2984f085e5fb498382bcb42f94" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.domimplementation&quot;&gt;DOMImplementation&lt;/a&gt; object that handles this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966d30f9c0bb8d6036e7b7d995fdeef554aed136" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.eventlistener&quot;&gt;EventListener&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7192d9918f0dd20bf7fe84873830f18759b763b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt; was introduced as the parent class. Previously, the parent was the &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a47ac3e5c1d59a8d8672799625980259519af1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74522bcb3ed18e8d7bab180f735cfd8e86e9c74b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.gmagickdraw&quot;&gt;GmagickDraw&lt;/a&gt; object on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec20edf60b9e2a9a520fb70b2055e4da32b8ac84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.gmagickpixel&quot;&gt;GmagickPixel&lt;/a&gt; fill color used for drawing filled objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaf20fdd6035d5ec2cd21c38416aea4c9a4ef0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;calendar type&lt;/a&gt; being used by the formatter. Either &lt;strong&gt;&lt;code&gt;IntlDateFormatter::TRADITIONAL&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dd2ea43997dfd1f4c7ade29c3f0ce0ec04477e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; to limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0099f0a62172f08a3479c68b7916ffb36fc4f5bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;&lt;a href=&quot;language.oop5.interfaces&quot;&gt;interface&lt;/a&gt; can be used as an alternative to implementing all of the &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; methods. &lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt; only requires the implementation of a single method, &lt;a href=&quot;iteratoraggregate.getiterator&quot;&gt;IteratorAggregate::getIterator()&lt;/a&gt;, which should return an instance of a class implementing &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29171b3c23da312f8d9dea576e2bbd9b725a84d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; Array to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dd0297e1acc58c6fef0b1754808da93fff9d6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.mutex&quot;&gt;Mutex&lt;/a&gt; class has been removed in pthreads v3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fd0720a75fbe07023ac69f69657792eefc764f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.types&quot;&gt; formatting type&lt;/a&gt; to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8beb6e84b2ade68f9d5b21ff7e9ac898ca3c648" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.types&quot;&gt; formatting type&lt;/a&gt; to use. By default, &lt;strong&gt;&lt;code&gt;NumberFormatter::TYPE_DOUBLE&lt;/code&gt;&lt;/strong&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4683f6e335a7e91d3ff2c2206aee8282e9e7d38f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.oauthexception&quot;&gt;OAuthException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310622972da1485235de3475d61bec3b33063014" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.parentiterator&quot;&gt;ParentIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5060481942377ca683fd0cc8f22bc083c97d8e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.recursivecachingiterator&quot;&gt;RecursiveCachingIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f9b600077b4230728066e20c421b8b55f758de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; or &lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt; to iterate over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4060a5ce7e9654fe1206cd8f52375c96c7c8def" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; to be filtered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd53c652a5f4b1c1792e26932a9b7e6c13c45328" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53480d4a11a5d23b1e1f868ddf837c5f2d34ae1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver&lt;/a&gt; to attach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7027d9dcc2be2425c14157e715642dc90cd05762" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver&lt;/a&gt; to detach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0279471ed4d12e684ad20d000c2fdf5bc826e6aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.splsubject&quot;&gt;SplSubject&lt;/a&gt; notifying the observer of an update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d91846ea85abce2732f5c286304e0da80619e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.streamwrapper&quot;&gt;streamWrapper&lt;/a&gt; prototype class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48935b702c90a36332a67245aea961caae156e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.tidy&quot;&gt;Tidy&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a377bb7483a1a3fd5710d966ae036f17e6f10a9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.weakref&quot;&gt;Weakref&lt;/a&gt; instance maintains an internal acquired counter to track outstanding strong references. If the call to &lt;strong&gt;Weakref::acquire()&lt;/strong&gt; is successful, this counter will be incremented by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1366621eda1c3ccc713447dcd0ff67bdac4f98e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;class.weakref&quot;&gt;Weakref&lt;/a&gt; instance maintains an internal acquired counter to track outstanding strong references. If the call to &lt;strong&gt;Weakref::release()&lt;/strong&gt; is successful, this counter will be decremented by one. Once this counter reaches zero, the strong reference is turned back into a weak reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a981a42f0c776ac9f155d1865f38c129e3a15ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; control structure exists specifically for &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;s. It provides an easy way to traverse an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3993bf7f89784df4f7698504a01b90b1959a07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;evchild.createstopped&quot;&gt;EvChild::createStopped()&lt;/a&gt; method doesn't start(activate) the newly created watcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107905127685d1009e6e53deaf6e01e3b411f1fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.addslashes&quot;&gt;addslashes()&lt;/a&gt; function is run on each matched backreference before the substitution takes place. As such, when the backreference is used as a quoted string, escaped characters will be converted to literals. However, characters which are escaped, which would normally not be converted, will retain their slashes. This makes use of this modifier very complicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0846d180ad2279b080f1357442d99402db95de6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.assert-options&quot;&gt;assert_options()&lt;/a&gt; function and/or &lt;strong&gt;&lt;code&gt;ASSERT_CALLBACK&lt;/code&gt;&lt;/strong&gt; configuration directive allow a callback function to be set to handle failed assertions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162c476aaa7474e9d9ba317c1e7fec11305f37ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.crc32&quot;&gt;crc32()&lt;/a&gt; checksum of the file within the Phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83e6871ed05c0615b6d21c9a5138bb2d034b8a9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.preg-quote&quot;&gt;preg_quote()&lt;/a&gt; function may be used to escape a string for injection into a pattern and its optional second parameter may be used to specify the delimiter to be escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e861772a0aceba669ba2a565fbc2614070e4fc79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.proc-open&quot;&gt;proc_open()&lt;/a&gt;&lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; that will be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85a0bfaa1040f2da55065f133c6fcf286784c72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.proc-open&quot;&gt;proc_open()&lt;/a&gt;&lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; that will be evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdc923aaa07e408db5e1986218621c2e453f623" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.register-shutdown-function&quot;&gt;register_shutdown_function()&lt;/a&gt; - Register a function for execution on shutdown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84488df003bf997cb581fa1a2190cca18969389e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown()&lt;/a&gt; - Session shutdown function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5ddfaa8ab406c9f784b2f564844bcc02393875" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown()&lt;/a&gt; - Session shutdown function for PHP 5.4.0+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f0ec7755b66ab9818fb3a2c73048ebb7609eff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;function.unset&quot;&gt;unset()&lt;/a&gt; function allows removing keys from an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;. Be aware that the array will &lt;em&gt;not&lt;/em&gt; be reindexed. If a true &quot;remove and shift&quot; behavior is desired, the &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; can be reindexed using the &lt;a href=&quot;function.array-values&quot;&gt;array_values()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1555cc68715101d0383bc0c1878e9ff647fc882" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.icu-project.org/&quot;&gt;&amp;raquo; ICU&lt;/a&gt; Collation Service supports many levels of comparison (named &quot;Levels&quot;, but also known as &quot;Strengths&quot;). Having these categories enables ICU to sort strings precisely according to local conventions. However, by allowing the levels to be selectively employed, searching for a string in text can be performed with various matching conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4686c4f9690933c99c5f2dd7b605212799c58434" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/array.sorting.php&quot;&gt;comparison of array sorting functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceca60377767fc0aecdaa73e4477cdb99160834d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;display_errors&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20401ce1c77b6529148dfbb684d7f2351fa7984" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.html-errors&quot;&gt;html_errors&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b66ef64f166f73716419afb705d0d029ef6a9d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.xmlrpc-errors&quot;&gt;xmlrpc_errors&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a84abe548be6f0aaa2c6d07a827f5a9239780e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;error level constants&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba95f8f54c584bdbd9a3a296efe475a886ef4289" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.channel&quot;&gt;Channeltype&lt;/a&gt; constant. When not supplied, all channels are blurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe987136c3a7d20780c998f2db80b12c457a90cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.channel&quot;&gt;Channeltype&lt;/a&gt; constant. When not supplied, default channels are replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c469797fb078028533c772631818caba8c3ffef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc&quot;&gt;magic_quotes_gpc&lt;/a&gt; setting affects the output of this function, as &lt;strong&gt;parse_str()&lt;/strong&gt; uses the same mechanism that PHP uses to populate the &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.get&quot;&gt;$_GET&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.post&quot;&gt;$_POST&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;, etc. variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e8389c7dcbf4efbab1f7a37d4fad5f0494bff1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.realpath-cache-size&quot;&gt;realpath_cache_size&lt;/a&gt; configuration option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e829ca655a63e2b194f353e7df28d55e63605ceb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a82d7f2ae9375b3c237afc9f9452b682a42b17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/intro.spl.php&quot;&gt;Standard PHP Library (SPL)&lt;/a&gt; provides a good number of &lt;a href=&quot;https://secure.php.net/manual/en/spl.exceptions.php&quot;&gt;built-in exceptions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a8b1bc7b1a1421918e79b82df3b3fad7cf706d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/mbstring.configuration.php#ini.mbstring.http-input&quot;&gt;mbstring.http_input&lt;/a&gt; setting is something other than &lt;em&gt;pass&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754d0777598a85687128f0efb4206a71f6140538" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/posix.constants.setrlimit.php&quot;&gt;resource limit constant&lt;/a&gt; corresponding to the limit that is being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b498d8ff0d86c8a7598de08b425437fafc016bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/ref.curl.php&quot;&gt;Curl extension&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926c8f5dd355e837b414485492678be4a8360726" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/ref.mcrypt.php&quot;&gt;Mcrypt&lt;/a&gt; extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17552c459150867801a14a756f4e7a850fcc7ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.auto-start&quot;&gt;session.auto-start&lt;/a&gt; configuration directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792a730a44cd5f05c51ef6b77a75e544fdceaeda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.auto-start&quot;&gt;session.auto_start&lt;/a&gt; configuration directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a091e3a06534b4f44067d07d4fac106ca8c0a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.name&quot;&gt;session.name&lt;/a&gt; configuration directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cc01648f858e22e9b0ba710c6d0ee0c0fdf0ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; configuration directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05eb61ae0b9ae65ed2cdf021e5dbd8608b6c8fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-path&quot;&gt;session.save_path&lt;/a&gt; configuration directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b18f018a1932e5c4469fca5666047aedd270f5b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt; configuration directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fe46ca4cc2c3cf2d7b591cf2821f77afdda790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://secure.php.net/manual/en/zlib.configuration.php#ini.zlib.output-compression&quot;&gt;zlib.output_compression&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfabf0ca203024ace94b1fef66e0d817e1af047" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt; operator returns a reference automatically, so assigning the result of &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt; by reference results in an &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; message in PHP 5.3 and later, and an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; message in earlier versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ba9e0ca8163f8e8fbf98b90bc94e2f095312d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke()&lt;/a&gt; method is called when a script tries to call an object as a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccfef5e0c450aa4dbdf04f8bd8524fc3c6260b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc880ef6c110f4c537554f51c18ee5b8fdbab83d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString()&lt;/a&gt; magic method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f29784dd8a7ce4cd672d796f7deb047dfa0c993" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString()&lt;/a&gt; method allows a class to decide how it will react when it is treated like a string. For example, what &lt;em&gt;echo $obj;&lt;/em&gt; will print. This method must return a string, as otherwise a fatal &lt;strong&gt;&lt;code&gt;E_RECOVERABLE_ERROR&lt;/code&gt;&lt;/strong&gt; level error is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e134c16cb4f241f350b17cd9ee882b6a358b9826" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb6d84fbfd0cc895a77684b73fba657e961c088" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.operators.execution&quot;&gt;backtick operator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c28f192de7afaf6fbfa3f926de4ecdbe66bbf7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; being affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1721e6c201e8b1b32cd3240bfb058eafd38e8add" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; containing the list of all variants subtag for the locale or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if not present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b200f8a8bffea920f9eff1e812f50a547951b7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of SOAP function prototypes, detailing the return type, the function name and type-hinted parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c929f1e49749e74f94f2d534ff05aaf5d805c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of SOAP types, detailing all structures and types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743f94614b1d14335b6c096347ef733df29a2f14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of values to insert into the format &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb75e2d9673dc33b21a29ecccf64919e599b9c8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd389e3fa4eed38ba514fb08d532734f317558a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; value of &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370155a896c05892c896e5fd8b2eca2700c51090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; functions name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed55aaeb53244e7127842f0c8fc62ae64a24428" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; to be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cc6b748bfb6bd0553eb74607cabc96b7ee5944" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; codepoint value (e.g. &lt;em&gt;0x2603&lt;/em&gt; for &lt;em&gt;U+2603 SNOWMAN&lt;/em&gt;), or the character encoded as a UTF-8 &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; (e.g. &lt;em&gt;&quot;\u{2603}&quot;&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50936c1f11fd652d65e26a284f9d147466e266f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; value of &lt;code&gt;gmpnumber&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57758ca3cac9ad2bd172c4823cb7915f324cc2a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.null#language.types.null.syntax&quot;&gt;&lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378315c889841da9b9cc8e90e2e94afa38e67cdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; at the current iterator position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea914640ac2bea05084d6f5aae7c3a9d355197d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; that &lt;code&gt;method_name&lt;/code&gt; is being called on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c731fd44a5bd446871ae52dc7769e9661aa271" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03ebd2cf174e64658d28d4a3ee66922c1a3c2e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; to associate data with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb767c16fa0ac75d0a706670b6a8ba2eac9674f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; to bind the closure to for the duration of the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50178818065c9d38425c9b824a3af9c6c92d407c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; to look for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3251a4253c54f83cc8865907ba2af3a15c6c4f70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77ffc0621dd7b259844f6cba791050adc6a44f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being checked for length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75976484a59418c3a3420ce3cb3dc1690bb7212" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being checked, for the last occurrence of &lt;code&gt;needle&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c033cf5a33bfa697032854743c178709f49f6b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bde5348ba947b1c79f9021c9bd2c69e8a580fd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e1d49ef0a3db76882e987899e4d1aeb97407c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being cut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e70518a9c27e5b66b54fdae48ccb19a439d345d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddc033276abe1571eb806dc983762b1a8b8009c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840e1eade742ecc5784d80de01536b5b785a03ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006cd4d8897376641b3557dea5b66778fde04fec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being encoded. Its encoding should be same as &lt;a href=&quot;function.mb-internal-encoding&quot;&gt;mb_internal_encoding()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76f8bc2349d38187671c8ff9b0f5e20a0c8a653" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9725f9b2fccfed1b9ba50c24364c9c11888ce52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39716c18c5205712b8606ebd02e6046710dc5ed4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being lowercased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8db4df4ad2bf0342d656895a2a7e63d0f4f14a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being measured for length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32622be9e77d31e4c5953aabd0765186056e0766" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b86874ebadee406f38684c640da923f930a1ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being split up into smaller strings (tokens).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979636d246a712ef2f226226c934a61dcb7e240c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c191d9fe9a8dd56d0e1ecd7bfc247d439972f43e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being translated to &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61583ba61d45d002a1e144f95ad57c6c3adf5e1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ca6531a501a93101fead0095de478997d153f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being uppercased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6367fb9d675cbe29f3773d902dc983c097331494" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; in PHP is implemented as an array of bytes and an integer indicating the length of the buffer. It has no information about how those bytes translate to characters, leaving that task to the programmer. There are no limitations on the values the string can be composed of; in particular, bytes with value &lt;em&gt;0&lt;/em&gt; (&amp;ldquo;NUL bytes&amp;rdquo;) are allowed anywhere in the string (however, a few functions, said in this manual not to be &amp;ldquo;binary safe&amp;rdquo;, may hand off the strings to libraries that ignore data after a NUL byte.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358b441c13ba76d73e1569c0025e9a7f9a5215cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; of known length to compare against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cd6c3d4c6113170226ced39bb157acb39108a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; replacing &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a888edaaaa2f7479b72a694865447bf75e17d7cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; representation of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c455d4b8928dfee0abbdac1aec69dc83127c9302" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; that will be trimmed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88493a69349433db952f24d0e547885b76914cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to extract the substring from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df7aa2ea533033cc892efc98b5b0c5fa5a5fd33" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to find in &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df3697e0ca0aac9decb68240b77905bde2ffc55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48e5de5d707bf6915a9a8bbc13cf8fec920ddaf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to parse as a YAML document stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc55e70d90e0f0ad030ddd1a0f5242c92cd6a796" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to parse, conforming to the &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae9f09f01e6010235a0e083aedfc1960bfc432a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; value of &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d557549052a36bdab391455e0a488aa2f1fb79e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$nowait&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd3eb4d687b343d1b4e6e59216b471155b92c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$timezone&lt;/code&gt; parameter and the current timezone are ignored when the &lt;code&gt;$time&lt;/code&gt; parameter either is a UNIX timestamp (e.g. &lt;em&gt;@946684800&lt;/em&gt;) or specifies a timezone (e.g. &lt;em&gt;2010-01-28T15:00:00+02:00&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73d074aff9165955ebdd1af5438dca66e420814" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;amp;cas_token&lt;/code&gt; parameter was removed. Instead &lt;code&gt;flags&lt;/code&gt; was added and when it is given the value of &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; it will ensure the CAS token to be fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527de7d4c11afaed92829c02f9a124b8ff223b51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; parameter was removed. The &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; was added and when passed as a flag it ensures the CAS tokens to be fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5ab422e7ea775c028b157d3a9b9773815e75c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;additional_headers&lt;/code&gt; parameter now also accepts an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb010ed17b86463e3103c8f115c0ef0380ca95d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;additional_parameters&lt;/code&gt; parameter can be used to pass additional flags as command line options to the program configured to be used when sending mail, as defined by the &lt;em&gt;sendmail_path&lt;/em&gt; configuration setting. For example, this can be used to set the envelope sender address when using sendmail with the &lt;em&gt;-f&lt;/em&gt; sendmail option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2553c94d8173765c7a1e9850c733ef9443aa7a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;additional_parameters&lt;/code&gt; parameter can be used to pass an additional parameter to the program configured to use when sending mail using the &lt;em&gt;sendmail_path&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8c50834f2079b010732dd1ec4eec30a0972d85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;additional_parameters&lt;/code&gt; parameter is disabled in &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe_mode&lt;/a&gt; and the &lt;strong&gt;mail()&lt;/strong&gt; function will expose a warning message and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5269fca82e6e4119f02c2babbeb5a43b06b4824e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; parameter is either an IPv4 address in dotted-quad notation (e.g. &lt;em&gt;127.0.0.1&lt;/em&gt;) if &lt;code&gt;socket&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/strong&gt;, a valid IPv6 address (e.g. &lt;em&gt;::1&lt;/em&gt;) if IPv6 support is enabled and &lt;code&gt;socket&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/strong&gt; or the pathname of a Unix domain socket, if the socket family is &lt;strong&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3662d0d7288459b92de6eb1c786e3cb9fe5a2489" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;algorithm_directory&lt;/code&gt; parameter is used to locate the encryption module. When you supply a directory name, it is used. When you set it to an empty string (&lt;em&gt;&quot;&quot;&lt;/em&gt;), the value set by the &lt;em&gt;mcrypt.algorithms_dir&lt;/em&gt;&lt;var&gt;php.ini&lt;/var&gt; directive is used. When it is not set, the default directory that is used is the one that was compiled into libmcrypt (usually &lt;var&gt;/usr/local/lib/libmcrypt&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd5231f889f48ab0f97cc1cb5effc7bf5427e10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alpha&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe755541f340409cf02e76fc49f93156c55c2cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arg_separator&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1b0d914f45f694b6fd067fe06441e14813a4b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; parameter defines the maximum length the queue of pending connections may grow to. &lt;strong&gt;&lt;code&gt;SOMAXCONN&lt;/code&gt;&lt;/strong&gt; may be passed as &lt;code&gt;backlog&lt;/code&gt; parameter, see &lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen()&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ae6947ab77715ad67851be080e4a4813bb770d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;base&lt;/code&gt; parameter has no effect unless the &lt;code&gt;var&lt;/code&gt; parameter is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b9b7d703568feee851e9fe36a78014fc3f00cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;base&lt;/code&gt; was extended from 2 to 36, to 2 to 62 and -2 to -36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa89dc7592b37bf6d7d9f2ba474b200843f3e14f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ber_identifier&lt;/code&gt; was removed. This is now handled automatically by PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631c89c4a1c39e148e54fda512cfd03125020ec9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is executed just after PHP prepares all headers to be sent, and before any other output is sent, creating a window to manipulate the outgoing headers before being sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eadc5f57c793948f3397d047083ced46e9d5bcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback_url&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6574bfd7f2bc7ee879376bc826622e439323d65c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callbacks&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76c6fa414b48fc07af20abb0851a156d839d11c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;categorize&lt;/code&gt; parameter now operates appropriately. Previously, the &lt;code&gt;categorize&lt;/code&gt; parameter was interpreted as &lt;em&gt;!is_null($categorize)&lt;/em&gt;, making any value other than &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; force the constants to be categorized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd017ad3e071f386b6f94f527216abb48939feb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;connection_string&lt;/code&gt; can be empty to use all default parameters, or it can contain one or more parameter settings separated by whitespace. Each parameter setting is in the form &lt;em&gt;keyword = value&lt;/em&gt;. Spaces around the equal sign are optional. To write an empty value or a value containing spaces, surround it with single quotes, e.g., &lt;em&gt;keyword = 'a value'&lt;/em&gt;. Single quotes and backslashes within the value must be escaped with a backslash, i.e., \' and \\.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58087e64f2a07e38013b8c017b13e4c4510bbe0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content&lt;/code&gt; parameter became optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3abf6b56530e652963ad15d35decd3dded15e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fc19ddba54e2f0eefd7c6920db0d8146d9d849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219ab84bf240201412337621e246a7913b07ba22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2262ad9a2945ad952fe500b6466d26832f18d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crypto_type&lt;/code&gt; is now optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009e1353d01d31f10ad8c5755194d3d35c0ce119" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;curve_name&lt;/code&gt; configarg was added to make it possible to create EC keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cee4d4a65502953bf8b1e8201a45b710104255" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; being encoded. Can be any type except a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de82020b000981bc872f62df16df37bafd652211" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; argument has to be a valid path to database file on the server it resides on. If the server is not local, it must be prefixed with either 'hostname:' (TCP/IP), '//hostname/' (NetBEUI) or 'hostname@' (IPX/SPX), depending on the connection protocol used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12adf10ae1106d48f23432a7949b4f5edb293bab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; argument has to be a valid path to database file on the server it resides on. If the server is not local, it must be prefixed with either 'hostname:' (TCP/IP), 'hostname/port:' (TCP/IP with interbase server on custom TCP port), '//hostname/' (NetBEUI), depending on the connection protocol used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ddd05baf760d781ef57187bc0edc90f939904d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;debugInfo&lt;/code&gt; members were added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6ac0a5853499c3c5a959c9af33ea7ffc6b99a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;description&lt;/code&gt; parameter was added. The &lt;code&gt;description&lt;/code&gt; is also now provided to a callback function in &lt;strong&gt;&lt;code&gt;ASSERT_CALLBACK&lt;/code&gt;&lt;/strong&gt; mode as the fourth argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf7b307463d77de4567d994e5836b84b3d5f58d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;domain&lt;/code&gt; parameter specifies the protocol family to be used by the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a799f07126beb96b5fa2310eafd76e3428ebd85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;domain&lt;/code&gt; parameter specifies the protocol family to be used by the socket. See &lt;a href=&quot;function.socket-create&quot;&gt;socket_create()&lt;/a&gt; for the full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ca925e17b460e0410f75c2a950a88a53deb92f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;double_encode&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b71547bf35a0a0b9754a3c10ff1fcc30eca8983" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dsn&lt;/code&gt; parameter supports three different methods of specifying the arguments required to create a database connection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9611b339cdb99e0682c8507f735a5ac9f4d2d59c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enc_type&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ccf2110d13893d4de404488ca5044387c1b698" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoding&lt;/code&gt; parameter is the character encoding. If it is omitted, the internal character encoding value will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8bd007fbb339110d41ad3062e38a1bad8340c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoding&lt;/code&gt; parameter sets the encoding for input/output documents. The possible values for encoding are: &lt;em&gt;ascii&lt;/em&gt;, &lt;em&gt;latin0&lt;/em&gt;, &lt;em&gt;latin1&lt;/em&gt;, &lt;em&gt;raw&lt;/em&gt;, &lt;em&gt;utf8&lt;/em&gt;, &lt;em&gt;iso2022&lt;/em&gt;, &lt;em&gt;mac&lt;/em&gt;, &lt;em&gt;win1252&lt;/em&gt;, &lt;em&gt;ibm858&lt;/em&gt;, &lt;em&gt;utf16&lt;/em&gt;, &lt;em&gt;utf16le&lt;/em&gt;, &lt;em&gt;utf16be&lt;/em&gt;, &lt;em&gt;big5&lt;/em&gt;, and &lt;em&gt;shiftjis&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c7884abfd4db8c243197d2258a417b669d2884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoding&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6063966d0ac296b0b6717a555f33af15936df7e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d1910b6fe140c730c116e1ee3b7aeffb0f5f56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape_char&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7c213df3fc4c08d2481feb36962c7fffc4d979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exception&lt;/code&gt; parameter also accepts &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f0fc0d0cdd63a6f95e123904c03056534ae6ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exclude_disabled&lt;/code&gt; parameter has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108ceaa8a95025489fd0cda2c943b8c79d706332" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;facility&lt;/code&gt; argument is used to specify what type of program is logging the message. This allows you to specify (in your machine's syslog configuration) how messages coming from different facilities will be handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18038b8dcc3aed349d73d8fdb53aee734b990f44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fetch_type&lt;/code&gt; can be one of two constant types: &lt;strong&gt;&lt;code&gt;SQL_FETCH_FIRST&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SQL_FETCH_NEXT&lt;/code&gt;&lt;/strong&gt;. Use &lt;strong&gt;&lt;code&gt;SQL_FETCH_FIRST&lt;/code&gt;&lt;/strong&gt; the first time this function is called, thereafter use the &lt;strong&gt;&lt;code&gt;SQL_FETCH_NEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a3120afcf5e83c0a1f0d7e154cd592e0b264b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filename&lt;/code&gt; (without the .xbm extension) is also used for the C identifiers of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02800796e5e4c9ead3cfd4d8558103fec90ca750" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filename&lt;/code&gt; can now be empty to use a private, temporary on-disk database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38372d824600a179d4ddec4bcb62bc13d1f7268" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filename&lt;/code&gt; parameter was renamed to &lt;code&gt;stream&lt;/code&gt; and now supports both local files or stream resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ae4956db870320b6d05b90bc1ea928841e7295" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; parameter can be used to specify additional options for &lt;strong&gt;Memcached::getMulti()&lt;/strong&gt;. &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; ensures that the keys are returned in the same order as they were requested in. &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; ensures that the CAS tokens will be fetched too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dd53ddb0484ae8a3674a160a6129f542eb0ccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; parameter has been added, allowing to write BLOBs; formerly only reading was supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06b462e47a5c4748b5414aa5c021498e3c8dc3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; parameter has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c37de6b27506ab6c8678f2f2ec9de6247d7865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; parameter is a bitmask that controls the operations that can be performed on the output buffer. The default is to allow output buffers to be cleaned, flushed and removed, which can be set explicitly via &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_CLEANABLE&lt;/code&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_FLUSHABLE&lt;/code&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_REMOVABLE&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_STDFLAGS&lt;/code&gt;&lt;/strong&gt; as shorthand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83526e3f0606679961698aa91399cbf54719d027" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; string consists of format codes followed by an optional repeater argument. The repeater argument can be either an integer value or &lt;em&gt;*&lt;/em&gt; for repeating to the end of the input data. For a, A, h, H the repeat count specifies how many characters of one data argument are taken, for @ it is the absolute position where to put the next data, for everything else the repeat count specifies how many data arguments are consumed and packed into the resulting binary string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1075ad2c4f63aabf6fffa2af58b98eef1c28c8c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle&lt;/code&gt; must be open for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bfedcefc082dd8a40c0a8185b9c447759db371" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler&lt;/code&gt; will be called if the XML parser encounters an external entity declaration with an NDATA declaration, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d144c2d42866d219ef53ddb4dbf874a4b9ad6900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http_headers&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5c63e28894c7a54db997f53d4de2081657a5e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http_method&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24c81d517921614bc5d6a5032d7cac9001bbfc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httponly&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdc4f8c0afb9f3dd6aa79937ca69c18e96b2bc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignore_transparent&lt;/code&gt; is now silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d739e49452496e8b0a37708e66c62472b5e39086" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;imageinfo&lt;/code&gt; only supports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a19fce1490ac57247a732afcf1b795ed647404" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;imap_stream&lt;/code&gt; should be opened as the user whose mailbox you wish to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238a5d72ebd9ffdb6cab989a2e6d5e9e8dbf7876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; parameter accepts an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or an &lt;a href=&quot;language.types.object&quot;&gt;Object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d474b1a3cf6389a2818eb2bd006d042f4a4a656" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is_dst&lt;/code&gt; parameter became deprecated. Made the function return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error, instead of &lt;em&gt;-1&lt;/em&gt;. Fixed the function to accept the year, month and day to be all passed as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff268ac7b057c34133fe402a5d18a75459c158c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iv&lt;/code&gt; has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b742d9ca717b7820938d87a830ff1848c970214" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iv&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c28490d190e904a2cb6e815a11f55de3484e0c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json&lt;/code&gt;&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d6142a8eb67e0abf46e694bc8db966467aa280" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; serves as the name of the constant set being stored. This &lt;code&gt;key&lt;/code&gt; is used to retrieve the stored constants in &lt;a href=&quot;function.apc-load-constants&quot;&gt;apc_load_constants()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0711a83186ed2030cd8288a5b9c25bb03f6315b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; used to store the value (with &lt;a href=&quot;function.apc-store&quot;&gt;apc_store()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e511ebbc07b511aa305dc49b2d754472465a30d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; used to store the value (with &lt;a href=&quot;function.apc-store&quot;&gt;apc_store()&lt;/a&gt;). If an array is passed then each element is fetched and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bf3be9e657c3da9c8971a5f64e43330e9af4b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; used to store the value (with &lt;a href=&quot;function.apcu-store&quot;&gt;apcu_store()&lt;/a&gt;). If an array is passed then each element is fetched and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3588a5278acdfdf80f133a576f2c449539af3bc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; is now optional. Default is &lt;em&gt;0&lt;/em&gt;, meaning no length limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de5f21c6daeeb85aacb0748bb8e4467396f296f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; parameter specifies the protocol level at which the option resides. For example, to retrieve options at the socket level, a &lt;code&gt;level&lt;/code&gt; parameter of &lt;strong&gt;&lt;code&gt;SOL_SOCKET&lt;/code&gt;&lt;/strong&gt; would be used. Other levels, such as &lt;strong&gt;&lt;code&gt;TCP&lt;/code&gt;&lt;/strong&gt;, can be used by specifying the protocol number of that level. Protocol numbers can be found by using the &lt;a href=&quot;function.getprotobyname&quot;&gt;getprotobyname()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e87b50b6f7a9fbd0921cd4d411dfc021906382" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; parameter specifies the protocol level at which the option resides. For example, to retrieve options at the socket level, a &lt;code&gt;level&lt;/code&gt; parameter of &lt;strong&gt;&lt;code&gt;SOL_SOCKET&lt;/code&gt;&lt;/strong&gt; would be used. Other levels, such as TCP, can be used by specifying the protocol number of that level. Protocol numbers can be found by using the &lt;a href=&quot;function.getprotobyname&quot;&gt;getprotobyname()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e47fd3b98ecf57b64073ade5fccb937638dd729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limited&lt;/code&gt; parameter was introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4364aefb9eae72e5979c575073d0ed6ff08a3efa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local_only&lt;/code&gt; parameter has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe49b4102ecc8569543c8f73048ea645e092ce5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matches&lt;/code&gt; parameter became optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9f7314c9499247e861406cf0bcce033e2e9915" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; is &lt;em&gt;NOT&lt;/em&gt; binary safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e900a2730daaf7f250415777f32dd4fb213f956" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ec0afa01be30a6b3ea6f15271300f14ca5c9fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microseconds&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8d880e97cb2dbf49df0c1c51542305df5ae63a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order. One component can be computed by adding up the needed permissions for that target user base. Number 1 means that you grant execute rights, number 2 means that you make the file writeable, number 4 means that you make the file readable. Add up these numbers to specify needed rights. You can also read more about modes on Unix systems with '&lt;strong&gt;man 1 chmod&lt;/strong&gt;' and '&lt;strong&gt;man 2 chmod&lt;/strong&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f309cfdf94e7f456321aa625e706097df1b15f5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; parameter is now optional. Formerly it has been mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0139a240b81d73fd12b2002044e90c0a5e61ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; parameter specifies the type of access you require to the stream. It may be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2124f953f4eaa1b6f4dbf5391bfea5f351e74997" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; parameter was introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca54d098ba820bfbaa3892451e49dedf9aad991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode_directory&lt;/code&gt; parameter is used to locate the encryption module. When you supply a directory name, it is used. When you set it to an empty string (&lt;em&gt;&quot;&quot;&lt;/em&gt;), the value set by the &lt;em&gt;mcrypt.modes_dir&lt;/em&gt;&lt;var&gt;php.ini&lt;/var&gt; directive is used. When it is not set, the default directory that is used is the one that was compiled-in into libmcrypt (usually &lt;var&gt;/usr/local/lib/libmcrypt&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27b1a289fe92467237d16d616f00f83b60e66e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; must be passed by reference. If the socket is not connection-oriented, &lt;code&gt;name&lt;/code&gt; will be set to the internet protocol address of the remote host or the path to the UNIX socket. If the socket is connection-oriented, &lt;code&gt;name&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;. Additionally, the &lt;code&gt;port&lt;/code&gt; will contain the port of the remote host in the case of an unconnected &lt;strong&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/strong&gt; socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1847e5674bda54727433977f79f2dd7c0b52a71e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;needle&lt;/code&gt; may now be a string of more than one character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe90514e81b5d584e20e71b1f0aefeabd8176dd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9062d2838717df1cd3d365034238745a3b03ac7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; parameter will be set to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if another value is not available, like in the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b5a785485172559c4afc97b8a1bee2d4e76c27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc176fc221a3f4270cd14bc4f0afe28368367239" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oldset&lt;/code&gt; parameter is set to an array containing the list of the previously blocked signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f187da9d999761118b8c6c013deee7ebdb3b1290" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;one_way&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d888460ce66c19f40205bb52440299d5756b566" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;option&lt;/code&gt; argument is used to indicate what logging options will be used when generating a log message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab59a4573c34bac3187eca2cc1fba30c6aa077f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;option&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa309ca5858859b167f4bc988c80aa08fc04c8a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; are a bit mask with one or more of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657db64e068dc5965b4f637f9ac3a2321e01cc6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; are a bitmask of one or more of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cbb4d571a7514e0ef038086dff3ddb46cd774f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be used to set command line parameters to be invoked by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4cb00c5b1c56e4402beedaf561a7a35c24857b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fdf7ac2de6d03be386b6a0ce24450e9ddd2feb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may contain the following elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a0da7077baf241c7325863b0e43935555f3a40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191332adb9c940ddf11d08433c26f04f5bf8c4ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output_callback&lt;/code&gt; parameter may be bypassed by passing a &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0273eb0c77953332e159262191ea84f0cd413848" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;owner&lt;/code&gt;, &lt;code&gt;table_name&lt;/code&gt;, and &lt;code&gt;column_name&lt;/code&gt; accept search patterns ('%' to match zero or more characters and '_' to match a single character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bc629ae72d1d837eab59ff208460709f281d6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;p7bfilename&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99dffbf15450903782c4df7950653e3bb546741" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pad_string&lt;/code&gt; may be truncated if the required number of padding characters can't be evenly divided by the &lt;code&gt;pad_string&lt;/code&gt;'s length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971d61190850df43fae9efb36708fed3ed8ad744" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pid&lt;/code&gt; specified in &lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct()&lt;/a&gt; has received a status change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1bfc32c3963027d7083cf2b878b4f83a50ca17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;port&lt;/code&gt; parameter is only used and is mandatory when connecting to an &lt;strong&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/strong&gt; or an &lt;strong&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/strong&gt; socket, and designates the port on the remote host to which a connection should be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33275b23cd4d487d576e3f35c4f7940c0fb5723b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;port&lt;/code&gt; parameter is only used when binding an &lt;strong&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/strong&gt; socket, and designates the port on which to listen for connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d416ccbd77f15028cedba03d17f614e2a25fc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287103fdd7d8df4d8d34950ae027fe1f4c6c28cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;previous&lt;/code&gt; parameter is now of type &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94123391c7ae2348537a5e7dd857d3c5517ec760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;previous&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a25d998778e5933432c3b246952512d364d035e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocol&lt;/code&gt; parameter sets the specific protocol within the specified &lt;code&gt;domain&lt;/code&gt; to be used when communicating on the returned socket. The proper value can be retrieved by name by using &lt;a href=&quot;function.getprotobyname&quot;&gt;getprotobyname()&lt;/a&gt;. If the desired protocol is TCP, or UDP the corresponding constants &lt;strong&gt;&lt;code&gt;SOL_TCP&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;SOL_UDP&lt;/code&gt;&lt;/strong&gt; can also be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425e84fb6fb0aea1f498fedeb2cc7577a986f067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw_output&lt;/code&gt; was changed to &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46165e52073df5a5cbc6fd1dbefcd0c68bbe2b23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; callback must always return a session encoded (serialized) string, or an empty string if there is no data to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046ab097f6a84c706529b4a967a14faef2fb33fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt; and &lt;code&gt;blue&lt;/code&gt; parameters are integers between 0 and 255 or hexadecimals between 0x00 and 0xFF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f485ad94295b252085e7a50176250e0b1e34db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerNodeNS&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85387516ebfdcefaf140c6f9336327d82317511" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace_pairs&lt;/code&gt; parameter may be used instead of &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;from&lt;/code&gt;, in which case it's an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; in the form &lt;em&gt;array('from' =&amp;gt; 'to', ...)&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79356560fd1cfebf2e99df853c97dbc893faad6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;restrict&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ed66f3d77017336beff803bb34cee6f68f7332" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result_type&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48243e64c0c90bd38683c3c4fe7a6f58062f83ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return_float&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fadb2d9e08c8430e68029e773b4e734203dff2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;salt&lt;/code&gt; parameter is optional. However, &lt;strong&gt;crypt()&lt;/strong&gt; creates a weak hash without the &lt;code&gt;salt&lt;/code&gt;. PHP 5.6 or later raise an E_NOTICE error without it. Make sure to specify a strong enough salt for better security.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf6028296560c8e0539291a9591d7b7164cba4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scale&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e53a1ffc2baba498ac4e772a71e707121780fb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schema&lt;/code&gt;, &lt;code&gt;table_name&lt;/code&gt;, and &lt;code&gt;column_name&lt;/code&gt; accept search patterns ('%' to match zero or more characters and '_' to match a single character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbce1169f61e201baa870c9edc7b79a8353cd7d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;siginfo&lt;/code&gt; is set to an array containing informations about the signal. See &lt;a href=&quot;function.pcntl-sigwaitinfo&quot;&gt;pcntl_sigwaitinfo()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492431c3890096a74ccf6d818104c69c99cbb3da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;siginfo&lt;/code&gt; parameter is set to an array containing informations about the signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311780d8532b8be19cff80ffaf96cc41a698dd8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signature_alg&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c34607bf2b818d84e535947667907fa31cd15a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; parameter is available to support cdb's capability of multiple keys having the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fc2ababbf134fa227c48b8503033d71b509878" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;socket&lt;/code&gt; must be a socket resource previously created by socket_create().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf995aeaf2f19eaca5a013c0394ee97641687f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src_im&lt;/code&gt; will be changed to grayscale according to &lt;code&gt;pct&lt;/code&gt; where 0 is fully grayscale and 100 is unchanged. When &lt;code&gt;pct&lt;/code&gt; = 100 this function behaves identically to &lt;a href=&quot;function.imagecopy&quot;&gt;imagecopy()&lt;/a&gt; for pallete images, except for ignoring alpha components, while it implements alpha transparency for true colour images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bb5e8a08f47dcf07c71ef6b214f810f54f1c1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sslChecks&lt;/code&gt; member was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd4dff84749880781daf48987646c91494bf568" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;status&lt;/code&gt; parameter is the status parameter supplied to a successful call to &lt;a href=&quot;function.pcntl-waitpid&quot;&gt;pcntl_waitpid()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37438642a5f8191fb93e018f8b67cd49824065f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subject&lt;/code&gt; string converted to &lt;code&gt;out_codepage&lt;/code&gt;, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138a837c5517ded8c4e436c7f412a8908c5fedb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;success&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff04da7764cdd538bfd303c2af789c5f1c38111b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; and &lt;code&gt;aad&lt;/code&gt; parameters were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edca8d61858203aa17c01ba553b963e26e99825d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;aad&lt;/code&gt; and &lt;code&gt;tag_length&lt;/code&gt; parameters were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdf2d519efaa990eecc1ebebe152833a881d17b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timestamp&lt;/code&gt; of the day from which the sunrise time is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383c494c5891c5c167f44dbf3214e9502a5d4467" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timestamp&lt;/code&gt; of the day from which the sunset time is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cafd82d6413855d345af777d0d1589aed4ac90e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timezone&lt;/code&gt; parameter accepts offset values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d089e0f85e0ed7dfb03f6d93d7e00ddaef80151" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timezone&lt;/code&gt; parameter and the current timezone are ignored when the &lt;code&gt;time&lt;/code&gt; parameter either contains a UNIX timestamp (e.g. &lt;em&gt;946684800&lt;/em&gt;) or specifies a timezone (e.g. &lt;em&gt;2010-01-28T15:00:00+02:00&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9edf01ce64e8f464a62840364f76286c224ddf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tv_sec&lt;/code&gt; and &lt;code&gt;tv_usec&lt;/code&gt; together form the &lt;em&gt;timeout&lt;/em&gt; parameter, &lt;code&gt;tv_sec&lt;/code&gt; specifies the number of seconds while &lt;code&gt;tv_usec&lt;/code&gt; the number of microseconds. The &lt;code&gt;timeout&lt;/code&gt; is an upper bound on the amount of time that &lt;strong&gt;stream_select()&lt;/strong&gt; will wait before it returns. If &lt;code&gt;tv_sec&lt;/code&gt; and &lt;code&gt;tv_usec&lt;/code&gt; are both set to &lt;em&gt;0&lt;/em&gt;, &lt;strong&gt;stream_select()&lt;/strong&gt; will not wait for data - instead it will return immediately, indicating the current status of the streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300402f7f76bfeec6be5d3181ab60c78fd282039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tv_sec&lt;/code&gt; and &lt;code&gt;tv_usec&lt;/code&gt; together form the &lt;em&gt;timeout&lt;/em&gt; parameter. The &lt;em&gt;timeout&lt;/em&gt; is an upper bound on the amount of time elapsed before &lt;strong&gt;socket_select()&lt;/strong&gt; return. &lt;code&gt;tv_sec&lt;/code&gt; may be zero , causing &lt;strong&gt;socket_select()&lt;/strong&gt; to return immediately. This is useful for polling. If &lt;code&gt;tv_sec&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; (no timeout), &lt;strong&gt;socket_select()&lt;/strong&gt; can block indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb377f328e87a58fc1e1abe3c68c3856fa67c24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter selects the type of communication to be used by the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c5336cb1e3e7d191bbcb06adfcdaf4214a3e63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter selects the type of communication to be used by the socket. See &lt;a href=&quot;function.socket-create&quot;&gt;socket_create()&lt;/a&gt; for the full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2293a6c6d4a39b0e895c671aea59049b8f78ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;use_keys&lt;/code&gt; parameter was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f8e857a92275a7989c4423a0f502af02c3c469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; being encoded. Can be any type except a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5a5137bed7da196d14cc9bd75fe5e12d41a1d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be escaped. Use &lt;a href=&quot;domdocument.createtextnode&quot;&gt;DOMDocument::createTextNode()&lt;/a&gt; to create a text node with &lt;em&gt;escaping support&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f77537e1c67184b74ac6a11ea296d334bde9e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;varname&lt;/code&gt; can now be omitted to retrieve an associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of all environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbf64961fdb6ae89c48c38a3c4282ed40affa28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verifier_token&lt;/code&gt; parameter was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ef3228f245ea4ac114e667c836a5b95969b816" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; callback is called when the session needs to be saved and closed. This callback receives the current session ID a serialized version the &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.session&quot;&gt;$_SESSION&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; superglobal. The serialization method used internally by PHP is specified in the &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt; ini setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebce2ddec864c039fd08499e614237f2c264aeb0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;&quot;a&quot; =&amp;gt; &quot;green&quot;&lt;/em&gt; pair is present in both arrays and thus it is not in the output from the function. Unlike this, the pair &lt;em&gt;0 =&amp;gt; &quot;red&quot;&lt;/em&gt; is in the output because in the second argument &lt;em&gt;&quot;red&quot;&lt;/em&gt; has key which is &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1799fd9cc7c33f9e063f0f8e8cb1a615221cbafe" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;%e&lt;/em&gt; modifier is not supported in the Windows implementation of this function. To achieve this value, the &lt;em&gt;%#d&lt;/em&gt; modifier can be used instead. The example below illustrates how to write a cross platform compatible function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3334cbb913d1102be9229267c8119d064c19e67a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;%z&lt;/em&gt; and &lt;em&gt;%Z&lt;/em&gt; modifiers both return the time zone name instead of the offset or abbreviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df097929f470fe83b75bca5e9d043ba5d8592954" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;'c'&lt;/em&gt; and &lt;em&gt;'c+'&lt;/em&gt; options were added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9722f5aab285d14777eb4c24d4fa2e275356999c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;'e'&lt;/em&gt; option were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d709461b30c3c06c09a5dbcec816ef637a4f8e52" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;+&lt;/em&gt; operator returns the right-hand array appended to the left-hand array; for keys that exist in both arrays, the elements from the left-hand array will be used, and the matching elements from the right-hand array will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d257257992e96d285529d4647fb9b43033b9d9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;-&lt;/em&gt; character is now quoted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599588cffb19576b48d506c69534ae26f610746f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;/e&lt;/em&gt; modifier is deprecated. Use &lt;a href=&quot;function.preg-replace-callback&quot;&gt;preg_replace_callback()&lt;/a&gt; instead. See the &lt;a href=&quot;reference.pcre.pattern.modifiers#reference.pcre.pattern.modifiers.eval&quot;&gt;PREG_REPLACE_EVAL&lt;/a&gt; documentation for additional information about security risks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278f8b7a46740c895660d442384aac9571cc02f0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;CURLOPT_XXX&lt;/em&gt; option to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3032ce5d0d659ef19328084af1b09caad76091" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;F&lt;/em&gt; and &lt;em&gt;f&lt;/em&gt; format characters were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7b6394b73a1c59f333ab56ff09dad5cd55c7a8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TZ&lt;/em&gt; environment variable is no longer used to guess the timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1946b5a415221398063eec367bb76caaaf427eaa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;\A&lt;/em&gt;, &lt;em&gt;\Z&lt;/em&gt;, and &lt;em&gt;\z&lt;/em&gt; assertions differ from the traditional circumflex and dollar (described in &lt;a href=&quot;regexp.reference.anchors&quot;&gt;anchors&lt;/a&gt; ) in that they only ever match at the very start and end of the subject string, whatever options are set. They are not affected by the &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_MULTILINE&lt;/a&gt; or &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOLLAR_ENDONLY&lt;/a&gt; options. The difference between &lt;em&gt;\Z&lt;/em&gt; and &lt;em&gt;\z&lt;/em&gt; is that &lt;em&gt;\Z&lt;/em&gt; matches before a newline that is the last character of the string as well as at the end of the string, whereas &lt;em&gt;\z&lt;/em&gt; matches only at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8cbd94f608bbeee5162d47c2be3a9f116b5628" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;\G&lt;/em&gt; assertion is true only when the current matching position is at the start point of the match, as specified by the &lt;code&gt;offset&lt;/code&gt; argument of &lt;a href=&quot;function.preg-match&quot;&gt;preg_match()&lt;/a&gt;. It differs from &lt;em&gt;\A&lt;/em&gt; when the value of &lt;code&gt;offset&lt;/code&gt; is non-zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f4806635ded772fddbf1b75823b0d7da40343f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;\X&lt;/em&gt; escape matches a Unicode extended grapheme cluster. An extended grapheme cluster is one or more Unicode characters that combine to form a single glyph. In effect, this can be thought of as the Unicode equivalent of &lt;em&gt;.&lt;/em&gt; as it will match one composed character, regardless of how many individual characters are actually used to render it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec0b1c40f124c0901e56f6e066bed92d523411f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;addChild&lt;/em&gt; method returns a &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; object representing the child added to the XML node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1562c4a69a9fb4d6b1e1eb537a80fa64b64f55e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;allowed_classes&lt;/em&gt; element of &lt;code&gt;options&lt;/code&gt;) is now strictly typed, i.e. if anything other than an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; is given, &lt;strong&gt;unserialize()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; and issues an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125c7f1b58d81435f0099bcf6e7b2f2c5d0b95a8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;asXML&lt;/em&gt; method formats the parent object's data in XML version 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c66ad0101cded1db9bc09c76d23fa1ca76aa01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;c&lt;/em&gt; type specifier ignores padding and width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4e48deea5b7efa07703fef1ce95d5107aef000" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cache_wsdl&lt;/em&gt; option is one of &lt;strong&gt;&lt;code&gt;WSDL_CACHE_NONE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;WSDL_CACHE_DISK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;WSDL_CACHE_MEMORY&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;WSDL_CACHE_BOTH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d06d12b9b11f6f121967d6c6210cb053f42e358" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;classmap&lt;/em&gt; option can be used to map some WSDL types to PHP classes. This option must be an array with WSDL types as keys and names of PHP classes as values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84a16dc560c7276802b5c14d6bf47410b58c5cf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compression&lt;/em&gt; option allows to use compression of HTTP SOAP requests and responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d60765dd2c102e1b1d4a46a2c5686e26c7f0baa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;connection_timeout&lt;/em&gt; option defines a timeout in seconds for the connection to the SOAP service. This option does not define a timeout for services with slow responses. To limit the time to wait for calls to finish the &lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.default-socket-timeout&quot;&gt;default_socket_timeout&lt;/a&gt; setting is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bb370fc3c7bed7e7142080a23603c950769644" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cookies&lt;/em&gt; value simply means that the browser itself is capable of accepting cookies and does not mean the user has enabled the browser to accept cookies or not. The only way to test if cookies are accepted is to set one with &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt;, reload, and check for the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaac518733d2fa7a6d2b071085cb94ac5a484ac" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;declare&lt;/em&gt; construct can also be used in the global scope, affecting all code following it (however if the file with &lt;em&gt;declare&lt;/em&gt; was included then it does not affect the parent file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1a553dff99bf8086a9d20b87a1fd5e042443a7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;declare&lt;/em&gt; construct is used to set execution directives for a block of code. The syntax of &lt;em&gt;declare&lt;/em&gt; is similar to the syntax of other flow control constructs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489995078fe2cd70d717fcc2db9276f0bd9c549a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;default event loop&lt;/em&gt; is initialized automatically by &lt;em&gt;Ev&lt;/em&gt; . It is accessible via methods of the &lt;a href=&quot;class.ev&quot;&gt;Ev&lt;/a&gt; class, or via &lt;a href=&quot;evloop.defaultloop&quot;&gt;EvLoop::defaultLoop()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb739f339697d9258288085b0f1cb119310aee42" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;directive&lt;/em&gt; section allows the behavior of the &lt;em&gt;declare&lt;/em&gt; block to be set. Currently only three directives are recognized: the &lt;em&gt;ticks&lt;/em&gt; directive (See below for more information on the &lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;ticks&lt;/a&gt; directive), the &lt;em&gt;encoding&lt;/em&gt; directive (See below for more information on the &lt;a href=&quot;control-structures.declare#control-structures.declare.encoding&quot;&gt;encoding&lt;/a&gt; directive) and the &lt;em&gt;strict_types&lt;/em&gt; directive (See for more information the &lt;a href=&quot;functions.arguments#functions.arguments.type-declaration.strict&quot;&gt;strict&lt;/a&gt; section on the Function arguments page)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f390fce6f4b34c35a467289a3602922dcfa144" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;e&lt;/em&gt; modifier has been deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ef4cfd1e9f582cddb92a375048b13602c098b4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;else&lt;/em&gt; statement is only executed if the &lt;em&gt;if&lt;/em&gt; expression evaluated to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, and if there were any &lt;em&gt;elseif&lt;/em&gt; expressions - only if they evaluated to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; as well (see &lt;a href=&quot;control-structures.elseif&quot;&gt;elseif&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74203ffd92a7432eb7216629151dcb4b9da48c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;elseif&lt;/em&gt; statement is only executed if the preceding &lt;em&gt;if&lt;/em&gt; expression and any preceding &lt;em&gt;elseif&lt;/em&gt; expressions evaluated to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, and the current &lt;em&gt;elseif&lt;/em&gt; expression evaluated to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384dbb5214f5e030e41d61f1125362517fecd813" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encoding&lt;/em&gt; option defines internal character encoding. This option does not change the encoding of SOAP requests (it is always utf-8), but converts strings into it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588fb0a8109d30246f531f3dbe40aa1c6acd92cc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;exceptions&lt;/em&gt; option is a boolean value defining whether soap errors throw exceptions of type &lt;a href=&quot;soapfault.soapfault&quot;&gt; SoapFault&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b024991203380179d33e77a48c810ca9db393331" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;features&lt;/em&gt; option is a bitmask of &lt;strong&gt;&lt;code&gt;SOAP_SINGLE_ELEMENT_ARRAYS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SOAP_USE_XSI_ARRAY_TYPE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SOAP_WAIT_ONE_WAY_CALLS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962a6ce3b4f7d7b2e7715e5473e1adc0088afaee" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; protocol is disabled by cURL if &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.open-basedir&quot;&gt;open_basedir&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3b25778925d6b654cbbb56f370a1d79ca0a2a0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;foreach&lt;/em&gt; construct provides an easy way to iterate over arrays. &lt;em&gt;foreach&lt;/em&gt; works only on arrays and objects, and will issue an error when you try to use it on a variable with a different data type or an uninitialized variable. There are two syntaxes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6011d6bcf2014b46eccc7de19b0b983a2ab6f07" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;getDocNamespaces&lt;/em&gt; method returns an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of namespace names with their associated URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cab3fbf94b9a3ec17fc80fcd9fc17e68ff91c78" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;getName&lt;/em&gt; method returns as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; the name of the XML tag referenced by the SimpleXMLElement object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a93bdce4869f9ecda07e4edbddbe5d628cec13" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;getNamespaces&lt;/em&gt; method returns an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of namespace names with their associated URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f888c54e5c81af9fc79b43521632557e1622d3a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;global&lt;/em&gt; keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3e6e9eb2fd1108b72e1244a4b08639c15fb973" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;goto&lt;/em&gt; operator can be used to jump to another section in the program. The target point is specified by a label followed by a colon, and the instruction is given as &lt;em&gt;goto&lt;/em&gt; followed by the desired target label. This is not a full unrestricted &lt;em&gt;goto&lt;/em&gt;. The target label must be within the same file and context, meaning that you cannot jump out of a function or method, nor can you jump into one. You also cannot jump into any sort of loop or switch structure. You may jump out of these, and a common use is to use a &lt;em&gt;goto&lt;/em&gt; in place of a multi-level &lt;em&gt;break&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f172de6f4a31f60120e634953881ae46a55864e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;goto&lt;/em&gt; operator is available as of PHP 5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53437088f408ce6654ac61e25bf074662418a60c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;if&lt;/em&gt; construct is one of the most important features of many languages, PHP included. It allows for conditional execution of code fragments. PHP features an &lt;em&gt;if&lt;/em&gt; structure that is similar to that of C:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78a1b3f2ed10fec4a1f2115736849d2968ceeb6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;include&lt;/em&gt; statement includes and evaluates the specified file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffc160423fd860ceb9e1f5dd0d6e94ba5760d09" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;include_once&lt;/em&gt; statement includes and evaluates the specified file during the execution of the script. This is a behavior similar to the &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; statement, with the only difference being that if the code from a file has already been included, it will not be included again, and include_once returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;. As the name suggests, the file will be included just once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e3e267a9051a7cb3070a61f6edaae8937358c5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;instanceof&lt;/em&gt; operator was introduced in PHP 5. Before this time &lt;a href=&quot;function.is-a&quot;&gt;is_a()&lt;/a&gt; was used but &lt;a href=&quot;function.is-a&quot;&gt;is_a()&lt;/a&gt; has since been deprecated in favor of &lt;em&gt;instanceof&lt;/em&gt;. Note that as of PHP 5.3.0, &lt;a href=&quot;function.is-a&quot;&gt;is_a()&lt;/a&gt; is no longer deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42a57d633ba080bdcd460f260d9c22fb5c565c5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;keep_alive&lt;/em&gt; option is a boolean value defining whether to send the &lt;em&gt;Connection: Keep-Alive&lt;/em&gt; header or &lt;em&gt;Connection: close&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a3092b66f35d3066bd8bf679bf2a0e36f58225" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;location&lt;/em&gt; option is the URL of the remote Web service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75381410c09bfbd5507095c239a5a36bc2e731f5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;namespace&lt;/em&gt; keyword can be used to explicitly request an element from the current namespace or a sub-namespace. It is the namespace equivalent of the &lt;em&gt;self&lt;/em&gt; operator for classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c946b110067c302fbc7be520249a547a95ef07" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;nodeName&lt;/em&gt; of the node to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84422827c89476051d18271e230c2b30a442618" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;p_sign_posn&lt;/em&gt;, and &lt;em&gt;n_sign_posn&lt;/em&gt; contain a string of formatting options. Each number representing one of the above listed conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e8a737ecb8e208b26715bbf2b0ebfdea76be7d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;refcount&lt;/em&gt; value returned by this function is non-obvious in certain circumstances. For example, a developer might expect the above example to indicate a &lt;em&gt;refcount&lt;/em&gt; of &lt;em&gt;2&lt;/em&gt;. The third reference is created when actually calling &lt;strong&gt;debug_zval_dump()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dab5d5b648a01d9e3fe026d597a8bcdd0be214" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;require_once&lt;/em&gt; statement is identical to &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt; except PHP will check if the file has already been included, and if so, not include (require) it again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393d9c26edccd4687b4aa046b68531532f851889" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;safe_mode_allowed_env_vars&lt;/em&gt; and &lt;em&gt;safe_mode_protected_env_vars&lt;/em&gt; directives only take effect when &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe_mode&lt;/a&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c6cb06c31023ced2b85fa46dad3794046f52cc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;safe_mode_protected_env_vars&lt;/em&gt; directive contains a comma-delimited list of environment variables, that the end user won't be able to change using &lt;strong&gt;putenv()&lt;/strong&gt;. These variables will be protected even if &lt;em&gt;safe_mode_allowed_env_vars&lt;/em&gt; is set to allow to change them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac41a1d2e64dabeba9844f1fc26dae9cc213f3c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;send_errors&lt;/em&gt; option can be set to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; to sent a generic error message (&quot;Internal error&quot;) instead of the specific error message sent otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7827020423b704bf86c21815c095e220f3581a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;soap_version&lt;/em&gt; option should be one of either &lt;strong&gt;&lt;code&gt;SOAP_1_1&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;SOAP_1_2&lt;/code&gt;&lt;/strong&gt; to select SOAP 1.1 or 1.2, respectively. If omitted, 1.1 is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f294fe767e76d809520d940828f0e6aeb66a1e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;soapaction&lt;/em&gt; option is the action to call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1955bb250da042da29d7e4ec22aaec1711f91306" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;space&lt;/em&gt; characters are HT (9), LF (10), VT (11), FF (12), CR (13), and space (32). Notice that this list includes the VT character (code 11). This makes &quot;space&quot; different to &lt;em&gt;\s&lt;/em&gt;, which does not include VT (for Perl compatibility).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1abb7520c597ba4ef050c674f1df9e455da42c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ssl_method&lt;/em&gt; option is one of &lt;strong&gt;&lt;code&gt;SOAP_SSL_METHOD_TLS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SOAP_SSL_METHOD_SSLv2&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SOAP_SSL_METHOD_SSLv3&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;SOAP_SSL_METHOD_SSLv23&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bda83ef95fd97d94dae9e17393c179cde2e44c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;statement&lt;/em&gt; part of the &lt;em&gt;declare&lt;/em&gt; block will be executed - how it is executed and what side effects occur during execution may depend on the directive set in the &lt;em&gt;directive&lt;/em&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62614347f52fb74a8b52a8dcf7a80479de2a777" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream_context&lt;/em&gt; option is a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; for &lt;a href=&quot;https://secure.php.net/manual/en/context.php&quot;&gt;context&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155b58f5b56b4b8bd1cb2beb85cd1af5a1b153f1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;style&lt;/em&gt; and &lt;em&gt;use&lt;/em&gt; options only work in non-WSDL mode. In WSDL mode, they come from the WSDL file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cd1f9150d773dd5022c4036cf07104bdde4ad6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;switch&lt;/em&gt; statement is similar to a series of IF statements on the same expression. In many occasions, you may want to compare the same variable (or expression) with many different values, and execute a different piece of code depending on which value it equals to. This is exactly what the &lt;em&gt;switch&lt;/em&gt; statement is for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e443c668b1b7835d60c59124ade69804759f214" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tie&lt;/em&gt; parameter specifies a float value (which should be something much less than 1) to use as tiebreaker in DisMax queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c16c4435e9b724ac5c93e4101fd6a02028836ba" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;trace&lt;/em&gt; option enables tracing of request so faults can be backtraced. This defaults to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9832780405d1d6d720296d2be8715424f07ebc7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;typemap&lt;/em&gt; option is an array of type mappings. Type mapping is an array with keys &lt;em&gt;type_name&lt;/em&gt;, &lt;em&gt;type_ns&lt;/em&gt; (namespace URI), &lt;em&gt;from_xml&lt;/em&gt; (callback accepting one string parameter) and &lt;em&gt;to_xml&lt;/em&gt; (callback accepting one object parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a5e83430b2c86e4696d9cd806e21250bf2fcaa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;uri&lt;/em&gt; option is the target namespace of the SOAP service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5f3df7ad713532808f1b011e0c9ff592393ce2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;use&lt;/em&gt; keyword must be declared in the outermost scope of a file (the global scope) or inside namespace declarations. This is because the importing is done at compile time and not runtime, so it cannot be block scoped. The following example will show an illegal use of the &lt;em&gt;use&lt;/em&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090699dfd044da89962d1a5aff62266231acc2d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;user_agent&lt;/em&gt; option specifies string to use in &lt;em&gt;User-Agent&lt;/em&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146f4e35cafb415bb8de87c15c925b51ff6462c7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;xpath&lt;/em&gt; method searches the SimpleXML node for children matching the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ded41a7674c4e0fc4449d7b927f655ad37ed76" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;CURLMSG_DONE&lt;/code&gt;&lt;/strong&gt; constant. Other return values are currently not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b749a06a43eccea0fb78c7217c1436a3e846b27" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;CachingIterator::FULL_CACHE&lt;/code&gt;&lt;/strong&gt; flag must be being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbe048122d090a38c34a9bcd60b625f3265507a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;Event::TIMEOUT&lt;/code&gt;&lt;/strong&gt; flag is ignored when constructing an event: one can either set a timeout when event is &lt;em&gt;added&lt;/em&gt; , or not. It is set in the &lt;em&gt;$what&lt;/em&gt; argument to the callback function when a timeout has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5703be10d107e58df13dacafe773bff4e6dad585" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;LC_MONETARY&lt;/code&gt;&lt;/strong&gt; category of the locale settings, affects the behavior of this function. Use &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; to set to the appropriate default locale before using this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf4e8e66252a652f7ba0cf28811f36db240a923" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;LIBXML_NONET&lt;/code&gt;&lt;/strong&gt; constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a30098ebf7af4d8299bfd5f5b8783c1076d9b3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;MYSQLI_OPT_INT_AND_FLOAT_NATIVE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;MYSQLI_OPT_NET_CMD_BUFFER_SIZE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;MYSQLI_OPT_NET_READ_BUFFER_SIZE&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;MYSQLI_OPT_SSL_VERIFY_SERVER_CERT&lt;/code&gt;&lt;/strong&gt; options were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d579b662bebffbb2afcd0905d23a1448ab0f53" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;MYSQLI_SERVER_PUBLIC_KEY&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;MYSQLI_SERVER_PUBLIC_KEY&lt;/code&gt;&lt;/strong&gt; options were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74469bebd5e369ac72985cb21249548800a94bfd" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;PATHINFO_FILENAME&lt;/code&gt;&lt;/strong&gt; constant was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4be9da6ca35b70f5effdea332142cb461f76ac" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;PHP_VERSION&lt;/code&gt;&lt;/strong&gt; constant holds current PHP version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b871086f365a5f30d0e82877dbb4df39a16cd91" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;PREG_UNMATCHED_AS_NULL&lt;/code&gt;&lt;/strong&gt; is now supported for the &lt;code&gt;$flags&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6ba88798a2a49ad408ed6e8789ef9f332c68eb" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;SORT_LOCALE_STRING&lt;/code&gt;&lt;/strong&gt; was added to &lt;code&gt;array1_sort_flags&lt;/code&gt; as possible sort flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4fd4081acb951e1bcf941d1e8f75f1b7410092" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;SORT_NATURAL&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SORT_FLAG_CASE&lt;/code&gt;&lt;/strong&gt; were added to &lt;code&gt;array1_sort_flags&lt;/code&gt; as possible sort flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a4fe48ea516388bd9d65d927aa88a0c5e57cde" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;code&gt;__NAMESPACE__&lt;/code&gt;&lt;/strong&gt; constant is useful for dynamically constructing names, for instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1314032a281a6436c7a092a9be184b98beee639e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;APCIterator&lt;/strong&gt; class makes it easier to iterate over large APC caches. This is helpful as it allows iterating over large caches in steps, while grabbing a defined number of entries per lock instance, so it frees the cache locks for other activities rather than hold up the entire cache to grab 100 (the default) entries. Also, using regular expression matching is more efficient as it's been moved to the C level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1150cd1849c7729631c370ec61d2d62b6f955031" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;APCUIterator&lt;/strong&gt; class makes it easier to iterate over large APCu caches. This is helpful as it allows iterating over large caches in steps, while grabbing a defined number of entries per lock instance, so it frees the cache locks for other activities rather than hold up the entire cache to grab 100 (the default) entries. Also, using regular expression matching is more efficient as it's been moved to the C level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45a756a74d32943a2aee26c8a5887b8b08ca649" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Cond&lt;/strong&gt; class has been removed in pthreads v3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1045907e13a41cee152209241b6c356bae4ed845" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;DOMCdataSection&lt;/strong&gt; inherits from &lt;a href=&quot;class.domtext&quot;&gt;DOMText&lt;/a&gt; for textural representation of CData constructs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5357cc39894ddd3e4734609ade4c4e5ce813e629" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;DOMImplementation&lt;/strong&gt; interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d8c70ff6ca4cc7468fafdd0d60f43f8f2b99b5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;DOMText&lt;/strong&gt; class inherits from &lt;a href=&quot;class.domcharacterdata&quot;&gt;DOMCharacterData&lt;/a&gt; and represents the textual content of a &lt;a href=&quot;class.domelement&quot;&gt;DOMElement&lt;/a&gt; or &lt;a href=&quot;class.domattr&quot;&gt;DOMAttr&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5603bfcb10520bd7799f06d5f9d7f6e895c7675e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;DateInterval::format()&lt;/strong&gt; method does not recalculate carry over points in time strings nor in date segments. This is expected because it is not possible to overflow values like &lt;em&gt;&quot;32 days&quot;&lt;/em&gt; which could be interpreted as anything from &lt;em&gt;&quot;1 month and 4 days&quot;&lt;/em&gt; to &lt;em&gt;&quot;1 month and 1 day&quot;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6da06c982180bef6bfd17f05db6689d12ff2751" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Event::free()&lt;/strong&gt; method currently doesn't destruct the object itself. To destruct the object completely call &lt;a href=&quot;function.unset&quot;&gt;unset()&lt;/a&gt; , or assign &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3ad20235eaadd68ea3d73ba4f0e6070397189c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;EventBase::free()&lt;/strong&gt; method doesn't destruct the object itself. To destruct the object completely call &lt;a href=&quot;function.unset&quot;&gt;unset()&lt;/a&gt; , or assign &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da93214e28506754999c97e012431f44fb051ed" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;GearmanClient::do()&lt;/strong&gt; method is deprecated as of pecl/gearman 1.0.0. Use &lt;a href=&quot;gearmanclient.donormal&quot;&gt;GearmanClient::doNormal()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0f0f52d4e04a88fa8bdd6cdca6b4fb3b617d3d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;GearmanClient::echo()&lt;/strong&gt; method is deprecated as of pecl/gearman 1.0.0. Use &lt;a href=&quot;gearmanclient.ping&quot;&gt;GearmanClient::ping()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a467b37fa0b3d2e9347e4324fbcf0c9bf5b1c082" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;InfiniteIterator&lt;/strong&gt; allows one to infinitely iterate over an iterator without having to manually rewind the iterator upon reaching its end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230441a14e9650650c048dd087ffe67ad09ee091" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;LimitIterator&lt;/strong&gt; class allows iteration over a limited subset of items in an &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2263a7f4e901dea71c6d9f10baf25213650356" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Mutex&lt;/strong&gt; class has been removed in pthreads v3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ef3a56425f03b860b120c1977ac9743cd54aba" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;RecursiveDirectoryIterator&lt;/strong&gt; provides an interface for iterating recursively over filesystem directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0871c647bb54cb34685ff937a1b4f035cda19d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionClass&lt;/strong&gt; class reports information about a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8267cb8e5950dbc6c931dff8914f7add6592f6ae" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionClassConstant&lt;/strong&gt; class reports information about a class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f088f80d8166a3ceae7bacb706e1878d03a57d27" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionExtension&lt;/strong&gt; class reports information about an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22776de51078ecb4483eefe536cbe92869785eab" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionFunction&lt;/strong&gt; class reports information about a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169f0295b55c031fef6b85d6c6d848bcdc7d2501" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionGenerator&lt;/strong&gt; class reports information about a generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9216f8e931d5a3ade08cfef9b2130205de378eaa" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionMethod&lt;/strong&gt; class reports information about a method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce9035f1e15323a3f46e46adfac08895a54572c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionObject&lt;/strong&gt; class reports information about an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ee07018f549bc7f614db654f5d193a4f89eca1" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionParameter&lt;/strong&gt; class retrieves information about function's or method's parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72c357bc69abf4df6dc20230627d5986b237b36" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionProperty&lt;/strong&gt; class reports information about classes properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bebc04e688909c59a52160fd5ef8b3eaf16ce7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ReflectionType&lt;/strong&gt; class reports information about a function's return type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a4ea81b7eaab61f04e8bb86ce0983e23cb421f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;SplObserver&lt;/strong&gt; interface is used alongside &lt;a href=&quot;class.splsubject&quot;&gt;SplSubject&lt;/a&gt; to implement the Observer Design Pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4535859d52a48a93af87ddbf4b305652ccde7f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;SplSubject&lt;/strong&gt; interface is used alongside &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver&lt;/a&gt; to implement the Observer Design Pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fc29795201ec4145c9f631c5a9c354ab1ac7b2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Volatile&lt;/strong&gt; class is new to pthreads v3. Its introduction is a consequence of the new immutability semantics of &lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt; members of &lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt; classes. The &lt;strong&gt;Volatile&lt;/strong&gt; class enables for mutability of its &lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt; members, and is also used to store PHP arrays in &lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt; contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acbb14e47f19dec26459ff6ea9a456a2fcef541" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;addslashes()&lt;/strong&gt; is sometimes incorrectly used to try to prevent &lt;a href=&quot;https://secure.php.net/manual/en/security.database.sql-injection.php&quot;&gt;SQL Injection&lt;/a&gt;. Instead, database-specific escaping functions and/or prepared statements should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb4f94301b8319a88d72a4ba672f9aff3f158c2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;bindtextdomain()&lt;/strong&gt; function sets the path for a domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb653d6d452700728d149261f79e06689b4bf80" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;current()&lt;/strong&gt; function simply returns the value of the array element that's currently being pointed to by the internal pointer. It does not move the pointer in any way. If the internal pointer points beyond the end of the elements list or the array is empty, &lt;strong&gt;current()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7085f4b469f7733e90c997cf1ab79c407ad95b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;dgettext()&lt;/strong&gt; function allows you to override the current &lt;code&gt;domain&lt;/code&gt; for a single message lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc3bbc6f36667741416718e91bd214b35e56025" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;dngettext()&lt;/strong&gt; function allows you to override the current &lt;code&gt;domain&lt;/code&gt; for a single plural message lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3c6329361309dd19aac7fb95243299efbf9531" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;error_reporting()&lt;/strong&gt; function sets the &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; directive at runtime. PHP has many levels of errors, using this function sets that level for the duration (runtime) of your script. If the optional &lt;code&gt;level&lt;/code&gt; is not set, &lt;strong&gt;error_reporting()&lt;/strong&gt; will just return the current error reporting level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edfb9d1492993bfd51d98d30f93a5aeb8baecf1" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;eval()&lt;/strong&gt; language construct is &lt;em&gt;very dangerous&lt;/em&gt; because it allows execution of arbitrary PHP code. &lt;em&gt;Its use thus is discouraged.&lt;/em&gt; If you have carefully verified that there is no other option than to use this construct, pay special attention &lt;em&gt;not to pass any user provided data&lt;/em&gt; into it without properly validating it beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88ed50ff06a1245439528bcd7eb0612cf532229" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;filter()&lt;/strong&gt; method must return one of three values upon completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1aa953bb5dd809b8f7df6784813c0fc95e1ef4" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_asnum_by_name()&lt;/strong&gt; function will return the Autonomous System Numbers (ASN) associated with an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698d2d8287fe89d916d352ee81f93d5c89364fd1" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_continent_code_by_name()&lt;/strong&gt; function will return the two letter continent code corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e629abec69612d6474f94a8d6d9fc14089e43d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_country_code3_by_name()&lt;/strong&gt; function will return the three letter country code corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e3aa5d28441a9ace8e0ba029606c6db86aa48d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_country_code_by_name()&lt;/strong&gt; function will return the two letter country code corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e66c59ec0a2eea5e27ea40a6831e4e1cd8b9510" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_country_name_by_name()&lt;/strong&gt; function will return the full country name corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be80f5f35ec82912eadc8e4ca67ca319ac494255" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_database_info()&lt;/strong&gt; function returns the corresponding GeoIP Database version as it is defined inside the binary file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb57e8f93b1a0ce2a12408e9483c35ec4b8c873a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_db_avail()&lt;/strong&gt; function returns if the corresponding GeoIP Database is available and can be opened on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0704a78862f9b5cf4fc49c57448453f812c1579" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_db_filename()&lt;/strong&gt; function returns the filename of the corresponding GeoIP Database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5915b54490b3094b77005817724a2840cb8201dc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_db_get_all_info()&lt;/strong&gt; function will return detailed information as a multi-dimensional array about all the GeoIP database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa456f03ff94e0da9f5865e35e3a729a2076ca7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_domain_by_name()&lt;/strong&gt; function will return the second level domain names associated with a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3843460ae54f5424dc6ac74c384506661faa7b90" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_id_by_name()&lt;/strong&gt; function will return the Internet connection type corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d682036d2560460c42eecaa0b0a83c1ebd7170" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_isp_by_name()&lt;/strong&gt; function will return the name of the Internet Service Provider (ISP) that an IP is assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f4c04882eb8edf5feadfb86861b32d7f55dc02" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_netspeedcell_by_name()&lt;/strong&gt; function will return the Internet connection type and speed corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9337164739a1fbe9a4e04608b29d64996f1ff10d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_org_by_name()&lt;/strong&gt; function will return the name of the organization that an IP is assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a14a30b12377c2632b457cebf487669a956a995" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_record_by_name()&lt;/strong&gt; function will return the record information corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621e0270c328cf828b474a2edf06fbf5de60d61f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_region_by_name()&lt;/strong&gt; function will return the country and region corresponding to a hostname or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de43a8b44068593afeb1c034a865158a754157d2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_region_name_by_code()&lt;/strong&gt; function will return the region name corresponding to a country and region code combo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ad1c622f71235457f9faabd64ea4c9678f481e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_setup_custom_directory()&lt;/strong&gt; function will change the default directory of the GeoIP database. This is equivalent to changing &lt;a href=&quot;https://secure.php.net/manual/en/geoip.configuration.php#ini.geoip.custom-directory&quot;&gt;geoip.custom_directory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678c5a9f4f42a738cba70a5be815ab1549adbc8d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;geoip_time_zone_by_country_and_region()&lt;/strong&gt; function will return the time zone corresponding to a country and region code combo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b7631f3945edd973022d0dbf3ffc6795831e0b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;getimagesize()&lt;/strong&gt; function will determine the size of any supported given image file and return the dimensions along with the file type and a &lt;em&gt;height/width&lt;/em&gt; text string to be used inside a normal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502b63b06821eaa4753b38e7617c2be7d03c4790" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;glob()&lt;/strong&gt; function searches for all the pathnames matching &lt;code&gt;pattern&lt;/code&gt; according to the rules used by the libc glob() function, which is similar to the rules used by common shells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c26738d7a78423a608c3cd95fb0bd07dbb652a3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;image_type_to_mime_type()&lt;/strong&gt; function will determine the Mime-Type for an IMAGETYPE constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3e6253580e747700d921669f0705939b17e351" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;key()&lt;/strong&gt; function simply returns the key of the array element that's currently being pointed to by the internal pointer. It does not move the pointer in any way. If the internal pointer points beyond the end of the elements list or the array is empty, &lt;strong&gt;key()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03417c7e6f8911529465d21cdbb9875e79c6891b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;localtime()&lt;/strong&gt; function returns an array identical to that of the structure returned by the C function call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0553f0e5e4d0214a2147131c3a08d0f17b99ea2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_data_seek()&lt;/strong&gt; function seeks to an arbitrary result pointer specified by the &lt;code&gt;offset&lt;/code&gt; in the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24307d72d2288bbba2ab5a3ffc32d6ab99a05d9d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_fetch_lengths()&lt;/strong&gt; function returns an array containing the lengths of every column of the current row within the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0a9378f0f96c065c2c9b4bf708c52dc6078ba3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_fetch_object()&lt;/strong&gt; will return the current row result set as an object where the attributes of the object represent the names of the fields found within the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7e81e7dda33f57fdabdceed30450a7e11937d0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_get_cache_stats()&lt;/strong&gt; was added as stub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a16f7a8c5565a9ba2e1febdca37c1d27e47876" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_get_cache_stats()&lt;/strong&gt; was removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417ecdb15d7b15f92baf973c3723a0dfe4cf1a68" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_get_server_version()&lt;/strong&gt; function returns the version of the server connected to (represented by the &lt;code&gt;link&lt;/code&gt; parameter) as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d178d17940dced0e23a0f94aa2b69313ca94568" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_info()&lt;/strong&gt; function returns a string providing information about the last query executed. The nature of this string is provided below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0143e086f3c0043c2f9f5d8301af248035fb05e2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_insert_id()&lt;/strong&gt; function returns the ID generated by a query (usually INSERT) on a table with a column having the AUTO_INCREMENT attribute. If no INSERT or UPDATE statements were sent via this connection, or if the modified table does not have a column with the AUTO_INCREMENT attribute, this function will return zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cf172f3b75b52a7eeabc80e25e590114a3f750" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_thread_id()&lt;/strong&gt; function returns the thread ID for the current connection which can then be killed using the &lt;a href=&quot;mysqli.kill&quot;&gt;mysqli_kill()&lt;/a&gt; function. If the connection is lost and you reconnect with &lt;a href=&quot;mysqli.ping&quot;&gt;mysqli_ping()&lt;/a&gt;, the thread ID will be other. Therefore you should get the thread ID only when you need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9895dec0e0a5d7d624024915d5cf003b2067b8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mysqli_use_result()&lt;/strong&gt; function does not transfer the entire result set from the database and hence cannot be used functions such as &lt;a href=&quot;mysqli-result.data-seek&quot;&gt;mysqli_data_seek()&lt;/a&gt; to move to a particular row within the set. To use this functionality, the result set must be stored using &lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result()&lt;/a&gt;. One should not use &lt;strong&gt;mysqli_use_result()&lt;/strong&gt; if a lot of processing on the client side is performed, since this will tie up the server and prevent other threads from updating any tables from which the data is being fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47998502f901a86f6aae4541ffa61c83a2fe952b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;passthru()&lt;/strong&gt; function is similar to the &lt;a href=&quot;function.exec&quot;&gt;exec()&lt;/a&gt; function in that it executes a &lt;code&gt;command&lt;/code&gt;. This function should be used in place of &lt;a href=&quot;function.exec&quot;&gt;exec()&lt;/a&gt; or &lt;a href=&quot;function.system&quot;&gt;system()&lt;/a&gt; when the output from the Unix command is binary data which needs to be passed directly back to the browser. A common use for this is to execute something like the pbmplus utilities that can output an image stream directly. By setting the Content-type to &lt;em&gt;image/gif&lt;/em&gt; and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c13d30fda5b8442559a30d36062cbfcfc07c0c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_fork()&lt;/strong&gt; function creates a child process that differs from the parent process only in its PID and PPID. Please see your system's fork(2) man page for specific details as to how fork works on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b71243b4e1ef5abf01884e3de1f687a3373864" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_signal()&lt;/strong&gt; function installs a new signal handler or replaces the current signal handler for the signal indicated by &lt;code&gt;signo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609501abbeed46c51e8a9b927ffd39e309fe3884" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_signal_dispatch()&lt;/strong&gt; function calls the signal handlers installed by &lt;a href=&quot;function.pcntl-signal&quot;&gt;pcntl_signal()&lt;/a&gt; for each pending signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51801f109591f2c9882052780cca2e5d77a1317" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_signal_get_handler()&lt;/strong&gt; function will get the current handler for the specified &lt;code&gt;signo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8682ce265ea9f2c4ce26f961762bcc15524f32ab" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_sigprocmask()&lt;/strong&gt; function adds, removes or sets blocked signals, depending on the &lt;code&gt;how&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba0e024c63fc56375baf33a1294be8d8df2a09f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_sigtimedwait()&lt;/strong&gt; function operates in exactly the same way as &lt;a href=&quot;function.pcntl-sigwaitinfo&quot;&gt;pcntl_sigwaitinfo()&lt;/a&gt; except that it takes two additional parameters, &lt;code&gt;seconds&lt;/code&gt; and &lt;code&gt;nanoseconds&lt;/code&gt;, which enable an upper bound to be placed on the time for which the script is suspended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab6e78b08bebdf53d2e67db966b55d110cf407b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pcntl_sigwaitinfo()&lt;/strong&gt; function suspends execution of the calling script until one of the signals given in &lt;code&gt;set&lt;/code&gt; are delivered. If one of the signal is already pending (e.g. blocked by &lt;a href=&quot;function.pcntl-sigprocmask&quot;&gt;pcntl_sigprocmask()&lt;/a&gt;), &lt;strong&gt;pcntl_sigwaitinfo()&lt;/strong&gt; will return immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67612117f76c009feed46c8d6b56ce79a7991c58" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;property_exists()&lt;/strong&gt; function cannot detect properties that are magically accessible using the &lt;a href=&quot;language.oop5.overloading#language.oop5.overloading.members&quot;&gt;&lt;em&gt;__get&lt;/em&gt;&lt;/a&gt; magic method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defc4df4a176845cbda7faae2845b38768c1c78d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;runkit_lint()&lt;/strong&gt; function performs a syntax (lint) check on the specified php code testing for scripting errors. This is similar to using &lt;em&gt;php -l&lt;/em&gt; from the command line except &lt;strong&gt;runkit_lint()&lt;/strong&gt; accepts actual code rather than a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b606ca73169b6aad5060b11ce78c4e2fed18959c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;runkit_lint_file()&lt;/strong&gt; function performs a syntax (lint) check on the specified filename testing for scripting errors. This is similar to using php -l from the commandline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d82a7449c4de1b7570804a55a440dd3d87c7c1f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;session_unset()&lt;/strong&gt; function frees all session variables currently registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8157f57339c9f82dbd7eed22c596552600172f33" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;set_time_limit()&lt;/strong&gt; function and the configuration directive &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.max-execution-time&quot;&gt;max_execution_time&lt;/a&gt; only affect the execution time of the script itself. Any time spent on activity that happens outside the execution of the script such as system calls using &lt;a href=&quot;function.system&quot;&gt;system()&lt;/a&gt;, stream operations, database queries, etc. is not included when determining the maximum time that the script has been running. This is not true on Windows where the measured time is real.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95d94854fc11643af4d7dc78cc863a7be4e2d69" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_get_option()&lt;/strong&gt; function retrieves the value for the option specified by the &lt;code&gt;optname&lt;/code&gt; parameter for the specified &lt;code&gt;socket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c436cdc0d78b752fd9ae2313b9a57afe590322c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_recv()&lt;/strong&gt; function receives &lt;code&gt;len&lt;/code&gt; bytes of data in &lt;code&gt;buf&lt;/code&gt; from &lt;code&gt;socket&lt;/code&gt;. &lt;strong&gt;socket_recv()&lt;/strong&gt; can be used to gather data from connected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcab99ca2b648a027a9c22f781677f220601cf7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_recvfrom()&lt;/strong&gt; function receives &lt;code&gt;len&lt;/code&gt; bytes of data in &lt;code&gt;buf&lt;/code&gt; from &lt;code&gt;name&lt;/code&gt; on port &lt;code&gt;port&lt;/code&gt; (if the socket is not of type &lt;strong&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/strong&gt;) using &lt;code&gt;socket&lt;/code&gt;. &lt;strong&gt;socket_recvfrom()&lt;/strong&gt; can be used to gather data from both connected and unconnected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73856f4f22e021b6c22d3bfcd14bb8c97eb71f0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_set_block()&lt;/strong&gt; function removes the &lt;strong&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;/strong&gt; flag on the socket specified by the &lt;code&gt;socket&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef29fc8cd721f3a60ef1e4afccbc3efe37aafa49" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_set_nonblock()&lt;/strong&gt; function sets the &lt;strong&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;/strong&gt; flag on the socket specified by the &lt;code&gt;socket&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04fa280bc7cc938f762a3f28dc4038b1789a55b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_set_option()&lt;/strong&gt; function sets the option specified by the &lt;code&gt;optname&lt;/code&gt; parameter, at the specified protocol &lt;code&gt;level&lt;/code&gt;, to the value pointed to by the &lt;code&gt;optval&lt;/code&gt; parameter for the &lt;code&gt;socket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e008292efcbb0179b01a50a447055d091c97a98" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;socket_shutdown()&lt;/strong&gt; function allows you to stop incoming, outgoing or all data (the default) from being sent through the &lt;code&gt;socket&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677b645dc5b42842cd8caa2210d79608a930c791" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;stream_select()&lt;/strong&gt; function accepts arrays of streams and waits for them to change status. Its operation is equivalent to that of the &lt;a href=&quot;function.socket-select&quot;&gt;socket_select()&lt;/a&gt; function except in that it acts on streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4534f63bfe511c599b080c5d3141bf222ab505b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;system()&lt;/strong&gt; call also tries to automatically flush the web server's output buffer after each line of output if PHP is running as a server module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37dc2586a1b9d11e8631d2a4044b815a64155a3" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;$http_response_header&lt;/var&gt;&lt;/var&gt;&lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; is similar to the &lt;a href=&quot;function.get-headers&quot;&gt;get_headers()&lt;/a&gt; function. When using the &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.http.php&quot;&gt;HTTP wrapper&lt;/a&gt;, &lt;var&gt;&lt;var&gt;$http_response_header&lt;/var&gt;&lt;/var&gt; will be populated with the HTTP response headers. &lt;var&gt;&lt;var&gt;$http_response_header&lt;/var&gt;&lt;/var&gt; will be created in the &lt;a href=&quot;language.variables.scope&quot;&gt;local scope&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33104d93a1d2dd464b38c127f126e172edbe79a" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;$name&lt;/var&gt;&lt;/var&gt; argument is the name of the method being called. The &lt;var&gt;&lt;var&gt;$arguments&lt;/var&gt;&lt;/var&gt; argument is an enumerated array containing the parameters passed to the &lt;var&gt;&lt;var&gt;$name&lt;/var&gt;&lt;/var&gt;'ed method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89057b40aa931ab30e420f4f19cc54d56788203" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;$name&lt;/var&gt;&lt;/var&gt; argument is the name of the property being interacted with. The &lt;a href=&quot;language.oop5.overloading#object.set&quot;&gt;__set()&lt;/a&gt; method's &lt;var&gt;&lt;var&gt;$value&lt;/var&gt;&lt;/var&gt; argument specifies the value the &lt;var&gt;&lt;var&gt;$name&lt;/var&gt;&lt;/var&gt;'ed property should be set to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0bec24908c24c957fb3dec9544b3e660f4e772" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;$size&lt;/var&gt;&lt;/var&gt; wasn't overwritten because we specified &lt;strong&gt;&lt;code&gt;EXTR_PREFIX_SAME&lt;/code&gt;&lt;/strong&gt;, which resulted in &lt;var&gt;&lt;var&gt;$wddx_size&lt;/var&gt;&lt;/var&gt; being created. If &lt;strong&gt;&lt;code&gt;EXTR_SKIP&lt;/code&gt;&lt;/strong&gt; was specified, then &lt;var&gt;&lt;var&gt;$wddx_size&lt;/var&gt;&lt;/var&gt; wouldn't even have been created. &lt;strong&gt;&lt;code&gt;EXTR_OVERWRITE&lt;/code&gt;&lt;/strong&gt; would have caused &lt;var&gt;&lt;var&gt;$size&lt;/var&gt;&lt;/var&gt; to have value &quot;medium&quot;, and &lt;strong&gt;&lt;code&gt;EXTR_PREFIX_ALL&lt;/code&gt;&lt;/strong&gt; would result in new variables being named &lt;var&gt;&lt;var&gt;$wddx_color&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;$wddx_size&lt;/var&gt;&lt;/var&gt;, and &lt;var&gt;&lt;var&gt;$wddx_shape&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe7af9d006886b0ed90b0fd20bd63fa7c368073" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; array is an associative array with the name of the global variable being the key and the contents of that variable being the value of the array element. Notice how &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; exists in any scope, this is because &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; is a &lt;a href=&quot;language.variables.superglobals&quot;&gt;superglobal&lt;/a&gt;. Here's an example demonstrating the power of superglobals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f4fba1dd5e75c6182cc574c1677cd198b494a7" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;OID&lt;/var&gt;&lt;/var&gt; of the large object in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0044fdf7e38b1bc811b7ee5887c1790bf9288a89" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;OID&lt;/var&gt;&lt;/var&gt; of the newly created large object, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6307e9d3a472d27694d857e9f3356d83246542cd" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;f&lt;/var&gt;&lt;/var&gt; property was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43a642d579b9e913cf4e26f175accc81ef799eb" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;&lt;var&gt;streamWrapper::$context&lt;/var&gt;&lt;/var&gt; property is updated if a valid context is passed to the caller function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ad23d566e44425666067648d10a48bfb417b4e" translate="yes" xml:space="preserve">
          <source>The APCIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c113d282fb3205f605813acfbf1622a309653ad4" translate="yes" xml:space="preserve">
          <source>The APCUIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c80db25bb8efc01c3368a343f22764f1b9953c9" translate="yes" xml:space="preserve">
          <source>The API version string as in &lt;em&gt;&quot;1.0.0&quot;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc905f8a586bfb8231edfec900908dc7956c42b2" translate="yes" xml:space="preserve">
          <source>The ASP tags &lt;code&gt;&amp;lt;%&lt;/code&gt;, &lt;code&gt;%&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;%=&lt;/code&gt;, and the script tag &lt;code&gt;&amp;lt;script language=&quot;php&quot;&amp;gt;&lt;/code&gt; are removed from PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cc1238eac54dc59ab6bb68897f5404c8241650" translate="yes" xml:space="preserve">
          <source>The Aliased_Talker makes use of the &lt;em&gt;as&lt;/em&gt; operator to be able to use B's bigTalk implementation under an additional alias &lt;em&gt;talk&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533cebc6057a269d9c5e6ba1f3ff90f08475d54b" translate="yes" xml:space="preserve">
          <source>The Alternate attribute is used to control the handling of the so called variable characters in the UCA: whitespace, punctuation and symbols. If Alternate is set to &lt;em&gt;NonIgnorable&lt;/em&gt; (N), then differences among these characters are of the same importance as differences among letters. If Alternate is set to &lt;em&gt;Shifted&lt;/em&gt; (S), then these characters are of only minor importance. The &lt;em&gt;Shifted&lt;/em&gt; value is often used in combination with &lt;em&gt;Strength&lt;/em&gt; set to Quaternary. In such a case, whitespace, punctuation, and symbols are considered when comparing strings, but only if all other aspects of the strings (base letters, accents, and case) are identical. If Alternate is not set to Shifted, then there is no difference between a Strength of 3 and a Strength of 4. For more information and examples, see Variable_Weighting in the &lt;a href=&quot;http://www.unicode.org/reports/tr10/&quot;&gt;&amp;raquo; UCA&lt;/a&gt;. The reason the Alternate values are not simply &lt;em&gt;On&lt;/em&gt; and &lt;em&gt;Off&lt;/em&gt; is that additional Alternate values may be added in the future. The UCA option Blanked is expressed with Strength set to 3, and Alternate set to Shifted. The default for most locales is NonIgnorable. If Shifted is selected, it may be slower if there are many strings that are the same except for punctuation; sort key length will not be affected unless the strength level is also increased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59870a454520c1e900b08daf529648339cc8b3fb" translate="yes" xml:space="preserve">
          <source>The Apache environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8722fa73a47bf1dd79b5926d0acee8e2eac66617" translate="yes" xml:space="preserve">
          <source>The AppendIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69a15eaa01f3ef4bfecb1f3046fa3605ef4547c" translate="yes" xml:space="preserve">
          <source>The ArrayAccess interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6a9839eb17e08bbb0012041051e756699e7f68" translate="yes" xml:space="preserve">
          <source>The ArrayIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea28f46f44cc4719beef00c94610549f48129e1" translate="yes" xml:space="preserve">
          <source>The ArrayObject class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f360e6300cb4c4c4345ad443b97beaf7841add" translate="yes" xml:space="preserve">
          <source>The BadFunctionCallException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6de64f22c1ce13f7cac6377151b66d84c636d5a" translate="yes" xml:space="preserve">
          <source>The BadMethodCallException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a093f7952b1838c4dd6aeda28ea5e1fc38030960" translate="yes" xml:space="preserve">
          <source>The Basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a164a5e316242da2fe7877de2001a89a420c9ef6" translate="yes" xml:space="preserve">
          <source>The CA Info being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94b44fb0cf1a21e58870cca20a5e7a533022996" translate="yes" xml:space="preserve">
          <source>The CA Path being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df8ba98af379a898085118a1d7bae554fcb0dd1" translate="yes" xml:space="preserve">
          <source>The COOKIE constant was changed to reflect RFC 1036 using a four digit year rather than a two digit year (RFC 850) as prior versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222aa0cc6a6ff51cff07aa217b23f887dff67676" translate="yes" xml:space="preserve">
          <source>The CURLFile class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9f2bb2c6e3abf0915462f126cc82add96d6658" translate="yes" xml:space="preserve">
          <source>The CachingIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810445a628a910855f319078aba2fa189893a75f" translate="yes" xml:space="preserve">
          <source>The CallbackFilterIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a7b3ae89d2e87a156d9a8341013166dc68a7e6" translate="yes" xml:space="preserve">
          <source>The Case_First attribute is used to control whether uppercase letters come before lowercase letters or vice versa, in the absence of other differences in the strings. The possible values are &lt;em&gt;Uppercase_First&lt;/em&gt; (U) and &lt;em&gt;Lowercase_First&lt;/em&gt; (L), plus the standard &lt;em&gt;Default&lt;/em&gt; and &lt;em&gt;Off&lt;/em&gt;. There is almost no difference between the Off and Lowercase_First options in terms of results, so typically users will not use Lowercase_First: only Off or Uppercase_First. (People interested in the detailed differences between X and L should consult the &lt;em&gt;Collation Customization&lt;/em&gt;). Specifying either L or U won't affect string comparison performance, but will affect the sort key length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518e938c6f7a9d573adec65900612b24fd557b69" translate="yes" xml:space="preserve">
          <source>The Case_Level attribute is used when ignoring accents but not case. In such a situation, set Strength to be &lt;em&gt;Primary&lt;/em&gt;, and Case_Level to be &lt;em&gt;On&lt;/em&gt;. In most locales, this setting is Off by default. There is a small string comparison performance and sort key impact if this attribute is set to be &lt;em&gt;On&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b1ae75fff8fe84f6dfe7fb8e69002e6ae9cafb" translate="yes" xml:space="preserve">
          <source>The Client API header version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b7353e2d6b9a9d0e4d9bfc29eef1793507fddf" translate="yes" xml:space="preserve">
          <source>The Client version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0febf569cb6aa2a49a03fbd53bf3e2d4dba2be0" translate="yes" xml:space="preserve">
          <source>The Closure class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17863b7928d386494b787bbf0c6d557163f3a122" translate="yes" xml:space="preserve">
          <source>The Collator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48915e1276668e35131a7f8f2ec3aea11ff3900" translate="yes" xml:space="preserve">
          <source>The Collectable interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525e3e43d724a6b06db98339fad6d5de9a36371a" translate="yes" xml:space="preserve">
          <source>The Collection interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212e376f87f7da1a507620fef96be8e12f66e96b" translate="yes" xml:space="preserve">
          <source>The Cond class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f425ff30a2d4cb760da091d895b41091bbde4c" translate="yes" xml:space="preserve">
          <source>The Countable interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e378cc74ec8d1e46677750af20a9002cdc0303" translate="yes" xml:space="preserve">
          <source>The DOM class that you want to extend. You can find a list of these classes in the &lt;a href=&quot;https://secure.php.net/manual/en/book.dom.php&quot;&gt;chapter introduction&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0be4661d93c61e079fb7e8d371925e96c3c7f7" translate="yes" xml:space="preserve">
          <source>The DOM extension uses UTF-8 encoding. Use &lt;a href=&quot;function.utf8-encode&quot;&gt;utf8_encode()&lt;/a&gt; and &lt;a href=&quot;function.utf8-decode&quot;&gt;utf8_decode()&lt;/a&gt; to work with texts in ISO-8859-1 encoding or &lt;a href=&quot;https://secure.php.net/manual/en/ref.iconv.php&quot;&gt;Iconv&lt;/a&gt; for other encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87d8dcd0594e91b3d3b29ca4995fb851f0bd049" translate="yes" xml:space="preserve">
          <source>The DOMAttr class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb2ade8aa5a6a52cb677874667aee70898ec5e0" translate="yes" xml:space="preserve">
          <source>The DOMCdataSection class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c05ced73bd07d802b93e3add1da9afbb40ee02" translate="yes" xml:space="preserve">
          <source>The DOMCharacterData class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b6b782e738ee4b2c198400e98628a5e8065084" translate="yes" xml:space="preserve">
          <source>The DOMComment class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41f0058185a1c849f9c42646a31aba516d292bf" translate="yes" xml:space="preserve">
          <source>The DOMDocument class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef54d6de283536db8250d3dc3b478c700eeced0" translate="yes" xml:space="preserve">
          <source>The DOMDocumentFragment class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39b615b0c895166e60b43974ecfdbf4908a6f0c" translate="yes" xml:space="preserve">
          <source>The DOMDocumentType class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcae4ffc8f0f82bfbe679c1cf742354a2f8fe86" translate="yes" xml:space="preserve">
          <source>The DOMElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc002271f7bec7c4fc3ec4d89922f115dd9cf820" translate="yes" xml:space="preserve">
          <source>The DOMEntity class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5509fd55d43c53c044f33b93f464f16df2c97934" translate="yes" xml:space="preserve">
          <source>The DOMEntityReference class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7834fa9a27e0a9a5e8aec8e7f97eac477f286f" translate="yes" xml:space="preserve">
          <source>The DOMException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f664966c581ecaffea8645f1f1fa1d2007f34b8" translate="yes" xml:space="preserve">
          <source>The DOMImplementation class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e048d92dc3c1babd69f66d95cd9158864f44f07" translate="yes" xml:space="preserve">
          <source>The DOMNamedNodeMap class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b16b0fc930a18ea8459722fa6b4c05014cf1b4f" translate="yes" xml:space="preserve">
          <source>The DOMNode class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053d7bd504bbd3f5487b40a3c419c9bcd94bffb6" translate="yes" xml:space="preserve">
          <source>The DOMNodeList class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9e5a826af12b39e8a0c228ea7264c9f44869b5" translate="yes" xml:space="preserve">
          <source>The DOMNotation class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaf353e480ee1b0d1c881ad3d6debad7e32e01e" translate="yes" xml:space="preserve">
          <source>The DOMProcessingInstruction class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bb25ec985b04466ee7d596d3c4d1c6de9fa1a9" translate="yes" xml:space="preserve">
          <source>The DOMText class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e98a4d5e3ee9a8d6193fcb6ded57e07f48cb15" translate="yes" xml:space="preserve">
          <source>The DOMXPath class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157f0ca0d09d297649504d05c8f8c6a348c42905" translate="yes" xml:space="preserve">
          <source>The DTD name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cce38c54578fd1f4d27b3625f9afc3f4a4c51b" translate="yes" xml:space="preserve">
          <source>The Data Source Name, or DSN, contains the information required to connect to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bf6b5ec717f4b135bde4f517eb1f794e5dcf59" translate="yes" xml:space="preserve">
          <source>The DateInterval class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03961900fdadc286ae6b8188b4baaa5a4d296a8" translate="yes" xml:space="preserve">
          <source>The DatePeriod class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c146ce674cc5d37344d63bc09d8ee608585c667" translate="yes" xml:space="preserve">
          <source>The DateTime class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6770f16a7aa76f43ff664619aa1d4d1840a582ff" translate="yes" xml:space="preserve">
          <source>The DateTimeImmutable class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11facb0cb7b7b9c6937220c9a892ec228d7ec849" translate="yes" xml:space="preserve">
          <source>The DateTimeInterface interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770e469f6f72ae742808f7606fd1610c4e30fefd" translate="yes" xml:space="preserve">
          <source>The DateTimeZone class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1133ee51c7d27c6a7410a644d2e1c572d197abf2" translate="yes" xml:space="preserve">
          <source>The Deque class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc1223922425ad4e9512aa5017111cc21979554" translate="yes" xml:space="preserve">
          <source>The Directory class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5726adfe0a4c16e282c4d29f1bbc17beaf29de7" translate="yes" xml:space="preserve">
          <source>The DirectoryIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4936d3f60214bcf188afd34b8d741895bd3ed79d" translate="yes" xml:space="preserve">
          <source>The DirectoryIterator class provides a simple interface for viewing the contents of filesystem directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470883992e5eb52d40a2086fe708c893f09bd9f2" translate="yes" xml:space="preserve">
          <source>The Distinguished Name or subject fields to be used in the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a2ae65ff062d55a150544d94649bef60591501" translate="yes" xml:space="preserve">
          <source>The Document Type Declaration associated with this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aece7958ccbe63d835f361196e16215bd153f434" translate="yes" xml:space="preserve">
          <source>The DomainException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ac6a618364038e27a0c39b91ba732177634578" translate="yes" xml:space="preserve">
          <source>The EXIF section is a sub section of &lt;em&gt;IFD0&lt;/em&gt;. It contains more detailed information about an image. Most of these entries are digital camera related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195c267ac7222d4c6b845b0107ca45412dd027ee" translate="yes" xml:space="preserve">
          <source>The EmptyIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0a3bb0e3007de083015d5f1062e78ce9b283ed" translate="yes" xml:space="preserve">
          <source>The EmptyIterator class for an empty iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae8f42cdbc98b8b776afac5011ab47dd722fac" translate="yes" xml:space="preserve">
          <source>The EmptyIterator valid() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b951389eb6818bc13823f8d99d8b2c350522ff9" translate="yes" xml:space="preserve">
          <source>The Ev class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b49b623ea8ad4e9ad1e2fbdeadbdbe0a7f4bf96" translate="yes" xml:space="preserve">
          <source>The EvCheck class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae38f093783026660f8d7bea3820f9c241cc9a7" translate="yes" xml:space="preserve">
          <source>The EvChild class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b71c701594bb6868b7d7eb922d7bc88948a1fc" translate="yes" xml:space="preserve">
          <source>The EvEmbed class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a4cb56a2f2993517c6890ac5a0105f03fd6ebb" translate="yes" xml:space="preserve">
          <source>The EvFork class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0215e89d9b63ec8eaf0b3a4905acd0d76b33adf3" translate="yes" xml:space="preserve">
          <source>The EvIdle class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7880cfb411f0f16eed51d8a4349f748e3405a2" translate="yes" xml:space="preserve">
          <source>The EvIo class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9b07cf6d8743bdd2e906104d1ccb53602e6229" translate="yes" xml:space="preserve">
          <source>The EvLoop class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e33bb4e92c268365b18a10eaff3da72b1c6226d" translate="yes" xml:space="preserve">
          <source>The EvPeriodic class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63250e49a39ab47254ba18b6740e3fb083998ba4" translate="yes" xml:space="preserve">
          <source>The EvPrepare class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e478e676f11cc3e3392f40ae4c0221349123cd" translate="yes" xml:space="preserve">
          <source>The EvSignal class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514b7b1837fbf08bc61e46d41a8fc62277fff3c4" translate="yes" xml:space="preserve">
          <source>The EvStat class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002efcbcf18137ad0cee55a9567050acbbd32989" translate="yes" xml:space="preserve">
          <source>The EvTimer class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f999b032dd9017c83c500e2f43229186660ec11" translate="yes" xml:space="preserve">
          <source>The EvWatcher class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c652c9484e1b16fbd6347e3b52cd9646ae89a09" translate="yes" xml:space="preserve">
          <source>The Event class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b94d61e8142627d6e7d932e22377b91e491ad1b" translate="yes" xml:space="preserve">
          <source>The EventBase class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e0ff169d3734d68d8c02833c2d536b042d8b4f" translate="yes" xml:space="preserve">
          <source>The EventBuffer class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a325259d8c0d1997bdb90ede4b9cbbd09681f7a1" translate="yes" xml:space="preserve">
          <source>The EventBufferEvent class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a47722b05411f9bbbe2bad4d70cb379308e843" translate="yes" xml:space="preserve">
          <source>The EventConfig class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7eb375e862602c556ed347ffa3dd23bc8437e34" translate="yes" xml:space="preserve">
          <source>The EventDnsBase class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d3e50fbe2765dc509dbd16c422242ffb5f1a9b" translate="yes" xml:space="preserve">
          <source>The EventHttp class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7590ae79d7d5d9282ffe290b3d420e9e367cca4a" translate="yes" xml:space="preserve">
          <source>The EventHttpConnection class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8518fadff4d50188b19cc236723704c7a2a22477" translate="yes" xml:space="preserve">
          <source>The EventHttpRequest class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea16846252f3f635217ce02b921a05c30f69f24" translate="yes" xml:space="preserve">
          <source>The EventListener class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8afbc43385fda03d7591de6f8a4a9db34f5d5c" translate="yes" xml:space="preserve">
          <source>The EventSslContext class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ad1690ab6f03dcd8889d5ff067bee1e0d20f42" translate="yes" xml:space="preserve">
          <source>The EventUtil class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535f5c6bc0b3ab01b24ceef5583aeb8933c2e2d6" translate="yes" xml:space="preserve">
          <source>The Exception code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411ee783b4ce4397e3adc138ca51ed5b6c9d6108" translate="yes" xml:space="preserve">
          <source>The Exception message to throw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cceb58b08d5a25a80c70a00c3cb3ec2415c872d" translate="yes" xml:space="preserve">
          <source>The FTP authentication method (when is activated): &lt;em&gt;CURLFTPAUTH_SSL&lt;/em&gt; (try SSL first), &lt;em&gt;CURLFTPAUTH_TLS&lt;/em&gt; (try TLS first), or &lt;em&gt;CURLFTPAUTH_DEFAULT&lt;/em&gt; (let cURL decide).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d9e200a4165ea28af65a11c0dca847cfb1225d" translate="yes" xml:space="preserve">
          <source>The FTP server address. This parameter shouldn't have any trailing slashes and shouldn't be prefixed with &lt;em&gt;ftp://&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893a40347ad4be6cacd415a02a8c8755362defde" translate="yes" xml:space="preserve">
          <source>The Field Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ea8e3e4d2ba44fb3862ae97ef47b6744804a8b" translate="yes" xml:space="preserve">
          <source>The Filesystem iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0385bfb36d185452ae9797be03b9ab5b504f0d" translate="yes" xml:space="preserve">
          <source>The FilesystemIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776488f6d5d85927d45eb9fd6b9e4e7a146e0485" translate="yes" xml:space="preserve">
          <source>The FilterIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2a7cd71ee19182b9879d7f4b4d08c323646426" translate="yes" xml:space="preserve">
          <source>The GD format is commonly used to allow fast loading of parts of images. Note that the GD format is only usable in GD-compatible applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1dc226731a8da397dc2e93ded7f40ea62a9471" translate="yes" xml:space="preserve">
          <source>The GD2 format is commonly used to allow fast loading of parts of images. Note that the GD2 format is only usable in GD2-compatible applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484b471957e625ad639ca70fcc511d96cc365a33" translate="yes" xml:space="preserve">
          <source>The GET variables are passed through &lt;a href=&quot;function.urldecode&quot;&gt;urldecode()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0499224fc9708ffbd4a412a5986f606bfc792c" translate="yes" xml:space="preserve">
          <source>The GMP class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b234a54ce04962e9ebc8800c8c3e2df7d3e963e" translate="yes" xml:space="preserve">
          <source>The GMP number being exported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784ac22a098a60b6ee361c898c2e54c485ca683e" translate="yes" xml:space="preserve">
          <source>The GMP number that will be converted to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4cf5016232242981291fd850d605a86075a1b6" translate="yes" xml:space="preserve">
          <source>The GearmanClient class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d313e3a6be48270104331e60c7996f473726bc5b" translate="yes" xml:space="preserve">
          <source>The GearmanException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf33700934bfab863b49455bcc1904ec282cce7d" translate="yes" xml:space="preserve">
          <source>The GearmanJob class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8256c0799c5e5e7bb81e7af4ee1622970372b8" translate="yes" xml:space="preserve">
          <source>The GearmanTask class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822944de678a48ab202a2d0c38c6c0edbedae9bb" translate="yes" xml:space="preserve">
          <source>The GearmanWorker class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b7983547f4ee49d757f273cf89be875c27d585" translate="yes" xml:space="preserve">
          <source>The Generator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581f7c8301a18e5b09b3bd9a44502083056c7e09" translate="yes" xml:space="preserve">
          <source>The GlobIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288ca7b39bab6e8545cf9a990cb64f6570b7c5a6" translate="yes" xml:space="preserve">
          <source>The Gmagick class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d4676c386949c267260d3d8217ac26c34dacd3" translate="yes" xml:space="preserve">
          <source>The Gmagick constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcb87ecf364af29f4f8b25985638436d8cfe49d" translate="yes" xml:space="preserve">
          <source>The Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcdcec7db6331b8d0b6b14a9c0027dee5400f0b" translate="yes" xml:space="preserve">
          <source>The Gmagick object on success</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738822fbdcb15ba69b9438ca8d1c5e08a2b77978" translate="yes" xml:space="preserve">
          <source>The Gmagick object on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37397b779ca0646ac29e1468f09da1acbf64fcb9" translate="yes" xml:space="preserve">
          <source>The Gmagick object with annotation made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cb778bddcd3c98875335efc025ae79813ab83b" translate="yes" xml:space="preserve">
          <source>The Gmagick object with border defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540a32f1e3af38fde8b6fc8656a050682d792963" translate="yes" xml:space="preserve">
          <source>The Gmagick object with charcoal simulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1491bdb63271a0117b0343ceed1ba0f4699ac647" translate="yes" xml:space="preserve">
          <source>The Gmagick object with comment added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ff25b616383a18842b1e25dfaa89e3d54fd5ec" translate="yes" xml:space="preserve">
          <source>The Gmagick object with compositions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487d7c37e741b13493455788482a2bce93bff53a" translate="yes" xml:space="preserve">
          <source>The Gmagick object with edges enhanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb7594e5801d7b5cead53569f63f184c5c469d3" translate="yes" xml:space="preserve">
          <source>The Gmagick object with image added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5161d38a6c6a5e794fc05d28b13fa846966c313" translate="yes" xml:space="preserve">
          <source>The Gmagick object with noise added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48f41e0c5059a287c3c7a8a6836d1f278b2b7af" translate="yes" xml:space="preserve">
          <source>The GmagickDraw class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28daf1a5611f02e8359007a6ae3089ee5f46c0ae" translate="yes" xml:space="preserve">
          <source>The GmagickDraw object on success</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cafb84b3e1b8a8bef9ca45503687055e8d5f25" translate="yes" xml:space="preserve">
          <source>The GmagickDraw object on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1c4841a02dcda9f3c88639ad5a180bb7d8ded4" translate="yes" xml:space="preserve">
          <source>The GmagickDraw object that contains settings for drawing the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ceebbac523b4d66a96b9c730e9d0fd8fb77ca9" translate="yes" xml:space="preserve">
          <source>The GmagickPixel class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d00f42cf477225a658d03f451d252360f10d039" translate="yes" xml:space="preserve">
          <source>The GmagickPixel object on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875d6c036e7298ce1b43075e3b98020cee4b6a61" translate="yes" xml:space="preserve">
          <source>The HTML markup generated is subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6574ce7ad533befc8b91fc6ea85782847125c1" translate="yes" xml:space="preserve">
          <source>The HTML representation of the node, including the surrounding tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c909b612c1ea5096a9ae2552100c4e5bab72ea" translate="yes" xml:space="preserve">
          <source>The HTML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1adba124ad20da884874bcd62cf3079a6e3b509" translate="yes" xml:space="preserve">
          <source>The HTTP authentication method(s) to use for the proxy connection. Use the same bitmasks as described in &lt;strong&gt;&lt;code&gt;CURLOPT_HTTPAUTH&lt;/code&gt;&lt;/strong&gt;. For proxy authentication, only &lt;code&gt;CURLAUTH_BASIC&lt;/code&gt; and &lt;code&gt;CURLAUTH_NTLM&lt;/code&gt; are currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058315901e43a3163cc49b169fc119776a7e312a" translate="yes" xml:space="preserve">
          <source>The HTTP authentication method(s) to use. The options are: &lt;code&gt;CURLAUTH_BASIC&lt;/code&gt;, &lt;code&gt;CURLAUTH_DIGEST&lt;/code&gt;, &lt;code&gt;CURLAUTH_GSSNEGOTIATE&lt;/code&gt;, &lt;code&gt;CURLAUTH_NTLM&lt;/code&gt;, &lt;code&gt;CURLAUTH_ANY&lt;/code&gt;, and &lt;code&gt;CURLAUTH_ANYSAFE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8829b853b59369288e5632114d9f4d0d5733b9ac" translate="yes" xml:space="preserve">
          <source>The HTTP error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25316bd1e8e7dd9558acd79051ccba3b8b0de428" translate="yes" xml:space="preserve">
          <source>The HTTP method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a317cdd6006848d89d33aaf7c7bf55479ed158" translate="yes" xml:space="preserve">
          <source>The HTTP proxy to tunnel requests through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec489860d2eae827610e310b58b93c5dd9bae06f" translate="yes" xml:space="preserve">
          <source>The HTTP response code to send.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec786c3418a769bfd45000a70dbf4d0cd354bcd8" translate="yes" xml:space="preserve">
          <source>The HTTP status header line will always be the first sent to the client, regardless of the actual &lt;strong&gt;header()&lt;/strong&gt; call being the first or not. The status may be overridden by calling &lt;strong&gt;header()&lt;/strong&gt; with a new status line at any time unless the HTTP headers have already been sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012f83a11ecb1f32683bd3483bbf5c800607c266" translate="yes" xml:space="preserve">
          <source>The HWND window ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e615d668037987fc93f4a63dd82419a43d2916" translate="yes" xml:space="preserve">
          <source>The HashContext class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41995aeaa7a67e41537f2d08afb5e78cbba69a99" translate="yes" xml:space="preserve">
          <source>The Hashable interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec3741309c0cbd76b1fa944c0da7a3b3909b15" translate="yes" xml:space="preserve">
          <source>The Height of the thumbnail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097ca36d1dfc3ccc35c1cc97337cbc48f14447a1" translate="yes" xml:space="preserve">
          <source>The Host name from which the user is viewing the current page. The reverse dns lookup is based off the &lt;var&gt;&lt;var&gt;REMOTE_ADDR&lt;/var&gt;&lt;/var&gt; of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59670766dce78aa95b7c89bb871c7d368eae42af" translate="yes" xml:space="preserve">
          <source>The ICU Collation Service supports many levels of comparison (named &quot;Levels&quot;, but also known as &quot;Strengths&quot;). Having these categories enables ICU to sort strings precisely according to local conventions. However, by allowing the levels to be selectively employed, searching for a string in text can be performed with various matching conditions. For more detailed information, see &lt;a href=&quot;collator.setstrength&quot;&gt;collator_set_strength()&lt;/a&gt; chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7f61e542ed6a716683c96dfd86cbe762b9f965" translate="yes" xml:space="preserve">
          <source>The ID of the filter to apply. The &lt;a href=&quot;https://secure.php.net/manual/en/filter.filters.php&quot;&gt;Types of filters&lt;/a&gt; manual page lists the available filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619c698986e4084863ca5cbe4255641edeb18711" translate="yes" xml:space="preserve">
          <source>The ID of the tag (one of the constants above, e.g. &lt;strong&gt;&lt;code&gt;TIDY_TAG_FRAME&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10eb9ae2487fe8c7da87de0af28e565ffb68d1e5" translate="yes" xml:space="preserve">
          <source>The IP address from which HTTP connections are made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da044585dc463ca04978c4cc1fe5fd6355e1c61f" translate="yes" xml:space="preserve">
          <source>The IP address from which the user is viewing the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac3064304cb20c9571b69785babd6f0311a6ccd" translate="yes" xml:space="preserve">
          <source>The IP address of the server under which the current script is executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543ac75f5715a0496f446f33f8093d686ad7a5c9" translate="yes" xml:space="preserve">
          <source>The ISO currency code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7530a4c856f3da129b9400247755eda7730ef8" translate="yes" xml:space="preserve">
          <source>The IV is ignored in ECB mode as this mode does not require it. You will need to have the same IV (think: starting point) both at encryption and decryption stages, otherwise your encryption will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6526bec3fa4f275b59cfff8359487dd967b4ac28" translate="yes" xml:space="preserve">
          <source>The IV is only meant to give an alternative seed to the encryption routines. This IV does not need to be secret at all, though it can be desirable. You even can send it along with your ciphertext without losing security.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9cae6a882c4262c92aeb5724954db63521d187" translate="yes" xml:space="preserve">
          <source>The IV should normally have the size of the algorithms block size, but you must obtain the size by calling &lt;a href=&quot;function.mcrypt-enc-get-iv-size&quot;&gt;mcrypt_enc_get_iv_size()&lt;/a&gt;. IV is ignored in ECB. IV MUST exist in CFB, CBC, STREAM, nOFB and OFB modes. It needs to be random and unique (but not secret). The same IV must be used for encryption/decryption. If you do not want to use it you should set it to zeros, but this is not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3713ba91bd22e89fe369c6569af454524258ab2a" translate="yes" xml:space="preserve">
          <source>The Imagick class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703fe8d7a329879e5c92ba79e909307bd6e872bb" translate="yes" xml:space="preserve">
          <source>The Imagick class has the ability to hold and operate on multiple images simultaneously. This is achieved through an internal stack. There is always an internal pointer that points at the current image. Some functions operate on all images in the Imagick class, but most operate only on the current image in the internal stack. As a convention, method names can contain the word Image to denote they affect only the current image in the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fc931444235a440e5c82cc156405adff3457d1" translate="yes" xml:space="preserve">
          <source>The Imagick object containing the clip mask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca7dfa08b0f18e20d5fdcf4067cf933d156c9b2" translate="yes" xml:space="preserve">
          <source>The ImagickDraw class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a26750f8db54f2865c12a12f42cff4bf6b90731" translate="yes" xml:space="preserve">
          <source>The ImagickDraw constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b2c3760ffd006ff729432a0b2afd62793b0210" translate="yes" xml:space="preserve">
          <source>The ImagickDraw object that contains settings for drawing the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06eff34f3c82aa39ca5cb183486275dc64a75539" translate="yes" xml:space="preserve">
          <source>The ImagickKernel class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ff1df2a27b634c3a3064b9814602b9cbc18c14" translate="yes" xml:space="preserve">
          <source>The ImagickPixel class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311c0d3e0222df697ac77b3c544d9cfeabb52d94" translate="yes" xml:space="preserve">
          <source>The ImagickPixel object to compare this object against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c9080b22aa29593fc0f3b6044236294df4a2c7" translate="yes" xml:space="preserve">
          <source>The ImagickPixelIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0bccc671e9ef7050b345032bb885f7c97cb3fc" translate="yes" xml:space="preserve">
          <source>The ImagickPixelIterator constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad09401e2a7a6281ceec4a2a158ec793c4ff7383" translate="yes" xml:space="preserve">
          <source>The InfiniteIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c4987ba2ff2e95c438675db7cbbced0aea3006" translate="yes" xml:space="preserve">
          <source>The Internet Control Message Protocol is used primarily by gateways and hosts to report errors in datagram communication. The &quot;ping&quot; command (present in most modern operating systems) is an example application of ICMP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e3a5c05864d0847cf0604e707e1fd8f4cbdb15" translate="yes" xml:space="preserve">
          <source>The Internet host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3d2b172511a471c34614b8114a6c174b771a16" translate="yes" xml:space="preserve">
          <source>The Internet service name, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e4b1a68673a8efb76a149703cf0066880c7a5d" translate="yes" xml:space="preserve">
          <source>The IntlBreakIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9df9d767ebef38ccc36c79f13194a455796aa0" translate="yes" xml:space="preserve">
          <source>The IntlCalendar class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c738d62d5c712cc8a9244b1fb0daa5238ef3da5f" translate="yes" xml:space="preserve">
          <source>The IntlCalendar resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298f7f2ec0c73fe8b64b01f7e5f5667e5f915f0d" translate="yes" xml:space="preserve">
          <source>The IntlCodePointBreakIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb38030e3115210d1c07e6e563bb9b5aeebbc130" translate="yes" xml:space="preserve">
          <source>The IntlDateFormatter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d94a5e4867d9a999212bfed0761a84edace0b8" translate="yes" xml:space="preserve">
          <source>The IntlGregorianCalendar class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3fea62cb776e74abadfdf3a548e0d0868748e4" translate="yes" xml:space="preserve">
          <source>The IntlIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51fdd6bce1d2c850bfbfe5a9f03280cba83b13e" translate="yes" xml:space="preserve">
          <source>The IntlPartsIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7735250f1133f77c63fb4b29251adcc7c24614" translate="yes" xml:space="preserve">
          <source>The IntlRuleBasedBreakIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b7ab0de1c905ca71735fbe60f9d22fdac38e16" translate="yes" xml:space="preserve">
          <source>The IntlTimeZone class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2434303225d1f1726a78bf5749166fd71e6151e" translate="yes" xml:space="preserve">
          <source>The InvalidArgumentException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2682e5665ea48e2084b00ed06b721d09927bab" translate="yes" xml:space="preserve">
          <source>The Iterator interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d996b03b08c02aae8aae05025f7231cdcb3561" translate="yes" xml:space="preserve">
          <source>The IteratorAggregate interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25eaf13a711360edc2bb77a8b621497cad5cc8c" translate="yes" xml:space="preserve">
          <source>The IteratorIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9ae677fce81700c8dc1f3178ecc320efd41d16" translate="yes" xml:space="preserve">
          <source>The JSON spec is not JavaScript, but a subset of JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b368d217929eb8a8b8bf8508bc64b31c7a14983" translate="yes" xml:space="preserve">
          <source>The Javascript code to be registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2cbd1cf2c537bc49e4e277cf697d236b6682c1" translate="yes" xml:space="preserve">
          <source>The Jewish date as a string in the form &quot;month/day/year&quot;, or an ISO-8859-8 encoded Hebrew date string, according to the &lt;code&gt;hebrew&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bf8671f602872aa651be4fec701771264c6e5f" translate="yes" xml:space="preserve">
          <source>The JsonSerializable interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bd2fd50147971f19d08183d45832fbe997a16d" translate="yes" xml:space="preserve">
          <source>The Judy &lt;a href=&quot;class.judy#judy.types&quot;&gt;type&lt;/a&gt; to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f9d3310583b90ceb41572f91a8bd332c18787d" translate="yes" xml:space="preserve">
          <source>The Judy class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cfb0ee2d26df6d320bc4e7322991900c18a0c8" translate="yes" xml:space="preserve">
          <source>The Judy class implements the &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface and the &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; interface. This class, once instantiated, can be accessed like a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9dc43dace76972ffa4b03eec851868398d42fa" translate="yes" xml:space="preserve">
          <source>The Julian Day to operate on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ad07d441d1c7532dbec6495ef59d47fd46b33f" translate="yes" xml:space="preserve">
          <source>The KRB4 (Kerberos 4) security level. Any of the following values (in order from least to most powerful) are valid: &lt;em&gt;&quot;clear&quot;&lt;/em&gt;, &lt;em&gt;&quot;safe&quot;&lt;/em&gt;, &lt;em&gt;&quot;confidential&quot;&lt;/em&gt;, &lt;em&gt;&quot;private&quot;.&lt;/em&gt;. If the string does not match one of these, &lt;em&gt;&quot;private&quot;&lt;/em&gt; is used. Setting this option to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; will disable KRB4 security. Currently KRB4 security only works with FTP transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bf320b06065b31aba8bb903ed2561b064015d0" translate="yes" xml:space="preserve">
          <source>The LengthException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511d73d99354521bdc721de8709c073d961effa1" translate="yes" xml:space="preserve">
          <source>The Levenshtein distance is defined as the minimal number of characters you have to replace, insert or delete to transform &lt;code&gt;str1&lt;/code&gt; into &lt;code&gt;str2&lt;/code&gt;. The complexity of the algorithm is &lt;em&gt;O(m*n)&lt;/em&gt;, where &lt;em&gt;n&lt;/em&gt; and &lt;em&gt;m&lt;/em&gt; are the length of &lt;code&gt;str1&lt;/code&gt; and &lt;code&gt;str2&lt;/code&gt; (rather good when compared to &lt;a href=&quot;function.similar-text&quot;&gt;similar_text()&lt;/a&gt;, which is O(max(n,m)**3), but still expensive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b4df0c14aca2fb185b482c3a0ba6e7f78a4c3d" translate="yes" xml:space="preserve">
          <source>The LimitIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330aa83ba46d5eac7114f851e5e0eb15c96a89a8" translate="yes" xml:space="preserve">
          <source>The Locale attribute is typically the most important attribute for correct sorting and matching, according to the user expectations in different countries and regions. The default &lt;a href=&quot;http://www.unicode.org/reports/tr10/&quot;&gt;&amp;raquo; UCA&lt;/a&gt; ordering will only sort a few languages such as Dutch and Portuguese correctly (&quot;correctly&quot; meaning according to the normal expectations for users of the languages). Otherwise, you need to supply the locale to UCA in order to properly collate text for a given language. Thus a locale needs to be supplied so as to choose a collator that is correctly tailored for that locale. The choice of a locale will automatically preset the values for all of the attributes to something that is reasonable for that locale. Thus most of the time the other attributes do not need to be explicitly set. In some cases, the choice of locale will make a difference in string comparison performance and/or sort key length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5061d41b3bb0b3cda175677d3e6e1c52dbf9c62" translate="yes" xml:space="preserve">
          <source>The Locale class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4397decaf9fcedb2413de071dcdfc78b281ee649" translate="yes" xml:space="preserve">
          <source>The Locale class (and related procedural functions) are used to interact with locale identifiers--to verify that an ID is well-formed, valid, etc. The extensions used by CLDR in UAX #35 (and inherited by ICU) are valid and used wherever they would be in ICU normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef00acf6e324d1d0807b2be85debd8748c3243c6" translate="yes" xml:space="preserve">
          <source>The LogicException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bda32bf655e59c85d5402dd2e1791265640ccdf" translate="yes" xml:space="preserve">
          <source>The Lua class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21e32fd5430c35a003109c0f50da06b86855b0c" translate="yes" xml:space="preserve">
          <source>The LuaClosure class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d05502b149b28f2b1124c2010176643a153572" translate="yes" xml:space="preserve">
          <source>The Lucene query to identify a set of documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e16e3b5e3c2758aa4b8ed79e6de9ec683fdbf3" translate="yes" xml:space="preserve">
          <source>The MIME &lt;em&gt;charset&lt;/em&gt;&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; for character encoding &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad98a2c9163e59183798aa158a5bac131fe990e" translate="yes" xml:space="preserve">
          <source>The MIME text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa43e940dce0e81b1058dc337c748ea3af663ba" translate="yes" xml:space="preserve">
          <source>The Map class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2086cbd111274033c6abb7d25f9c1d3f64172e4f" translate="yes" xml:space="preserve">
          <source>The Memcached class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a151389ba9f79f7785e0f7613ddfe873147e79" translate="yes" xml:space="preserve">
          <source>The MemcachedException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ceaf7df6dbcdfd471fabb7d7110db70c9d91ac" translate="yes" xml:space="preserve">
          <source>The Mersenne Twister implementation in PHP now uses a new seeding algorithm by Richard Wagner. Identical seeds no longer produce the same sequence of values they did in previous versions. This behavior is not expected to change again, but it is considered unsafe to rely upon it nonetheless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8798db1f57812cf343fc3a79fb67550e59220c19" translate="yes" xml:space="preserve">
          <source>The MessageFormatter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff23897a6bff6a903ccbc48e5d1192c47e86122d" translate="yes" xml:space="preserve">
          <source>The MessageFormatter class assembles messages from various fragments (such as text fragments, numbers, and dates) supplied by the program. Because of the MessageFormatter class, the program does not need to know the order of the fragments. The class uses the formatting specifications for the fragments to assemble them into a message that is contained in a single string within a resource bundle. For example, MessageFormatter enables you to print the phrase &quot;Finished printing x out of y files...&quot; in a manner that still allows for flexibility in translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347468613093f5c9153d7a928368f46dad29fe99" translate="yes" xml:space="preserve">
          <source>The MultipleIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c944552c79d095376e1cfc27367bc8d8985ab05" translate="yes" xml:space="preserve">
          <source>The Mutex class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c421c2545aa79021f2cfd8301a70c0dcc71852ac" translate="yes" xml:space="preserve">
          <source>The MySQL password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f686be1ea03f0961ac45a7a0b45e7f603b70d" translate="yes" xml:space="preserve">
          <source>The MySQL user name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaa17cc0f0cd7fcc8b963f6f212ef24d55b00e9" translate="yes" xml:space="preserve">
          <source>The MySQLi Driver version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd87f66723e40f456f5af12f8d6fe23c915b818" translate="yes" xml:space="preserve">
          <source>The Namespace name &lt;em&gt;PHP&lt;/em&gt;, and compound names starting with this name (like &lt;em&gt;PHP\Classes&lt;/em&gt;) are reserved for internal language use and should not be used in the userspace code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5532c3055a626fa6cb0c42e041cab774b0cf9f55" translate="yes" xml:space="preserve">
          <source>The NoRewindIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8528f21d2de348c66c1ef6451766a6c998e6708e" translate="yes" xml:space="preserve">
          <source>The Normalization setting determines whether text is thoroughly normalized or not in comparison. Even if the setting is off (which is the default for many locales), text as represented in common usage will compare correctly (for details, see UTN #5). Only if the accent marks are in noncanonical order will there be a problem. If the setting is &lt;em&gt;On&lt;/em&gt;, then the best results are guaranteed for all possible text input. There is a medium string comparison performance cost if this attribute is &lt;em&gt;On&lt;/em&gt;, depending on the frequency of sequences that require normalization. There is no significant effect on sort key length. If the input text is known to be in NFD or NFKD normalization forms, there is no need to enable this Normalization option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ec7de2e0cd539f585e5f1243d453c42cb62dbb" translate="yes" xml:space="preserve">
          <source>The Normalizer class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c4f149a0675705c734ce9c9e9f94aa1307ccc0" translate="yes" xml:space="preserve">
          <source>The NumberFormatter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0daa555962c60d7f8b2fa79cf46ecf2308945a" translate="yes" xml:space="preserve">
          <source>The OAuth class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b5b0e4e42dfd5bb01cc8cfd09a48a2f157fd96" translate="yes" xml:space="preserve">
          <source>The OAuth extension provides a simple interface to interact with data providers using the OAuth HTTP specification to protect private resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e686d0bf3acdab407ea4b37b34d1583221242a" translate="yes" xml:space="preserve">
          <source>The OAuth token secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c4c2676805c82285759cc05fb4690fe5465f6c" translate="yes" xml:space="preserve">
          <source>The OAuth token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39a180a5f76d54c46b7b614376b557eaf45d38e" translate="yes" xml:space="preserve">
          <source>The OAuthProvider class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687ad32b21bd119ec46438c81f5044c197cc31c7" translate="yes" xml:space="preserve">
          <source>The ODBC &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24727b7780fc097c4af315e66bd93a8e8c08919f" translate="yes" xml:space="preserve">
          <source>The ODBC connection identifier, see &lt;a href=&quot;function.odbc-connect&quot;&gt;odbc_connect()&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f6731b9983d01a9d276252185e19019e8d5e26" translate="yes" xml:space="preserve">
          <source>The OID of the field's base type. &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b90890cc70aeaa4023d19d3f0cb7bde7677fb95" translate="yes" xml:space="preserve">
          <source>The OutOfBoundsException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bbf5fa4ed9f23b3f26eae3184c9d4964301c31" translate="yes" xml:space="preserve">
          <source>The OutOfRangeException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f143deca23b2b0a08fb78aad8e635ed56e304ed" translate="yes" xml:space="preserve">
          <source>The OuterIterator interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bfbef34c2d76375a5afcecc33be7196e1da0fb" translate="yes" xml:space="preserve">
          <source>The OverflowException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc43b5f30e72bb38b212579b7a3f4cbe8f3a372" translate="yes" xml:space="preserve">
          <source>The PBKDF2 method can be used for hashing passwords for storage. However, it should be noted that &lt;a href=&quot;function.password-hash&quot;&gt;password_hash()&lt;/a&gt; or &lt;a href=&quot;function.crypt&quot;&gt;crypt()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;CRYPT_BLOWFISH&lt;/code&gt;&lt;/strong&gt; are better suited for password storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24480c0b3f1b6f2bd47a3259b0dbef1653a5a7b" translate="yes" xml:space="preserve">
          <source>The PCRE-specific options &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_UNGREEDY&lt;/a&gt; and &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_EXTRA&lt;/a&gt; can be changed in the same way as the Perl-compatible options by using the characters U and X respectively. The (?X) flag setting is special in that it must always occur earlier in the pattern than any of the additional features it turns on, even when it is at top level. It is best put at the start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135eb53bdff25949c1d089b416e486afd8eeea5e" translate="yes" xml:space="preserve">
          <source>The PDO class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e701a2ea0a297d54237b332e995d93961d9709" translate="yes" xml:space="preserve">
          <source>The PDOException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20911a8965fcd2c755be7e5f2df2bcf563bb27ea" translate="yes" xml:space="preserve">
          <source>The PDOStatement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e627c4f9fe3cafc48221f2955d27d9893ff23a" translate="yes" xml:space="preserve">
          <source>The PHP code to be highlighted. This should include the opening tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5470069a1a381e9e80cc5c2966b96e75b4228b6" translate="yes" xml:space="preserve">
          <source>The PHP constant &lt;strong&gt;&lt;code&gt;PHP_SAPI&lt;/code&gt;&lt;/strong&gt; has the same value as &lt;strong&gt;php_sapi_name()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404f3e7e98f7a0bb019fa74e19bbc7e52ff23114" translate="yes" xml:space="preserve">
          <source>The PHP data type for the returned field data. If this parameter is not set, the field data will be returned as its default PHP data type. For information about default PHP data types, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc296193.aspx&quot;&gt;&amp;raquo; Default PHP Data Types&lt;/a&gt; in the Microsoft SQLSRV documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3f2a2b22b52bd3e7bc0d31e21de6ff104d91fe" translate="yes" xml:space="preserve">
          <source>The PHP native type used to represent the column value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295c498441971be578b33e4536d48b173a98ff3a" translate="yes" xml:space="preserve">
          <source>The PHP script can then create a database connection by simply passing the &lt;em&gt;uri:&lt;/em&gt; parameter and pointing to the file URI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61a68107b52e87f6be46dcf2a8ba15042fe6eee" translate="yes" xml:space="preserve">
          <source>The PHP source to parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875de3a5051ee9b41e399a91b4c9e9cc84b2e454" translate="yes" xml:space="preserve">
          <source>The POSIX.1 and the setsid(2) manual page on the POSIX system for more information on process groups and job control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0cff3bd91448466f4fe8df04b214f917c5c34c" translate="yes" xml:space="preserve">
          <source>The Pair class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea1146ad5aac85eebd43f50841e7ae6a85d293c" translate="yes" xml:space="preserve">
          <source>The ParentIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f448a6844a3fadc82be215a17954ded213c2ed8" translate="yes" xml:space="preserve">
          <source>The Perl \G assertion is not supported as it is not relevant to single pattern matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0be845e0072b4f4482fb3af27abf0ccab661fbd" translate="yes" xml:space="preserve">
          <source>The Phar class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a46dde79b7af4772b36d7e21cb2240955185d71" translate="yes" xml:space="preserve">
          <source>The Phar class provides a high-level interface to accessing and creating phar archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9674fc3ba9762260f0074165f001fcd64ba6f87" translate="yes" xml:space="preserve">
          <source>The Phar flags (always &lt;em&gt;0&lt;/em&gt; in the current implementation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7796615a552669f54009e8efbc0f7f539af303c" translate="yes" xml:space="preserve">
          <source>The PharData class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9f025846659f94a8ee259451186e16ea4a1277" translate="yes" xml:space="preserve">
          <source>The PharData class provides a high-level interface to accessing and creating non-executable tar and zip archives. Because these archives do not contain a stub and cannot be executed by the phar extension, it is possible to create and manipulate regular zip and tar files using the PharData class even if &lt;em&gt;phar.readonly&lt;/em&gt; php.ini setting is &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eec87c53c30496eb3f4d791a43445f749e35597" translate="yes" xml:space="preserve">
          <source>The PharException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd576369818880416a0289c826f171fede10632e" translate="yes" xml:space="preserve">
          <source>The PharException class provides a phar-specific exception class for try/catch blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e621bd4fd6e694f5e157decffd5e8b69d2f6b5b0" translate="yes" xml:space="preserve">
          <source>The PharFileInfo class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3395dafbef618f01a39547155f9de8159077d02" translate="yes" xml:space="preserve">
          <source>The PharFileInfo class provides a high-level interface to the contents and attributes of a single file within a phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2545f81a97a7aa9484c9ab882949385f508fb15" translate="yes" xml:space="preserve">
          <source>The Pool class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ffa8e9638d3b37746441a90b0a9c848922e973" translate="yes" xml:space="preserve">
          <source>The PriorityQueue class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73734881e3a46feb5694fe4751a25e32c129c13a" translate="yes" xml:space="preserve">
          <source>The Query Phrase Slop is the amount of slop permitted on phrase queries explicitly included in the user's query string with the &lt;em&gt;qf&lt;/em&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f518f87b2d1be2f512c154f5f671899fcecff512" translate="yes" xml:space="preserve">
          <source>The Queue class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3726aac01f270f7a4066a776026c6c748c132951" translate="yes" xml:space="preserve">
          <source>The QuickHashIntHash class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a911c80eaf3e04b7bab3f516948cc6a7ce9a9e" translate="yes" xml:space="preserve">
          <source>The QuickHashIntSet class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4fee578a0c7f90f5a3a37fa4372de4f9bb852a" translate="yes" xml:space="preserve">
          <source>The QuickHashIntStringHash class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7c337b63c722b0f333137c47a4595d4e849d41" translate="yes" xml:space="preserve">
          <source>The QuickHashStringIntHash class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5014ccbebc518bc30caec854e4b804328d8271a" translate="yes" xml:space="preserve">
          <source>The RNG file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23da9e8d56ec22d735fa4f3042a45aba5a79c00" translate="yes" xml:space="preserve">
          <source>The ROT13 encoding simply shifts every letter by 13 places in the alphabet while leaving non-alpha characters untouched. Encoding and decoding are done by the same function, passing an encoded string as argument will return the original version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fe4d90494b8733d18e03cc66b155dc3a7527e6" translate="yes" xml:space="preserve">
          <source>The RPC server URI(http, tcp)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c5b1503fb06def68185b8de4ecaf681125b733" translate="yes" xml:space="preserve">
          <source>The RangeException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3fab7bc6fa10e1f23260b528d052c3b866a518" translate="yes" xml:space="preserve">
          <source>The RecursiveArrayIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1750800ae46912518fef7375f1c1dbbaff443be0" translate="yes" xml:space="preserve">
          <source>The RecursiveCachingIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf5e3e49420473b814a001b354348a601f243b1" translate="yes" xml:space="preserve">
          <source>The RecursiveCallbackFilterIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2e4e515a1d721133fd3fdd8dd28b41c6058efa" translate="yes" xml:space="preserve">
          <source>The RecursiveDirectoryIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ad2e2e0ad3e4523ebf539eeabb45e92214bebc" translate="yes" xml:space="preserve">
          <source>The RecursiveFilterIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b484129c3eb4a525062bf5144e34aa518896bb4e" translate="yes" xml:space="preserve">
          <source>The RecursiveIterator interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c933d880d13d0deb9b380f34baba781b3865079e" translate="yes" xml:space="preserve">
          <source>The RecursiveIteratorIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579f5165711ddf1665d0acbb1bc8fda99fec2531" translate="yes" xml:space="preserve">
          <source>The RecursiveRegexIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6330a40e17e9382dd2fcc1a809394f7ed072509e" translate="yes" xml:space="preserve">
          <source>The RecursiveTreeIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9dc79074b3525e5575f101da391f267e7f95e95" translate="yes" xml:space="preserve">
          <source>The Reflection class</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
