<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="ansible">
    <body>
      <group id="ansible">
        <trans-unit id="8dc8542587dc1a8bd8fe9380a0def37973687222" translate="yes" xml:space="preserve">
          <source>With state &lt;code&gt;present&lt;/code&gt;, if an interface is given, it will ensure that an IP inside this prefix (and vrf, if given) is attached to this interface. Otherwise, it will get the next available IP of this prefix and attach it. With state &lt;code&gt;new&lt;/code&gt;, it will force to get the next available IP in this prefix. If an interface is given, it will also force to attach it. Required if state is &lt;code&gt;present&lt;/code&gt; or &lt;code&gt;new&lt;/code&gt; when no address is given. Unused if an address is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee68f82ea93ea61f974b00b24a5ae641fddb385b" translate="yes" xml:space="preserve">
          <source>With the &amp;lsquo;&amp;rsquo;any_errors_fatal&amp;rsquo;&amp;rsquo; option, any failure on any host in a multi-host play will be treated as fatal and Ansible will exit as soon as all hosts in the current batch have finished the fatal task. Subsequent tasks and plays will not be executed. You can recover from what would be a fatal error by adding a rescue section to the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b526a0553f1aa616659510d3fc88a56aa99e178" translate="yes" xml:space="preserve">
          <source>With the &amp;lsquo;order&amp;rsquo; parameter you can control which field is used to sort first, next and last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c047d0464b2019f772d6490ddbf1bde0dbf82838" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;-k&lt;/code&gt; flag, you provide the SSH password(s) at the prompt. Alternatively, you can store SSH and other secrets and passwords securely in your group_vars files with &lt;code&gt;ansible-vault&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ef57e08c326e6618b76d93068089c2203c6d2c" translate="yes" xml:space="preserve">
          <source>With the configuration above, simply build and run the playbook as normal with no additional changes necessary. The network module will now connect to the network device by first connecting to the host specified in &lt;code&gt;ansible_ssh_common_args&lt;/code&gt;, which is &lt;code&gt;bastion01&lt;/code&gt; in the above example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c026e76b3deda75ea281d77df2b094cd3ea20008" translate="yes" xml:space="preserve">
          <source>With the following Ansible playbook you can find the VMware ESXi host system(s) and can perform various tasks depending on the list of host systems. This is a generic example to show how Ansible can be utilized to consume VMware HTTP APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c811825d0507d8175a2bdabb4f6f9be1f962b50d" translate="yes" xml:space="preserve">
          <source>With the following Ansible playbook you can find the folder path of an existing virtual machine using name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d1f7a5f8ca8580a4110856ec1677a2e7ef5479" translate="yes" xml:space="preserve">
          <source>With the following Ansible playbook you can rename an existing virtual machine by changing the UUID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238d63c5da0dcec20aa48ebf0e545ff9e2b3a6b8" translate="yes" xml:space="preserve">
          <source>With the free strategy, unlike the default linear strategy, a host that is slow or stuck on a specific task won&amp;rsquo;t hold up the rest of the hosts and tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a5c0fac5eb56488312cdec32ab3a3e5cb645d2" translate="yes" xml:space="preserve">
          <source>With the host group now created, a second play at the bottom of the same provisioning playbook file might now have some configuration steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc0e98bd5c7ee4eabccc36eccf4cc0673ca193c" translate="yes" xml:space="preserve">
          <source>With the host group now created, the next play in this playbook could now configure servers belonging to the raxhosts group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05da2160c91672763ea02d0a94726afd02acb114" translate="yes" xml:space="preserve">
          <source>With the module you can create schedule policies that can be a shell, onetime execution or recurring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f998aff92906decb0dc3421191f79a57f7af8d4" translate="yes" xml:space="preserve">
          <source>With the module you can retrieve and output detailed information about the attached disks of the target and its volumes and partitions if existent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd66b9b7af51a09d09616a25bb6c5afdf9265d3d" translate="yes" xml:space="preserve">
          <source>With the release of Ansible 2.5, the recommended way to perform loops is the use the new &lt;code&gt;loop&lt;/code&gt; keyword instead of &lt;code&gt;with_X&lt;/code&gt; style loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de548605945c91d1e7f7e91fb48db290665283a0" translate="yes" xml:space="preserve">
          <source>With this parameter it is possible, to add a NIC of a VM to a port mirroring session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435c99d6d725aee81e20762de3b69b72ad5eefc8" translate="yes" xml:space="preserve">
          <source>With this setting on (True), running conditional evaluation &amp;lsquo;var&amp;rsquo; is treated differently than &amp;lsquo;var.subkey&amp;rsquo; as the first is evaluated directly while the second goes through the Jinja2 parser. But &amp;lsquo;false&amp;rsquo; strings in &amp;lsquo;var&amp;rsquo; get evaluated as booleans. With this setting off they both evaluate the same but in cases in which &amp;lsquo;var&amp;rsquo; was &amp;lsquo;false&amp;rsquo; (a string) it won&amp;rsquo;t get evaluated as a boolean anymore. Currently this setting defaults to &amp;lsquo;True&amp;rsquo; but will soon change to &amp;lsquo;False&amp;rsquo; and the setting itself will be removed in the future. Expect the default to change in version 2.10 and that this setting eventually will be deprecated after 2.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ec1cdf88abf32765c9119912f2e12f2c870f43" translate="yes" xml:space="preserve">
          <source>With this setting on (True), running conditional evaluation &amp;lsquo;var&amp;rsquo; is treated differently than &amp;lsquo;var.subkey&amp;rsquo; as the first is evaluated directly while the second goes through the Jinja2 parser. But &amp;lsquo;false&amp;rsquo; strings in &amp;lsquo;var&amp;rsquo; get evaluated as booleans.With this setting off they both evaluate the same but in cases in which &amp;lsquo;var&amp;rsquo; was &amp;lsquo;false&amp;rsquo; (a string) it won&amp;rsquo;t get evaluated as a boolean anymore.Currently this setting defaults to &amp;lsquo;True&amp;rsquo; but will soon change to &amp;lsquo;False&amp;rsquo; and the setting itself will be removed in the future.Expect the default to change in version 2.10 and that this setting eventually will be deprecated after 2.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e711cf76d2ccfbf708e84e0578bd1482a3b17a" translate="yes" xml:space="preserve">
          <source>With this setup, you can run first_playbook.yml with only two flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd31cbd9ab7db8f97b094bc23f5fe4651227f8b" translate="yes" xml:space="preserve">
          <source>With those rules in mind, here are some examples of quoting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdeeb069b8955f52a3bfbedbd05a186d4fd0c1a" translate="yes" xml:space="preserve">
          <source>With virtual nodes, you have quick provisioning of pods, and only pay per second for their execution time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeb0785a2c960a0568997ca023ee49465ad91f5" translate="yes" xml:space="preserve">
          <source>Within any section, redefining a var will overwrite the previous instance. If multiple groups have the same variable, the last one loaded wins. If you define a variable twice in a play&amp;rsquo;s &lt;code&gt;vars:&lt;/code&gt; section, the second one wins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762088d06f7f3308cd7285699f394815b802ac1e" translate="yes" xml:space="preserve">
          <source>Within each precedence category, specific rules apply. However, generally speaking, &amp;lsquo;last defined&amp;rsquo; wins and overrides any previous definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b060e9c3d106b3525dea265e6b78d4e90ad75d2" translate="yes" xml:space="preserve">
          <source>Within playbook keywords, precedence flows with the playbook itself; the more specific wins against the more general:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c12e4a5150b142cc1a8e357f4869c1a5133b78" translate="yes" xml:space="preserve">
          <source>Without a MAC masquerade address, the sending host must learn the MAC address for a newly-active device, either by sending an ARP request or by relying on the gratuitous ARP from the newly-active device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73420d0c3fc651a00308095e890bc3b285fd735e" translate="yes" xml:space="preserve">
          <source>Without a leading &lt;code&gt;/&lt;/code&gt;, this is assumed to be in &lt;em&gt;/etc/cron.d&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79d850dad0d3dac5e9868a27f237c004f796912" translate="yes" xml:space="preserve">
          <source>Without this option, you must have already logged in via the 1Password CLI before running Ansible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85462d47f90e1b58e49d7d961bbb14a2a679e4d1" translate="yes" xml:space="preserve">
          <source>Without this, the destination address is never altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d87810549155a57d3bc864eea390d2f7237d58" translate="yes" xml:space="preserve">
          <source>Without this, the source address is never altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c899d6323a8ad83ea00395518dd8a8cfbe8c08" translate="yes" xml:space="preserve">
          <source>Wojciech Sciesinski (@it-praktyk)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f44e4d0e7a03e64e46cbe9f3b54c73d05ec3e9" translate="yes" xml:space="preserve">
          <source>Wojciech Wypior (@wojtek0806)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577ac1a18e05636244b642116532cc61a963dfce" translate="yes" xml:space="preserve">
          <source>WordPress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b8c7ad647034238e1b9ebd69f8d84c5316cb2a" translate="yes" xml:space="preserve">
          <source>Wordpress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d94c6aba7f03d1285fa422ba7a1091ad4624c7" translate="yes" xml:space="preserve">
          <source>Work with SecureString type to get plain text secrets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a431204cb3d1558bc26d38e301281eb9df1d92b" translate="yes" xml:space="preserve">
          <source>Workflow action name to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cd5e547d092e4547c4f7b921439fd842c317b2" translate="yes" xml:space="preserve">
          <source>Workflow action run completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349948d0e27d7e22f70b9dbfa96e20254091bdc7" translate="yes" xml:space="preserve">
          <source>Workflow template created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fff504f951b6ee4aea6728fbf20040ffe5c346" translate="yes" xml:space="preserve">
          <source>WorkflowTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e84f623985c22576f4be0a3b312d0e26857647" translate="yes" xml:space="preserve">
          <source>Working With Language-Specific Version Managers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9afe3a52da6992810d0cf2d192714bd627be37" translate="yes" xml:space="preserve">
          <source>Working With Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e217b7c8f25d6cb2124a204248b1a26adacfa0ce" translate="yes" xml:space="preserve">
          <source>Working With Playbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521c80126e2e560f50ff5297475c79ae445b9310" translate="yes" xml:space="preserve">
          <source>Working With Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd647b7328227c263692ad3c5a7cfeec6eddab11" translate="yes" xml:space="preserve">
          <source>Working directory for executable defined in &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99ad4febc599223f72fd4153ac620e9d211113c" translate="yes" xml:space="preserve">
          <source>Working directory to use when running this step's container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de91625eff4002f529d0ade35108a6dd0074af7" translate="yes" xml:space="preserve">
          <source>Working with Command Output in Network Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5ccd0e8172d630f7c98274ec85fd52e000e843" translate="yes" xml:space="preserve">
          <source>Working with Playbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccf30e886c42808e797513770a6136e05dd470f" translate="yes" xml:space="preserve">
          <source>Working with command line tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2daef3ef0493b547d3da94231a00d3dec68a86b" translate="yes" xml:space="preserve">
          <source>Working with dynamic inventory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686984c517077b75761608ddfc255dd27ba53205" translate="yes" xml:space="preserve">
          <source>Working with the Ansible repo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a9b48805ef3b6e273e1db6d0ae68aeff6f33ee" translate="yes" xml:space="preserve">
          <source>Works for anything such as ruby or perl and works just like &lt;a href=&quot;#ansible-python-interpreter&quot;&gt;ansible_python_interpreter&lt;/a&gt;. This replaces shebang of modules which will run on that host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556e33da4af186aa07571e171019c2cff9087ed1" translate="yes" xml:space="preserve">
          <source>Works for both inline and file imports, if the policy does not exist this setting is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453542db5ab63c0297eb87ea1febb03c3bcc0e80" translate="yes" xml:space="preserve">
          <source>Works in conjunction with period and evaluation_periods to determine the comparison value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cac2c38c8dc98ff9c0d8dc28377030bf2579be" translate="yes" xml:space="preserve">
          <source>Works only for ESXi hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c7781c413922d9c819c3fe5a8c1d9e0fcfffc9" translate="yes" xml:space="preserve">
          <source>Works only for existing sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2e79930f0f2152bbb699e34989e0688fb3fb68" translate="yes" xml:space="preserve">
          <source>Works only when &lt;code&gt;dest&lt;/code&gt; is a file. Creates the file if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765462e2b59d877ec04ca9eeedfaa40357fb4331" translate="yes" xml:space="preserve">
          <source>Works only with &amp;gt;= Zabbix 3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acee9c043cfc30b293d0bece2e537d902266ea54" translate="yes" xml:space="preserve">
          <source>Works only with &amp;gt;= Zabbix 3.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbd1ea68288b6d215382540736948d1872d96c1" translate="yes" xml:space="preserve">
          <source>Works only with &amp;gt;= Zabbix 3.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788d7432eb6939e000307e6fe65f36e185f31269" translate="yes" xml:space="preserve">
          <source>Works only with &lt;code&gt;state&lt;/code&gt;&lt;em&gt;present&lt;/em&gt; and &lt;em&gt;absent&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6f55cbf6cff803b26cf004fab8a65b6d4ca70c" translate="yes" xml:space="preserve">
          <source>Works only with Windows 2012 R2 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328273d17d06b9c95a266a3f9dbb4d4812e98d31" translate="yes" xml:space="preserve">
          <source>Works with &lt;code&gt;local&lt;/code&gt; connections only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0a9f72deef8943b59861f19346f6d9ed60d1c1" translate="yes" xml:space="preserve">
          <source>Works with Windows 2012R2 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7dad853ae8435c54590e3e45da7bec50b002de" translate="yes" xml:space="preserve">
          <source>Works with compose versions 1 and 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cae2198802c07123c042ae779aff2b11d00a5d" translate="yes" xml:space="preserve">
          <source>Works with the ec2_asg module to manage Autoscaling Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d2b1432d33ba5dd08df7e2b5daf7a700927302" translate="yes" xml:space="preserve">
          <source>Workspace resource path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d380b7ff46e10f2a2e73f54b0da23a89d5e5061c" translate="yes" xml:space="preserve">
          <source>Would create a directory named &lt;code&gt;/tmp/lib&lt;/code&gt;. Instead of the above, simply spell out the entire destination path like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68585853cc718d51e3704d0a575ca73249532bf" translate="yes" xml:space="preserve">
          <source>Wrapping IPv6 addresses in [ ] brackets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff39924bcd9a9a76aef7173ef5a6bb1538db1141" translate="yes" xml:space="preserve">
          <source>Wraps the msg.exe command in order to send messages to Windows hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ce4a431519ed9e7d333a464acbffcb85d459aa" translate="yes" xml:space="preserve">
          <source>Wraps the reg.exe command to import the contents of a registry file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1a450dffd213c7e246d0d689bb8f8684486e8b" translate="yes" xml:space="preserve">
          <source>Write an event log message this many days before the schedule expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e8e588e33b65e7377bb5b4cb812068250068e1" translate="yes" xml:space="preserve">
          <source>Write back cache policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f4a074b212277f7fac4a14961db339da16a08a" translate="yes" xml:space="preserve">
          <source>Write backup to a specific backupfile rather than a temp file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7f36e31599f090fe2becd05cb08db6dfe929be" translate="yes" xml:space="preserve">
          <source>Write cache size in byte of the particular virtual disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9471a6d62a3741feab6d8f0d544f1443dcd29094" translate="yes" xml:space="preserve">
          <source>Write data points into InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3a43edd0aadcff4a89c809b88e2efd92c42a15" translate="yes" xml:space="preserve">
          <source>Write locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade79b5b226c007c748f7cdcb59a19fc9e01eda2" translate="yes" xml:space="preserve">
          <source>Write log entries to a given event log from a specified source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2971b0599e17ca89c0c4905c729c8d90ce174d00" translate="yes" xml:space="preserve">
          <source>Write throughput capacity (units) to provision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad2b4606a3575f41d1992b556b998d2e7cab991" translate="yes" xml:space="preserve">
          <source>Writing modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c134b6728b15eb508e1747911101fb3469d5e5f1" translate="yes" xml:space="preserve">
          <source>Written name of network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de899dec92fff177fe08512bf79b578c9cfde4d1" translate="yes" xml:space="preserve">
          <source>WsYy2M6xMqvosIKIEH/FSsvhtWMe6xKOA6i7f...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd70a3fda252fee16adb8720a7003f1402047072" translate="yes" xml:space="preserve">
          <source>X axis coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfb174bafb41a6e863fb812e2716ac7e9cde792" translate="yes" xml:space="preserve">
          <source>X component of an EC public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df040a79f0074cb85efb9ee3a2d0ab37002d321" translate="yes" xml:space="preserve">
          <source>X position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e166b707811ca20852bef97feec27f3bae2da2a" translate="yes" xml:space="preserve">
          <source>X-F5-Authentication: foo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e62ecb16a8722552ecd3510ea8685b5a8fffd7" translate="yes" xml:space="preserve">
          <source>X-HTTP2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3690d31195486d224965fe06b2ccebc2bfa345a4" translate="yes" xml:space="preserve">
          <source>X-series caption font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403875a9d87108944db338ad6fb90413d1a1d242" translate="yes" xml:space="preserve">
          <source>X-series caption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e138bbb5b9eda8e9186e254e16b64b89c80b236" translate="yes" xml:space="preserve">
          <source>X-series label angle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb7f2d2f7a50a512b2aeccb1c80eb7b8ccde8db" translate="yes" xml:space="preserve">
          <source>X-series label font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301b40127d60ad12b51b7f96eabab7facf32359a" translate="yes" xml:space="preserve">
          <source>X-series of chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d247e1c15761d7ec074d1e757835656426b7ad" translate="yes" xml:space="preserve">
          <source>X-series represent category or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5a13f0ac0c665a2929d3b21ee6409fa69be282" translate="yes" xml:space="preserve">
          <source>X-series unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07519429cd0742a0cd2ad50575662fb65f18de9c" translate="yes" xml:space="preserve">
          <source>X-series value expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4590145268458005ff818a940acd5d70ab872d49" translate="yes" xml:space="preserve">
          <source>X25519</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d601b54aef3f5dad3b486cd78d2bfdd41108e7da" translate="yes" xml:space="preserve">
          <source>X2xXXxx7xxxxxx5xxxx0xxxxx75xxxxxxxxXXXxxxxx=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1a210cdcf74ff605ceeee78ea3b4156161eddf" translate="yes" xml:space="preserve">
          <source>X448</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e338571032c3fc8d1d34f255018fc4260896f1" translate="yes" xml:space="preserve">
          <source>X509 certificate to authenticate to Foreman if https is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649d6097ce35219df76d2809828f63a801859e10" translate="yes" xml:space="preserve">
          <source>XAuth password (max 35 characters).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836c1fa1484f498fcba3133262c325f9392dea96" translate="yes" xml:space="preserve">
          <source>XAuth type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dc9c6dfcc8b10f927fd9647320fb52e59fb968" translate="yes" xml:space="preserve">
          <source>XAuth user name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a037b48f03f1b0326d3e41adcde535490aefe9" translate="yes" xml:space="preserve">
          <source>XFS Will only grow if mounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f9d0d16d02a20ef369e6029d9e5929c3d70d3e" translate="yes" xml:space="preserve">
          <source>XL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67852e63c146d764f6de5b7859b842645b0fd69" translate="yes" xml:space="preserve">
          <source>XLAB d.o.o. (@xlab-si)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de1af4c1dcba3dfbd45d5ac5b862668d7afd346" translate="yes" xml:space="preserve">
          <source>XLSX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330cc22156e8a3655e29d496eafc8d183612965e" translate="yes" xml:space="preserve">
          <source>XML PARSING ERROR: Element 'computeRackUnit', attribute 'admin_Power': The attribute 'admin_Power' is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4466272bfe43e213d4aa14170b8043b47d66b64a" translate="yes" xml:space="preserve">
          <source>XML comparison exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68de3d76a1d3c930f06b5ab3f2a9ddaa9dc09db7" translate="yes" xml:space="preserve">
          <source>XML document used with the define command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468a752bd5c81483e57e995c10301a577d273ab7" translate="yes" xml:space="preserve">
          <source>XML dump of templates to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64b861d991d487484ff250c419d8c81241f59d0" translate="yes" xml:space="preserve">
          <source>XML fragments, formatted as strings, are used to specify the desired state of a part or parts of XML files on remote Windows servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0848e4fac4de0bddb97a359e6d6aee721c98471f" translate="yes" xml:space="preserve">
          <source>XML manipulation for Posix hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c8b3d3564791b6433587e765c7d7391e5114d" translate="yes" xml:space="preserve">
          <source>XML over SSH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29638b6867eea69d85344dd8d0664f269dfb2e82" translate="yes" xml:space="preserve">
          <source>XML payloads require the &lt;code&gt;lxml&lt;/code&gt; and &lt;code&gt;xmljson&lt;/code&gt; python libraries. For JSON payloads nothing special is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86c9a561d547a80b71c46aebcf5fd2d25b4bf5b" translate="yes" xml:space="preserve">
          <source>XPath Reference document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0384cd9131b72bfb4e5eab1c45ef96ab1ee68e" translate="yes" xml:space="preserve">
          <source>XPath selection relative to the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a63fabb94866f09948c35e2bf2974eaba8405c" translate="yes" xml:space="preserve">
          <source>XXL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4195e844ce54b296580221a44238903e82240385" translate="yes" xml:space="preserve">
          <source>XXXXX-XXXXX-XXXXX-XXXXX-XXXXXXX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b496ac9e695ef448b011d5080f302599fb9ba0c" translate="yes" xml:space="preserve">
          <source>XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881d5e155653d7a7988e065cd40f447ddcc5d99c" translate="yes" xml:space="preserve">
          <source>XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX:bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2a62c1642c1c6aa0f51ce8cc055638fa80eaf1" translate="yes" xml:space="preserve">
          <source>XXXXXXXXXXXX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545d776d60027d3c2057ab50748cd61893a2b71d" translate="yes" xml:space="preserve">
          <source>Xabier Larrakoetxea (@slok)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510e06aecd630db512279a5ce0f26059be0a4026" translate="yes" xml:space="preserve">
          <source>Xapi method name which supports 'xpath' or 'xpath' and 'element'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40067a8cb18d20b09887fac67c031f7d87635c9" translate="yes" xml:space="preserve">
          <source>Xen Block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7749311dcebf27078d79e4b024b1e7904364c6d" translate="yes" xml:space="preserve">
          <source>XenAPI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3eea46b2f86d395aa8070f5cf3c301eea89fff4" translate="yes" xml:space="preserve">
          <source>Xenserver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564f0fe354eadf07331c89fceb52e393d5d10d5a" translate="yes" xml:space="preserve">
          <source>Ximon Eighteen (@ximon18)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3b2b8c9063a5608405c29681099b5000c741b7" translate="yes" xml:space="preserve">
          <source>Xml module development community wiki</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b58eda87a31514e6ac569594f0f4174e0c96957" translate="yes" xml:space="preserve">
          <source>Xpath to select the node or nodes to operate on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d59734cbe985cad10903965c69654e291cdae24" translate="yes" xml:space="preserve">
          <source>Y axis coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c9e470f65bce4647044b7b341f76325072ff77" translate="yes" xml:space="preserve">
          <source>Y component of an EC public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45712f54c032c040d7df24693060e5a31df3395d" translate="yes" xml:space="preserve">
          <source>Y position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32994f2a492002f4f11ce294ca25042d2584d6b8" translate="yes" xml:space="preserve">
          <source>Y-m-d H:M</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed762097be1ff0e0a4f2a3007dd637cf7779dc7" translate="yes" xml:space="preserve">
          <source>Y-series caption font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea21803f4dca42e81f2a87c61566f52eb9345c5" translate="yes" xml:space="preserve">
          <source>Y-series caption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0bf6977a6771f667d34b4072968ba43ddf518b" translate="yes" xml:space="preserve">
          <source>Y-series group option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687ee7f5fccff6ccd372ce696ea3962f87b64bc3" translate="yes" xml:space="preserve">
          <source>Y-series label angle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3cb8559dcf79276b9fd9d9ef5f14da4b0118c3" translate="yes" xml:space="preserve">
          <source>Y-series label font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531dedf71a3a291e958dcb97ad7a6ef6ef12b3ff" translate="yes" xml:space="preserve">
          <source>Y-series of chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc85e552d24bfa73146afe761b1aa37dccc508b" translate="yes" xml:space="preserve">
          <source>Y-series unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42c70b46f21152bdb17f6410cd4139b99f2d579" translate="yes" xml:space="preserve">
          <source>Y-series value expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1263543d1853b7fcfa58dea8dac9bc7b5e8cf863" translate="yes" xml:space="preserve">
          <source>YAML 1.1 Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbf278648d45679310c8d5603b2745453aedc70" translate="yes" xml:space="preserve">
          <source>YAML 1.2 Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a41b980587c20e2a29d6a0beb1a2d9f18c449e" translate="yes" xml:space="preserve">
          <source>YAML Basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5270555d3c9cf0b194fb3711ecc39694292fe1" translate="yes" xml:space="preserve">
          <source>YAML Lint (online) helps you debug YAML syntax if you are having problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3a5ed547aed6598c10069755dcf7c1d0a97f39" translate="yes" xml:space="preserve">
          <source>YAML Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6484f33f1e223d7ed74da84fccf2caf89a96d41b" translate="yes" xml:space="preserve">
          <source>YAML Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11c0ababe729a8f16e9a90df9ebbbbcbdafb696" translate="yes" xml:space="preserve">
          <source>YAML also supports dictionaries which map keys to values. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830244bdd6b8581c5d4542a4dfca201557139c69" translate="yes" xml:space="preserve">
          <source>YAML anchors and aliases: sharing variable values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c97e2e92aedf135d5eadde446c028015269bfe" translate="yes" xml:space="preserve">
          <source>YAML converts certain strings into floating-point values, such as the string &lt;code&gt;1.0&lt;/code&gt;. If you need to specify a version number (in a requirements.yml file, for example), you will need to quote the value if it looks like a floating-point value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a898f905d76dae221ad63d3efaa6e13c4f26ef" translate="yes" xml:space="preserve">
          <source>YAML syntax requires that if you start a value with &lt;code&gt;{{ foo }}&lt;/code&gt; you quote the whole line, since it wants to be sure you aren&amp;rsquo;t trying to start a YAML dictionary. This is covered on the &lt;a href=&quot;../reference_appendices/yamlsyntax#yaml-syntax&quot;&gt;YAML Syntax&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920a10a2b40b4d9fc8ad07582cb367beefbe741a" translate="yes" xml:space="preserve">
          <source>YAML-based inventory, should start with the &lt;code&gt;all&lt;/code&gt; group and contain hosts/vars/children entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c6b5bc6d8aa17864d73edd081b54acbb8d2eca" translate="yes" xml:space="preserve">
          <source>YAMLLint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e52b9cf9a308049e8cbbc0a97e4d5102f8f90f9" translate="yes" xml:space="preserve">
          <source>YAML_FILENAME_EXTENSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590bbad66e5c1a716f4805eec9868860e2065bf3" translate="yes" xml:space="preserve">
          <source>YANG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73efd5cbae67668d47545069212828de7cb29ee" translate="yes" xml:space="preserve">
          <source>YE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2857a6a7d922a20f4e8b76ba0339ead374f1165d" translate="yes" xml:space="preserve">
          <source>YYYY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c97063b7e85ccc8a30e98335b2b02bd38a09fde" translate="yes" xml:space="preserve">
          <source>YYYY-MM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f8f7b810c4b08f0b4ac4e47fdf8d265a10d869" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c101c152903d609e594f1cce78f3a7820efc4377" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD HH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb2168343eec867fc7f82c6cdab396f9c5a9fa6" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD-HH-MM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5287b3b9e3facf062e9efd7e2786c3844be0e7" translate="yes" xml:space="preserve">
          <source>Yaakov Kuperman (@yaakov-github)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f792a4101b1ae00a883257ec70425a77e01031b" translate="yes" xml:space="preserve">
          <source>Yaegashi Takeshi (@yaegashi)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa419b4f6f26f48e7bd3d143431476c06cb2a9c6" translate="yes" xml:space="preserve">
          <source>Yahoo! Mail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413661a207685c747ffa1b3a5f75679287e7ce03" translate="yes" xml:space="preserve">
          <source>Yang path to be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23832daa6b432477bbf5b276ffd7a7e1d0d14932" translate="yes" xml:space="preserve">
          <source>Yang yang (@QijunPan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66270594dc7725c0d3b223d8ea52065a9e9d1eb0" translate="yes" xml:space="preserve">
          <source>YangYang (@QijunPan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098da8c078d0824d114dec7f4f47c955a9c39125" translate="yes" xml:space="preserve">
          <source>Yanis Guenane (@Spredzy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3d0738c30fe554ac15f656b92813cb5c2412d2" translate="yes" xml:space="preserve">
          <source>Yannig Perre &amp;lt;yannig.perre(at)gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83873f1c8a627b53a8124020a836cb3d0b597cb1" translate="yes" xml:space="preserve">
          <source>Yap Sok Ann (@sayap)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb476e1209c9d0f52c0d3aeae0a4eae77bff117" translate="yes" xml:space="preserve">
          <source>Yarn installed in bin path (typically /usr/local/bin)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b6e453455b82e0097cb0edca21930a162b02f" translate="yes" xml:space="preserve">
          <source>Yarn will ignore any dependencies under devDependencies in package.json</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14ed0021333d3bac107938a8d9a38e3da890456" translate="yes" xml:space="preserve">
          <source>Yawei Wang (@yaweiw)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879e32326c5217968ac8e3a14e4a8a5214957264" translate="yes" xml:space="preserve">
          <source>Year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7622eb5aa42dee6ea6c65f47b2410246c3c3da7d" translate="yes" xml:space="preserve">
          <source>Yearly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941e59a985a28411001b49ddba2454b6f0e5578e" translate="yes" xml:space="preserve">
          <source>Yes. &lt;code&gt;vmware_guest&lt;/code&gt; can deploy a virtual machine with required settings on a standalone ESXi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d55f9b6228d56d646b5cdc3a2ea12b072544ea" translate="yes" xml:space="preserve">
          <source>Yeukhon Wong (@yeukhon)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cf12606ea05423e8d8cc3987d09ce798236057" translate="yes" xml:space="preserve">
          <source>You are advised to pass XML structure matching the structure used by your version of Zabbix server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3a636519236abc9677b93f636a8aff1a41155b" translate="yes" xml:space="preserve">
          <source>You are still able overwrite the environment variables using the module arguments, e.g. &lt;code&gt;zone: sf-2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d32e30ad9d1685bed8fb7fe3cd892fc7b299f6" translate="yes" xml:space="preserve">
          <source>You can (and probably will) put each host in more than one group. For example a production webserver in a datacenter in Atlanta might be included in groups called [prod] and [atlanta] and [webservers]. You can create groups that track:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8927e850eba69f3bd150c23c5365cb1cc3bc4fb2" translate="yes" xml:space="preserve">
          <source>You can access these playbooks at &lt;a href=&quot;https://github.com/network-automation/infoblox_ansible/tree/master/lookup_playbooks&quot;&gt;Infoblox lookup playbooks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d042db3723a266dabafb748f5bfed2a908c0dbf" translate="yes" xml:space="preserve">
          <source>You can achieve similar results to the pre-2.8 behavior, by using an explicit &lt;code&gt;gather_facts&lt;/code&gt; task in your &lt;code&gt;tasks&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e52e9bdbe5f675314ea8247e835259bd5d2c469" translate="yes" xml:space="preserve">
          <source>You can activate a custom callback by either dropping it into a &lt;code&gt;callback_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the callback directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6593ed2c8493eda1ef69795d5d15d732d67867" translate="yes" xml:space="preserve">
          <source>You can activate a custom lookup by either dropping it into a &lt;code&gt;lookup_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the lookup directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0c6d776c704841f9e38fcca4f9ccd11b901d94" translate="yes" xml:space="preserve">
          <source>You can activate a custom vars plugin by either dropping it into a &lt;code&gt;vars_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879dc88626187f73280d988fd429b107a494c806" translate="yes" xml:space="preserve">
          <source>You can add a custom shell plugin by dropping it into a &lt;code&gt;shell_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the shell plugin directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4e855d515bff6ed265d40a01c95a8a34e7403a" translate="yes" xml:space="preserve">
          <source>You can also add &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; directories to your playbook directory. The &lt;code&gt;ansible-playbook&lt;/code&gt; command looks for these directories in the current working directory by default. Other Ansible commands (for example, &lt;code&gt;ansible&lt;/code&gt;, &lt;code&gt;ansible-console&lt;/code&gt;, etc.) will only look for &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; in the inventory directory. If you want other commands to load group and host variables from a playbook directory, you must provide the &lt;code&gt;--playbook-dir&lt;/code&gt; option on the command line. If you load inventory files from both the playbook directory and the inventory directory, variables in the playbook directory will override variables set in the inventory directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675f8e852bf504996b19a96e32130df85095eae0" translate="yes" xml:space="preserve">
          <source>You can also add special local accounts like SYSTEM and others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c196721e5aa2b4a434446b8a3cb9ef0e8312877" translate="yes" xml:space="preserve">
          <source>You can also build an RPM yourself. From the root of a checkout or tarball, use the &lt;code&gt;make rpm&lt;/code&gt; command to build an RPM you can distribute and install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5241613cf756dffa887caaddf2bc92aec11e842" translate="yes" xml:space="preserve">
          <source>You can also check how many IP addresses can be in a certain range:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0db22efd51492320bef7a2314241d2a627ba848" translate="yes" xml:space="preserve">
          <source>You can also choose a specific version, i.e &lt;code&gt;ansible25&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b55661256edeead5836e563875a9a1f1848f4bf" translate="yes" xml:space="preserve">
          <source>You can also combine multiple conditions for failure. This task will fail if both conditions are true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3fb61e13f5632d3c4d247e8b42c1dd06210813" translate="yes" xml:space="preserve">
          <source>You can also combine multiple conditions to override &amp;ldquo;changed&amp;rdquo; result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750be288488af0a7177ab22546a0026843c59b37" translate="yes" xml:space="preserve">
          <source>You can also control the order in which hosts are run. The default is to follow the order supplied by the inventory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e497e1715b8c404f22b68ea1f60ee87b910bae6" translate="yes" xml:space="preserve">
          <source>You can also create &lt;em&gt;directories&lt;/em&gt; named after your groups or hosts. Ansible will read all the files in these directories in lexicographical order. An example with the &amp;lsquo;raleigh&amp;rsquo; group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee1546b5225eba66027077c7e7f9e28e37a37d5" translate="yes" xml:space="preserve">
          <source>You can also create an inventory by combining multiple inventory sources and source types under a directory. This can be useful for combining static and dynamic hosts and managing them as one inventory. The following inventory combines an inventory plugin source, a dynamic inventory script, and a file with static hosts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5410ae77f6281f79f3340fe7ec13bb750f18de78" translate="yes" xml:space="preserve">
          <source>You can also define aliases in your inventory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076c90f02c54343abd9fc07d283c71aeb16efbbb" translate="yes" xml:space="preserve">
          <source>You can also directly run Ansible in &lt;a href=&quot;https://shell.azure.com&quot;&gt;Azure Cloud Shell&lt;/a&gt;, where Ansible is pre-installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb80bf09922009b16f60ecb5fcaf676296074edc" translate="yes" xml:space="preserve">
          <source>You can also directly use the tarball from your build:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ff69ae44e5d7fefa75cc9cefaf1f336303ff3b" translate="yes" xml:space="preserve">
          <source>You can also filter this output to display only certain facts, see the &lt;a href=&quot;../modules/setup_module#setup-module&quot;&gt;setup&lt;/a&gt; module documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447950a05c7e416856e4c3e1955689ebbe3ca8e1" translate="yes" xml:space="preserve">
          <source>You can also identify specific Packet devices with the &amp;lsquo;device_ids&amp;rsquo; parameter. The device&amp;rsquo;s UUID can be found in the &lt;a href=&quot;https://app.packet.net/portal&quot;&gt;Packet Portal&lt;/a&gt; or by using a &lt;a href=&quot;https://www.packet.net/developers/integrations/&quot;&gt;CLI&lt;/a&gt;. The following playbook removes a Packet device using the &amp;lsquo;device_ids&amp;rsquo; field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c16eb4f542500b224841fd9e1d97babecd5df1" translate="yes" xml:space="preserve">
          <source>You can also implicitly use the Infoblox dynamic inventory script by including it in your inventory directory (&lt;code&gt;etc/ansible/hosts&lt;/code&gt; by default). See &lt;a href=&quot;../user_guide/intro_dynamic_inventory#dynamic-inventory&quot;&gt;Working with dynamic inventory&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559277171bd037232e2fab4c642a8342a6cfcca7" translate="yes" xml:space="preserve">
          <source>You can also keep a collection adjacent to the current playbook, under a &lt;code&gt;collections/ansible_collections/&lt;/code&gt; directory structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b95cf23dbc17ede8a779ee4ccffe4512126381" translate="yes" xml:space="preserve">
          <source>You can also login as you, and then become a user different than root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a149f7e7f291ecf1ae65860f58528abe7a9982b8" translate="yes" xml:space="preserve">
          <source>You can also look at the backup files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cccb26c0afac3755e65a97eb26af3476febbbd7" translate="yes" xml:space="preserve">
          <source>You can also mix and match the values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb01ed0389d5b0529769bfb05c096c0367f118d" translate="yes" xml:space="preserve">
          <source>You can also navigate directly to the role using the /&amp;lt;namespace&amp;gt;/&amp;lt;role name&amp;gt;. For example, to view the role geerlingguy.apache, go to &lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/apache&quot;&gt;https://galaxy.ansible.com/geerlingguy/apache&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a3b9cdf5728282e666cc985a63250b132117c9" translate="yes" xml:space="preserve">
          <source>You can also optionally force a Refresh of the Storage System in vCenter/ESXi Web Client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3299a66dfa0718b7621b2542da2af10bcc5e660b" translate="yes" xml:space="preserve">
          <source>You can also override as a normal variable in a play:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab8d2aef6a5df65ab053dc72be431f2880215b8" translate="yes" xml:space="preserve">
          <source>You can also override the default name of the script by defining DOCKER_CONFIG_FILE in the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec64733feb7fa01563ed089349f8553b6e39aea9" translate="yes" xml:space="preserve">
          <source>You can also pass a url or a local path to a rpm file (using state=present). To operate on several packages this can accept a comma separated string of packages or (as of 2.0) a list of packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53854b69c10d1e1c8a77f8d63d7f65f7195d1768" translate="yes" xml:space="preserve">
          <source>You can also pass a url or a local path to a rpm file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb13a6676dd55cafa729b9d6bbbe9063f3340c6" translate="yes" xml:space="preserve">
          <source>You can also pass the values as variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b708d0fe5c10d956149301619328f4c044aa4b" translate="yes" xml:space="preserve">
          <source>You can also pass variables into imports and includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06584456505d1de9b3632f7b6ce8f2fe9eb6d67b" translate="yes" xml:space="preserve">
          <source>You can also read a property file which - in this case - does not contain section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8d1f30aee6fc166b6d3cff832357b519069045" translate="yes" xml:space="preserve">
          <source>You can also require a specific IP protocol version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2921d463b7216b21cac77ba51bcc1ae0b4210537" translate="yes" xml:space="preserve">
          <source>You can also run &lt;code&gt;SecEdit.exe /export /cfg C:\temp\output.ini&lt;/code&gt; to view the current policies set on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a495d11205d77e13d5163e17e6b1ff190411d2" translate="yes" xml:space="preserve">
          <source>You can also select IP addresses from a range by their index, from the start or end of the range:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068f1c9e4037fcacfd966f71e4463ee2ff0f34f2" translate="yes" xml:space="preserve">
          <source>You can also set &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_VAULT_PASSWORD_FILE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_VAULT_PASSWORD_FILE&lt;/code&gt;&lt;/a&gt; environment variable, e.g. &lt;code&gt;ANSIBLE_VAULT_PASSWORD_FILE=~/.vault_pass.txt&lt;/code&gt; and Ansible will automatically search for the password in that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e613b6f1c724c66c1f444875588f2f86f670df95" translate="yes" xml:space="preserve">
          <source>You can also set the attributes of child elements like cpu and processModel, see the examples to see how it is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09519a8169040af7459b3c744d8c300cd485f114" translate="yes" xml:space="preserve">
          <source>You can also set the proxy target for all hosts by using environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2f27853dae8349666167136992ccad8591888b" translate="yes" xml:space="preserve">
          <source>You can also set this as an environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3333d96aa899111037a4c6f18a9b2ae6b16c0ee6" translate="yes" xml:space="preserve">
          <source>You can also setup a &lt;code&gt;requirements.yml&lt;/code&gt; file to install multiple collections in one command. This file is a YAML file in the format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59302d9df322827ff1d8378e60441d89e3d8b100" translate="yes" xml:space="preserve">
          <source>You can also specify an arbitrary ICMP message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007ac8dc80cd44526d058c09a09e27a8d79135ed" translate="yes" xml:space="preserve">
          <source>You can also specify an arbitrary code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e18a69e891cda9e6dcad7302fe4eba2acc9b826" translate="yes" xml:space="preserve">
          <source>You can also specify category name by specifying colon separated value. For example, &quot;category_name:tag_name&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f42373cdb3a38a2e723b0c15a898c26cbd84625" translate="yes" xml:space="preserve">
          <source>You can also specify datastore storage cluster. version_added: 2.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e65a1eaf5a48519a7aa1375f1d11dba9363add" translate="yes" xml:space="preserve">
          <source>You can also specify template or VM UUID for identifying source. version_added 2.8. Use &lt;code&gt;hw_product_uuid&lt;/code&gt; from vmware_guest_facts as UUID value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a99571d72502e9ddc1942cfa69cc021a2446de0" translate="yes" xml:space="preserve">
          <source>You can also specify the strategy plugin in the play via the &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;strategy keyword&lt;/a&gt; in a play:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9015f54847c0ad5c36adfedbc4f309b9034cd562" translate="yes" xml:space="preserve">
          <source>You can also use &amp;ldquo;sudo make install&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460803a3b5850bdf5f0f48ce2c3361809f8bffb9" translate="yes" xml:space="preserve">
          <source>You can also use it at a play level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ad22534ff9e874fa5ea4a44baef09fd7cf9cca" translate="yes" xml:space="preserve">
          <source>You can also use keyword &lt;code&gt;become&lt;/code&gt; on a particular task instead of the whole play:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007f2242d45f1dabd6a04b7bc5ca254f0bf87d98" translate="yes" xml:space="preserve">
          <source>You can also use keywords &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;samehost&lt;/code&gt;, and &lt;code&gt;samenet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee03acd543412429b6f9fc6b48f5bb138dab69" translate="yes" xml:space="preserve">
          <source>You can also use nested groups to simplify &lt;code&gt;prod&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; in this inventory, for the same result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf3263fa79cda0eaf8cb459198cbe4a354fb952" translate="yes" xml:space="preserve">
          <source>You can also use other privilege escalation methods, like su:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335cb83f8086c32bbeda0efac486ce66fd92e5a6" translate="yes" xml:space="preserve">
          <source>You can also use parentheses to group conditions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1dd10cf38baf340d8b6fdd9b3bb9cc7203e078" translate="yes" xml:space="preserve">
          <source>You can also use these variables in templates, like this, in &lt;code&gt;roles/common/templates/ntp.conf.j2&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efca774acc46ddf364ed5b8ade214618a9cf532" translate="yes" xml:space="preserve">
          <source>You can apply the same tag to more than one task. When a play is run using the &lt;code&gt;--tags&lt;/code&gt; command-line option, all tasks with that tag name will be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e055192f7f6a49f618b6372851f7e314498484fe" translate="yes" xml:space="preserve">
          <source>You can automate this by using the following Ansible task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0b895b18168d8767fc2ab37d31b94eda09bf84" translate="yes" xml:space="preserve">
          <source>You can change the behavior of the patterns defined in playbooks using command-line options. For example, you can run a playbook that defines &lt;code&gt;hosts: all&lt;/code&gt; on a single host by specifying &lt;code&gt;-i 127.0.0.2,&lt;/code&gt;. This works even if the host you target is not defined in your inventory. You can also limit the hosts you target on a particular run with the &lt;code&gt;--limit&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae9401508e71476f1b3b014b943f93a50fcd0f1" translate="yes" xml:space="preserve">
          <source>You can change this behavior by setting the group variable &lt;code&gt;ansible_group_priority&lt;/code&gt; to change the merge order for groups of the same level (after the parent/child order is resolved). The larger the number, the later it will be merged, giving it higher priority. This variable defaults to &lt;code&gt;1&lt;/code&gt; if not set. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b65a032ab187dc3c8887b72e1a1dc10520234f" translate="yes" xml:space="preserve">
          <source>You can change this behavior with the &lt;code&gt;--force-handlers&lt;/code&gt; command-line option, or by including &lt;code&gt;force_handlers: True&lt;/code&gt; in a play, or &lt;code&gt;force_handlers = True&lt;/code&gt; in ansible.cfg. When handlers are forced, they will run when notified even if a task fails on that host. (Note that certain errors could still prevent the handler from running, such as a host becoming unreachable.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a0fe96a37a201aae6be86cd7f37df38d153c02" translate="yes" xml:space="preserve">
          <source>You can change this number to any number you want, however, it should be 3 times the interval number of seconds plus 1 second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274e104816ebfa68cf86bfe51ebd97d9082c46b0" translate="yes" xml:space="preserve">
          <source>You can check if IP addresses or network ranges are accessible on a public Internet, or if they are in private networks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbbd3f68cee2e3c5606b317e1b330a49e383cd0" translate="yes" xml:space="preserve">
          <source>You can check list of available models here: &lt;a href=&quot;https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml&quot;&gt;https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbb2d63bb07291e2c00ceb302d0e3e32d88f31f" translate="yes" xml:space="preserve">
          <source>You can check which values are specifically network ranges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0b33b60ddda87823b63c78dc883bbfec52463c" translate="yes" xml:space="preserve">
          <source>You can choose seconds, minutes, hours, days or weeks by specifying the first letter of an of those words (e.g., &quot;2s&quot;, &quot;10d&quot;, 1w&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a25e398d242ea37c2f21149b6a627bc1e48ee5" translate="yes" xml:space="preserve">
          <source>You can choose seconds, minutes, hours, days, or weeks by specifying the first letter of any of those words (e.g., &quot;1w&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0566907594a621255aed97290d52ec7c5407f31c" translate="yes" xml:space="preserve">
          <source>You can collate multiple IMC XML fragments and they will be processed sequentially in a single stream, the Cisco IMC output is subsequently merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d42fb1f12497222bc0c83c254d0474bc62b1a90" translate="yes" xml:space="preserve">
          <source>You can combine lookups with &lt;a href=&quot;../user_guide/playbooks_filters#playbooks-filters&quot;&gt;Filters&lt;/a&gt;, &lt;a href=&quot;../user_guide/playbooks_tests#playbooks-tests&quot;&gt;Tests&lt;/a&gt; and even each other to do some complex data generation and manipulation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5b16142f3e879071c5c88e44c561165c355f12" translate="yes" xml:space="preserve">
          <source>You can combine to set order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a856576d7dc174e19b4e85d87881b5868ec6d65" translate="yes" xml:space="preserve">
          <source>You can conditionally import a role and execute its tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad5ff451ba4e5ac458285f9c43f1789269cee6b" translate="yes" xml:space="preserve">
          <source>You can configure other settings in this file such as the default domain. See &lt;a href=&quot;https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html&quot;&gt;krb5.conf&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b75bb76d86af880881c280bb49158e9e864946" translate="yes" xml:space="preserve">
          <source>You can configure this to use other servers (such as Red Hat Automation Hub or a custom Galaxy server) as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9005ecd669af94fb5dbd0862ced8bba8b05bc22" translate="yes" xml:space="preserve">
          <source>You can confirm the file has been successfully sourced by running a simple command, such as &lt;code&gt;nova list&lt;/code&gt; and ensuring it return no errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b397aa16318bc416603b12e8f3da666108090cff" translate="yes" xml:space="preserve">
          <source>You can connect to a local or remote API using parameters passed to each task or by setting environment variables. The order of precedence is command line parameters and then environment variables. If neither a command line option or an environment variable is found, a default value will be used. The default values are provided under &lt;a href=&quot;#parameters&quot;&gt;Parameters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cebc0916f00e0a388f3c1d1b51c1413b928fb04" translate="yes" xml:space="preserve">
          <source>You can control host groupings and host selection by either defining environment variables or creating an azure_rm.ini file in your current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba74e33695b2b261335de89052318701219620b5" translate="yes" xml:space="preserve">
          <source>You can control the behavior of the inventory script by defining environment variables, or creating a docker.yml file (sample provided in ansible/contrib/inventory). The order of precedence is the docker.yml file and then environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f16743fc76b868e32f93e38bb496acdaf406473" translate="yes" xml:space="preserve">
          <source>You can control the use of &lt;code&gt;become&lt;/code&gt; with play or task directives, connection variables, or at the command line. If you set privilege escalation properties in multiple ways, review the &lt;a href=&quot;../reference_appendices/general_precedence#general-precedence-rules&quot;&gt;general precedence rules&lt;/a&gt; to understand which settings will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d9ca5b0b37de7e5e7ed054936964a2cb6e5469" translate="yes" xml:space="preserve">
          <source>You can convert IP addresses to PTR records:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156e9de25cc4f4e1151733d02608bfb8d6a2368f" translate="yes" xml:space="preserve">
          <source>You can convert IP addresses to integers, the same way that you can convert integers into IP addresses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174507a818256e58764e073d9f998ccbbaa81148" translate="yes" xml:space="preserve">
          <source>You can convert IPv4 address to &lt;a href=&quot;https://en.wikipedia.org/wiki/Hexadecimal&quot;&gt;Hexadecimal notation&lt;/a&gt; with optional delimiter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8e954248a1ff779b7487b3869e05c7a633e019" translate="yes" xml:space="preserve">
          <source>You can convert IPv4 addresses into IPv6 addresses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf6ca46136dc0be333a5c2b0ea36c11cc289e56" translate="yes" xml:space="preserve">
          <source>You can copy a file from the host to the container with the Ansible &lt;a href=&quot;copy_module#copy-module&quot;&gt;copy&lt;/a&gt; and &lt;a href=&quot;template_module#template-module&quot;&gt;template&lt;/a&gt; module and the &lt;code&gt;lxd&lt;/code&gt; connection plugin. See the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b600e54dd252d633246667cc6f30c5f2ebbf2b" translate="yes" xml:space="preserve">
          <source>You can copy a file in the created container to the localhost with &lt;code&gt;command=lxc file pull container_name/dir/filename filename&lt;/code&gt;. See the first example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a753b49c7d470efff3d94c190f612840f178136e" translate="yes" xml:space="preserve">
          <source>You can create an integration or connection between a role in Galaxy and &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis&lt;/a&gt;. Once the connection is established, a build in Travis will automatically trigger an import in Galaxy, updating the search index with the latest information about the role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2e0b0fe60da30fe5bbb94add1e3ba8a08f7b9e" translate="yes" xml:space="preserve">
          <source>You can create dynamic groups using host variables with the constructed &lt;code&gt;keyed_groups&lt;/code&gt; option. The option &lt;code&gt;groups&lt;/code&gt; can also be used to create groups and &lt;code&gt;compose&lt;/code&gt; creates and modifies host variables. Here is an aws_ec2 example utilizing constructed features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cec34b779acf0ebd9cd2d69ee84f6cc8493210" translate="yes" xml:space="preserve">
          <source>You can create, manage, and remove user accounts on your managed nodes with ad-hoc tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eefa7e27e1ee939afa51fc90198dbf464d9aaca" translate="yes" xml:space="preserve">
          <source>You can decide where to set a variable based on the scope you want that value to have. Ansible has three main scopes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d1295504cc2bd1db58c5b1d3de56dc36adde31" translate="yes" xml:space="preserve">
          <source>You can define a host or subset of hosts by its position in a group. For example, given the following group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7a7c945f42b47d25845d610bb9e3abbc9e8cf4" translate="yes" xml:space="preserve">
          <source>You can define different &lt;code&gt;become&lt;/code&gt; options for each managed node or group. You can define these variables in inventory or use them as normal variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c2168b8b4b33990ed01b896f74c27947548bae" translate="yes" xml:space="preserve">
          <source>You can define limits for any or all of the limit settings. However, when a member does not meet the resource threshold limit requirement, the system marks the member as unavailable and directs load-balancing traffic to another resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90e2cef25a37dc7963e98c5d70419dc8f25c0a0" translate="yes" xml:space="preserve">
          <source>You can define limits for any or all of the limit settings. However, when a server does not meet the resource threshold limit requirement, the system marks the entire server as unavailable and directs load-balancing traffic to another resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2b76478e4fc21271e09e1ad49596da7def0880" translate="yes" xml:space="preserve">
          <source>You can define the list in a variables file, or in the &amp;lsquo;vars&amp;rsquo; section of your play, then refer to the name of the list in the task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029680af4d6c8f5ff60ec15b308ce299d029d407" translate="yes" xml:space="preserve">
          <source>You can define variables directly in a playbook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abfd083441a2dbcc4d373851dcd40bf62c3715e" translate="yes" xml:space="preserve">
          <source>You can disable fair-scheduler configuration by setting this to 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc14bbdde4fb80879032be7eeecb04bb0d753a3" translate="yes" xml:space="preserve">
          <source>You can do this by using an external variables file, or files, just like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3de207d08f7dbf03a4122ddacc5a56ca533b362" translate="yes" xml:space="preserve">
          <source>You can download hotfixes from &lt;a href=&quot;https://www.catalog.update.microsoft.com/Home.aspx&quot;&gt;https://www.catalog.update.microsoft.com/Home.aspx&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaf75a95d78931ac97f3ff4e9cd3ebf91c104b6" translate="yes" xml:space="preserve">
          <source>You can download the latest version of the OpenStack inventory script &lt;a href=&quot;https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/openstack_inventory.py&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045dec4ee516dc7f0a92d119f9bc5070af99f932" translate="yes" xml:space="preserve">
          <source>You can download the releases from &lt;a href=&quot;https://releases.ansible.com/ansible/&quot;&gt;https://releases.ansible.com/ansible/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4ca88f13f9c4c54967da0177cd8fb0784d61c2" translate="yes" xml:space="preserve">
          <source>You can easily assign a variable to a single host, then use it later in playbooks. In INI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd45e0ccaed07c2fe8c491872b5e47402ba85c6" translate="yes" xml:space="preserve">
          <source>You can either copy the inventory and ini config out from the cloned git repo, or you can download it to your working directory like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b79b7adf9534449d6852e53c283fe8a9d1c978e" translate="yes" xml:space="preserve">
          <source>You can either specify the private key used in the SSH config file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81745520e283106fc7f639724c20cb69741f2bab" translate="yes" xml:space="preserve">
          <source>You can enable a cache plugin in the Ansible configuration, either via environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339e35d3ae83a63b734ee8906094fb60710d4df4" translate="yes" xml:space="preserve">
          <source>You can enable a custom action plugin by either dropping it into the &lt;code&gt;action_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the action plugin directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b089fcc68061f7034cad0e511f6da28c44015c" translate="yes" xml:space="preserve">
          <source>You can encrypt a valid inventory configuration file as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26701e0567f7234642c9d3448f6e25936d79e53" translate="yes" xml:space="preserve">
          <source>You can execute modules from the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47332555b27ffcb10df828e64492ef81786c0d2c" translate="yes" xml:space="preserve">
          <source>You can execute the playbook with something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8a816aaa666054ca9ed5eea192609e0eea86cb" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other APIs by dropping a custom plugin into the &lt;code&gt;httpapi_plugins&lt;/code&gt; directory. See &lt;a href=&quot;../network/dev_guide/developing_plugins_network#developing-plugins-httpapi&quot;&gt;Developing httpapi plugins&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dce19c166bfaa74fd35b871567f8beb94bf53c1" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other network devices by dropping a custom plugin into the &lt;code&gt;cliconf_plugins&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b3c8d291ae357172288e7c0500df95b80694be" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other transports (such as SNMP or message bus) by dropping a custom plugin into the &lt;code&gt;connection_plugins&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b6b58b1acabc81784eabc583062dd31c31d486" translate="yes" xml:space="preserve">
          <source>You can filter entire lists - &lt;code&gt;ipaddr()&lt;/code&gt; will return a list with values valid for a particular query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1da395bad3f79a38ece4637de095596da69a61d" translate="yes" xml:space="preserve">
          <source>You can find all included inventory scripts in the &lt;a href=&quot;https://github.com/ansible/ansible/tree/devel/contrib/inventory&quot;&gt;contrib/inventory directory&lt;/a&gt;. General usage is similar across all inventory scripts. You can also &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/dev_guide/developing_inventory.html#developing-inventory&quot;&gt;write your own inventory script&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a79ac866c8b0e86dc2d8544b3cdfe0d2b517258" translate="yes" xml:space="preserve">
          <source>You can find many examples in &lt;code&gt;./test/legacy/roles/scaleway_s3&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04b7e75389d3b384d3a51ae4e8acf320c065dce" translate="yes" xml:space="preserve">
          <source>You can find more examples here: &lt;a href=&quot;https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/ansiblesamples.htm&quot;&gt;Sample Ansible Playbooks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f928b86b85c1dc2adb52a9d0c24bc7e2be516488" translate="yes" xml:space="preserve">
          <source>You can find more examples on how to organize your inventories and group your hosts in &lt;a href=&quot;#inventory-setup-examples&quot;&gt;Inventory setup examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abe13c0e66718acda107444b10ca95140fdfa66" translate="yes" xml:space="preserve">
          <source>You can find more options for enabling HTTP/HTTPS connections in the &lt;a href=&quot;../../modules/eos_eapi_module#eos-eapi-module&quot;&gt;eos_eapi&lt;/a&gt; module documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2008b0bdfb6ffd6cab4017abc7939ab0a47810d9" translate="yes" xml:space="preserve">
          <source>You can find product ids for installed programs in the Windows registry editor either at &lt;code&gt;HKLM:Software\Microsoft\Windows\CurrentVersion\Uninstall&lt;/code&gt; or for 32 bit programs at &lt;code&gt;HKLM:Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de121a1558de40b945d153ac5a0f51df1503ce05" translate="yes" xml:space="preserve">
          <source>You can find some example playbooks illustrating these best practices in our &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;ansible-examples repository&lt;/a&gt;. (NOTE: These may not use all of the features in the latest release, but are still an excellent reference!).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c388a2d30a7ffdce799936302ad6a300573322c" translate="yes" xml:space="preserve">
          <source>You can find some quick start templates in GitHub here &lt;a href=&quot;https://github.com/azure/azure-quickstart-templates&quot;&gt;https://github.com/azure/azure-quickstart-templates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ab6fcee9488a9dd5dec27f9985951a7bd01feb" translate="yes" xml:space="preserve">
          <source>You can force &lt;code&gt;lookup&lt;/code&gt; to return a list to &lt;code&gt;loop&lt;/code&gt; by using &lt;code&gt;wantlist=True&lt;/code&gt;, or you can use &lt;code&gt;query&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33907ab87b5716c6198e2130c3d86ecdec866e3" translate="yes" xml:space="preserve">
          <source>You can further control the settings for each plugin via other configuration options detailed in the plugin themselves (linked below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f08c3797e94768a42e0051a25c9ad86fbef9a9d" translate="yes" xml:space="preserve">
          <source>You can get a full listing of available environment variables from &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;Ansible Configuration Settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c91bbbb5fc6d2052fbdbe29d87168ae66f4b61a" translate="yes" xml:space="preserve">
          <source>You can get the identifier by running 'Get-WindowsPackage -Online -PackagePath path-to-cab-in-msu' after expanding the msu file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10747ce5885f5c4f81a8dc7ede3dcc92febc2a2" translate="yes" xml:space="preserve">
          <source>You can host collections and roles on Galaxy to share with the Ansible community. Galaxy content is formated in pre-packaged units of work such as &lt;a href=&quot;playbooks_reuse_roles&quot;&gt;roles&lt;/a&gt;, and new in Galaxy 3.2, &lt;a href=&quot;collections&quot;&gt;collections&lt;/a&gt;. You can create roles for provisioning infrastructure, deploying applications, and all of the tasks you do everyday. Taking this a step further, you can create collections which provide a comprehensive package of automation that may include multiple playbooks, roles, modules, and plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934ddd4ce587bb4c9dd24ca82d3dc9a5f8b60f97" translate="yes" xml:space="preserve">
          <source>You can include up to five CorsRule elements in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131a17cda78123bfee17213db3a991579ab50976" translate="yes" xml:space="preserve">
          <source>You can install multiple roles by including the roles in a &lt;code&gt;requirements.yml&lt;/code&gt; file. The format of the file is YAML, and the file extension must be either &lt;em&gt;.yml&lt;/em&gt; or &lt;em&gt;.yaml&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95dd86e566d3e45705d65fdba8d839eb8513259b" translate="yes" xml:space="preserve">
          <source>You can install pyVmomi using pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95c2fb08faba17c1c0d0a99deba4fc5367b7e30" translate="yes" xml:space="preserve">
          <source>You can install roles and collections from the same requirements files, with some caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29403496def14439bd4df0204a9c5c61e81ee569" translate="yes" xml:space="preserve">
          <source>You can install vSphere Automation Python SDK using pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bdb77a1c12fc38326578478172576a9b425f18" translate="yes" xml:space="preserve">
          <source>You can learn a lot more about Jinja2 and its capabilities &lt;a href=&quot;http://jinja.pocoo.org/docs/&quot;&gt;here&lt;/a&gt;, and you can read more about Ansible variables in general in the &lt;a href=&quot;playbooks_variables#playbooks-variables&quot;&gt;Using Variables&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c637c1b7da68c728fe60641069711044cc6fd7e" translate="yes" xml:space="preserve">
          <source>You can learn more about &lt;a href=&quot;intro_patterns#intro-patterns&quot;&gt;patterns&lt;/a&gt; and &lt;a href=&quot;modules#working-with-modules&quot;&gt;modules&lt;/a&gt; on other pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f7b8568cfb7f714cbf9fdad93b8519fcbd2e51" translate="yes" xml:space="preserve">
          <source>You can make groups of groups using the &lt;code&gt;:children&lt;/code&gt; suffix in INI or the &lt;code&gt;children:&lt;/code&gt; entry in YAML. You can apply variables to these groups of groups using &lt;code&gt;:vars&lt;/code&gt; or &lt;code&gt;vars:&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b921cf3dd361f6fe3e513f84ec01f890dd1cc88" translate="yes" xml:space="preserve">
          <source>You can manually install this module on Windows 7 and Server 2008 R2 by installing the Windows ADK &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&quot;&gt;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&lt;/a&gt;, see examples to see how to do it with chocolatey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038eb541c94443e9964b405bf9dcd82dc1f1e896" translate="yes" xml:space="preserve">
          <source>You can mix in includes along with your regular non-included tasks and handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1f1290f875f504b41db8d3e507cf22bb628591" translate="yes" xml:space="preserve">
          <source>You can mix vaulted and non vaulted variables in the same file, even inline in a play or role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027b66cb5b1f13758e2f16c21b68ecdec918cf4d" translate="yes" xml:space="preserve">
          <source>You can mix wildcard patterns and groups at the same time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fc5c1dc79a73759cb7863577c9eca1bfd8ad71" translate="yes" xml:space="preserve">
          <source>You can nest two looping tasks using &lt;code&gt;include_tasks&lt;/code&gt;. However, by default Ansible sets the loop variable &lt;code&gt;item&lt;/code&gt; for each loop. This means the inner, nested loop will overwrite the value of &lt;code&gt;item&lt;/code&gt; from the outer loop. You can specify the name of the variable for each loop using &lt;code&gt;loop_var&lt;/code&gt; with &lt;code&gt;loop_control&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae63d6c92987691dc3644c7e71e739dfa27ad7c6" translate="yes" xml:space="preserve">
          <source>You can not use &lt;code&gt;win_psrepository&lt;/code&gt; to re-register (add) removed PSGallery, use the command &lt;code&gt;Register-PSRepository -Default&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88886026bd678a1851209e3cbe314633c09fee04" translate="yes" xml:space="preserve">
          <source>You can now control how errors behave in all lookup plugins by setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;ignore&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, or &lt;code&gt;strict&lt;/code&gt;. The default setting is &lt;code&gt;strict&lt;/code&gt;, which causes the task to fail. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b27993a8895db7d1a375b49805f535202e9c6e" translate="yes" xml:space="preserve">
          <source>You can now target groups in playbooks! The following playbook will install a role that supplies resources for an Ansible target into all devices in the &amp;ldquo;coreos_beta&amp;rdquo; group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2bb251659137ac5f45cc19368aef85aff8842d" translate="yes" xml:space="preserve">
          <source>You can obtain your API key from the bottom of the Cloudflare 'My Account' page, found here: &lt;a href=&quot;https://dash.cloudflare.com/&quot;&gt;https://dash.cloudflare.com/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c0428c5a500f0cbc17961a6aba94ffffbe77ad" translate="yes" xml:space="preserve">
          <source>You can only change from DHCP to static, and vSS to vDS, or vice versa, in one step, without creating a new device, with &lt;code&gt;device&lt;/code&gt; specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4bea52cdaa164fdfb0aa1f2330a7f915453155" translate="yes" xml:space="preserve">
          <source>You can only create the VMKernel adapter on a vDS if authenticated to vCenter and not if authenticated to ESXi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce317899136b59663ef5c8f1d1bb14b95b947f4" translate="yes" xml:space="preserve">
          <source>You can only have one plugin be the main manager of your console output. If you want to replace the default, you should define CALLBACK_TYPE = stdout in the subclass and then configure the stdout plugin in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbc61a3b83f9eb5e6eac63cfd1b032bcc8c4b55" translate="yes" xml:space="preserve">
          <source>You can only pause a service that is already started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fe4647bb0806cdacb99775e944dc2502ec275e" translate="yes" xml:space="preserve">
          <source>You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b6ff4c72bb0e18e03248e4d7b822380daac6ec" translate="yes" xml:space="preserve">
          <source>You can optionally use &lt;code&gt;./infoblox.py --list&lt;/code&gt; to test the script. After a few minutes, you should see your Infoblox inventory in JSON format. You can explicitly use the Infoblox dynamic inventory script as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f443d0fa82e56f9ca9735f706085b57194234ae0" translate="yes" xml:space="preserve">
          <source>You can override all other settings from all other sources in all other precedence categories at the command line by &lt;a href=&quot;#general-precedence-extra-vars&quot;&gt;Using -e extra variables at the command line&lt;/a&gt;, but that is not a command-line option, it is a way of passing a &lt;a href=&quot;#general-precedence-variables&quot;&gt;variable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98eda0613c16ba0e91e4825d4ed3fc3c5d774a2" translate="yes" xml:space="preserve">
          <source>You can override the default remote user name in several ways, including: * passing the &lt;code&gt;-u&lt;/code&gt; parameter at the command line * setting user information in your inventory file * setting user information in your configuration file * setting environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b5ceb20f3675d8025fc52528a1cff8c187a746" translate="yes" xml:space="preserve">
          <source>You can override this with one of the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c696915f23430a3cc655e0164f983c4a0142122" translate="yes" xml:space="preserve">
          <source>You can pass a list directly to a parameter for some plugins. Most of the packaging modules, like &lt;a href=&quot;../modules/yum_module#yum-module&quot;&gt;yum &amp;ndash; Manages packages with the yum package manager&lt;/a&gt; and &lt;a href=&quot;../modules/apt_module#apt-module&quot;&gt;apt &amp;ndash; Manages apt-packages&lt;/a&gt;, have this capability. When available, passing the list to a parameter is better than looping over the task. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7ea2ae909b4657381f6002c4f62daf3094132f" translate="yes" xml:space="preserve">
          <source>You can pass credentials and the endpoint of your cloud as module arguments, however in most cases it is a far less work to store your credentials in the cloudstack.ini file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854178d5cd2548071c5558f75f885856bfe0865e" translate="yes" xml:space="preserve">
          <source>You can pass wantlist=True to lookups to use in jinja2 template &amp;ldquo;for&amp;rdquo; loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b7929d912d05cdab805531beb74b92ef05418c" translate="yes" xml:space="preserve">
          <source>You can provide a single argument to each &lt;code&gt;ipaddr()&lt;/code&gt; filter. The filter will then treat it as a query and return values modified by that query. Lists will contain only values that you are querying for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b76c3ee954efeef78192567df296d37ae40411" translate="yes" xml:space="preserve">
          <source>You can read more about privilege escalation in &lt;a href=&quot;become#become&quot;&gt;Understanding privilege escalation: become&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fe0926df38091b2dfdf4d10b496691b30b0058" translate="yes" xml:space="preserve">
          <source>You can read more about the inventory file in later parts of the manual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b45b64ea168fa1560366f1775e448c6d58aa523" translate="yes" xml:space="preserve">
          <source>You can refer to the &lt;a href=&quot;../porting_guides/porting_guides#porting-guides&quot;&gt;porting guides&lt;/a&gt; for tips on updating your Ansible playbooks to run on newer versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe686e206f25048e42aa13f1be5a1c25c536453" translate="yes" xml:space="preserve">
          <source>You can register the output of a loop as a variable. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8a4c37e1f5b3cfa16a78b3a8f9ad83922684b7" translate="yes" xml:space="preserve">
          <source>You can remove a description by either specifying an empty string, or by specifying the special value &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28691272c6c06bf07935f504fa41b8ed4279f18e" translate="yes" xml:space="preserve">
          <source>You can remove all allowed addresses by either providing the word &lt;code&gt;none&lt;/code&gt;, or by providing the empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e50f1295358ea732b3920a16781dca49fb14b0" translate="yes" xml:space="preserve">
          <source>You can replace these platform-specific modules with the network agnostic &lt;code&gt;cli_command&lt;/code&gt; module as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b8999ddfb0300f2c8848453ff60e291132f1bd" translate="yes" xml:space="preserve">
          <source>You can replace this list with your own selection by configuring an &lt;code&gt;inventory_ignore_extensions&lt;/code&gt; list in ansible.cfg, or setting the &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY_IGNORE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY_IGNORE&lt;/code&gt;&lt;/a&gt; environment variable. The value in either case should be a comma-separated list of patterns, as shown above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db08807bfd277cf9971af24605fcd54818655cbe" translate="yes" xml:space="preserve">
          <source>You can retrieve most of the example playbooks used in this guide from the &lt;a href=&quot;https://github.com/network-automation/infoblox_ansible&quot;&gt;network-automation/infoblox_ansible&lt;/a&gt; GitHub repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b341fe85b45af1888635d94fc2a1059f9edc87" translate="yes" xml:space="preserve">
          <source>You can review simple example tasks in the documentation for any of the &lt;a href=&quot;../modules/list_of_net_tools_modules#nios-net-tools-modules&quot;&gt;NIOS modules&lt;/a&gt; or look at the &lt;a href=&quot;#use-cases-with-modules&quot;&gt;Use cases with modules&lt;/a&gt; section for more elaborate examples. See the &lt;a href=&quot;https://www.infoblox.com/&quot;&gt;Infoblox&lt;/a&gt; website for more information on the Infoblox product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d53e61e58fda26c0b4178724778dc7fea5deab7" translate="yes" xml:space="preserve">
          <source>You can run commands against the control node by using &amp;ldquo;localhost&amp;rdquo; or &amp;ldquo;127.0.0.1&amp;rdquo; for the server name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72f355f3f2b81549e72239349887b2bed669a16" translate="yes" xml:space="preserve">
          <source>You can run long-running operations in the background and check their status later. For example, to execute &lt;code&gt;long_running_operation&lt;/code&gt; asynchronously in the background, with a timeout of 3600 seconds (&lt;code&gt;-B&lt;/code&gt;), and without polling (&lt;code&gt;-P&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f507cdde95ce535e768ba0b91be9288dba29017c" translate="yes" xml:space="preserve">
          <source>You can run playbooks that use this on a local machine, or on a Webfaction host, or elsewhere, since the scripts use the remote webfaction API. The location is not important. However, running them on multiple hosts &lt;em&gt;simultaneously&lt;/em&gt; is best avoided. If you don&amp;rsquo;t specify &lt;em&gt;localhost&lt;/em&gt; as your host, you may want to add &lt;code&gt;serial: 1&lt;/code&gt; to the plays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dc2621b2bb88093fb4c9a875aa3bb7fd51e787" translate="yes" xml:space="preserve">
          <source>You can run the script interactively from the command line or pass it as the inventory to a playbook. Here are few examples to get you started:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fd8090a5808ec1d19ab3aac05a756119c6f35d" translate="yes" xml:space="preserve">
          <source>You can run these modules against another server that would then connect to the API if localhost does not have access to vCenter. If so, the required Python modules will need to be installed on that target server. We recommend installing the latest version with pip: &lt;code&gt;pip install Pyvmomi&lt;/code&gt; (as the OS packages are usually out of date and incompatible).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d95e68512c98e738d984f393de896f831e5a70" translate="yes" xml:space="preserve">
          <source>You can see a full example of this using group_vars and also a configuration backup example at &lt;a href=&quot;https://github.com/network-automation/agnostic_example&quot;&gt;Network agnostic examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2684f0d182bc0fa2cf457271d1aa8c90db37dd0a" translate="yes" xml:space="preserve">
          <source>You can see that &lt;code&gt;one.example.com&lt;/code&gt; exists in the &lt;code&gt;dbservers&lt;/code&gt;, &lt;code&gt;east&lt;/code&gt;, and &lt;code&gt;prod&lt;/code&gt; groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ab6fbaff08608b45f4915e83bf71c91372a980" translate="yes" xml:space="preserve">
          <source>You can see that the variable substitution syntax of {{ and }} is the same for both templates and variables. The syntax inside the curly braces is Jinja2, and you can do all sorts of operations and apply different filters to the data inside. In templates, you can also use for loops and if statements to handle more complex situations, like this, in &lt;code&gt;roles/common/templates/iptables.j2&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790c0b9fedc6c9d2dfa498e9ed1b01ce1368ba38" translate="yes" xml:space="preserve">
          <source>You can see which tags are applied to tasks, roles, and static imports by running &lt;code&gt;ansible-playbook&lt;/code&gt; with the &lt;code&gt;--list-tasks&lt;/code&gt; option. You can display all tags available with the &lt;code&gt;--list-tags&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd133dd6d432bd7ec3f27c75ddc8c078ea262fd1" translate="yes" xml:space="preserve">
          <source>You can see which tasks will be executed with &lt;code&gt;--tags&lt;/code&gt; or &lt;code&gt;--skip-tags&lt;/code&gt; by combining it with &lt;code&gt;--list-tasks&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb4889b92ec4ae2971a4de7e0f4c2c72fb1d78b" translate="yes" xml:space="preserve">
          <source>You can select a different strategy for each play as shown above, or set your preferred strategy globally in &lt;code&gt;ansible.cfg&lt;/code&gt;, under the &lt;code&gt;defaults&lt;/code&gt; stanza:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00b08facc04a6b8aead1514cf7b3712fc9c793c" translate="yes" xml:space="preserve">
          <source>You can set the connection plugin globally via &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt;, at the command line (&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--connection&lt;/code&gt;), as a &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;keyword&lt;/a&gt; in your play, or by setting a &lt;a href=&quot;../user_guide/intro_inventory#behavioral-parameters&quot;&gt;variable&lt;/a&gt;, most often in your inventory. For example, for Windows machines you might want to set the &lt;a href=&quot;connection/winrm#winrm-connection&quot;&gt;winrm&lt;/a&gt; plugin as an inventory variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf46aef1457f496724a593452003c1bc4e1ece40" translate="yes" xml:space="preserve">
          <source>You can set the default inventory path (via &lt;code&gt;inventory&lt;/code&gt; in the &lt;code&gt;ansible.cfg&lt;/code&gt; [defaults] section or the &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY&lt;/code&gt;&lt;/a&gt; environment variable) to your inventory source(s). Now running &lt;code&gt;ansible-inventory --graph&lt;/code&gt; should yield the same output as when you passed your YAML configuration source(s) directly. You can add custom inventory plugins to your plugin path to use in the same way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7014764b7fcd2aad3ccecdb399238029fe2a31" translate="yes" xml:space="preserve">
          <source>You can set the directives that control &lt;code&gt;become&lt;/code&gt; at the play or task level. You can override these by setting connection variables, which often differ from one host to another. These variables and directives are independent. For example, setting &lt;code&gt;become_user&lt;/code&gt; does not set &lt;code&gt;become&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e2caf97b50b2ccf63c7baf95bccc28c075984b" translate="yes" xml:space="preserve">
          <source>You can set this option to False in the inventory config file which will allow 403 errors to be gracefully skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b0beb8495b2a4ef7d37100d42e596cbfe8eea8" translate="yes" xml:space="preserve">
          <source>You can set user rights for both local and domain accounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f023081cd401d8ba52a177926d6beee94f63d6" translate="yes" xml:space="preserve">
          <source>You can set/remove password only if a VTP domain already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86951bcef1a9acc2baec735d9e7445c0f4e0d16a" translate="yes" xml:space="preserve">
          <source>You can skip category name if you have unique tag names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7278596c4a253acd975c809baff3274aba341cde" translate="yes" xml:space="preserve">
          <source>You can specify a function name (for example, Thumbnail ) or you can specify Amazon Resource Name (ARN) of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ef0ee68a94a3e19c183b0a33979503b4b97ce0" translate="yes" xml:space="preserve">
          <source>You can specify a mix of different types of items for the source address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a7f491aa6daf3698e6bb92dea22c9d8a148bcb" translate="yes" xml:space="preserve">
          <source>You can specify a number between 0 (lowest priority) and 7 (highest priority).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bff358d9ddf7d7a9b60078c327107c70b96161" translate="yes" xml:space="preserve">
          <source>You can specify a pattern as a regular expression by starting the pattern with &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e316669f19e54956e8593fa60126aaa834d15c4d" translate="yes" xml:space="preserve">
          <source>You can specify a relative path for many configuration options. In most of those cases the path used will be relative to the &lt;code&gt;ansible.cfg&lt;/code&gt; file used for the current execution. If you need a path relative to your current working directory (CWD) you can use the &lt;code&gt;{{CWD}}&lt;/code&gt; macro to specify it. We do not recommend this approach, as using your CWD as the root of relative paths can be a security risk. For example: &lt;code&gt;cd /tmp; secureinfo=./newrootpassword ansible-playbook ~/safestuff/change_root_pwd.yml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1804bc9a81b96b76a8475457d93d597aa310c8" translate="yes" xml:space="preserve">
          <source>You can specify an IP address or any value that resolves to an IP address, such as a fully qualified domain name (FQDN), host name, or NETBIOS name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d7375d4f2b0a1f52957a4e35f0d7ec3f95474" translate="yes" xml:space="preserve">
          <source>You can specify codes, each set appropriate to the associated type, such as No Code (0) (associated with Echo Reply (0)) and Host Unreachable (1) (associated with Destination Unreachable (3)), or you can specify &lt;code&gt;any&lt;/code&gt; to indicate that the system applies the rule for all codes in response to that specific ICMP message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584ec7778c0933e7188040ef02a41b8e309d38ce" translate="yes" xml:space="preserve">
          <source>You can specify control messages, such as Echo Reply (0) and Destination Unreachable (3), or you can specify &lt;code&gt;any&lt;/code&gt; to indicate that the system applies the rule for all ICMP messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d04ce6a5462fef04bf61fd909564eaf0bcd0e1" translate="yes" xml:space="preserve">
          <source>You can specify localhost explicitly by adding this to your inventory file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464677b4ee1e1ce132ff38638bb05ad6b8f86bc3" translate="yes" xml:space="preserve">
          <source>You can specify multiple range identifiers which are split by &lt;code&gt;,&lt;/code&gt;. You can use the following range identifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf02e34ba03127e46a959b2d6cadaaa7b216053" translate="yes" xml:space="preserve">
          <source>You can specify multiple services at once by separating them with commas, .e.g., &lt;code&gt;services=httpd,nfs,puppet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eae6554caf06478f1dcb217b98abe534b3c334" translate="yes" xml:space="preserve">
          <source>You can specify one or more NAT policies to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd512a0a4d43c01cfaf16d5dacf87dc104c8eda4" translate="yes" xml:space="preserve">
          <source>You can specify the following destination items. An IPv4 or IPv6 address, an IPv4 or IPv6 address range, geographic location, VLAN, address list, port, port range, port list or address list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dcd9b655cc6692596e7dc422bc189a592f480e" translate="yes" xml:space="preserve">
          <source>You can specify the following source items. An IPv4 or IPv6 address, an IPv4 or IPv6 address range, geographic location, VLAN, address list, port, port range, port list or address list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84242c65bedc9f745cd912e21b3ab36fc25b5b54" translate="yes" xml:space="preserve">
          <source>You can specify the size with a suffix of the byte type i.e. kilo = k, mega = m...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568eaf85c64e59d8c5269e206d586ab337b2a9f4" translate="yes" xml:space="preserve">
          <source>You can specify this as a full or partial URL. For example: * &lt;a href=&quot;https://www.googleapis.com/compute/v1/projects/project/zones/zone/&quot;&gt;https://www.googleapis.com/compute/v1/projects/project/zones/zone/&lt;/a&gt; instances/instance * projects/project/zones/zone/instances/instance * zones/zone/instances/instance .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3784f43a310f2be4463b06fe67162c9f4ab764b3" translate="yes" xml:space="preserve">
          <source>You can specify your Alicloud authentication credentials (access key and secret key) by passing them as environment variables or by storing them in a vars file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac064d4b6a26de403c4fb87c8b0347f90101f59" translate="yes" xml:space="preserve">
          <source>You can still issue it via the sensu api</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97550e0254e797edc33dce68bd727f1f2443bfec" translate="yes" xml:space="preserve">
          <source>You can still set &lt;code&gt;ansible_python_interpreter&lt;/code&gt; to a specific path at any variable level (as a host variable, in vars files, in playbooks, etc.). If you prefer to use the Python interpreter discovery behavior, use one of the four new values for &lt;code&gt;ansible_python_interpreter&lt;/code&gt; introduced in Ansible 2.8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeaef29c25597741603a6616de034c5c3a8c05a" translate="yes" xml:space="preserve">
          <source>You can still set &lt;code&gt;ansible_python_interpreter&lt;/code&gt; to a specific path at any variable level (for example, in host_vars, in vars files, in playbooks, etc.). Setting a specific path completely disables automatic interpreter discovery; Ansible always uses the path specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52edc7ecaf575e589f230702604374cfd3b4a732" translate="yes" xml:space="preserve">
          <source>You can still use inventory scripts if you choose. When we implemented inventory plugins, we ensured backwards compatibility via the script inventory plugin. The examples below illustrate how to use inventory scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb43518a6a7e1fefaa4ef62ab101609f8b12af6" translate="yes" xml:space="preserve">
          <source>You can store variable values that relate to a specific host or group in inventory. To start with, you may add variables directly to the hosts and groups in your main inventory file. As you add more and more managed nodes to your Ansible inventory, however, you will likely want to store variables in separate host and group variable files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc38d1c27e6865057e810af006cbe03e724038c0" translate="yes" xml:space="preserve">
          <source>You can supply an esxi_hostname or a cluster_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7670a78e6a29ac315b360f67d06e7a869755a0" translate="yes" xml:space="preserve">
          <source>You can target multiple inventory sources (directories, dynamic inventory scripts or files supported by inventory plugins) at the same time by giving multiple inventory parameters from the command line or by configuring &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY&lt;/code&gt;&lt;/a&gt;. This can be useful when you want to target normally separate environments, like staging and production, at the same time for a specific action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7f4ae022d467700301bce0557307e5d077196a" translate="yes" xml:space="preserve">
          <source>You can target this inventory directory simply like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da6cc29658de4a6411a68b81b070584b132428d" translate="yes" xml:space="preserve">
          <source>You can tell Ansible to automatically accept the keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3fe0086ebf788680c4a0dbae0126bfc051340c" translate="yes" xml:space="preserve">
          <source>You can test that your inventory is working by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1c499bfd345a135cd8274f7094625521a529fc" translate="yes" xml:space="preserve">
          <source>You can test the OpenStack dynamic inventory script manually to confirm it is working as expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a380a77888290e00300222c06f84db13e95c1732" translate="yes" xml:space="preserve">
          <source>You can test the script by itself to make sure your config is correct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0feab1b7fbdb38e223d1e0687ae8f6091881bea0" translate="yes" xml:space="preserve">
          <source>You can then reference a specific field in the dictionary using either bracket notation or dot notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2dff226b9361ebe936ecefc7fd95e3b1e7af1d7" translate="yes" xml:space="preserve">
          <source>You can then run &lt;code&gt;ec2.py --profile prod&lt;/code&gt; to get the inventory for the prod account, although this option is not supported by &lt;code&gt;ansible-playbook&lt;/code&gt;. You can also use the &lt;code&gt;AWS_PROFILE&lt;/code&gt; variable - for example: &lt;code&gt;AWS_PROFILE=prod ansible-playbook -i ec2.py myplaybook.yml&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6263544aa3f4e820bad56c15f0c09e1aeaf76f79" translate="yes" xml:space="preserve">
          <source>You can then use &lt;code&gt;import_tasks&lt;/code&gt; or &lt;code&gt;include_tasks&lt;/code&gt; to execute the tasks in a file in the main task list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fedf4586a39fb4793168a361a1600b6a11dc0c3" translate="yes" xml:space="preserve">
          <source>You can update the allocation method to &lt;code&gt;Static&lt;/code&gt; after a dynamic private IP address has been assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9674aa152334a7bb016286eadb9d506327c205" translate="yes" xml:space="preserve">
          <source>You can use '!' before value (for example, &lt;code&gt;!settings&lt;/code&gt;) to exclude it from the information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f7f19abbc12319c8cdd5fac31d661666388550" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://docs.ansible.com/ansible-lint/index.html&quot;&gt;ansible-lint&lt;/a&gt; to run a detail check of your playbooks before you execute them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccb95b6e7cdc921af2f9feaf6bd1f44c86aed7f" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;reboot_module#reboot-module&quot;&gt;reboot&lt;/a&gt; or &lt;a href=&quot;vmware_host_powerstate_module#vmware-host-powerstate-module&quot;&gt;vmware_host_powerstate&lt;/a&gt; module to reboot all ESXi host systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998fee3c48a01b34cceb79ad2ddfeaa083c8f2eb" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;PROXMOX_PASSWORD&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e400e4b497da3724c77d15b446f00bfc161173" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-config list&lt;/code&gt; to see all available settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c20c78e4e5affe7cac052dc136de36c9772ae6" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t become -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t become &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b399ff2e9d30da7081136800731ea3c767188ee8" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t cache -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t cache &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc7984dc7adf3b12527a9d6f9e409d37509f591" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t callback -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t callback &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documents and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e686f99a3841304e466e1a002a5d65c3d82f34" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t cliconf -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t cliconf &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see detailed documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d4d07ebcd8c7532ec597bf2de724032a7b9926" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t connection -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t connection &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see detailed documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8336e27202090616c445c057b8ed74d9ea5355" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t httpapi -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t httpapi &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see detailed documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c39973f72c860994e3f6a16a2a05a9460369d3" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t inventory -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t inventory &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see plugin-specific documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d1fe3cdafc531cd6d177dce548b40b073c91ac" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t lookup -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t lookup &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documents and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f82b7619fbe85585bb327bfbbedccce93f4d53" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t strategy -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t strategy &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see plugin-specific specific documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30629122f9e3461c37b9f08ea00d2cbdda8f2cc5" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t vars -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t vars &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific plugin-specific documentation and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94369500c3a2c4438751b304b153b4e707295b34" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;any&lt;/code&gt; and &lt;code&gt;all&lt;/code&gt; to check if any or all elements in a list are true or not:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c544d97b8342bb28404c96422b133bcf513203" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ctrl+c&lt;/code&gt; if you wish to advance a pause earlier than it is set to expire or if you need to abort a playbook run entirely. To continue early press &lt;code&gt;ctrl+c&lt;/code&gt; and then &lt;code&gt;c&lt;/code&gt;. To abort a playbook press &lt;code&gt;ctrl+c&lt;/code&gt; and then &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492b69c12fef44bd2d80b4e30c48ec14bb78f37e" translate="yes" xml:space="preserve">
          <source>You can use Jinja2 expressions to iterate over complex lists. For example, a loop can combine nested lists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbab6e10b08de5b78e4cd1853838ec7be5b30793" translate="yes" xml:space="preserve">
          <source>You can use a separate cache plugin for inventory and facts. If an inventory-specific cache plugin is not provided and inventory caching is enabled, the fact cache plugin is used for inventory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40496ec70100f53740eedfdbcdb05a066d4ad97" translate="yes" xml:space="preserve">
          <source>You can use a variable to make the query more readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e47114bb980b1773fcbeb721e9e5027bf2b387" translate="yes" xml:space="preserve">
          <source>You can use any characters or spaces except the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7b207cdf348e21eedcc9a2bf7102dfb50863ff" translate="yes" xml:space="preserve">
          <source>You can use any crypt scheme supported by &amp;lsquo;Passlib&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ef671ecfb370f4b9c7f6e752e91181ddc7abde" translate="yes" xml:space="preserve">
          <source>You can use either a comma (&lt;code&gt;,&lt;/code&gt;) or a colon (&lt;code&gt;:&lt;/code&gt;) to separate a list of hosts. The comma is preferred when dealing with ranges and IPv6 addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c47acd55fd4f2521879f2f8925a3493c2a549c" translate="yes" xml:space="preserve">
          <source>You can use either the &lt;code&gt;IPTUNNEL&lt;/code&gt; or the &lt;code&gt;TOS&lt;/code&gt; option to implement Direct Server Return (DSR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0211019a4fb9ab33d68359f17691658600e62dec" translate="yes" xml:space="preserve">
          <source>You can use escalated privileges on only the specific tasks that need them, on an entire play, or on all plays. Adding &lt;code&gt;become: yes&lt;/code&gt; and &lt;code&gt;become_method: enable&lt;/code&gt; instructs Ansible to enter &lt;code&gt;enable&lt;/code&gt; mode before executing the task, play, or playbook where those parameters are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314dc4438ab8e7a59db81d61a9b1a4e8a4520f6e" translate="yes" xml:space="preserve">
          <source>You can use other states like &lt;code&gt;latest&lt;/code&gt; ONLY if they are supported by the underlying package module(s) executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338a2fdc100cac0e9604af662af0e12fc1e2dd43" translate="yes" xml:space="preserve">
          <source>You can use shell-style (fnmatch) wildcard to pass groups of values (see Examples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be162920473df3e910fbe6eb4a58e5dd395d9c4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;copy_module#copy-module&quot;&gt;copy&lt;/a&gt; module with the &lt;code&gt;content:&lt;/code&gt; option if you prefer the template inline, as part of the playbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e4faaf9c33b6f9fc144a41c9ddaec28c74dc6f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PSGallery&lt;/a&gt; to find custom resources, along with documentation on how to install them on a Windows host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4711097d695469c84a17c6e58557826f54c0121e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;win_copy_module#win-copy-module&quot;&gt;win_copy&lt;/a&gt; module with the &lt;code&gt;content:&lt;/code&gt; option if you prefer the template inline, as part of the playbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d779567396f5bbf699742a36a466e1c593aff9" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--server&lt;/code&gt; command line argument to select an explicit Galaxy server in the &lt;code&gt;server_list&lt;/code&gt; and the value of this argument should match the name of the server. To use a server not in the server list, set the value to the URL to access that server (all servers in the server list will be ignored). Also the &lt;code&gt;--api-key&lt;/code&gt; argument is not applied to any of the predefined servers. It is only applied if no server list is defined or a URL was specified by &lt;code&gt;--server&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09a334b938640a113c5f2f31429f6813b0be34b" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;ansible-galaxy collection install&lt;/code&gt; command to install a collection on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae79c313ad22aa9d041d622ba8fd5536ef7966c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;count&lt;/code&gt; parameter to control the number of resources you create or terminate. For example, if you want exactly 5 instances tagged &lt;code&gt;NewECS&lt;/code&gt;, set the &lt;code&gt;count&lt;/code&gt; of instances to 5 and the &lt;code&gt;count_tag&lt;/code&gt; to &lt;code&gt;NewECS&lt;/code&gt;, as shown in the last task of the example playbook below. If there are no instances with the tag &lt;code&gt;NewECS&lt;/code&gt;, the task creates 5 new instances. If there are 2 instances with that tag, the task creates 3 more. If there are 8 instances with that tag, the task terminates 3 of those instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8ed746f14b79747aceaaa70e32736487b80cc6" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;hwaddr()&lt;/code&gt; filter to check if a given string is a MAC address or convert it between various formats. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7964f1c47c3029bd8d37cc6718b2a2deee06224a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;ipsubnet()&lt;/code&gt; filter with the &lt;code&gt;ipaddr()&lt;/code&gt; filter to, for example, split a given &lt;code&gt;/48&lt;/code&gt; prefix into smaller &lt;code&gt;/64&lt;/code&gt; subnets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458c8fc1a0206840187e99ccc7cd289bc44568e8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;nios&lt;/code&gt; modules in tasks to simplify common Infoblox workflows. Be sure to set up your &lt;a href=&quot;#nios-credentials&quot;&gt;NIOS credentials&lt;/a&gt; before following these examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f0af30f3500379314862f617e58c8f55b666c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;until&lt;/code&gt; keyword to retry a task until a certain condition is met. Here&amp;rsquo;s an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782292e469e888b0da82843142a3acd8a089f26a" translate="yes" xml:space="preserve">
          <source>You can use the Infoblox dynamic inventory script to import your network node inventory with Infoblox NIOS. To gather the inventory from Infoblox, you need two files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df17a10702efe53d70b33da933bccd2bf516ea68" translate="yes" xml:space="preserve">
          <source>You can use the apiary API url (&lt;a href=&quot;http://docs.statusio.apiary.io/&quot;&gt;http://docs.statusio.apiary.io/&lt;/a&gt;) to capture API traffic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815e30517ce09c221b40d4b7ce4a9821f1d51c3e" translate="yes" xml:space="preserve">
          <source>You can use the below task after you started to build your APICs and configured the cluster to wait until all the APICs have come online. It will wait until the number of controllers equals the number listed in the &lt;code&gt;apic&lt;/code&gt; inventory group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917846a3ad62cabaaf3c9a988890793491d6dc95" translate="yes" xml:space="preserve">
          <source>You can use the inventory script explicitly (by passing the &lt;code&gt;-i openstack_inventory.py&lt;/code&gt; argument to Ansible) or implicitly (by placing the script at &lt;code&gt;/etc/ansible/hosts&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110943ffb4cabd48daa7a72bb11aa42e4399aad3" translate="yes" xml:space="preserve">
          <source>You can use the options specified in &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d09f9c14ea3c1870daf9018aaa9808506ab34e" translate="yes" xml:space="preserve">
          <source>You can use the same syntax in playbooks. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df35cea5b96bce9adb103275cef2805ef9a7cd5" translate="yes" xml:space="preserve">
          <source>You can use the same wildcard characters for aliases as you can for actual wide IP names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9dd3c4f5408e9ecc725f4b5022299503160eb0" translate="yes" xml:space="preserve">
          <source>You can use this idiom to point a frontend proxy server to all of the app servers, to set up the correct firewall rules between servers, etc. You need to make sure that the facts of those hosts have been populated before though, for example by running a play against them if the facts have not been cached recently (fact caching was added in Ansible 1.8).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a055f61925fd7ac601a5484bf0445864e3c7652d" translate="yes" xml:space="preserve">
          <source>You can use this in conjunction with &lt;code&gt;product_id&lt;/code&gt; and other &lt;code&gt;creates_*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30fcfe0706f9f360ab38c220e18ff50ebc1be5b" translate="yes" xml:space="preserve">
          <source>You can use this method to switch between the host group you&amp;rsquo;re targeting, the username logging into the remote servers, whether to sudo or not, and so forth. Plays, like tasks, run in the order specified in the playbook: top to bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d5bdd5c75098e793588307a99ac425e1d403c3" translate="yes" xml:space="preserve">
          <source>You can use this script in one of two ways. The easiest is to use Ansible&amp;rsquo;s &lt;code&gt;-i&lt;/code&gt; command line option and specify the path to the script after marking it executable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add9e242f0edd1da55d479ebe16620b71fa1f079" translate="yes" xml:space="preserve">
          <source>You can use this to keep a local copy of the specification to avoid downloading it every time the module is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff7db06ef80d61c83e584a04fc3cf3c44270801" translate="yes" xml:space="preserve">
          <source>You can use variables to enable passing group specifiers via the &lt;code&gt;-e&lt;/code&gt; argument to ansible-playbook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562ec59fbbafd776f9629cca444a2df692ba0910" translate="yes" xml:space="preserve">
          <source>You can use wildcard patterns with FQDNs or IP addresses, as long as the hosts are named in your inventory by FQDN or IP address:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbc37233ef93aeb4b9d520bcc2fa87d4f59a832" translate="yes" xml:space="preserve">
          <source>You can wait for BIG-IP to be &amp;ldquo;ready&amp;rdquo;. By &amp;ldquo;ready&amp;rdquo;, we mean that BIG-IP is ready to accept configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab01dc5434d224bef6a4abe29278afab4d0ff5d0" translate="yes" xml:space="preserve">
          <source>You can wait for a file to exist or not exist on the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7900f0b841d5b2ff53f59b2ec533e2d72df0f24" translate="yes" xml:space="preserve">
          <source>You can wait for a set amount of time &lt;code&gt;timeout&lt;/code&gt;, this is the default if nothing is specified or just &lt;code&gt;timeout&lt;/code&gt; is specified. This does not produce an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff7183a84e87368102be0a95170ebd82b38f186" translate="yes" xml:space="preserve">
          <source>You can wait for a set amount of time &lt;code&gt;timeout&lt;/code&gt;, this is the default if nothing is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c2d754e2e161f8030b36fcccbe8b45f64f991b" translate="yes" xml:space="preserve">
          <source>You can wait for active connections to be closed before continuing on a local port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbadc9f05d54a205b1b5002edd08069bca2d986" translate="yes" xml:space="preserve">
          <source>You can't change metric_name after you create the WebACL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60c08e599bff9cd3e689d39c4d876208ae7ffa5" translate="yes" xml:space="preserve">
          <source>You can't change metric_name after you create the rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507f667617a20c094fc96f09765a51d34b152026" translate="yes" xml:space="preserve">
          <source>You can't rewrite others module parameters using this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a22ca15c15235c667a2af917039f99897f531b" translate="yes" xml:space="preserve">
          <source>You cannot change this name after profile is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d25d6fe070f492867153b55e6e7c82df1e7e36" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the IP address pool is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2cf5cadac072c694232ce9cf0a2bbbf22255f8" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the MAC pool is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2617181876e5333c31064fed4afd9c0f2ec83889" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the UUID pool is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95573474e463548aebc255514c1b291c458e5731" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the VLAN is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebf40731b03e7a872edda2fd51557c492bcda9b" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the VSAN is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c120bb412bbfdb13897d873a16ee006ee01dd43" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the WWNN or WWPN pool is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a7004b5ed408c5582d9fb276ce09419ca17a9a" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the policy is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b8b82eff2ff21eb27cabb9c2843f28874d9669" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the template is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98f79129d179c74095c8855d557c128f76ff9a5" translate="yes" xml:space="preserve">
          <source>You cannot create VLANs with IDs from 4030 to 4047. This range of VLAN IDs is reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02320441226bda08caf0f2e86911974c35d9687e" translate="yes" xml:space="preserve">
          <source>You cannot create more than one customer gateway with the same IP address. If you run an identical request more than one time, the first request creates the customer gateway, and subsequent requests return information about the existing customer gateway. The subsequent requests do not create new customer gateway resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41420981615b6a4cc0b48c4b38f173af1dbe7493" translate="yes" xml:space="preserve">
          <source>You cannot enable vMotion on an additional adapter if you already have an adapter with the vMotion TCP/IP stack configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b1940279ec6cbff014b32ed1c6ebbce8af8a06" translate="yes" xml:space="preserve">
          <source>You cannot limit privilege escalation permissions to certain commands. Ansible does not always use a specific command to do something but runs modules (code) from a temporary file name which changes every time. If you have &amp;lsquo;/sbin/service&amp;rsquo; or &amp;lsquo;/bin/chmod&amp;rsquo; as the allowed commands this will fail with ansible as those paths won&amp;rsquo;t match with the temporary file that Ansible creates to run the module. If you have security rules that constrain your sudo/pbrun/doas environment to running specific command paths only, use Ansible from a special account that does not have this constraint, or use &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/reference_appendices/tower.html#ansible-tower&quot;&gt;Red Hat Ansible Tower&lt;/a&gt; to manage indirect access to SSH credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb73e1ac085e5c0a9def5da0e43b4e451c65015" translate="yes" xml:space="preserve">
          <source>You cannot list action plugins directly, they show up as their counterpart modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41a7f6c05e67037c433b68a1993ffc42aa481ae" translate="yes" xml:space="preserve">
          <source>You cannot notify a handler that is defined inside of an include. As of Ansible 2.1, this does work, however the include must be &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc250fe05e3d927c2cf15aca967db96d1d6b8842" translate="yes" xml:space="preserve">
          <source>You cannot run a process that interacts with &lt;code&gt;DPAPI&lt;/code&gt;, which is used by some installers (like Microsoft SQL Server).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d1a545c86cb9dd2ee62654dbc162a660138f7e" translate="yes" xml:space="preserve">
          <source>You cannot set a reverse PTR entry for IPv6 floating networks. Reverse PTR entries are only allowed for single addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a97d87d5da92a68ce0e190e49868f26a2b6c82" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;--start-at-task&lt;/code&gt; to begin execution at a task inside a dynamic include.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea20c25bf1278ee524ed53fb12c41c51c723f570" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;gssapi&lt;/code&gt; when either &lt;code&gt;scheme=ldaps&lt;/code&gt; or &lt;code&gt;start_tls=True&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ab5263e37d09422f5f195ad84816d637b31eee" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;notify&lt;/code&gt; to trigger a handler name which comes from inside a dynamic include (see note below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671b0161a91b6bea95025d7219bf6a15a595d904" translate="yes" xml:space="preserve">
          <source>You cannot use SSH keys with the WinRM or PSRP connection plugins. These connection plugins use X509 certificates for authentication instead of the SSH key pairs that SSH uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b341d5273013ce89c85eb8590d22d2ab6602460" translate="yes" xml:space="preserve">
          <source>You cannot use spaces or any special characters other than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a0539a6c99b69bd4af9d857851d5b2727260a6" translate="yes" xml:space="preserve">
          <source>You cannot use spaces or any special characters other than - (hyphen), &quot;_&quot; (underscore), : (colon), and . (period).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89b9651f3cc6dacf6f8fe0cf2cbe7ba55ce4c30" translate="yes" xml:space="preserve">
          <source>You cannot use this action inside a play.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf7649f552a25e6630b7d50955da87801743c1f" translate="yes" xml:space="preserve">
          <source>You cannot use this module to access a mapped drive in another Ansible task, drives mapped with this module are only accessible when logging in interactively with the user through the console or RDP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563374121261a00f52adcd2817c39ca2ecf6fa32" translate="yes" xml:space="preserve">
          <source>You configure interfaces to vRouter services on a fabric, cluster, standalone switch or virtual network(VNET).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6258fa2ec868a2655a16864387d9695dfc905d6" translate="yes" xml:space="preserve">
          <source>You configure schedules to define days and times when the firewall rule is made active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5a9f52a57d0251e8ef56529de306cef08ac7b8" translate="yes" xml:space="preserve">
          <source>You could use this before using &lt;a href=&quot;vmware_host_datastore_module#vmware-host-datastore-module&quot;&gt;vmware_host_datastore&lt;/a&gt; to mount a new datastore to ensure your device/volume is ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc5738a03fe9404be434558ff28f1859a3a2b59" translate="yes" xml:space="preserve">
          <source>You create the integration using the &lt;code&gt;setup&lt;/code&gt; command, but before an integration can be created, you must first authenticate using the &lt;code&gt;login&lt;/code&gt; command; you will also need an account in Travis, and your Travis token. Once you&amp;rsquo;re ready, use the following command to create the integration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396723992d6eeddc8cc44444bf801030354b052f" translate="yes" xml:space="preserve">
          <source>You don't need to wait for Kubernetes cluster autoscaler to deploy VM compute nodes to run the additional pods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031dd31f7bceb5051a44e68fe59acd5de360ea7e" translate="yes" xml:space="preserve">
          <source>You frequently use a combination of IP addresses and subnet prefixes (&amp;ldquo;CIDR&amp;rdquo;), this is even more common with IPv6. The &lt;code&gt;ipaddr()&lt;/code&gt; filter can extract useful data from these prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06209273ea5e91815ec4b0cb95434c072d848152" translate="yes" xml:space="preserve">
          <source>You have to specify &lt;code&gt;snapshot_vm&lt;/code&gt; parameter with virtual machine name of this snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcabbafd047960f470efc5e6aae6a32f926c1d6" translate="yes" xml:space="preserve">
          <source>You may also apply tags to the tasks imported by &lt;code&gt;roles&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6455b3ea45fad670f536ea2cd3e7ffb1eb4f396" translate="yes" xml:space="preserve">
          <source>You may also specify a numeric value. The possible values are from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff2aba2880faede226a62af958ad617c322ede4" translate="yes" xml:space="preserve">
          <source>You may also wish to follow the &lt;a href=&quot;https://github.com/ansible/ansible&quot;&gt;GitHub project&lt;/a&gt; if you have a GitHub account. This is also where we keep the issue tracker for sharing bugs and feature ideas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898d49c1fd7aef29b7df67060cb8a40196c37207" translate="yes" xml:space="preserve">
          <source>You may also wish to install from ports, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc6e58ff919fb874a8ed48f2ef7580632308ef8" translate="yes" xml:space="preserve">
          <source>You may also wish to read &lt;a href=&quot;../user_guide/playbooks#working-with-playbooks&quot;&gt;Working With Playbooks&lt;/a&gt; at the same time to see how this is used in practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3d3801dc6b0fc6f33e03c5262eeed0b63ffacf" translate="yes" xml:space="preserve">
          <source>You may also wish to run from source to get the latest, which is covered below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f72561fb51ec08cdbfdea3d84ff6ec02a677fb6" translate="yes" xml:space="preserve">
          <source>You may check for failure by searching for a word or phrase in the output of a command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0209bc334daa91b37d4a4598eb87d32aaecfb4" translate="yes" xml:space="preserve">
          <source>You may either enter a case-sensitive password in this field for the new or existing user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f1d0822ce14cef7514ba6b247071807d13669e" translate="yes" xml:space="preserve">
          <source>You may find the following tips useful:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006bcdd165a17fd44e800176d186afbfbbb05070" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;ANSIBLE_NET_SSH_KEYFILE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370c405e905b1642b31d5c87e32aa3eb6d6be95b" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_PASSWORD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35704ee0cc772e476fe5c9f83428c42295aea39d" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_SERVER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0cbf46a4780b2703666f6573961efb312a8ee3" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_SERVER_PORT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df0e1222695d78b4918f5efc4252065e1d2b0cf" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_USER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da5e0c654b1016ecdeec861ecba8b4397eb96ab" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_VALIDATE_CERTS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee100c0ce61dac01d40c7c8a0384c0213534c3b" translate="yes" xml:space="preserve">
          <source>You may run a task asynchronously by specifying a poll value of 0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4b9aed73fd226b2a045b9c2b618e38bcfcc74c" translate="yes" xml:space="preserve">
          <source>You may see a collection of other GCP modules that do not conform to this naming convention. These are the original modules primarily developed by the Ansible community. You will find some overlapping functionality such as with the &amp;ldquo;gce&amp;rdquo; module and the new &amp;ldquo;gcp_compute_instance&amp;rdquo; module. Either can be used, but you may experience issues trying to use them together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68856aba575b155cb0fd3086e8bbe9402707651f" translate="yes" xml:space="preserve">
          <source>You may specify a maximum of up to 5 ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306fa001fbba63361ab4be6654c7b60a4de778aa" translate="yes" xml:space="preserve">
          <source>You may specify a number of seconds for the timeout override.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c15a8dad2eb75c9f377a77232af82c427373a3" translate="yes" xml:space="preserve">
          <source>You may specify a single list item of &lt;code&gt;default&lt;/code&gt; to set the value back to the system's default of &lt;code&gt;127.0.0.0/8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9ad01e0e73cb4262facff972c081bc3d241e15" translate="yes" xml:space="preserve">
          <source>You may want your Ansible handlers to use variables. For example, if the name of a service varies slightly by distribution, you want your output to show the exact name of the restarted service for each target machine. Avoid placing variables in the name of the handler. Since handler names are templated early on, Ansible may not have a value available for a handler name like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa484f48afe07ea5ec9c159daa19f1e3b555de9" translate="yes" xml:space="preserve">
          <source>You might also use an ad-hoc task to install, update, or remove packages on managed nodes using a package management module like yum. To ensure a package is installed without updating it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b962324571629f141c7f02843c6e082e539891de" translate="yes" xml:space="preserve">
          <source>You might also want to simply specify the environment for a single task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d18ea25d5c1a08a267c09f938d52eadafab6e11" translate="yes" xml:space="preserve">
          <source>You must also configure MAC masquerade addresses and disable &lt;code&gt;arp&lt;/code&gt; on the virtual address when Spanning is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0787621ab91ff4f78bbf0d9814b30227b9003cf2" translate="yes" xml:space="preserve">
          <source>You must be mindful to name your registration pools unique names. While BIG-IQ does not require this, this module does. If you do not do this, the behavior of the module is undefined and you may end up putting licenses in the wrong registration key pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30ac1b2c3e636c703734c44996c4c9eab0a3e51" translate="yes" xml:space="preserve">
          <source>You must create a model for your new resource. The resource module builder uses this model to create:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60611420e85c2e847bcff50f233cad6b3d43b3ca" translate="yes" xml:space="preserve">
          <source>You must ensure that psycopg2 is installed on the host before using this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cd24addc678fa41509995d792d982943105d28" translate="yes" xml:space="preserve">
          <source>You must have a correctly configured offload network for offload to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21507a8b7c7ace9b53ca20763499f434be47b834" translate="yes" xml:space="preserve">
          <source>You must have an existing LogicMonitor account for this module to function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102103ff22729103b9f8da6672f90db4c9a0fbc3" translate="yes" xml:space="preserve">
          <source>You must pass all desired launch permissions if you wish to modify existing launch permissions (passing just groups will remove all users)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7bad302363a21b4c84ad2f29dfaa394eb1c01d" translate="yes" xml:space="preserve">
          <source>You must provide either &lt;code&gt;vm&lt;/code&gt; parameter or &lt;code&gt;template&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ab864ab04f4b4f63b86f81250e551ad5999ffd" translate="yes" xml:space="preserve">
          <source>You must provide either this property or the rawDisk.source property but not both to create an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91376cd31935f13766369dc6aee2a0877fe0029" translate="yes" xml:space="preserve">
          <source>You must run the NIOS lookup plugins locally by specifying &lt;code&gt;connection: local&lt;/code&gt;. See &lt;a href=&quot;../plugins/lookup#lookup-plugins&quot;&gt;lookup plugins&lt;/a&gt; for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc6f724d3129b32ccdb986f0805d3e4f4127690" translate="yes" xml:space="preserve">
          <source>You must run this module with async, otherwise it will hang until the expire period has passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09edb05aba1e9aa07996561b429450284e002761" translate="yes" xml:space="preserve">
          <source>You must set &lt;code&gt;PUREFA_URL&lt;/code&gt; and &lt;code&gt;PUREFA_API&lt;/code&gt; environment variables if &lt;em&gt;fa_url&lt;/em&gt; and &lt;em&gt;api_token&lt;/em&gt; arguments are not passed to the module directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cad5236a7e2bd702f04e0fe823ee94e705a082" translate="yes" xml:space="preserve">
          <source>You must set &lt;code&gt;PUREFB_URL&lt;/code&gt; and &lt;code&gt;PUREFB_API&lt;/code&gt; environment variables if &lt;em&gt;fb_url&lt;/em&gt; and &lt;em&gt;api_token&lt;/em&gt; arguments are not passed to the module directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fce0fbe6d9648ea59d1df36527174427cbddeb" translate="yes" xml:space="preserve">
          <source>You must set INFINIBOX_USER and INFINIBOX_PASSWORD environment variables if user and password arguments are not passed to the module directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90488aac954bfc028dedb9d9ec05ffb6a620c54a" translate="yes" xml:space="preserve">
          <source>You must set the &lt;code&gt;until&lt;/code&gt; parameter if you want a task to retry. If &lt;code&gt;until&lt;/code&gt; is not defined, the value for the &lt;code&gt;retries&lt;/code&gt; parameter is forced to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0dbdbdc4000768993eaca104640210d267eb6f0" translate="yes" xml:space="preserve">
          <source>You must set the connection type to either &lt;code&gt;connection: network_cli&lt;/code&gt; or &lt;code&gt;connection: httpapi&lt;/code&gt; to use &lt;code&gt;become&lt;/code&gt; for privilege escalation on network devices. Check the &lt;a href=&quot;../network/user_guide/platform_index#platform-options&quot;&gt;Platform Options&lt;/a&gt; and &lt;a href=&quot;../modules/list_of_network_modules#network-modules&quot;&gt;Network modules&lt;/a&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b947a91273c82dacaf84b0a1bd6777df8ac32647" translate="yes" xml:space="preserve">
          <source>You must specify both the variable name and the value with &lt;code&gt;--extra-vars&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50baaff61e0737d4da991c73700758236c2bfb05" translate="yes" xml:space="preserve">
          <source>You must specify either a &lt;code&gt;datacenter_name&lt;/code&gt; or a &lt;code&gt;folder&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82154f99c74bcd2ddbd87475e8ece07ca250aee6" translate="yes" xml:space="preserve">
          <source>You must specify either a &lt;code&gt;folder&lt;/code&gt; or a &lt;code&gt;datacenter_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219f673d4e52097f407a0545d2cb340e97a5f522" translate="yes" xml:space="preserve">
          <source>You must specify lv (when managing the state of logical volumes) or thinpool (when managing a thin provisioned volume).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555d3b00ff83b7fa3f313ec5711f7c0da968992b" translate="yes" xml:space="preserve">
          <source>You need a working hponcfg on the target system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5288ab9e89758aaac9bd8fff6539207dc7995d1a" translate="yes" xml:space="preserve">
          <source>You need an NIOS account with the WAPI feature enabled to use Ansible with Infoblox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1dd52a9f15085486157063aa5ffb75e387cd6b" translate="yes" xml:space="preserve">
          <source>You need at least hcloud-python 1.3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a863fa4dc820a090e4e259ccddf5e9a54bbceec3" translate="yes" xml:space="preserve">
          <source>You need root rights to read or adjust the inittab with the &lt;code&gt;lsitab&lt;/code&gt;, &lt;code&gt;chitab&lt;/code&gt;, &lt;code&gt;mkitab&lt;/code&gt; or &lt;code&gt;rmitab&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc41990a3c8d405bdc35b0f30d6618c07a00b4ee" translate="yes" xml:space="preserve">
          <source>You need the following parameters with your ACI module(s) for it to work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4baf621fa1343dfd6e8326525d7722ade690b6" translate="yes" xml:space="preserve">
          <source>You need to install at least one platform provider role for your network user roles, and set &lt;code&gt;ansible_network_provider&lt;/code&gt; to that provider (for example, &lt;code&gt;ansible_network_provider: ansible-network.cisco_ios&lt;/code&gt;). Ansible Galaxy automatically installs any other dependencies listed in the role details on Ansible Galaxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79632b833bec335fc8abfedd90ca7d759981cb13" translate="yes" xml:space="preserve">
          <source>You need to install this Python SDK on host from where you want to invoke VMware automation. For example, if you are using control node then &lt;code&gt;pyVmomi&lt;/code&gt; must be installed on control node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be6211b5bf25b8a54bdb5a2a8b9f8fa18e5ccf6" translate="yes" xml:space="preserve">
          <source>You need to open an account and log into it before you can get a token. You can find your token at the following page: &lt;a href=&quot;https://console.online.net/en/api/access&quot;&gt;https://console.online.net/en/api/access&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201b679e5713818a39a54c886a4b24b9bea98d88" translate="yes" xml:space="preserve">
          <source>You need to reboot the ESXi host if you change the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9333d3561e1aa310c2ec2fef6a0264fd497e2e" translate="yes" xml:space="preserve">
          <source>You need to reset the agent (to factory defaults) if you want to clear all community strings, trap targets, or filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e705c6c053d9ba70497d36213eb4828c50f1d5" translate="yes" xml:space="preserve">
          <source>You need to run the task two times if you want to remove all LAGs and change the support mode to &amp;lsquo;basic&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad18c46f4d9466b5188d294dc8040d3a4ca8ca68" translate="yes" xml:space="preserve">
          <source>You need to set this password on the LXD server before running this module using the following command. lxc config set core.trust_password &amp;lt;some random password&amp;gt; See &lt;a href=&quot;https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/&quot;&gt;https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91da18021864ea5f774e7ea1d091cc414f6c9a4" translate="yes" xml:space="preserve">
          <source>You need to use &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, and &lt;code&gt;community&lt;/code&gt; for each trap target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9439d2a544e093d5f9ef000e070e999675f4a138" translate="yes" xml:space="preserve">
          <source>You need to use Python 2.7.9 version in order to use &lt;code&gt;validate_certs&lt;/code&gt; option, as this version is capable of changing the SSL verification behaviours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671291856d0d1f52d999e71c2d72f61d82bf5323" translate="yes" xml:space="preserve">
          <source>You need to use Python 2.7.9 version in order to use &lt;code&gt;validate_certs&lt;/code&gt; option, as this version is capable of changing the SSL verification behaviours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5e94a4329161f454bd891622e024628540e593" translate="yes" xml:space="preserve">
          <source>You should already have documented each module as described in &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/dev_guide/developing_modules_documenting.html#developing-modules-documenting&quot;&gt;Module format and documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e938d6d841cb8cd522e846aa4006061ddb3e352" translate="yes" xml:space="preserve">
          <source>You should also be aware of &lt;code&gt;? : -&lt;/code&gt;. In YAML, they are allowed at the beginning of a string if a non-space character follows, but YAML processor implementations differ, so it&amp;rsquo;s better to use quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f691a5aca0cd2cc35b529211f4d1b49ff05446" translate="yes" xml:space="preserve">
          <source>You should also consult the &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html#modules-by-category&quot;&gt;module documentation&lt;/a&gt; section. Modules like &lt;a href=&quot;../modules/ec2_elb_module#ec2-elb-module&quot;&gt;ec2_elb&lt;/a&gt;, &lt;a href=&quot;../modules/nagios_module#nagios-module&quot;&gt;nagios&lt;/a&gt;, &lt;a href=&quot;../modules/bigip_pool_module#bigip-pool-module&quot;&gt;bigip_pool&lt;/a&gt;, and other &lt;a href=&quot;../modules/list_of_network_modules#network-modules&quot;&gt;Network modules&lt;/a&gt; dovetail neatly with the concepts mentioned here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1019c6e2ca989df12f6a8578414dbc1d288d08cd" translate="yes" xml:space="preserve">
          <source>You should always wrap this value in quotes to prevent Ansible from interpreting the value as a literal hexadecimal number and converting it to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620f8318dbd982fcf567476e8a5df3d559b89d50" translate="yes" xml:space="preserve">
          <source>You should look at &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;Example Playbooks&lt;/a&gt; while reading along with the playbook documentation. These illustrate best practices as well as how to put many of the various concepts together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff063838cf096654dfaca81b92393bd62833057" translate="yes" xml:space="preserve">
          <source>You should not alter which plugin is used unless you have a setup in which the default &lt;code&gt;/bin/sh&lt;/code&gt; is not a POSIX compatible shell or is not available for execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5591967d4de7847d7cb6a89eeb9de562676a48" translate="yes" xml:space="preserve">
          <source>You should not use this option unless you really know what you are doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b71ee483ce28ee013aa8e65435090a8affe826" translate="yes" xml:space="preserve">
          <source>You should only consider setting this value in cases where you know exactly what you're doing, &lt;b&gt;or&lt;/b&gt;, you are working with a pre-existing internal data group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd228a6074789e8d3f95dba4714709e8808fdfb" translate="yes" xml:space="preserve">
          <source>You should only quote strings when it is absolutely necessary or required by YAML, and then use single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7631c4ebdb7c031cd87200d1f0cccdb8e89d20ae" translate="yes" xml:space="preserve">
          <source>You should only use this field if the automatic selection is not working for some reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80653ed9e9b6af9acd314921888997d2e7a76302" translate="yes" xml:space="preserve">
          <source>You should see output for each host in your inventory, similar to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f118c99f6abec0fd0de2428b67c19c19060ccef" translate="yes" xml:space="preserve">
          <source>You should take into account the transmission and propagation delays for the interface when you set this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f016a10351300af45a3dbc86882edfb8e05b7f31" translate="yes" xml:space="preserve">
          <source>You should use this with the wait option. Since you can not release an address while a delete operation is happening.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b142dddebd315ed6ac78806bae7e5c88d817b57b" translate="yes" xml:space="preserve">
          <source>You should use vhost, configure_priv, write_priv, and read_priv options instead if you care about permissions for just some vhosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf6fcc3f884136e371703c863d1704abbe2241c" translate="yes" xml:space="preserve">
          <source>You shouldn&amp;rsquo;t attempt run a task asynchronously by specifying a poll value of 0 with operations that require exclusive locks (such as yum transactions) if you expect to run other commands later in the playbook against those same resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5187e05884114ce62434411dc709f4d3a2a262f5" translate="yes" xml:space="preserve">
          <source>You specify role dependencies in the &lt;code&gt;meta/main.yml&lt;/code&gt; file by providing a list of roles. If the source of a role is Galaxy, you can simply specify the role in the format &lt;code&gt;namespace.role_name&lt;/code&gt;. You can also use the more complex format in &lt;code&gt;requirements.yml&lt;/code&gt;, allowing you to provide &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;scm&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078c8f5c7d3da32b93cb9663be369ed7d2aacf08" translate="yes" xml:space="preserve">
          <source>You specify the template as a variable that the system replaces with user-specific information during the logon attempt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85051188b5747789a3c11f461349c38f15a6bde5" translate="yes" xml:space="preserve">
          <source>You use a pattern almost any time you execute an ad-hoc command or a playbook. The pattern is the only element of an &lt;a href=&quot;intro_adhoc#intro-adhoc&quot;&gt;ad-hoc command&lt;/a&gt; that has no flag. It is usually the second element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b18b1c143005393c979da313f245cbb86202c5f" translate="yes" xml:space="preserve">
          <source>You will also need to configure other settings specific to each plugin. Consult the individual plugin documentation or the Ansible &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafcd87bd65849a99af5f5b254c9d2941ad768ee" translate="yes" xml:space="preserve">
          <source>You will find our roadmap, an overview of open ACI issues and pull-requests, and more information about who we are. If you have an interest in using ACI with Ansible, feel free to join! We occasionally meet online to track progress and prepare for new Ansible releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0000fdd05ee6065cc44286df6ff1fce67eee7c4" translate="yes" xml:space="preserve">
          <source>You will know how many hosts may run a task, and which of them is actually running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280da90eed86310af3f1ddf279786ac3d893bd7d" translate="yes" xml:space="preserve">
          <source>You will know how many tasks has the playbook to run, and which one is actually running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bdd0b1ec3dfc17045248652fa0447b63e14594" translate="yes" xml:space="preserve">
          <source>You will no longer be able to create a legacy network on Feb 1, 2020.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9958e57ff968e45356ccfb0c2e984c0ec246d813" translate="yes" xml:space="preserve">
          <source>You will not see any JSON output after this playbook completes as compared to other operations performed using &lt;code&gt;vmware_guest&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f076d5b74258a4fe8c74d9bda8c38c9166d5a538" translate="yes" xml:space="preserve">
          <source>You will note a lot of &amp;lsquo;skipped&amp;rsquo; output by default in Ansible when using this approach on systems that don&amp;rsquo;t match the criteria. In many cases the &lt;a href=&quot;../modules/group_by_module#group-by-module&quot;&gt;group_by module&lt;/a&gt; can be a more streamlined way to accomplish the same thing; see &lt;a href=&quot;playbooks_best_practices#os-variance&quot;&gt;Operating System and Distribution Variance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8be905f84f7dc021255955757cf13b6c5c4b84" translate="yes" xml:space="preserve">
          <source>You will require a pushover.net account to use this module. But no account is required to receive messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53ad6a104c25f6ff4b9516ee58cbb3f9d7eb40d" translate="yes" xml:space="preserve">
          <source>You will require a telegram account and create telegram bot to use this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6595624833d92cd9bc52ca9cf3d8e7d07faaffab" translate="yes" xml:space="preserve">
          <source>You will run into errors because Ansible reads name in this context as a keyword. Beginning in 2.5, if you want to use a variable name that is also a keyword, you must explicitly declare it as a variable for the role:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bb8e56e7e6aa5cb6630b9df99953cb257334ee" translate="yes" xml:space="preserve">
          <source>You will see a bit of JSON output after this playbook completes. This output shows various parameters that are returned from the module and from vCenter about the newly created VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e6846d7a72a1c9111ac3e90c11600c1a899664" translate="yes" xml:space="preserve">
          <source>You will want to quote hash values using colons followed by a space or the end of the line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4350c320ab8a4e9c0244a1bbb365a44e93d9112e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also want to read up on &lt;a href=&quot;playbooks_reuse_roles#playbooks-reuse-roles&quot;&gt;Roles&lt;/a&gt;, as the &amp;lsquo;pre_task&amp;rsquo; and &amp;lsquo;post_task&amp;rsquo; concepts are the places where you would typically call these modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579eef1c95a073e86071cfb8e492a82eb5367d18" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need this Python module installed on the execution host, usually your workstation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3841fb36d71c3194786244732f5267b11201c390" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to create a single disk using the disks[] parameter and set it to be the boot disk (disks[].boot = true)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151a6f484c59e9a09bd5956d5781667c346a46d3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve anchored the value of &lt;code&gt;version&lt;/code&gt; with the &lt;code&gt;&amp;amp;my_version&lt;/code&gt; anchor, and re-used it with the &lt;code&gt;*my_version&lt;/code&gt; alias. Anchors and aliases let you access nested values inside dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b133299611b9ce958417e372eab9335d072676" translate="yes" xml:space="preserve">
          <source>YouTube EDU filter level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda8bf8b1546ca92211de9cad9745d9dcb43e03b" translate="yes" xml:space="preserve">
          <source>YouTube channel ID to be filtered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9ed30a47d826a33c28c75f6c7904cdd7910808" translate="yes" xml:space="preserve">
          <source>YouTube channel filter status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d02c50d2038ec10ed940b8ed8ebd8035145623" translate="yes" xml:space="preserve">
          <source>YouTube channel filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1cdab74bed6d67a4f2125021dc5a0a904887e5" translate="yes" xml:space="preserve">
          <source>Your Azure subscription Id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188913344f357566625cf0926f7e1ef5f001a909" translate="yes" xml:space="preserve">
          <source>Your Client ID, which is found in the &amp;ldquo;client id&amp;rdquo; box in the &amp;ldquo;Configure&amp;rdquo; page of your application in the Azure portal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecd08062aa4fdb13319f6d56de6ea8ce66a648d" translate="yes" xml:space="preserve">
          <source>Your DataDog API key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2add35d39a13f3059e1013e5ece729c151f981e2" translate="yes" xml:space="preserve">
          <source>Your DataDog app key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15f4bf189551d6be623d8c20de8b27523af31b9" translate="yes" xml:space="preserve">
          <source>Your Datadog API key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee0f49a12d669c50e40e376494c6dbf669177f7" translate="yes" xml:space="preserve">
          <source>Your Datadog app key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22184395914c93dfcce4ed68807db1d518eee29" translate="yes" xml:space="preserve">
          <source>Your GCE project ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f689938ff777b982a366d40baca8babd4364bb53" translate="yes" xml:space="preserve">
          <source>Your GCP project ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8ad0cb43a3b6831d0e8578503ef2aa117c6af2" translate="yes" xml:space="preserve">
          <source>Your Secret key, generated when you created the application. You cannot show the key after creation. If you lost the key, you must create a new one in the &amp;ldquo;Configure&amp;rdquo; page of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb0e6138749158524c80b70636d8ff82696ea5d" translate="yes" xml:space="preserve">
          <source>Your account ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0102e824a2dbeaa6e358012972dddb63faef113d" translate="yes" xml:space="preserve">
          <source>Your account balance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b30455b4f86787ddde1c49848f97b6b308f951" translate="yes" xml:space="preserve">
          <source>Your configured plugin directory specified in Elasticsearch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba28159346409cac4c21cb517d4125a36295ae41" translate="yes" xml:space="preserve">
          <source>Your configured plugin directory specified in Kibana.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d66465f3e113f5a7727041c53935dbf3a86ad28" translate="yes" xml:space="preserve">
          <source>Your floating IP is routed to this IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5274b42e57c713aadd305d083849b544eddac5d6" translate="yes" xml:space="preserve">
          <source>Your fully qualified domain name (for example, yourname.DDNS.com).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6789d63cae5f4e047438575ae07e7e2dd88d285" translate="yes" xml:space="preserve">
          <source>Your git version is too old to fully support the depth argument. Falling back to full checkouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf4552cfa0c3b8e3f84c441076f5f5934d4f4cc" translate="yes" xml:space="preserve">
          <source>Your inventory can store much more than IPs and FQDNs. You can create &lt;a href=&quot;intro_inventory#inventory-aliases&quot;&gt;aliases&lt;/a&gt;, set variable values for a single host with &lt;a href=&quot;intro_inventory#host-variables&quot;&gt;host vars&lt;/a&gt;, or set variable values for multiple hosts with &lt;a href=&quot;intro_inventory#group-variables&quot;&gt;group vars&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427cf3bfe4e403e551e5f49db7ada7733059dc70" translate="yes" xml:space="preserve">
          <source>Your inventory source might be a directory of inventory configuration files. The constructed inventory plugin only operates on those hosts already in inventory, so you may want the constructed inventory configuration parsed at a particular point (such as last). Ansible parses the directory recursively, alphabetically. You cannot configure the parsing approach, so name your files to make it work predictably. Inventory plugins that extend constructed features directly can work around that restriction by adding constructed options in addition to the inventory plugin options. Otherwise, you can use &lt;code&gt;-i&lt;/code&gt; with multiple sources to impose a specific order, e.g. &lt;code&gt;-i demo.aws_ec2.yml -i clouds.yml -i constructed.yml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8f2298c1607985f5d30b1dfb289dc68fd9df3c" translate="yes" xml:space="preserve">
          <source>Your key will be used for validation of the &lt;code&gt;type&lt;/code&gt; parameter to this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb216e53113e8475df12551e8113e93c5eab0d2" translate="yes" xml:space="preserve">
          <source>Your pattern must match your inventory syntax. If you define a host as an &lt;a href=&quot;intro_inventory#inventory-aliases&quot;&gt;alias&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b999dd6708c1ad020f2431a5bc396f5e4dab2b65" translate="yes" xml:space="preserve">
          <source>Your personal access token required to validate the Spark API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895f73a25e1e899a9ce7435d82ba119b2b1ca264" translate="yes" xml:space="preserve">
          <source>Your platform-specific section should include the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db90a10ea8f793c55c948a8acaf0afe53c0f928" translate="yes" xml:space="preserve">
          <source>Your private token to interact with the GitLab API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e125448f7dac1cee297acdedea7859de251b97f0" translate="yes" xml:space="preserve">
          <source>Your project access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f512b5676634dca7dff673871391b4dde73f2c5" translate="yes" xml:space="preserve">
          <source>Your unique API ID from status.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0887c790814abaf0d1e19a57968162c45f122b" translate="yes" xml:space="preserve">
          <source>Your unique API Key from status.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e4128f4524c667f8401325ab6aef8ae4a77054" translate="yes" xml:space="preserve">
          <source>Your unique StatusPage ID from status.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af535323529f5bf1ae79d41debe89b7a860b1742" translate="yes" xml:space="preserve">
          <source>Your usage of Ansible should fit your needs, however, not ours, so feel free to modify this approach and organize as you see fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650a4162b3e0236e01a3d8ff3dbaacb0f4f93473" translate="yes" xml:space="preserve">
          <source>Your workflow may be something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6e733f9e07fa8a76f9c7046d949d5be016df74" translate="yes" xml:space="preserve">
          <source>YourNet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6582fafe43d1e088f0cefbac7e4b50cd695aa7a" translate="yes" xml:space="preserve">
          <source>YourOrg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e4f53c9775194f9989274189e035e34745a3ca" translate="yes" xml:space="preserve">
          <source>YourTemplate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64096e025445b9a6ec89d5db4f8203d74e22c447" translate="yes" xml:space="preserve">
          <source>Yum itself has two types of groups. &amp;ldquo;Package groups&amp;rdquo; are specified in the rpm itself while &amp;ldquo;environment groups&amp;rdquo; are specified in a separate file (usually by the distribution). Unfortunately, this division becomes apparent to ansible users because ansible needs to operate on the group of packages in a single transaction and yum requires groups to be specified in different ways when used in that way. Package groups are specified as &amp;ldquo;@development-tools&amp;rdquo; and environment groups are &amp;ldquo;@^gnome-desktop-environment&amp;rdquo;. Use the &amp;ldquo;yum group list hidden ids&amp;rdquo; command to see which category of group the group you want to install falls into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fbebf7a8bb9617c505cd9db5c097d1e294111a" translate="yes" xml:space="preserve">
          <source>Yunfan Zhang (@YunfanZhang42)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dd1b4e5481fa0e104a73571440e0a4c9301cba" translate="yes" xml:space="preserve">
          <source>Yunge Zhu (@yungezz)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b0423cc7c0875257810025bc669a7c571cddb5" translate="yes" xml:space="preserve">
          <source>Yunge Zhu(@yungezz)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd89a7482327bdfd32fa524c743e46f35f7b64f2" translate="yes" xml:space="preserve">
          <source>Yunge zhu (@yungezz)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310f8df274a5e4b25a768afe652089723a5e074d" translate="yes" xml:space="preserve">
          <source>Yuwei Zhou (@yuwzho)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a321b410d30cc3b1abd66c6aa2d83d6166b232af" translate="yes" xml:space="preserve">
          <source>Z100</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0584e425b33b3535da8113688a0fb0b546be5ee2" translate="yes" xml:space="preserve">
          <source>Z1PABCD0000000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51fd0332b654efc1327173060830c7351581dd8" translate="yes" xml:space="preserve">
          <source>Z6JQG9820BEFMW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a63c34c007b1217227e68d4c9aa5c6f7554663c" translate="yes" xml:space="preserve">
          <source>ZA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9951b5af8c586c74337d54aa767888c38895f843" translate="yes" xml:space="preserve">
          <source>ZB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fa9f90cdd6c95f785a52a6dea971727000f0e6" translate="yes" xml:space="preserve">
          <source>ZFS boot environment name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59048534eee2868ec2355ed5eba8fa0ff4b4353" translate="yes" xml:space="preserve">
          <source>ZFS dataset facts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fc356fe7e57f9fa8e374a24d38cd8f52fb3324" translate="yes" xml:space="preserve">
          <source>ZFS dataset name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5ab8f1b778a1eef3afd1851998bc77fe0d064a" translate="yes" xml:space="preserve">
          <source>ZFS dataset name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8022d37915523b57536b63c34be24ff4958ca6" translate="yes" xml:space="preserve">
          <source>ZFS pool facts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fa7123fcfadab4e00a0a45f885ea719ee31880" translate="yes" xml:space="preserve">
          <source>ZFS pool name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c863183b21597a7d0e8743062fe12672b94270" translate="yes" xml:space="preserve">
          <source>ZFS pool name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96606b735eccd6acb60225008a31174407f8c836" translate="yes" xml:space="preserve">
          <source>ZFS pool the VM's zone dataset will be created in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c942894d5b0d75dc7bb96372ed216cf5563f8a" translate="yes" xml:space="preserve">
          <source>ZFS snapshot to create BE from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaa31529178b3b782bf956e4b07d89c9903c3bf" translate="yes" xml:space="preserve">
          <source>ZIP_DEFLATED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fd3b8ddeaebdb5d77ff620bb2c9be08bca9fa1" translate="yes" xml:space="preserve">
          <source>ZONE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bc8a089ce4818a14b25ca616cec89b300b5f14" translate="yes" xml:space="preserve">
          <source>ZTR2ITUGPA61AM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068b3b30f97458b08228da9b95ec0f950e7e4af2" translate="yes" xml:space="preserve">
          <source>ZW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd64983e829bafb54a935c9e73c6ec62636cfc17" translate="yes" xml:space="preserve">
          <source>ZXhwb3J0IENMT1VE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f5626c601ce0e7eb4a6acd053708ad45a948af" translate="yes" xml:space="preserve">
          <source>Zabbix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46cfc38e627c38ff1a3adf7c6b6214636a25ed9" translate="yes" xml:space="preserve">
          <source>Zabbix user name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f91d11127cfcb5de7b8a72f94b0712cb32bd109" translate="yes" xml:space="preserve">
          <source>Zabbix user password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e44b2a6638d2d48543c0d4abc1347e15c55318f" translate="yes" xml:space="preserve">
          <source>Zac Blazic (@zacblazic)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b6539a177014e7e2fc4ec22ce0e961fcfd204b" translate="yes" xml:space="preserve">
          <source>Zacharie Eakin (@Zeekin)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498ee288ef9fd7ec3a07e0da44636ae5c8533f3e" translate="yes" xml:space="preserve">
          <source>Zero-based index number for SSIDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b089cf57a873bcf42e15859b2140cde7a578197" translate="yes" xml:space="preserve">
          <source>Zfs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd966ecd62f15d7b13988db91a40e6a9c11b7aee" translate="yes" xml:space="preserve">
          <source>Zhijin Zhou (@QijunPan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e78a4d09701935a93a840ed64d63683aa99f39e" translate="yes" xml:space="preserve">
          <source>Zhou Zhijin (@QijunPan)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f611bd8e31317b83cd333b51f22dd25fed9dd" translate="yes" xml:space="preserve">
          <source>Zim Kalinowski (@zikalino)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03efccb49f3ff5f0055a644eae98835dda00b789" translate="yes" xml:space="preserve">
          <source>Zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81e41b3f57bdf224d92f23e687a41b963e991df" translate="yes" xml:space="preserve">
          <source>Zone ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b118a9a352a132b4664e3b6933aa9c68ac09a" translate="yes" xml:space="preserve">
          <source>Zone TTL value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4dcc0ab1c7e68322aa37202af680cae0eb1630" translate="yes" xml:space="preserve">
          <source>Zone description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c77f554fdd8a04346112981dd0cf637021ca86f" translate="yes" xml:space="preserve">
          <source>Zone domains can be thought of as a collection of domains, all of which share the same DNS records (i.e. they point to the same IP). An API key generated via the Memset customer control panel is needed with the following minimum scope - &lt;em&gt;dns.zone_domain_create&lt;/em&gt;, &lt;em&gt;dns.zone_domain_delete&lt;/em&gt;, &lt;em&gt;dns.zone_domain_list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f1b19122c77526cca0d724085039c4c3658cb5" translate="yes" xml:space="preserve">
          <source>Zone id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5896c343b4258a9744272503d57ec912a0f64d" translate="yes" xml:space="preserve">
          <source>Zone identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8199fc43232801cf660cde8afc58a489b9c85f5" translate="yes" xml:space="preserve">
          <source>Zone in which to launch MIG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ae57d0c07ed292aab176b15982aaf3fc7c5d4" translate="yes" xml:space="preserve">
          <source>Zone info from the Memset API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2482278759b7887645f1e8dbbe5a14b95710c2b" translate="yes" xml:space="preserve">
          <source>Zone is a public zone if not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0dc412f0a01c7c4ac523da20fe1a07b0418fa1" translate="yes" xml:space="preserve">
          <source>Zone managing the recordset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099afe738d5d0e9b6aae760c517f395360544b1d" translate="yes" xml:space="preserve">
          <source>Zone master nameservers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597e227239ad9b6c55cd845a4103f7c7f52caa44" translate="yes" xml:space="preserve">
          <source>Zone name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c49601ea997836e08187c26f032878b62fc7e8" translate="yes" xml:space="preserve">
          <source>Zone name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618d8e02612b160c49caf9f6db0da48081a8bc7a" translate="yes" xml:space="preserve">
          <source>Zone of the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7657003a0cc343bb72f03d7f0faa8caf06efcd" translate="yes" xml:space="preserve">
          <source>Zone of the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91571a73f8c2ee02898f245e8aede23fee0687cf" translate="yes" xml:space="preserve">
          <source>Zone of your domain name (ex. DDNS.com).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fbc11de151909cdb0b0da75caaf2692e19d57e" translate="yes" xml:space="preserve">
          <source>Zone of your domain name (for example, DDNS.com).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11433b6a5cb110a4b404db9a3c316f29059132c1" translate="yes" xml:space="preserve">
          <source>Zone owner email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a3f2d14078888f58e3611c849c6a672f8c0475" translate="yes" xml:space="preserve">
          <source>Zone the VPC is related to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71121f44501bfcd61834290943301f0f5abc236" translate="yes" xml:space="preserve">
          <source>Zone token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ace5b3f6569aee28965360c0c16e568e3d274b" translate="yes" xml:space="preserve">
          <source>Zone transactions (creating, deleting) can be performed by using only the zone and state parameters &amp;ldquo;present&amp;rdquo; or &amp;ldquo;absent&amp;rdquo;. Note that zone transactions must explicitly be permanent. This is a limitation in firewalld. This also means that you will have to reload firewalld after adding a zone that you wish to perform immediate actions on. The module will not take care of this for you implicitly because that would undo any previously performed immediate actions which were not permanent. Therefore, if you require immediate access to a newly created zone it is recommended you reload firewalld immediately after the zone creation returns with a changed state and before you perform any other immediate, non-permanent actions on that zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0608f24ee8a62304d756c2185f50ef2dee4b4260" translate="yes" xml:space="preserve">
          <source>Zone type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4a7ad6cec17b43c084a59b73e236fde206f8b8" translate="yes" xml:space="preserve">
          <source>Zone type (master to manage entries directly, slave to import entries from other zones).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29873108e454dbdbbac2c9675bb0ff63abb54df" translate="yes" xml:space="preserve">
          <source>Zone view (public to serve public clients, shadow to serve internal clients).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370695fa8446a024513637dc9e8c387325a2c925" translate="yes" xml:space="preserve">
          <source>Zone/VM hostname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed271e3fc95f4a7906a311c0cb3523a77a5eaaf5" translate="yes" xml:space="preserve">
          <source>Zone01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f278b0a1584caec44032bc1c54d0d5fc22e32b0" translate="yes" xml:space="preserve">
          <source>Zones can be thought of as a logical group of domains, all of which share the same DNS records (i.e. they point to the same IP). An API key generated via the Memset customer control panel is needed with the following minimum scope - &lt;em&gt;dns.zone_create&lt;/em&gt;, &lt;em&gt;dns.zone_delete&lt;/em&gt;, &lt;em&gt;dns.zone_list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a686654eef1f23286d4b49c579a636053df4fe6f" translate="yes" xml:space="preserve">
          <source>Zones that are newly created must still be set up with a domain registrar before they can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cac9967345271604c97ec4e2eb9faa82dfa0d5" translate="yes" xml:space="preserve">
          <source>Zsh or tcsh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a6dc910c738cc4d839d678130f1fbc3cdd7ec8" translate="yes" xml:space="preserve">
          <source>[ &quot;default&quot; ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e27800b2058fa86aa45b83ab088aaeb9700c16e" translate="yes" xml:space="preserve">
          <source>[ &quot;web01&quot;, &quot;web02&quot; ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0605ef1cd812785eeeb94adfbc10010da8c8d0a" translate="yes" xml:space="preserve">
          <source>[ &quot;webservers&quot; ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf690a40abb279a16802b36b34e0c24b711313da" translate="yes" xml:space="preserve">
          <source>[ 'my-healthcheck' ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9e00bc05dac0f803c7dff9f7bca84076490e6f" translate="yes" xml:space="preserve">
          <source>[ 'web' ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90bb5da94fe25befc081f5b5fad8d6cdcf5934b" translate="yes" xml:space="preserve">
          <source>[ { &quot;key&quot;: &quot;foo&quot;, &quot;value&quot;: &quot;bar&quot; } ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ce059214e59b609b519f34171ccddca897b883" translate="yes" xml:space="preserve">
          <source>[ { &quot;key&quot;: &quot;myCustomID&quot;, &quot;value&quot;: &quot;5510c31a-416e-11e8-9013-02000a6b00bf&quot; } ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0443b0fd376b36a89257969b2176039334a0bf78" translate="yes" xml:space="preserve">
          <source>[ { 'instance_group': 'mig_one', 'zone': 'us-central1-b'} ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4936fb088ffe3e824cdad9177232c39cd2e9442f" translate="yes" xml:space="preserve">
          <source>[ { 'messages': [], 'region_name': 'us-west-1', 'state': 'available', 'zone_name': 'us-west-1b' }, { 'messages': [], 'region_name': 'us-west-1', 'state': 'available', 'zone_name': 'us-west-1c' } ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc452b5ca1a2e02f4206bbb02a9220e682e8050a" translate="yes" xml:space="preserve">
          <source>[ { name: &quot;ROOT-1369&quot;, type: &quot;ROOT&quot;, size: 10737418240 }, { name: &quot;data01, type: &quot;DATADISK&quot;, size: 10737418240 } ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd69c3040f699696e241edb04c5d606c9a582e3" translate="yes" xml:space="preserve">
          <source>[&quot;!config&quot;, &quot;!mpls&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e1bf8bcf793730371dbe4a6ad0e8a8e8a2b2b7" translate="yes" xml:space="preserve">
          <source>[&quot;!config&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42f4906ed93ae4e2d4fa0b3c0ef629a5a2082f6" translate="yes" xml:space="preserve">
          <source>[&quot;.yaml&quot;, &quot;.yml&quot;, &quot;.json&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6afa48bbef4bf3f126958a7dcbb5714b5504b92" translate="yes" xml:space="preserve">
          <source>[&quot;.yml&quot;, &quot;.yaml&quot;, &quot;.json&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa7f109fb8e682aa56844c548b5bb68424bdcc0" translate="yes" xml:space="preserve">
          <source>[&quot;/sbin&quot;, &quot;/usr/sbin&quot;, &quot;/usr/local/sbin&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb4f8660b63eaa4c6c2881ace3809e201386369" translate="yes" xml:space="preserve">
          <source>[&quot;/var/tmp&quot;, &quot;/tmp&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fdb6ca3cc5b36ea97e9ede8be91850edb33e3c" translate="yes" xml:space="preserve">
          <source>[&quot;CAPABILITY_IAM&quot;, &quot;CAPABILITY_NAMED_IAM&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a3b655bc7c21978db93eb6f257d09dcb662f9c" translate="yes" xml:space="preserve">
          <source>[&quot;COPY test_table FROM '/tmp/data_file.txt' (FORMAT csv, DELIMITER ',', NULL 'NULL')&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c644e5780ee208e0490019e5cfbc826da8b8c2f" translate="yes" xml:space="preserve">
          <source>[&quot;CREATE TABLESPACE bar LOCATION '/incredible/ssd'&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85078b3a1438a7a198d8f7d65ac235c56d0e81e" translate="yes" xml:space="preserve">
          <source>[&quot;CriticalUpdates&quot;, &quot;SecurityUpdates&quot;, &quot;UpdateRollups&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac7b7f96e127a0b56593f9e50000a105e2f18c7" translate="yes" xml:space="preserve">
          <source>[&quot;Domain&quot;, &quot;Private&quot;, &quot;Public&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b75b6dcc60946e38296256ba97862078575f86" translate="yes" xml:space="preserve">
          <source>[&quot;ESTABLISHED&quot;, &quot;FIN_WAIT1&quot;, &quot;FIN_WAIT2&quot;, &quot;SYN_RECV&quot;, &quot;SYN_SENT&quot;, &quot;TIME_WAIT&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9368fb8b990319c17cf05e953edf2bd8c24033a" translate="yes" xml:space="preserve">
          <source>[&quot;Filename from src and at default directory of user shell on network_os.&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428732546567399533f5a7f05eb564576dcbc49d" translate="yes" xml:space="preserve">
          <source>[&quot;GroupMinSize&quot;, &quot;GroupMaxSize&quot;, &quot;GroupDesiredCapacity&quot;, &quot;GroupInServiceInstances&quot;, &quot;GroupPendingInstances&quot;, &quot;GroupStandbyInstances&quot;, &quot;GroupTerminatingInstances&quot;, &quot;GroupTotalInstances&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235c89d0dd14cac1363eac1efef8f7aee4aeecea" translate="yes" xml:space="preserve">
          <source>[&quot;Perform operation 'Invoke CimMethod' with the following parameters, &quot;, '[SERVER]: LCM: [Start Set ] [[File]DirectResourceAccess]', &quot;Operation 'Invoke CimMethod' complete.&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb88e3a0e8a9f8fd9fc6f43545e66d3e3b7a740" translate="yes" xml:space="preserve">
          <source>[&quot;Perform operation 'Invoke CimMethod' with the following parameters, &quot;, '[SERVER]: LCM: [Start Test ] [[File]DirectResourceAccess]', &quot;Operation 'Invoke CimMethod' complete.&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10ee6cdd059a23f94b6039faeb351d6d45879ad" translate="yes" xml:space="preserve">
          <source>[&quot;REF_NetworkAny&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fc1714c66ca81c1cb3eab1cc5924a246efcf81" translate="yes" xml:space="preserve">
          <source>[&quot;SELECT pg_create_physical_replication_slot('physical_one', False, False)&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd488cc4ddc0111971c9e6aba38ff187e9c4ae95" translate="yes" xml:space="preserve">
          <source>[&quot;Same filename as specified in I(src). The path will be playbook root or role root directory if playbook is part of a role.&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb452a08abdf124835b898f3fc045b1da0f41df0" translate="yes" xml:space="preserve">
          <source>[&quot;Systems&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c598c2275dd6b76ba4fd3ddc72dcb4952be677" translate="yes" xml:space="preserve">
          <source>[&quot;all&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a83dcb8f44b869d7aa739148a589acb8ae86edb" translate="yes" xml:space="preserve">
          <source>[&quot;ams1&quot;, &quot;par1&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb9570d8435afa52a5624320c5236afa7bf6d1d" translate="yes" xml:space="preserve">
          <source>[&quot;any&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d3e7b988d76573772469e490dff61c0a5587e2" translate="yes" xml:space="preserve">
          <source>[&quot;auditLog&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac14db0b2ea6a08c139698d00e86f68eface230" translate="yes" xml:space="preserve">
          <source>[&quot;auto&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be9e509567a807d9856af96f18187404b301fab" translate="yes" xml:space="preserve">
          <source>[&quot;autoscaling:EC2_INSTANCE_LAUNCH&quot;, &quot;autoscaling:EC2_INSTANCE_LAUNCH_ERROR&quot;, &quot;autoscaling:EC2_INSTANCE_TERMINATE&quot;, &quot;autoscaling:EC2_INSTANCE_TERMINATE_ERROR&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3b2f641bb14afc0b3aca2bd71965208bdc2a90" translate="yes" xml:space="preserve">
          <source>[&quot;channel subscription was absent and state is `present'&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bcd270c1362e6b61fb46048029feb6f1ad479f" translate="yes" xml:space="preserve">
          <source>[&quot;create&quot;, &quot;start&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e33dd5a507d2eb44bc06b85ec160727a396021" translate="yes" xml:space="preserve">
          <source>[&quot;create&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba99692c840235d6e89200215cad091b9611ce2" translate="yes" xml:space="preserve">
          <source>[&quot;creating&quot;, &quot;available&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2a04455f47ad1e9dec1cd6082c692a3671c380" translate="yes" xml:space="preserve">
          <source>[&quot;device&quot;, &quot;ltm&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59888bb127bc85ab30ca98065289c5c6d9025c9a" translate="yes" xml:space="preserve">
          <source>[&quot;external&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cf319b7f693068f4fca2fc7d03f5a41d971f53" translate="yes" xml:space="preserve">
          <source>[&quot;hd&quot;, &quot;network&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2c09056768ddff4efecd7e69e9fb884bfe25d4" translate="yes" xml:space="preserve">
          <source>[&quot;https://www.googleapis.com/auth/compute&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10304da2cd17b420dea394e5d85afa0a567c226d" translate="yes" xml:space="preserve">
          <source>[&quot;json&quot;, &quot;yaml&quot;, &quot;yml&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8378c5eee575d888a8bfa10ffd46efab6e5cf4a" translate="yes" xml:space="preserve">
          <source>[&quot;name&quot;, &quot;config.cpuHotAddEnabled&quot;, &quot;config.cpuHotRemoveEnabled&quot;, &quot;config.instanceUuid&quot;, &quot;config.hardware.numCPU&quot;, &quot;config.template&quot;, &quot;config.name&quot;, &quot;guest.hostName&quot;, &quot;guest.ipAddress&quot;, &quot;guest.guestId&quot;, &quot;guest.guestState&quot;, &quot;runtime.maxMemoryUsage&quot;, &quot;customValue&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda37bb9cfed82da7a65ffe30cb227384de06700" translate="yes" xml:space="preserve">
          <source>[&quot;pip&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4345f776778a9198dbbf2418d349748b97f025" translate="yes" xml:space="preserve">
          <source>[&quot;powerstate != \&quot;running\&quot;&quot;, &quot;provisioning_state != \&quot;succeeded\&quot;&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae0f67e01d79eca05306260b9df8fe3e34f7a7f" translate="yes" xml:space="preserve">
          <source>[&quot;public&quot;, &quot;private&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14ca2f1bf3fc8f15dbad8d92cc9d5b69aa43f5e" translate="yes" xml:space="preserve">
          <source>[&quot;public_ip&quot;, &quot;private_ip&quot;, &quot;name&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5849b6939a400a603780d350e46bcb218f59f5b2" translate="yes" xml:space="preserve">
          <source>[&quot;public_ipv4&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677acdac843e2827c610b8b433264a3427c1958a" translate="yes" xml:space="preserve">
          <source>[&quot;root&quot;, &quot;toor&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdf8af020d59ee1ff1378e64c5c80e7c47a6468" translate="yes" xml:space="preserve">
          <source>[&quot;set interfaces ethernet eth0 address '192.168.0.1/24'&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df9461b82e08ab34c9adb38a1946c5ddbdf9e14" translate="yes" xml:space="preserve">
          <source>[&quot;set service lldp interface eth2 'disable'&quot;, 'delete service lldp interface eth1 location']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d8b01854fbd1e7fa35fec5b4b2dbfaa9989334" translate="yes" xml:space="preserve">
          <source>[&quot;u'Clustering node rabbit@slave1 with rabbit@master ...'&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fc523a3f63652a4d5602cbaad1e014db396cd0" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;.yml&amp;rsquo;, &amp;lsquo;.yaml&amp;rsquo;, &amp;lsquo;.json&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1f8fc94305e669af1a9c268fd94ae39a46bf3a" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;/usr/bin/python&amp;rsquo;, &amp;lsquo;python3.7&amp;rsquo;, &amp;lsquo;python3.6&amp;rsquo;, &amp;lsquo;python3.5&amp;rsquo;, &amp;lsquo;python2.7&amp;rsquo;, &amp;lsquo;python2.6&amp;rsquo;, &amp;lsquo;/usr/libexec/platform-python&amp;rsquo;, &amp;lsquo;/usr/bin/python3&amp;rsquo;, &amp;lsquo;python&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215b4f168f852a61f3d1eba0b9e3366e99a04f05" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;^.git$&amp;rsquo;, &amp;lsquo;^.*/.git_keep$&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eea696fe3991230e7107f743561869767ba5682" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;all&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd6390a4962d7aee737a1423f7f160d5f94d825" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;all_inventory&amp;rsquo;, &amp;lsquo;groups_inventory&amp;rsquo;, &amp;lsquo;all_plugins_inventory&amp;rsquo;, &amp;lsquo;all_plugins_play&amp;rsquo;, &amp;lsquo;groups_plugins_inventory&amp;rsquo;, &amp;lsquo;groups_plugins_play&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c673308d4bf1880fe2ab1c46e0738e675193858" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;bud-frogs&amp;rsquo;, &amp;lsquo;bunny&amp;rsquo;, &amp;lsquo;cheese&amp;rsquo;, &amp;lsquo;daemon&amp;rsquo;, &amp;lsquo;default&amp;rsquo;, &amp;lsquo;dragon&amp;rsquo;, &amp;lsquo;elephant-in-snake&amp;rsquo;, &amp;lsquo;elephant&amp;rsquo;, &amp;lsquo;eyes&amp;rsquo;, &amp;lsquo;hellokitty&amp;rsquo;, &amp;lsquo;kitty&amp;rsquo;, &amp;lsquo;luke-koala&amp;rsquo;, &amp;lsquo;meow&amp;rsquo;, &amp;lsquo;milk&amp;rsquo;, &amp;lsquo;moofasa&amp;rsquo;, &amp;lsquo;moose&amp;rsquo;, &amp;lsquo;ren&amp;rsquo;, &amp;lsquo;sheep&amp;rsquo;, &amp;lsquo;small&amp;rsquo;, &amp;lsquo;stegosaurus&amp;rsquo;, &amp;lsquo;stimpy&amp;rsquo;, &amp;lsquo;supermilker&amp;rsquo;, &amp;lsquo;three-eyes&amp;rsquo;, &amp;lsquo;turkey&amp;rsquo;, &amp;lsquo;turtle&amp;rsquo;, &amp;lsquo;tux&amp;rsquo;, &amp;lsquo;udder&amp;rsquo;, &amp;lsquo;vader-koala&amp;rsquo;, &amp;lsquo;vader&amp;rsquo;, &amp;lsquo;www&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d9ab957751b97cbd6f624ba886a004f5b766bb" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;eos&amp;rsquo;, &amp;lsquo;nxos&amp;rsquo;, &amp;lsquo;ios&amp;rsquo;, &amp;lsquo;iosxr&amp;rsquo;, &amp;lsquo;junos&amp;rsquo;, &amp;lsquo;enos&amp;rsquo;, &amp;lsquo;ce&amp;rsquo;, &amp;lsquo;vyos&amp;rsquo;, &amp;lsquo;sros&amp;rsquo;, &amp;lsquo;dellos9&amp;rsquo;, &amp;lsquo;dellos10&amp;rsquo;, &amp;lsquo;dellos6&amp;rsquo;, &amp;lsquo;asa&amp;rsquo;, &amp;lsquo;aruba&amp;rsquo;, &amp;lsquo;aireos&amp;rsquo;, &amp;lsquo;bigip&amp;rsquo;, &amp;lsquo;ironware&amp;rsquo;, &amp;lsquo;onyx&amp;rsquo;, &amp;lsquo;netconf&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3310d52f2dbc06162c22042af151d1ddbc0ef2d2" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;host_list&amp;rsquo;, &amp;lsquo;script&amp;rsquo;, &amp;lsquo;auto&amp;rsquo;, &amp;lsquo;yaml&amp;rsquo;, &amp;lsquo;ini&amp;rsquo;, &amp;lsquo;toml&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833735e3358b5ad7c58eb3fe6c90975032b86302" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;smart&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dc0aa0fb5717bebd6a29a18444334a9c4e5106" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;string&amp;rsquo;, &amp;lsquo;to_json&amp;rsquo;, &amp;lsquo;to_nice_json&amp;rsquo;, &amp;lsquo;to_yaml&amp;rsquo;, &amp;lsquo;ppretty&amp;rsquo;, &amp;lsquo;json&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83920dd8226416f82fd1ff9ced666cad3c279ca" translate="yes" xml:space="preserve">
          <source>['&quot;public&quot;.&quot;prices&quot;', '&quot;public&quot;.&quot;vehicles&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854749d3e55661da4be6b9ddb4c3c41db083f97c" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;aaa xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-lib-cfg&quot;&amp;gt; &amp;lt;usernames xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-locald-cfg&quot;&amp;gt; &amp;lt;username xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;name&amp;gt;test7&amp;lt;/name&amp;gt; &amp;lt;usergroup-under-usernames&amp;gt; &amp;lt;usergroup-under-username&amp;gt; &amp;lt;name&amp;gt;sysadmin&amp;lt;/name&amp;gt; &amp;lt;/usergroup-under-username&amp;gt; &amp;lt;/usergroup-under-usernames&amp;gt; &amp;lt;secret&amp;gt;$1$ZsXC$zZ50wqhDC543ZWQkkAHLW0&amp;lt;/secret&amp;gt; &amp;lt;/username&amp;gt; &amp;lt;/usernames&amp;gt; &amp;lt;/aaa&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e37da361e61320e9cda4729ff99b24b597a7b9f" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;banners xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-infra-infra-cfg&quot;&amp;gt; &amp;lt;banner xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;banner-name&amp;gt;motd&amp;lt;/banner-name&amp;gt; &amp;lt;banner-text&amp;gt;Ansible banner example&amp;lt;/banner-text&amp;gt; &amp;lt;/banner&amp;gt; &amp;lt;/banners&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5bd32d43be85449964ede2932e53e79f3e4e75" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;interface-configurations xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-ifmgr-cfg&quot;&amp;gt; &amp;lt;interface-configuration xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;active&amp;gt;act&amp;lt;/active&amp;gt; &amp;lt;interface-name&amp;gt;GigabitEthernet0/0/0/0&amp;lt;/interface-name&amp;gt; &amp;lt;description&amp;gt;test-interface-0&amp;lt;/description&amp;gt; &amp;lt;mtus&amp;gt;&amp;lt;mtu&amp;gt; &amp;lt;owner&amp;gt;GigabitEthernet&amp;lt;/owner&amp;gt; &amp;lt;mtu&amp;gt;512&amp;lt;/mtu&amp;gt; &amp;lt;/mtu&amp;gt;&amp;lt;/mtus&amp;gt; &amp;lt;ethernet xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-drivers-media-eth-cfg&quot;&amp;gt; &amp;lt;speed&amp;gt;100&amp;lt;/speed&amp;gt; &amp;lt;duplex&amp;gt;half&amp;lt;/duplex&amp;gt; &amp;lt;/ethernet&amp;gt; &amp;lt;/interface-configuration&amp;gt; &amp;lt;/interface-configurations&amp;gt;&amp;lt;/config&amp;gt;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dbbbc7f815bfe34525076d0405a706a867825b" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;ip-domain xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-ip-domain-cfg&quot;&amp;gt; &amp;lt;vrfs&amp;gt; &amp;lt;vrf&amp;gt; &amp;lt;vrf-name&amp;gt;default&amp;lt;/vrf-name&amp;gt; &amp;lt;lists&amp;gt; &amp;lt;list xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;order&amp;gt;0&amp;lt;/order&amp;gt; &amp;lt;list-name&amp;gt;redhat.com&amp;lt;/list-name&amp;gt; &amp;lt;/list&amp;gt; &amp;lt;/lists&amp;gt; &amp;lt;/vrf&amp;gt; &amp;lt;/vrfs&amp;gt; &amp;lt;/ip-domain&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f9ebcffc20847f216a35b894a8d514779b14b3" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;syslog xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-infra-syslog-cfg&quot;&amp;gt; &amp;lt;files&amp;gt; &amp;lt;file xc:operation=&quot;delete&quot;&amp;gt; &amp;lt;file-name&amp;gt;file1&amp;lt;/file-name&amp;gt; &amp;lt;file-log-attributes&amp;gt; &amp;lt;max-file-size&amp;gt;2097152&amp;lt;/max-file-size&amp;gt; &amp;lt;severity&amp;gt;2&amp;lt;/severity&amp;gt; &amp;lt;/file-log-attributes&amp;gt; &amp;lt;/file&amp;gt; &amp;lt;/files&amp;gt; &amp;lt;/syslog&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e3cf182ba55cf51a646c1ee467ee46ecaaf22c" translate="yes" xml:space="preserve">
          <source>['*.example.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0677c7a9e75fcfd3f26ac68e4f32acc5f4b498" translate="yes" xml:space="preserve">
          <source>['...', '...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7925ba7a9a32a281db06fdc3986b4d9574206b44" translate="yes" xml:space="preserve">
          <source>['/Common/bigip02.internal']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7613c7268d9587141e2a11a959956a2853dd29" translate="yes" xml:space="preserve">
          <source>['/Common/bigip1', '/Common/bigip2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d71278647e06f1b02c40d8fdfad7059422a8a9f" translate="yes" xml:space="preserve">
          <source>['/Common/cert1.crt', '/Common/cert2.crt']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c326b64200c791463fb1a4dc7ed13bf2c28bf6" translate="yes" xml:space="preserve">
          <source>['/Common/destination1', '/Common/destination2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d309b2db34ddd2b075335ae1a4ef2512599f2153" translate="yes" xml:space="preserve">
          <source>['/Common/device1', '/Common/device2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03cfd2d9ebca25fbebd386512521e39e5b7ac37" translate="yes" xml:space="preserve">
          <source>['/Common/foo_VS/']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e1b04aa5c2c2a1d7641a485c617572ac75dcb1" translate="yes" xml:space="preserve">
          <source>['/Common/global-network', '/Common/local-dos']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6745f63f6aa9e96afc4494c2b296e03047afa4f" translate="yes" xml:space="preserve">
          <source>['/Common/http', '/Common/gateway_icmp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20012a7a6ffc74183d70a9188dc1cb2302e20fa" translate="yes" xml:space="preserve">
          <source>['/Common/http']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec92e4214fb01fed98511817ab9f994c9195c34" translate="yes" xml:space="preserve">
          <source>['/Common/http-tunnel', '/Common/socks-tunnel']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6b90d0bd087551eb4426797796ed99d01599b8" translate="yes" xml:space="preserve">
          <source>['/Common/https_443', '/Common/icmp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44681aafb9aee553ceb8d87eed1c1da35a6ac2ea" translate="yes" xml:space="preserve">
          <source>['/Common/irule1', '/Common/irule2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9612361cf47d24bd609ae92129fa73e4cf1561" translate="yes" xml:space="preserve">
          <source>['/Common/list1', '/Common/list2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f79ee11b83baa9f37e0f22e3bc2bcd875db74ab" translate="yes" xml:space="preserve">
          <source>['/Common/monitor1', '/Common/monitor2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a177e1d73d060650f1ec5ab02daf401d9dbb4bc" translate="yes" xml:space="preserve">
          <source>['/Common/peer1', '/Common/peer2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7faab76464cc1bdf0174843229587d5b92143ad" translate="yes" xml:space="preserve">
          <source>['/Common/policy1', '/Common/policy2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a4c09cf402200408dcd9fe4c185efc90cace53" translate="yes" xml:space="preserve">
          <source>['/Common/profile1', '/Common/profile2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ac73f208d3bc0be5158a6f5f9a130582c7b0c6" translate="yes" xml:space="preserve">
          <source>['/Common/route1', '/Common/route2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313b844fceb247a6fef371e30b73d16761c6e833" translate="yes" xml:space="preserve">
          <source>['/Common/rule1', &quot;/Common/rule2'&quot;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30820fb40214423d08e12fdada650e5720f274cf" translate="yes" xml:space="preserve">
          <source>['/Common/rule1', '/Common/rule2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8852da6b7f8e425354f5f5662d9de540e4f365e7" translate="yes" xml:space="preserve">
          <source>['/Common/server1', '/Common/server2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5d36b344fcf1ca27b628d2cee7016383771cf4" translate="yes" xml:space="preserve">
          <source>['/Common/ssl_drldp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96adaf4a5465fd43476b62a77aabd14c8462e99c" translate="yes" xml:space="preserve">
          <source>['/Common/vlan1', '/Common/vlan2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f338e3a979267a9f9e18c23aecb363339e765b" translate="yes" xml:space="preserve">
          <source>['/Common/vlan5', '/Common/vlan6']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f399274ff3ac6eb0647f4b32907b31e9401613bb" translate="yes" xml:space="preserve">
          <source>['/Common/vs1', '/Common/vs2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889c51f1e6c677bfa4d3596754ad71bd8dc6e713" translate="yes" xml:space="preserve">
          <source>['/DC0/vm']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c30072abf56d6617fc005245ba7ef3fd33f278" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/basic', '../sshdgenkeys', 'log']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b42fd13870e76ef2ef618e1cad64f2827d8df3" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/basic', '../sshdgenkeys']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca26f65f01c52f217ed1b9c08f21378f7bbe7b35" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/server', '/etc/service-bundles/targets/sockets']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648b658c40fcbfb2a9886d192947050c91c0ce70" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/shutdown']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561db8c9c088e17d6eb79dc5437f07e87866711a" translate="yes" xml:space="preserve">
          <source>['/exclude.html', '/exclude2.html']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8234ac20fb9c46250beffcf3de406aea1609a64" translate="yes" xml:space="preserve">
          <source>['/foo.html']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17d7c36cfcb34156fa87ec7c3d753b77ffc4001" translate="yes" xml:space="preserve">
          <source>['/path/to/file.json', '/path/to/file.yaml']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c207e79fb5f50a4b5cd7327af0ec262d927d0db3" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGropup/providers/Microsoft.Network/virtualNet works/myVirtualNetwork']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c804125608027328d5be5a7c716aac25d4de62c3" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2676b2662135cdc6cbf9d2574f73262f02eae94" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/Microsoft.Network/VirtualNetworks/myVirtualNetwo rk/subnets/mySubnet']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2810bf3295e1456689cacb4d72c100af95884caf" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/bar']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd13ceabee7c22e32f21aba1568137b1b8c1813b" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/deadbeef']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec70c19ac1ea766cde12042194501b3f545badda" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/tmt/providers/Microsoft.Network/trafficManagerProfiles/tm049b1ae293/exter nalEndpoints/e2', '/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/tmt/providers/Microsoft.Network/trafficManagerProfiles/tm049b1ae293/exter nalEndpoints/e1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c31776a7c191caf13d9487c6f89bc67a7fc9066" translate="yes" xml:space="preserve">
          <source>['/testpathtwo/test2.js', '/testpathone/test1.css', '/testpaththree/test3.ss']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8311afb8a145f291e3e295fbad86a81bdde5af03" translate="yes" xml:space="preserve">
          <source>['/usr/local/opt/python@2/site-packages/', '/usr/lib/python/site-packages/', '/usr/lib/python/site-packages/']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa7920e74db7db3192dcbf87cc7e38a8d12882d" translate="yes" xml:space="preserve">
          <source>['0', '1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cec50dd0f8e9d349c36c2a28f6c97a13f845f5" translate="yes" xml:space="preserve">
          <source>['1', '2', '3', '4', '5', '20', '100']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bd2cbbe71562bd018fde2d80997daa91506f32" translate="yes" xml:space="preserve">
          <source>['1', '2', '3', '4', '5', '20']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cc866765fb1f61578945235891b25173884dfe" translate="yes" xml:space="preserve">
          <source>['1.1', '1.2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572c022ddf698a448a3be25a3932ba3c39273822" translate="yes" xml:space="preserve">
          <source>['1.1.1.1', '2.2.2.2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387e9c56e633c1b0bf31da319652ef89ee932dc8" translate="yes" xml:space="preserve">
          <source>['1.1.1.1-2.2.2.2', '3.3.3.3-4.4.4.4']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af220c40a3b33f83c37ea3754085145bb0c4240" translate="yes" xml:space="preserve">
          <source>['1.2', '1.3']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf774740d2064642f04ea6e5310cd812f418f7ef" translate="yes" xml:space="preserve">
          <source>['1.2.2.1', '4.5.5.4']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb89a7d5c1b4d4ef702b13284951a4f7ec42dd5b" translate="yes" xml:space="preserve">
          <source>['10.1.0.0/16', '172.100.0.0/16']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8111f48356bbaeaf6bef7c76a311f3aff353a3" translate="yes" xml:space="preserve">
          <source>['10.1.0.1', '...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ebf0dd4c23fee92b93a0c3684fb929bd12a707" translate="yes" xml:space="preserve">
          <source>['10GE1/0/22', 'port default vlan 20']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd5f504c27d9fb932940c03fdc54669f3cb6bf4" translate="yes" xml:space="preserve">
          <source>['127.0.0.0/8', 'foo.bar.com', '10.10.10.10']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234a4bc67319594fca9427447a4034b085a1f139" translate="yes" xml:space="preserve">
          <source>['127.0.0.1', '127.0.0.3']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caec83f0bd09a3ac4f97b594df93f002cb490a3d" translate="yes" xml:space="preserve">
          <source>['127.0.0.1', '172.17.0.1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9364f0e9a359cc1c552c0458ddc415a3e6bc492" translate="yes" xml:space="preserve">
          <source>['192.0.2.10', '172.17.12.10']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb2fe2975df99552f5d330fa9e10da8b0843408" translate="yes" xml:space="preserve">
          <source>['192.0.2.23', '192.0.2.42']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc41572a7190ba969d69f2246f2be7c4ff4e77f" translate="yes" xml:space="preserve">
          <source>['192.168.1.1', '192.168.1.2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcebd15fe35639755cdd1501eb23eb66fac4a4c" translate="yes" xml:space="preserve">
          <source>['400', '404']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fa018a1f7c13578c885599860b5660cdb87362" translate="yes" xml:space="preserve">
          <source>['400-404', '500', '501']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3999a8c7dd4f6b54710135d8ee7682510a1c4e" translate="yes" xml:space="preserve">
          <source>['47cec963-fcd2-482f-bdb6-24461b2d47b1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2355b6179a1e4a28be7d9983d0098c4960cd9c40" translate="yes" xml:space="preserve">
          <source>['5.6.7.8', '9.10.11.12']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed11640b136709b0ad451158516906cdf5dd9e4" translate="yes" xml:space="preserve">
          <source>['54321_kbps']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e171b723943be5317e668ea93becd94b13210f53" translate="yes" xml:space="preserve">
          <source>['8.9.10.11', '7.8.9.10']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9009819a25da0bcedb09569764b2a4826e95bd37" translate="yes" xml:space="preserve">
          <source>['80-100', '200-8080']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8efca76651a30ac95e16478c6d3e006c0fce5de" translate="yes" xml:space="preserve">
          <source>['ACCESS_KEY_ID', 'SECRET_ACCESS_KEY']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a4b43fce6695cc0eb1e79b52b82a034ab0c748" translate="yes" xml:space="preserve">
          <source>['App Mode (TMSH Only, No Root/Bash)', 'BIG-IP VE, Multicast Routing']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d99d1936f72c681cf3191eae2f492ddaedc352c" translate="yes" xml:space="preserve">
          <source>['AppHost', 'Casting', 'DateTime']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a407931de5b1294e9f86cb48a89e807e81754790" translate="yes" xml:space="preserve">
          <source>['BC05633694E675449136679A658281F17A191087']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec81e72934611bf8059e63b372719a14671e990" translate="yes" xml:space="preserve">
          <source>['C:\\temp\\file.txt', 'C:\\Windows\\update.log']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f853d458718f50148f43403e01a58078b4d58b0" translate="yes" xml:space="preserve">
          <source>['CA:TRUE', 'pathLenConstraint:0']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244b624ff7b30febc9479186ff812aaf4eb0b718" translate="yes" xml:space="preserve">
          <source>['CONNECT', 'DELETE', '...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db87ac1170954569acf6954ac5a5f59f9f9e6f82" translate="yes" xml:space="preserve">
          <source>['CREATE LANGUAGE &quot;acme&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a088c374d17a818e930e5ddabc3a801960a4f8" translate="yes" xml:space="preserve">
          <source>['CREATE SCHEMA &quot;acme&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fba8beb11aa3f7e53ab0b375d4ab0c25e67450" translate="yes" xml:space="preserve">
          <source>['CREATE SEQUENCE &quot;foo&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263b01d49f8b6a97c877a11f8731150b9218ca99" translate="yes" xml:space="preserve">
          <source>['CREATE TABLE &quot;test_table&quot; (id bigint)']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1e1b52c0a96c309d2a4ab7b9828efa0833948b" translate="yes" xml:space="preserve">
          <source>['CREATE USER &quot;alice&quot;', 'GRANT CONNECT ON DATABASE &quot;acme&quot; TO &quot;alice&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabd1ec06d69a21f0e98051e954e98f6d72765c6" translate="yes" xml:space="preserve">
          <source>['CREATING', 'ACTIVE']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb24544469ad401b68569ef0459f5309ddd8a984" translate="yes" xml:space="preserve">
          <source>['Critical Updates', 'Windows Server 2012 R2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7e02181fb8af5eba365e5d84d1d2f1e431d943" translate="yes" xml:space="preserve">
          <source>['DEFAULT']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f326c0bcdf65d5afd6531f0296d890e420f72488" translate="yes" xml:space="preserve">
          <source>['DNS Services (LAB)', 'PSM, VE']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7442939fed7cd7ab186128326312ef1d1ddaab4e" translate="yes" xml:space="preserve">
          <source>['DNS:www.ansible.com', 'DNS:m.ansible.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5081496c2b927277523d5e9b27f177c7fa2206e2" translate="yes" xml:space="preserve">
          <source>['DOMAIN\\TestGroup', 'NT AUTHORITY\\SYSTEM']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ffd9e8273a930f28fc0f155e1469b061a88d5f" translate="yes" xml:space="preserve">
          <source>['DOMAIN\\TestUser', 'SERVERNAME\\NewLocalAdmin']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78bbae9fdf7c7f04d6364ef65096fbf3c3eee13" translate="yes" xml:space="preserve">
          <source>['DROP EXTENSION &quot;acme&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20f149ce1c32b37468b436947f06fe53eaf9fec" translate="yes" xml:space="preserve">
          <source>['DROP PUBLICATION &quot;acme&quot; CASCADE']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eaa7a74d8e359b250ed903faa3c172ba4801e6b" translate="yes" xml:space="preserve">
          <source>['Decrypt', 'RetireGrant']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821705ddd193680052386544f712772b3864e867" translate="yes" xml:space="preserve">
          <source>['Default']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f873b188cca057e8dc3de7b2c7120946235f3644" translate="yes" xml:space="preserve">
          <source>['Domain Admins', 'Domain Users']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c30542c4523ac52ec93b33944418d8db453978" translate="yes" xml:space="preserve">
          <source>['E:\\', 'F:\\']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff213176581c71a0d31cb531e0fce119a56377b9" translate="yes" xml:space="preserve">
          <source>['ECDHE-RSA-AES256-GCM-SHA384', 'ECDHE-RSA-AES128-SHA']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fe7f0ccb20a5f36bb8d8990fe4533a672a6e90" translate="yes" xml:space="preserve">
          <source>['ExamplePolicy']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d191b22acf178e504b39898d7aa233197f7f333" translate="yes" xml:space="preserve">
          <source>['FooBar', 'client1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed8fd49bc960f7d8d94de652cdf276030e1f740" translate="yes" xml:space="preserve">
          <source>['GEO-NA', 'GEO-AS']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ad7e84612c7172d93ddc6cfa6c95be05110d44" translate="yes" xml:space="preserve">
          <source>['GRANT &quot;user_ro&quot; TO &quot;alice&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3981e9b4f38eec7e61547bd0c0a6dbaa23a598e" translate="yes" xml:space="preserve">
          <source>['Gathered facts for storage array. Array ID [1].', 'Gathered facts for web services proxy.']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dd936af84c9c48b700ebd12bd363b337740359" translate="yes" xml:space="preserve">
          <source>['HEAD', 'GET']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f313d0430186cee9b7042c7de2b88acd076a807" translate="yes" xml:space="preserve">
          <source>['Host']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadfc4de12d7c5215f2f395943c4f8451733b0ce" translate="yes" xml:space="preserve">
          <source>['HostA', 'HostB']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e6fa149218a3cdbee25f9d74878b49b778f321" translate="yes" xml:space="preserve">
          <source>['IP Intelligence, 3Yr, ...', 'PEM URL Filtering, 3Yr, ...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8a8a48ef59ec5a29b05d122de9c44039a5e3eb" translate="yes" xml:space="preserve">
          <source>['Message 1', 'Message 2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2718744c758010864eb09b7a9a05e26473ba2e9" translate="yes" xml:space="preserve">
          <source>['Microsoft.Compute/virtualMachines/read']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831806dfbe2fff42a0760a33bddf713afe8a029f" translate="yes" xml:space="preserve">
          <source>['Microsoft.Compute/virtualMachines/write']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a28a2a9fed1d2eaf0671438b771789ef0a17cd1" translate="yes" xml:space="preserve">
          <source>['Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5911d6d1a1d2e2be78db9c903f8218d774bafd0f" translate="yes" xml:space="preserve">
          <source>['Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d9da965aa09905f6005ec397e942e43f929b4a" translate="yes" xml:space="preserve">
          <source>['MyCookie1', 'MyCookie2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5bdc3fc5a3a51aa8fc78cee635924ffe702b0e" translate="yes" xml:space="preserve">
          <source>['MyNewLog', 'NewLogSource1', 'NewLogSource2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a292d0dc4d1d194215ec7c71fc7bdc1f2e20e80" translate="yes" xml:space="preserve">
          <source>['NT AUTHORITY\\SYSTEM', 'DOMAIN\\User']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fcf70822108b399956501a67a20e4a13e496a0" translate="yes" xml:space="preserve">
          <source>['New-SmbShare -Name share -Path C:\\temp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237568a656e12626821ff49141651b13f9cd2cbd" translate="yes" xml:space="preserve">
          <source>['NewLogSource2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb384d14f71a3e840a1151b3c7278e2be32199b6" translate="yes" xml:space="preserve">
          <source>['REASSIGN OWNED BY &quot;bob&quot; TO &quot;alice&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b49c60d6a033e190dbeeca31e3223eaa8c5f6f9" translate="yes" xml:space="preserve">
          <source>['REVOKE GRANT OPTION FOR INSERT ON TABLE &quot;books&quot; FROM &quot;reader&quot;;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962ad58c3f76d5b13a3582b9f5efa1d3944fb45e" translate="yes" xml:space="preserve">
          <source>['Russia', 'Germany']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c7de4cc43df0082a98c0ea3ccbc67af298cf00" translate="yes" xml:space="preserve">
          <source>['SERVERNAME\\Administrator', 'BUILTIN\\Administrators']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b647343e684f96d14a42a1c3f3b9b08e1b84135c" translate="yes" xml:space="preserve">
          <source>['SERVERNAME\\NewLocalAdmin', 'DOMAIN\\TestUser']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5d6b8200252b2196f36bf82ea71c43ac020e34" translate="yes" xml:space="preserve">
          <source>['SeNetworkLogonRight', 'SeInteractiveLogonRight', 'SeBatchLogonRight', 'SeRemoteInteractiveLogonRight']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23ef4cc5b93b2ccb202eef196f01017349941b4" translate="yes" xml:space="preserve">
          <source>['StackEvent AWS::CloudFormation::Stack stackname UPDATE_COMPLETE', 'StackEvent AWS::CloudFormation::Stack stackname UPDATE_COMPLETE_CLEANUP_IN_PROGRESS']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6c146ec0b78a749ed4bf0dfd6d7ae1fe2832d7" translate="yes" xml:space="preserve">
          <source>['TLSv1', 'TLSv1.1', 'TLSv1.2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae578c22bd69f82db119d56b45bc46af4d83f60" translate="yes" xml:space="preserve">
          <source>['Target desregistration is in progress']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa61a0a05af13bd876d421b80a36a85aaea70be8" translate="yes" xml:space="preserve">
          <source>['Target.Deregistration in progress']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6667d8ccd95e9f9af133e9b1a09696a48dfa9198" translate="yes" xml:space="preserve">
          <source>['Task 1', 'Task 2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b1d12fc95a631bc70afdd382621a46555cb059" translate="yes" xml:space="preserve">
          <source>['UC1TEST-SERVER1', 'UC1TEST-SERVER2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04030dca3756adb0d900b65d346ce8fa62565b84" translate="yes" xml:space="preserve">
          <source>['UC1TEST-SVR01', 'UC1TEST-SVR02']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28804533673676b91e88aad015e720c02bcbea9" translate="yes" xml:space="preserve">
          <source>['United States, United Kingdom']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bb4f3377c0a5c20bbdd06ec1e1a65c83b6f6b5" translate="yes" xml:space="preserve">
          <source>['UserName', 'GroupName']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288670ec162ae87b50a2e9acbdbdad8869452826" translate="yes" xml:space="preserve">
          <source>['access-list ACL-OUTSIDE extended permit tcp any any eq www']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd443a67f56127e4aa5616845b160b84d187905c" translate="yes" xml:space="preserve">
          <source>['accounting-scheme test1', 'accounting-mode hwtacacs', 'hwtacacs server template test2', 'hwtacacs enable']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7b7780ce94733688644981b7df36ca907dd548" translate="yes" xml:space="preserve">
          <source>['acl_policy_name', 'acl_policy_type']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14614ad37ae71d2a664d0ca6b6170ddcb245cdb3" translate="yes" xml:space="preserve">
          <source>['admin@example.com', 'postmaster@example.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8861ace0149c2eb9ae8ab9de1799d619bf811f43" translate="yes" xml:space="preserve">
          <source>['alias1.foo.com', '*.wildcard.domain']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a974ab60d26df762026f11078db75462561a51" translate="yes" xml:space="preserve">
          <source>['all:admin']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ee85ab5b7b473985f4b9b293149b4af54d2ee6" translate="yes" xml:space="preserve">
          <source>['always']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478f522dba85a215578cccd85e98a3976a24ef9c" translate="yes" xml:space="preserve">
          <source>['ansible', 'six']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4da0947c981e20f66f2e46a5782d38d3bcb6c27" translate="yes" xml:space="preserve">
          <source>['ansible']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d1e567c86a2ccbc9f29e20a762d9de1c4d9a6a" translate="yes" xml:space="preserve">
          <source>['ansible-mig-new-0k4y', 'ansible-mig-new-0zk5', 'ansible-mig-new-kp68']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d8a3401bb98e7f22044ce153c7d586e670b37d" translate="yes" xml:space="preserve">
          <source>['arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:targetgroup/target-group-host-hello/1a2b3c4d5e6f1a2b', 'arn:aws:elasticloadbalancing:ap-southeast-2:123456789012:targetgroup/target-group-path-world/abcd1234abcd1234']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb7574ff02780f5f7f61dc5a7e9d86ad2eba415" translate="yes" xml:space="preserve">
          <source>['arn:aws:elasticloadbalancing:eu-west-1:111111111111:targetgroup/target-group/deadbeefdeadbeef']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d81074f5842774bfdd6ea39ec4cde9d1686ee0" translate="yes" xml:space="preserve">
          <source>['aws/acm', 'aws/ebs']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c23708d64012e2907c8e13068bfd4780313340" translate="yes" xml:space="preserve">
          <source>['banner exec', 'this is my exec banner', 'that contains a multiline', 'string']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040bc6570c903b0660457a31d4b605c7b64c8bde" translate="yes" xml:space="preserve">
          <source>['banner login', 'this is my login banner', 'that contains a multiline', 'string', 'EOF']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8328a561e1e4725e0239795f69ad02a877ed5ca0" translate="yes" xml:space="preserve">
          <source>['banner login', 'this is my login banner', 'that contains a multiline', 'string']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173df6a02ce813efc97f153212115c83f3044dd7" translate="yes" xml:space="preserve">
          <source>['banner motd', 'this is my motd banner', 'that contains a multiline', 'string']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1452bc756bec49166b1c075b3744fff1ee739ffb" translate="yes" xml:space="preserve">
          <source>['banner pre-login', 'this is my pre-login banner', 'that contains a multiline', 'string']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca145877161a1570c65d5e4d5f0a89288b818996" translate="yes" xml:space="preserve">
          <source>['basic-constraints', 'extended-key-usage', '...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782130798ce6e8cabbb5b8c911761a144717639f" translate="yes" xml:space="preserve">
          <source>['basic-constraints', 'subject-alternative-name']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f2c00008494a3131bbfec43496dd98df31f816" translate="yes" xml:space="preserve">
          <source>['bfd atob', 'discriminator local 80', 'discriminator remote 800']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb145c83aadc66dedc157fbb75b557043c1189b" translate="yes" xml:space="preserve">
          <source>['bfd bfd_l2link bind peer-ip default-ip interface 10ge1/0/1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0458f141145c7d8477d6550aadbed1d43e9057ca" translate="yes" xml:space="preserve">
          <source>['bfd echo-interface loopback1', 'bfd slow-timer 2000']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01ab3817c6b772a6b772699c42b4115a4bd5432" translate="yes" xml:space="preserve">
          <source>['bfd', 'bgp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62a092300d7bbee63e2b29551da452df573d457" translate="yes" xml:space="preserve">
          <source>['bfd']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7131ecec1308a9607f5da0e1c0ad92b4fd8f2363" translate="yes" xml:space="preserve">
          <source>['bgp 100']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba6fbceea5ce1bbca39ddfb7e8262152443d4e9" translate="yes" xml:space="preserve">
          <source>['bgp 20', ' l2vpn-family evpn', ' peer 192.8.3.3 enable', ' peer 192.8.3.3 reflect-client', ' undo policy vpn-target']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e7ea64f6c6a401e128f4ff0baeecb97cffd473" translate="yes" xml:space="preserve">
          <source>['boto4', 'requests']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09a794dd1d73b5269eeb8669a102427eb55bc99" translate="yes" xml:space="preserve">
          <source>['bridge-domain 100', 'ip tunnel mode vxlan']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc2b023a336bff1bb59d38aba8b8d348a7c08f3" translate="yes" xml:space="preserve">
          <source>['bridge-domain 100', 'l2 binding vlan 99']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e66dcda14e216737f82f5229849f930455cc479" translate="yes" xml:space="preserve">
          <source>['bridge-domain 2', ' evpn', ' route-distinguisher 22:22', ' vpn-target 22:38 export-extcommunity', ' vpn-target 22:39 export-extcommunity', ' vpn-target 22:100 export-extcommunity', ' vpn-target 22:101 export-extcommunity', ' vpn-target 22:22 import-extcommunity', ' vpn-target 22:23 import-extcommunity', ' vpn-target 22:100 import-extcommunity', ' vpn-target 22:101 import-extcommunity']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bed818bfacb6d025588bd901843412627280ec3" translate="yes" xml:space="preserve">
          <source>['build.example.org', 'dev.example.org']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad75f970cf7fb1102413f8285c46ae58844e387" translate="yes" xml:space="preserve">
          <source>['ca-central-1a', 'ca-central-1b']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae08cdf55b3c7a86f5c725730e422a8d177bc1b7" translate="yes" xml:space="preserve">
          <source>['clientAuth']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308f0ca856641a6f86e8396e1f65e1a3be5b93da" translate="yes" xml:space="preserve">
          <source>['command 1', 'command 2', 'command 3']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a6d3347bb38f77b17b5be621516984e394806c" translate="yes" xml:space="preserve">
          <source>['config system name &quot;sros01&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519bd2e7010d7facfde3d42204d6425834ad8754" translate="yes" xml:space="preserve">
          <source>['configure maintenance profile maintenance-mode', 'router eigrp 11', 'isolate']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbd69aef17e55cde53f824dcec7be2c66736c98" translate="yes" xml:space="preserve">
          <source>['container_labels', 'replicas']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9d99cd29cd587afce9ae490bbc0167b1a4dd6b" translate="yes" xml:space="preserve">
          <source>['create vlan &quot;foo&quot;', 'configure snmp sysName &quot;x620-red&quot;']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322a594fc97f0cac361a79081e05d27655343d33" translate="yes" xml:space="preserve">
          <source>['ded9c4d5-0dcd-4837-b1d8-af7398511e33', '36b72549-14ed-4b5f-94cb-6213fecacc02']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05b213c6ec1e67028166a68d46a94a22d38f25f" translate="yes" xml:space="preserve">
          <source>['default', 'FOO', 'BAR']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f3f608e569c599d780eccb197cf52e082115df" translate="yes" xml:space="preserve">
          <source>['dfs-group 1', 'source ip 6.6.6.6', 'active-active-gateway', 'peer 7.7.7.7']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3af451fcccd88559d227a3f8b231a03724bcc4" translate="yes" xml:space="preserve">
          <source>['digitalSignature', 'keyAgreement']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1e0a2df49726392496250607472578b83c662c" translate="yes" xml:space="preserve">
          <source>['dldp enable', 'dldp compatible-mode enable', 'dldp compatible-mode local-mac aa-aa-aa', 'dldp reset']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ae7c311d1c98d7de7ec2c88f3cb5b0318ac11e" translate="yes" xml:space="preserve">
          <source>['dldp enable', 'dldp work-mode normal', 'dldp interval 12', 'dldp reset']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650548c26fb8f80edc21cba9c0a8bf4062aa61ce" translate="yes" xml:space="preserve">
          <source>['eastus', 'westus']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260c17a80e5445427c62df0f16a5ba315baa9eb8" translate="yes" xml:space="preserve">
          <source>['ecdsa-sha2-nistp256 SHA256:XXXX', '...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085d32439f084def5d51434a859fe2c878859cfa" translate="yes" xml:space="preserve">
          <source>['ecdsa-sha2-nistp256 XXXXX', '...']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc77e473a31b7a6624df76d508cee8ecd4f0d0b" translate="yes" xml:space="preserve">
          <source>['echo', 'hello']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21cf3c02d044593d2bd68a8b9d1b7c5f8729994" translate="yes" xml:space="preserve">
          <source>['eco']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8e1c67d83efeef1238650ff49249788234a3bc" translate="yes" xml:space="preserve">
          <source>['elb-webapp-prod']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff6dcabbfe3f42d5d828b49552b35aaa88a91a6" translate="yes" xml:space="preserve">
          <source>['eth0', 'lo']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bb538aa5ca5f19657ae9e98c034ab2604877f3" translate="yes" xml:space="preserve">
          <source>['evn bgp', 'source-address 6.6.6.6', 'peer 7.7.7.7']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ae2900508c47bf6d16068dfec651473100a6a9" translate="yes" xml:space="preserve">
          <source>['evpn', 'vni 6000 l2', 'route-target import 5001:10']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bb1788bbf5c545f1bd1af76d99fc67b0642686" translate="yes" xml:space="preserve">
          <source>['evpn-overlay enable']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cebd005f5ecf6eb4e74759261deaa7e9386472f" translate="yes" xml:space="preserve">
          <source>['f600d-21ae3-5592b-249e0-cc341', '143cc-0e942-b2955-3ea12-d006f']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49debeda9ac8aa85adeea9567eab51982f34ff64" translate="yes" xml:space="preserve">
          <source>['fabric forwarding anycast-gateway-mac 000B.000B.000B']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb08824d740663d6f5fbd6369419e1e4519e3df8" translate="yes" xml:space="preserve">
          <source>['feature lldp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fa972b0f22531dcc84767657d6449cbd6d9d92" translate="yes" xml:space="preserve">
          <source>['fillfactor=100', 'autovacuum_analyze_threshold=1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f57360cdfff350bf673d7d332f99daed481210" translate="yes" xml:space="preserve">
          <source>['fillfactor=90']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8082874130892b92381b7f5b1a4577a3334e28" translate="yes" xml:space="preserve">
          <source>['foo', 'bar']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fa4a13e9f9d4fa0d3e9258ca69fac2563933dd" translate="yes" xml:space="preserve">
          <source>['foo', 'spec-label']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68681ff7f35ecbac8e1c075ae5feff2832ac7013" translate="yes" xml:space="preserve">
          <source>['foo']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ab8ecbef3e43d2e89a422619dace2371efaf8e" translate="yes" xml:space="preserve">
          <source>['foo.bar.com', 'baz.cool.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02f913972a808d0850cb723098025c8fae9d4e3" translate="yes" xml:space="preserve">
          <source>['foobar.com', 'bazbar.org']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aad06895dc7e82c3e20376f33ac4afc342db992" translate="yes" xml:space="preserve">
          <source>['fooparam']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f895570ffab9bbc92a79c531067aa5f58048ab" translate="yes" xml:space="preserve">
          <source>['forwarding']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf8e740360d5f2f4e801c836707bf32ce08b381" translate="yes" xml:space="preserve">
          <source>['get', 'create']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9029676cd0e11d2584eecdc053fa7d4260349c" translate="yes" xml:space="preserve">
          <source>['get', 'import']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9150e1c83fff4ca990a86575eb704e5778700d2f" translate="yes" xml:space="preserve">
          <source>['google.com', 'mit.edu']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32acc5d6604cf332aa37bc083dfa91a61121bd5e" translate="yes" xml:space="preserve">
          <source>['healthy', 'draining', 'initial', 'unhealthy', 'unused', 'unavailable']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e031f83f36c22d6ee3b8398eb4f5ab6282a06a80" translate="yes" xml:space="preserve">
          <source>['hostname cnos01', 'ip domain-name test.example.com vrf default']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe745f79dc713ee5069aeed1ea1e60fd19c2998" translate="yes" xml:space="preserve">
          <source>['hostname eos01', 'ip domain-name test.example.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b6e615df3d14b5ef44b0292e746e30002453b8" translate="yes" xml:space="preserve">
          <source>['hostname foo', 'router bgp 1', 'bgp router-id 1.1.1.1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2357c1d5512c772b73b32fad24034332858474" translate="yes" xml:space="preserve">
          <source>['hostname foo', 'router bgp 1', 'router-id 1.1.1.1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d98bc107935e790237aa2c2a0660aa980c1098" translate="yes" xml:space="preserve">
          <source>['hostname foo', 'router ospf 1', 'router-id 1.1.1.1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa280d6eefaab147eb0c22bde4df5c6ee2ff853" translate="yes" xml:space="preserve">
          <source>['hostname foo', 'router ospf 1', 'router-id 192.0.2.1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b440ffb2f33f42de3b4eec5cb2b317ccf2075bd7" translate="yes" xml:space="preserve">
          <source>['hostname foo', 'vlan 1', 'name default']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222a9e10c498fc4de6bfb6cdc99e3321b0ca2744" translate="yes" xml:space="preserve">
          <source>['hostname icx', 'ip domain name test.example.com', 'radius-server host 172.16.10.12 auth-port 2083 acct-port 1850 default key abc dot1x mac-auth', 'tacacs-server host 10.2.3.4 auth-port 4058 authorization-only key xyz']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d925787d01dcbdaee2221744a2d9be5ef36b126a" translate="yes" xml:space="preserve">
          <source>['hostname ios01', 'ip domain name test.example.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d38e304ecf6f5dde8c3bf07437b191c7e2670a4" translate="yes" xml:space="preserve">
          <source>['hostname iosxr01', 'ip domain-name test.example.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd40456df8b6f2ff7b1d40d0853301af3feaa0a" translate="yes" xml:space="preserve">
          <source>['hostname nxos01', 'ip domain-name test.example.com']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d19135d949b8e02c32d3431f94faf656f49f4e" translate="yes" xml:space="preserve">
          <source>['hostname switch01', 'interface Ethernet1', 'no shutdown']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e90deb26890a10e512238811e5ea35650533668" translate="yes" xml:space="preserve">
          <source>['http']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfb94a52647e532ed5858110f8768b97028ece6" translate="yes" xml:space="preserve">
          <source>['https://testvm104519.blob.core.windows.net/vhds/testvm10.vhd']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73c6817d0316486be4bdf104a99cb18dbff4e5f" translate="yes" xml:space="preserve">
          <source>['hwtacacs server template test', 'hwtacacs server authorization 10.135.182.157 vpn-instance test_vpn public-net']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a758c550e92abe377eae47c9b9b88a55ee2053" translate="yes" xml:space="preserve">
          <source>['i-0123456789012']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfd8d9326902c772a5f864518e2edc11a7919eb" translate="yes" xml:space="preserve">
          <source>['i-12345er', 'i-3245fs']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c9dacb0d3c01a5e90fa7fc0095aa990916c4a6" translate="yes" xml:space="preserve">
          <source>['i-deadbeef', '1.2.3.4']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf522c08bc4dd58d8ee080a81485f1b3cebf0b4" translate="yes" xml:space="preserve">
          <source>['icmp', 'tcp_echo']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b485ebd7cf63cd118d81ce62cc82491bbbe3ce" translate="yes" xml:space="preserve">
          <source>['igmp:0', 'tcp:22', 'udp:53']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd596a6e5579e792821c5eceb719d40f98c302a6" translate="yes" xml:space="preserve">
          <source>['immutable', 'extent']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb7fc047a574c5d37a2b1b00f4dbde94f7df49f" translate="yes" xml:space="preserve">
          <source>['info-center loghost domain aaa level alert port 100 facility local4 channel 1 localtime transport tcp']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68788ce3a79cea2c808e33ec9e3dea7f1e3c0fea" translate="yes" xml:space="preserve">
          <source>['info-center timestamp debugging boot']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d671468d1fb2e32bd07132cd229e0c973fcfcc1d" translate="yes" xml:space="preserve">
          <source>['info-center timestamp log date precision-time tenth-second']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ac4d5a843a1aac385664909d85ed2962b8033" translate="yes" xml:space="preserve">
          <source>['info-center trapbuffer', 'info-center trapbuffer size 768']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e45990f4fb806c89ff7ecf2b31ae737ab46d50d" translate="yes" xml:space="preserve">
          <source>['install add bootflash:nxos.CSCuz65185-n9k_EOR-1.0.0-7.0.3.I2.2d.lib32_n9000.rpm', 'install activate bootflash:nxos.CSCuz65185-n9k_EOR-1.0.0-7.0.3.I2.2d.lib32_n9000.rpm force', 'install commit bootflash:nxos.CSCuz65185-n9k_EOR-1.0.0-7.0.3.I2.2d.lib32_n9000.rpm']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb36004d693fe4f76b1f58cadbaf57bb7090426" translate="yes" xml:space="preserve">
          <source>['install add bootflash:nxos.sample-n9k_ALL-1.0.0-7.0.3.I7.3.lib32_n9000.rpm forced', 'install activate nxos.sample-n9k_ALL-1.0.0-7.0.3.I7.3.lib32_n9000 forced', 'install commit nxos.sample-n9k_ALL-1.0.0-7.0.3.I7.3.lib32_n9000']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4eb0d60d76e707d2d8cf34ba698d5d54b5aad75" translate="yes" xml:space="preserve">
          <source>['int1', 'int2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702c57daa643730d42be21949259b0a0b7eaf9f3" translate="yes" xml:space="preserve">
          <source>['interface 10GE1/0/10', 'shutdown']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cc87d05c3a45d5e95c6f78207b1dfaf97f70df" translate="yes" xml:space="preserve">
          <source>['interface 10GE1/0/22', 'ip address 20.20.20.20 24']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5726d6601e7003dc32eb7e117730fef68e56d956" translate="yes" xml:space="preserve">
          <source>['interface 10GE1/0/30', 'ospf enable 1 area 0.0.0.100', 'ospf cost 100']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d636bcd98f7794f5f510b011535a3804535669" translate="yes" xml:space="preserve">
          <source>['interface 10ge1/0/2', 'netstream record test vxlan inner-ip']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f0c9a35eced6707dd7fc2fedc93409da2c7718" translate="yes" xml:space="preserve">
          <source>['interface 20', 'name test-interface']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7188551062c0211e658639d1548464b32f2f7b34" translate="yes" xml:space="preserve">
          <source>['interface 40GE1/0/23', 'mtu 1700', 'jumboframe enable 9000 8000']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce01c829bb732832b10df53e79f5d013a0e5deca" translate="yes" xml:space="preserve">
          <source>['interface 40ge2/0/1', 'traffic-filter acl 2000 outbound']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888e0d56f394a33219ce383d79e44cc33ca6e6fd" translate="yes" xml:space="preserve">
          <source>['interface ANYCAST-P2P-2', 'neighbor 20.20.20.21 remote-as 65000', 'neighbor 20.20.20.21 fall-over bfd']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58bc0922782ef43a046da8cab8a8bfb5596b08a" translate="yes" xml:space="preserve">
          <source>['interface Bundle-Ether10', 'bundle minimum-active links 2', 'bundle load-balancing hash src-ip']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75f5bdaa384b91937be1a0b25c4f0eef73f75a2" translate="yes" xml:space="preserve">
          <source>['interface Bundle-Ether10', 'lacp churn logging partner', 'lacp period 150']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df78ef97efc420a598326879b1e54b70b317753f" translate="yes" xml:space="preserve">
          <source>['interface Eth-Trunk 100', 'mode lacp-static', 'interface 10GE1/0/25', 'eth-trunk 100']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a528390d57a0d552c4bffb42f75e94ea214b09" translate="yes" xml:space="preserve">
          <source>['interface Ethernet 0/2', 'description test-interface', 'mtu 1548']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bfce066dea072c5efc63202c4aa215eae7cc50" translate="yes" xml:space="preserve">
          <source>['interface Ethernet 0/2', 'ip address 192.168.0.1/24', 'ipv6 address fd5d:12c9:2201:1::1/64']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3c46a4437923b64e4552d711a1cc89c6e31664" translate="yes" xml:space="preserve">
          <source>['interface Ethernet 0/5', 'switchport access vlan 20']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bca0ebe908277e73d81dcd4fd84e9a6a5dc433" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1', 'lacp rate fast']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c16d581074a3752c3ee45ed3a7bacf4e5640ee4" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1', 'no lldp transmit']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6f24dfda95f53bc9d6107d0f0fc50131843687" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/1', 'mtu 1800']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887de7f9237522eeacfeb8a02d385b171c97052c" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/1', 'no bfd', 'no bfd echo']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e587c029e6290d9c3aed98cb0cb45082096efd" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/2', 'ip address 192.168.0.1/2']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d63e8c2d53e606ce028d0ae60523b76d06fc648" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/32', 'ip igmp startup-query-count 30', 'ip igmp static-oif 238.2.2.6', 'ip igmp static-oif 238.2.2.5 source 192.168.0.1']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f30ebb42ee240b05cf43233b4c8c5b9eb692d2" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/32', 'ip router ospf 1 area 0.0.0.1', 'ip ospf bfd disable']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099cfbb91fe6750fd40e8a98caade5e8f7fa19f7" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/33', 'description test-interface', 'duplex half', 'mtu 512']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d46865972feb7b2caf5c4eca939063c5c5a199a" translate="yes" xml:space="preserve">
          <source>['interface Ethernet1/33', 'ip address 10.241.107.1 255.255.255.0', 'ipv6 address fd5d:12c9:2201:1::1/64']</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
